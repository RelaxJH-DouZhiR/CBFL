dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1665,            start = str.length() + start; // remember start is negative,2,0,0,1,2,0,4,0,0,7,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1669,        if (end > str.length()) {,2,1,0,2,5,0,4,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1670,            end = str.length();,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1674,        if (start > end) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1675,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1678,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1679,            start = 0;,0,0,0,0,0,0,8,0,0,8,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1681,        if (end < 0) {,2,0,0,1,3,0,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1682,            end = 0;,14,0,0,0,0,0,0,2,0,18,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1685,"        return str.substring(start, end);",2,0,0,1,2,1,14,0,0,17,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1711,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1712,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1714,        if (len < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1715,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1717,        if (str.length() <= len) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1718,            return str;,4,0,0,0,0,1,0,0,0,4,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1720,"        return str.substring(0, len);",2,1,0,1,2,1,6,0,0,10,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1744,        if (str == null) {,8,2,1,1,3,0,0,0,0,12,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1745,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1747,        if (len < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1748,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1750,        if (str.length() <= len) {,2,1,0,2,5,0,4,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1751,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1753,        return str.substring(str.length() - len);,0,0,0,2,4,1,0,0,0,7,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1781,        if (str == null) {,2,0,0,1,3,0,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1782,            return null;,4,2,0,0,0,1,4,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1784,        if (len < 0 || pos > str.length()) {,4,3,0,2,5,0,4,0,0,11,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1785,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1787,        if (pos < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1788,            pos = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1790,        if (str.length() <= (pos + len)) {,0,0,0,3,7,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1791,            return str.substring(pos);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1793,"        return str.substring(pos, pos + len);",4,1,0,1,2,1,6,0,0,11,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1826,        if (isEmpty(str) || separator == null) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1827,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1829,        if (separator.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1830,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1832,        int pos = str.indexOf(separator);,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1833,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1834,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1836,"        return str.substring(0, pos);",2,1,0,1,2,1,6,0,0,9,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1868,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1869,            return str;,4,1,0,0,0,1,8,0,0,13,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1871,        if (separator == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1872,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1874,        int pos = str.indexOf(separator);,2,0,0,1,2,0,6,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1875,        if (pos == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1876,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1878,        return str.substring(pos + separator.length());,4,1,0,2,4,1,4,0,0,10,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1909,        if (isEmpty(str) || isEmpty(separator)) {,2,1,0,3,7,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1910,            return str;,4,0,0,0,0,1,6,0,0,10,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1912,        int pos = str.lastIndexOf(separator);,2,0,0,1,2,0,6,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1913,        if (pos == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1914,            return str;,2,0,0,0,0,1,12,0,0,16,11,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1916,"        return str.substring(0, pos);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1949,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1950,            return str;,10,6,0,0,0,1,0,0,0,16,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1952,        if (isEmpty(separator)) {,0,0,0,2,5,0,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1953,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1955,        int pos = str.lastIndexOf(separator);,4,0,0,1,2,0,12,4,0,21,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1956,        if (pos == -1 || pos == (str.length() - separator.length())) {,2,0,0,4,9,0,0,0,0,2,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1957,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1959,        return str.substring(pos + separator.length());,0,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,1986,"        return substringBetween(str, tag, tag);",0,0,0,1,2,1,8,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2017,        if (str == null || open == null || close == null) {,2,0,0,1,3,0,8,0,0,11,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2018,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2020,        int start = str.indexOf(open);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2021,        if (start != -1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2022,"            int end = str.indexOf(close, start + open.length());",4,1,0,2,4,0,10,0,0,15,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2023,            if (end != -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2024,"                return str.substring(start + open.length(), end);",4,1,0,2,4,1,10,0,0,15,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2027,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2053,        if (str == null || isEmpty(open) || isEmpty(close)) {,2,3,0,3,7,0,8,0,0,15,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2054,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2056,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2057,        if (strLen == 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2058,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2060,        int closeLen = close.length();,2,0,0,1,2,0,4,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2061,        int openLen = open.length();,2,1,0,1,2,0,0,0,0,3,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2062,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2063,        int pos = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2064,        while (pos < (strLen - closeLen)) {,0,0,0,2,5,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2065,"            int start = str.indexOf(open, pos);",0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2066,            if (start < 0) {,4,1,0,1,3,0,4,0,0,10,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2067,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2069,            start += openLen;,4,1,0,0,0,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2070,"            int end = str.indexOf(close, start);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2071,            if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2072,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2074,"            list.add(str.substring(start, end));",0,0,0,2,4,0,0,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2075,            pos = end + closeLen;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2076,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2077,        if (list.isEmpty()) {,2,0,0,2,5,0,4,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2078,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2080,        return list.toArray(new String [list.size()]);,0,0,0,3,6,1,16,6,0,22,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2111,"        return split(str, null, -1);",2,0,0,1,2,1,4,0,0,8,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2139,"        return splitWorker(str, separatorChar, false);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2168,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,1,2,1,6,0,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2202,"        return splitWorker(str, separatorChars, max, false);",0,0,0,1,2,1,8,0,0,9,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2229,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0,0,0,1,2,1,12,0,0,14,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2260,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,1,2,1,8,0,0,9,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2289,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",10,2,0,1,2,1,10,2,0,26,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2322,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0,0,0,1,2,1,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2342,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2343,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2346,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2348,        if (len == 0) {,6,1,0,1,3,0,6,0,0,13,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2349,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2352,        if ((separator == null) || (EMPTY.equals(separator))) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2354,"            return splitWorker(str, null, max, preserveAllTokens);",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2357,        int separatorLength = separator.length();,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2359,        ArrayList<String> substrings = new ArrayList<String>();,4,0,0,1,2,0,0,8,0,12,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2360,        int numberOfSubstrings = 0;,6,0,0,0,0,0,0,0,0,7,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2361,        int beg = 0;,4,0,1,0,0,1,0,4,0,11,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2362,        int end = 0;,4,2,0,0,0,0,12,0,0,19,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2363,        while (end < len) {,4,1,0,1,3,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2364,"            end = str.indexOf(separator, beg);",4,0,0,1,2,0,8,0,0,15,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2366,            if (end > -1) {,2,1,0,1,3,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2367,                if (end > beg) {,4,1,0,1,3,0,0,0,0,5,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2368,                    numberOfSubstrings += 1;,4,0,1,0,0,0,0,0,0,10,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2370,                    if (numberOfSubstrings == max) {,4,1,0,1,3,0,0,0,0,5,32,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2371,                        end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2372,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2376,"                        substrings.add(str.substring(beg, end));",0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2381,                        beg = end + separatorLength;,2,0,0,0,0,0,12,0,0,15,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2385,                    if (preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2386,                        numberOfSubstrings += 1;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2387,                        if (numberOfSubstrings == max) {,4,1,0,1,3,0,0,0,0,5,32,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2388,                            end = len;,6,0,0,0,0,0,0,0,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2389,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2391,                            substrings.add(EMPTY);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2394,                    beg = end + separatorLength;,6,1,0,0,0,0,0,0,0,8,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2398,                substrings.add(str.substring(beg));,2,1,0,2,4,0,10,0,0,13,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2399,                end = len;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2403,        return substrings.toArray(new String[substrings.size()]);,0,0,0,3,6,1,8,2,0,10,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2432,"        return splitWorker(str, null, -1, true);",0,0,0,1,2,1,4,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2468,"        return splitWorker(str, separatorChar, true);",0,0,0,1,2,1,22,0,0,27,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2486,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2487,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2489,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2490,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2491,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2493,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2494,"        int i = 0, start = 0;",4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2495,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2496,        boolean lastMatch = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2497,        while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2498,            if (str.charAt(i) == separatorChar) {,2,1,0,2,5,0,6,0,0,10,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2499,                if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2500,"                    list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2501,                    match = false;,8,1,0,0,0,0,0,0,0,12,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2502,                    lastMatch = true;,2,1,0,0,0,0,4,0,0,9,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2504,                start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2505,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2507,            lastMatch = false;,2,0,0,0,0,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2508,            match = true;,4,0,0,0,0,0,16,0,0,22,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2509,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2511,        if (match || (preserveAllTokens && lastMatch)) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2512,"            list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2514,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,8,2,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2551,"        return splitWorker(str, separatorChars, -1, true);",0,0,0,1,2,1,6,0,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2591,"        return splitWorker(str, separatorChars, max, true);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2613,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2614,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2616,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2617,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2618,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2620,        List<String> list = new ArrayList<String>();,4,1,0,1,2,0,0,8,0,13,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2621,        int sizePlus1 = 1;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2622,"        int i = 0, start = 0;",4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2623,        boolean match = false;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2624,        boolean lastMatch = false;,4,0,0,0,0,0,0,0,0,5,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2625,        if (separatorChars == null) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2627,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2628,                if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2629,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,4,0,0,10,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2630,                        lastMatch = true;,12,1,0,0,0,0,0,0,0,16,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2631,                        if (sizePlus1++ == max) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2632,                            i = len;,2,1,0,0,0,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2633,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2635,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2636,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2638,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2639,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2641,                lastMatch = false;,4,0,0,0,0,0,0,0,0,6,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2642,                match = true;,6,3,0,0,0,0,0,0,0,11,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2643,                i++;,4,0,0,0,0,0,6,0,0,12,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2645,        } else if (separatorChars.length() == 1) {,0,0,0,2,6,0,0,0,0,8,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2647,            char sep = separatorChars.charAt(0);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2648,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2649,                if (str.charAt(i) == sep) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2650,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2651,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2652,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,0,0,0,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2653,                            i = len;,4,0,0,0,0,0,8,0,0,14,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2654,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2656,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2657,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2659,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2660,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2662,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2663,                match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2664,                i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2666,        } else {,2,1,0,0,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2668,            while (i < len) {,8,2,0,1,3,0,0,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2669,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,4,1,0,3,7,0,10,0,0,15,49,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2670,                    if (match || preserveAllTokens) {,12,1,0,1,3,0,4,0,0,18,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2671,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2672,                        if (sizePlus1++ == max) {,18,3,0,1,3,0,0,0,0,24,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2673,                            i = len;,0,1,0,0,0,0,14,0,0,19,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2674,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2676,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2677,                        match = false;,6,1,0,0,0,0,4,0,0,14,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2679,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2680,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2682,                lastMatch = false;,4,4,0,0,0,0,8,0,0,18,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2683,                match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2684,                i++;,4,1,0,0,0,0,0,0,0,6,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2687,        if (match || (preserveAllTokens && lastMatch)) {,8,2,0,2,5,0,0,2,0,13,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2688,"            list.add(str.substring(start, i));",6,2,0,2,4,0,4,0,0,12,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2690,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,8,2,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2713,"        return splitByCharacterType(str, false);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2741,"        return splitByCharacterType(str, true);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2759,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2760,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2762,        if (str.length() == 0) {,2,0,0,2,5,0,4,2,0,8,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2763,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,6,0,0,6,37,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2765,        char[] c = str.toCharArray();,2,0,0,2,4,0,10,0,0,12,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2766,        List<String> list = new ArrayList<String>();,4,1,0,1,2,0,0,8,0,13,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2767,        int tokenStart = 0;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2768,        int currentType = Character.getType(c[tokenStart]);,2,0,1,2,4,0,4,0,0,10,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2769,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2770,            int type = Character.getType(c[pos]);,0,0,0,2,4,0,0,0,0,6,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2771,            if (type == currentType) {,12,2,0,1,3,0,0,0,0,15,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2772,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2774,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,0,0,0,1,3,0,0,0,0,4,99,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2775,                int newTokenStart = pos - 1;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2776,                if (newTokenStart != tokenStart) {,4,1,0,1,3,0,0,0,0,5,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2777,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2778,                    tokenStart = newTokenStart;,6,1,0,0,0,0,0,0,0,8,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2780,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2781,"                list.add(new String(c, tokenStart, pos - tokenStart));",0,0,0,2,4,0,0,0,0,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2782,                tokenStart = pos;,4,0,0,0,0,0,0,0,0,5,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2784,            currentType = type;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2786,"        list.add(new String(c, tokenStart, c.length - tokenStart));",14,1,0,2,4,0,4,2,0,21,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2787,        return list.toArray(new String[list.size()]);,6,3,0,3,6,1,0,0,0,9,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2813,"        return join(array, null);",0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2839,        if (array == null) {,6,1,0,1,3,0,0,0,0,7,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2840,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2843,"        return join(array, separator, 0, array.length);",2,1,0,1,2,1,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2873,        if (array == null) {,2,6,0,1,3,0,16,0,0,24,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2874,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2876,        int bufSize = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,8,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2877,        if (bufSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2878,            return EMPTY;,4,1,0,0,0,1,0,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2881,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,2,2,1,6,12,0,4,0,0,17,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2882,        StringBuilder buf = new StringBuilder(bufSize);,4,0,0,1,2,0,0,4,0,9,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2884,        for (int i = startIndex; i < endIndex; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2885,            if (i > startIndex) {,4,1,0,1,3,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2886,                buf.append(separator);,0,0,0,1,2,0,6,0,0,6,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2888,            if (array[i] != null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2889,                buf.append(array[i]);,0,3,1,2,4,0,14,2,0,25,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2892,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2920,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2921,            return null;,8,5,0,0,0,1,8,0,0,21,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2923,"        return join(array, separator, 0, array.length);",0,0,0,1,2,1,6,0,0,7,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2954,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2955,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2957,        if (separator == null) {,6,1,0,1,3,0,0,0,0,8,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2958,            separator = EMPTY;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2963,        int bufSize = (endIndex - startIndex);,0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2964,        if (bufSize <= 0) {,6,2,0,1,3,0,4,4,0,16,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2965,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2968,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),0,0,0,5,11,0,0,0,0,16,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2971,        StringBuilder buf = new StringBuilder(bufSize);,10,1,0,1,2,0,0,4,0,15,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2973,        for (int i = startIndex; i < endIndex; i++) {,14,2,0,1,3,0,0,0,0,17,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2974,            if (i > startIndex) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2975,                buf.append(separator);,0,0,0,1,2,0,6,0,0,6,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2977,            if (array[i] != null) {,6,2,0,2,5,0,0,0,0,8,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2978,                buf.append(array[i]);,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,2981,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3001,        if (iterator == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3002,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3004,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3005,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3007,        Object first = iterator.next();,6,1,0,1,2,1,16,2,0,26,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3008,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3009,            return ObjectUtils.toString(first);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3013,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",0,0,0,1,2,0,0,0,0,3,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3014,        if (first != null) {,2,1,0,1,3,0,6,0,0,9,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3015,            buf.append(first);,4,1,0,1,2,0,6,0,0,11,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3018,        while (iterator.hasNext()) {,2,1,0,2,5,0,4,0,0,7,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3019,            buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3020,            Object obj = iterator.next();,4,0,0,1,2,0,4,2,0,10,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3021,            if (obj != null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3022,                buf.append(obj);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3024,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3026,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3045,        if (iterator == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3046,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3048,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3049,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3051,        Object first = iterator.next();,6,1,0,1,2,0,4,2,0,13,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3052,        if (!iterator.hasNext()) {,10,1,0,2,5,0,4,0,0,17,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3053,            return ObjectUtils.toString(first);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3057,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",0,0,0,1,2,0,0,0,0,3,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3058,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3059,            buf.append(first);,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3062,        while (iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3063,            if (separator != null) {,2,1,0,1,3,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3064,                buf.append(separator);,0,0,0,1,2,0,6,0,0,6,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3066,            Object obj = iterator.next();,2,0,0,1,2,0,8,2,0,12,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3067,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3068,                buf.append(obj);,4,0,0,1,2,0,12,0,0,16,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3070,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3071,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3089,        if (iterable == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3090,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3092,"        return join(iterable.iterator(), separator);",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3110,        if (iterable == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3111,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3113,"        return join(iterable.iterator(), separator);",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3133,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3134,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3136,        int sz = str.length();,2,0,0,1,2,0,0,0,0,3,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3137,        char[] chs = new char[sz];,4,1,1,2,4,0,0,2,0,10,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3138,        int count = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3139,        for (int i = 0; i < sz; i++) {,10,1,1,1,3,0,0,2,0,18,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3140,            if (!Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,11,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3141,                chs[count++] = str.charAt(i);,2,0,1,2,4,0,6,0,0,12,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3144,        if (count == sz) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3145,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3147,"        return new String(chs, 0, count);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3177,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3178,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3180,        if (str.startsWith(remove)){,2,1,0,2,5,0,6,0,0,9,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3181,            return str.substring(remove.length());,0,0,0,2,4,1,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3183,        return str;,6,3,0,0,0,1,0,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3212,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3213,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3215,"        if (startsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3216,            return str.substring(remove.length());,8,1,0,2,4,1,12,2,0,23,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3218,        return str;,4,1,0,0,0,1,0,0,0,5,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3246,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3247,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3249,        if (str.endsWith(remove)) {,0,0,0,2,5,0,6,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3250,"            return str.substring(0, str.length() - remove.length());",4,2,0,3,6,1,12,0,0,18,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3252,        return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3280,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3281,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3283,"        if (endsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3284,"            return str.substring(0, str.length() - remove.length());",0,0,0,3,6,1,0,0,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3286,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3313,        if (isEmpty(str) || isEmpty(remove)) {,4,1,0,3,7,0,8,0,0,13,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3314,            return str;,6,0,0,0,0,1,0,0,0,8,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3316,"        return replace(str, remove, EMPTY, -1);",2,0,0,1,2,1,8,0,0,12,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3339,        if (isEmpty(str) || str.indexOf(remove) == -1) {,2,2,0,3,7,0,10,0,0,16,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3340,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3342,        char[] chars = str.toCharArray();,2,0,0,2,4,0,4,0,0,7,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3343,        int pos = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3344,        for (int i = 0; i < chars.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3345,            if (chars[i] != remove) {,2,1,1,2,5,0,0,0,0,7,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3346,                chars[pos++] = chars[i];,2,0,1,2,4,0,0,0,0,10,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3349,"        return new String(chars, 0, pos);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3378,"        return replace(text, searchString, replacement, 1);",0,0,0,1,2,1,14,0,0,14,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3405,"        return replace(text, searchString, replacement, -1);",0,0,0,1,2,1,8,0,0,9,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3437,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,4,4,0,3,7,0,8,0,0,18,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3438,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3440,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3441,"        int end = text.indexOf(searchString, start);",0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3442,        if (end == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3443,            return text;,4,0,0,0,0,1,6,0,0,11,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3445,        int replLength = searchString.length();,2,1,0,1,2,0,6,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3446,        int increase = replacement.length() - replLength;,4,1,0,1,2,0,4,0,0,9,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3447,        increase = (increase < 0 ? 0 : increase);,8,1,0,1,2,0,0,0,0,12,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3448,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3449,        StringBuilder buf = new StringBuilder(text.length() + increase);,10,3,1,2,4,0,4,4,0,26,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3450,        while (end != -1) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3451,"            buf.append(text.substring(start, end)).append(replacement);",2,1,0,3,6,0,16,0,0,19,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3452,            start = end + replLength;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3453,            if (--max == 0) {,2,1,1,1,3,0,4,0,0,12,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3454,                break;,2,0,0,0,0,0,0,0,0,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3456,"            end = text.indexOf(searchString, start);",4,1,0,1,2,0,8,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3458,        buf.append(text.substring(start));,14,2,0,2,4,0,26,0,0,43,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3459,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3502,"        return replaceEach(text, searchList, replacementList, false, 0);",0,0,0,1,2,1,8,0,0,9,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3553,        int timeToLive = searchList == null ? 0 : searchList.length;,10,2,0,0,0,0,8,0,0,20,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3554,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",0,0,0,1,2,1,10,0,0,11,72,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3620,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",8,2,0,1,2,0,0,2,0,14,92,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3628,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0,0,0,0,1,0,0,2,0,3,83,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3648,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3678,                increase += 3 * greater; // assume 3 matches,4,0,0,0,0,0,0,0,0,5,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3704,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3727,            return result;,2,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3730,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",8,4,0,1,2,1,10,0,0,22,80,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3756,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3757,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3759,"        return str.replace(searchChar, replaceChar);",0,0,0,1,2,1,8,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3799,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3800,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3802,        if (replaceChars == null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3803,            replaceChars = EMPTY;,4,0,0,0,0,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3805,        boolean modified = false;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3806,        int replaceCharsLength = replaceChars.length();,0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3807,        int strLength = str.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3808,        StringBuilder buf = new StringBuilder(strLength);,4,0,0,1,2,0,6,4,0,14,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3809,        for (int i = 0; i < strLength; i++) {,10,1,0,1,3,0,0,0,0,12,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3810,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3811,            int index = searchChars.indexOf(ch);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3812,            if (index >= 0) {,2,1,0,1,3,0,4,0,0,7,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3813,                modified = true;,6,1,0,0,0,0,4,0,0,14,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3814,                if (index < replaceCharsLength) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3815,                    buf.append(replaceChars.charAt(index));,2,0,0,2,4,0,10,0,0,12,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3818,                buf.append(ch);,2,0,0,1,2,0,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3821,        if (modified) {,2,0,0,1,3,0,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3822,            return buf.toString();,8,2,0,1,2,1,4,0,0,14,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3824,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3859,        if (str == null) {,2,1,0,1,3,0,8,0,0,12,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3860,            return null;,0,0,0,0,0,1,8,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3862,        if (overlay == null) {,2,1,0,1,3,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3863,            overlay = EMPTY;,6,0,0,0,0,0,12,0,0,18,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3865,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3866,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3867,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3869,        if (start > len) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3870,            start = len;,6,0,0,0,0,0,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3872,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3873,            end = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3875,        if (end > len) {,6,2,0,1,3,0,0,0,0,9,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3876,            end = len;,6,1,1,0,0,0,0,0,0,12,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3878,        if (start > end) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3879,            int temp = start;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3880,            start = end;,10,1,0,0,0,0,10,0,0,22,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3881,            end = temp;,4,0,0,0,0,0,0,0,0,5,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3883,        return new StringBuilder(len + start - end + overlay.length() + 1),2,0,0,2,4,1,0,0,0,2,66,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3918,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3919,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3922,        if (str.length() == 1) {,0,1,0,2,5,0,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3923,            char ch = str.charAt(0);,2,0,0,1,2,0,8,0,0,11,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3924,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3925,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3927,            return str;,12,1,0,0,0,1,0,0,0,14,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3930,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3931,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3933,        if (last == CharUtils.LF) {,2,0,0,1,3,0,0,0,0,2,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3934,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,8,3,0,2,5,0,4,0,0,15,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3935,                lastIdx--;,8,2,0,0,0,0,4,0,0,15,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3937,        } else if (last != CharUtils.CR) {,8,1,0,1,4,0,0,0,0,10,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3938,            lastIdx++;,2,0,0,0,0,0,0,0,0,3,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3940,"        return str.substring(0, lastIdx);",4,1,0,1,2,1,12,0,0,17,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3970,        if (isEmpty(str) || separator == null) {,2,1,1,2,5,0,0,0,0,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3971,            return str;,6,1,0,0,0,1,10,0,0,17,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3973,        if (str.endsWith(separator)) {,2,1,0,2,5,0,6,0,0,9,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3974,"            return str.substring(0, str.length() - separator.length());",0,0,0,3,6,1,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3976,        return str;,2,0,0,0,0,1,0,0,0,3,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4005,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4006,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4008,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4009,        if (strLen < 2) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4010,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4012,        int lastIdx = strLen - 1;,4,1,0,0,0,0,4,0,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4013,"        String ret = str.substring(0, lastIdx);",2,0,0,1,2,0,6,2,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4014,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4015,        if (last == CharUtils.LF) {,16,2,1,1,3,0,0,0,0,27,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4016,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4017,"                return ret.substring(0, lastIdx - 1);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4020,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4049,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4050,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4052,        if (repeat <= 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4053,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4055,        int inputLength = str.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4056,        if (repeat == 1 || inputLength == 0) {,6,3,0,1,3,0,10,0,0,19,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4057,            return str;,4,0,0,0,0,1,0,0,0,4,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4059,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4060,"            return padding(repeat, str.charAt(0));",0,0,0,2,4,1,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4063,        int outputLength = inputLength * repeat;,10,1,0,0,0,0,8,0,0,19,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4064,        switch (inputLength) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4066,                char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4067,                char[] output1 = new char[outputLength];,2,0,1,2,4,0,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4068,                for (int i = repeat - 1; i >= 0; i--) {,12,3,0,1,3,0,0,0,0,16,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4069,                    output1[i] = ch;,6,1,1,1,2,0,0,4,0,16,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4071,                return new String(output1);,2,0,0,1,2,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4073,                char ch0 = str.charAt(0);,6,0,0,1,2,0,4,0,0,10,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4074,                char ch1 = str.charAt(1);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4075,                char[] output2 = new char[outputLength];,8,1,0,2,4,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4076,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",0,0,0,1,3,0,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4077,                    output2[i] = ch0;,4,0,0,1,2,0,8,0,0,12,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4078,                    output2[i + 1] = ch1;,4,1,1,1,2,0,0,0,0,8,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4080,                return new String(output2);,2,0,0,1,2,1,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4082,                StringBuilder buf = new StringBuilder(outputLength);,10,1,0,1,2,0,4,4,0,20,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4083,                for (int i = 0; i < repeat; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4084,                    buf.append(str);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4086,                return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4110,        if(str == null || separator == null) {,6,3,0,1,3,0,0,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4111,"            return repeat(str, repeat);",0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4114,"            String result = repeat(str + separator, repeat);",2,0,0,1,2,0,0,0,0,2,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4115,"            return removeEnd(result, separator);",0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4143,        if (repeat < 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4144,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",2,1,0,1,2,0,0,2,0,6,79,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4146,        final char[] buf = new char[repeat];,2,0,1,2,4,1,4,0,0,10,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4147,        for (int i = 0; i < buf.length; i++) {,10,1,0,1,3,0,0,0,0,12,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4148,            buf[i] = padChar;,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4150,        return new String(buf);,0,0,0,1,2,1,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4173,"        return rightPad(str, size, ' ');",0,0,0,1,2,1,10,0,0,13,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4198,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4199,            return null;,4,1,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4201,        int pads = size - str.length();,6,1,0,1,2,0,8,0,0,15,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4202,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4203,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4205,        if (pads > PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4206,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,0,0,0,7,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4208,"        return str.concat(padding(pads, padChar));",0,0,0,2,4,1,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4235,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4236,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4238,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4239,"            padStr = "" "";",6,1,0,0,0,0,0,0,0,7,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4241,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4242,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4243,        int pads = size - strLen;,6,1,0,0,0,0,8,0,0,15,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4244,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4245,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4247,        if (padLen == 1 && pads <= PAD_LIMIT) {,10,4,0,1,3,0,0,0,0,14,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4248,"            return rightPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,10,0,0,10,45,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4251,        if (pads == padLen) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4252,            return str.concat(padStr);,0,0,0,1,2,1,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4253,        } else if (pads < padLen) {,16,3,0,1,4,0,0,0,0,20,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4254,"            return str.concat(padStr.substring(0, pads));",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4256,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4257,            char[] padChars = padStr.toCharArray();,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4258,            for (int i = 0; i < pads; i++) {,10,1,0,1,3,0,0,0,0,12,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4259,                padding[i] = padChars[i % padLen];,6,1,1,2,4,0,0,2,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4261,            return str.concat(new String(padding));,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4285,"        return leftPad(str, size, ' ');",0,0,0,1,2,1,6,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4310,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4311,            return null;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4313,        int pads = size - str.length();,8,1,0,1,2,0,4,0,0,14,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4314,        if (pads <= 0) {,16,3,0,1,3,0,0,0,0,20,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4315,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4317,        if (pads > PAD_LIMIT) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4318,"            return leftPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,12,0,0,12,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4320,"        return padding(pads, padChar).concat(str);",6,1,0,2,4,1,0,0,0,8,42,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4347,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4348,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4350,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4351,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4353,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4354,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4355,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4356,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4357,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4359,        if (padLen == 1 && pads <= PAD_LIMIT) {,12,3,0,1,3,1,0,4,0,20,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4360,"            return leftPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4363,        if (pads == padLen) {,10,1,0,1,3,0,0,0,0,11,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4364,            return padStr.concat(str);,8,1,0,1,2,1,0,0,0,10,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4365,        } else if (pads < padLen) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4366,"            return padStr.substring(0, pads).concat(str);",0,0,0,2,4,1,10,0,0,10,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4368,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4369,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4370,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,0,0,0,10,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4371,                padding[i] = padChars[i % padLen];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4373,            return new String(padding).concat(str);,4,1,0,2,4,1,4,2,0,11,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4386,        return str == null ? 0 : str.length();,2,1,0,1,2,1,4,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4415,"        return center(str, size, ' ');",0,0,0,1,2,1,6,0,0,7,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4443,        if (str == null || size <= 0) {,6,4,0,1,3,0,6,0,0,16,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4444,            return str;,2,0,0,0,0,1,0,0,0,3,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4446,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4447,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4448,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4449,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4451,"        str = leftPad(str, strLen + pads / 2, padChar);",8,3,0,1,2,0,6,0,0,18,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4452,"        str = rightPad(str, size, padChar);",6,1,0,1,2,0,8,0,0,17,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4453,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4483,        if (str == null || size <= 0) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4484,            return str;,8,0,0,0,0,1,0,0,0,9,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4486,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4487,"            padStr = "" "";",2,1,0,0,0,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4489,        int strLen = str.length();,4,0,0,1,2,0,8,0,0,12,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4490,        int pads = size - strLen;,6,2,0,0,0,0,0,0,0,9,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4491,        if (pads <= 0) {,10,2,0,1,3,0,0,0,0,13,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4492,            return str;,6,1,0,0,0,1,4,0,0,11,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4494,"        str = leftPad(str, strLen + pads / 2, padStr);",6,2,0,1,2,0,6,0,0,15,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4495,"        str = rightPad(str, size, padStr);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4496,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4521,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4522,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4524,        return str.toUpperCase();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4544,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4545,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4547,        return str.toUpperCase(locale);,0,0,0,1,2,1,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4570,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4571,            return null;,6,1,0,0,0,1,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4573,        return str.toLowerCase();,2,0,0,1,2,1,0,0,0,2,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4593,        if (str == null) {,12,4,0,1,3,0,0,0,0,17,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4594,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4596,        return str.toLowerCase(locale);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4621,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4622,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4624,        return new StringBuilder(strLen),8,0,0,1,2,1,0,2,0,11,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4652,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4653,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4655,        return new StringBuilder(strLen),4,0,0,1,2,1,4,6,0,14,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4690,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4691,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4693,        StringBuilder buffer = new StringBuilder(strLen);,4,0,0,1,2,0,0,4,0,8,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4695,        char ch = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4696,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4697,            ch = str.charAt(i);,6,1,0,1,2,0,6,0,0,14,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4698,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,0,6,0,0,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4699,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4700,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4701,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,0,0,0,4,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4702,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4703,                ch = Character.toUpperCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4705,            buffer.append(ch);,2,0,0,1,2,0,10,0,0,12,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4707,        return buffer.toString();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4732,        if (isEmpty(str) || isEmpty(sub)) {,2,1,0,3,7,0,8,0,0,11,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4733,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4735,        int count = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4736,        int idx = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4737,"        while ((idx = str.indexOf(sub, idx)) != -1) {",0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4738,            count++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4739,            idx += sub.length();,2,0,0,1,2,0,4,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4741,        return count;,2,0,0,0,0,1,4,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4765,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4766,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4768,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4769,        for (int i = 0; i < sz; i++) {,4,0,0,1,3,0,0,0,0,5,30,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4770,            if (Character.isLetter(str.charAt(i)) == false) {,2,2,0,3,7,0,10,0,0,15,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4771,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4774,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4799,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4800,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4802,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4803,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4804,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,19,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4805,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4808,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4832,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4833,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4835,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4836,        for (int i = 0; i < sz; i++) {,8,2,0,1,3,0,4,0,0,15,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4837,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,6,2,0,3,7,0,10,0,0,19,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4838,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4841,        return true;,2,0,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4866,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4867,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4869,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4870,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4871,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4872,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4875,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4904,        if (str == null) {,8,2,0,1,3,0,6,0,0,16,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4905,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4907,        int sz = str.length();,6,3,0,1,2,0,4,0,0,13,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4908,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4909,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,4,1,0,3,7,0,10,0,0,17,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4910,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4913,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4938,        if (str == null) {,0,0,0,1,3,0,0,0,0,1,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4939,            return false;,2,0,0,0,0,1,4,0,0,7,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4941,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4942,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4943,            if (Character.isDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4944,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4947,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4974,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4975,            return false;,2,0,0,0,0,1,0,4,0,7,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4977,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4978,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4979,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,8,4,0,6,13,0,16,0,0,31,76,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4980,                return false;,4,1,0,0,0,1,4,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4983,        return true;,10,2,0,0,0,1,0,0,0,15,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5006,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5007,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5009,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5010,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5011,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,2,0,0,4,9,0,0,0,0,4,55,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5012,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5015,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5036,        if (str == null || isEmpty(str)) {,4,2,0,2,5,1,8,0,0,16,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5037,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5039,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5040,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5041,            if (Character.isLowerCase(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5042,                return false;,2,1,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5045,        return true;,4,0,0,0,0,1,8,0,0,12,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5066,        if (str == null || isEmpty(str)) {,6,2,0,2,5,0,8,4,0,21,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5067,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5069,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5070,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5071,            if (Character.isUpperCase(str.charAt(i)) == false) {,6,2,1,3,7,0,10,0,0,22,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5072,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5075,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5097,        return str == null ? EMPTY : str;,6,1,0,0,0,1,0,0,0,7,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5118,        return str == null ? defaultStr : str;,10,2,0,0,0,1,0,0,0,12,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5139,        return StringUtils.isEmpty(str) ? defaultStr : str;,8,0,0,1,2,1,14,0,0,22,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5159,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5160,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5162,        return new StringBuilder(str).reverse().toString();,2,0,0,3,6,1,4,2,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5185,        if (str == null) {,4,1,0,1,3,0,0,2,0,7,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5186,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5190,"        String[] strs = split(str, separatorChar);",0,0,0,2,4,0,0,0,0,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5191,        ArrayUtils.reverse(strs);,8,1,0,1,2,0,6,0,0,16,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5192,"        return join(strs, separatorChar);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5230,"        return abbreviate(str, 0, maxWidth);",2,1,0,1,2,1,6,0,0,9,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5269,        if (str == null) {,2,2,0,1,3,0,10,0,0,15,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5270,            return null;,2,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5272,        if (maxWidth < 4) {,12,2,0,1,3,0,0,0,0,15,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5273,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5275,        if (str.length() <= maxWidth) {,2,1,0,2,5,0,4,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5276,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5278,        if (offset > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5279,            offset = str.length();,2,0,0,1,2,0,4,2,0,9,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5281,        if ((str.length() - offset) < (maxWidth - 3)) {,2,0,0,4,9,0,0,0,0,2,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5282,            offset = str.length() - (maxWidth - 3);,4,2,0,2,4,0,4,0,0,11,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5284,        if (offset <= 4) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5285,"            return str.substring(0, maxWidth - 3) + ""..."";",2,0,0,1,2,1,4,0,0,6,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5287,        if (maxWidth < 7) {,0,0,0,1,3,0,12,0,0,12,19,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5288,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",2,0,0,1,2,0,0,0,0,2,82,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5290,        if ((offset + (maxWidth - 3)) < str.length()) {,6,4,0,4,9,0,4,0,0,14,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5291,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",2,0,0,2,4,1,0,0,0,2,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5293,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",0,1,1,3,6,1,0,0,0,9,60,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5324,        if (str1 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5325,            return str2;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5327,        if (str2 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5328,            return str1;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5330,"        int at = indexOfDifference(str1, str2);",2,0,0,1,2,0,6,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5331,        if (at == -1) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5332,            return EMPTY;,4,0,0,0,0,1,10,0,0,14,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5334,        return str2.substring(at);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5361,        if (str1 == str2) {,4,1,0,1,3,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5362,            return -1;,0,0,0,0,0,1,4,0,0,5,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5364,        if (str1 == null || str2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5365,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5368,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,0,0,0,3,7,0,0,0,0,10,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5369,            if (str1.charAt(i) != str2.charAt(i)) {,2,1,0,3,7,0,12,0,0,15,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5370,                break;,2,0,0,0,0,0,8,0,0,10,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5373,        if (i < str2.length() || i < str1.length()) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5374,            return i;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5376,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5411,        if (strs == null || strs.length <= 1) {,12,3,0,1,3,0,4,0,0,19,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5412,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5414,        boolean anyStringNull = false;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5415,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5416,        int arrayLen = strs.length;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5417,        int shortestStrLen = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5418,        int longestStrLen = 0;,2,1,1,0,0,0,0,0,0,7,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5423,        for (int i = 0; i < arrayLen; i++) {,8,1,0,1,3,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5424,            if (strs[i] == null) {,6,3,1,2,5,0,10,0,0,23,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5425,                anyStringNull = true;,2,0,0,0,0,0,6,0,0,10,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5426,                shortestStrLen = 0;,8,1,0,0,0,0,0,0,0,11,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5428,                allStringsNull = false;,2,0,0,0,0,0,0,0,0,4,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5429,"                shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",2,0,1,3,6,0,8,0,0,15,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5430,"                longestStrLen = Math.max(strs[i].length(), longestStrLen);",2,0,1,3,6,0,8,0,0,15,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5435,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,8,4,0,2,5,0,4,0,0,17,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5436,            return -1;,2,0,0,0,0,1,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5440,        if (shortestStrLen == 0) {,6,2,1,1,3,0,6,0,0,17,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5441,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5445,        int firstDiff = -1;,12,9,0,0,0,0,8,0,0,30,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5446,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,12,2,0,1,3,0,0,0,0,15,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5447,            char comparisonChar = strs[0].charAt(stringPos);,2,0,1,2,4,0,4,0,0,8,48,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5448,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,0,0,0,1,3,0,0,0,0,4,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5449,                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {,2,1,1,3,7,0,8,0,0,15,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5450,                    firstDiff = stringPos;,4,3,0,0,0,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5451,                    break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5454,            if (firstDiff != -1) {,2,1,0,1,3,0,0,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5455,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5459,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,6,3,0,1,3,0,0,0,0,10,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5463,            return shortestStrLen;,2,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5465,        return firstDiff;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5502,        if (strs == null || strs.length == 0) {,2,0,0,1,3,0,0,0,0,2,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5503,            return EMPTY;,6,1,0,0,0,1,24,0,0,32,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5505,        int smallestIndexOfDiff = indexOfDifference(strs);,2,0,0,1,2,0,4,0,0,6,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5506,        if (smallestIndexOfDiff == -1) {,2,1,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5508,            if (strs[0] == null) {,0,1,1,2,5,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5509,                return EMPTY;,4,0,0,0,0,1,0,0,0,4,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5511,            return strs[0];,0,0,1,1,2,1,0,0,0,2,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5512,        } else if (smallestIndexOfDiff == 0) {,2,0,0,1,4,0,0,0,0,2,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5514,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5517,"            return strs[0].substring(0, smallestIndexOfDiff);",0,0,1,2,4,1,4,0,0,6,49,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5558,        if (s == null || t == null) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5559,"            throw new IllegalArgumentException(""Strings must not be null"");",2,0,0,1,2,0,18,2,0,24,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5579,        int n = s.length(); // length of s,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5580,        int m = t.length(); // length of t,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5582,        if (n == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5583,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5584,        } else if (m == 0) {,2,1,0,1,4,0,8,0,0,11,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5585,            return n;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5588,        if (n > m) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5590,            String tmp = s;,4,0,0,0,0,0,0,2,0,6,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5591,            s = t;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5592,            t = tmp;,4,0,0,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5593,            n = m;,4,1,0,0,0,0,0,4,0,9,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5594,            m = t.length();,2,0,0,1,2,0,4,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5597,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5598,"        int d[] = new int[n+1]; // cost array, horizontally",0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5609,        for (i = 0; i<=n; i++) {,26,2,0,1,3,0,0,0,0,33,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5610,            p[i] = i;,0,0,0,1,2,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5613,        for (j = 1; j<=m; j++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5614,            t_j = t.charAt(j-1);,4,2,0,1,2,0,14,0,0,22,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5615,            d[0] = j;,0,0,0,1,2,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5617,            for (i=1; i<=n; i++) {,0,0,0,1,3,0,8,0,0,8,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5618,                cost = s.charAt(i-1)==t_j ? 0 : 1;,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5620,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",0,0,0,6,12,0,0,0,0,18,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5624,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5625,            p = d;,2,0,0,0,0,0,0,0,0,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5626,            d = _d;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5631,        return p[n];,4,1,1,1,2,1,4,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5680,"        return startsWith(str, prefix, false);",0,0,0,1,2,1,6,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5705,"        return startsWith(str, prefix, true);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5720,        if (str == null || prefix == null) {,8,3,0,1,3,0,0,0,0,12,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5721,            return (str == null && prefix == null);,4,3,0,1,2,1,0,0,0,7,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5723,        if (prefix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5724,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5726,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",0,0,0,2,4,1,22,0,0,23,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5748,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,0,0,0,3,7,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5749,            return false;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5751,        for (int i = 0; i < searchStrings.length; i++) {,12,1,0,1,3,0,0,0,0,14,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5752,            String searchString = searchStrings[i];,2,0,0,1,2,0,0,0,0,2,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5753,"            if (StringUtils.startsWith(string, searchString)) {",0,0,0,2,5,0,8,0,0,8,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5754,                return true;,2,0,0,0,0,1,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5757,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5786,"        return endsWith(str, suffix, false);",0,0,0,1,2,1,6,0,0,7,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5812,"        return endsWith(str, suffix, true);",0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5827,        if (str == null || suffix == null) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5828,            return (str == null && suffix == null);,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5830,        if (suffix.length() > str.length()) {,0,0,0,3,7,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5831,            return false;,8,1,0,0,0,1,0,0,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5833,        int strOffset = str.length() - suffix.length();,2,1,0,2,4,0,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5834,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,2,4,1,14,0,0,14,76,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1045,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",0,0,0,3,6,1,0,0,0,10,60,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1018,        return str.indexOf(searchStr) >= 0;,0,1,0,1,2,1,6,0,0,7,35,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1015,        if (str == null || searchStr == null) {,4,3,0,1,3,0,6,0,0,13,39,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,170,            return StringUtils.EMPTY;,6,1,0,0,0,1,0,0,0,7,25,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,230,            return StringUtils.EMPTY;,4,1,0,0,0,4,0,4,0,12,25,1,1.0,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,229,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,232,        return getPackageName(cls.getName());,0,0,0,2,4,1,0,0,0,7,37,4,0.5,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,201,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,245,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.16667,1,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,252,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,54,4,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,253,        if (i == -1) {,2,1,0,1,3,0,0,0,0,4,14,4,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,256,"        return className.substring(0, i);",0,0,0,1,2,1,6,0,0,6,33,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,455,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,459,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,0,0,0,4,8,0,0,0,0,12,67,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,460,"            escapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,24,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,461,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,498,        if (writer == null ) {,4,1,0,1,3,0,6,0,0,12,22,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,501,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,504,"        Entities.HTML40.escape(writer, string);",4,0,0,1,2,0,6,0,0,10,39,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,505,    },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,832,"                    writer.write(""&#"");",0,0,0,1,2,0,4,0,0,5,19,11,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,833,"                    writer.write(Integer.toString(c, 10));",6,3,0,2,4,0,10,0,0,19,38,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,834,                    writer.write(';');,0,0,0,1,2,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,536,            return super.name(value);,0,0,0,1,2,1,0,0,0,4,25,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,831,                if (c > 0x7F) {,0,0,0,1,3,0,0,0,0,4,15,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang/Entities,42,961,"                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);",2,0,0,2,4,0,8,0,0,11,63,18,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,112,"        this(pattern, Locale.getDefault(), registry);",4,0,0,2,4,0,4,0,0,8,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,148,        ArrayList foundFormats = new ArrayList();,4,0,0,1,2,0,0,0,0,5,41,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,149,        ArrayList foundDescriptions = new ArrayList();,0,0,0,1,2,0,0,0,0,3,46,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,150,        StringBuffer stripCustom = new StringBuffer(pattern.length());,2,0,0,2,4,0,4,4,0,10,62,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,152,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,153,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,154,        int fmtCount = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,155,        while (pos.getIndex() < pattern.length()) {,4,2,0,3,7,0,8,12,0,27,43,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,156,            switch (c[pos.getIndex()]) {,2,0,1,3,7,0,10,4,0,18,28,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,187,                stripCustom.append(c[pos.getIndex()]);,0,0,1,3,6,0,8,0,0,10,38,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,188,                next(pos);,0,0,0,1,2,0,4,0,0,4,10,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,403,        pos.setIndex(pos.getIndex() + 1);,0,1,0,2,4,0,8,0,0,9,33,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,404,        return pos;,2,0,0,0,0,1,0,0,0,2,11,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,124,        super(DUMMY_PATTERN);,0,0,0,1,2,0,0,0,0,3,21,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,125,        setLocale(locale);,0,0,0,1,2,0,4,0,0,4,18,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,126,        this.registry = registry;,0,0,0,0,0,0,0,0,0,0,25,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,127,        applyPattern(pattern);,0,0,0,1,2,0,4,0,0,4,22,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,143,        if (registry == null) {,4,1,0,1,3,0,0,2,0,7,23,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,144,            super.applyPattern(pattern);,4,0,0,1,2,0,0,0,0,4,28,7,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,145,            toPattern = super.toPattern();,6,1,0,1,2,0,0,0,0,8,30,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,146,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,139,        if (val == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,142,        if (val.length() == 0) {,2,1,0,2,5,0,4,4,0,11,24,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,145,"        if (val.startsWith(""--"")) {",0,0,0,2,5,0,4,0,0,5,27,5,0.5,1,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,152,"        if (val.startsWith(""0x"") || val.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,155,        char lastChar = val.charAt(val.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,159,        int decPos = val.indexOf('.');,4,1,0,1,2,0,4,0,0,10,30,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,160,        int expPos = val.indexOf('e') + val.indexOf('E') + 1;,0,0,0,2,4,0,0,0,0,6,53,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,162,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,174,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,177,                mant = val;,6,0,0,0,0,3,2,2,0,15,11,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,179,            dec = null;,2,0,0,0,0,0,0,0,0,3,11,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,181,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,0,6,0,0,7,35,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,182,            if (expPos > -1 && expPos < val.length() - 1) {,8,5,0,2,5,0,8,0,0,22,47,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,185,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,188,"            String numeric = val.substring(0, val.length() - 1);",0,0,0,2,4,0,0,0,0,6,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,189,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,190,            switch (lastChar) {,0,0,0,1,3,0,0,0,0,4,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,193,                    if (dec == null,2,1,0,0,1,0,0,0,0,3,15,9,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,297,        if (s == null) {,2,1,0,1,3,0,0,0,0,3,16,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,300,        for (int i = s.length() - 1; i >= 0; i--) {,6,3,0,2,5,0,10,0,0,21,43,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,301,            if (s.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,25,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,302,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,47,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,48,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,61,"        return stringToInt(str, 0);",0,0,0,1,2,1,4,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,74,            return Integer.parseInt(str);,0,0,0,1,2,1,6,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,75,        } catch (NumberFormatException nfe) {,8,0,0,1,4,0,8,2,0,19,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,76,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,140,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,143,"            throw new NumberFormatException(""\""\"" is not a valid number."");",0,0,0,1,2,0,0,2,0,3,63,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,150,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,153,            return createInteger(val);,0,0,0,1,2,1,4,2,0,7,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,164,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,165,                if (expPos < decPos) {,6,1,0,1,3,0,0,0,0,7,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,166,"                    throw new NumberFormatException(val + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,168,"                dec = val.substring(decPos + 1, expPos);",4,1,0,1,2,0,6,0,0,12,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,170,                dec = val.substring(decPos + 1);,4,1,0,1,2,0,4,0,0,10,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,172,"            mant = val.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,175,"                mant = val.substring(0, expPos);",2,0,0,1,2,0,6,0,0,9,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,183,"                exp = val.substring(expPos + 1, val.length() - 1);",4,2,0,2,4,0,8,0,0,15,50,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,197,                            return createLong(numeric);,4,3,0,1,2,1,12,0,0,19,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,198,                        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,201,                        return createBigInteger(numeric);,2,0,0,1,2,1,4,2,0,8,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,204,"                    throw new NumberFormatException(val + "" is not a valid number."");",4,1,0,1,2,0,0,2,0,8,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,208,                        Float f = NumberUtils.createFloat(numeric);,2,0,0,1,2,0,6,2,0,10,43,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,209,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,212,                            return f;,4,0,0,0,0,4,4,2,0,13,9,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,217,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,215,                    } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,222,                        Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,0,6,2,0,10,45,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,223,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,4,4,0,5,11,0,8,0,0,18,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,224,                            return d;,6,0,0,0,0,1,0,0,0,6,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,228,                    },0,0,0,0,1,0,4,0,0,4,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,226,                    } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,230,                        return createBigDecimal(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,231,                    } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,236,"                    throw new NumberFormatException(val + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,242,            if (expPos > -1 && expPos < val.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,243,"                exp = val.substring(expPos + 1, val.length());",4,1,0,2,4,0,8,0,0,14,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,245,                exp = null;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,247,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,250,                    return createInteger(val);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,251,                } catch (NumberFormatException nfe) {,6,0,0,1,4,3,0,6,0,16,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,255,                    return createLong(val);,0,0,0,1,2,1,4,0,0,4,23,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,256,                } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,259,                return createBigInteger(val);,0,0,0,1,2,1,4,0,0,4,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,263,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,0,0,0,2,4,0,0,0,0,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,265,                    Float f = createFloat(val);,12,1,0,1,2,5,12,6,0,38,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,266,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,267,                        return f;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,271,                },2,0,0,0,1,3,0,4,0,9,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,269,                } catch (NumberFormatException nfe) {,4,3,0,1,4,0,4,2,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,273,                    Double d = createDouble(val);,2,0,0,1,2,0,4,2,0,8,29,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,274,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,275,                        return d;,2,0,0,0,0,1,0,0,0,3,9,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,279,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,277,                } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,281,                return createBigDecimal(val);,0,0,0,1,2,1,4,0,0,4,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,298,            return true;,0,0,0,0,0,1,4,0,0,5,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,305,        return s.length() > 0;,0,1,0,1,2,1,4,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,318,        return Float.valueOf(val);,0,0,0,1,2,1,6,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,329,        return Double.valueOf(val);,4,1,0,1,2,1,6,0,0,12,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,342,        return Integer.decode(val);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,353,        return Long.valueOf(val);,0,0,0,1,2,1,14,0,0,14,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,364,        BigInteger bi = new BigInteger(val);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,365,        return bi;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,376,        BigDecimal bd = new BigDecimal(val);,4,1,0,1,2,0,4,4,0,13,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,377,        return bd;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,391,        if (b < a) {,4,1,0,1,3,0,6,2,0,13,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,392,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,394,        if (c < a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,395,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,397,        return a;,4,4,0,0,0,1,8,0,0,16,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,409,        if (b < a) {,6,1,0,1,3,0,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,410,            a = b;,2,0,0,0,0,0,6,0,0,9,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,412,        if (c < a) {,10,2,0,1,3,0,0,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,413,            a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,415,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,427,        if (b > a) {,4,0,0,1,3,0,2,0,0,7,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,428,            a = b;,4,0,0,0,0,0,4,0,0,9,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,430,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,431,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,433,        return a;,2,1,0,0,0,1,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,445,        if (b > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,446,            a = b;,18,1,0,0,0,0,8,0,0,30,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,448,        if (c > a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,449,            a = c;,2,0,0,0,0,2,8,2,0,15,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,451,        return a;,2,0,0,0,0,1,4,2,0,8,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,491,        if (lhs < rhs) {,4,1,0,1,3,0,4,0,0,9,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,492,            return -1;,0,0,1,0,0,1,10,2,0,24,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,494,        if (lhs > rhs) {,4,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,495,            return +1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,501,        long lhsBits = Double.doubleToLongBits(lhs);,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,502,        long rhsBits = Double.doubleToLongBits(rhs);,6,1,0,1,2,0,18,0,0,26,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,503,        if (lhsBits == rhsBits) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,504,            return 0;,4,1,1,0,0,1,0,0,0,10,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,512,        if (lhsBits < rhsBits) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,513,            return -1;,0,0,0,0,0,1,4,0,0,5,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,515,            return +1;,0,0,0,0,0,1,6,0,0,8,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,552,        if (lhs < rhs) {,12,1,0,1,3,1,0,6,0,20,16,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,553,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,555,        if (lhs > rhs) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,556,            return +1;,0,0,0,0,0,1,8,0,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,562,        int lhsBits = Float.floatToIntBits(lhs);,2,0,0,1,2,0,6,0,0,8,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,563,        int rhsBits = Float.floatToIntBits(rhs);,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,564,        if (lhsBits == rhsBits) {,6,1,0,1,3,0,6,0,0,13,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,565,            return 0;,2,0,0,0,0,1,0,2,0,5,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,573,        if (lhsBits < rhsBits) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,574,            return -1;,6,1,0,0,0,1,0,2,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,576,            return +1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,593,        if ((str == null) || (str.length() == 0)) {,0,0,0,4,9,0,0,0,0,13,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,594,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,596,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,597,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,11,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,598,                return false;,2,0,0,0,0,2,0,2,0,5,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,601,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,618,        if (StringUtils.isEmpty(str)) {,2,1,0,2,5,1,18,2,0,25,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,619,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,621,        char[] chars = str.toCharArray();,2,0,0,2,4,0,4,0,0,8,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,622,        int sz = chars.length;,8,0,0,0,0,3,4,2,0,17,22,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,623,        boolean hasExp = false;,4,0,0,0,0,0,2,0,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,624,        boolean hasDecPoint = false;,2,0,0,0,0,0,0,0,0,2,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,625,        boolean allowSigns = false;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,626,        boolean foundDigit = false;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,628,        int start = (chars[0] == '-') ? 1 : 0;,2,1,1,2,4,0,0,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,629,        if (sz > start + 1) {,6,0,0,1,3,3,2,2,0,15,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,630,            if (chars[start] == '0' && chars[start + 1] == 'x') {,2,0,0,3,7,0,0,0,0,2,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,631,                int i = start + 2;,4,1,0,0,0,0,8,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,632,                if (i == sz) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,633,"                    return false; // str == ""0x""",2,1,0,0,0,1,0,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,636,                for (; i < chars.length; i++) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,637,                    if ((chars[i] < '0' || chars[i] > '9'),10,3,0,3,7,3,14,0,0,34,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,640,                        return false;,2,2,0,0,0,1,6,0,0,13,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,643,                return true;,2,0,1,0,0,1,8,2,0,17,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,646,"        sz--; // don't want to loop to the last char, check it afterwords",0,1,0,0,0,0,4,0,0,5,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,648,        int i = start;,4,0,0,0,0,0,0,0,0,4,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,651,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,16,6,0,2,5,3,2,0,0,29,61,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,652,            if (chars[i] >= '0' && chars[i] <= '9') {,2,4,1,3,7,0,0,0,0,16,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,653,                foundDigit = true;,2,0,0,0,0,0,0,0,0,4,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,654,                allowSigns = false;,4,1,0,0,0,0,12,4,0,21,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,656,            } else if (chars[i] == '.') {,0,1,1,2,6,0,0,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,657,                if (hasDecPoint || hasExp) {,0,0,0,1,3,0,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,659,                    return false;,0,0,0,0,0,1,0,0,0,1,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,661,                hasDecPoint = true;,2,0,0,0,0,0,0,0,0,4,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,662,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,0,0,3,8,0,0,0,0,11,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,664,                if (hasExp) {,2,0,0,1,3,0,0,0,0,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,666,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,668,                if (!foundDigit) {,6,1,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,669,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,671,                hasExp = true;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,672,                allowSigns = true;,4,0,0,0,0,3,2,0,0,11,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,673,            } else if (chars[i] == '+' || chars[i] == '-') {,0,0,0,3,8,0,0,0,0,11,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,674,                if (!allowSigns) {,16,2,0,1,3,0,8,0,0,28,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,675,                    return false;,0,0,0,0,0,1,0,0,0,1,13,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,677,                allowSigns = false;,8,1,0,0,0,0,4,0,0,15,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,678,                foundDigit = false; // we need a digit after the E,0,0,0,0,0,0,0,0,0,0,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,680,                return false;,2,1,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,682,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,684,        if (i < chars.length) {,6,1,0,1,3,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,685,            if (chars[i] >= '0' && chars[i] <= '9') {,0,0,0,3,7,0,0,0,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,687,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,689,            if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,7,0,0,0,0,13,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,691,                return false;,2,0,0,0,0,1,6,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,693,            if (!allowSigns,0,0,0,0,1,0,10,0,0,10,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,698,                return foundDigit;,4,0,0,0,0,1,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,700,            if (chars[i] == 'l',0,1,1,1,3,0,0,0,0,6,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,703,                return foundDigit && !hasExp;,4,1,0,0,0,1,0,0,0,6,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,706,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,710,        return !allowSigns && foundDigit;,4,1,0,0,0,1,0,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5279,        return str == null ? EMPTY : str;,0,0,0,0,0,1,0,0,0,1,33,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,167,        super();,0,0,0,1,2,0,14,0,0,15,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,168,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,191,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,209,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,229,        if (str == null || (strLen = str.length()) == 0) {,6,4,0,3,7,0,4,0,0,15,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,230,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,232,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,234,                return false;,4,0,0,0,0,1,0,0,0,6,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,237,        return true;,12,4,0,0,0,8,4,10,0,38,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,257,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,282,        return str == null ? EMPTY : str.trim();,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,309,        return str == null ? null : str.trim();,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,335,        String ts = trim(str);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,336,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,361,        return str == null ? EMPTY : str.trim();,2,0,0,1,2,1,4,0,0,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,389,"        return strip(str, null);",0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,416,        if (str == null) {,2,0,0,1,3,2,4,2,0,10,18,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,417,            return null;,4,0,0,0,0,4,2,2,0,12,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,419,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,420,        return str.length() == 0 ? null : str;,2,0,0,1,2,1,0,0,0,2,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,446,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,476,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,477,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,479,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,480,"        return stripEnd(str, stripChars);",2,0,0,1,2,1,6,2,0,11,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,509,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,510,            return str;,4,0,0,0,0,1,6,2,0,12,11,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,512,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,513,        if (stripChars == null) {,12,2,0,1,3,0,10,0,0,26,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,514,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,515,                start++;,2,0,0,0,0,0,0,0,0,3,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,517,        } else if (stripChars.length() == 0) {,2,1,0,2,6,0,10,2,0,15,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,518,            return str;,2,0,0,0,0,1,0,2,0,6,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,520,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,6,3,0,5,11,0,10,0,0,20,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,521,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,524,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,553,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,554,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,557,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,558,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,4,9,0,0,0,0,13,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,559,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,561,        } else if (stripChars.length() == 0) {,10,1,0,2,6,0,0,0,0,12,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,562,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,564,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,4,4,0,5,11,0,14,0,0,23,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,565,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,568,"        return str.substring(0, end);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,593,"        return stripAll(strs, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,623,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,624,            return strs;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,626,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,8,0,0,8,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,627,        for (int i = 0; i < strsLen; i++) {,12,1,0,1,3,3,0,4,0,22,35,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,628,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,630,        return newArr;,14,2,0,0,0,7,4,0,0,29,14,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,656,        return str1 == null ? str2 == null : str1.equals(str2);,4,2,0,1,2,1,6,0,0,12,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,681,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,706,        if (isEmpty(str)) {,6,4,0,2,5,0,4,0,0,15,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,707,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,709,        return str.indexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,738,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,739,            return -1;,0,0,0,0,0,1,4,0,0,5,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,741,"        return str.indexOf(searchChar, startPos);",6,0,0,1,2,1,8,0,0,16,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,767,        if (str == null || searchStr == null) {,10,4,0,1,3,0,0,0,0,15,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,768,            return -1;,2,0,0,0,0,1,0,0,0,3,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,770,        return str.indexOf(searchStr);,0,0,0,1,2,1,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,801,        if (str == null || searchStr == null || ordinal <= 0) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,802,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,3,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,804,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,805,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,807,        int found = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,808,        int index = INDEX_NOT_FOUND;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,810,"            index = str.indexOf(searchStr, index + 1);",0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,811,            if (index < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,812,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,814,            found++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,815,        } while (found < ordinal);,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,816,        return index;,2,0,0,0,0,1,4,2,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,851,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,852,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,855,        if (searchStr.length() == 0 && startPos >= str.length()) {,0,0,0,3,7,0,6,0,0,6,58,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,856,            return str.length();,0,0,0,1,2,1,10,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,858,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,883,        if (isEmpty(str)) {,2,1,0,2,5,0,4,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,884,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,886,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,917,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,918,            return -1;,2,0,0,0,0,1,0,0,0,4,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,920,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,946,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,947,            return -1;,4,1,0,0,0,1,0,0,0,5,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,949,        return str.lastIndexOf(searchStr);,0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,981,        if (str == null || searchStr == null) {,6,3,0,1,3,0,0,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,982,            return -1;,2,0,0,0,0,4,2,2,0,11,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,984,"        return str.lastIndexOf(searchStr, startPos);",4,1,0,1,2,1,8,2,0,15,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1009,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1010,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1012,        return str.indexOf(searchChar) >= 0;,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1037,        if (str == null || searchStr == null) {,6,1,0,1,3,0,6,0,0,14,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1038,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1040,        return str.indexOf(searchStr) >= 0;,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1067,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1068,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1070,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",6,0,1,3,6,1,10,0,0,20,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1098,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1099,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1101,        for (int i = 0; i < str.length(); i++) {,4,1,0,2,5,0,6,0,0,12,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1102,            char ch = str.charAt(i);,2,0,0,1,2,0,4,0,0,8,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1103,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1104,                if (searchChars[j] == ch) {,2,1,1,2,5,0,6,0,0,13,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1105,                    return i;,6,2,0,0,0,1,12,0,0,21,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1109,        return -1;,8,2,0,0,0,1,0,2,0,14,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1135,        if (isEmpty(str) || isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1136,            return -1;,2,0,0,0,0,4,8,4,0,19,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1138,"        return indexOfAny(str, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1167,        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {,0,0,0,2,5,0,0,0,0,7,89,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1168,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1170,        for (int i = 0; i < str.length(); i++) {,8,2,1,2,5,0,4,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1171,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1172,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,1,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1173,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1174,                    return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1178,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1209,        if (searchChars == null) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1210,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1212,"        return containsAny(str, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1240,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1241,            return -1;,2,0,0,0,0,1,0,2,0,4,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1243,        outer : for (int i = 0; i < str.length(); i++) {,4,0,0,2,5,0,4,0,0,8,48,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1244,            char ch = str.charAt(i);,4,1,0,1,2,0,0,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1245,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1246,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1247,                    continue outer;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1250,            return i;,0,0,0,0,0,1,0,0,0,1,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1252,        return -1;,2,0,0,0,0,1,0,0,0,4,10,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1278,        if (isEmpty(str) || isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1279,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1281,        for (int i = 0; i < str.length(); i++) {,2,0,0,2,5,0,14,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1282,            if (searchChars.indexOf(str.charAt(i)) < 0) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1283,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1286,        return -1;,2,0,0,0,0,4,2,2,0,10,10,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1314,        if ((valid == null) || (str == null)) {,0,0,0,3,7,0,8,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1315,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1317,        if (str.length() == 0) {,0,0,0,2,5,0,2,0,0,2,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1318,            return true;,4,1,0,0,0,1,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1320,        if (valid.length == 0) {,10,1,0,1,3,0,0,0,0,13,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1321,            return false;,2,1,0,0,0,1,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1323,"        return indexOfAnyBut(str, valid) == -1;",0,1,0,1,2,1,6,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1349,        if (str == null || validChars == null) {,6,1,0,1,3,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1350,            return false;,2,0,0,0,0,4,14,2,0,23,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1352,"        return containsOnly(str, validChars.toCharArray());",2,0,0,2,4,1,4,0,0,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1380,        if (str == null || invalidChars == null) {,4,3,0,1,3,0,8,0,0,17,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1381,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1383,        int strSize = str.length();,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1384,        int validSize = invalidChars.length;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1385,        for (int i = 0; i < strSize; i++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1386,            char ch = str.charAt(i);,14,1,0,1,2,0,10,2,0,28,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1387,            for (int j = 0; j < validSize; j++) {,16,2,0,1,3,0,0,0,0,20,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1388,                if (invalidChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1389,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1393,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1419,        if (str == null || invalidChars == null) {,4,3,0,1,3,0,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1420,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1422,"        return containsNone(str, invalidChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1454,        if ((str == null) || (searchStrs == null)) {,0,0,0,3,7,0,0,0,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1455,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1457,        int sz = searchStrs.length;,8,0,0,0,0,3,2,0,0,13,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1460,        int ret = Integer.MAX_VALUE;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1462,        int tmp = 0;,2,1,0,0,0,0,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1463,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1464,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1465,            if (search == null) {,2,0,0,1,3,0,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1466,                continue;,12,4,0,0,0,0,4,0,0,21,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1468,            tmp = str.indexOf(search);,4,1,0,1,2,0,6,2,0,16,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1469,            if (tmp == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1470,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1473,            if (tmp < ret) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1474,                ret = tmp;,2,1,0,0,0,0,6,0,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1478,        return (ret == Integer.MAX_VALUE) ? -1 : ret;,0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1507,        if ((str == null) || (searchStrs == null)) {,0,0,0,3,7,0,0,0,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1508,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1510,        int sz = searchStrs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1511,        int ret = -1;,2,0,0,0,0,0,0,0,0,3,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1512,        int tmp = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1513,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,0,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1514,            String search = searchStrs[i];,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1515,            if (search == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1516,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1518,            tmp = str.lastIndexOf(search);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1519,            if (tmp > ret) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1520,                ret = tmp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1523,        return ret;,4,3,0,0,0,1,0,0,0,9,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1553,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1554,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1558,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1559,            start = str.length() + start; // remember start is negative,10,2,1,1,2,0,6,0,0,25,59,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1562,        if (start < 0) {,4,1,1,1,3,0,0,2,0,11,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1563,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1565,        if (start > str.length()) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1566,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1569,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1608,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1609,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1613,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1614,            end = str.length() + end; // remember end is negative,4,1,0,1,2,0,4,0,0,10,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1616,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1617,            start = str.length() + start; // remember start is negative,0,0,0,1,2,0,0,0,0,1,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1621,        if (end > str.length()) {,2,0,0,2,5,0,0,4,0,7,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1622,            end = str.length();,2,0,0,1,2,0,4,0,0,7,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1626,        if (start > end) {,0,0,0,1,3,0,0,0,0,1,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1627,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1630,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1631,            start = 0;,4,0,0,0,0,0,6,0,0,12,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1633,        if (end < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1634,            end = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1637,"        return str.substring(start, end);",0,0,0,1,2,1,8,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1663,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1664,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1666,        if (len < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1667,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1669,        if (str.length() <= len) {,2,1,0,2,5,0,4,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1670,            return str;,2,0,0,0,0,1,0,0,0,2,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1672,"        return str.substring(0, len);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1696,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1697,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1699,        if (len < 0) {,6,2,0,1,3,0,8,0,0,17,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1700,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1702,        if (str.length() <= len) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1703,            return str;,6,0,0,0,0,1,0,0,0,6,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1705,        return str.substring(str.length() - len);,0,0,0,2,4,1,0,0,0,7,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1733,        if (str == null) {,8,1,0,1,3,0,0,0,0,10,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1734,            return null;,2,1,1,0,0,1,0,0,0,7,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1736,        if (len < 0 || pos > str.length()) {,8,4,0,2,5,0,6,0,0,18,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1737,            return EMPTY;,4,0,0,0,0,1,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1739,        if (pos < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1740,            pos = 0;,6,0,0,0,0,0,0,4,0,11,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1742,        if (str.length() <= (pos + len)) {,2,0,0,3,7,0,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1743,            return str.substring(pos);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1745,"        return str.substring(pos, pos + len);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1776,        if (isEmpty(str) || separator == null) {,2,2,0,2,5,0,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1777,            return str;,8,0,0,0,0,1,0,0,0,9,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1779,        if (separator.length() == 0) {,2,0,0,2,5,1,4,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1780,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1782,        int pos = str.indexOf(separator);,2,0,0,1,2,0,16,0,0,18,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1783,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1784,            return str;,2,0,0,0,0,1,10,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1786,"        return str.substring(0, pos);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1816,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1817,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1819,        if (separator == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1820,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1822,        int pos = str.indexOf(separator);,2,0,0,1,2,0,6,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1823,        if (pos == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1824,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1826,        return str.substring(pos + separator.length());,0,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1855,        if (isEmpty(str) || isEmpty(separator)) {,2,1,0,3,7,0,14,2,0,19,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1856,            return str;,4,0,0,0,0,1,0,0,0,5,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1858,        int pos = str.lastIndexOf(separator);,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1859,        if (pos == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1860,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1862,"        return str.substring(0, pos);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1893,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1894,            return str;,0,4,0,0,0,1,12,0,0,16,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1896,        if (isEmpty(separator)) {,0,0,0,2,5,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1897,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1899,        int pos = str.lastIndexOf(separator);,2,0,0,1,2,0,6,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1900,        if (pos == -1 || pos == (str.length() - separator.length())) {,4,4,0,4,9,0,8,0,0,17,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1901,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1903,        return str.substring(pos + separator.length());,4,2,0,2,4,1,8,0,0,14,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1930,"        return substringBetween(str, tag, tag);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1961,        if (str == null || open == null || close == null) {,6,5,0,1,3,0,0,0,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1962,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1964,        int start = str.indexOf(open);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1965,        if (start != -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1966,"            int end = str.indexOf(close, start + open.length());",4,1,0,2,4,0,10,0,0,15,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1967,            if (end != -1) {,2,1,0,1,3,0,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1968,"                return str.substring(start + open.length(), end);",2,1,0,2,4,1,14,0,0,17,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1971,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1997,        if (str == null || isEmpty(open) || isEmpty(close)) {,8,5,1,3,7,0,4,0,0,19,53,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1998,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2000,        int strLen = str.length();,2,0,1,1,2,0,4,0,0,10,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2001,        if (strLen == 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2002,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,5,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2004,        int closeLen = close.length();,6,0,0,1,2,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2005,        int openLen = open.length();,2,0,0,1,2,0,4,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2006,        List list = new ArrayList();,2,0,0,1,2,0,0,4,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2007,        int pos = 0;,4,0,1,0,0,0,4,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2008,        while (pos < (strLen - closeLen)) {,10,2,0,2,5,1,0,2,0,15,35,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2009,"            int start = str.indexOf(open, pos);",0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2010,            if (start < 0) {,4,1,0,1,3,0,0,0,0,6,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2011,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2013,            start += openLen;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2014,"            int end = str.indexOf(close, start);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2015,            if (end < 0) {,4,1,0,1,3,0,6,0,0,11,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2016,                break;,4,1,0,0,0,0,6,0,0,11,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2018,"            list.add(str.substring(start, end));",0,0,0,2,4,0,12,0,0,12,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2019,            pos = end + closeLen;,6,1,0,0,0,0,0,0,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2020,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2021,        if (list.isEmpty()) {,4,3,0,2,5,0,4,0,0,11,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2022,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2024,        return (String[]) list.toArray(new String [list.size()]);,0,0,0,5,10,1,14,4,0,18,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2052,"        return substringBetween(str, tag, tag);",2,0,0,1,2,1,0,0,0,2,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2082,"        return substringBetween(str, open, close);",0,0,0,1,2,1,8,0,0,8,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2110,"        return split(str, null, -1);",0,0,0,1,2,1,12,0,0,15,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2138,"        return splitWorker(str, separatorChar, false);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2167,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2201,"        return splitWorker(str, separatorChars, max, false);",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2228,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2259,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,1,2,1,8,0,0,9,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2288,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0,0,0,1,2,1,0,0,0,4,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2321,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0,0,0,1,2,1,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2341,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2342,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2345,        int len = str.length();,8,1,0,1,2,0,4,0,0,13,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2347,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2348,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2351,        if ((separator == null) || (EMPTY.equals(separator))) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2353,"            return splitWorker(str, null, max, preserveAllTokens);",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2356,        int separatorLength = separator.length();,2,0,0,1,2,0,4,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2358,        ArrayList substrings = new ArrayList();,2,0,0,1,2,0,0,4,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2359,        int numberOfSubstrings = 0;,2,0,0,0,0,0,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2360,        int beg = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2361,        int end = 0;,2,1,0,0,0,0,0,0,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2362,        while (end < len) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2363,"            end = str.indexOf(separator, beg);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2365,            if (end > -1) {,2,1,0,1,3,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2366,                if (end > beg) {,8,4,0,1,3,0,4,0,0,16,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2367,                    numberOfSubstrings += 1;,2,0,1,0,0,0,0,0,0,7,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2369,                    if (numberOfSubstrings == max) {,4,1,0,1,3,0,0,0,0,5,32,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2370,                        end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2371,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2375,"                        substrings.add(str.substring(beg, end));",4,3,1,2,4,0,16,0,0,25,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2380,                        beg = end + separatorLength;,10,2,0,0,0,0,0,0,0,13,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2384,                    if (preserveAllTokens) {,6,0,0,1,3,0,0,2,0,9,24,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2385,                        numberOfSubstrings += 1;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2386,                        if (numberOfSubstrings == max) {,8,1,0,1,3,0,0,0,0,11,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2387,                            end = len;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2388,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2390,                            substrings.add(EMPTY);,0,0,0,1,2,0,6,0,0,6,22,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2393,                    beg = end + separatorLength;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2397,                substrings.add(str.substring(beg));,0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2398,                end = len;,2,0,0,0,0,0,6,0,0,8,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2402,        return (String[]) substrings.toArray(new String[substrings.size()]);,0,0,0,5,10,1,0,0,0,16,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2431,"        return splitWorker(str, null, -1, true);",0,0,0,1,2,1,4,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2467,"        return splitWorker(str, separatorChar, true);",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2485,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2486,            return null;,4,4,0,0,0,1,8,0,0,17,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2488,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2489,        if (len == 0) {,10,7,0,1,3,0,18,4,0,39,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2490,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2492,        List list = new ArrayList();,8,0,0,1,2,0,0,4,0,12,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2493,"        int i = 0, start = 0;",0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2494,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2495,        boolean lastMatch = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2496,        while (i < len) {,10,1,0,1,3,0,0,0,0,12,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2497,            if (str.charAt(i) == separatorChar) {,2,1,0,2,5,0,6,0,0,9,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2498,                if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2499,"                    list.add(str.substring(start, i));",4,1,0,2,4,0,0,0,0,6,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2500,                    match = false;,2,0,0,0,0,0,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2501,                    lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2503,                start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2504,                continue;,0,0,0,0,0,0,0,0,0,1,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2506,            lastMatch = false;,2,0,0,0,0,0,2,0,0,4,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2507,            match = true;,4,1,0,0,0,0,0,0,0,6,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2508,            i++;,4,0,0,0,0,0,0,0,0,6,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2510,        if (match || (preserveAllTokens && lastMatch)) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2511,"            list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2513,        return (String[]) list.toArray(new String[list.size()]);,2,0,0,5,10,1,14,4,0,20,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2550,"        return splitWorker(str, separatorChars, -1, true);",0,0,0,1,2,1,6,0,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2590,"        return splitWorker(str, separatorChars, max, true);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2612,        if (str == null) {,2,0,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2613,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2615,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2616,        if (len == 0) {,6,1,0,1,3,0,0,0,0,8,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2617,            return ArrayUtils.EMPTY_STRING_ARRAY;,8,1,0,0,0,1,0,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2619,        List list = new ArrayList();,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2620,        int sizePlus1 = 1;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2621,"        int i = 0, start = 0;",6,0,0,0,0,0,0,0,0,7,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2622,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2623,        boolean lastMatch = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2624,        if (separatorChars == null) {,10,3,0,1,3,0,0,0,0,13,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2626,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2627,                if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2628,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2629,                        lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2630,                        if (sizePlus1++ == max) {,10,2,0,1,3,0,8,2,0,24,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2631,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2632,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2634,"                        list.add(str.substring(start, i));",2,1,0,2,4,0,12,0,0,15,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2635,                        match = false;,4,1,0,0,0,0,0,0,0,7,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2637,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2638,                    continue;,0,0,0,0,0,0,6,0,0,6,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2640,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2641,                match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2642,                i++;,10,4,0,0,0,0,10,0,0,25,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2644,        } else if (separatorChars.length() == 1) {,0,0,0,2,6,0,0,0,0,8,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2646,            char sep = separatorChars.charAt(0);,2,0,0,1,2,0,4,0,0,6,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2647,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2648,                if (str.charAt(i) == sep) {,0,0,0,2,5,0,12,0,0,12,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2649,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2650,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2651,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,0,0,0,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2652,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2653,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2655,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2656,                        match = false;,2,1,0,0,0,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2658,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2659,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2661,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2662,                match = true;,2,0,0,0,0,0,0,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2663,                i++;,2,0,0,0,0,0,0,0,0,2,4,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2665,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2667,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2668,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,2,0,0,3,7,0,0,0,0,2,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2669,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2670,                        lastMatch = true;,2,0,0,0,0,0,4,0,0,6,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2671,                        if (sizePlus1++ == max) {,6,2,0,1,3,0,4,0,0,14,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2672,                            i = len;,4,1,0,0,0,0,0,0,0,5,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2673,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2675,"                        list.add(str.substring(start, i));",2,0,1,2,4,0,16,0,0,32,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2676,                        match = false;,4,0,0,0,0,0,0,0,0,6,14,0,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2678,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2679,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2681,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2682,                match = true;,2,0,0,0,0,0,0,0,0,4,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2683,                i++;,6,1,0,0,0,0,0,0,0,7,4,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2686,        if (match || (preserveAllTokens && lastMatch)) {,10,3,0,2,5,0,4,2,0,19,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2687,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2689,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,5,10,1,26,4,0,30,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2712,"        return splitByCharacterType(str, false);",0,0,0,1,2,1,4,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2740,"        return splitByCharacterType(str, true);",0,0,0,1,2,1,4,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2758,        if (str == null) {,8,2,0,1,3,0,0,0,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2759,            return null;,6,2,0,0,0,1,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2761,        if (str.length() == 0) {,0,1,0,2,5,0,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2762,            return ArrayUtils.EMPTY_STRING_ARRAY;,16,2,1,0,0,1,6,2,0,33,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2764,        char[] c = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2765,        List list = new ArrayList();,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2766,        int tokenStart = 0;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2767,        int currentType = Character.getType(c[tokenStart]);,4,0,1,2,4,0,4,0,0,13,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2768,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2769,            int type = Character.getType(c[pos]);,2,0,1,2,4,0,4,0,0,10,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2770,            if (type == currentType) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2771,                continue;,6,0,0,0,0,2,0,4,0,13,9,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2773,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,0,0,0,1,3,0,0,0,0,4,99,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2774,                int newTokenStart = pos - 1;,4,1,0,0,0,0,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2775,                if (newTokenStart != tokenStart) {,4,1,0,1,3,0,0,0,0,5,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2776,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2777,                    tokenStart = newTokenStart;,4,0,0,0,0,0,0,0,0,5,27,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2779,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2780,"                list.add(new String(c, tokenStart, pos - tokenStart));",0,0,0,2,4,0,0,0,0,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2781,                tokenStart = pos;,6,1,0,0,0,0,6,0,0,14,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2783,            currentType = type;,4,0,0,0,0,0,0,0,0,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2785,"        list.add(new String(c, tokenStart, c.length - tokenStart));",10,1,0,2,4,0,4,2,0,17,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2786,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,5,10,1,14,4,0,18,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2810,"        return join(array, null);",0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2834,"        return join(array, null);",0,0,0,1,2,1,4,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2860,        if (array == null) {,6,2,0,1,3,0,0,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2861,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2864,"        return join(array, separator, 0, array.length);",12,4,0,1,2,1,18,0,0,36,47,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2894,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2895,            return null;,6,0,0,0,0,1,4,0,0,10,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2897,        int bufSize = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2898,        if (bufSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2899,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2902,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,4,3,1,6,12,0,4,0,0,21,90,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2903,        StringBuffer buf = new StringBuffer(bufSize);,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2905,        for (int i = startIndex; i < endIndex; i++) {,12,1,0,1,3,0,8,2,0,24,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2906,            if (i > startIndex) {,4,1,0,1,3,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2907,                buf.append(separator);,12,1,0,1,2,0,0,0,0,14,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2909,            if (array[i] != null) {,2,1,0,2,5,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2910,                buf.append(array[i]);,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2913,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2941,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2942,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2944,"        return join(array, separator, 0, array.length);",0,0,0,1,2,1,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2975,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2976,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2978,        if (separator == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2979,            separator = EMPTY;,4,0,0,0,0,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2984,        int bufSize = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2985,        if (bufSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2986,            return EMPTY;,6,3,0,0,0,1,10,0,0,20,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2989,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),0,0,0,5,11,0,0,0,0,16,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2992,        StringBuffer buf = new StringBuffer(bufSize);,2,0,0,1,2,0,0,8,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2994,        for (int i = startIndex; i < endIndex; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2995,            if (i > startIndex) {,4,0,0,1,3,0,0,4,0,8,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2996,                buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2998,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2999,                buf.append(array[i]);,0,0,1,2,4,0,4,0,0,8,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3002,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3022,        if (iterator == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3023,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3025,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3026,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3028,        Object first = iterator.next();,4,0,0,1,2,0,4,2,0,10,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3029,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3030,            return ObjectUtils.toString(first);,0,0,0,1,2,1,6,0,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3034,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",4,0,0,1,2,0,0,4,0,8,83,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3035,        if (first != null) {,4,3,0,1,3,0,6,2,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3036,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3039,        while (iterator.hasNext()) {,2,0,0,2,5,0,4,0,0,6,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3040,            buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3041,            Object obj = iterator.next();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3042,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3043,                buf.append(obj);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3045,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3047,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3066,        if (iterator == null) {,8,1,0,1,3,0,0,0,0,10,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3067,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3069,        if (!iterator.hasNext()) {,2,0,0,2,5,0,4,0,0,8,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3070,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3072,        Object first = iterator.next();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3073,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3074,            return ObjectUtils.toString(first);,0,0,0,1,2,1,6,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3078,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",2,0,0,1,2,0,0,4,0,6,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3079,        if (first != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3080,            buf.append(first);,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3083,        while (iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3084,            if (separator != null) {,2,1,0,1,3,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3085,                buf.append(separator);,4,0,0,1,2,0,0,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3087,            Object obj = iterator.next();,2,0,0,1,2,0,16,2,0,20,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3088,            if (obj != null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3089,                buf.append(obj);,0,0,0,1,2,0,6,0,0,6,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3091,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3092,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3110,        if (collection == null) {,0,0,0,1,3,0,6,0,0,6,25,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3111,            return null;,4,1,0,0,0,1,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3113,"        return join(collection.iterator(), separator);",0,0,0,2,4,1,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3131,        if (collection == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3132,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3134,"        return join(collection.iterator(), separator);",0,0,0,2,4,1,6,0,0,8,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3166,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3167,            return null;,0,0,0,0,0,1,10,0,0,10,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3169,"        return CharSetUtils.delete(str, "" \t\r\n\b"");",0,0,0,1,2,1,6,0,0,7,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3187,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3188,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3190,        int sz = str.length();,14,2,0,1,2,0,14,0,0,31,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3191,        char[] chs = new char[sz];,2,0,1,2,4,0,18,0,0,22,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3192,        int count = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3193,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,8,0,0,19,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3194,            if (!Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3195,                chs[count++] = str.charAt(i);,4,0,1,2,4,0,12,0,0,21,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3198,        if (count == sz) {,4,0,0,1,3,0,0,0,0,6,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3199,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3201,"        return new String(chs, 0, count);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3231,        if (isEmpty(str) || isEmpty(remove)) {,4,0,0,3,7,0,0,0,0,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3232,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3234,        if (str.startsWith(remove)){,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3235,            return str.substring(remove.length());,0,0,0,2,4,1,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3237,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3266,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3267,            return str;,4,0,0,0,0,1,0,0,0,4,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3269,"        if (startsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,6,0,0,7,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3270,            return str.substring(remove.length());,0,0,0,2,4,1,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3272,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3300,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3301,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3303,        if (str.endsWith(remove)) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3304,"            return str.substring(0, str.length() - remove.length());",0,0,0,3,6,1,0,0,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3306,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3334,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3335,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3337,"        if (endsWithIgnoreCase(str, remove)) {",2,0,0,2,5,0,6,2,0,10,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3338,"            return str.substring(0, str.length() - remove.length());",0,1,0,3,6,1,12,0,0,13,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3340,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3367,        if (isEmpty(str) || isEmpty(remove)) {,2,0,0,3,7,0,0,0,0,2,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3368,            return str;,4,0,0,0,0,1,6,0,0,10,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3370,"        return replace(str, remove, EMPTY, -1);",4,4,0,1,2,1,16,0,0,27,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3393,        if (isEmpty(str) || str.indexOf(remove) == -1) {,0,0,0,3,7,0,0,0,0,10,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3394,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3396,        char[] chars = str.toCharArray();,0,0,0,2,4,0,0,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3397,        int pos = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3398,        for (int i = 0; i < chars.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3399,            if (chars[i] != remove) {,0,0,0,2,5,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3400,                chars[pos++] = chars[i];,8,1,1,2,4,0,4,0,0,21,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3403,"        return new String(chars, 0, pos);",8,0,0,1,2,1,8,4,0,21,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3432,"        return replace(text, searchString, replacement, 1);",0,1,0,1,2,1,20,0,0,21,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3459,"        return replace(text, searchString, replacement, -1);",0,0,0,1,2,1,8,0,0,9,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3491,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,4,4,0,3,7,0,8,0,0,18,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3492,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3494,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3495,"        int end = text.indexOf(searchString, start);",0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3496,        if (end == -1) {,4,2,0,1,3,0,0,0,0,7,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3497,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3499,        int replLength = searchString.length();,2,0,0,1,2,0,4,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3500,        int increase = replacement.length() - replLength;,4,1,0,1,2,1,6,0,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3501,        increase = (increase < 0 ? 0 : increase);,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3502,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3503,        StringBuffer buf = new StringBuffer(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3504,        while (end != -1) {,2,1,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3505,"            buf.append(text.substring(start, end)).append(replacement);",0,0,0,3,6,0,16,0,0,16,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3506,            start = end + replLength;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3507,            if (--max == 0) {,2,1,0,1,3,0,6,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3508,                break;,6,3,0,0,0,0,0,0,0,9,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3510,"            end = text.indexOf(searchString, start);",0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3512,        buf.append(text.substring(start));,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3513,        return buf.toString();,2,1,1,1,2,1,4,0,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3556,"        return replaceEach(text, searchList, replacementList, false, 0);",2,1,0,1,2,1,8,0,0,12,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3607,        int timeToLive = searchList == null ? 0 : searchList.length;,8,1,0,0,0,0,6,0,0,15,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3608,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",0,0,0,1,2,1,10,0,0,11,72,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3666,        if (text == null || text.length() == 0 || searchList == null || ,4,8,0,1,3,0,4,0,0,16,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3669,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3673,        if (timeToLive < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3674,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",0,0,0,1,2,0,0,0,0,3,92,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3677,        int searchLength = searchList.length;,2,0,0,0,0,0,0,0,0,2,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3678,        int replacementLength = replacementList.length;,10,1,0,0,0,0,0,0,0,11,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3681,        if (searchLength != replacementLength) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3682,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0,0,0,0,1,0,0,2,0,3,83,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3689,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,2,0,1,2,4,0,0,0,0,4,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3692,        int textIndex = -1;,2,0,0,0,0,0,6,0,0,9,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3693,        int replaceIndex = -1;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3694,        int tempIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3698,        for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3699,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,6,5,1,2,5,0,0,0,0,19,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3702,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3704,            tempIndex = text.indexOf(searchList[i]);,2,0,1,2,4,0,4,0,0,11,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3707,            if (tempIndex == -1) {,8,3,0,1,3,0,0,0,0,12,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3708,                noMoreMatchesForReplIndex[i] = true;,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3710,                if (textIndex == -1 || tempIndex < textIndex) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3711,                    textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3712,                    replaceIndex = i;,4,0,0,0,0,0,0,0,0,5,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3719,        if (textIndex == -1) {,4,1,0,1,3,0,0,0,0,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3720,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3723,        int start = 0;,2,0,0,0,0,0,10,0,0,12,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3726,        int increase = 0;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3729,        for (int i = 0; i < searchList.length; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3730,            int greater = replacementList[i].length() - searchList[i].length();,2,1,1,4,8,0,4,0,0,15,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3731,            if (greater > 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3732,                increase += 3 * greater; // assume 3 matches,4,1,0,0,0,0,0,0,0,6,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3736,"        increase = Math.min(increase, text.length() / 5);",4,1,0,2,4,0,10,4,0,20,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3738,        StringBuffer buf = new StringBuffer(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3740,        while (textIndex != -1) {,2,1,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3742,            for (int i = start; i < textIndex; i++) {,12,1,0,1,3,0,4,0,0,18,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3743,                buf.append(text.charAt(i));,4,1,1,2,4,0,10,0,0,24,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3745,            buf.append(replacementList[replaceIndex]);,2,1,0,2,4,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3747,            start = textIndex + searchList[replaceIndex].length();,4,1,1,2,4,0,2,0,0,12,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3749,            textIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3750,            replaceIndex = -1;,2,0,0,0,0,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3751,            tempIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3754,            for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3755,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3758,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3760,"                tempIndex = text.indexOf(searchList[i], start);",2,0,1,2,4,0,6,0,0,13,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3763,                if (tempIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3764,                    noMoreMatchesForReplIndex[i] = true;,8,2,1,1,2,0,0,0,0,17,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3766,                    if (textIndex == -1 || tempIndex < textIndex) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3767,                        textIndex = tempIndex;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3768,                        replaceIndex = i;,4,0,0,0,0,0,0,0,0,5,17,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3775,        int textLength = text.length();,4,1,0,1,2,0,4,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3776,        for (int i = start; i < textLength; i++) {,0,0,0,1,3,0,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3777,            buf.append(text.charAt(i));,0,1,0,2,4,0,22,0,0,23,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3779,        String result = buf.toString();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3780,        if (!repeat) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3781,            return result;,2,0,0,0,0,1,0,0,0,3,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3784,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",0,0,0,1,2,1,0,0,0,4,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3810,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3811,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3813,"        return str.replace(searchChar, replaceChar);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3853,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3854,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3856,        if (replaceChars == null) {,4,1,0,1,3,0,4,0,0,9,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3857,            replaceChars = EMPTY;,4,0,0,0,0,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3859,        boolean modified = false;,10,1,0,0,0,0,0,0,0,13,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3860,        int replaceCharsLength = replaceChars.length();,4,1,0,1,2,0,4,0,0,9,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3861,        int strLength = str.length();,16,3,0,1,2,0,8,4,0,32,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3862,        StringBuffer buf = new StringBuffer(strLength);,6,0,1,1,2,0,0,4,0,15,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3863,        for (int i = 0; i < strLength; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3864,            char ch = str.charAt(i);,2,0,0,1,2,0,10,0,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3865,            int index = searchChars.indexOf(ch);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3866,            if (index >= 0) {,4,1,0,1,3,0,4,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3867,                modified = true;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3868,                if (index < replaceCharsLength) {,4,1,0,1,3,0,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3869,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,10,0,0,10,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3872,                buf.append(ch);,0,0,0,1,2,0,6,0,0,6,15,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3875,        if (modified) {,4,0,0,1,3,0,0,0,0,4,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3876,            return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3878,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3909,        return new StringBuffer(start + overlay.length() + text.length() - end + 1),0,0,0,3,6,1,0,0,0,10,75,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3946,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3947,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3949,        if (overlay == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3950,            overlay = EMPTY;,6,1,0,0,0,0,0,0,0,9,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3952,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3953,        if (start < 0) {,8,1,0,1,3,0,0,0,0,9,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3954,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3956,        if (start > len) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3957,            start = len;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3959,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3960,            end = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3962,        if (end > len) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3963,            end = len;,4,0,0,0,0,0,0,0,0,5,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3965,        if (start > end) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3966,            int temp = start;,2,1,0,0,0,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3967,            start = end;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3968,            end = temp;,2,1,0,0,0,0,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3970,        return new StringBuffer(len + start - end + overlay.length() + 1),0,0,0,2,4,1,0,0,0,7,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4005,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4006,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4009,        if (str.length() == 1) {,2,1,0,2,5,0,8,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4010,            char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4011,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4012,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4014,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4017,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4018,        char last = str.charAt(lastIdx);,4,1,1,1,2,0,6,0,0,15,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4020,        if (last == CharUtils.LF) {,8,1,0,1,3,0,0,0,0,9,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4021,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4022,                lastIdx--;,4,0,0,0,0,0,6,0,0,11,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4024,        } else if (last != CharUtils.CR) {,10,2,0,1,4,0,4,0,0,18,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4025,            lastIdx++;,8,1,0,0,0,0,4,0,0,15,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4027,"        return str.substring(0, lastIdx);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4057,        if (isEmpty(str) || separator == null) {,2,2,0,2,5,0,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4058,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4060,        if (str.endsWith(separator)) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4061,"            return str.substring(0, str.length() - separator.length());",0,0,0,3,6,1,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4063,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4077,"        return chompLast(str, ""\n"");",0,0,1,1,2,1,4,0,0,13,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4091,        if (str.length() == 0) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4092,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4094,        String sub = str.substring(str.length() - sep.length());,8,3,0,3,6,0,16,2,0,29,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4095,        if (sep.equals(sub)) {,0,0,0,2,5,0,6,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4096,"            return str.substring(0, str.length() - sep.length());",0,0,0,3,6,1,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4098,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4114,        int idx = str.lastIndexOf(sep);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4115,        if (idx == str.length() - sep.length()) {,2,2,0,3,7,0,8,0,0,12,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4116,            return sep;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4117,        } else if (idx != -1) {,2,1,0,1,4,0,0,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4118,            return str.substring(idx);,0,0,0,1,2,1,10,0,0,10,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4120,            return EMPTY;,4,1,0,0,0,1,0,0,0,5,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4136,        int idx = str.indexOf(sep);,14,4,0,1,2,0,0,0,0,18,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4137,        if (idx == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4138,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4140,        return str.substring(idx + sep.length());,2,1,0,2,4,1,8,0,0,11,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4156,        int idx = str.indexOf(sep);,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4157,        if (idx == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4158,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4160,"        return str.substring(0, idx + sep.length());",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4189,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4190,            return null;,2,2,0,0,0,1,4,0,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4192,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,7,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4193,        if (strLen < 2) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4194,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4196,        int lastIdx = strLen - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4197,"        String ret = str.substring(0, lastIdx);",2,0,0,1,2,0,6,2,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4198,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4199,        if (last == CharUtils.LF) {,6,1,0,1,3,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4200,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4201,"                return ret.substring(0, lastIdx - 1);",2,1,0,1,2,1,4,0,0,7,37,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4204,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4218,        int lastIdx = str.length() - 1;,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4219,        if (lastIdx <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4220,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4222,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4223,        if (last == CharUtils.LF) {,8,2,0,1,3,0,0,0,0,10,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4224,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,1,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4225,                lastIdx--;,2,0,0,0,0,0,0,0,0,3,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4228,            lastIdx++;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4230,"        return str.substring(0, lastIdx);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4252,        return StringEscapeUtils.escapeJava(str);,0,0,0,1,2,1,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4278,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4279,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4281,        if (repeat <= 0) {,8,2,0,1,3,0,10,0,0,20,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4282,            return EMPTY;,12,2,0,0,0,1,6,0,0,22,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4284,        int inputLength = str.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4285,        if (repeat == 1 || inputLength == 0) {,4,3,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4286,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4288,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4289,"            return padding(repeat, str.charAt(0));",0,0,0,2,4,1,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4292,        int outputLength = inputLength * repeat;,8,2,0,0,0,0,0,0,0,10,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4293,        switch (inputLength) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4295,                char ch = str.charAt(0);,8,5,0,1,2,0,4,0,0,17,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4296,                char[] output1 = new char[outputLength];,2,0,1,2,4,0,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4297,                for (int i = repeat - 1; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4298,                    output1[i] = ch;,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4300,                return new String(output1);,2,0,0,1,2,1,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4302,                char ch0 = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4303,                char ch1 = str.charAt(1);,2,0,0,1,2,0,4,0,0,6,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4304,                char[] output2 = new char[outputLength];,2,0,1,2,4,0,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4305,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",18,3,0,1,3,1,0,0,0,24,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4306,                    output2[i] = ch0;,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4307,                    output2[i + 1] = ch1;,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4309,                return new String(output2);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4311,                StringBuffer buf = new StringBuffer(outputLength);,4,1,1,1,2,0,4,0,0,14,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4312,                for (int i = 0; i < repeat; i++) {,10,1,0,1,3,0,0,0,0,12,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4313,                    buf.append(str);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4315,                return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4343,        if (repeat < 0) {,4,1,0,1,3,0,0,0,0,5,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4344,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",6,1,1,1,2,0,0,2,0,15,79,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4346,        final char[] buf = new char[repeat];,0,0,0,2,4,0,0,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4347,        for (int i = 0; i < buf.length; i++) {,0,0,0,1,3,0,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4348,            buf[i] = padChar;,2,0,1,1,2,0,0,0,0,7,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4350,        return new String(buf);,10,1,0,1,2,1,0,2,0,14,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4373,"        return rightPad(str, size, ' ');",2,1,0,1,2,1,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4398,        if (str == null) {,6,2,0,1,3,0,0,0,0,8,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4399,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4401,        int pads = size - str.length();,4,1,1,1,2,0,8,0,0,22,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4402,        if (pads <= 0) {,2,1,0,1,3,0,6,0,0,9,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4403,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4405,        if (pads > PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4406,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,0,0,0,7,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4408,"        return str.concat(padding(pads, padChar));",0,0,0,2,4,1,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4435,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4436,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4438,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4439,"            padStr = "" "";",2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4441,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4442,        int strLen = str.length();,4,1,0,1,2,0,0,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4443,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4444,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4445,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4447,        if (padLen == 1 && pads <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4448,"            return rightPad(str, size, padStr.charAt(0));",2,0,0,2,4,1,0,0,0,3,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4451,        if (pads == padLen) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4452,            return str.concat(padStr);,0,0,0,1,2,1,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4453,        } else if (pads < padLen) {,2,0,0,1,4,0,0,0,0,2,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4454,"            return str.concat(padStr.substring(0, pads));",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4456,            char[] padding = new char[pads];,2,0,0,2,4,0,4,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4457,            char[] padChars = padStr.toCharArray();,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4458,            for (int i = 0; i < pads; i++) {,10,2,0,1,3,0,0,0,0,13,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4459,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4461,            return str.concat(new String(padding));,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4485,"        return leftPad(str, size, ' ');",0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4510,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4511,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4513,        int pads = size - str.length();,2,0,0,1,2,0,0,0,0,3,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4514,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4515,            return str; // returns original String when possible,8,1,1,0,0,1,0,0,0,12,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4517,        if (pads > PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4518,"            return leftPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,12,0,0,12,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4520,"        return padding(pads, padChar).concat(str);",0,0,0,2,4,1,10,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4547,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4548,            return null;,2,0,0,0,0,1,0,4,0,6,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4550,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4551,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4553,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4554,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4555,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4556,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4557,            return str; // returns original String when possible,8,0,0,0,0,2,0,4,0,13,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4559,        if (padLen == 1 && pads <= PAD_LIMIT) {,2,1,0,1,3,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4560,"            return leftPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4563,        if (pads == padLen) {,6,2,0,1,3,0,0,0,0,8,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4564,            return padStr.concat(str);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4565,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4566,"            return padStr.substring(0, pads).concat(str);",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4568,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4569,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4570,            for (int i = 0; i < pads; i++) {,14,1,0,1,3,0,4,0,0,20,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4571,                padding[i] = padChars[i % padLen];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4573,            return new String(padding).concat(str);,8,1,0,2,4,1,4,2,0,17,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4586,        return str == null ? 0 : str.length();,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4615,"        return center(str, size, ' ');",0,0,1,1,2,1,8,0,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4643,        if (str == null || size <= 0) {,6,3,0,1,3,0,0,2,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4644,            return str;,4,0,0,0,0,1,4,0,0,8,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4646,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4647,        int pads = size - strLen;,4,1,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4648,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4649,            return str;,4,0,0,0,0,1,0,0,0,4,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4651,"        str = leftPad(str, strLen + pads / 2, padChar);",6,2,0,1,2,0,6,0,0,15,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4652,"        str = rightPad(str, size, padChar);",4,1,0,1,2,0,0,0,0,5,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4653,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4683,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4684,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4686,        if (isEmpty(padStr)) {,4,1,1,2,5,0,4,0,0,14,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4687,"            padStr = "" "";",4,0,0,0,0,0,0,0,0,6,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4689,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4690,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4691,        if (pads <= 0) {,4,2,0,1,3,0,0,0,0,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4692,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4694,"        str = leftPad(str, strLen + pads / 2, padStr);",6,2,0,1,2,0,6,0,0,15,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4695,"        str = rightPad(str, size, padStr);",4,1,0,1,2,0,8,0,0,14,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4696,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4721,        if (str == null) {,8,1,0,1,3,0,0,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4722,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4724,        return str.toUpperCase();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4744,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4745,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4747,        return str.toUpperCase(locale);,2,0,0,1,2,1,0,0,0,4,31,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4770,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4771,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4773,        return str.toLowerCase();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4793,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4794,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4796,        return str.toLowerCase(locale);,0,0,0,1,2,1,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4821,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4822,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4824,        return new StringBuffer(strLen),2,0,0,1,2,1,0,2,0,4,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4840,        return capitalize(str);,0,0,0,1,2,1,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4865,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4866,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4868,        return new StringBuffer(strLen),2,0,0,1,2,1,8,2,0,13,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4884,        return uncapitalize(str);,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4916,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4917,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4919,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4921,        char ch = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4922,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4923,            ch = str.charAt(i);,4,0,0,1,2,0,0,0,0,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4924,            if (Character.isUpperCase(ch)) {,10,1,0,2,5,1,6,4,0,23,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4925,                ch = Character.toLowerCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4926,            } else if (Character.isTitleCase(ch)) {,4,1,1,2,6,0,6,0,0,18,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4927,                ch = Character.toLowerCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4928,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,4,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4929,                ch = Character.toUpperCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4931,            buffer.append(ch);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4933,        return buffer.toString();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4949,        return WordUtils.capitalize(str);,0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4974,        if (isEmpty(str) || isEmpty(sub)) {,0,0,0,3,7,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4975,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4977,        int count = 0;,2,1,0,0,0,0,8,0,0,13,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4978,        int idx = 0;,12,3,0,0,0,0,0,2,0,17,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4979,"        while ((idx = str.indexOf(sub, idx)) != -1) {",2,1,0,3,7,0,8,0,0,13,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4980,            count++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4981,            idx += sub.length();,2,0,0,1,2,0,4,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4983,        return count;,8,3,0,0,0,1,0,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5007,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5008,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5010,        int sz = str.length();,2,0,0,1,2,0,4,0,0,7,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5011,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5012,            if (Character.isLetter(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5013,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5016,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5041,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5042,            return false;,6,1,0,0,0,1,0,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5044,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5045,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5046,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,19,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5047,                return false;,4,0,0,0,0,1,0,4,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5050,        return true;,4,0,0,0,0,1,0,0,0,5,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5074,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5075,            return false;,8,1,0,0,0,1,0,0,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5077,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5078,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5079,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5080,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5083,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5108,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5109,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5111,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5112,        for (int i = 0; i < sz; i++) {,10,2,0,1,3,0,6,0,0,19,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5113,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,4,3,0,6,13,0,16,0,0,25,84,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5114,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5117,        return true;,2,0,0,0,0,1,6,2,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5146,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5147,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5149,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5150,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5151,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,8,2,0,3,7,0,10,0,0,23,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5152,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5155,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5180,        if (str == null) {,10,1,0,1,3,0,0,0,0,12,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5181,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5183,        int sz = str.length();,4,1,0,1,2,0,4,0,0,9,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5184,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5185,            if (Character.isDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5186,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5189,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5216,        if (str == null) {,8,4,0,1,3,0,0,0,0,12,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5217,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5219,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5220,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5221,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,19,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5222,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5225,        return true;,2,1,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5248,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5249,            return false;,4,0,0,0,0,1,0,4,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5251,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5252,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,10,0,0,10,30,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5253,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5254,                return false;,0,0,0,0,0,1,6,0,0,7,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5257,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5300,        return str == null ? defaultStr : str;,4,3,0,0,0,1,8,0,0,15,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5320,        return StringUtils.isEmpty(str) ? defaultStr : str;,0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5340,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5341,            return null;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5343,        return new StringBuffer(str).reverse().toString();,2,0,0,3,6,1,4,2,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5366,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5367,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5371,"        String[] strs = split(str, separatorChar);",14,2,0,2,4,0,20,4,0,43,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5372,        ArrayUtils.reverse(strs);,4,1,0,1,2,0,6,0,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5373,"        return join(strs, separatorChar);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5399,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5400,            return null;,6,0,0,0,0,1,6,0,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5404,"        String[] strs = split(str, separatorChars);",2,0,0,2,4,0,6,2,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5405,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5406,        if (separatorChars == null) {,2,1,0,1,3,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5407,"            return join(strs, ' ');",0,0,0,1,2,1,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5409,"        return join(strs, separatorChars);",0,0,0,1,2,1,6,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5447,"        return abbreviate(str, 0, maxWidth);",0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5486,        if (str == null) {,8,2,0,1,3,0,0,0,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5487,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5489,        if (maxWidth < 4) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5490,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,0,0,2,0,3,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5492,        if (str.length() <= maxWidth) {,2,1,0,2,5,0,4,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5493,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5495,        if (offset > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5496,            offset = str.length();,2,0,0,1,2,0,4,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5498,        if ((str.length() - offset) < (maxWidth - 3)) {,0,0,0,4,9,0,0,0,0,13,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5499,            offset = str.length() - (maxWidth - 3);,4,2,0,2,4,0,4,0,0,11,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5501,        if (offset <= 4) {,4,2,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5502,"            return str.substring(0, maxWidth - 3) + ""..."";",2,2,0,1,2,1,4,0,0,9,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5504,        if (maxWidth < 7) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5505,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",6,1,0,1,2,0,4,2,0,15,82,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5507,        if ((offset + (maxWidth - 3)) < str.length()) {,0,0,0,4,9,0,0,0,0,13,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5508,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",2,2,0,2,4,1,8,0,0,13,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5510,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",8,6,0,3,6,1,8,0,0,24,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5541,        if (str1 == null) {,8,4,0,1,3,0,0,0,0,13,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5542,            return str2;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5544,        if (str2 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5545,            return str1;,8,1,0,0,0,1,0,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5547,"        int at = indexOfDifference(str1, str2);",4,0,0,1,2,0,6,0,0,10,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5548,        if (at == -1) {,2,1,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5549,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5551,        return str2.substring(at);,2,0,0,1,2,1,6,0,0,8,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5578,        if (str1 == str2) {,4,1,0,1,3,0,0,0,0,6,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5579,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5581,        if (str1 == null || str2 == null) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5582,            return 0;,6,2,0,0,0,1,4,0,0,12,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5585,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,8,3,0,3,7,0,8,0,0,21,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5586,            if (str1.charAt(i) != str2.charAt(i)) {,0,0,0,3,7,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5587,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5590,        if (i < str2.length() || i < str1.length()) {,4,3,0,3,7,0,8,0,0,15,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5591,            return i;,4,0,0,0,0,1,0,0,0,5,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5593,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5628,        if (strs == null || strs.length <= 1) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5629,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5631,        boolean anyStringNull = false;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5632,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5633,        int arrayLen = strs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5634,        int shortestStrLen = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5635,        int longestStrLen = 0;,4,0,0,0,0,0,0,0,0,5,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5640,        for (int i = 0; i < arrayLen; i++) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5641,            if (strs[i] == null) {,0,1,1,2,5,0,0,0,0,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5642,                anyStringNull = true;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5643,                shortestStrLen = 0;,2,0,0,0,0,0,0,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5645,                allStringsNull = false;,4,1,0,0,0,0,0,0,0,7,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5646,"                shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",0,0,0,3,6,0,0,0,0,9,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5647,"                longestStrLen = Math.max(strs[i].length(), longestStrLen);",2,0,1,3,6,0,8,0,0,15,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5652,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,6,3,0,2,5,0,8,2,0,20,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5653,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5657,        if (shortestStrLen == 0) {,2,1,0,1,3,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5658,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5662,        int firstDiff = -1;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5663,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,20,2,0,1,3,0,0,0,0,24,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5664,            char comparisonChar = strs[0].charAt(stringPos);,2,0,1,2,4,0,4,0,0,8,48,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5665,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,4,3,0,1,3,0,0,0,0,7,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5666,                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {,2,1,1,3,7,0,4,0,0,11,57,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5667,                    firstDiff = stringPos;,10,0,0,0,0,0,4,0,0,15,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5668,                    break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5671,            if (firstDiff != -1) {,2,1,0,1,3,0,0,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5672,                break;,2,1,0,0,0,0,0,0,0,3,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5676,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,6,3,0,1,3,0,6,0,0,16,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5680,            return shortestStrLen;,0,0,0,0,0,1,0,0,0,1,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5682,        return firstDiff;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5719,        if (strs == null || strs.length == 0) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5720,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5722,        int smallestIndexOfDiff = indexOfDifference(strs);,0,0,0,1,2,0,0,0,0,3,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5723,        if (smallestIndexOfDiff == -1) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5725,            if (strs[0] == null) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5726,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5728,            return strs[0];,2,1,1,1,2,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5729,        } else if (smallestIndexOfDiff == 0) {,4,1,1,1,4,0,0,0,0,7,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5731,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5734,"            return strs[0].substring(0, smallestIndexOfDiff);",0,0,1,2,4,1,4,0,0,6,49,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5775,        if (s == null || t == null) {,6,8,1,1,3,0,0,0,0,22,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5776,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5796,        int n = s.length(); // length of s,4,1,0,1,2,0,4,0,0,9,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5797,        int m = t.length(); // length of t,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5799,        if (n == 0) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5800,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5801,        } else if (m == 0) {,2,1,0,1,4,0,0,0,0,3,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5802,            return n;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5805,        if (n > m) {,0,0,0,1,3,0,4,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5807,            String tmp = s;,8,1,0,0,0,0,6,4,0,19,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5808,            s = t;,6,1,0,0,0,0,0,0,0,8,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5809,            t = tmp;,4,0,0,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5810,            n = m;,6,1,0,0,0,0,0,0,0,8,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5811,            m = t.length();,4,0,0,1,2,0,4,0,0,9,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5814,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5815,"        int d[] = new int[n+1]; // cost array, horizontally",4,1,0,2,4,0,0,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5826,        for (i = 0; i<=n; i++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5827,            p[i] = i;,0,0,0,1,2,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5830,        for (j = 1; j<=m; j++) {,10,1,1,1,3,0,2,0,0,24,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5831,            t_j = t.charAt(j-1);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5832,            d[0] = j;,0,0,0,1,2,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5834,            for (i=1; i<=n; i++) {,16,2,0,1,3,0,0,0,0,21,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5835,                cost = s.charAt(i-1)==t_j ? 0 : 1;,6,2,0,1,2,0,4,0,0,13,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5837,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",6,5,1,6,12,0,8,0,0,32,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5841,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5842,            p = d;,4,4,0,0,0,0,8,0,0,18,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5843,            d = _d;,4,0,0,0,0,0,0,0,0,6,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5848,        return p[n];,0,0,1,1,2,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5897,"        return startsWith(str, prefix, false);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5922,"        return startsWith(str, prefix, true);",0,0,0,1,2,1,6,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5937,        if (str == null || prefix == null) {,12,4,0,1,3,0,0,0,0,16,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5938,            return (str == null && prefix == null);,6,3,0,1,2,1,0,0,0,9,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5940,        if (prefix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5941,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5943,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",0,0,0,2,4,1,12,0,0,12,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5971,"        return endsWith(str, suffix, false);",0,0,0,1,2,1,12,0,0,12,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5997,"        return endsWith(str, suffix, true);",0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6012,        if (str == null || suffix == null) {,4,3,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6013,            return (str == null && suffix == null);,4,3,0,1,2,1,0,0,0,7,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6015,        if (suffix.length() > str.length()) {,0,0,0,3,7,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6016,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6018,        int strOffset = str.length() - suffix.length();,0,0,0,2,4,0,0,2,0,4,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6019,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,2,4,1,0,0,0,7,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,44,      super();,0,0,0,1,2,0,0,0,0,1,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,45,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,142,"        return wrap(str, wrapLength, null, false);",0,0,0,1,2,1,6,0,0,8,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,164,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,165,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,167,        if (newLineStr == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,168,            newLineStr = SystemUtils.LINE_SEPARATOR;,6,0,0,0,0,0,0,0,0,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,170,        if (wrapLength < 1) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,171,            wrapLength = 1;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,173,        int inputLineLength = str.length();,2,0,0,1,2,0,4,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,174,        int offset = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,175,        StringBuffer wrappedLine = new StringBuffer(inputLineLength + 32);,0,0,0,1,2,0,0,0,0,3,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,177,        while ((inputLineLength - offset) > wrapLength) {,6,2,0,2,5,0,0,0,0,8,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,178,            if (str.charAt(offset) == ' ') {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,179,                offset++;,2,0,0,0,0,0,0,0,0,3,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,180,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,182,"            int spaceToWrapAt = str.lastIndexOf(' ', wrapLength + offset);",6,1,0,1,2,0,4,0,0,12,62,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,184,            if (spaceToWrapAt >= offset) {,4,1,0,1,3,0,0,0,0,5,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,186,"                wrappedLine.append(str.substring(offset, spaceToWrapAt));",0,0,0,2,4,0,12,0,0,12,57,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,187,                wrappedLine.append(newLineStr);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,188,                offset = spaceToWrapAt + 1;,4,1,0,0,0,0,0,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,192,                if (wrapLongWords) {,2,0,0,1,3,0,0,0,0,2,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,194,"                    wrappedLine.append(str.substring(offset, wrapLength + offset));",4,1,0,2,4,0,10,0,0,15,63,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,195,                    wrappedLine.append(newLineStr);,2,1,1,1,2,0,6,0,0,13,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,196,                    offset += wrapLength;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,199,"                    spaceToWrapAt = str.indexOf(' ', wrapLength + offset);",6,1,0,1,2,0,4,0,0,13,54,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,200,                    if (spaceToWrapAt >= 0) {,2,1,0,1,3,0,0,0,0,3,25,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,201,"                        wrappedLine.append(str.substring(offset, spaceToWrapAt));",2,0,0,2,4,0,4,2,0,8,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,202,                        wrappedLine.append(newLineStr);,0,0,0,1,2,0,6,0,0,6,31,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,203,                        offset = spaceToWrapAt + 1;,4,1,0,0,0,0,0,0,0,6,27,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,205,                        wrappedLine.append(str.substring(offset));,0,0,0,2,4,0,10,0,0,10,42,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,206,                        offset = inputLineLength;,4,0,0,0,0,0,0,0,0,5,25,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,210,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,213,        wrappedLine.append(str.substring(offset));,2,0,0,2,4,0,14,0,0,16,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,215,        return wrappedLine.toString();,0,0,0,1,2,1,4,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,243,"        return capitalize(str, null);",0,0,0,1,2,1,4,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,276,        int delimLen = (delimiters == null ? -1 : delimiters.length);,8,1,0,1,2,0,0,0,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,277,        if (str == null || str.length() == 0 || delimLen == 0) {,4,5,0,2,5,0,14,0,0,24,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,278,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,280,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,281,        StringBuffer buffer = new StringBuffer(strLen);,6,0,0,1,2,0,0,4,0,12,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,282,        boolean capitalizeNext = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,283,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,284,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,286,"            if (isDelimiter(ch, delimiters)) {",0,0,0,2,5,0,6,0,0,6,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,287,                buffer.append(ch);,0,0,0,1,2,0,6,0,0,7,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,288,                capitalizeNext = true;,2,0,0,0,0,0,0,0,0,4,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,289,            } else if (capitalizeNext) {,2,0,0,1,4,0,0,0,0,2,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,290,                buffer.append(Character.toTitleCase(ch));,0,0,0,2,4,0,10,0,0,10,41,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,291,                capitalizeNext = false;,2,0,0,0,0,0,0,0,0,4,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,293,                buffer.append(ch);,2,1,0,1,2,0,12,0,0,15,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,296,        return buffer.toString();,0,0,0,1,2,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,320,"        return capitalizeFully(str, null);",0,0,0,1,2,1,4,0,0,5,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,350,        int delimLen = (delimiters == null ? -1 : delimiters.length);,10,1,0,1,2,0,0,0,0,12,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,351,        if (str == null || str.length() == 0 || delimLen == 0) {,0,0,0,2,5,0,0,0,0,7,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,352,            return str;,2,0,0,0,0,1,0,2,0,4,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,354,        str = str.toLowerCase();,2,0,0,1,2,0,4,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,355,"        return capitalize(str, delimiters);",0,0,0,1,2,1,6,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,377,"        return uncapitalize(str, null);",0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,406,        int delimLen = (delimiters == null ? -1 : delimiters.length);,8,1,0,1,2,0,0,0,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,407,        if (str == null || str.length() == 0 || delimLen == 0) {,4,5,0,2,5,0,4,0,0,13,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,408,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,410,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,411,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,412,        boolean uncapitalizeNext = true;,4,0,0,0,0,0,0,2,0,7,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,413,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,414,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,416,"            if (isDelimiter(ch, delimiters)) {",0,0,0,2,5,0,6,0,0,6,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,417,                buffer.append(ch);,0,0,0,1,2,0,6,0,0,6,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,418,                uncapitalizeNext = true;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,419,            } else if (uncapitalizeNext) {,0,0,0,1,4,0,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,420,                buffer.append(Character.toLowerCase(ch));,0,0,0,2,4,0,10,0,0,10,41,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,421,                uncapitalizeNext = false;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,423,                buffer.append(ch);,2,0,0,1,2,0,6,0,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,426,        return buffer.toString();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,454,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,455,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,457,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,459,        boolean whitespace = true;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,460,        char ch = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,461,        char tmp = 0;,2,0,0,0,0,0,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,463,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,464,            ch = str.charAt(i);,0,0,0,1,2,0,10,0,0,10,19,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,465,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,0,6,0,0,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,466,                tmp = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,467,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,0,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,468,                tmp = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,32,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,469,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,470,                if (whitespace) {,2,0,0,1,3,0,0,0,0,2,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,471,                    tmp = Character.toTitleCase(ch);,4,0,1,1,2,0,10,0,0,20,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,473,                    tmp = Character.toUpperCase(ch);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,476,                tmp = ch;,4,0,0,0,0,0,0,0,0,5,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,478,            buffer.append(tmp);,0,0,0,1,2,0,6,0,0,6,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,479,            whitespace = Character.isWhitespace(ch);,2,0,0,1,2,0,6,0,0,9,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,481,        return buffer.toString();,0,0,0,1,2,1,12,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,508,"        return initials(str, null);",0,0,0,1,2,1,4,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,539,        if (str == null || str.length() == 0) {,2,3,0,2,5,0,4,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,540,            return str;,4,1,0,0,0,1,0,0,0,5,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,542,        if (delimiters != null && delimiters.length == 0) {,6,3,0,1,3,0,6,0,0,16,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,543,"            return """";",0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,545,        int strLen = str.length();,12,2,0,1,2,0,4,0,0,19,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,546,        char[] buf = new char[strLen / 2 + 1];,4,2,0,2,4,0,0,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,547,        int count = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,548,        boolean lastWasGap = true;,6,0,0,0,0,0,6,0,0,13,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,549,        for (int i = 0; i < strLen; i++) {,12,2,1,1,3,0,0,0,0,19,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,550,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,552,"            if (isDelimiter(ch, delimiters)) {",0,0,0,2,5,0,6,0,0,6,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,553,                lastWasGap = true;,2,0,0,0,0,0,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,554,            } else if (lastWasGap) {,2,0,0,1,4,0,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,555,                buf[count++] = ch;,4,0,1,1,2,0,0,0,0,8,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,556,                lastWasGap = false;,2,0,0,0,0,0,0,0,0,4,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,561,"        return new String(buf, 0, count);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,573,        if (delimiters == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,574,            return Character.isWhitespace(ch);,0,0,0,1,2,1,6,0,0,6,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,576,"        for (int i = 0, isize = delimiters.length; i < isize; i++) {",16,1,0,1,3,0,0,0,0,19,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,577,            if (ch == delimiters[i]) {,2,1,1,2,5,0,0,0,0,7,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,578,                return true;,0,0,1,0,0,1,0,0,0,6,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,581,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,607,        if (str == null) {,4,2,0,1,3,0,4,0,0,10,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,608,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,610,        if (str.length() == 0) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,611,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,618,        if (upper == -1 || upper > str.length()) {,4,3,0,2,5,0,4,0,0,12,42,4,0.0,1,1
defect4j,lang,org/apache/commons/lang/WordUtils,45,619,            upper = str.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,622,        if (upper < lower) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,623,            upper = lower;,4,0,0,0,0,0,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,626,        StringBuffer result = new StringBuffer();,2,0,0,1,2,0,0,4,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,627,"        int index = StringUtils.indexOf(str, "" "", lower);",2,0,0,1,2,0,8,0,0,11,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,628,        if (index == -1) {,4,1,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,629,"            result.append(str.substring(0, upper));",0,0,0,2,4,0,10,0,0,10,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,631,            if (upper != str.length()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,632,                result.append(StringUtils.defaultString(appendToEnd));,2,1,0,2,4,0,10,0,0,13,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,634,        } else if (index > upper) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,635,"            result.append(str.substring(0, upper));",0,0,0,2,4,0,10,0,0,10,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,636,            result.append(StringUtils.defaultString(appendToEnd));,0,0,0,2,4,0,0,0,0,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,638,"            result.append(str.substring(0, index));",0,0,0,2,4,0,10,0,0,10,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,639,            result.append(StringUtils.defaultString(appendToEnd));,0,0,0,2,4,0,10,0,0,10,54,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,641,        return result.toString();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,244,                            out.write('\\');,6,1,0,1,2,0,4,0,0,12,16,3,1.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,245,                        out.write('/');,2,0,1,1,2,0,14,2,0,23,15,3,1.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,246,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,86,"        return escapeJavaStyleString(str, false);",2,0,0,1,2,4,8,2,0,17,41,1,0.33333,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,155,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,159,            StringWriter writer = new StringWriter(str.length() * 2);,2,1,0,2,4,0,4,4,0,11,57,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,160,"            escapeJavaStyleString(writer, str, escapeSingleQuotes);",0,0,0,1,2,0,0,0,0,3,55,4,0.25,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,161,            return writer.toString();,6,0,0,1,2,1,8,0,0,14,25,3,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,179,        if (out == null) {,6,1,0,1,3,3,2,2,0,16,18,1,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,182,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,186,        sz = str.length();,2,0,0,1,2,0,4,0,0,7,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,187,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,188,            char ch = str.charAt(i);,2,0,0,1,2,3,2,2,0,10,24,2,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,191,            if (ch > 0xfff) {,2,1,0,1,3,0,0,0,0,3,17,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,193,            } else if (ch > 0xff) {,0,0,0,1,4,0,0,0,0,5,23,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,195,            } else if (ch > 0x7f) {,2,1,0,1,4,0,0,0,0,3,23,8,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,197,            } else if (ch < 32) {,6,2,0,1,4,3,2,2,0,16,21,1,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,228,                switch (ch) {,0,0,0,1,3,0,0,0,0,4,13,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,248,                        out.write(ch);,0,0,0,1,2,0,0,0,0,3,14,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,253,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,158,        return nullText;,2,0,0,0,0,1,0,0,0,2,16,4,1.33333,1,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1183,        if (width > 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1184,            ensureCapacity(size + width);,4,1,0,1,2,0,2,0,0,7,29,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1185,            String str = (obj == null ? getNullText() : obj.toString());,0,0,0,3,6,0,0,0,0,9,60,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1186,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1227,        if (width > 0) {,6,3,0,1,3,0,8,0,0,18,16,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1228,            ensureCapacity(size + width);,6,1,0,1,2,0,8,2,0,17,29,5,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1229,            String str = (obj == null ? getNullText() : obj.toString());,4,1,0,3,6,0,6,2,0,14,60,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1230,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.25,1,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,372,            return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,381,                isEquals = lhs.equals(rhs);,4,0,0,1,2,0,6,2,0,13,27,4,0.05263,1,1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,368,        if (isEquals == false) {,2,1,0,1,3,0,0,0,0,4,24,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,371,        if (lhs == rhs) {,6,1,0,1,3,0,6,0,0,15,17,3,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,374,        if (lhs == null || rhs == null) {,4,3,0,1,3,0,0,0,0,7,33,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,378,        Class lhsClass = lhs.getClass();,2,0,0,1,2,0,4,2,0,8,32,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,379,        if (!lhsClass.isArray()) {,6,1,0,2,5,0,4,0,0,12,26,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,408,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.02222,1,1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,146,            if (numerator==Integer.MIN_VALUE ||,6,2,0,0,1,0,0,0,0,8,35,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,150,            numerator = -numerator;,2,0,0,0,0,0,0,4,0,6,23,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,151,            denominator = -denominator;,4,0,0,0,0,0,0,0,0,6,27,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,578,        if (u>0) { u=-u; } // make u negative,0,0,0,2,4,0,4,0,0,5,37,5,0.125,1,1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,579,        if (v>0) { v=-v; } // make v negative,0,0,0,2,4,0,0,0,0,6,37,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,581,        int k=0;,0,0,0,0,0,0,0,0,0,0,8,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,582,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,6,7,0,3,7,0,0,0,0,13,72,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,585,        if (k==31) {,2,1,0,1,3,0,0,0,0,3,12,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,590,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,8,3,0,3,6,0,0,0,0,12,38,5,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,596,            while ((t&1)==0) { // while t is even..,4,2,0,2,5,3,6,2,0,17,39,1,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,600,            if (t>0) {,2,1,0,1,3,0,0,0,0,3,10,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,601,                u = -t;,0,0,0,0,0,0,0,0,0,0,7,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,603,                v = t;,4,0,0,0,0,0,0,0,0,5,6,8,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,606,            t = (v - u)/2;,6,2,0,1,2,0,0,0,0,9,14,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,609,        } while (t!=0);,2,1,0,1,3,0,0,0,0,3,15,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,610,        return -u*(1<<k); // gcd is u*2^k,2,0,0,1,2,4,0,0,0,5,33,2,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,571,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,2,1,0,3,7,0,0,0,0,3,43,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,572,            return 1;,6,0,0,0,0,1,8,0,0,14,9,3,0.11111,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1708,"        public Pair(Object obj1, Object obj2) {",6,0,0,1,3,1,0,4,0,11,39,3,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1709,            mObj1 = obj1;,4,2,0,0,0,0,0,0,0,6,13,10,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1710,            mObj2 = obj2;,0,0,0,0,0,0,0,0,0,0,13,4,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1711,        },4,1,0,0,1,0,0,0,0,5,1,8,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1738,            return,0,0,0,0,0,0,0,0,0,0,6,4,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,772,            return new UnpaddedNumberField(field);,2,0,0,1,2,1,0,2,0,4,38,6,1.33333,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,954,        return mLocale;,4,0,0,0,0,1,4,0,0,9,15,3,1.33333,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1185,        UnpaddedNumberField(int field) {,0,0,0,1,3,0,0,0,0,4,32,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1186,            mField = field;,2,0,0,0,0,3,0,4,0,9,15,2,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1187,        },0,0,0,0,1,0,0,0,0,1,1,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1176,        static final UnpaddedNumberField INSTANCE_YEAR = new UnpaddedNumberField(Calendar.YEAR);,6,0,0,1,2,2,0,4,0,12,88,3,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1193,            return 4;,0,0,0,0,0,1,0,0,0,1,9,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,234,"        return getDateInstance(style, null, null);",0,0,0,1,2,1,0,0,0,4,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,293,                locale = Locale.getDefault();,0,0,0,1,2,0,0,0,0,3,29,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,408,"        return getDateTimeInstance(dateStyle, timeStyle, null, null);",0,0,0,1,2,1,6,0,0,7,61,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,425,"        return getDateTimeInstance(dateStyle, timeStyle, null, locale);",4,0,0,1,2,1,8,0,0,13,63,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,461,"        Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));",12,2,0,3,6,0,0,8,0,22,70,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,462,        if (timeZone != null) {,2,1,0,1,3,0,0,0,0,3,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,465,        if (locale != null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,466,"            key = new Pair(key, locale);",0,0,0,1,2,0,0,0,0,3,28,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,469,        FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);,8,5,0,2,4,0,10,4,0,28,73,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,470,        if (format == null) {,4,2,0,1,3,0,10,0,0,16,21,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,471,            if (locale == null) {,4,1,0,1,3,2,4,2,0,13,21,2,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,472,                locale = Locale.getDefault();,0,0,0,1,2,0,0,0,0,3,29,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,475,"                SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,",2,0,0,1,3,0,8,4,0,14,100,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,477,                String pattern = formatter.toPattern();,6,0,0,1,2,3,4,4,0,18,39,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,478,"                format = getInstance(pattern, timeZone, locale);",2,0,0,1,2,0,8,0,0,11,48,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,479,"                cDateTimeInstanceCache.put(key, format);",2,0,0,1,2,2,8,4,0,16,40,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,483,            },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,485,        return format;,4,1,0,0,0,1,8,0,0,13,14,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,672,                if (tokenLen >= 4) {,2,1,0,1,3,0,0,0,0,3,20,7,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,675,"                    rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);",12,0,0,1,2,0,0,2,0,15,81,9,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,677,                break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1717,            if (this == obj) {,0,0,0,1,3,0,6,0,0,6,18,9,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1721,            if (!(obj instanceof Pair)) {,0,0,0,2,5,0,0,0,0,7,29,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1725,            Pair key = (Pair)obj;,2,1,0,1,2,0,0,0,0,4,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1727,            return,2,0,0,0,0,3,0,4,0,9,6,2,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1538,"        TimeZoneNameRule(TimeZone timeZone, boolean timeZoneForced, Locale locale, int style) {",10,0,1,1,3,0,10,4,0,26,87,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1539,            mTimeZone = timeZone;,6,0,0,0,0,3,2,0,0,13,21,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1540,            mTimeZoneForced = timeZoneForced;,4,0,0,0,0,0,0,0,0,5,33,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1541,            mLocale = locale;,4,0,0,0,0,0,0,0,0,5,17,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1542,            mStyle = style;,4,0,0,0,0,0,0,0,0,5,15,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1544,            if (timeZoneForced) {,2,0,0,1,3,0,0,0,0,2,21,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1548,                mStandard = null;,4,0,0,0,0,1,12,0,0,18,17,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1549,                mDaylight = null;,6,1,0,0,0,1,0,2,0,13,17,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1551,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1557,            if (mTimeZoneForced) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1559,            } else if (mStyle == TimeZone.SHORT) {,0,0,0,1,4,0,0,0,0,5,38,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1560,                return 4;,0,0,0,0,0,1,0,0,0,1,9,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,44,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,45,    },4,0,0,0,1,0,0,0,0,4,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,64,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,65,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,67,        return (bool.booleanValue() ? Boolean.FALSE : Boolean.TRUE);,0,0,0,2,4,1,0,0,0,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,87,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,1,1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,88,            return false;,0,0,0,0,0,1,4,0,0,5,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,90,        return bool.booleanValue() ? true : false;,0,0,0,1,2,1,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,108,        return !isTrue(bool);,2,0,0,1,2,1,8,0,0,11,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,126,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,127,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,129,        return bool.booleanValue() ? false : true;,0,0,0,1,2,1,4,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,147,        return !isFalse(bool);,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,165,        return bool ? Boolean.TRUE : Boolean.FALSE;,10,0,0,0,0,1,0,0,0,10,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,183,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,184,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,186,        return bool.booleanValue() ? true : false;,0,0,0,1,2,1,4,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,203,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,204,            return valueIfNull;,4,0,0,0,0,4,0,4,0,11,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,206,        return bool.booleanValue() ? true : false;,0,0,0,1,2,1,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,226,        return value == 0 ? false : true;,2,1,0,0,0,1,0,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,244,        return value == 0 ? Boolean.FALSE : Boolean.TRUE;,10,1,0,0,0,1,0,0,0,11,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,264,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,265,            return null;,4,1,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,267,        return value.intValue() == 0 ? Boolean.FALSE : Boolean.TRUE;,8,1,0,1,2,1,4,0,0,13,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,287,        if (value == trueValue) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,288,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,289,        } else if (value == falseValue) {,6,1,0,1,4,0,10,0,0,18,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,290,            return false;,2,0,0,0,0,1,8,2,0,13,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,293,"        throw new IllegalArgumentException(""The Integer did not match either specified value"");",0,0,0,1,2,0,0,2,0,3,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,316,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,317,            if (trueValue == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,318,                return true;,4,0,0,0,0,1,0,0,0,6,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,319,            } else if (falseValue == null) {,4,1,0,1,4,2,0,4,0,11,32,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,320,                return false;,0,0,0,0,0,1,0,0,0,1,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,322,        } else if (value.equals(trueValue)) {,4,0,0,2,6,0,6,0,0,11,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,323,            return true;,0,0,0,0,0,1,0,0,0,1,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,324,        } else if (value.equals(falseValue)) {,0,0,0,2,6,0,6,0,0,6,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,325,            return false;,2,1,0,0,0,1,0,0,0,4,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,328,"        throw new IllegalArgumentException(""The Integer did not match either specified value"");",2,0,0,1,2,0,4,0,0,6,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,348,        if (value == trueValue) {,4,2,0,1,3,0,12,0,0,20,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,349,            return Boolean.TRUE;,6,0,0,0,0,4,0,4,0,13,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,350,        } else if (value == falseValue) {,0,0,0,1,4,0,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,351,            return Boolean.FALSE;,8,0,0,0,0,1,0,0,0,9,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,352,        } else if (value == nullValue) {,4,1,0,1,4,0,0,0,0,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,353,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,356,"        throw new IllegalArgumentException(""The Integer did not match any specified value"");",0,0,0,1,2,0,0,2,0,3,84,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,379,        if (value == null) {,4,2,0,1,3,0,8,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,380,            if (trueValue == null) {,2,0,0,1,3,3,0,0,0,5,24,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,381,                return Boolean.TRUE;,8,0,0,0,0,4,0,2,0,13,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,382,            } else if (falseValue == null) {,2,1,0,1,4,0,0,0,0,3,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,383,                return Boolean.FALSE;,4,0,0,0,0,1,4,0,0,8,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,384,            } else if (nullValue == null) {,2,1,0,1,4,0,0,0,0,3,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,385,                return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,387,        } else if (value.equals(trueValue)) {,0,0,0,2,6,0,0,0,0,8,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,388,            return Boolean.TRUE;,4,0,0,0,0,1,0,0,0,4,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,389,        } else if (value.equals(falseValue)) {,0,0,0,2,6,0,6,0,0,6,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,390,            return Boolean.FALSE;,6,1,0,0,0,1,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,391,        } else if (value.equals(nullValue)) {,0,0,0,2,6,0,6,0,0,6,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,392,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,395,"        throw new IllegalArgumentException(""The Integer did not match any specified value"");",0,0,0,1,2,0,4,0,0,5,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,413,        return bool ? 1 : 0;,2,0,0,0,0,1,0,0,0,2,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,429,        return bool ? NumberUtils.INTEGER_ONE : NumberUtils.INTEGER_ZERO;,8,1,0,0,0,1,0,0,0,10,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,447,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,448,            return null;,10,0,0,0,0,1,6,8,0,26,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,450,        return bool.booleanValue() ? NumberUtils.INTEGER_ONE : NumberUtils.INTEGER_ZERO;,0,0,0,1,2,1,0,0,0,4,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,467,        return bool ? trueValue : falseValue;,2,0,0,0,0,1,4,0,0,6,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,486,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,487,            return nullValue;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,489,        return bool.booleanValue() ? trueValue : falseValue;,6,0,0,1,2,1,10,2,0,18,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,508,        return bool ? trueValue : falseValue;,6,0,0,0,0,1,0,0,0,6,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,530,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,531,            return nullValue;,2,0,0,0,0,1,0,2,0,4,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,533,        return bool.booleanValue() ? trueValue : falseValue;,10,1,0,1,2,4,20,0,0,37,52,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,563,"        if (""true"".equalsIgnoreCase(str)) {",0,0,0,2,5,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,564,            return Boolean.TRUE;,12,1,0,0,0,1,0,2,0,16,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,565,"        } else if (""false"".equalsIgnoreCase(str)) {",2,0,0,2,6,0,0,0,0,2,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,566,            return Boolean.FALSE;,4,0,0,0,0,1,0,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,567,"        } else if (""on"".equalsIgnoreCase(str)) {",0,0,0,2,6,0,0,0,0,8,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,568,            return Boolean.TRUE;,0,1,0,0,0,1,8,0,0,10,20,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,569,"        } else if (""off"".equalsIgnoreCase(str)) {",0,0,0,2,6,0,4,0,0,5,41,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,570,            return Boolean.FALSE;,6,0,0,0,0,1,2,2,0,10,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,571,"        } else if (""yes"".equalsIgnoreCase(str)) {",0,0,0,2,6,0,0,0,0,8,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,572,            return Boolean.TRUE;,8,1,0,0,0,6,8,6,0,33,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,573,"        } else if (""no"".equalsIgnoreCase(str)) {",0,0,0,2,6,0,12,0,0,13,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,574,            return Boolean.FALSE;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,577,        return null;,4,3,0,0,0,1,4,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,603,        if (str == null) {,4,3,0,1,3,0,12,0,0,20,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,604,            if (trueString == null) {,2,1,0,1,3,0,0,0,0,3,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,605,                return Boolean.TRUE;,4,0,0,0,0,1,0,0,0,4,20,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,606,            } else if (falseString == null) {,0,0,0,1,4,0,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,607,                return Boolean.FALSE;,4,0,0,0,0,1,0,0,0,4,21,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,608,            } else if (nullString == null) {,0,0,0,1,4,0,0,0,0,5,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,609,                return null;,0,0,1,0,0,1,4,0,0,13,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,611,        } else if (str.equals(trueString)) {,4,6,0,2,6,0,12,0,0,22,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,612,            return Boolean.TRUE;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,613,        } else if (str.equals(falseString)) {,0,0,0,2,6,0,6,0,0,6,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,614,            return Boolean.FALSE;,14,1,1,0,0,1,0,2,0,22,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,615,        } else if (str.equals(nullString)) {,6,1,0,2,6,0,6,0,0,14,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,616,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,619,"        throw new IllegalArgumentException(""The String did not match any specified value"");",8,1,0,1,2,0,0,2,0,13,83,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,656,"        if (str == ""true"") {",2,1,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,657,            return true;,0,1,0,0,0,1,4,0,0,6,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,659,        if (str == null) {,6,0,0,1,3,3,4,2,0,16,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,660,            return false;,8,0,0,0,0,4,0,4,0,16,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,662,        switch (str.length()) {,2,0,0,2,5,0,0,0,0,2,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,664,                char ch0 = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,665,                char ch1 = str.charAt(1);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,666,                return ,2,0,0,0,0,1,0,0,0,3,6,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,671,                char ch = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,672,                if (ch == 'y') {,2,1,0,1,3,0,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,673,                    return ,0,0,0,0,0,1,0,0,0,1,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,677,                if (ch == 'Y') {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,678,                    return ,0,0,0,0,0,1,0,0,0,1,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,684,                char ch = str.charAt(0);,2,1,0,1,2,0,0,0,0,3,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,685,                if (ch == 't') {,0,0,1,1,3,0,4,0,0,13,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,686,                    return ,4,1,0,0,0,1,4,0,0,11,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,691,                if (ch == 'T') {,2,1,0,1,3,0,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,692,                    return ,0,0,0,0,0,1,6,2,0,8,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,699,        return false;,4,0,0,0,0,1,0,0,0,6,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,732,        if (str == null) {,6,1,0,1,3,0,0,0,0,8,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,733,            if (trueString == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,734,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,735,            } else if (falseString == null) {,0,0,0,1,4,0,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,736,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,738,        } else if (str.equals(trueString)) {,0,0,0,2,6,0,6,0,0,6,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,739,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,740,        } else if (str.equals(falseString)) {,0,0,0,2,6,0,0,0,0,8,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,741,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,744,"        throw new IllegalArgumentException(""The String did not match either specified value"");",0,0,0,1,2,0,0,2,0,3,86,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,764,"        return toString(bool, ""true"", ""false"", null);",4,0,0,1,2,1,4,0,0,12,45,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,782,"        return toString(bool, ""on"", ""off"", null);",6,2,0,1,2,1,4,0,0,15,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,800,"        return toString(bool, ""yes"", ""no"", null);",6,0,0,1,2,4,6,4,0,23,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,822,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,823,            return nullString;,2,0,0,0,0,1,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,825,        return bool.booleanValue() ? trueString : falseString;,0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,844,"        return toString(bool, ""true"", ""false"");",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,861,"        return toString(bool, ""on"", ""off"");",4,0,0,1,2,1,0,0,0,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,878,"        return toString(bool, ""yes"", ""no"");",2,0,0,1,2,2,0,0,0,4,35,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,897,        return bool ? trueString : falseString;,0,0,0,0,0,1,0,0,0,1,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,918,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,919,"            throw new IllegalArgumentException(""The Array must not be null"");",6,1,0,1,2,0,6,0,0,13,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,920,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,921,"            throw new IllegalArgumentException(""Array is empty"");",0,0,0,1,2,0,0,0,0,3,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,925,        int trueCount = 0;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,926,        for (int i = 0; i < array.length; i++) {,2,0,0,1,3,0,0,0,0,3,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,929,            if (array[i]) {,0,0,1,2,5,0,0,0,0,4,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,930,                if (trueCount < 1) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,931,                    trueCount++;,6,1,0,0,0,0,0,0,0,8,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,933,                    return false;,6,1,0,0,0,3,0,0,0,10,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,939,        return trueCount == 1;,0,0,0,0,0,1,0,0,0,1,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,958,        if (array == null) {,2,0,0,1,3,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,959,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,960,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,961,"            throw new IllegalArgumentException(""Array is empty"");",0,0,0,1,2,0,0,2,0,3,53,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,963,        boolean[] primitive = null;,4,0,0,1,2,0,4,0,0,9,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,965,            primitive = ArrayUtils.toPrimitive(array);,2,0,0,1,2,3,2,0,0,8,42,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,968,        },4,2,0,0,1,0,0,0,0,7,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,966,        } catch (NullPointerException ex) {,4,1,0,1,4,0,6,0,0,11,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,967,"            throw new IllegalArgumentException(""The array must not contain any null elements"");",0,0,0,1,2,0,0,0,0,3,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,969,        return xor(primitive) ? Boolean.TRUE : Boolean.FALSE;,8,0,0,1,2,1,4,0,0,12,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,150,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,173,"            throw new IllegalArgumentException(""The Writer must not be null"");",0,0,0,1,2,0,4,2,0,8,66,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,229,                        out.write('\\');,2,0,0,1,2,3,4,2,0,12,16,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,230,"                        out.write('""');",0,0,0,1,2,0,4,0,0,5,15,13,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,231,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,223,                        if (escapeSingleQuote) {,0,0,0,1,3,0,0,0,0,4,24,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,226,                        out.write('\'');,2,0,0,1,2,0,4,0,0,8,16,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,227,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,149,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,153,            StringWriter writer = new StringWriter(str.length() * 2);,4,1,0,2,4,0,4,4,0,13,57,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,154,"            escapeJavaStyleString(writer, str, escapeSingleQuotes);",0,0,0,1,2,0,0,0,0,3,55,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,155,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,172,        if (out == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,175,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,179,        sz = str.length();,2,0,0,1,2,0,4,0,0,7,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,180,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,181,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,184,            if (ch > 0xfff) {,4,2,0,1,3,0,8,2,0,16,17,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,186,            } else if (ch > 0xff) {,2,1,0,1,4,0,0,0,0,3,23,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,188,            } else if (ch > 0x7f) {,2,1,0,1,4,0,0,0,0,3,23,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,190,            } else if (ch < 32) {,0,0,0,1,4,0,0,0,0,5,21,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,221,                switch (ch) {,0,0,0,1,3,0,0,0,0,4,13,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,237,                        out.write(ch);,4,0,0,1,2,0,0,0,0,6,14,12,0.33333,1,1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,242,    },0,0,0,0,1,0,0,0,0,1,1,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,676,                        if (field == DateUtils.SEMI_MONTH) {,6,1,0,1,3,0,0,0,0,7,36,12,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,689,"                            val.add(fields[i][0], 1);",0,0,0,3,6,0,0,0,0,9,25,4,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,437,        if (date == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,440,        Calendar gval = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,441,        gval.setTime(date);,0,0,0,1,2,0,6,0,0,6,19,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,442,"        modify(gval, field, true);",0,0,0,1,2,0,0,0,0,3,26,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,443,        return gval.getTime();,0,0,0,1,2,1,4,0,0,4,22,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,621,        if (val.get(Calendar.YEAR) > 280000000) {,4,1,0,2,5,0,4,0,0,9,41,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,625,        if (field == Calendar.MILLISECOND) {,0,0,0,1,3,0,0,0,0,4,36,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,635,        Date date = val.getTime();,2,0,0,1,2,0,4,2,0,8,26,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,636,        long time = date.getTime();,0,0,0,1,2,0,0,0,0,3,27,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,637,        boolean done = false;,2,0,0,0,0,0,0,0,0,3,21,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,640,        int millisecs = val.get(Calendar.MILLISECOND);,0,0,0,1,2,0,0,0,0,3,46,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,641,        if (!round || millisecs < 500) {,4,2,0,1,3,0,0,0,0,7,32,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,649,        int seconds = val.get(Calendar.SECOND);,0,0,0,1,2,0,0,0,0,3,39,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,650,        if (!done && (!round || seconds < 30)) {,8,3,0,2,5,0,4,0,0,18,40,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,658,        int minutes = val.get(Calendar.MINUTE);,6,0,0,1,2,0,4,0,0,10,39,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,659,        if (!done && (!round || minutes < 30)) {,0,0,0,2,5,0,0,0,0,7,40,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,660,            time = time - (minutes * 60000L);,8,2,0,1,2,0,0,2,0,13,33,1,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,664,        if (date.getTime() != time) {,4,0,0,2,5,2,0,2,0,8,29,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,665,            date.setTime(time);,2,0,0,1,2,3,6,4,0,15,19,1,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,666,            val.setTime(date);,0,0,0,1,2,0,0,0,0,3,18,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,670,        boolean roundUp = false;,0,0,0,0,0,0,0,0,0,0,24,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,671,        for (int i = 0; i < fields.length; i++) {,0,0,0,1,3,0,0,0,0,4,41,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,672,            for (int j = 0; j < fields[i].length; j++) {,8,1,1,2,5,0,0,0,0,14,44,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,673,                if (fields[i][j] == field) {,0,0,0,3,7,0,0,0,0,10,28,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,675,                    if (round && roundUp) {,0,0,0,1,3,0,0,0,0,4,23,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,692,                    return;,0,0,0,0,0,1,6,0,0,6,7,13,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,696,            int offset = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,697,            boolean offsetSet = false;,2,0,0,0,0,3,0,4,0,9,26,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,699,            switch (field) {,2,0,0,1,3,0,0,2,0,4,16,10,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,729,            if (!offsetSet) {,2,0,0,1,3,0,6,0,0,9,17,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,730,                int min = val.getActualMinimum(fields[i][0]);,2,0,1,3,6,0,4,0,0,10,45,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,731,                int max = val.getActualMaximum(fields[i][0]);,2,0,1,3,6,0,4,0,0,10,45,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,733,                offset = val.get(fields[i][0]) - min;,4,1,1,3,6,0,4,0,0,14,37,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,735,                roundUp = offset > ((max - min) / 2);,10,4,0,2,4,0,8,2,0,25,37,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,738,            if (offset != 0) {,2,1,0,1,3,0,0,0,0,3,18,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,739,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);",0,0,0,6,12,0,0,0,0,18,54,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,9,1.0,1,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,110,            if (str.charAt(2) != '_') {,8,5,0,2,5,0,4,0,0,18,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,113,            char ch3 = str.charAt(3);,2,0,0,1,2,0,4,0,0,6,25,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,114,            char ch4 = str.charAt(4);,2,0,0,1,2,0,4,0,0,6,25,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,115,            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {,8,7,0,1,3,0,0,0,0,19,55,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,95,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,98,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,99,        if (len != 2 && len != 5 && len < 7) {,8,6,0,1,3,0,8,0,0,24,38,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,102,        char ch0 = str.charAt(0);,4,1,0,1,2,0,4,0,0,10,25,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,103,        char ch1 = str.charAt(1);,2,0,0,1,2,0,4,0,0,6,25,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,104,        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {,8,7,0,1,3,0,0,0,0,19,55,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,107,        if (len == 2) {,0,0,0,1,3,0,0,0,0,4,15,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,179,        stopTime = System.currentTimeMillis();,2,0,0,1,2,0,4,0,0,7,38,4,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,180,        this.runningState = STATE_SUSPENDED;,4,0,0,0,0,0,0,0,0,5,36,4,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,181,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,176,        if(this.runningState != STATE_RUNNING) {,4,1,0,1,3,0,0,0,0,5,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,210,            return this.stopTime - this.startTime;,4,1,0,0,0,1,0,0,0,5,38,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,631,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",6,0,0,1,2,0,4,0,0,11,57,7,0.07692,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,632,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.07692,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,167,"        return getInstance(pattern, null, null);",0,0,0,1,2,1,4,0,0,5,40,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,553,            locale = Locale.getDefault();,4,0,0,1,2,3,6,2,0,17,29,1,0.0625,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1083,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1084,    },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,87,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,105,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,122,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",0,0,0,1,2,0,0,0,0,3,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,138,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,154,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",2,1,0,1,2,0,0,0,0,3,92,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,175,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,191,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,207,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,224,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,241,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,258,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",0,0,0,1,2,0,0,0,0,3,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,275,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,291,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,0,0,0,1,2,0,0,0,0,3,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,307,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,4,0,0,1,2,6,4,6,0,20,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,324,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",0,0,0,1,2,0,0,0,0,3,86,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,342,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,3,6,2,0,16,86,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,360,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",4,0,0,1,2,6,2,6,0,19,92,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,377,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",6,0,0,1,2,3,2,2,0,15,98,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,394,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,102,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,411,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",0,0,0,1,2,0,0,0,0,3,104,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,428,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = ,2,0,0,0,0,3,0,2,0,7,64,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,445,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",4,0,0,1,2,6,2,2,0,15,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,461,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,0,0,1,2,3,2,2,0,10,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,477,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",2,0,0,1,2,3,2,2,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,495,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",0,0,0,1,2,0,0,0,0,3,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,512,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,529,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,546,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",6,0,0,1,2,3,6,4,0,20,108,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,563,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",0,0,0,1,2,0,0,0,0,3,110,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,580,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,597,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",0,0,0,1,2,0,0,0,0,3,82,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,614,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,630,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,8,2,0,17,66,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,646,"    public static final String OS_NAME = getSystemProperty(""os.name"");",2,0,0,1,2,3,2,2,0,10,66,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,662,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",0,0,0,1,2,0,0,0,0,3,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,679,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,698,    public static final String USER_COUNTRY = ,2,0,0,0,0,3,0,2,0,7,41,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,717,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,733,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,751,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,767,"    public static final String USER_NAME = getSystemProperty(""user.name"");",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,784,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,798,    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();,0,0,0,1,2,0,0,0,0,3,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,818,    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();,2,0,0,1,2,3,2,0,0,7,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,833,    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();,2,0,0,1,2,3,2,0,0,7,65,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,846,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",2,1,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,854,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,862,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,870,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,878,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,886,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,904,"    public static final boolean IS_OS_AIX = getOSMatches(""AIX"");",8,1,0,1,2,3,6,0,0,20,60,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,914,"    public static final boolean IS_OS_HP_UX = getOSMatches(""HP-UX"");",2,0,0,1,2,3,2,0,0,8,64,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,924,"    public static final boolean IS_OS_IRIX = getOSMatches(""Irix"");",2,1,0,1,2,0,0,0,0,3,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,934,"    public static final boolean IS_OS_LINUX = getOSMatches(""Linux"") || getOSMatches(""LINUX"");",2,0,0,2,4,0,6,4,0,12,89,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,944,"    public static final boolean IS_OS_MAC = getOSMatches(""Mac"");",2,0,0,1,2,0,4,0,0,7,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,954,"    public static final boolean IS_OS_MAC_OSX = getOSMatches(""Mac OS X"");",4,0,0,1,2,6,6,2,0,19,69,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,964,"    public static final boolean IS_OS_OS2 = getOSMatches(""OS/2"");",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,974,"    public static final boolean IS_OS_SOLARIS = getOSMatches(""Solaris"");",0,0,0,1,2,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,984,"    public static final boolean IS_OS_SUN_OS = getOSMatches(""SunOS"");",2,0,0,1,2,0,0,0,0,2,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,995,    public static final boolean IS_OS_UNIX =,0,0,0,0,0,0,0,0,0,0,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1007,    public static final boolean IS_OS_WINDOWS = getOSMatches(OS_NAME_WINDOWS_PREFIX);,2,0,0,1,2,3,4,0,0,9,81,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1017,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",2,0,0,1,2,3,4,0,0,10,93,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1027,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",4,1,0,1,2,3,2,0,0,12,98,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1038,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",0,0,0,1,2,0,6,0,0,6,98,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1049,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",2,0,0,1,2,3,4,0,0,10,91,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1060,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" NT"");",0,0,0,1,2,0,8,0,0,8,92,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1071,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",2,0,0,1,2,3,4,0,0,10,91,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1101,        return JAVA_VERSION_FLOAT;,2,0,0,0,0,1,0,0,0,2,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1119,        if (JAVA_VERSION_TRIMMED == null) {,8,0,0,1,3,2,8,4,0,22,35,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1120,            return 0f;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1122,"        String str = JAVA_VERSION_TRIMMED.substring(0, 3);",2,0,0,1,2,0,4,2,0,8,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1123,        if (JAVA_VERSION_TRIMMED.length() >= 5) {,0,0,0,2,5,0,0,0,0,7,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1124,"            str = str + JAVA_VERSION_TRIMMED.substring(4, 5);",4,0,0,1,2,0,6,0,0,10,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1127,            return Float.parseFloat(str);,0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1128,        } catch (Exception ex) {,2,0,0,1,4,0,0,2,0,4,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1129,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1148,        if (JAVA_VERSION_TRIMMED == null) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1149,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1151,"        String str = JAVA_VERSION_TRIMMED.substring(0, 1);",2,0,0,1,2,0,4,2,0,8,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1152,"        str = str + JAVA_VERSION_TRIMMED.substring(2, 3);",4,1,0,1,2,0,4,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1153,        if (JAVA_VERSION_TRIMMED.length() >= 5) {,0,1,0,2,5,0,4,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1154,"            str = str + JAVA_VERSION_TRIMMED.substring(4, 5);",0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1156,"            str = str + ""0"";",6,1,0,0,0,0,0,0,0,11,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1159,            return Integer.parseInt(str);,0,0,0,1,2,1,6,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1160,        } catch (Exception ex) {,4,0,0,1,4,1,0,4,0,9,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1161,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1171,        if (JAVA_VERSION != null) {,2,1,0,1,3,0,6,0,0,9,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1172,            for (int i = 0; i < JAVA_VERSION.length(); i++) {,6,1,0,2,5,0,4,0,0,12,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1173,                char ch = JAVA_VERSION.charAt(i);,2,0,0,1,2,0,6,0,0,8,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1174,                if (ch >= '0' && ch <= '9') {,0,1,0,1,3,0,4,0,0,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1175,                    return JAVA_VERSION.substring(i);,2,0,0,1,2,4,6,4,0,15,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1179,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1189,        if (JAVA_VERSION_TRIMMED == null) {,2,1,0,1,3,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1190,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1192,        return JAVA_VERSION_TRIMMED.startsWith(versionPrefix);,0,0,0,1,2,1,6,0,0,6,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1202,        if (OS_NAME == null) {,2,1,0,1,3,0,0,2,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1203,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1205,        return OS_NAME.startsWith(osNamePrefix);,0,0,0,1,2,1,6,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1216,        if (OS_NAME == null || OS_VERSION == null) {,0,0,0,1,3,0,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1217,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1219,        return OS_NAME.startsWith(osNamePrefix) && OS_VERSION.startsWith(osVersionPrefix);,0,0,0,2,4,1,0,0,0,7,82,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1235,            return System.getProperty(property);,2,1,0,1,2,1,6,0,0,9,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1236,        } catch (SecurityException ex) {,2,0,0,1,4,0,0,2,0,4,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1238,            System.err.println(,8,1,0,0,1,0,2,0,0,11,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1242,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1260,        return JAVA_VERSION_FLOAT >= requiredVersion;,0,0,0,0,0,1,0,0,0,1,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1278,        return JAVA_VERSION_INT >= requiredVersion;,4,1,0,0,0,1,0,0,0,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1292,        return JAVA_AWT_HEADLESS != null ? JAVA_AWT_HEADLESS.equals(Boolean.TRUE.toString()) : false;,0,0,0,2,4,1,0,0,0,7,93,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1305,        return new File(System.getProperty(JAVA_HOME_KEY));,0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1319,        return new File(System.getProperty(JAVA_IO_TMPDIR_KEY));,8,1,0,2,4,1,0,0,0,10,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1333,        return new File(System.getProperty(USER_DIR_KEY));,6,1,0,2,4,1,8,0,0,15,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1347,        return new File(System.getProperty(USER_HOME_KEY));,4,1,0,2,4,4,4,2,0,14,51,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,63,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,64,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,47,    private static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());,2,0,0,2,4,3,4,4,0,13,90,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,49,    private static final Map cCountriesByLanguage = Collections.synchronizedMap(new HashMap());,2,0,0,2,4,3,4,4,0,13,91,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,51,        List list = Arrays.asList(Locale.getAvailableLocales());,8,2,0,2,4,0,0,0,0,11,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,52,        cAvailableLocaleList = Collections.unmodifiableList(list);,0,0,0,1,2,0,6,0,0,6,58,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,53,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,95,        if (str == null) {,4,1,0,1,3,3,2,2,0,13,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,96,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,98,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,99,        if (len != 2 && len != 5 && len < 7) {,4,0,0,1,3,0,0,2,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,100,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",0,0,0,1,2,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,102,        char ch0 = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,103,        char ch1 = str.charAt(1);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,104,        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,105,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",10,3,0,1,2,0,10,4,0,29,68,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,107,        if (len == 2) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,108,"            return new Locale(str, """");",2,1,0,1,2,1,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,110,            if (str.charAt(2) != '_') {,6,2,0,2,5,0,12,4,0,26,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,111,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",10,2,0,1,2,0,0,2,0,15,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,113,            char ch3 = str.charAt(3);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,114,            char ch4 = str.charAt(4);,4,0,0,1,2,0,4,2,0,11,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,115,            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {,8,7,0,1,3,0,0,0,0,19,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",0,0,0,1,2,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,118,            if (len == 5) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,119,"                return new Locale(str.substring(0, 2), str.substring(3, 5));",0,0,0,3,6,1,0,0,0,10,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,121,                if (str.charAt(5) != '_') {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,122,"                    throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,124,"                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));",0,0,0,4,8,1,0,0,0,13,78,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,143,"        return localeLookupList(locale, locale);",0,0,0,1,2,1,6,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,165,        List list = new ArrayList(4);,10,2,0,1,2,3,6,4,0,26,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,166,        if (locale != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,167,            list.add(locale);,2,0,0,1,2,0,26,0,0,28,17,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,168,            if (locale.getVariant().length() > 0) {,0,0,0,3,7,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,169,"                list.add(new Locale(locale.getLanguage(), locale.getCountry()));",0,0,0,4,8,0,0,0,0,12,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,171,            if (locale.getCountry().length() > 0) {,2,0,0,3,7,0,0,2,0,4,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,172,"                list.add(new Locale(locale.getLanguage(), """"));",0,0,0,3,6,0,0,0,0,9,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,174,            if (list.contains(defaultLocale) == false) {,0,1,0,2,5,0,6,0,0,8,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,175,                list.add(defaultLocale);,0,0,0,1,2,0,6,0,0,6,24,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,178,        return Collections.unmodifiableList(list);,8,4,0,1,2,1,6,0,0,19,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,192,        return cAvailableLocaleList;,0,0,0,0,0,1,0,0,0,1,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,206,        Set set = cAvailableLocaleSet;,4,0,0,0,0,0,0,2,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,207,        if (set == null) {,2,1,0,1,3,0,0,0,0,4,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,208,            set = new HashSet(availableLocaleList());,0,0,0,2,4,0,0,0,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,209,            set = Collections.unmodifiableSet(set);,2,0,0,1,2,0,6,0,0,9,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,210,            cAvailableLocaleSet = set;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,212,        return set;,2,0,0,0,0,1,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,223,        return cAvailableLocaleSet.contains(locale);,0,0,0,1,2,1,0,0,0,4,44,4,0.0,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,237,        List langs = (List) cLanguagesByCountry.get(countryCode);  //syncd,0,0,0,2,4,0,0,0,0,6,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,238,        if (langs == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,239,            if (countryCode != null) {,2,1,0,1,3,3,4,0,0,12,26,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,240,                langs = new ArrayList();,2,0,0,1,2,0,0,2,0,5,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,241,                List locales = availableLocaleList();,10,2,0,1,2,0,2,2,0,16,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,242,                for (int i = 0; i < locales.size(); i++) {,0,0,0,2,5,0,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,243,                    Locale locale = (Locale) locales.get(i);,2,0,0,2,4,0,6,4,0,12,40,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,244,                    if (countryCode.equals(locale.getCountry()) &&,0,0,0,2,5,0,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,246,                        langs.add(locale);,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,249,                langs = Collections.unmodifiableList(langs);,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,250,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,251,                langs = Collections.EMPTY_LIST;,24,3,0,0,0,0,16,0,0,44,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,253,"            cLanguagesByCountry.put(countryCode, langs);  //syncd",2,0,0,1,2,0,0,0,0,2,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,255,        return langs;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,269,        List countries = (List) cCountriesByLanguage.get(languageCode);  //syncd,4,0,0,2,4,0,4,2,0,10,72,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,270,        if (countries == null) {,2,1,0,1,3,0,6,0,0,9,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,271,            if (languageCode != null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,272,                countries = new ArrayList();,2,0,0,1,2,0,8,2,0,12,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,273,                List locales = availableLocaleList();,6,1,0,1,2,0,2,2,0,11,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,274,                for (int i = 0; i < locales.size(); i++) {,8,2,0,2,5,0,4,0,0,15,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,275,                    Locale locale = (Locale) locales.get(i);,2,0,0,2,4,0,6,4,0,12,40,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,276,                    if (languageCode.equals(locale.getLanguage()) &&,0,2,0,2,5,0,18,0,0,20,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,279,                        countries.add(locale);,0,0,0,1,2,0,6,0,0,6,22,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,282,                countries = Collections.unmodifiableList(countries);,2,0,0,1,2,0,6,0,0,9,52,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,283,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,284,                countries = Collections.EMPTY_LIST;,6,0,0,0,0,0,0,0,0,7,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,286,"            cCountriesByLanguage.put(languageCode, countries);  //syncd",0,0,0,1,2,0,8,0,0,8,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,288,        return countries;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,464,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1508,            return false;,4,1,0,0,0,1,8,6,0,20,13,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,398,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,401,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,404,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,0,0,0,7,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,411,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,414,        char lastChar = str.charAt(str.length() - 1);,0,0,0,2,4,0,0,0,0,6,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,418,        int decPos = str.indexOf('.');,0,0,0,1,2,0,0,0,0,3,30,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,419,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,12,0,0,19,53,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,421,        if (decPos > -1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,433,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,436,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,438,            dec = null;,6,0,0,0,0,0,0,0,0,8,11,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,440,        if (!Character.isDigit(lastChar)) {,2,1,1,2,5,0,6,0,0,14,35,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,441,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,444,                exp = null;,4,1,0,0,0,1,4,2,0,12,11,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,447,"            String numeric = str.substring(0, str.length() - 1);",8,4,0,2,4,0,8,2,0,22,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,448,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,449,            switch (lastChar) {,0,0,0,1,3,0,0,0,0,4,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,452,                    if (dec == null,4,1,0,0,1,3,0,0,0,8,15,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,457,                            return createLong(numeric);,0,0,0,1,2,1,4,0,0,4,27,12,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,556,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,559,        for (int i = str.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,560,            if (str.charAt(i) != '0') {,6,2,0,2,5,0,6,0,0,16,27,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,561,                return false;,4,1,0,0,0,1,0,0,0,7,13,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,185,        return str == null || str.length() == 0;,0,0,0,1,2,1,0,0,0,4,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,223,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,226,        for (int i = 0; i < strLen; i++) {,10,2,0,1,3,0,4,0,0,17,34,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,227,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,26,0,0,28,55,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,228,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,628,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,631,        return Long.valueOf(str);,0,0,0,1,2,1,0,0,0,4,25,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1507,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1510,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1511,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1515,        return true;,4,3,0,0,0,1,0,0,0,8,12,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,879,        if (width > 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,880,            ensureCapacity(size + width);,4,1,0,1,2,0,2,0,0,7,29,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,881,            String str = (obj == null ? getNullText() : obj.toString());,4,1,0,3,6,0,6,2,0,14,60,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,882,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,883,            if (strLen >= width) {,4,1,0,1,3,0,0,0,0,5,22,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);",4,0,0,1,2,1,10,2,0,17,38,5,0.5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,107,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.008,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,108,        if (initialCapacity <= 0) {,2,1,0,1,3,0,0,0,0,3,27,4,0.008,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,111,        buffer = new char[initialCapacity];,2,0,1,1,2,0,0,0,0,5,35,4,0.008,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,112,    },0,0,0,0,1,0,0,0,0,1,1,4,0.008,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,228,        if (capacity > buffer.length) {,0,0,0,1,3,0,0,0,0,4,31,4,0.00581,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,233,        return this;,4,0,0,0,0,1,0,2,0,6,12,1,0.00581,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1672,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1673,        for (int i = 0; i < thisBuf.length; i++) {,0,0,0,1,3,0,0,0,0,4,42,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1674,            if (thisBuf[i] == ch) {,2,1,1,2,5,0,0,0,0,7,23,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1675,                return true;,2,0,0,0,0,1,4,4,0,11,12,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1202,        int len = (str == null ? 0 : str.length());,0,0,0,2,4,0,6,0,0,6,43,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1203,        if (len > 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1204,"            int index = indexOf(str, 0);",0,0,0,1,2,0,0,0,0,3,28,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1205,            if (index >= 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1206,"                deleteImpl(index, index + len, len);",0,0,0,1,2,0,0,0,0,3,36,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1209,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1762,        if (str == null || startIndex >= size) {,0,0,0,1,3,0,0,0,0,4,40,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1765,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1766,        if (strLen == 1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1769,        if (strLen == 0) {,4,1,0,1,3,3,2,2,0,13,18,1,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1772,        if (strLen > size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1775,        char[] thisBuf = buffer;,2,0,0,1,2,3,0,0,0,5,24,2,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1776,        int len = size - strLen + 1;,0,0,0,0,0,0,0,0,0,0,28,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1778,        for (int i = startIndex; i < len; i++) {,10,1,0,1,3,0,0,0,0,12,40,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1779,            for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,0,0,0,10,34,7,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1780,                if (str.charAt(j) != thisBuf[i + j]) {,4,2,1,3,7,0,6,0,0,14,38,9,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1781,                    continue outer;,0,0,0,0,0,0,0,0,0,0,15,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1784,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1762,        if (str == null || startIndex >= size) {,0,0,0,1,3,0,0,0,0,4,40,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1765,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1766,        if (strLen == 1) {,8,2,0,1,3,0,0,0,0,12,18,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1769,        if (strLen == 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1772,        if (strLen > size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1775,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,8,1,0,0,0,0,0,0,0,9,34,5,0.57143,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1778,        for (int i = startIndex; i < len; i++) {,10,1,0,1,3,0,0,0,0,12,40,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1779,            for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,0,0,0,10,34,7,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1780,                if (str.charAt(j) != thisBuf[i + j]) {,4,2,1,3,7,0,6,0,0,14,38,9,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1781,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1784,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1184,        int len = (str == null ? 0 : str.length());,4,1,0,2,4,0,4,0,0,9,43,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1185,        if (len > 0) {,12,2,0,1,3,3,0,4,0,22,14,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1186,"            int index = indexOf(str, 0);",2,0,0,1,2,0,4,0,0,6,28,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1187,            while (index >= 0) {,0,0,0,1,3,0,0,0,0,4,20,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1188,"                deleteImpl(index, index + len, len);",0,0,0,1,2,0,0,0,0,3,36,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1189,"                index = indexOf(str, index);",2,0,0,1,2,0,6,0,0,9,28,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1202,        int len = (str == null ? 0 : str.length());,0,0,0,2,4,0,0,0,0,6,43,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1203,        if (len > 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1204,"            int index = indexOf(str, 0);",0,0,0,1,2,0,0,0,0,3,28,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1205,            if (index >= 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1206,"                deleteImpl(index, index + len, len);",0,0,0,1,2,0,0,0,0,3,36,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1209,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1747,"        return indexOf(str, 0);",4,1,0,1,2,1,8,0,0,14,23,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",4,1,0,1,2,0,12,0,0,17,72,5,0.30769,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1115,        size -= len;,0,0,0,0,0,0,0,0,0,0,12,4,0.30769,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1116,    },0,0,0,0,1,0,0,0,0,1,1,4,0.30769,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,840,                    if (entityName.length() == 1) {,0,1,0,2,5,0,4,0,0,5,31,11,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,843,                        char charAt1 = entityName.charAt(1);,2,0,0,1,2,0,14,0,0,16,36,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,845,                            if (charAt1 == 'x' || charAt1=='X') {,4,3,0,1,3,0,0,0,0,9,37,15,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,848,                                entityValue = Integer.parseInt(entityName.substring(1));,4,1,0,2,4,0,8,0,0,14,56,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,852,                        },4,1,0,0,1,0,6,0,0,12,1,8,0.5,1,1
defect4j,lang,org/apache/commons/lang/Entities,62,853,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,862,                    buf.append((char) (entityValue));,2,0,0,3,6,0,4,0,0,6,33,11,0.25,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,819,        StringBuffer buf = new StringBuffer(str.length());,6,0,0,2,4,0,4,4,0,15,50,1,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,820,"        buf.append(str.substring(0, firstAmp));",0,0,0,2,4,0,0,0,0,6,39,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,821,        for (int i = firstAmp; i < str.length(); ++i) {,8,1,0,2,5,0,4,0,0,14,47,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,822,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,823,            if (ch == '&') {,2,1,0,1,3,0,0,0,0,4,16,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,824,"                int semi = str.indexOf(';', i + 1);",4,1,0,1,2,0,4,0,0,10,35,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,825,                if (semi == -1) {,2,1,0,1,3,0,0,0,0,4,17,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,829,"                int amph = str.indexOf('&', i + 1);",8,3,0,1,2,0,4,0,0,17,35,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,830,                if( amph != -1 && amph < semi ) {,6,3,0,1,3,0,0,0,0,10,33,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,835,"                String entityName = str.substring(i + 1, semi);",2,0,0,1,2,0,0,0,0,2,47,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,837,                if (entityName.length() == 0) {,0,1,0,2,5,0,4,0,0,5,31,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,839,                } else if (entityName.charAt(0) == '#') {,0,1,0,2,6,0,4,0,0,6,41,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,857,                if (entityValue == -1) {,2,1,0,1,3,0,4,0,0,10,24,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,864,                i = semi;,0,0,0,0,0,0,0,0,0,0,9,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,865,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,869,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,247,"        return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());",0,0,0,2,4,1,12,0,0,13,81,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,330,"            if (Token.containsTokenWithValue(tokens, M)) {",0,0,0,2,5,0,8,0,0,8,46,7,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,331,                months += 12 * years;,6,4,0,0,0,0,8,0,0,21,21,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,332,                years = 0;,2,0,0,0,0,0,0,0,0,3,10,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,344,            hours += 24 * days;,4,1,0,0,0,0,0,0,0,6,19,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,345,            days = 0;,4,0,0,0,0,0,0,0,0,5,9,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,348,            minutes += 60 * hours;,4,1,0,0,0,0,0,0,0,6,22,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,349,            hours = 0;,4,0,0,0,0,0,4,4,0,13,10,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,352,            seconds += 60 * minutes;,4,1,0,0,0,0,0,0,0,6,24,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,353,            minutes = 0;,2,0,0,0,0,0,0,0,0,3,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,356,            milliseconds += 1000 * seconds;,0,0,0,0,0,0,0,0,0,0,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,357,            seconds = 0;,2,0,0,0,0,0,0,0,0,3,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,265,        long millis = endMillis - startMillis;,10,1,0,0,0,0,4,4,0,20,38,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,266,        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {,0,0,0,1,3,0,0,2,0,2,45,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,270,        Token[] tokens = lexx(format);,2,0,0,2,4,0,4,2,0,8,30,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,274,        Calendar start = Calendar.getInstance(timezone);,2,0,0,1,2,0,6,2,0,10,48,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,275,        start.setTime(new Date(startMillis));,4,0,0,2,4,0,10,2,0,18,37,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,276,        Calendar end = Calendar.getInstance(timezone);,2,0,0,1,2,0,6,2,0,10,46,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,277,        end.setTime(new Date(endMillis));,2,0,0,2,4,0,4,2,0,8,33,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,280,        int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);,0,0,0,2,4,0,0,0,0,6,83,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,281,        int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);,0,0,0,2,4,0,0,0,0,6,68,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,282,        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);,14,2,0,2,4,0,8,0,0,24,68,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,283,        int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);,0,0,0,2,4,0,0,0,0,6,76,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,284,        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);,10,1,0,2,4,0,8,0,0,19,77,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,285,        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);,10,1,0,2,4,0,8,0,0,19,65,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,286,        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);,14,4,0,2,4,0,12,0,0,31,62,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,289,        while (milliseconds < 0) {,2,1,0,1,3,0,0,0,0,3,26,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,293,        while (seconds < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,297,        while (minutes < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,301,        while (hours < 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,305,        while (days < 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,314,        while (months < 0) {,2,1,0,1,3,0,0,0,0,3,20,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,318,"        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);",6,0,0,1,2,0,8,0,0,15,81,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,319,"        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);",0,0,0,1,2,0,0,0,0,3,66,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,320,"        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);",6,0,0,1,2,0,8,0,0,15,66,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,321,"        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);",6,0,0,1,2,0,8,0,0,15,67,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,322,"        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);",6,0,0,1,2,0,8,0,0,15,66,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,323,"        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);",0,0,0,1,2,0,0,0,0,3,63,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,324,"        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);",2,0,1,1,2,0,4,2,0,10,60,3,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,329,"        if (!Token.containsTokenWithValue(tokens, y)) {",0,0,0,2,5,0,12,0,0,13,47,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,339,"        if (!Token.containsTokenWithValue(tokens, M)) {",2,0,0,2,5,3,16,2,0,25,47,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,343,"        if (!Token.containsTokenWithValue(tokens, d)) {",0,0,0,2,5,0,0,0,0,7,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,347,"        if (!Token.containsTokenWithValue(tokens, H)) {",2,0,0,2,5,0,8,0,0,11,47,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,351,"        if (!Token.containsTokenWithValue(tokens, m)) {",0,0,0,2,5,0,8,0,0,9,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,355,"        if (!Token.containsTokenWithValue(tokens, s)) {",2,1,0,2,5,0,8,0,0,12,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,360,"        return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);",0,0,0,1,2,1,20,0,0,20,96,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,433,"        end.add( field, -1 * difference );",8,1,0,1,2,3,12,4,0,30,34,1,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,434,        int endValue = end.get(field);,4,0,0,1,2,0,10,0,0,14,30,1,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,435,        int startValue = start.get(field);,2,0,0,1,2,3,2,2,0,10,34,2,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,436,        if (endValue < startValue) {,4,1,0,1,3,0,0,0,0,5,28,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,441,            return 0;,0,0,0,0,0,1,4,0,0,4,9,7,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,395,"                    buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(months), count, '0') : Integer",2,0,0,2,5,0,18,0,0,21,96,12,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,397,                    lastOutputSeconds = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,        return iValue - ((ValuedEnum) other).iValue;,6,1,0,2,4,1,0,2,0,9,44,4,0.25,1,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,126,        super(name);,2,0,0,1,2,0,0,0,0,2,12,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,127,        iValue = value;,4,0,0,0,0,0,0,0,0,5,15,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,128,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,519,        return getClass();,0,0,0,1,2,1,2,0,0,2,18,5,0.01754,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,543,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,546,        Calendar gval = Calendar.getInstance();,0,0,0,1,2,0,0,0,0,3,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,547,        gval.setTime(date);,0,0,0,1,2,0,0,0,0,3,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,548,"        modify(gval, field, false);",0,0,0,1,2,0,6,0,0,7,27,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,549,        return gval.getTime();,2,1,0,1,2,1,4,0,0,7,22,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,620,        if (val.get(Calendar.YEAR) > 280000000) {,4,1,0,2,5,0,4,0,0,9,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,641,        boolean roundUp = false;,0,0,0,0,0,0,0,0,0,0,24,4,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,642,        for (int i = 0; i < fields.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,643,            for (int j = 0; j < fields[i].length; j++) {,0,0,0,2,5,0,0,0,0,7,44,4,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,644,                if (fields[i][j] == field) {,2,1,1,3,7,0,0,0,0,9,28,8,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,646,                    if (round && roundUp) {,4,1,0,1,3,0,0,0,0,5,23,10,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,663,                    return;,0,0,0,0,0,1,4,0,0,5,7,11,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,667,            int offset = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,668,            boolean offsetSet = false;,2,0,0,0,0,0,0,0,0,4,26,3,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,670,            switch (field) {,2,0,0,1,3,0,0,0,0,2,16,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,700,            if (!offsetSet) {,10,2,0,1,3,0,4,0,0,17,17,3,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,701,                int min = val.getActualMinimum(fields[i][0]);,6,3,1,3,6,0,8,0,0,22,45,3,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,702,                int max = val.getActualMaximum(fields[i][0]);,0,0,0,3,6,0,0,0,0,9,45,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,704,                offset = val.get(fields[i][0]) - min;,4,1,1,3,6,0,4,0,0,14,37,8,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,706,                roundUp = offset > ((max - min) / 2);,0,0,0,2,4,0,0,0,0,6,37,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,709,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);",2,1,1,6,12,0,8,0,0,19,54,7,0.25,1,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,44,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");",4,3,0,1,2,3,8,2,0,21,73,1,0.05,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,72,    private static final int[][] fields = {,4,0,0,2,5,3,10,0,0,18,39,1,0.05,1,1
