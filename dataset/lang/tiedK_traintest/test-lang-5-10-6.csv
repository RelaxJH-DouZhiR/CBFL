dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4248,"            return rightPad(str, size, padStr.charAt(0));",0,3,0,2,4,1,16,0,0,21,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4251,        if (pads == padLen) {,4,1,0,1,3,0,4,0,0,9,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4252,            return str.concat(padStr);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4253,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4254,"            return str.concat(padStr.substring(0, pads));",4,1,1,2,4,1,4,0,0,15,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4256,            char[] padding = new char[pads];,0,0,0,2,4,0,0,0,0,6,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4257,            char[] padChars = padStr.toCharArray();,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4258,            for (int i = 0; i < pads; i++) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4259,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4261,            return str.concat(new String(padding));,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4285,"        return leftPad(str, size, ' ');",0,1,0,1,2,1,18,0,0,20,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4310,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4311,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4313,        int pads = size - str.length();,4,1,0,1,2,0,4,0,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4314,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4315,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4317,        if (pads > PAD_LIMIT) {,2,1,0,1,3,0,16,0,0,19,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4318,"            return leftPad(str, size, String.valueOf(padChar));",4,1,0,2,4,1,12,0,0,17,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4320,"        return padding(pads, padChar).concat(str);",0,0,0,2,4,1,10,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4347,        if (str == null) {,0,0,0,1,3,0,10,0,0,10,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4348,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4350,        if (isEmpty(padStr)) {,2,0,0,2,5,0,4,0,0,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4351,"            padStr = "" "";",4,0,0,0,0,0,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4353,        int padLen = padStr.length();,8,1,1,1,2,0,4,0,0,20,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4354,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4355,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4356,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4357,            return str; // returns original String when possible,4,0,0,0,0,1,0,0,0,6,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4359,        if (padLen == 1 && pads <= PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4360,"            return leftPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4363,        if (pads == padLen) {,0,0,0,1,3,0,0,0,0,1,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4364,            return padStr.concat(str);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4365,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4366,"            return padStr.substring(0, pads).concat(str);",0,0,0,2,4,1,10,0,0,10,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4368,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4369,            char[] padChars = padStr.toCharArray();,4,1,0,2,4,0,0,0,0,5,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4370,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,0,0,0,10,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4371,                padding[i] = padChars[i % padLen];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4373,            return new String(padding).concat(str);,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4386,        return str == null ? 0 : str.length();,2,1,0,1,2,1,4,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4415,"        return center(str, size, ' ');",2,0,0,1,2,1,0,0,0,2,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4443,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4444,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4446,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4447,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4448,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4449,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4451,"        str = leftPad(str, strLen + pads / 2, padChar);",6,2,0,1,2,0,6,0,0,15,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4452,"        str = rightPad(str, size, padChar);",2,0,0,1,2,0,8,0,0,11,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4453,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4483,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4484,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4486,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4487,"            padStr = "" "";",10,1,0,0,0,0,4,0,0,18,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4489,        int strLen = str.length();,2,0,0,1,2,0,0,2,0,4,26,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4490,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4491,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4492,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4494,"        str = leftPad(str, strLen + pads / 2, padStr);",6,2,0,1,2,0,6,0,0,15,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4495,"        str = rightPad(str, size, padStr);",8,1,1,1,2,0,8,0,0,21,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4496,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4521,        if (str == null) {,0,1,0,1,3,0,4,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4522,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4524,        return str.toUpperCase();,2,1,0,1,2,1,4,0,0,7,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4544,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4545,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4547,        return str.toUpperCase(locale);,2,0,0,1,2,1,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4570,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4571,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4573,        return str.toLowerCase();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4593,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4594,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4596,        return str.toLowerCase(locale);,2,0,0,1,2,1,12,4,0,18,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4621,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4622,            return str;,4,1,0,0,0,1,10,0,0,15,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4624,        return new StringBuilder(strLen),0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4652,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4653,            return str;,2,0,0,0,0,1,10,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4655,        return new StringBuilder(strLen),2,0,0,1,2,1,0,0,0,2,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4690,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4691,            return str;,8,1,0,0,0,1,0,4,0,15,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4693,        StringBuilder buffer = new StringBuilder(strLen);,4,0,0,1,2,0,0,4,0,8,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4695,        char ch = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4696,        for (int i = 0; i < strLen; i++) {,2,0,1,1,3,0,0,0,0,4,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4697,            ch = str.charAt(i);,8,1,0,1,2,0,6,0,0,16,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4698,            if (Character.isUpperCase(ch)) {,8,0,0,2,5,1,6,0,0,16,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4699,                ch = Character.toLowerCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4700,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4701,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,12,0,0,16,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4702,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,0,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4703,                ch = Character.toUpperCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4705,            buffer.append(ch);,0,0,0,1,2,0,4,0,0,4,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4707,        return buffer.toString();,2,0,0,1,2,1,4,0,0,6,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4732,        if (isEmpty(str) || isEmpty(sub)) {,4,2,0,3,7,0,12,0,0,18,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4733,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4735,        int count = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4736,        int idx = 0;,4,0,0,0,0,0,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4737,"        while ((idx = str.indexOf(sub, idx)) != -1) {",8,3,0,3,7,0,20,0,0,34,45,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4738,            count++;,4,1,0,0,0,0,0,0,0,6,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4739,            idx += sub.length();,2,0,0,1,2,0,4,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4741,        return count;,4,0,0,0,0,1,0,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4765,        if (str == null) {,6,2,0,1,3,0,0,0,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4766,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4768,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4769,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4770,            if (Character.isLetter(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4771,                return false;,0,0,0,0,0,1,10,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4774,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4799,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4800,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4802,        int sz = str.length();,2,1,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4803,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4804,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,19,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4805,                return false;,2,1,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4808,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4832,        if (str == null) {,8,6,0,1,3,0,0,0,0,14,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4833,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4835,        int sz = str.length();,4,2,0,1,2,0,14,0,0,21,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4836,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4837,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4838,                return false;,2,1,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4841,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4866,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4867,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4869,        int sz = str.length();,4,0,0,1,2,0,4,0,0,8,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4870,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4871,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,1,84,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4872,                return false;,0,0,0,0,0,1,0,0,0,2,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4875,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4904,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4905,            return false;,2,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4907,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4908,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4909,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4910,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4913,        return true;,0,0,0,0,0,1,6,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4938,        if (str == null) {,6,1,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4939,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4941,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4942,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4943,            if (Character.isDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4944,                return false;,2,0,1,0,0,1,0,0,0,7,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4947,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4974,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4975,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4977,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4978,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4979,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,2,4,0,6,13,0,16,0,0,24,76,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4980,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4983,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5006,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5007,            return false;,2,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5009,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5010,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5011,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5012,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5015,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5036,        if (str == null || isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5037,            return false;,0,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5039,        int sz = str.length();,6,1,0,1,2,0,0,0,0,7,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5040,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5041,            if (Character.isLowerCase(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5042,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5045,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5066,        if (str == null || isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5067,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5069,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5070,        for (int i = 0; i < sz; i++) {,14,1,0,1,3,1,0,4,0,21,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5071,            if (Character.isUpperCase(str.charAt(i)) == false) {,2,1,0,3,7,0,10,0,0,14,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5072,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5075,        return true;,0,0,0,0,0,1,6,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5097,        return str == null ? EMPTY : str;,0,0,0,0,0,1,0,0,0,1,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5118,        return str == null ? defaultStr : str;,0,0,0,0,0,1,0,0,0,1,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5139,        return StringUtils.isEmpty(str) ? defaultStr : str;,4,0,0,1,2,1,10,0,0,14,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5159,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5160,            return null;,0,0,0,0,0,1,6,0,0,6,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5162,        return new StringBuilder(str).reverse().toString();,2,0,0,3,6,1,4,2,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5185,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5186,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5190,"        String[] strs = split(str, separatorChar);",2,0,0,2,4,0,6,2,0,10,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5191,        ArrayUtils.reverse(strs);,2,0,0,1,2,0,10,2,0,14,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5192,"        return join(strs, separatorChar);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5230,"        return abbreviate(str, 0, maxWidth);",0,0,0,1,2,1,12,0,0,12,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5269,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5270,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5272,        if (maxWidth < 4) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5273,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5275,        if (str.length() <= maxWidth) {,0,0,0,2,5,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5276,            return str;,2,1,0,0,0,1,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5278,        if (offset > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5279,            offset = str.length();,2,0,0,1,2,0,4,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5281,        if ((str.length() - offset) < (maxWidth - 3)) {,4,3,0,4,9,0,4,0,0,11,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5282,            offset = str.length() - (maxWidth - 3);,8,2,0,2,4,0,12,0,0,23,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5284,        if (offset <= 4) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5285,"            return str.substring(0, maxWidth - 3) + ""..."";",2,2,0,1,2,1,4,0,0,9,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5287,        if (maxWidth < 7) {,6,2,0,1,3,0,12,2,0,22,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5288,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0,0,0,1,2,0,0,0,0,3,82,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5290,        if ((offset + (maxWidth - 3)) < str.length()) {,4,3,0,4,9,0,4,0,0,11,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5291,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",2,2,0,2,4,1,8,0,0,13,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5293,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",2,3,0,3,6,1,8,0,0,14,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5324,        if (str1 == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5325,            return str2;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5327,        if (str2 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5328,            return str1;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5330,"        int at = indexOfDifference(str1, str2);",4,1,0,1,2,0,6,0,0,11,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5331,        if (at == -1) {,0,0,0,1,3,0,6,0,0,6,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5332,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5334,        return str2.substring(at);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5361,        if (str1 == str2) {,4,1,0,1,3,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5362,            return -1;,2,0,0,0,0,1,4,0,0,7,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5364,        if (str1 == null || str2 == null) {,6,0,0,1,3,0,0,0,0,7,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5365,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5368,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,0,0,0,3,7,0,0,0,0,10,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5369,            if (str1.charAt(i) != str2.charAt(i)) {,0,0,0,3,7,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5370,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5373,        if (i < str2.length() || i < str1.length()) {,4,3,0,3,7,0,8,0,0,15,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5374,            return i;,6,0,0,0,0,1,0,0,0,6,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5376,        return -1;,2,0,0,0,0,1,0,0,0,3,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5411,        if (strs == null || strs.length <= 1) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5412,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5414,        boolean anyStringNull = false;,8,0,0,0,0,0,4,0,0,13,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5415,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5416,        int arrayLen = strs.length;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5417,        int shortestStrLen = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5418,        int longestStrLen = 0;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5423,        for (int i = 0; i < arrayLen; i++) {,0,0,0,1,3,0,4,0,0,4,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5424,            if (strs[i] == null) {,2,2,1,2,5,0,6,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5425,                anyStringNull = true;,0,0,0,0,0,0,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5426,                shortestStrLen = 0;,2,0,0,0,0,0,0,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5428,                allStringsNull = false;,2,0,0,0,0,0,0,0,0,4,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5429,"                shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",2,0,1,3,6,0,8,0,0,15,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5430,"                longestStrLen = Math.max(strs[i].length(), longestStrLen);",0,0,0,3,6,0,0,0,0,9,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5435,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,0,0,0,2,5,0,0,0,0,7,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5436,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5440,        if (shortestStrLen == 0) {,4,1,0,1,3,0,4,4,0,13,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5441,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5445,        int firstDiff = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5446,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,8,1,0,1,3,0,0,0,0,10,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5447,            char comparisonChar = strs[0].charAt(stringPos);,2,0,0,2,4,0,4,0,0,6,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5448,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,12,1,0,1,3,0,0,0,0,14,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5449,                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {,2,1,1,3,7,0,14,0,0,21,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5450,                    firstDiff = stringPos;,4,0,0,0,0,0,12,0,0,17,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5451,                    break;,2,1,1,0,0,0,0,0,0,7,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5454,            if (firstDiff != -1) {,2,1,0,1,3,0,0,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5455,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5459,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,6,4,0,1,3,0,8,0,0,19,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5463,            return shortestStrLen;,0,0,0,0,0,1,0,0,0,1,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5465,        return firstDiff;,6,1,1,0,0,1,0,0,0,14,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5502,        if (strs == null || strs.length == 0) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5503,            return EMPTY;,4,0,1,0,0,1,4,0,0,14,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5505,        int smallestIndexOfDiff = indexOfDifference(strs);,4,0,0,1,2,0,8,0,0,12,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5506,        if (smallestIndexOfDiff == -1) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5508,            if (strs[0] == null) {,0,1,1,2,5,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5509,                return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5511,            return strs[0];,0,0,0,1,2,1,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5512,        } else if (smallestIndexOfDiff == 0) {,2,1,0,1,4,0,0,0,0,3,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5514,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5517,"            return strs[0].substring(0, smallestIndexOfDiff);",0,0,0,2,4,1,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5558,        if (s == null || t == null) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5559,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,2,0,4,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5579,        int n = s.length(); // length of s,4,0,1,1,2,0,8,0,0,16,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5580,        int m = t.length(); // length of t,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5582,        if (n == 0) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5583,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5584,        } else if (m == 0) {,12,2,0,1,4,0,0,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5585,            return n;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5588,        if (n > m) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5590,            String tmp = s;,4,1,0,0,0,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5591,            s = t;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5592,            t = tmp;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5593,            n = m;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5594,            m = t.length();,2,0,0,1,2,0,4,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5597,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",4,1,0,2,4,0,0,0,0,5,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5598,"        int d[] = new int[n+1]; // cost array, horizontally",0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5609,        for (i = 0; i<=n; i++) {,10,2,0,1,3,0,8,0,0,23,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5610,            p[i] = i;,0,0,0,1,2,0,0,0,0,1,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5613,        for (j = 1; j<=m; j++) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5614,            t_j = t.charAt(j-1);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5615,            d[0] = j;,4,0,1,1,2,0,0,0,0,8,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5617,            for (i=1; i<=n; i++) {,8,1,0,1,3,0,0,0,0,11,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5618,                cost = s.charAt(i-1)==t_j ? 0 : 1;,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5620,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",6,5,1,6,12,0,8,0,0,32,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5624,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5625,            p = d;,6,1,0,0,0,0,0,0,0,9,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5626,            d = _d;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5631,        return p[n];,0,0,1,1,2,1,0,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5680,"        return startsWith(str, prefix, false);",0,0,0,1,2,1,6,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5705,"        return startsWith(str, prefix, true);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5720,        if (str == null || prefix == null) {,6,2,0,1,3,0,6,0,0,15,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5721,            return (str == null && prefix == null);,10,3,0,1,2,2,0,4,0,18,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5723,        if (prefix.length() > str.length()) {,4,1,0,3,7,0,12,0,0,19,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5724,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5726,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",0,0,0,2,4,1,0,0,0,7,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5748,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,0,0,0,3,7,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5749,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5751,        for (int i = 0; i < searchStrings.length; i++) {,0,0,0,1,3,0,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5752,            String searchString = searchStrings[i];,2,0,1,1,2,0,0,2,0,8,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5753,"            if (StringUtils.startsWith(string, searchString)) {",0,0,0,2,5,0,8,0,0,8,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5754,                return true;,6,0,0,0,0,2,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5757,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5786,"        return endsWith(str, suffix, false);",0,0,0,1,2,1,12,0,0,13,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5812,"        return endsWith(str, suffix, true);",0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5827,        if (str == null || suffix == null) {,4,3,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5828,            return (str == null && suffix == null);,4,3,0,1,2,1,0,0,0,7,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5830,        if (suffix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5831,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5833,        int strOffset = str.length() - suffix.length();,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5834,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,2,4,1,0,0,0,7,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1045,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",6,0,0,3,6,1,6,2,0,14,60,1,1.0,1,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1018,        return str.indexOf(searchStr) >= 0;,0,0,0,1,2,1,0,0,0,4,35,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1015,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,168,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,169,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,192,        return str == null || str.length() == 0;,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,210,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,230,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,231,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,233,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,234,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,235,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,238,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,258,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,6,0,0,7,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,287,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,313,        String ts = trim(str);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,314,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,339,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,367,"        return strip(str, null);",0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,394,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,395,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,397,"        str = strip(str, null);",6,0,0,1,2,0,4,0,0,13,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,398,        return str.length() == 0 ? null : str;,2,1,0,1,2,1,4,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,424,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,454,        if (isEmpty(str)) {,4,1,0,2,5,0,16,0,0,21,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,455,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,457,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,458,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,487,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,488,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,490,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,491,        if (stripChars == null) {,4,1,0,1,3,3,0,4,0,12,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,492,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,493,                start++;,2,0,0,0,0,0,6,0,0,9,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,495,        } else if (stripChars.length() == 0) {,0,1,0,2,6,0,4,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,496,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,498,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,6,4,0,5,11,0,10,0,0,21,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,499,                start++;,2,0,0,0,0,0,0,0,0,3,8,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,502,        return str.substring(start);,0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,531,        if (str == null || (end = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,532,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,535,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,536,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,6,3,0,4,9,3,8,4,0,24,67,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,537,                end--;,2,0,0,0,0,0,0,0,0,3,6,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,539,        } else if (stripChars.length() == 0) {,0,1,0,2,6,0,4,0,0,5,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,540,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,542,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,4,4,0,5,11,0,14,0,0,23,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,543,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,546,"        return str.substring(0, end);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,571,"        return stripAll(strs, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,601,        if (strs == null || (strsLen = strs.length) == 0) {,8,3,0,2,5,0,0,0,0,12,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,602,            return strs;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,604,        String[] newArr = new String[strsLen];,2,0,1,2,4,0,0,4,0,8,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,605,        for (int i = 0; i < strsLen; i++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,606,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,608,        return newArr;,4,1,0,0,0,1,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,634,        return str1 == null ? str2 == null : str1.equals(str2);,4,2,0,1,2,1,6,0,0,12,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,659,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,4,2,0,1,2,1,6,0,0,12,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,684,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,685,            return -1;,0,0,0,0,0,1,0,0,0,2,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,687,        return str.indexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,716,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,717,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,719,"        return str.indexOf(searchChar, startPos);",0,0,0,1,2,1,8,0,0,8,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,745,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,746,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,748,        return str.indexOf(searchStr);,0,0,0,1,2,1,6,0,0,7,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,779,        if (str == null || searchStr == null || ordinal <= 0) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,780,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,782,        if (searchStr.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,783,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,785,        int found = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,786,        int index = INDEX_NOT_FOUND;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,788,"            index = str.indexOf(searchStr, index + 1);",4,1,0,1,2,0,6,0,0,12,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,789,            if (index < 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,790,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,792,            found++;,2,1,0,0,0,0,4,0,0,8,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,793,        } while (found < ordinal);,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,794,        return index;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,829,        if (str == null || searchStr == null) {,8,7,0,1,3,0,8,0,0,24,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,830,            return -1;,2,0,0,0,0,1,8,4,0,15,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,833,        if (searchStr.length() == 0 && startPos >= str.length()) {,2,3,0,3,7,0,8,0,0,13,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,834,            return str.length();,0,0,0,1,2,1,8,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,836,"        return str.indexOf(searchStr, startPos);",2,1,0,1,2,1,8,0,0,11,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,861,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,862,            return -1;,4,3,0,0,0,1,4,0,0,12,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,864,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,6,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,895,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,896,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,898,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,1,2,1,8,0,0,8,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,924,        if (str == null || searchStr == null) {,6,3,0,1,3,0,0,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,925,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,927,        return str.lastIndexOf(searchStr);,2,1,0,1,2,1,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,959,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,960,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,962,"        return str.lastIndexOf(searchStr, startPos);",0,0,0,1,2,1,8,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,987,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,988,            return false;,0,0,0,0,0,1,4,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,990,        return str.indexOf(searchChar) >= 0;,6,1,0,1,2,1,6,0,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1016,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1046,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1076,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1077,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1079,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1080,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1081,            for (int j = 0; j < searchChars.length; j++) {,10,1,0,1,3,0,0,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1082,                if (searchChars[j] == ch) {,4,1,1,2,5,2,0,4,0,15,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1083,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1087,        return -1;,2,0,0,0,0,1,0,0,0,3,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1113,        if (isEmpty(str) || isEmpty(searchChars)) {,2,1,0,3,7,0,8,0,0,11,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1114,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1116,"        return indexOfAny(str, searchChars.toCharArray());",0,0,0,2,4,1,8,0,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1145,        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {,0,0,0,2,5,0,0,0,0,7,89,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1146,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1148,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1149,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1150,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1151,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1152,                    return true;,4,0,0,0,0,1,0,2,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1156,        return false;,2,0,0,0,0,1,0,0,0,3,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1187,        if (searchChars == null) {,6,1,0,1,3,0,0,0,0,7,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1188,            return false;,6,0,0,0,0,1,4,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1190,"        return containsAny(str, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1218,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1219,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1221,        outer : for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1222,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1223,            for (int j = 0; j < searchChars.length; j++) {,10,1,0,1,3,0,0,0,0,12,46,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1224,                if (searchChars[j] == ch) {,4,3,1,2,5,0,4,0,0,16,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1225,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1228,            return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1230,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1256,        if (isEmpty(str) || isEmpty(searchChars)) {,0,0,0,3,7,0,0,2,0,4,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1257,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1259,        for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1260,            if (searchChars.indexOf(str.charAt(i)) < 0) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1261,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1264,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1292,        if ((valid == null) || (str == null)) {,0,0,0,3,7,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1293,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1295,        if (str.length() == 0) {,2,2,0,2,5,0,4,0,0,8,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1296,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1298,        if (valid.length == 0) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1299,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1301,"        return indexOfAnyBut(str, valid) == -1;",4,1,0,1,2,1,0,0,0,5,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1327,        if (str == null || validChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1328,            return false;,2,0,0,0,0,1,0,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1330,"        return containsOnly(str, validChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1358,        if (str == null || invalidChars == null) {,12,4,0,1,3,0,4,0,0,20,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1359,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1361,        int strSize = str.length();,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1362,        int validSize = invalidChars.length;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1363,        for (int i = 0; i < strSize; i++) {,8,1,0,1,3,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1364,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1365,            for (int j = 0; j < validSize; j++) {,8,1,0,1,3,0,0,0,0,10,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1366,                if (invalidChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1367,                    return false;,0,0,0,0,0,1,0,0,0,1,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1371,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1397,        if (str == null || invalidChars == null) {,0,0,0,1,3,0,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1398,            return true;,2,1,0,0,0,1,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1400,"        return containsNone(str, invalidChars.toCharArray());",0,0,0,2,4,1,8,0,0,8,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1432,        if ((str == null) || (searchStrs == null)) {,0,0,0,3,7,0,4,0,0,5,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1433,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1435,        int sz = searchStrs.length;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1438,        int ret = Integer.MAX_VALUE;,10,1,0,0,0,0,0,0,0,11,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1440,        int tmp = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1441,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1442,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1443,            if (search == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1444,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1446,            tmp = str.indexOf(search);,2,0,0,1,2,0,6,0,0,9,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1447,            if (tmp == -1) {,10,5,0,1,3,3,2,0,0,23,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1448,                continue;,0,0,0,0,0,0,0,0,0,1,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1451,            if (tmp < ret) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1452,                ret = tmp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1456,        return (ret == Integer.MAX_VALUE) ? -1 : ret;,12,1,0,1,2,1,4,0,0,19,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1485,        if ((str == null) || (searchStrs == null)) {,6,3,0,3,7,0,6,0,0,16,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1486,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1488,        int sz = searchStrs.length;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1489,        int ret = -1;,2,0,0,0,0,0,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1490,        int tmp = 0;,8,3,0,0,0,0,0,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1491,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1492,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1493,            if (search == null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1494,                continue;,4,0,0,0,0,3,0,8,0,15,9,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1496,            tmp = str.lastIndexOf(search);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1497,            if (tmp > ret) {,0,0,0,1,3,0,6,0,0,6,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1498,                ret = tmp;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1501,        return ret;,8,3,0,0,0,1,0,0,0,11,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1531,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1532,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1536,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1537,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1540,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1541,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1543,        if (start > str.length()) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1544,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1547,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1586,        if (str == null) {,12,8,0,1,3,0,0,0,0,20,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1587,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1591,        if (end < 0) {,2,1,0,1,3,0,0,0,0,4,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1592,            end = str.length() + end; // remember end is negative,4,1,0,1,2,0,4,0,0,10,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1594,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1595,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1599,        if (end > str.length()) {,2,1,0,2,5,0,4,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1600,            end = str.length();,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1604,        if (start > end) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1605,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1608,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1609,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1611,        if (end < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1612,            end = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1615,"        return str.substring(start, end);",0,0,0,1,2,1,8,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1641,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1642,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1644,        if (len < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1645,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1647,        if (str.length() <= len) {,12,2,0,2,5,0,4,0,0,18,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1648,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1650,"        return str.substring(0, len);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1674,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1675,            return null;,0,0,0,0,0,1,8,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1677,        if (len < 0) {,0,1,0,1,3,0,4,0,0,6,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1678,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1680,        if (str.length() <= len) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1681,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1683,        return str.substring(str.length() - len);,2,1,0,2,4,1,4,0,0,7,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1711,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1712,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1714,        if (len < 0 || pos > str.length()) {,4,3,0,2,5,0,4,0,0,11,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1715,            return EMPTY;,2,0,0,0,0,1,16,0,0,18,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1717,        if (pos < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1718,            pos = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1720,        if (str.length() <= (pos + len)) {,4,2,0,3,7,0,4,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1721,            return str.substring(pos);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1723,"        return str.substring(pos, pos + len);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1756,        if (isEmpty(str) || separator == null) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1757,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1759,        if (separator.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1760,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1762,        int pos = str.indexOf(separator);,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1763,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1764,            return str;,4,1,0,0,0,1,0,0,0,5,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1766,"        return str.substring(0, pos);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1798,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1799,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1801,        if (separator == null) {,4,1,0,1,3,0,8,2,0,16,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1802,            return EMPTY;,4,0,0,0,0,1,6,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1804,        int pos = str.indexOf(separator);,2,0,0,1,2,0,6,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1805,        if (pos == -1) {,0,0,0,1,3,0,2,0,0,2,16,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1806,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1808,        return str.substring(pos + separator.length());,2,1,0,2,4,1,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1839,        if (isEmpty(str) || isEmpty(separator)) {,0,1,0,3,7,0,8,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1840,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1842,        int pos = str.lastIndexOf(separator);,2,1,0,1,2,0,10,0,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1843,        if (pos == -1) {,4,2,0,1,3,0,0,0,0,7,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1844,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1846,"        return str.substring(0, pos);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1879,        if (isEmpty(str)) {,2,1,0,2,5,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1880,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1882,        if (isEmpty(separator)) {,2,1,0,2,5,0,4,0,0,8,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1883,            return EMPTY;,12,2,0,0,0,1,0,0,0,15,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1885,        int pos = str.lastIndexOf(separator);,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1886,        if (pos == -1 || pos == (str.length() - separator.length())) {,10,5,0,4,9,0,8,0,0,24,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1887,            return EMPTY;,4,1,0,0,0,1,4,0,0,9,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1889,        return str.substring(pos + separator.length());,0,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1916,"        return substringBetween(str, tag, tag);",0,0,0,1,2,1,8,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1947,        if (str == null || open == null || close == null) {,2,1,0,1,3,0,0,0,0,3,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1948,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1950,        int start = str.indexOf(open);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1951,        if (start != -1) {,2,0,0,1,3,0,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1952,"            int end = str.indexOf(close, start + open.length());",0,0,0,2,4,0,0,0,0,6,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1953,            if (end != -1) {,2,0,0,1,3,0,4,0,0,7,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1954,"                return str.substring(start + open.length(), end);",0,0,0,2,4,1,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1957,        return null;,4,0,0,0,0,1,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1983,        if (str == null || isEmpty(open) || isEmpty(close)) {,0,0,0,3,7,0,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1984,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1986,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1987,        if (strLen == 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1988,            return ArrayUtils.EMPTY_STRING_ARRAY;,6,0,0,0,0,1,0,0,0,6,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1990,        int closeLen = close.length();,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1991,        int openLen = open.length();,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1992,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1993,        int pos = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1994,        while (pos < (strLen - closeLen)) {,6,2,0,2,5,0,0,0,0,8,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1995,"            int start = str.indexOf(open, pos);",2,0,1,1,2,0,8,0,0,16,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1996,            if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1997,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1999,            start += openLen;,6,0,1,0,0,0,0,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2000,"            int end = str.indexOf(close, start);",2,0,0,1,2,0,8,0,0,10,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2001,            if (end < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2002,                break;,2,0,0,0,0,0,0,0,0,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2004,"            list.add(str.substring(start, end));",2,0,0,2,4,0,18,2,0,22,36,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2005,            pos = end + closeLen;,6,1,0,0,0,0,0,0,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2006,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2007,        if (list.isEmpty()) {,2,0,0,2,5,0,4,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2008,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2010,        return list.toArray(new String [list.size()]);,2,0,0,3,6,1,0,0,0,2,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2041,"        return split(str, null, -1);",0,0,0,1,2,1,4,0,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2069,"        return splitWorker(str, separatorChar, false);",4,3,0,1,2,1,8,0,0,16,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2098,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,1,2,1,6,0,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2132,"        return splitWorker(str, separatorChars, max, false);",0,0,0,1,2,1,8,0,0,9,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2159,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2190,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,1,2,1,8,0,0,9,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2219,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0,0,0,1,2,1,0,0,0,4,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2252,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0,0,0,1,2,1,8,0,0,9,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2272,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2273,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2276,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2278,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2279,            return ArrayUtils.EMPTY_STRING_ARRAY;,6,0,0,0,0,1,8,0,0,15,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2282,        if ((separator == null) || (EMPTY.equals(separator))) {,2,2,0,4,9,0,6,0,0,10,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2284,"            return splitWorker(str, null, max, preserveAllTokens);",2,1,0,1,2,1,8,0,0,12,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2287,        int separatorLength = separator.length();,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2289,        ArrayList<String> substrings = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2290,        int numberOfSubstrings = 0;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2291,        int beg = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2292,        int end = 0;,2,0,0,0,0,0,8,4,0,14,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2293,        while (end < len) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2294,"            end = str.indexOf(separator, beg);",2,0,0,1,2,0,8,0,0,11,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2296,            if (end > -1) {,2,1,0,1,3,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2297,                if (end > beg) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2298,                    numberOfSubstrings += 1;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2300,                    if (numberOfSubstrings == max) {,4,1,0,1,3,0,0,0,0,5,32,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2301,                        end = len;,2,0,0,0,0,0,0,0,0,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2302,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2306,"                        substrings.add(str.substring(beg, end));",0,0,0,2,4,0,18,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2311,                        beg = end + separatorLength;,6,1,0,0,0,0,0,0,0,8,28,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2315,                    if (preserveAllTokens) {,2,0,0,1,3,0,0,0,0,2,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2316,                        numberOfSubstrings += 1;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2317,                        if (numberOfSubstrings == max) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2318,                            end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2319,                            substrings.add(str.substring(beg));,4,3,0,2,4,0,12,0,0,19,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2321,                            substrings.add(EMPTY);,0,0,0,1,2,0,6,0,0,6,22,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2324,                    beg = end + separatorLength;,6,1,0,0,0,0,0,0,0,8,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2328,                substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2329,                end = len;,12,6,0,0,0,0,8,4,0,31,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2333,        return substrings.toArray(new String[substrings.size()]);,0,0,0,3,6,1,8,2,0,10,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2362,"        return splitWorker(str, null, -1, true);",0,0,0,1,2,1,4,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2398,"        return splitWorker(str, separatorChar, true);",0,0,0,1,2,1,6,0,0,7,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2416,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2417,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2419,        int len = str.length();,4,0,1,1,2,0,4,2,0,14,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2420,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2421,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2423,        List<String> list = new ArrayList<String>();,2,0,0,1,2,3,4,2,0,11,44,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2424,"        int i = 0, start = 0;",8,1,0,0,0,0,0,0,0,9,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2425,        boolean match = false;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2426,        boolean lastMatch = false;,4,0,0,0,0,0,0,0,0,5,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2427,        while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2428,            if (str.charAt(i) == separatorChar) {,0,0,0,2,5,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2429,                if (match || preserveAllTokens) {,6,0,0,1,3,0,0,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2430,"                    list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2431,                    match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2432,                    lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2434,                start = ++i;,6,0,1,0,0,0,0,0,0,13,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2435,                continue;,4,3,0,0,0,0,0,0,0,7,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2437,            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2438,            match = true;,2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2439,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2441,        if (match || (preserveAllTokens && lastMatch)) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2442,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2444,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,14,2,0,17,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2481,"        return splitWorker(str, separatorChars, -1, true);",0,0,1,1,2,1,14,0,0,25,50,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2521,"        return splitWorker(str, separatorChars, max, true);",0,0,0,1,2,1,8,0,0,9,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2543,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2544,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2546,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2547,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2548,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2550,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2551,        int sizePlus1 = 1;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2552,"        int i = 0, start = 0;",4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2553,        boolean match = false;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2554,        boolean lastMatch = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2555,        if (separatorChars == null) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2557,            while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2558,                if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,14,0,0,15,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2559,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2560,                        lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2561,                        if (sizePlus1++ == max) {,4,0,0,1,3,0,0,0,0,5,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2562,                            i = len;,8,1,0,0,0,0,4,0,0,14,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2563,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2565,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2566,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2568,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2569,                    continue;,4,0,0,0,0,0,0,0,0,5,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2571,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2572,                match = true;,2,0,0,0,0,0,0,0,0,4,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2573,                i++;,2,0,0,0,0,0,0,0,0,3,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2575,        } else if (separatorChars.length() == 1) {,0,0,0,2,6,0,0,0,0,8,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2577,            char sep = separatorChars.charAt(0);,2,0,0,1,2,0,0,0,0,3,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2578,            while (i < len) {,8,2,0,1,3,0,0,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2579,                if (str.charAt(i) == sep) {,4,0,0,2,5,0,0,0,0,5,27,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2580,                    if (match || preserveAllTokens) {,8,2,0,1,3,0,0,0,0,10,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2581,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2582,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,0,0,0,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2583,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2584,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2586,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2587,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2589,                    start = ++i;,6,0,0,0,0,0,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2590,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2592,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2593,                match = true;,2,0,0,0,0,0,0,0,0,4,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2594,                i++;,2,1,0,0,0,0,4,0,0,8,4,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2596,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2598,            while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2599,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,0,0,0,3,7,0,0,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2600,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2601,                        lastMatch = true;,4,0,0,0,0,1,4,0,0,11,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2602,                        if (sizePlus1++ == max) {,12,2,0,1,3,0,0,0,0,16,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2603,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2604,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2606,"                        list.add(str.substring(start, i));",10,1,0,2,4,0,12,0,0,24,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2607,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2609,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2610,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2612,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2613,                match = true;,2,0,0,0,0,0,8,4,0,14,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2614,                i++;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2617,        if (match || (preserveAllTokens && lastMatch)) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2618,"            list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2620,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,8,2,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2643,"        return splitByCharacterType(str, false);",0,0,0,1,2,1,4,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2671,"        return splitByCharacterType(str, true);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2689,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2690,            return null;,2,1,0,0,0,1,6,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2692,        if (str.length() == 0) {,2,0,1,2,5,0,0,0,0,7,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2693,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,4,0,0,8,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2695,        char[] c = str.toCharArray();,2,0,0,2,4,0,14,0,0,16,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2696,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2697,        int tokenStart = 0;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2698,        int currentType = Character.getType(c[tokenStart]);,6,0,1,2,4,0,4,2,0,16,51,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2699,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,18,2,0,1,3,1,0,12,0,34,55,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2700,            int type = Character.getType(c[pos]);,0,0,0,2,4,0,0,0,0,6,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2701,            if (type == currentType) {,4,1,0,1,3,0,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2702,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2704,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,0,0,0,1,3,0,0,0,0,4,99,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2705,                int newTokenStart = pos - 1;,4,1,0,0,0,0,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2706,                if (newTokenStart != tokenStart) {,4,1,0,1,3,0,0,0,0,5,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2707,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",6,2,0,2,4,0,16,0,0,26,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2708,                    tokenStart = newTokenStart;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2710,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2711,"                list.add(new String(c, tokenStart, pos - tokenStart));",0,0,0,2,4,0,0,0,0,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2712,                tokenStart = pos;,4,0,0,0,0,0,0,0,0,5,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2714,            currentType = type;,4,0,0,0,0,0,0,0,0,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2716,"        list.add(new String(c, tokenStart, c.length - tokenStart));",12,2,0,2,4,0,10,2,0,26,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2717,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,8,2,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2743,"        return join(array, null);",0,0,0,1,2,1,4,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2769,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2770,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2773,"        return join(array, separator, 0, array.length);",0,0,0,1,2,1,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2803,        if (array == null) {,10,1,0,1,3,0,10,0,0,22,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2804,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2806,        int bufSize = (endIndex - startIndex);,8,1,0,1,2,0,0,0,0,10,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2807,        if (bufSize <= 0) {,4,1,1,1,3,0,0,0,0,10,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2808,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2811,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,2,0,0,6,12,0,0,0,0,2,90,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2812,        StringBuilder buf = new StringBuilder(bufSize);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2814,        for (int i = startIndex; i < endIndex; i++) {,4,0,0,1,3,0,0,0,0,6,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2815,            if (i > startIndex) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2816,                buf.append(separator);,0,0,0,1,2,0,6,0,0,6,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2818,            if (array[i] != null) {,10,3,1,2,5,0,6,0,0,24,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2819,                buf.append(array[i]);,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2822,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2850,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2851,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2853,"        return join(array, separator, 0, array.length);",0,0,0,1,2,1,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2884,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2885,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2887,        if (separator == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2888,            separator = EMPTY;,6,1,0,0,0,0,4,0,0,12,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2893,        int bufSize = (endIndex - startIndex);,0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2894,        if (bufSize <= 0) {,4,3,0,1,3,0,8,0,0,15,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2895,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2898,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),8,0,0,5,11,0,0,2,0,11,84,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2901,        StringBuilder buf = new StringBuilder(bufSize);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2903,        for (int i = startIndex; i < endIndex; i++) {,28,8,0,1,3,0,0,0,0,38,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2904,            if (i > startIndex) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2905,                buf.append(separator);,0,0,0,1,2,0,18,0,0,18,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2907,            if (array[i] != null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2908,                buf.append(array[i]);,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2911,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2931,        if (iterator == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2932,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2934,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2935,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2937,        Object first = iterator.next();,4,1,0,1,2,0,4,2,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2938,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2939,            return ObjectUtils.toString(first);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2943,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",2,0,0,1,2,0,0,4,0,6,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2944,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2945,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2948,        while (iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2949,            buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2950,            Object obj = iterator.next();,2,0,0,1,2,0,4,2,0,8,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2951,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2952,                buf.append(obj);,0,0,0,1,2,0,6,0,0,6,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2954,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2956,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2975,        if (iterator == null) {,2,0,0,1,3,0,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2976,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2978,        if (!iterator.hasNext()) {,6,1,0,2,5,0,10,0,0,19,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2979,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2981,        Object first = iterator.next();,2,0,0,1,2,0,4,2,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2982,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2983,            return ObjectUtils.toString(first);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2987,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",0,0,0,1,2,0,0,0,0,3,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2988,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2989,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2992,        while (iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2993,            if (separator != null) {,2,1,0,1,3,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2994,                buf.append(separator);,2,1,0,1,2,0,6,0,0,9,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2996,            Object obj = iterator.next();,0,1,0,1,2,0,4,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2997,            if (obj != null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2998,                buf.append(obj);,2,0,0,1,2,0,12,0,0,14,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3000,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3001,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3019,        if (collection == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3020,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3022,"        return join(collection.iterator(), separator);",0,0,0,2,4,1,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3040,        if (collection == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3041,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3043,"        return join(collection.iterator(), separator);",0,0,0,2,4,1,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3063,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3064,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3066,        int sz = str.length();,8,0,0,1,2,0,4,2,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3067,        char[] chs = new char[sz];,0,0,0,2,4,0,0,0,0,6,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3068,        int count = 0;,4,0,1,0,0,0,0,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3069,        for (int i = 0; i < sz; i++) {,6,0,0,1,3,0,0,4,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3070,            if (!Character.isWhitespace(str.charAt(i))) {,2,0,0,3,7,0,0,0,0,2,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3071,                chs[count++] = str.charAt(i);,2,1,1,2,4,0,14,0,0,21,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3074,        if (count == sz) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3075,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3077,"        return new String(chs, 0, count);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3107,        if (isEmpty(str) || isEmpty(remove)) {,2,1,0,3,7,0,8,0,0,12,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3108,            return str;,4,0,0,0,0,1,0,2,0,6,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3110,        if (str.startsWith(remove)){,0,0,0,2,5,0,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3111,            return str.substring(remove.length());,0,0,0,2,4,1,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3113,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3142,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3143,            return str;,6,0,0,0,0,1,1,0,0,7,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3145,"        if (startsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,6,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3146,            return str.substring(remove.length());,0,0,0,2,4,1,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3148,        return str;,8,2,0,0,0,1,6,0,0,16,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3176,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3177,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3179,        if (str.endsWith(remove)) {,0,0,0,2,5,0,6,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3180,"            return str.substring(0, str.length() - remove.length());",0,1,0,3,6,1,12,0,0,13,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3182,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3210,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3211,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3213,"        if (endsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3214,"            return str.substring(0, str.length() - remove.length());",2,2,0,3,6,1,12,0,0,17,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3216,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3243,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3244,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3246,"        return replace(str, remove, EMPTY, -1);",0,0,0,1,2,1,8,0,0,9,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3269,        if (isEmpty(str) || str.indexOf(remove) == -1) {,0,0,0,3,7,0,0,0,0,10,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3270,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3272,        char[] chars = str.toCharArray();,0,0,0,2,4,0,0,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3273,        int pos = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3274,        for (int i = 0; i < chars.length; i++) {,12,2,0,1,3,0,0,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3275,            if (chars[i] != remove) {,4,1,1,2,5,0,0,0,0,9,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3276,                chars[pos++] = chars[i];,10,1,1,2,4,0,0,0,0,20,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3279,"        return new String(chars, 0, pos);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3308,"        return replace(text, searchString, replacement, 1);",0,0,0,1,2,1,8,0,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3335,"        return replace(text, searchString, replacement, -1);",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3367,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,4,4,0,3,7,0,8,0,0,18,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3368,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3370,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3371,"        int end = text.indexOf(searchString, start);",0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3372,        if (end == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3373,            return text;,4,0,0,0,0,1,4,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3375,        int replLength = searchString.length();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3376,        int increase = replacement.length() - replLength;,6,2,0,1,2,0,4,0,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3377,        increase = (increase < 0 ? 0 : increase);,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3378,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3379,        StringBuilder buf = new StringBuilder(text.length() + increase);,0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3380,        while (end != -1) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3381,"            buf.append(text.substring(start, end)).append(replacement);",0,0,0,3,6,0,12,0,0,12,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3382,            start = end + replLength;,6,1,0,0,0,0,6,0,0,14,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3383,            if (--max == 0) {,2,1,0,1,3,0,0,0,0,4,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3384,                break;,2,1,0,0,0,0,4,0,0,7,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3386,"            end = text.indexOf(searchString, start);",0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3388,        buf.append(text.substring(start));,8,1,0,2,4,0,0,0,0,10,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3389,        return buf.toString();,2,0,0,1,2,1,4,0,0,6,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3432,"        return replaceEach(text, searchList, replacementList, false, 0);",0,0,0,1,2,1,0,0,0,4,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3483,        int timeToLive = searchList == null ? 0 : searchList.length;,0,0,0,0,0,0,0,0,0,0,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3484,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",0,0,0,1,2,1,0,0,0,4,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3542,        if (text == null || text.length() == 0 || searchList == null || ,0,0,0,1,3,0,0,0,0,4,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3545,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3549,        if (timeToLive < 0) {,2,1,0,1,3,0,10,0,0,14,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3550,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",8,1,0,1,2,0,6,2,0,19,92,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3553,        int searchLength = searchList.length;,8,1,0,0,0,0,0,0,0,9,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3554,        int replacementLength = replacementList.length;,0,0,0,0,0,0,0,0,0,0,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3557,        if (searchLength != replacementLength) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3558,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0,0,0,0,1,0,4,2,0,7,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3565,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,6,1,1,2,4,0,0,0,0,9,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3568,        int textIndex = -1;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3569,        int replaceIndex = -1;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3570,        int tempIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3574,        for (int i = 0; i < searchLength; i++) {,12,1,0,1,3,0,6,0,0,20,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3575,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3578,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3580,            tempIndex = text.indexOf(searchList[i]);,6,1,1,2,4,0,4,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3583,            if (tempIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3584,                noMoreMatchesForReplIndex[i] = true;,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3586,                if (textIndex == -1 || tempIndex < textIndex) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3587,                    textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3588,                    replaceIndex = i;,4,1,1,0,0,0,4,0,0,14,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3595,        if (textIndex == -1) {,8,2,0,1,3,0,10,0,0,22,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3596,            return text;,8,1,0,0,0,1,4,0,0,14,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3599,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3602,        int increase = 0;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3605,        for (int i = 0; i < searchList.length; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3606,            int greater = replacementList[i].length() - searchList[i].length();,2,1,1,4,8,0,4,0,0,15,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3607,            if (greater > 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3608,                increase += 3 * greater; // assume 3 matches,0,0,0,0,0,0,0,0,0,0,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3612,"        increase = Math.min(increase, text.length() / 5);",2,1,0,2,4,0,10,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3614,        StringBuilder buf = new StringBuilder(text.length() + increase);,2,0,0,2,4,0,0,0,0,2,64,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3616,        while (textIndex != -1) {,2,1,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3618,            for (int i = start; i < textIndex; i++) {,10,1,0,1,3,0,0,0,0,12,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3619,                buf.append(text.charAt(i));,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3621,            buf.append(replacementList[replaceIndex]);,0,0,1,2,4,0,4,0,0,8,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3623,            start = textIndex + searchList[replaceIndex].length();,16,1,0,2,4,0,4,0,0,22,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3625,            textIndex = -1;,8,0,0,0,0,0,0,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3626,            replaceIndex = -1;,2,0,0,0,0,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3627,            tempIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3630,            for (int i = 0; i < searchLength; i++) {,8,1,0,1,3,0,0,0,0,10,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3631,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3634,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3636,"                tempIndex = text.indexOf(searchList[i], start);",0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3639,                if (tempIndex == -1) {,8,1,0,1,3,0,0,0,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3640,                    noMoreMatchesForReplIndex[i] = true;,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3642,                    if (textIndex == -1 || tempIndex < textIndex) {,6,3,0,1,3,0,0,0,0,10,47,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3643,                        textIndex = tempIndex;,6,0,1,0,0,0,0,0,0,12,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3644,                        replaceIndex = i;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3651,        int textLength = text.length();,8,1,0,1,2,0,10,0,0,19,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3652,        for (int i = start; i < textLength; i++) {,10,1,0,1,3,0,0,0,0,12,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3653,            buf.append(text.charAt(i));,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3655,        String result = buf.toString();,4,1,0,1,2,0,4,2,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3656,        if (!repeat) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3657,            return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3660,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",0,0,0,1,2,1,0,0,0,4,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3686,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3687,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3689,"        return str.replace(searchChar, replaceChar);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3729,        if (isEmpty(str) || isEmpty(searchChars)) {,6,1,0,3,7,0,20,0,0,28,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3730,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3732,        if (replaceChars == null) {,4,1,0,1,3,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3733,            replaceChars = EMPTY;,4,0,0,0,0,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3735,        boolean modified = false;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3736,        int replaceCharsLength = replaceChars.length();,2,0,0,1,2,0,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3737,        int strLength = str.length();,4,0,0,1,2,0,4,0,0,9,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3738,        StringBuilder buf = new StringBuilder(strLength);,4,0,0,1,2,0,0,4,0,8,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3739,        for (int i = 0; i < strLength; i++) {,8,1,0,1,3,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3740,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3741,            int index = searchChars.indexOf(ch);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3742,            if (index >= 0) {,8,1,0,1,3,1,0,4,0,14,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3743,                modified = true;,2,0,0,0,0,0,0,0,0,4,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3744,                if (index < replaceCharsLength) {,4,1,0,1,3,0,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3745,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,10,0,0,10,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3748,                buf.append(ch);,8,2,0,1,2,0,6,0,0,16,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3751,        if (modified) {,8,2,0,1,3,1,0,0,0,11,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3752,            return buf.toString();,4,0,0,1,2,1,0,4,0,8,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3754,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3789,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3790,            return null;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3792,        if (overlay == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3793,            overlay = EMPTY;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3795,        int len = str.length();,2,0,0,1,2,0,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3796,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3797,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3799,        if (start > len) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3800,            start = len;,6,1,0,0,0,0,0,0,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3802,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3803,            end = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3805,        if (end > len) {,6,2,0,1,3,0,4,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3806,            end = len;,4,0,0,0,0,0,0,0,0,5,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3808,        if (start > end) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3809,            int temp = start;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3810,            start = end;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3811,            end = temp;,4,0,0,0,0,0,0,0,0,5,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3813,        return new StringBuilder(len + start - end + overlay.length() + 1),0,0,0,2,4,1,0,0,0,7,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3848,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3849,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3852,        if (str.length() == 1) {,0,1,0,2,5,0,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3853,            char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3854,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3855,                return EMPTY;,8,1,0,0,0,1,0,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3857,            return str;,2,1,0,0,0,1,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3860,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3861,        char last = str.charAt(lastIdx);,2,0,0,1,2,0,6,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3863,        if (last == CharUtils.LF) {,0,1,0,1,3,0,4,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3864,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3865,                lastIdx--;,2,0,0,0,0,0,4,0,0,7,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3867,        } else if (last != CharUtils.CR) {,0,0,0,1,4,0,0,0,0,5,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3868,            lastIdx++;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3870,"        return str.substring(0, lastIdx);",6,1,0,1,2,1,10,0,0,17,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3900,        if (isEmpty(str) || separator == null) {,6,3,0,2,5,0,4,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3901,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3903,        if (str.endsWith(separator)) {,8,1,0,2,5,1,6,0,0,17,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3904,"            return str.substring(0, str.length() - separator.length());",0,0,0,3,6,1,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3906,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3935,        if (str == null) {,2,1,0,1,3,0,6,0,0,9,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3936,            return null;,6,2,0,0,0,1,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3938,        int strLen = str.length();,0,0,0,1,2,0,4,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3939,        if (strLen < 2) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3940,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3942,        int lastIdx = strLen - 1;,8,1,0,0,0,0,0,0,0,9,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3943,"        String ret = str.substring(0, lastIdx);",0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3944,        char last = str.charAt(lastIdx);,2,0,0,1,2,0,6,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3945,        if (last == CharUtils.LF) {,6,1,0,1,3,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3946,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3947,"                return ret.substring(0, lastIdx - 1);",2,1,0,1,2,1,4,0,0,7,37,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3950,        return ret;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3979,        if (str == null) {,2,0,0,1,3,0,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3980,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3982,        if (repeat <= 0) {,8,1,0,1,3,0,0,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3983,            return EMPTY;,4,1,0,0,0,1,0,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3985,        int inputLength = str.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3986,        if (repeat == 1 || inputLength == 0) {,8,1,0,1,3,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3987,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3989,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3990,"            return padding(repeat, str.charAt(0));",0,0,0,2,4,1,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3993,        int outputLength = inputLength * repeat;,6,1,0,0,0,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3994,        switch (inputLength) {,10,4,0,1,3,0,0,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3996,                char ch = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3997,                char[] output1 = new char[outputLength];,2,0,1,2,4,0,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3998,                for (int i = repeat - 1; i >= 0; i--) {,8,2,0,1,3,0,0,0,0,11,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3999,                    output1[i] = ch;,2,0,1,1,2,0,0,0,0,7,16,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4001,                return new String(output1);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4003,                char ch0 = str.charAt(0);,2,0,0,1,2,0,0,0,0,2,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4004,                char ch1 = str.charAt(1);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4005,                char[] output2 = new char[outputLength];,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4006,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",10,3,0,1,3,0,0,0,0,15,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4007,                    output2[i] = ch0;,2,0,1,1,2,0,0,0,0,7,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4008,                    output2[i + 1] = ch1;,4,1,1,1,2,0,0,0,0,8,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4010,                return new String(output2);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4012,                StringBuilder buf = new StringBuilder(outputLength);,0,0,0,1,2,0,0,0,0,3,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4013,                for (int i = 0; i < repeat; i++) {,8,1,0,1,3,0,0,0,0,10,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4014,                    buf.append(str);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4016,                return buf.toString();,6,3,0,1,2,1,8,0,0,17,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4040,        if(str == null || separator == null) {,4,3,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4041,"            return repeat(str, repeat);",2,0,0,1,2,1,2,2,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4044,"            String result = repeat(str + separator, repeat);",6,1,0,1,2,0,4,2,0,13,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4045,"            return removeEnd(result, separator);",0,0,0,1,2,1,6,0,0,6,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4073,        if (repeat < 0) {,4,1,0,1,3,0,0,0,0,5,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4074,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",2,1,0,1,2,0,0,2,0,6,79,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4076,        final char[] buf = new char[repeat];,2,0,1,2,4,1,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4077,        for (int i = 0; i < buf.length; i++) {,10,1,0,1,3,0,0,0,0,12,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4078,            buf[i] = padChar;,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4080,        return new String(buf);,2,0,0,1,2,1,0,2,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4103,"        return rightPad(str, size, ' ');",2,0,0,1,2,1,6,0,0,9,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4128,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4129,            return null;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4131,        int pads = size - str.length();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4132,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4133,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4135,        if (pads > PAD_LIMIT) {,2,0,0,1,3,0,8,0,0,11,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4136,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,12,0,0,12,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4138,"        return str.concat(padding(pads, padChar));",6,1,0,2,4,1,10,0,0,18,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4165,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4166,            return null;,8,3,0,0,0,1,0,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4168,        if (isEmpty(padStr)) {,2,0,0,2,5,0,4,0,0,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4169,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4171,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4172,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4173,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4174,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4175,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4177,        if (padLen == 1 && pads <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4178,"            return rightPad(str, size, padStr.charAt(0));",2,1,0,2,4,1,10,0,0,13,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4181,        if (pads == padLen) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4182,            return str.concat(padStr);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4183,        } else if (pads < padLen) {,6,1,0,1,4,0,0,0,0,8,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4184,"            return str.concat(padStr.substring(0, pads));",0,0,0,2,4,1,10,0,0,10,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4186,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4187,            char[] padChars = padStr.toCharArray();,0,0,0,2,4,0,10,0,0,10,39,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4188,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,6,0,0,16,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4189,                padding[i] = padChars[i % padLen];,2,1,0,2,4,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4191,            return str.concat(new String(padding));,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4215,"        return leftPad(str, size, ' ');",2,1,0,1,2,1,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4240,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4241,            return null;,4,2,0,0,0,1,8,0,0,14,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4243,        int pads = size - str.length();,8,2,0,1,2,0,4,0,0,14,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4244,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4245,            return str; // returns original String when possible,2,0,0,0,0,1,6,0,0,8,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4247,        if (pads > PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4248,"            return leftPad(str, size, String.valueOf(padChar));",4,3,0,2,4,1,12,0,0,19,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4250,"        return padding(pads, padChar).concat(str);",2,0,0,2,4,1,4,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4277,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4278,            return null;,10,0,0,0,0,1,8,0,0,18,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4280,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4281,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4283,        int padLen = padStr.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4284,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4285,        int pads = size - strLen;,12,3,0,0,0,0,0,0,0,16,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4286,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4287,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4289,        if (padLen == 1 && pads <= PAD_LIMIT) {,2,0,0,1,3,0,0,0,0,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4290,"            return leftPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4293,        if (pads == padLen) {,6,1,0,1,3,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4294,            return padStr.concat(str);,0,0,0,1,2,1,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4295,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4296,"            return padStr.substring(0, pads).concat(str);",2,1,0,2,4,1,10,0,0,13,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4298,            char[] padding = new char[pads];,0,0,0,2,4,0,0,0,0,1,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4299,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4300,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,0,0,0,10,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4301,                padding[i] = padChars[i % padLen];,10,1,1,2,4,0,0,0,0,19,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4303,            return new String(padding).concat(str);,0,0,0,2,4,1,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4316,        return str == null ? 0 : str.length();,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4345,"        return center(str, size, ' ');",0,0,0,1,2,1,6,0,0,7,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4373,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4374,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4376,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4377,        int pads = size - strLen;,6,0,0,0,0,1,0,4,0,11,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4378,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4379,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4381,"        str = leftPad(str, strLen + pads / 2, padChar);",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4382,"        str = rightPad(str, size, padChar);",4,0,1,1,2,0,8,0,0,18,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4383,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4413,        if (str == null || size <= 0) {,16,4,0,1,3,0,0,0,0,22,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4414,            return str;,2,0,0,0,0,1,12,0,0,14,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4416,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4417,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4419,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4420,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4421,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4422,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4424,"        str = leftPad(str, strLen + pads / 2, padStr);",0,0,0,1,2,0,0,0,0,3,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4425,"        str = rightPad(str, size, padStr);",6,1,0,1,2,0,8,4,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4426,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4451,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4452,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4454,        return str.toUpperCase();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4474,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4475,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4477,        return str.toUpperCase(locale);,2,0,0,1,2,1,0,0,0,2,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4500,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4501,            return null;,4,0,0,0,0,1,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4503,        return str.toLowerCase();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4523,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4524,            return null;,2,0,1,0,0,1,0,0,0,6,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4526,        return str.toLowerCase(locale);,2,1,0,1,2,1,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4551,        if (str == null || (strLen = str.length()) == 0) {,6,4,0,3,7,0,4,0,0,15,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4552,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4554,        return new StringBuilder(strLen),2,0,0,1,2,1,0,2,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4582,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4583,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4585,        return new StringBuilder(strLen),4,1,0,1,2,1,0,0,0,5,32,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4620,        if (str == null || (strLen = str.length()) == 0) {,4,3,1,3,7,0,6,0,0,23,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4621,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4623,        StringBuilder buffer = new StringBuilder(strLen);,0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4625,        char ch = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4626,        for (int i = 0; i < strLen; i++) {,20,2,0,1,3,0,0,0,0,24,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4627,            ch = str.charAt(i);,4,0,0,1,2,0,10,0,0,15,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4628,            if (Character.isUpperCase(ch)) {,2,1,0,2,5,0,6,0,0,9,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4629,                ch = Character.toLowerCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4630,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4631,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,0,2,0,4,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4632,            } else if (Character.isLowerCase(ch)) {,2,1,0,2,6,0,6,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4633,                ch = Character.toUpperCase(ch);,4,1,0,1,2,0,14,2,0,24,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4635,            buffer.append(ch);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4637,        return buffer.toString();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4662,        if (isEmpty(str) || isEmpty(sub)) {,0,1,0,3,7,0,8,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4663,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4665,        int count = 0;,12,1,0,0,0,0,6,0,0,20,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4666,        int idx = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4667,"        while ((idx = str.indexOf(sub, idx)) != -1) {",4,2,1,3,7,0,8,0,0,20,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4668,            count++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4669,            idx += sub.length();,2,0,0,1,2,0,4,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4671,        return count;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4695,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4696,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4698,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4699,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4700,            if (Character.isLetter(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4701,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4704,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4729,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4730,            return false;,10,1,0,0,0,1,0,0,0,12,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4732,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4733,        for (int i = 0; i < sz; i++) {,12,3,1,1,3,0,6,0,0,24,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4734,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,4,1,0,6,13,0,0,0,0,5,77,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4735,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4738,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4762,        if (str == null) {,16,4,0,1,3,0,0,0,0,20,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4763,            return false;,6,3,0,0,0,1,0,0,0,9,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4765,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4766,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4767,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,0,0,0,3,7,0,10,0,0,10,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4768,                return false;,0,0,0,0,0,1,8,2,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4771,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4796,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4797,            return false;,0,3,0,0,0,1,16,0,0,21,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4799,        int sz = str.length();,0,0,0,1,2,0,4,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4800,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4801,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4802,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4805,        return true;,10,1,0,0,0,1,6,4,0,22,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4834,        if (str == null) {,2,0,0,1,3,0,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4835,            return false;,0,0,0,0,0,1,8,2,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4837,        int sz = str.length();,0,0,0,1,2,0,8,0,0,8,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4838,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4839,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4840,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4843,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4868,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4869,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4871,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4872,        for (int i = 0; i < sz; i++) {,14,1,0,1,3,1,0,0,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4873,            if (Character.isDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4874,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4877,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4904,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4905,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4907,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4908,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4909,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,76,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4910,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4913,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4936,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4937,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4939,        int sz = str.length();,0,0,0,1,2,0,0,0,0,1,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4940,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4941,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,2,1,0,4,9,0,0,0,0,3,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4942,                return false;,0,0,0,0,0,1,6,2,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4945,        return true;,2,1,1,0,0,1,0,0,0,7,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4966,        if (str == null || isEmpty(str)) {,12,3,0,2,5,0,4,0,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4967,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4969,        int sz = str.length();,4,1,1,1,2,0,0,0,0,12,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4970,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,0,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4971,            if (Character.isLowerCase(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4972,                return false;,0,0,0,0,0,1,6,0,0,6,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4975,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4996,        if (str == null || isEmpty(str)) {,2,2,0,2,5,0,4,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4997,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4999,        int sz = str.length();,4,0,0,1,2,0,4,0,0,8,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5000,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,6,2,0,20,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5001,            if (Character.isUpperCase(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5002,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5005,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5027,        return str == null ? EMPTY : str;,0,0,0,0,0,1,0,0,0,1,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5048,        return str == null ? defaultStr : str;,6,1,0,0,0,1,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5069,        return StringUtils.isEmpty(str) ? defaultStr : str;,4,0,0,1,2,1,6,0,0,10,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5089,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5090,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5092,        return new StringBuilder(str).reverse().toString();,2,0,0,3,6,1,4,0,0,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5115,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5116,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5120,"        String[] strs = split(str, separatorChar);",2,0,0,2,4,0,6,2,0,10,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5121,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,6,0,0,6,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5122,"        return join(strs, separatorChar);",0,0,0,1,2,1,6,0,0,7,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5160,"        return abbreviate(str, 0, maxWidth);",0,0,0,1,2,1,6,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5199,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5200,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5202,        if (maxWidth < 4) {,0,0,0,1,3,0,8,0,0,8,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5203,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,0,0,2,0,3,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5205,        if (str.length() <= maxWidth) {,4,1,1,2,5,0,4,0,0,14,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5206,            return str;,2,0,0,0,0,1,10,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5208,        if (offset > str.length()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5209,            offset = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5211,        if ((str.length() - offset) < (maxWidth - 3)) {,4,3,0,4,9,0,4,0,0,11,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5212,            offset = str.length() - (maxWidth - 3);,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5214,        if (offset <= 4) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5215,"            return str.substring(0, maxWidth - 3) + ""..."";",4,2,0,1,2,1,4,0,0,11,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5217,        if (maxWidth < 7) {,2,1,0,1,3,0,0,0,0,4,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5218,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0,0,0,1,2,0,0,2,0,3,82,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5220,        if ((offset + (maxWidth - 3)) < str.length()) {,16,6,0,4,9,0,4,0,0,26,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5221,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",2,2,0,2,4,1,8,0,0,13,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5223,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",2,3,0,3,6,1,8,0,0,14,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5254,        if (str1 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5255,            return str2;,0,0,0,0,0,1,0,2,0,3,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5257,        if (str2 == null) {,4,1,0,1,3,0,0,0,0,5,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5258,            return str1;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5260,"        int at = indexOfDifference(str1, str2);",8,1,0,1,2,0,14,0,0,23,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5261,        if (at == -1) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5262,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5264,        return str2.substring(at);,0,1,0,1,2,1,10,0,0,11,26,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5291,        if (str1 == str2) {,6,1,0,1,3,0,0,0,0,7,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5292,            return -1;,4,0,0,0,0,1,22,0,0,27,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5294,        if (str1 == null || str2 == null) {,4,4,0,1,3,0,18,0,0,26,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5295,            return 0;,2,0,0,0,0,1,0,0,0,2,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5298,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,8,3,0,3,7,0,8,0,0,21,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5299,            if (str1.charAt(i) != str2.charAt(i)) {,4,1,0,3,7,0,12,0,0,18,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5300,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5303,        if (i < str2.length() || i < str1.length()) {,4,3,0,3,7,0,14,0,0,21,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5304,            return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5306,        return -1;,2,3,1,0,0,1,4,0,0,19,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5341,        if (strs == null || strs.length <= 1) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5342,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5344,        boolean anyStringNull = false;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5345,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5346,        int arrayLen = strs.length;,16,3,0,0,0,0,0,0,0,20,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5347,        int shortestStrLen = Integer.MAX_VALUE;,0,0,0,0,0,0,0,0,0,0,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5348,        int longestStrLen = 0;,4,0,0,0,0,0,0,0,0,4,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5353,        for (int i = 0; i < arrayLen; i++) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5354,            if (strs[i] == null) {,0,1,1,2,5,0,0,0,0,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5355,                anyStringNull = true;,2,0,0,0,0,0,0,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5356,                shortestStrLen = 0;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5358,                allStringsNull = false;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5359,"                shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",2,0,1,3,6,0,8,0,0,15,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5360,"                longestStrLen = Math.max(strs[i].length(), longestStrLen);",2,1,0,3,6,0,0,0,0,3,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5365,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,6,3,0,2,5,0,0,0,0,10,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5366,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5370,        if (shortestStrLen == 0) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5371,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5375,        int firstDiff = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5376,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,8,1,1,1,3,0,4,0,0,18,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5377,            char comparisonChar = strs[0].charAt(stringPos);,2,0,1,2,4,0,4,0,0,8,48,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5378,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,0,0,0,1,3,0,0,0,0,4,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5379,                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {,2,1,1,3,7,0,4,0,0,11,57,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5380,                    firstDiff = stringPos;,4,0,0,0,0,0,0,0,0,5,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5381,                    break;,10,0,0,0,0,0,6,0,0,16,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5384,            if (firstDiff != -1) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5385,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5389,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,6,3,0,1,3,0,0,0,0,10,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5393,            return shortestStrLen;,2,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5395,        return firstDiff;,0,1,1,0,0,1,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5432,        if (strs == null || strs.length == 0) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5433,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5435,        int smallestIndexOfDiff = indexOfDifference(strs);,0,0,0,1,2,0,0,0,0,3,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5436,        if (smallestIndexOfDiff == -1) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5438,            if (strs[0] == null) {,0,1,1,2,5,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5439,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5441,            return strs[0];,0,0,1,1,2,1,6,0,0,11,15,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5442,        } else if (smallestIndexOfDiff == 0) {,2,1,0,1,4,0,0,0,0,3,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5444,            return EMPTY;,10,1,0,0,0,1,0,0,0,12,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5447,"            return strs[0].substring(0, smallestIndexOfDiff);",0,0,1,2,4,1,4,0,0,6,49,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5488,        if (s == null || t == null) {,4,3,0,1,3,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5489,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5509,        int n = s.length(); // length of s,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5510,        int m = t.length(); // length of t,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5512,        if (n == 0) {,4,1,1,1,3,0,4,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5513,            return m;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5514,        } else if (m == 0) {,2,1,0,1,4,0,0,0,0,3,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5515,            return n;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5518,        if (n > m) {,4,1,0,1,3,0,0,0,0,6,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5520,            String tmp = s;,4,0,0,0,0,0,0,2,0,6,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5521,            s = t;,10,3,0,0,0,0,0,0,0,15,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5522,            t = tmp;,4,0,0,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5523,            n = m;,6,0,0,0,0,0,0,0,0,9,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5524,            m = t.length();,0,0,0,1,2,0,0,0,0,1,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5527,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",4,1,0,2,4,0,0,0,0,5,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5528,"        int d[] = new int[n+1]; // cost array, horizontally",20,3,1,2,4,0,0,0,0,27,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5539,        for (i = 0; i<=n; i++) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5540,            p[i] = i;,2,3,1,1,2,0,0,0,0,18,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5543,        for (j = 1; j<=m; j++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5544,            t_j = t.charAt(j-1);,4,1,0,1,2,0,4,0,0,10,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5545,            d[0] = j;,2,0,1,1,2,0,0,0,0,5,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5547,            for (i=1; i<=n; i++) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5548,                cost = s.charAt(i-1)==t_j ? 0 : 1;,6,2,0,1,2,0,4,0,0,13,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5550,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",6,5,1,6,12,0,8,0,0,32,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5554,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5555,            p = d;,20,4,0,0,0,0,0,0,0,27,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5556,            d = _d;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5561,        return p[n];,0,0,1,1,2,1,0,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5610,"        return startsWith(str, prefix, false);",0,0,0,1,2,1,6,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5635,"        return startsWith(str, prefix, true);",0,0,0,1,2,1,6,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5650,        if (str == null || prefix == null) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5651,            return (str == null && prefix == null);,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5653,        if (prefix.length() > str.length()) {,0,0,0,3,7,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5654,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5656,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",2,0,0,2,4,1,20,0,0,23,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5678,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,0,0,0,3,7,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5679,            return false;,0,0,0,0,0,1,0,0,0,2,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5681,        for (int i = 0; i < searchStrings.length; i++) {,0,0,0,1,3,0,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5682,            String searchString = searchStrings[i];,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5683,"            if (StringUtils.startsWith(string, searchString)) {",2,1,0,2,5,0,0,0,0,3,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5684,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5687,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5716,"        return endsWith(str, suffix, false);",0,0,0,1,2,1,6,0,0,7,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5742,"        return endsWith(str, suffix, true);",0,0,0,1,2,1,6,0,0,7,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5757,        if (str == null || suffix == null) {,4,3,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5758,            return (str == null && suffix == null);,6,5,1,1,2,1,8,0,0,33,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5760,        if (suffix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5761,            return false;,6,0,0,0,0,1,4,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5763,        int strOffset = str.length() - suffix.length();,2,1,0,2,4,0,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5764,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,2,4,1,0,0,0,7,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,170,            return StringUtils.EMPTY;,2,1,0,0,0,1,0,0,0,3,25,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,230,            return StringUtils.EMPTY;,0,0,0,0,0,1,4,0,0,4,25,7,1.0,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,229,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,232,        return getPackageName(cls.getName());,2,0,0,2,4,4,6,4,0,15,37,1,0.5,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,201,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,245,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.16667,1,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,252,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,4,0,0,1,2,0,12,2,0,18,54,3,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,253,        if (i == -1) {,2,1,0,1,3,0,0,0,0,4,14,4,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,256,"        return className.substring(0, i);",0,0,0,1,2,1,0,0,0,4,33,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,2,0,0,1,2,3,6,2,0,13,86,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,94,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",0,0,0,1,2,0,0,0,0,3,101,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",4,0,0,1,2,0,4,2,0,10,53,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",4,0,0,1,2,0,4,2,0,10,47,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",4,0,0,1,2,0,4,2,0,10,57,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",0,0,0,1,2,0,0,0,0,3,53,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",4,0,0,1,2,0,4,2,0,10,47,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",4,0,0,1,2,0,4,2,0,10,51,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",8,0,0,1,2,0,4,0,0,12,46,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,91,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,0,0,0,2,5,0,0,0,0,7,62,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,92,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,2,0,0,1,2,0,6,2,0,10,64,6,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,93,            if (!primitiveClass.equals(wrapperClass)) {,4,3,0,2,5,0,20,0,0,30,43,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,94,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,1,2,0,8,0,0,8,54,9,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,96,        },0,0,0,0,1,0,0,0,0,1,1,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,102,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",6,3,0,1,2,3,6,12,0,30,89,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,107,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",0,0,0,1,2,0,0,0,0,3,96,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,124,"        addAbbreviation(""int"", ""I"");",0,0,0,1,2,0,2,0,0,4,28,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,125,"        addAbbreviation(""boolean"", ""Z"");",0,0,0,1,2,0,2,0,0,4,32,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,126,"        addAbbreviation(""float"", ""F"");",0,0,0,1,2,0,0,0,0,3,30,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,127,"        addAbbreviation(""long"", ""J"");",0,0,0,1,2,0,2,0,0,4,29,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,128,"        addAbbreviation(""short"", ""S"");",0,0,0,1,2,0,2,0,0,4,30,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,129,"        addAbbreviation(""byte"", ""B"");",4,0,0,1,2,3,0,4,0,12,29,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,130,"        addAbbreviation(""double"", ""D"");",0,0,0,1,2,0,2,0,0,4,31,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,131,"        addAbbreviation(""char"", ""C"");",2,0,0,1,2,0,4,2,0,10,29,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,132,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,116,"        abbreviationMap.put(primitive, abbreviation);",4,1,0,1,2,0,8,0,0,13,45,3,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,117,"        reverseAbbreviationMap.put(abbreviation, primitive);",0,0,0,1,2,0,8,0,0,8,52,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,118,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,169,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.03846,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,172,        return getShortClassName(cls.getName());,0,0,0,2,4,1,0,0,0,7,40,4,0.03846,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,455,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,459,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,6,1,0,4,8,0,4,4,0,16,67,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,460,"            escapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,24,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,461,            return writer.toString();,2,0,0,1,2,4,6,2,0,14,25,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,498,        if (writer == null ) {,6,4,0,1,3,0,0,0,0,12,22,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,501,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,504,"        Entities.HTML40.escape(writer, string);",4,0,0,1,2,0,6,0,0,10,39,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,505,    },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,832,"                    writer.write(""&#"");",0,0,0,1,2,0,0,0,0,3,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,833,"                    writer.write(Integer.toString(c, 10));",0,0,0,2,4,0,20,0,0,20,38,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,834,                    writer.write(';');,2,0,0,1,2,0,4,0,0,7,18,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,536,            return super.name(value);,0,0,0,1,2,1,0,0,0,4,25,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,831,                if (c > 0x7F) {,0,0,0,1,3,0,0,0,0,4,15,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang/Entities,42,961,"                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);",0,0,0,2,4,0,0,0,0,6,63,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,826,        int len = str.length();,6,1,0,1,2,3,8,2,0,20,23,1,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,827,        for (int i = 0; i < len; i++) {,12,1,0,1,3,0,0,0,0,15,31,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,828,            char c = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,0.2,1,0
defect4j,lang,org/apache/commons/lang/Entities,42,829,            String entityName = this.entityName(c);,6,1,0,1,2,3,4,2,0,16,39,1,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,830,            if (entityName == null) {,2,1,0,1,3,0,0,0,0,3,25,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,844,    },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,951,                        if (entityContentLen > 1) {,2,1,0,1,3,0,0,0,0,3,27,12,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,952,                            char isHexChar = entityContent.charAt(1);,0,0,0,1,2,0,0,0,0,3,41,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,954,                                switch (isHexChar) {,2,0,0,1,3,0,0,0,0,2,20,16,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,964,                                if (entityValue > 0xFFFF) {,0,0,0,1,3,0,0,0,0,4,27,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,969,                            },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,970,                        },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,525,        if (str == null) {,6,0,0,1,3,0,0,0,0,6,18,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,529,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,2,1,0,4,8,0,4,4,0,11,67,6,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,530,"            unescapeHtml(writer, str);",0,0,0,1,2,0,0,0,0,3,26,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,531,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,557,        if (writer == null ) {,4,1,0,1,3,0,0,0,0,5,22,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,560,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,563,"        Entities.HTML40.unescape(writer, string);",4,0,0,1,2,0,6,0,0,10,41,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,564,    },0,0,0,0,1,0,0,0,0,1,1,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,112,"        this(pattern, Locale.getDefault(), registry);",6,1,0,2,4,0,4,0,0,11,45,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,148,        ArrayList foundFormats = new ArrayList();,2,0,0,1,2,0,0,4,0,6,41,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,149,        ArrayList foundDescriptions = new ArrayList();,0,0,0,1,2,0,0,0,0,3,46,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,150,        StringBuffer stripCustom = new StringBuffer(pattern.length());,2,0,0,2,4,0,4,4,0,10,62,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,152,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,153,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,154,        int fmtCount = 0;,4,0,0,0,0,3,0,0,0,7,17,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,155,        while (pos.getIndex() < pattern.length()) {,0,1,0,3,7,0,8,0,0,9,43,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,156,            switch (c[pos.getIndex()]) {,0,0,1,3,7,0,4,0,0,6,28,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,187,                stripCustom.append(c[pos.getIndex()]);,2,0,1,3,6,0,12,0,0,16,38,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,188,                next(pos);,2,0,0,1,2,1,8,2,0,13,10,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,403,        pos.setIndex(pos.getIndex() + 1);,2,1,0,2,4,0,14,4,0,21,33,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,404,        return pos;,2,0,0,0,0,1,0,0,0,2,11,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,124,        super(DUMMY_PATTERN);,2,0,0,1,2,0,0,0,0,2,21,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,125,        setLocale(locale);,2,1,0,1,2,0,4,2,0,10,18,3,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,126,        this.registry = registry;,4,0,0,0,0,0,0,0,0,5,25,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,127,        applyPattern(pattern);,0,0,0,1,2,0,4,0,0,4,22,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,143,        if (registry == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,144,            super.applyPattern(pattern);,4,0,0,1,2,0,0,0,0,4,28,7,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,145,            toPattern = super.toPattern();,4,0,0,1,2,0,0,0,0,5,30,6,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,146,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,349,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,350,            chars = str.toCharArray();,10,0,0,1,2,0,4,4,0,19,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,351,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,363,            int len = chars.length;,8,0,0,0,0,0,4,0,0,13,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,364,            if (pos + len > bufferEnd) {,6,2,0,1,3,0,0,0,0,8,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,365,                return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,367,"            for (int i = 0; i < chars.length; i++, pos++) {",16,1,0,1,3,0,0,0,0,20,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,368,                if (chars[i] != buffer[pos]) {,0,0,0,3,7,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,369,                    return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,372,            return len;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,216,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,217,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",0,0,0,1,2,0,0,0,0,3,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,2,0,0,1,2,3,0,4,0,10,68,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,2,0,0,1,2,3,0,4,0,10,69,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",4,1,0,2,4,3,2,4,0,15,94,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,2,0,0,1,2,3,0,4,0,9,65,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,2,0,0,1,2,3,0,4,0,10,77,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",2,0,0,2,4,3,2,4,0,12,88,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,2,0,0,1,2,3,0,4,0,9,63,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,80,        return COMMA_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,89,        return TAB_MATCHER;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,98,        return SPACE_MATCHER;,2,0,0,0,0,1,0,2,0,5,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,108,        return SPLIT_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,117,        return TRIM_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,126,        return SINGLE_QUOTE_MATCHER;,4,0,0,0,0,1,0,0,0,4,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,135,        return DOUBLE_QUOTE_MATCHER;,2,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,144,        return QUOTE_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,153,        return NONE_MATCHER;,4,1,0,0,0,1,0,0,0,5,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,163,        return new CharMatcher(ch);,2,0,0,1,2,1,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,173,        if (chars == null || chars.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,174,            return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,176,        if (chars.length == 1) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,177,            return new CharMatcher(chars[0]);,0,0,1,2,4,1,0,2,0,4,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,179,        return new CharSetMatcher(chars);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,189,        if (chars == null || chars.length() == 0) {,2,3,0,2,5,0,4,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,190,            return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,192,        if (chars.length() == 1) {,0,1,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,193,            return new CharMatcher(chars.charAt(0));,0,0,0,2,4,1,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,195,        return new CharSetMatcher(chars.toCharArray());,0,0,0,2,4,1,4,2,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,205,        if (str == null || str.length() == 0) {,4,3,0,2,5,2,8,2,0,19,39,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,206,            return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,208,        return new StringMatcher(str);,0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,267,"        return isMatch(buffer, pos, 0, buffer.length);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,413,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,414,        },10,7,0,0,1,3,4,2,0,31,1,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,426,            return buffer[pos] <= 32 ? 1 : 0;,0,1,1,1,2,1,0,0,0,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,386,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,387,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,399,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,317,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,318,            this.ch = ch;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,319,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,331,            return ch == buffer[pos] ? 1 : 0;,2,1,1,1,2,1,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,284,            super();,10,1,0,1,2,0,0,0,0,13,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,285,            this.chars = (char[]) chars.clone();,2,0,0,3,6,0,4,0,0,7,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,286,            Arrays.sort(this.chars);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,287,        },2,0,0,0,1,0,0,0,0,2,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,299,"            return Arrays.binarySearch(chars, buffer[pos]) >= 0 ? 1 : 0;",0,1,1,2,4,1,6,0,0,11,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,90,"        this(pattern, Locale.getDefault());",0,0,0,2,4,0,0,0,0,6,35,4,0.0,1,1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,91,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,101,"        this(pattern, locale, null);",0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,102,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,113,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,128,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,134,        return toPattern;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,158,"                appendQuotedString(pattern, pos, stripCustom, true);",0,0,0,1,2,0,8,0,0,9,52,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,159,                break;,2,1,0,0,0,0,0,0,0,3,6,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,161,                fmtCount++;,16,3,0,0,0,0,0,0,0,21,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,162,"                seekNonWs(pattern, pos);",0,0,0,1,2,0,6,0,0,6,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,163,                int start = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,164,"                int index = readArgumentIndex(pattern, next(pos));",4,1,0,2,4,0,8,0,0,13,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,165,                stripCustom.append(START_FE).append(index);,0,0,0,2,4,0,10,0,0,10,43,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,166,"                seekNonWs(pattern, pos);",0,0,0,1,2,0,6,0,0,6,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,167,                Format format = null;,2,0,0,0,0,0,0,2,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,168,                String formatDescription = null;,4,0,0,0,0,0,0,4,0,9,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,169,                if (c[pos.getIndex()] == START_FMT) {,2,1,1,3,7,0,4,0,0,10,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,170,"                    formatDescription = parseFormatDescription(pattern,",6,1,0,0,1,0,4,0,0,12,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,172,                    format = getFormat(formatDescription);,2,0,0,1,2,0,4,0,0,7,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,173,                    if (format == null) {,2,1,0,1,3,0,0,0,0,3,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,174,                        stripCustom.append(START_FMT).append(formatDescription);,0,0,0,2,4,0,10,0,0,10,56,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,177,                foundFormats.add(format);,0,0,0,1,2,0,6,0,0,6,25,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,178,                foundDescriptions.add(format == null ? null : formatDescription);,0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,179,                Validate.isTrue(foundFormats.size() == fmtCount);,4,4,0,2,4,0,12,0,0,20,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,180,                Validate.isTrue(foundDescriptions.size() == fmtCount);,2,1,0,2,4,0,8,0,0,11,54,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,181,                if (c[pos.getIndex()] != END_FE) {,4,2,1,3,7,0,4,0,0,12,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,182,                    throw new IllegalArgumentException(,0,0,0,0,1,0,0,0,0,1,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,191,        super.applyPattern(stripCustom.toString());,4,0,1,2,4,0,4,0,0,11,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,192,"        toPattern = insertFormats(super.toPattern(), foundDescriptions);",4,0,0,2,4,0,4,0,0,9,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,193,        if (containsElements(foundFormats)) {,0,0,0,2,5,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,194,            Format[] origFormats = getFormats();,2,0,0,2,4,0,2,2,0,6,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,197,            int i = 0;,2,0,0,0,0,0,8,0,0,10,10,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,198,            for (Iterator it = foundFormats.iterator(); it.hasNext(); i++) {,0,0,0,3,7,0,0,0,0,10,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,199,                Format f = (Format) it.next();,0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,200,                if (f != null) {,2,1,0,1,3,0,0,0,0,3,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,201,                    origFormats[i] = f;,4,0,1,1,2,0,0,0,0,11,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,204,            super.setFormats(origFormats);,8,1,0,1,2,0,0,0,0,9,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,206,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,213,        throw new UnsupportedOperationException();,0,0,0,1,2,0,0,0,0,1,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,221,        throw new UnsupportedOperationException();,0,0,0,1,2,0,0,2,0,2,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,229,        throw new UnsupportedOperationException();,2,0,0,1,2,0,0,2,0,4,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,237,        throw new UnsupportedOperationException();,0,0,0,1,2,0,0,2,0,2,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,247,        if (registry != null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,248,            String name = desc;,4,0,0,0,0,0,0,2,0,6,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,249,            String args = null;,2,0,0,0,0,0,0,2,0,4,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,250,            int i = desc.indexOf(START_FMT);,2,0,0,1,2,0,6,0,0,8,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,251,            if (i > 0) {,2,1,0,1,3,0,6,0,0,9,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,252,"                name = desc.substring(0, i).trim();",0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,253,                args = desc.substring(i + 1).trim();,4,1,0,2,4,0,6,0,0,12,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,255,            FormatFactory factory = (FormatFactory) registry.get(name);,0,0,0,2,4,0,0,0,0,6,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,256,            if (factory != null) {,2,1,0,1,3,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,257,"                return factory.getFormat(name, args, getLocale());",6,1,0,2,4,1,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,260,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,271,        int start = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,272,"        seekNonWs(pattern, pos);",0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,273,        StringBuffer result = new StringBuffer();,2,0,0,1,2,0,0,4,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,274,        boolean error = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,275,        for (; !error && pos.getIndex() < pattern.length(); next(pos)) {,2,2,0,4,9,0,12,0,0,17,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,276,            char c = pattern.charAt(pos.getIndex());,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,277,            if (Character.isWhitespace(c)) {,4,0,0,2,5,1,6,2,0,13,32,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,278,"                seekNonWs(pattern, pos);",0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,279,                c = pattern.charAt(pos.getIndex());,4,0,0,2,4,3,12,0,0,21,35,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,280,                if (c != START_FMT && c != END_FE) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,281,                    error = true;,2,0,0,0,0,0,0,0,0,4,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,282,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,285,            if ((c == START_FMT || c == END_FE) && result.length() > 0) {,8,5,0,3,7,0,4,0,0,17,61,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,287,                    return Integer.parseInt(result.toString());,2,0,0,2,4,1,8,0,0,10,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,288,                } catch (NumberFormatException e) {,0,0,0,1,4,0,6,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,293,            error = !Character.isDigit(c);,2,0,0,1,2,0,6,0,0,10,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,294,            result.append(c);,0,0,0,1,2,0,6,0,0,6,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,296,        if (error) {,2,0,0,1,3,0,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,297,            throw new IllegalArgumentException(,0,0,0,0,1,0,0,2,0,2,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,301,        throw new IllegalArgumentException(,0,0,0,0,1,0,0,2,0,2,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,313,        int start = pos.getIndex();,8,2,0,1,2,3,6,0,0,20,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,314,"        seekNonWs(pattern, pos);",0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,315,        int text = pos.getIndex();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,316,        int depth = 1;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,317,        for (; pos.getIndex() < pattern.length(); next(pos)) {,0,1,0,4,9,0,12,0,0,13,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,318,            switch (pattern.charAt(pos.getIndex())) {,0,0,0,3,7,0,0,0,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,320,                depth++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,321,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,323,                depth--;,2,0,0,0,0,0,0,0,0,3,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,324,                if (depth == 0) {,2,1,0,1,3,0,0,0,0,3,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,325,"                    return pattern.substring(text, pos.getIndex());",2,0,0,2,4,1,10,0,0,12,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,329,"                getQuotedString(pattern, pos, false);",0,0,0,1,2,0,6,0,0,7,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,333,        throw new IllegalArgumentException(,0,0,0,0,1,0,0,2,0,2,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,345,        if (!containsElements(customPatterns)) {,0,0,0,2,5,0,4,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,346,            return pattern;,2,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,348,        StringBuffer sb = new StringBuffer(pattern.length() * 2);,2,1,0,2,4,0,4,4,0,11,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,349,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,350,        int fe = -1;,4,0,0,0,0,3,4,0,0,12,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,351,        int depth = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,352,        while (pos.getIndex() < pattern.length()) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,353,            char c = pattern.charAt(pos.getIndex());,2,0,0,2,4,0,8,0,0,10,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,354,            switch (c) {,2,0,0,1,3,0,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,356,"                appendQuotedString(pattern, pos, sb, false);",2,1,0,1,2,0,8,0,0,12,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,357,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,359,                depth++;,2,0,0,0,0,0,0,0,0,3,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,360,                if (depth == 1) {,4,1,0,1,3,0,0,0,0,5,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,361,                    fe++;,2,0,0,0,0,0,0,0,0,3,5,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,362,                    sb.append(START_FE).append(,0,0,0,1,3,0,8,0,0,8,27,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,364,                    String customPattern = (String) customPatterns.get(fe);,2,0,0,2,4,0,6,4,0,12,55,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,365,                    if (customPattern != null) {,2,1,0,1,3,0,0,0,0,3,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,366,                        sb.append(START_FMT).append(customPattern);,0,0,0,2,4,0,10,0,0,10,43,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,368,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,371,                depth--;,2,0,0,0,0,0,0,0,0,3,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,374,                sb.append(c);,0,0,0,1,2,0,6,0,0,6,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,375,                next(pos);,0,0,0,1,2,0,4,0,0,4,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,377,        },2,0,0,0,1,0,0,0,0,2,1,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,378,        return sb.toString();,2,0,0,1,2,1,4,0,0,6,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,388,        int len = 0;,10,1,0,0,0,0,0,0,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,389,        char[] buffer = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,391,"            len = StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex());",0,0,0,3,6,0,0,0,0,9,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,392,            pos.setIndex(pos.getIndex() + len);,2,1,0,2,4,0,8,0,0,11,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,393,        } while (len > 0 && pos.getIndex() < pattern.length());,2,3,0,3,7,0,8,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,394,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,419,        int start = pos.getIndex();,2,0,0,1,2,0,8,0,0,11,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,420,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,421,        if (escapingOn && c[start] == QUOTE) {,4,3,1,2,5,0,10,0,0,21,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,422,            return appendTo == null ? null : appendTo.append(QUOTE);,2,1,0,1,2,1,6,0,0,9,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,424,        int lastHold = start;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,425,        for (int i = pos.getIndex(); i < pattern.length(); i++) {,6,1,0,3,7,0,8,0,0,16,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,426,            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {,2,1,0,3,7,0,16,0,0,19,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,427,"                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(",4,1,1,2,5,0,14,2,0,25,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,429,                pos.setIndex(i + ESCAPED_QUOTE.length());,2,1,0,2,4,0,8,0,0,11,41,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,430,                lastHold = pos.getIndex();,2,0,0,1,2,0,4,0,0,7,26,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,431,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,433,            switch (c[pos.getIndex()]) {,0,0,1,3,7,0,4,0,0,6,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,435,                next(pos);,2,1,0,1,2,0,4,0,0,8,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,436,"                return appendTo == null ? null : appendTo.append(c, lastHold,",2,1,0,0,1,1,8,0,0,11,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,439,                next(pos);,4,1,0,1,2,0,4,0,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,442,        throw new IllegalArgumentException(,0,0,0,0,1,0,0,2,0,2,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,455,"        appendQuotedString(pattern, pos, null, escapingOn);",0,0,0,1,2,0,8,0,0,9,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,456,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,464,        if (coll == null || coll.size() == 0) {,2,3,0,2,5,0,4,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,465,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,467,        for (Iterator iter = coll.iterator(); iter.hasNext();) {,2,0,0,3,7,0,8,2,0,12,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,468,            if (iter.next() != null) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,469,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,472,        return false;,8,1,0,0,0,1,6,0,0,17,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,48,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,49,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,76,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,77,            throw new IllegalArgumentException(message + value);,0,0,0,1,2,0,0,0,0,3,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,79,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,102,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,103,            throw new IllegalArgumentException(message + value);,4,1,0,1,2,0,0,2,0,7,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,105,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,129,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,130,            throw new IllegalArgumentException(message + value);,0,0,0,1,2,0,0,0,0,3,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,132,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,156,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,157,            throw new IllegalArgumentException(message);,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,159,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,180,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,181,"            throw new IllegalArgumentException(""The validated expression is false"");",0,0,0,1,2,0,6,2,0,9,72,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,183,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,202,        if (object == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,203,            throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,205,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,221,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,222,"            throw new IllegalArgumentException(""The validated object is null"");",0,0,0,1,2,0,0,2,0,4,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,224,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,242,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,243,            throw new IllegalArgumentException(message);,4,0,0,1,2,0,0,2,0,6,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,245,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,261,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,262,"            throw new IllegalArgumentException(""The validated array is empty"");",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,264,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,282,        if (collection == null || collection.size() == 0) {,2,3,0,2,5,0,4,0,0,9,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,283,            throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,285,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,301,        if (collection == null || collection.size() == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,302,"            throw new IllegalArgumentException(""The validated collection is empty"");",0,0,0,1,2,0,0,2,0,3,72,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,304,    },2,1,0,0,1,0,8,0,0,11,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,322,        if (map == null || map.size() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,323,            throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,325,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,341,        if (map == null || map.size() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,342,"            throw new IllegalArgumentException(""The validated map is empty"");",0,0,0,1,2,0,0,2,0,3,65,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,344,    },0,0,0,0,1,0,6,0,0,6,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,362,        if (string == null || string.length() == 0) {,2,3,0,2,5,0,4,0,0,9,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,363,            throw new IllegalArgumentException(message);,4,0,1,1,2,0,0,2,0,11,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,365,    },2,0,0,0,1,0,0,0,0,3,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,381,        if (string == null || string.length() == 0) {,4,0,0,2,5,0,6,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,382,"            throw new IllegalArgumentException(""The validated string is empty"");",0,0,0,1,2,0,0,2,0,3,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,384,    },0,0,0,0,1,0,2,0,0,4,1,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,407,        Validate.notNull(array);,0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,408,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,409,            if (array[i] == null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,410,                throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,413,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,434,        Validate.notNull(array);,8,6,0,1,2,0,14,0,0,28,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,435,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,436,            if (array[i] == null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,437,"                throw new IllegalArgumentException(""The validated array contains null element at index: "" + i);",2,1,0,1,2,0,0,2,0,8,95,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,440,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,463,        Validate.notNull(collection);,0,0,0,1,2,0,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,464,        for (Iterator it = collection.iterator(); it.hasNext();) {,2,0,0,3,7,0,8,2,0,12,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,465,            if (it.next() == null) {,0,1,0,2,5,0,4,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,466,                throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,469,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,489,        Validate.notNull(collection);,0,0,0,1,2,0,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,490,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,491,        for (Iterator it = collection.iterator(); it.hasNext(); i++) {,4,0,0,3,7,0,16,2,0,23,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,492,            if (it.next() == null) {,0,1,0,2,5,0,4,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,493,"                throw new IllegalArgumentException(""The validated collection contains null element at index: "" + i);",2,1,0,1,2,0,0,2,0,7,100,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,496,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,513,        Validate.notNull(collection);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,514,        Validate.notNull(clazz);,0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,515,        for (Iterator it = collection.iterator(); it.hasNext(); ) {,2,0,0,3,7,0,8,2,0,12,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,516,            if (clazz.isInstance(it.next()) == false) {,0,1,0,3,7,0,8,0,0,10,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,517,                throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,520,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,543,        Validate.notNull(collection);,0,0,0,1,2,0,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,544,        Validate.notNull(clazz);,0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,545,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,546,        for (Iterator it = collection.iterator(); it.hasNext(); i++) {,4,0,0,3,7,0,8,2,0,15,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,547,            if (clazz.isInstance(it.next()) == false) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,548,"                throw new IllegalArgumentException(""The validated collection contains an element not of type """,0,0,0,0,1,0,0,2,0,3,94,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,552,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,139,        if (val == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,142,        if (val.length() == 0) {,2,1,0,2,5,3,4,4,0,14,24,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,145,"        if (val.startsWith(""--"")) {",0,0,0,2,5,0,0,0,0,7,27,4,0.5,1,1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,152,"        if (val.startsWith(""0x"") || val.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,12,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,155,        char lastChar = val.charAt(val.length() - 1);,2,1,0,2,4,0,14,0,0,18,45,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,159,        int decPos = val.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,160,        int expPos = val.indexOf('e') + val.indexOf('E') + 1;,10,2,0,2,4,0,8,0,0,23,53,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,162,        if (decPos > -1) {,4,1,0,1,3,3,0,0,0,9,18,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,174,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,177,                mant = val;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,179,            dec = null;,4,1,0,0,0,0,0,0,0,6,11,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,181,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,0,0,0,0,7,35,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,182,            if (expPos > -1 && expPos < val.length() - 1) {,8,5,0,2,5,0,8,0,0,22,47,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,185,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,188,"            String numeric = val.substring(0, val.length() - 1);",0,0,0,2,4,0,0,0,0,6,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,189,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,190,            switch (lastChar) {,0,0,0,1,3,0,0,0,0,4,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,193,                    if (dec == null,2,1,0,0,1,0,0,0,0,3,15,9,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,297,        if (s == null) {,2,1,0,1,3,0,0,0,0,3,16,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,300,        for (int i = s.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,43,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,301,            if (s.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,25,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,302,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,47,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,48,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,61,"        return stringToInt(str, 0);",4,3,0,1,2,1,12,2,0,22,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,74,            return Integer.parseInt(str);,0,0,0,1,2,1,6,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,75,        } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,76,            return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,140,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,143,"            throw new NumberFormatException(""\""\"" is not a valid number."");",0,0,0,1,2,0,0,2,0,3,63,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,150,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,153,            return createInteger(val);,0,0,0,1,2,1,4,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,164,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,165,                if (expPos < decPos) {,4,1,0,1,3,0,0,0,0,5,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,166,"                    throw new NumberFormatException(val + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,168,"                dec = val.substring(decPos + 1, expPos);",4,1,0,1,2,0,6,0,0,12,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,170,                dec = val.substring(decPos + 1);,4,1,0,1,2,0,4,0,0,10,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,172,"            mant = val.substring(0, decPos);",4,0,0,1,2,0,16,0,0,22,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,175,"                mant = val.substring(0, expPos);",2,0,0,1,2,0,10,0,0,13,32,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,183,"                exp = val.substring(expPos + 1, val.length() - 1);",4,2,0,2,4,0,8,0,0,15,50,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,197,                            return createLong(numeric);,2,0,0,1,2,4,4,0,0,9,27,1,0.0,0,0
