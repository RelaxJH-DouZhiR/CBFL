dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4253,        } else if (pads < padLen) {,16,3,0,1,4,0,0,0,0,20,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4254,"            return str.concat(padStr.substring(0, pads));",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4256,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4257,            char[] padChars = padStr.toCharArray();,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4258,            for (int i = 0; i < pads; i++) {,10,1,0,1,3,0,0,0,0,12,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4259,                padding[i] = padChars[i % padLen];,6,1,1,2,4,0,0,2,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4261,            return str.concat(new String(padding));,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4285,"        return leftPad(str, size, ' ');",0,0,0,1,2,1,6,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4310,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4311,            return null;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4313,        int pads = size - str.length();,8,1,0,1,2,0,4,0,0,14,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4314,        if (pads <= 0) {,16,3,0,1,3,0,0,0,0,20,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4315,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4317,        if (pads > PAD_LIMIT) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4318,"            return leftPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,12,0,0,12,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4320,"        return padding(pads, padChar).concat(str);",6,1,0,2,4,1,0,0,0,8,42,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4347,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4348,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4350,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4351,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4353,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4354,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4355,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4356,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4357,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4359,        if (padLen == 1 && pads <= PAD_LIMIT) {,12,3,0,1,3,1,0,4,0,20,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4360,"            return leftPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4363,        if (pads == padLen) {,10,1,0,1,3,0,0,0,0,11,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4364,            return padStr.concat(str);,8,1,0,1,2,1,0,0,0,10,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4365,        } else if (pads < padLen) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4366,"            return padStr.substring(0, pads).concat(str);",0,0,0,2,4,1,10,0,0,10,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4368,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4369,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4370,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,0,0,0,10,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4371,                padding[i] = padChars[i % padLen];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4373,            return new String(padding).concat(str);,4,1,0,2,4,1,4,2,0,11,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4386,        return str == null ? 0 : str.length();,2,1,0,1,2,1,4,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4415,"        return center(str, size, ' ');",0,0,0,1,2,1,6,0,0,7,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4443,        if (str == null || size <= 0) {,6,4,0,1,3,0,6,0,0,16,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4444,            return str;,2,0,0,0,0,1,0,0,0,3,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4446,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4447,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4448,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4449,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4451,"        str = leftPad(str, strLen + pads / 2, padChar);",8,3,0,1,2,0,6,0,0,18,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4452,"        str = rightPad(str, size, padChar);",6,1,0,1,2,0,8,0,0,17,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4453,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4483,        if (str == null || size <= 0) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4484,            return str;,8,0,0,0,0,1,0,0,0,9,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4486,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4487,"            padStr = "" "";",2,1,0,0,0,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4489,        int strLen = str.length();,4,0,0,1,2,0,8,0,0,12,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4490,        int pads = size - strLen;,6,2,0,0,0,0,0,0,0,9,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4491,        if (pads <= 0) {,10,2,0,1,3,0,0,0,0,13,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4492,            return str;,6,1,0,0,0,1,4,0,0,11,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4494,"        str = leftPad(str, strLen + pads / 2, padStr);",6,2,0,1,2,0,6,0,0,15,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4495,"        str = rightPad(str, size, padStr);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4496,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4521,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4522,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4524,        return str.toUpperCase();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4544,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4545,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4547,        return str.toUpperCase(locale);,0,0,0,1,2,1,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4570,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4571,            return null;,6,1,0,0,0,1,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4573,        return str.toLowerCase();,2,0,0,1,2,1,0,0,0,2,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4593,        if (str == null) {,12,4,0,1,3,0,0,0,0,17,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4594,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4596,        return str.toLowerCase(locale);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4621,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4622,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4624,        return new StringBuilder(strLen),8,0,0,1,2,1,0,2,0,11,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4652,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4653,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4655,        return new StringBuilder(strLen),4,0,0,1,2,1,4,6,0,14,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4690,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4691,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4693,        StringBuilder buffer = new StringBuilder(strLen);,4,0,0,1,2,0,0,4,0,8,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4695,        char ch = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4696,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4697,            ch = str.charAt(i);,6,1,0,1,2,0,6,0,0,14,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4698,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,0,6,0,0,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4699,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4700,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4701,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,0,0,0,4,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4702,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4703,                ch = Character.toUpperCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4705,            buffer.append(ch);,2,0,0,1,2,0,10,0,0,12,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4707,        return buffer.toString();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4732,        if (isEmpty(str) || isEmpty(sub)) {,2,1,0,3,7,0,8,0,0,11,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4733,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4735,        int count = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4736,        int idx = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4737,"        while ((idx = str.indexOf(sub, idx)) != -1) {",0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4738,            count++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4739,            idx += sub.length();,2,0,0,1,2,0,4,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4741,        return count;,2,0,0,0,0,1,4,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4765,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4766,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4768,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4769,        for (int i = 0; i < sz; i++) {,4,0,0,1,3,0,0,0,0,5,30,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4770,            if (Character.isLetter(str.charAt(i)) == false) {,2,2,0,3,7,0,10,0,0,15,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4771,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4774,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4799,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4800,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4802,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4803,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4804,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,19,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4805,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4808,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4832,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4833,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4835,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4836,        for (int i = 0; i < sz; i++) {,8,2,0,1,3,0,4,0,0,15,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4837,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,6,2,0,3,7,0,10,0,0,19,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4838,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4841,        return true;,2,0,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4866,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4867,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4869,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4870,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4871,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4872,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4875,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4904,        if (str == null) {,8,2,0,1,3,0,6,0,0,16,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4905,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4907,        int sz = str.length();,6,3,0,1,2,0,4,0,0,13,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4908,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4909,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,4,1,0,3,7,0,10,0,0,17,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4910,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4913,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4938,        if (str == null) {,0,0,0,1,3,0,0,0,0,1,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4939,            return false;,2,0,0,0,0,1,4,0,0,7,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4941,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4942,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4943,            if (Character.isDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4944,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4947,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4974,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4975,            return false;,2,0,0,0,0,1,0,4,0,7,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4977,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4978,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4979,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,8,4,0,6,13,0,16,0,0,31,76,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4980,                return false;,4,1,0,0,0,1,4,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,4983,        return true;,10,2,0,0,0,1,0,0,0,15,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5006,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5007,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5009,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5010,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5011,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,2,0,0,4,9,0,0,0,0,4,55,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5012,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5015,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5036,        if (str == null || isEmpty(str)) {,4,2,0,2,5,1,8,0,0,16,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5037,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5039,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5040,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5041,            if (Character.isLowerCase(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5042,                return false;,2,1,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5045,        return true;,4,0,0,0,0,1,8,0,0,12,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5066,        if (str == null || isEmpty(str)) {,6,2,0,2,5,0,8,4,0,21,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5067,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5069,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5070,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5071,            if (Character.isUpperCase(str.charAt(i)) == false) {,6,2,1,3,7,0,10,0,0,22,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5072,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5075,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5097,        return str == null ? EMPTY : str;,6,1,0,0,0,1,0,0,0,7,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5118,        return str == null ? defaultStr : str;,10,2,0,0,0,1,0,0,0,12,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5139,        return StringUtils.isEmpty(str) ? defaultStr : str;,8,0,0,1,2,1,14,0,0,22,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5159,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5160,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5162,        return new StringBuilder(str).reverse().toString();,2,0,0,3,6,1,4,2,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5185,        if (str == null) {,4,1,0,1,3,0,0,2,0,7,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5186,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5190,"        String[] strs = split(str, separatorChar);",0,0,0,2,4,0,0,0,0,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5191,        ArrayUtils.reverse(strs);,8,1,0,1,2,0,6,0,0,16,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5192,"        return join(strs, separatorChar);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5230,"        return abbreviate(str, 0, maxWidth);",2,1,0,1,2,1,6,0,0,9,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5269,        if (str == null) {,2,2,0,1,3,0,10,0,0,15,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5270,            return null;,2,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5272,        if (maxWidth < 4) {,12,2,0,1,3,0,0,0,0,15,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5273,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5275,        if (str.length() <= maxWidth) {,2,1,0,2,5,0,4,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5276,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5278,        if (offset > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5279,            offset = str.length();,2,0,0,1,2,0,4,2,0,9,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5281,        if ((str.length() - offset) < (maxWidth - 3)) {,2,0,0,4,9,0,0,0,0,2,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5282,            offset = str.length() - (maxWidth - 3);,4,2,0,2,4,0,4,0,0,11,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5284,        if (offset <= 4) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5285,"            return str.substring(0, maxWidth - 3) + ""..."";",2,0,0,1,2,1,4,0,0,6,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5287,        if (maxWidth < 7) {,0,0,0,1,3,0,12,0,0,12,19,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5288,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",2,0,0,1,2,0,0,0,0,2,82,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5290,        if ((offset + (maxWidth - 3)) < str.length()) {,6,4,0,4,9,0,4,0,0,14,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5291,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",2,0,0,2,4,1,0,0,0,2,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5293,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",0,1,1,3,6,1,0,0,0,9,60,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5324,        if (str1 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5325,            return str2;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5327,        if (str2 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5328,            return str1;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5330,"        int at = indexOfDifference(str1, str2);",2,0,0,1,2,0,6,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5331,        if (at == -1) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5332,            return EMPTY;,4,0,0,0,0,1,10,0,0,14,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5334,        return str2.substring(at);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5361,        if (str1 == str2) {,4,1,0,1,3,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5362,            return -1;,0,0,0,0,0,1,4,0,0,5,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5364,        if (str1 == null || str2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5365,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5368,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,0,0,0,3,7,0,0,0,0,10,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5369,            if (str1.charAt(i) != str2.charAt(i)) {,2,1,0,3,7,0,12,0,0,15,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5370,                break;,2,0,0,0,0,0,8,0,0,10,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5373,        if (i < str2.length() || i < str1.length()) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5374,            return i;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5376,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5411,        if (strs == null || strs.length <= 1) {,12,3,0,1,3,0,4,0,0,19,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5412,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5414,        boolean anyStringNull = false;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5415,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5416,        int arrayLen = strs.length;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5417,        int shortestStrLen = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5418,        int longestStrLen = 0;,2,1,1,0,0,0,0,0,0,7,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5423,        for (int i = 0; i < arrayLen; i++) {,8,1,0,1,3,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5424,            if (strs[i] == null) {,6,3,1,2,5,0,10,0,0,23,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5425,                anyStringNull = true;,2,0,0,0,0,0,6,0,0,10,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5426,                shortestStrLen = 0;,8,1,0,0,0,0,0,0,0,11,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5428,                allStringsNull = false;,2,0,0,0,0,0,0,0,0,4,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5429,"                shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",2,0,1,3,6,0,8,0,0,15,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5430,"                longestStrLen = Math.max(strs[i].length(), longestStrLen);",2,0,1,3,6,0,8,0,0,15,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5435,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,8,4,0,2,5,0,4,0,0,17,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5436,            return -1;,2,0,0,0,0,1,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5440,        if (shortestStrLen == 0) {,6,2,1,1,3,0,6,0,0,17,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5441,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5445,        int firstDiff = -1;,12,9,0,0,0,0,8,0,0,30,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5446,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,12,2,0,1,3,0,0,0,0,15,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5447,            char comparisonChar = strs[0].charAt(stringPos);,2,0,1,2,4,0,4,0,0,8,48,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5448,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,0,0,0,1,3,0,0,0,0,4,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5449,                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {,2,1,1,3,7,0,8,0,0,15,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5450,                    firstDiff = stringPos;,4,3,0,0,0,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5451,                    break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5454,            if (firstDiff != -1) {,2,1,0,1,3,0,0,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5455,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5459,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,6,3,0,1,3,0,0,0,0,10,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5463,            return shortestStrLen;,2,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5465,        return firstDiff;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5502,        if (strs == null || strs.length == 0) {,2,0,0,1,3,0,0,0,0,2,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5503,            return EMPTY;,6,1,0,0,0,1,24,0,0,32,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5505,        int smallestIndexOfDiff = indexOfDifference(strs);,2,0,0,1,2,0,4,0,0,6,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5506,        if (smallestIndexOfDiff == -1) {,2,1,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5508,            if (strs[0] == null) {,0,1,1,2,5,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5509,                return EMPTY;,4,0,0,0,0,1,0,0,0,4,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5511,            return strs[0];,0,0,1,1,2,1,0,0,0,2,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5512,        } else if (smallestIndexOfDiff == 0) {,2,0,0,1,4,0,0,0,0,2,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5514,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5517,"            return strs[0].substring(0, smallestIndexOfDiff);",0,0,1,2,4,1,4,0,0,6,49,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5558,        if (s == null || t == null) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5559,"            throw new IllegalArgumentException(""Strings must not be null"");",2,0,0,1,2,0,18,2,0,24,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5579,        int n = s.length(); // length of s,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5580,        int m = t.length(); // length of t,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5582,        if (n == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5583,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5584,        } else if (m == 0) {,2,1,0,1,4,0,8,0,0,11,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5585,            return n;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5588,        if (n > m) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5590,            String tmp = s;,4,0,0,0,0,0,0,2,0,6,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5591,            s = t;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5592,            t = tmp;,4,0,0,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5593,            n = m;,4,1,0,0,0,0,0,4,0,9,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5594,            m = t.length();,2,0,0,1,2,0,4,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5597,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5598,"        int d[] = new int[n+1]; // cost array, horizontally",0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5609,        for (i = 0; i<=n; i++) {,26,2,0,1,3,0,0,0,0,33,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5610,            p[i] = i;,0,0,0,1,2,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5613,        for (j = 1; j<=m; j++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5614,            t_j = t.charAt(j-1);,4,2,0,1,2,0,14,0,0,22,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5615,            d[0] = j;,0,0,0,1,2,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5617,            for (i=1; i<=n; i++) {,0,0,0,1,3,0,8,0,0,8,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5618,                cost = s.charAt(i-1)==t_j ? 0 : 1;,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5620,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",0,0,0,6,12,0,0,0,0,18,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5624,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5625,            p = d;,2,0,0,0,0,0,0,0,0,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5626,            d = _d;,0,0,0,0,0,0,0,0,0,0,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5631,        return p[n];,4,1,1,1,2,1,4,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5680,"        return startsWith(str, prefix, false);",0,0,0,1,2,1,6,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5705,"        return startsWith(str, prefix, true);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5720,        if (str == null || prefix == null) {,8,3,0,1,3,0,0,0,0,12,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5721,            return (str == null && prefix == null);,4,3,0,1,2,1,0,0,0,7,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5723,        if (prefix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5724,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5726,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",0,0,0,2,4,1,22,0,0,23,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5748,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,0,0,0,3,7,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5749,            return false;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5751,        for (int i = 0; i < searchStrings.length; i++) {,12,1,0,1,3,0,0,0,0,14,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5752,            String searchString = searchStrings[i];,2,0,0,1,2,0,0,0,0,2,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5753,"            if (StringUtils.startsWith(string, searchString)) {",0,0,0,2,5,0,8,0,0,8,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5754,                return true;,2,0,0,0,0,1,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5757,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5786,"        return endsWith(str, suffix, false);",0,0,0,1,2,1,6,0,0,7,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5812,"        return endsWith(str, suffix, true);",0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5827,        if (str == null || suffix == null) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5828,            return (str == null && suffix == null);,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5830,        if (suffix.length() > str.length()) {,0,0,0,3,7,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5831,            return false;,8,1,0,0,0,1,0,0,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5833,        int strOffset = str.length() - suffix.length();,2,1,0,2,4,0,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,5834,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,2,4,1,14,0,0,14,76,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1045,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",0,0,0,3,6,1,0,0,0,10,60,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1018,        return str.indexOf(searchStr) >= 0;,0,1,0,1,2,1,6,0,0,7,35,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1015,        if (str == null || searchStr == null) {,4,3,0,1,3,0,6,0,0,13,39,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,168,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,169,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,192,        return str == null || str.length() == 0;,4,3,0,1,2,1,4,0,0,11,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,210,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,16,0,0,17,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,230,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,231,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,233,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,234,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,2,1,0,4,9,0,24,0,0,27,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,235,                return false;,2,0,0,0,0,1,4,2,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,238,        return true;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,258,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,6,0,0,7,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,287,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,313,        String ts = trim(str);,8,0,0,1,2,0,4,2,0,14,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,314,        return isEmpty(ts) ? null : ts;,4,0,0,1,2,1,4,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,339,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,367,"        return strip(str, null);",0,0,0,1,2,1,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,394,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,395,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,397,"        str = strip(str, null);",2,0,0,1,2,0,4,0,0,8,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,398,        return str.length() == 0 ? null : str;,6,1,0,1,2,1,10,2,0,19,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,424,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,454,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,455,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,457,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,458,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,487,        if (str == null || (strLen = str.length()) == 0) {,2,0,0,3,7,0,0,0,0,2,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,488,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,490,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,491,        if (stripChars == null) {,2,1,0,1,3,0,6,0,0,9,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,492,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,493,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,495,        } else if (stripChars.length() == 0) {,10,2,0,2,6,0,4,0,0,17,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,496,            return str;,0,1,0,0,0,1,6,0,0,7,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,498,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,2,0,0,5,11,0,4,0,0,9,76,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,499,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,502,        return str.substring(start);,2,0,0,1,2,1,10,0,0,13,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,531,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,12,0,0,12,47,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,532,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,535,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,536,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,4,1,1,4,9,3,12,12,0,35,67,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,537,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,539,        } else if (stripChars.length() == 0) {,2,0,0,2,6,0,0,2,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,540,            return str;,8,1,0,0,0,1,8,4,0,23,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,542,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,4,4,0,5,11,0,8,0,0,17,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,543,                end--;,2,0,0,0,0,3,2,0,0,8,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,546,"        return str.substring(0, end);",4,0,0,1,2,1,6,0,0,10,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,571,"        return stripAll(strs, null);",8,4,0,1,2,1,0,0,0,12,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,601,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,602,            return strs;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,604,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,605,        for (int i = 0; i < strsLen; i++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,606,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,608,        return newArr;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,634,        return str1 == null ? str2 == null : str1.equals(str2);,4,2,0,1,2,1,12,0,0,19,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,659,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,684,        if (isEmpty(str)) {,2,1,0,2,5,0,4,0,0,7,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,685,            return -1;,0,0,0,0,0,1,4,0,0,6,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,687,        return str.indexOf(searchChar);,2,0,0,1,2,1,0,0,0,2,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,716,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,717,            return -1;,2,1,0,0,0,4,4,0,0,13,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,719,"        return str.indexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,745,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,746,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,748,        return str.indexOf(searchStr);,0,0,0,1,2,1,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,779,        if (str == null || searchStr == null || ordinal <= 0) {,6,5,0,1,3,0,0,0,0,11,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,780,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,782,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,783,            return 0;,2,0,0,0,0,1,6,0,0,8,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,785,        int found = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,786,        int index = INDEX_NOT_FOUND;,6,1,0,0,0,0,6,0,0,14,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,788,"            index = str.indexOf(searchStr, index + 1);",6,1,0,1,2,0,10,2,0,20,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,789,            if (index < 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,790,                return index;,4,0,0,0,0,1,0,2,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,792,            found++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,793,        } while (found < ordinal);,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,794,        return index;,2,0,0,0,0,1,0,0,0,3,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,829,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,830,            return -1;,10,0,1,0,0,1,2,4,0,20,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,833,        if (searchStr.length() == 0 && startPos >= str.length()) {,2,1,0,3,7,0,0,0,0,3,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,834,            return str.length();,0,1,0,1,2,1,12,0,0,14,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,836,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,861,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,862,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,864,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,6,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,895,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,896,            return -1;,10,1,0,0,0,1,0,0,0,12,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,898,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,924,        if (str == null || searchStr == null) {,4,3,0,1,3,0,6,0,0,13,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,925,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,927,        return str.lastIndexOf(searchStr);,2,0,0,1,2,1,6,2,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,959,        if (str == null || searchStr == null) {,2,0,0,1,3,0,0,0,0,2,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,960,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,962,"        return str.lastIndexOf(searchStr, startPos);",4,0,0,1,2,1,8,6,0,19,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,987,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,988,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,990,        return str.indexOf(searchChar) >= 0;,6,3,0,1,2,1,10,0,0,19,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1016,            return false;,4,0,0,0,0,1,0,0,0,5,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1046,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1076,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1077,            return -1;,0,0,0,0,0,1,4,0,0,4,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1079,        for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1080,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1081,            for (int j = 0; j < searchChars.length; j++) {,4,0,0,1,3,3,0,4,0,13,46,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1082,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1083,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1087,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1113,        if (isEmpty(str) || isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1114,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1116,"        return indexOfAny(str, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1145,        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {,0,0,0,2,5,0,0,0,0,7,89,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1146,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1148,        for (int i = 0; i < str.length(); i++) {,2,0,0,2,5,3,0,4,0,9,40,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1149,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1150,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1151,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1152,                    return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1156,        return false;,8,1,0,0,0,1,0,0,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1187,        if (searchChars == null) {,6,1,0,1,3,0,0,0,0,8,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1188,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1190,"        return containsAny(str, searchChars.toCharArray());",0,0,0,2,4,1,6,0,0,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1218,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,2,0,0,3,7,0,10,0,0,12,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1219,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1221,        outer : for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1222,            char ch = str.charAt(i);,14,0,0,1,2,0,12,2,0,28,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1223,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1224,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1225,                    continue outer;,10,1,0,0,0,0,0,0,0,12,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1228,            return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1230,        return -1;,6,3,0,0,0,1,0,0,0,10,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1256,        if (isEmpty(str) || isEmpty(searchChars)) {,0,0,0,3,7,0,6,0,0,6,43,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1257,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1259,        for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,6,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1260,            if (searchChars.indexOf(str.charAt(i)) < 0) {,0,1,0,3,7,0,14,0,0,16,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1261,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1264,        return -1;,6,0,0,0,0,1,4,0,0,10,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1292,        if ((valid == null) || (str == null)) {,0,0,0,3,7,0,0,0,0,1,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1293,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1295,        if (str.length() == 0) {,2,1,0,2,5,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1296,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1298,        if (valid.length == 0) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1299,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1301,"        return indexOfAnyBut(str, valid) == -1;",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1327,        if (str == null || validChars == null) {,6,3,0,1,3,0,0,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1328,            return false;,6,1,0,0,0,1,8,0,0,15,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1330,"        return containsOnly(str, validChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1358,        if (str == null || invalidChars == null) {,0,0,0,1,3,0,8,0,0,8,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1359,            return true;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1361,        int strSize = str.length();,2,0,0,1,2,0,4,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1362,        int validSize = invalidChars.length;,8,0,0,0,0,3,6,2,0,19,36,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1363,        for (int i = 0; i < strSize; i++) {,0,0,0,1,3,0,4,0,0,5,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1364,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1365,            for (int j = 0; j < validSize; j++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1366,                if (invalidChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1367,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1371,        return true;,0,0,0,0,0,1,6,0,0,6,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1397,        if (str == null || invalidChars == null) {,4,3,0,1,3,0,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1398,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1400,"        return containsNone(str, invalidChars.toCharArray());",0,0,0,2,4,1,8,0,0,8,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1432,        if ((str == null) || (searchStrs == null)) {,4,3,0,3,7,0,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1433,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1435,        int sz = searchStrs.length;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1438,        int ret = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1440,        int tmp = 0;,10,1,0,0,0,0,0,0,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1441,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,4,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1442,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1443,            if (search == null) {,6,2,0,1,3,0,0,0,0,8,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1444,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1446,            tmp = str.indexOf(search);,2,0,0,1,2,0,6,0,0,9,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1447,            if (tmp == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1448,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1451,            if (tmp < ret) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1452,                ret = tmp;,8,0,0,0,0,0,0,0,0,10,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1456,        return (ret == Integer.MAX_VALUE) ? -1 : ret;,8,1,0,1,2,1,0,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1485,        if ((str == null) || (searchStrs == null)) {,4,3,0,3,7,0,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1486,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1488,        int sz = searchStrs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1489,        int ret = -1;,2,0,0,0,0,0,0,0,0,3,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1490,        int tmp = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1491,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1492,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1493,            if (search == null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1494,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1496,            tmp = str.lastIndexOf(search);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1497,            if (tmp > ret) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1498,                ret = tmp;,6,1,0,0,0,0,0,0,0,8,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1501,        return ret;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1531,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1532,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1536,        if (start < 0) {,4,3,0,1,3,0,4,0,0,12,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1537,            start = str.length() + start; // remember start is negative,0,0,0,1,2,0,0,0,0,1,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1540,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1541,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1543,        if (start > str.length()) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1544,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1547,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1586,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1587,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1591,        if (end < 0) {,2,0,0,1,3,0,2,4,0,8,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1592,            end = str.length() + end; // remember end is negative,0,0,0,1,2,0,0,0,0,3,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1594,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1595,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1599,        if (end > str.length()) {,0,0,0,2,5,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1600,            end = str.length();,2,1,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1604,        if (start > end) {,0,1,0,1,3,0,10,0,0,11,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1605,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1608,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1609,            start = 0;,4,0,0,0,0,0,0,0,0,5,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1611,        if (end < 0) {,6,3,0,1,3,0,0,0,0,9,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1612,            end = 0;,4,0,0,0,0,0,0,0,0,6,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1615,"        return str.substring(start, end);",0,0,0,1,2,1,8,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1641,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1642,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1644,        if (len < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1645,            return EMPTY;,2,0,0,0,0,1,8,2,0,12,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1647,        if (str.length() <= len) {,2,1,0,2,5,0,4,0,0,8,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1648,            return str;,2,1,0,0,0,1,10,0,0,13,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1650,"        return str.substring(0, len);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1674,        if (str == null) {,2,1,0,1,3,0,8,0,0,11,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1675,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1677,        if (len < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1678,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1680,        if (str.length() <= len) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1681,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1683,        return str.substring(str.length() - len);,2,1,0,2,4,1,12,0,0,16,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1711,        if (str == null) {,4,1,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1712,            return null;,2,0,0,0,0,2,0,2,0,6,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1714,        if (len < 0 || pos > str.length()) {,4,3,0,2,5,0,4,0,0,12,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1715,            return EMPTY;,2,0,0,0,0,1,4,0,0,6,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1717,        if (pos < 0) {,4,1,0,1,3,1,12,4,0,23,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1718,            pos = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1720,        if (str.length() <= (pos + len)) {,6,2,0,3,7,0,4,0,0,12,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1721,            return str.substring(pos);,0,0,0,1,2,1,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1723,"        return str.substring(pos, pos + len);",4,1,0,1,2,1,4,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1756,        if (isEmpty(str) || separator == null) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1757,            return str;,6,2,0,0,0,1,0,0,0,8,11,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1759,        if (separator.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1760,            return EMPTY;,6,1,0,0,0,1,12,0,0,20,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1762,        int pos = str.indexOf(separator);,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1763,        if (pos == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1764,            return str;,4,1,0,0,0,1,10,0,0,15,11,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1766,"        return str.substring(0, pos);",0,0,1,1,2,1,4,0,0,8,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1798,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1799,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1801,        if (separator == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1802,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1804,        int pos = str.indexOf(separator);,2,0,0,1,2,0,6,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1805,        if (pos == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1806,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1808,        return str.substring(pos + separator.length());,2,1,0,2,4,1,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1839,        if (isEmpty(str) || isEmpty(separator)) {,0,1,0,3,7,0,8,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1840,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1842,        int pos = str.lastIndexOf(separator);,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1843,        if (pos == -1) {,2,1,0,1,3,0,6,0,0,11,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1844,            return str;,4,1,0,0,0,1,0,2,0,8,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1846,"        return str.substring(0, pos);",0,0,0,1,2,1,0,0,0,1,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1879,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1880,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1882,        if (isEmpty(separator)) {,10,2,0,2,5,0,4,0,0,16,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1883,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1885,        int pos = str.lastIndexOf(separator);,2,0,0,1,2,0,6,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1886,        if (pos == -1 || pos == (str.length() - separator.length())) {,0,0,0,4,9,0,0,0,0,13,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1887,            return EMPTY;,2,0,0,0,0,1,0,2,0,4,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1889,        return str.substring(pos + separator.length());,0,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1916,"        return substringBetween(str, tag, tag);",4,0,0,1,2,1,0,0,0,5,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1947,        if (str == null || open == null || close == null) {,6,5,0,1,3,0,0,0,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1948,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1950,        int start = str.indexOf(open);,4,0,0,1,2,0,6,0,0,10,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1951,        if (start != -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1952,"            int end = str.indexOf(close, start + open.length());",0,0,0,2,4,0,0,0,0,6,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1953,            if (end != -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1954,"                return str.substring(start + open.length(), end);",0,0,0,2,4,1,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1957,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1983,        if (str == null || isEmpty(open) || isEmpty(close)) {,2,3,0,3,7,0,8,0,0,15,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1984,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1986,        int strLen = str.length();,6,0,0,1,2,0,4,0,0,11,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1987,        if (strLen == 0) {,4,2,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1988,            return ArrayUtils.EMPTY_STRING_ARRAY;,6,1,0,0,0,1,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1990,        int closeLen = close.length();,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1991,        int openLen = open.length();,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1992,        List<String> list = new ArrayList<String>();,6,0,0,1,2,0,0,8,0,15,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1993,        int pos = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1994,        while (pos < (strLen - closeLen)) {,0,0,0,2,5,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1995,"            int start = str.indexOf(open, pos);",2,0,0,1,2,0,8,0,0,10,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1996,            if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1997,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1999,            start += openLen;,4,0,0,0,0,0,0,0,0,5,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2000,"            int end = str.indexOf(close, start);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2001,            if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2002,                break;,0,0,0,0,0,0,6,0,0,6,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2004,"            list.add(str.substring(start, end));",2,0,1,2,4,1,0,2,0,9,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2005,            pos = end + closeLen;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2006,        },0,0,0,0,1,0,8,0,0,8,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2007,        if (list.isEmpty()) {,6,1,0,2,5,0,4,0,0,11,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2008,            return null;,4,0,0,0,0,1,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2010,        return list.toArray(new String [list.size()]);,0,0,0,3,6,1,8,2,0,10,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2041,"        return split(str, null, -1);",0,0,0,1,2,1,4,0,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2069,"        return splitWorker(str, separatorChar, false);",0,0,0,1,2,1,6,0,0,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2098,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,1,2,1,6,0,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2132,"        return splitWorker(str, separatorChars, max, false);",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2159,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0,0,0,1,2,1,8,0,0,8,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2190,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,1,2,1,8,0,0,9,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2219,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0,0,0,1,2,1,0,0,0,4,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2252,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0,0,0,1,2,1,8,0,0,9,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2272,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2273,            return null;,0,1,1,0,0,1,0,0,0,5,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2276,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2278,        if (len == 0) {,2,0,0,1,3,0,0,0,0,2,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2279,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2282,        if ((separator == null) || (EMPTY.equals(separator))) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2284,"            return splitWorker(str, null, max, preserveAllTokens);",2,1,0,1,2,1,8,0,0,12,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2287,        int separatorLength = separator.length();,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2289,        ArrayList<String> substrings = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2290,        int numberOfSubstrings = 0;,2,0,0,0,0,0,0,0,0,3,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2291,        int beg = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2292,        int end = 0;,2,0,0,0,0,0,14,0,0,16,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2293,        while (end < len) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2294,"            end = str.indexOf(separator, beg);",2,0,0,1,2,0,16,0,0,19,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2296,            if (end > -1) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2297,                if (end > beg) {,4,1,0,1,3,0,0,0,0,5,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2298,                    numberOfSubstrings += 1;,2,0,0,0,0,0,0,0,0,3,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2300,                    if (numberOfSubstrings == max) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2301,                        end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2302,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2306,"                        substrings.add(str.substring(beg, end));",0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2311,                        beg = end + separatorLength;,8,1,0,0,0,0,0,0,0,10,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2315,                    if (preserveAllTokens) {,2,0,0,1,3,0,8,0,0,12,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2316,                        numberOfSubstrings += 1;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2317,                        if (numberOfSubstrings == max) {,4,1,0,1,3,0,0,0,0,5,32,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2318,                            end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2319,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2321,                            substrings.add(EMPTY);,14,1,0,1,2,0,10,0,0,27,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2324,                    beg = end + separatorLength;,6,1,0,0,0,0,0,0,0,8,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2328,                substrings.add(str.substring(beg));,0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2329,                end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2333,        return substrings.toArray(new String[substrings.size()]);,0,0,0,3,6,1,8,2,0,10,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2362,"        return splitWorker(str, null, -1, true);",0,0,0,1,2,1,4,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2398,"        return splitWorker(str, separatorChar, true);",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2416,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2417,            return null;,2,1,0,0,0,1,18,0,0,21,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2419,        int len = str.length();,4,1,0,1,2,0,4,0,0,9,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2420,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2421,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2423,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2424,"        int i = 0, start = 0;",6,2,0,0,0,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2425,        boolean match = false;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2426,        boolean lastMatch = false;,4,1,0,0,0,0,6,0,0,12,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2427,        while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2428,            if (str.charAt(i) == separatorChar) {,0,0,0,2,5,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2429,                if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2430,"                    list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2431,                    match = false;,2,0,0,0,0,0,0,0,0,4,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2432,                    lastMatch = true;,4,0,0,0,0,0,6,0,0,12,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2434,                start = ++i;,6,0,0,0,0,0,0,0,0,10,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2435,                continue;,4,1,0,0,0,0,2,0,0,7,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2437,            lastMatch = false;,8,1,0,0,0,0,0,0,0,11,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2438,            match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2439,            i++;,6,0,0,0,0,0,0,2,0,8,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2441,        if (match || (preserveAllTokens && lastMatch)) {,6,2,0,2,5,0,0,0,0,8,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2442,"            list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2444,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,8,2,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2481,"        return splitWorker(str, separatorChars, -1, true);",2,1,0,1,2,1,16,0,0,21,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2521,"        return splitWorker(str, separatorChars, max, true);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2543,        if (str == null) {,6,3,0,1,3,0,4,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2544,            return null;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2546,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2547,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2548,            return ArrayUtils.EMPTY_STRING_ARRAY;,6,1,1,0,0,1,4,0,0,15,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2550,        List<String> list = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2551,        int sizePlus1 = 1;,4,0,0,0,0,2,0,4,0,10,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2552,"        int i = 0, start = 0;",4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2553,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2554,        boolean lastMatch = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2555,        if (separatorChars == null) {,4,1,0,1,3,0,0,0,0,6,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2557,            while (i < len) {,4,2,0,1,3,0,4,0,0,10,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2558,                if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,10,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2559,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2560,                        lastMatch = true;,0,0,1,0,0,0,0,2,0,11,17,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2561,                        if (sizePlus1++ == max) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2562,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2563,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2565,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2566,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2568,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2569,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2571,                lastMatch = false;,4,1,0,0,0,0,4,0,0,12,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2572,                match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2573,                i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2575,        } else if (separatorChars.length() == 1) {,0,1,0,2,6,0,4,0,0,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2577,            char sep = separatorChars.charAt(0);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2578,            while (i < len) {,4,1,0,1,3,0,10,0,0,15,17,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2579,                if (str.charAt(i) == sep) {,6,2,0,2,5,0,6,0,0,16,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2580,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2581,                        lastMatch = true;,2,0,0,0,0,0,8,2,0,14,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2582,                        if (sizePlus1++ == max) {,12,7,0,1,3,0,0,0,0,20,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2583,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2584,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2586,"                        list.add(str.substring(start, i));",2,1,0,2,4,0,12,0,0,15,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2587,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2589,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2590,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2592,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2593,                match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2594,                i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2596,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2598,            while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2599,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,2,1,0,3,7,0,10,0,0,14,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2600,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2601,                        lastMatch = true;,10,0,0,0,0,0,4,0,0,15,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2602,                        if (sizePlus1++ == max) {,0,0,0,1,3,0,6,0,0,6,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2603,                            i = len;,4,0,0,0,0,0,0,0,0,5,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2604,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2606,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2607,                        match = false;,6,1,0,0,0,0,0,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2609,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2610,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2612,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2613,                match = true;,4,0,0,0,0,0,0,0,0,7,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2614,                i++;,6,1,0,0,0,0,0,0,0,8,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2617,        if (match || (preserveAllTokens && lastMatch)) {,8,2,0,2,5,0,0,0,0,10,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2618,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2620,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,8,2,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2643,"        return splitByCharacterType(str, false);",0,0,0,1,2,1,4,2,0,8,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2671,"        return splitByCharacterType(str, true);",8,1,0,1,2,1,4,2,0,15,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2689,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2690,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2692,        if (str.length() == 0) {,2,0,0,2,5,0,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2693,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2695,        char[] c = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2696,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,4,0,0,5,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2697,        int tokenStart = 0;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2698,        int currentType = Character.getType(c[tokenStart]);,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2699,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,2,0,0,1,3,0,0,0,0,4,55,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2700,            int type = Character.getType(c[pos]);,2,0,1,2,4,0,4,0,0,10,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2701,            if (type == currentType) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2702,                continue;,0,0,0,0,0,0,6,0,0,6,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2704,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,0,0,0,1,3,0,0,0,0,4,99,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2705,                int newTokenStart = pos - 1;,4,1,0,0,0,0,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2706,                if (newTokenStart != tokenStart) {,10,3,0,1,3,0,0,0,0,13,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2707,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",14,2,0,2,4,0,14,2,0,32,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2708,                    tokenStart = newTokenStart;,0,0,0,0,0,0,12,0,0,12,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2710,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2711,"                list.add(new String(c, tokenStart, pos - tokenStart));",8,1,0,2,4,0,4,2,0,15,54,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2712,                tokenStart = pos;,8,1,0,0,0,0,4,0,0,15,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2714,            currentType = type;,4,0,0,0,0,0,0,0,0,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2716,"        list.add(new String(c, tokenStart, c.length - tokenStart));",10,1,0,2,4,0,4,2,0,17,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2717,        return list.toArray(new String[list.size()]);,2,0,0,3,6,1,8,2,0,12,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2743,"        return join(array, null);",0,0,0,1,2,1,4,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2769,        if (array == null) {,8,2,0,1,3,0,0,0,0,11,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2770,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2773,"        return join(array, separator, 0, array.length);",0,0,0,1,2,1,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2803,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2804,            return null;,8,1,0,0,0,1,0,4,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2806,        int bufSize = (endIndex - startIndex);,0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2807,        if (bufSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2808,            return EMPTY;,4,2,0,0,0,1,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2811,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,2,2,1,6,12,0,14,0,0,27,90,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2812,        StringBuilder buf = new StringBuilder(bufSize);,0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2814,        for (int i = startIndex; i < endIndex; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2815,            if (i > startIndex) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2816,                buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2818,            if (array[i] != null) {,2,2,1,2,5,0,0,0,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2819,                buf.append(array[i]);,2,1,1,2,4,0,4,2,0,14,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2822,        return buf.toString();,2,1,0,1,2,1,2,0,0,6,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2850,        if (array == null) {,8,2,0,1,3,0,10,0,0,20,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2851,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2853,"        return join(array, separator, 0, array.length);",6,0,0,1,2,1,6,2,0,14,47,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2884,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2885,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2887,        if (separator == null) {,4,1,0,1,3,1,0,8,0,14,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2888,            separator = EMPTY;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2893,        int bufSize = (endIndex - startIndex);,12,1,0,1,2,0,4,0,0,18,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2894,        if (bufSize <= 0) {,10,2,0,1,3,0,0,0,0,13,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2895,            return EMPTY;,8,0,0,0,0,1,4,0,0,13,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2898,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),0,0,0,5,11,0,0,0,0,16,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2901,        StringBuilder buf = new StringBuilder(bufSize);,0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2903,        for (int i = startIndex; i < endIndex; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2904,            if (i > startIndex) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2905,                buf.append(separator);,8,5,0,1,2,0,0,0,0,13,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2907,            if (array[i] != null) {,2,0,0,2,5,0,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2908,                buf.append(array[i]);,2,0,0,2,4,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2911,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2931,        if (iterator == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2932,            return null;,4,1,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2934,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2935,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2937,        Object first = iterator.next();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2938,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2939,            return ObjectUtils.toString(first);,0,0,0,1,2,1,6,0,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2943,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",2,1,0,1,2,0,0,0,0,3,85,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2944,        if (first != null) {,2,1,0,1,3,0,6,0,0,9,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2945,            buf.append(first);,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2948,        while (iterator.hasNext()) {,2,0,1,2,5,0,4,0,0,11,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2949,            buf.append(separator);,0,0,0,1,2,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2950,            Object obj = iterator.next();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2951,            if (obj != null) {,12,1,0,1,3,0,0,0,0,14,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2952,                buf.append(obj);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2954,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2956,        return buf.toString();,4,0,0,1,2,1,4,2,0,10,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2975,        if (iterator == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2976,            return null;,6,0,0,0,0,1,4,0,0,11,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2978,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2979,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2981,        Object first = iterator.next();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2982,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2983,            return ObjectUtils.toString(first);,0,0,0,1,2,1,6,0,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2987,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",12,2,0,1,2,0,0,0,0,15,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2988,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2989,            buf.append(first);,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2992,        while (iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2993,            if (separator != null) {,2,1,0,1,3,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2994,                buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2996,            Object obj = iterator.next();,2,0,0,1,2,0,4,2,0,8,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2997,            if (obj != null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,2998,                buf.append(obj);,0,0,0,1,2,0,6,0,0,6,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3000,        },2,0,0,0,1,0,0,8,0,10,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3001,        return buf.toString();,4,1,0,1,2,1,4,0,0,10,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3019,        if (collection == null) {,4,2,0,1,3,0,0,0,0,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3020,            return null;,0,0,0,0,0,1,8,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3022,"        return join(collection.iterator(), separator);",0,0,0,2,4,1,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3040,        if (collection == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3041,            return null;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3043,"        return join(collection.iterator(), separator);",0,0,0,2,4,1,16,2,0,18,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3063,        if (isEmpty(str)) {,4,1,0,2,5,0,4,0,0,10,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3064,            return str;,2,1,0,0,0,1,8,0,0,11,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3066,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3067,        char[] chs = new char[sz];,4,1,1,2,4,0,0,0,0,7,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3068,        int count = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3069,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3070,            if (!Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,14,0,0,15,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3071,                chs[count++] = str.charAt(i);,0,0,0,2,4,0,0,0,0,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3074,        if (count == sz) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3075,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3077,"        return new String(chs, 0, count);",6,1,0,1,2,1,0,2,0,9,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3107,        if (isEmpty(str) || isEmpty(remove)) {,2,3,0,3,7,0,8,0,0,13,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3108,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3110,        if (str.startsWith(remove)){,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3111,            return str.substring(remove.length());,2,0,0,2,4,1,8,0,0,10,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3113,        return str;,0,0,0,0,0,1,0,0,0,1,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3142,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3143,            return str;,2,0,0,0,0,1,6,0,0,8,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3145,"        if (startsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3146,            return str.substring(remove.length());,0,0,1,2,4,1,12,0,0,16,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3148,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3176,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3177,            return str;,6,1,0,0,0,1,0,8,0,15,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3179,        if (str.endsWith(remove)) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3180,"            return str.substring(0, str.length() - remove.length());",2,1,0,3,6,1,18,2,0,23,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3182,        return str;,12,1,0,0,0,1,0,0,0,14,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3210,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3211,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3213,"        if (endsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3214,"            return str.substring(0, str.length() - remove.length());",0,1,0,3,6,1,12,2,0,16,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3216,        return str;,0,0,0,0,0,1,4,0,0,4,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3243,        if (isEmpty(str) || isEmpty(remove)) {,4,1,0,3,7,0,8,2,0,15,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3244,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3246,"        return replace(str, remove, EMPTY, -1);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3269,        if (isEmpty(str) || str.indexOf(remove) == -1) {,0,2,0,3,7,0,10,0,0,13,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3270,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3272,        char[] chars = str.toCharArray();,2,0,0,2,4,0,8,0,0,10,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3273,        int pos = 0;,2,1,1,0,0,0,4,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3274,        for (int i = 0; i < chars.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3275,            if (chars[i] != remove) {,0,0,0,2,5,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3276,                chars[pos++] = chars[i];,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3279,"        return new String(chars, 0, pos);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3308,"        return replace(text, searchString, replacement, 1);",0,0,0,1,2,1,8,0,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3335,"        return replace(text, searchString, replacement, -1);",0,0,0,1,2,1,12,0,0,14,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3367,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,14,4,0,3,7,0,8,4,0,32,80,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3368,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3370,        int start = 0;,8,1,0,0,0,0,0,0,0,10,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3371,"        int end = text.indexOf(searchString, start);",2,1,1,1,2,0,0,0,0,7,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3372,        if (end == -1) {,12,3,0,1,3,0,0,0,0,17,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3373,            return text;,0,0,0,0,0,1,8,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3375,        int replLength = searchString.length();,2,0,0,1,2,0,12,0,0,15,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3376,        int increase = replacement.length() - replLength;,8,2,0,1,2,0,4,0,0,14,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3377,        increase = (increase < 0 ? 0 : increase);,8,1,1,1,2,0,4,0,0,18,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3378,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,6,5,0,2,4,0,0,0,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3379,        StringBuilder buf = new StringBuilder(text.length() + increase);,0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3380,        while (end != -1) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3381,"            buf.append(text.substring(start, end)).append(replacement);",0,0,0,3,6,0,0,0,0,9,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3382,            start = end + replLength;,14,2,0,0,0,0,0,0,0,18,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3383,            if (--max == 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3384,                break;,4,1,0,0,0,0,0,0,0,5,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3386,"            end = text.indexOf(searchString, start);",2,0,0,1,2,0,8,0,0,11,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3388,        buf.append(text.substring(start));,0,0,0,2,4,0,10,0,0,10,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3389,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3432,"        return replaceEach(text, searchList, replacementList, false, 0);",0,0,0,1,2,1,8,0,0,9,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3483,        int timeToLive = searchList == null ? 0 : searchList.length;,8,1,0,0,0,0,0,0,0,9,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3484,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",6,1,0,1,2,1,10,0,0,19,72,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3542,        if (text == null || text.length() == 0 || searchList == null || ,4,8,0,1,3,0,4,0,0,16,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3545,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3549,        if (timeToLive < 0) {,2,0,0,1,3,0,0,0,0,3,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3550,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",0,0,0,1,2,0,0,0,0,3,92,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3553,        int searchLength = searchList.length;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3554,        int replacementLength = replacementList.length;,6,0,0,0,0,0,0,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3557,        if (searchLength != replacementLength) {,4,1,0,1,3,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3558,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,4,0,0,0,1,0,0,2,0,8,83,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3565,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,4,1,1,2,4,0,0,0,0,7,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3568,        int textIndex = -1;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3569,        int replaceIndex = -1;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3570,        int tempIndex = -1;,8,1,1,0,0,0,4,8,0,28,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3574,        for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3575,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,2,4,1,2,5,0,0,0,0,14,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3578,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3580,            tempIndex = text.indexOf(searchList[i]);,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3583,            if (tempIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3584,                noMoreMatchesForReplIndex[i] = true;,0,0,1,1,2,0,0,0,0,7,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3586,                if (textIndex == -1 || tempIndex < textIndex) {,6,3,0,1,3,0,6,0,0,16,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3587,                    textIndex = tempIndex;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3588,                    replaceIndex = i;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3595,        if (textIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3596,            return text;,2,0,0,0,0,1,4,0,0,6,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3599,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3602,        int increase = 0;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3605,        for (int i = 0; i < searchList.length; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3606,            int greater = replacementList[i].length() - searchList[i].length();,2,1,1,4,8,0,4,0,0,15,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3607,            if (greater > 0) {,4,1,0,1,3,0,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3608,                increase += 3 * greater; // assume 3 matches,4,1,0,0,0,0,6,0,0,12,44,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3612,"        increase = Math.min(increase, text.length() / 5);",22,7,0,2,4,0,10,0,0,41,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3614,        StringBuilder buf = new StringBuilder(text.length() + increase);,0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3616,        while (textIndex != -1) {,2,1,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3618,            for (int i = start; i < textIndex; i++) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3619,                buf.append(text.charAt(i));,0,0,0,2,4,0,10,0,0,10,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3621,            buf.append(replacementList[replaceIndex]);,0,0,1,2,4,0,4,0,0,8,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3623,            start = textIndex + searchList[replaceIndex].length();,0,0,0,2,4,0,0,0,0,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3625,            textIndex = -1;,8,0,0,0,0,1,0,4,0,15,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3626,            replaceIndex = -1;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3627,            tempIndex = -1;,18,3,0,0,0,0,4,2,0,29,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3630,            for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3631,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3634,                    continue;,4,1,0,0,0,0,0,0,0,5,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3636,"                tempIndex = text.indexOf(searchList[i], start);",0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3639,                if (tempIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3640,                    noMoreMatchesForReplIndex[i] = true;,4,1,1,1,2,0,4,0,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3642,                    if (textIndex == -1 || tempIndex < textIndex) {,8,4,0,1,3,0,0,0,0,13,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3643,                        textIndex = tempIndex;,4,0,1,0,0,0,0,0,0,10,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3644,                        replaceIndex = i;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3651,        int textLength = text.length();,2,0,0,1,2,0,16,0,0,19,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3652,        for (int i = start; i < textLength; i++) {,0,0,0,1,3,0,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3653,            buf.append(text.charAt(i));,2,0,0,2,4,0,10,0,0,13,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3655,        String result = buf.toString();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3656,        if (!repeat) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3657,            return result;,4,0,0,0,0,1,0,0,0,4,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3660,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",2,1,0,1,2,1,10,0,0,13,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3686,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3687,            return null;,0,0,0,0,0,1,12,0,0,12,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3689,"        return str.replace(searchChar, replaceChar);",2,0,0,1,2,1,8,0,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3729,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3730,            return str;,6,1,0,0,0,2,0,0,0,8,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3732,        if (replaceChars == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3733,            replaceChars = EMPTY;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3735,        boolean modified = false;,2,0,0,0,0,0,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3736,        int replaceCharsLength = replaceChars.length();,4,0,0,1,2,0,8,0,0,13,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3737,        int strLength = str.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3738,        StringBuilder buf = new StringBuilder(strLength);,0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3739,        for (int i = 0; i < strLength; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3740,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3741,            int index = searchChars.indexOf(ch);,2,0,0,1,2,0,6,0,0,8,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3742,            if (index >= 0) {,4,2,0,1,3,0,0,2,0,9,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3743,                modified = true;,2,0,0,0,0,0,0,0,0,4,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3744,                if (index < replaceCharsLength) {,6,1,0,1,3,0,0,0,0,7,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3745,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,10,0,0,10,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3748,                buf.append(ch);,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3751,        if (modified) {,0,0,0,1,3,0,10,0,0,10,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3752,            return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3754,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3789,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3790,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3792,        if (overlay == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3793,            overlay = EMPTY;,4,0,0,0,0,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3795,        int len = str.length();,4,1,0,1,2,0,4,0,0,9,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3796,        if (start < 0) {,6,3,0,1,3,0,8,0,0,17,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3797,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3799,        if (start > len) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3800,            start = len;,24,2,0,0,0,0,0,0,0,29,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3802,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3803,            end = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3805,        if (end > len) {,4,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3806,            end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3808,        if (start > end) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3809,            int temp = start;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3810,            start = end;,2,0,1,0,0,0,0,2,0,8,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3811,            end = temp;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3813,        return new StringBuilder(len + start - end + overlay.length() + 1),6,4,0,2,4,1,4,2,0,16,66,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3848,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3849,            return str;,4,0,0,0,0,1,8,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3852,        if (str.length() == 1) {,0,1,0,2,5,0,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3853,            char ch = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3854,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,14,3,0,1,3,0,0,0,0,19,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3855,                return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3857,            return str;,4,1,0,0,0,1,0,0,0,5,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3860,        int lastIdx = str.length() - 1;,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3861,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3863,        if (last == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3864,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3865,                lastIdx--;,8,1,0,0,0,0,0,0,0,9,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3867,        } else if (last != CharUtils.CR) {,10,1,0,1,4,0,0,0,0,12,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3868,            lastIdx++;,8,1,0,0,0,0,16,0,0,26,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3870,"        return str.substring(0, lastIdx);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3900,        if (isEmpty(str) || separator == null) {,2,2,0,2,5,0,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3901,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3903,        if (str.endsWith(separator)) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3904,"            return str.substring(0, str.length() - separator.length());",0,0,0,3,6,1,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3906,        return str;,2,1,1,0,0,1,0,0,0,7,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3935,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3936,            return null;,10,5,0,0,0,1,6,0,0,21,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3938,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3939,        if (strLen < 2) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3940,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3942,        int lastIdx = strLen - 1;,2,1,0,0,0,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3943,"        String ret = str.substring(0, lastIdx);",2,0,0,1,2,0,6,2,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3944,        char last = str.charAt(lastIdx);,2,0,0,1,2,0,6,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3945,        if (last == CharUtils.LF) {,0,0,0,1,3,0,6,0,0,6,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3946,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,2,0,0,2,5,0,0,0,0,2,46,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3947,"                return ret.substring(0, lastIdx - 1);",2,1,0,1,2,1,4,0,0,7,37,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3950,        return ret;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3979,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3980,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3982,        if (repeat <= 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3983,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3985,        int inputLength = str.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3986,        if (repeat == 1 || inputLength == 0) {,10,3,0,1,3,1,0,0,0,14,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3987,            return str;,4,1,0,0,0,1,0,0,0,5,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3989,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3990,"            return padding(repeat, str.charAt(0));",0,0,0,2,4,1,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3993,        int outputLength = inputLength * repeat;,4,1,0,0,0,0,0,0,0,5,40,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3994,        switch (inputLength) {,6,3,1,1,3,0,8,0,0,26,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3996,                char ch = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3997,                char[] output1 = new char[outputLength];,2,0,1,2,4,0,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3998,                for (int i = repeat - 1; i >= 0; i--) {,8,2,0,1,3,0,0,0,0,11,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,3999,                    output1[i] = ch;,4,0,1,1,2,0,6,0,0,20,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4001,                return new String(output1);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4003,                char ch0 = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4004,                char ch1 = str.charAt(1);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4005,                char[] output2 = new char[outputLength];,8,3,1,2,4,0,0,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4006,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",12,3,0,1,3,0,0,0,0,17,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4007,                    output2[i] = ch0;,2,1,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4008,                    output2[i + 1] = ch1;,4,1,1,1,2,0,0,0,0,8,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4010,                return new String(output2);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4012,                StringBuilder buf = new StringBuilder(outputLength);,6,0,0,1,2,1,8,4,0,19,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4013,                for (int i = 0; i < repeat; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4014,                    buf.append(str);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4016,                return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4040,        if(str == null || separator == null) {,4,3,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4041,"            return repeat(str, repeat);",2,1,0,1,2,1,6,0,0,9,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4044,"            String result = repeat(str + separator, repeat);",10,2,0,1,2,0,4,2,0,18,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4045,"            return removeEnd(result, separator);",2,0,0,1,2,1,0,0,0,2,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4073,        if (repeat < 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4074,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",2,1,0,1,2,0,0,2,0,6,79,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4076,        final char[] buf = new char[repeat];,10,1,0,2,4,0,0,0,0,13,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4077,        for (int i = 0; i < buf.length; i++) {,0,0,0,1,3,0,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4078,            buf[i] = padChar;,2,0,1,1,2,0,0,0,0,7,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4080,        return new String(buf);,6,0,0,1,2,1,0,2,0,9,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4103,"        return rightPad(str, size, ' ');",4,1,0,1,2,1,10,0,0,16,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4128,        if (str == null) {,8,1,0,1,3,1,0,0,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4129,            return null;,2,0,0,0,0,1,20,0,0,22,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4131,        int pads = size - str.length();,4,1,0,1,2,0,4,0,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4132,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4133,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4135,        if (pads > PAD_LIMIT) {,2,0,0,1,3,0,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4136,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,12,0,0,12,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4138,"        return str.concat(padding(pads, padChar));",0,0,0,2,4,1,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4165,        if (str == null) {,2,0,0,1,3,0,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4166,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4168,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4169,"            padStr = "" "";",2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4171,        int padLen = padStr.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4172,        int strLen = str.length();,6,1,1,1,2,0,8,0,0,19,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4173,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4174,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4175,            return str; // returns original String when possible,10,2,0,0,0,1,4,0,0,16,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4177,        if (padLen == 1 && pads <= PAD_LIMIT) {,4,0,0,1,3,0,0,0,0,5,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4178,"            return rightPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,10,0,0,10,45,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4181,        if (pads == padLen) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4182,            return str.concat(padStr);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4183,        } else if (pads < padLen) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4184,"            return str.concat(padStr.substring(0, pads));",0,0,0,2,4,1,10,0,0,10,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4186,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4187,            char[] padChars = padStr.toCharArray();,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4188,            for (int i = 0; i < pads; i++) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4189,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4191,            return str.concat(new String(padding));,12,3,0,2,4,1,4,4,0,23,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4215,"        return leftPad(str, size, ' ');",4,0,0,1,2,1,6,2,0,13,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4240,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4241,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4243,        int pads = size - str.length();,4,1,0,1,2,0,4,0,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4244,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4245,            return str; // returns original String when possible,10,1,0,0,0,1,0,0,0,12,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4247,        if (pads > PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4248,"            return leftPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4250,"        return padding(pads, padChar).concat(str);",0,0,0,2,4,1,10,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4277,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4278,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4280,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4281,"            padStr = "" "";",2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4283,        int padLen = padStr.length();,4,0,0,1,2,0,8,0,0,12,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4284,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4285,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4286,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4287,            return str; // returns original String when possible,4,0,0,0,0,1,0,0,0,4,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4289,        if (padLen == 1 && pads <= PAD_LIMIT) {,12,4,0,1,3,0,0,0,0,17,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4290,"            return leftPad(str, size, padStr.charAt(0));",2,0,0,2,4,1,8,0,0,11,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4293,        if (pads == padLen) {,4,1,0,1,3,0,10,0,0,15,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4294,            return padStr.concat(str);,0,0,0,1,2,1,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4295,        } else if (pads < padLen) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4296,"            return padStr.substring(0, pads).concat(str);",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4298,            char[] padding = new char[pads];,2,0,0,2,4,0,0,0,0,2,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4299,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4300,            for (int i = 0; i < pads; i++) {,14,1,0,1,3,1,0,0,0,17,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4301,                padding[i] = padChars[i % padLen];,6,2,1,2,4,0,0,0,0,15,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4303,            return new String(padding).concat(str);,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4316,        return str == null ? 0 : str.length();,2,0,0,1,2,1,0,0,0,3,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4345,"        return center(str, size, ' ');",0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4373,        if (str == null || size <= 0) {,4,3,0,1,3,0,6,0,0,13,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4374,            return str;,2,0,1,0,0,1,0,0,0,4,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4376,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4377,        int pads = size - strLen;,0,0,0,0,0,0,6,0,0,6,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4378,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4379,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4381,"        str = leftPad(str, strLen + pads / 2, padChar);",2,0,0,1,2,0,0,0,0,2,47,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4382,"        str = rightPad(str, size, padChar);",0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4383,        return str;,8,3,0,0,0,1,0,0,0,11,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4413,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4414,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4416,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4417,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4419,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4420,        int pads = size - strLen;,14,2,0,0,0,0,12,0,0,28,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4421,        if (pads <= 0) {,4,1,0,1,3,0,0,0,0,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4422,            return str;,4,1,0,0,0,1,0,0,0,5,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4424,"        str = leftPad(str, strLen + pads / 2, padStr);",2,1,0,1,2,0,0,0,0,3,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4425,"        str = rightPad(str, size, padStr);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4426,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4451,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4452,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4454,        return str.toUpperCase();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4474,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4475,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4477,        return str.toUpperCase(locale);,0,0,0,1,2,1,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4500,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4501,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4503,        return str.toLowerCase();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4523,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4524,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4526,        return str.toLowerCase(locale);,2,1,0,1,2,1,6,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4551,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4552,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4554,        return new StringBuilder(strLen),2,0,0,1,2,1,0,2,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4582,        if (str == null || (strLen = str.length()) == 0) {,2,0,0,3,7,0,0,0,0,2,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4583,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4585,        return new StringBuilder(strLen),0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4620,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4621,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4623,        StringBuilder buffer = new StringBuilder(strLen);,6,0,1,1,2,0,6,4,0,20,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4625,        char ch = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4626,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,11,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4627,            ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,9,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4628,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,0,6,0,0,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4629,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4630,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,0,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4631,                ch = Character.toLowerCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4632,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,14,0,0,14,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4633,                ch = Character.toUpperCase(ch);,2,0,0,1,2,0,6,0,0,9,31,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4635,            buffer.append(ch);,2,0,0,1,2,0,12,0,0,14,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4637,        return buffer.toString();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4662,        if (isEmpty(str) || isEmpty(sub)) {,0,1,0,3,7,0,8,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4663,            return 0;,6,1,1,0,0,1,0,2,0,14,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4665,        int count = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4666,        int idx = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4667,"        while ((idx = str.indexOf(sub, idx)) != -1) {",2,1,0,3,7,0,8,0,0,13,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4668,            count++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4669,            idx += sub.length();,2,0,0,1,2,0,4,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4671,        return count;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4695,        if (str == null) {,4,1,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4696,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4698,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4699,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4700,            if (Character.isLetter(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4701,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4704,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4729,        if (str == null) {,2,1,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4730,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4732,        int sz = str.length();,4,0,1,1,2,0,12,0,0,25,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4733,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,0,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4734,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,10,1,0,6,13,0,0,0,0,12,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4735,                return false;,2,1,0,0,0,1,12,0,0,16,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4738,        return true;,10,2,0,0,0,1,0,0,0,13,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4762,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4763,            return false;,0,0,0,0,0,1,4,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4765,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4766,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4767,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4768,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4771,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4796,        if (str == null) {,4,1,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4797,            return false;,0,0,0,0,0,1,4,0,0,7,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4799,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4800,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,0,8,0,20,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4801,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,19,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4802,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4805,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4834,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4835,            return false;,0,0,0,0,0,1,4,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4837,        int sz = str.length();,4,0,0,1,2,0,4,0,0,8,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4838,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4839,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4840,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4843,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4868,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4869,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4871,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4872,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4873,            if (Character.isDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4874,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4877,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4904,        if (str == null) {,4,1,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4905,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4907,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4908,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4909,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,76,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4910,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4913,        return true;,2,1,0,0,0,1,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4936,        if (str == null) {,8,4,0,1,3,0,0,0,0,12,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4937,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4939,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4940,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4941,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4942,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4945,        return true;,4,1,0,0,0,1,0,0,0,6,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4966,        if (str == null || isEmpty(str)) {,6,3,0,2,5,0,4,0,0,14,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4967,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4969,        int sz = str.length();,2,0,0,1,2,0,4,0,0,7,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4970,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4971,            if (Character.isLowerCase(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4972,                return false;,2,0,0,0,0,1,6,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4975,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4996,        if (str == null || isEmpty(str)) {,4,2,1,2,5,0,8,0,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4997,            return false;,2,1,0,0,0,1,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4999,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5000,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5001,            if (Character.isUpperCase(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5002,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5005,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5027,        return str == null ? EMPTY : str;,6,1,0,0,0,1,0,0,0,7,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5048,        return str == null ? defaultStr : str;,0,0,0,0,0,1,0,0,0,1,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5069,        return StringUtils.isEmpty(str) ? defaultStr : str;,12,2,0,1,2,1,6,0,0,21,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5089,        if (str == null) {,0,1,1,1,3,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5090,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5092,        return new StringBuilder(str).reverse().toString();,2,0,0,3,6,1,4,2,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5115,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5116,            return null;,6,5,1,0,0,1,0,0,0,19,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5120,"        String[] strs = split(str, separatorChar);",0,0,0,2,4,0,0,0,0,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5121,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5122,"        return join(strs, separatorChar);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5160,"        return abbreviate(str, 0, maxWidth);",0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5199,        if (str == null) {,10,4,0,1,3,0,6,0,0,21,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5200,            return null;,4,0,0,0,0,1,8,0,0,12,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5202,        if (maxWidth < 4) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5203,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",4,1,1,1,2,0,4,0,0,13,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5205,        if (str.length() <= maxWidth) {,4,1,0,2,5,0,12,0,0,17,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5206,            return str;,8,0,0,0,0,2,0,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5208,        if (offset > str.length()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5209,            offset = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5211,        if ((str.length() - offset) < (maxWidth - 3)) {,6,3,0,4,9,0,4,0,0,15,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5212,            offset = str.length() - (maxWidth - 3);,4,2,0,2,4,0,4,0,0,11,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5214,        if (offset <= 4) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5215,"            return str.substring(0, maxWidth - 3) + ""..."";",8,3,0,1,2,2,4,0,0,17,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5217,        if (maxWidth < 7) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5218,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0,0,0,1,2,0,0,2,0,3,82,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5220,        if ((offset + (maxWidth - 3)) < str.length()) {,4,3,0,4,9,0,4,0,0,11,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5221,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",6,3,0,2,4,1,8,0,0,18,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5223,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",0,0,0,3,6,1,0,0,0,10,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5254,        if (str1 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5255,            return str2;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5257,        if (str2 == null) {,4,1,1,1,3,0,6,0,0,16,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5258,            return str1;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5260,"        int at = indexOfDifference(str1, str2);",2,0,1,1,2,0,10,0,0,21,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5261,        if (at == -1) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5262,            return EMPTY;,4,0,0,0,0,1,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5264,        return str2.substring(at);,0,0,0,1,2,1,16,0,0,16,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5291,        if (str1 == str2) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5292,            return -1;,8,0,0,0,0,1,8,0,0,17,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5294,        if (str1 == null || str2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5295,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5298,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,8,3,0,3,7,0,8,0,0,21,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5299,            if (str1.charAt(i) != str2.charAt(i)) {,0,1,0,3,7,0,12,0,0,13,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5300,                break;,8,1,0,0,0,0,12,0,0,23,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5303,        if (i < str2.length() || i < str1.length()) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5304,            return i;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5306,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5341,        if (strs == null || strs.length <= 1) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5342,            return -1;,4,0,0,0,0,1,2,0,0,8,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5344,        boolean anyStringNull = false;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5345,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5346,        int arrayLen = strs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5347,        int shortestStrLen = Integer.MAX_VALUE;,0,0,0,0,0,0,0,0,0,0,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5348,        int longestStrLen = 0;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5353,        for (int i = 0; i < arrayLen; i++) {,10,1,0,1,3,0,0,0,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5354,            if (strs[i] == null) {,4,1,1,2,5,0,8,0,0,18,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5355,                anyStringNull = true;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5356,                shortestStrLen = 0;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5358,                allStringsNull = false;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5359,"                shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",10,0,0,3,6,0,8,0,0,18,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5360,"                longestStrLen = Math.max(strs[i].length(), longestStrLen);",10,0,1,3,6,0,16,0,0,31,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5365,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,8,3,0,2,5,0,0,0,0,14,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5366,            return -1;,2,0,0,0,0,1,0,0,0,3,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5370,        if (shortestStrLen == 0) {,2,1,0,1,3,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5371,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5375,        int firstDiff = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5376,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,8,1,0,1,3,0,0,0,0,10,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5377,            char comparisonChar = strs[0].charAt(stringPos);,2,0,1,2,4,0,6,0,0,19,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5378,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,8,1,0,1,3,0,0,0,0,10,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5379,                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {,2,0,0,3,7,0,0,0,0,3,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5380,                    firstDiff = stringPos;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5381,                    break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5384,            if (firstDiff != -1) {,6,4,0,1,3,0,4,0,0,15,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5385,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5389,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,0,0,0,1,3,0,0,0,0,4,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5393,            return shortestStrLen;,2,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5395,        return firstDiff;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5432,        if (strs == null || strs.length == 0) {,8,4,0,1,3,0,0,0,0,12,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5433,            return EMPTY;,4,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5435,        int smallestIndexOfDiff = indexOfDifference(strs);,4,1,0,1,2,0,4,0,0,9,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5436,        if (smallestIndexOfDiff == -1) {,4,2,0,1,3,0,4,0,0,11,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5438,            if (strs[0] == null) {,0,1,1,2,5,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5439,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5441,            return strs[0];,0,0,0,1,2,1,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5442,        } else if (smallestIndexOfDiff == 0) {,8,2,1,1,4,0,4,0,0,21,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5444,            return EMPTY;,6,4,0,0,0,1,4,0,0,15,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5447,"            return strs[0].substring(0, smallestIndexOfDiff);",10,1,0,2,4,1,0,0,0,12,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5488,        if (s == null || t == null) {,4,3,0,1,3,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5489,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5509,        int n = s.length(); // length of s,4,0,0,1,2,0,4,0,0,10,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5510,        int m = t.length(); // length of t,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5512,        if (n == 0) {,4,2,0,1,3,0,12,0,0,18,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5513,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5514,        } else if (m == 0) {,2,1,0,1,4,0,0,0,0,3,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5515,            return n;,0,0,0,0,0,1,10,0,0,10,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5518,        if (n > m) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5520,            String tmp = s;,4,0,0,0,0,0,0,2,0,6,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5521,            s = t;,6,0,0,0,0,0,0,0,0,7,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5522,            t = tmp;,0,1,1,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5523,            n = m;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5524,            m = t.length();,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5527,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",4,1,0,2,4,0,0,0,0,5,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5528,"        int d[] = new int[n+1]; // cost array, horizontally",4,1,0,2,4,0,0,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5539,        for (i = 0; i<=n; i++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5540,            p[i] = i;,4,0,1,1,2,0,0,0,0,10,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5543,        for (j = 1; j<=m; j++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5544,            t_j = t.charAt(j-1);,4,1,0,1,2,0,4,0,0,10,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5545,            d[0] = j;,4,0,1,1,2,0,0,0,0,7,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5547,            for (i=1; i<=n; i++) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5548,                cost = s.charAt(i-1)==t_j ? 0 : 1;,6,2,0,1,2,0,4,0,0,13,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5550,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",6,5,1,6,12,0,8,0,0,32,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5554,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5555,            p = d;,6,0,1,0,0,1,0,0,0,10,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5556,            d = _d;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5561,        return p[n];,0,0,0,1,2,1,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5610,"        return startsWith(str, prefix, false);",0,0,0,1,2,1,6,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5635,"        return startsWith(str, prefix, true);",0,0,0,1,2,1,6,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5650,        if (str == null || prefix == null) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5651,            return (str == null && prefix == null);,6,5,0,1,2,1,4,0,0,16,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5653,        if (prefix.length() > str.length()) {,0,0,0,3,7,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5654,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5656,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",0,0,0,2,4,1,0,0,0,7,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5678,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,8,1,0,3,7,0,12,2,0,24,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5679,            return false;,4,1,0,0,0,1,0,0,0,6,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5681,        for (int i = 0; i < searchStrings.length; i++) {,0,0,1,1,3,0,4,0,0,8,48,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5682,            String searchString = searchStrings[i];,2,0,1,1,2,0,0,2,0,8,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5683,"            if (StringUtils.startsWith(string, searchString)) {",0,0,0,2,5,0,8,0,0,8,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5684,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5687,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5716,"        return endsWith(str, suffix, false);",0,0,0,1,2,1,6,0,0,7,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5742,"        return endsWith(str, suffix, true);",0,0,0,1,2,1,6,0,0,7,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5757,        if (str == null || suffix == null) {,4,3,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5758,            return (str == null && suffix == null);,4,3,0,1,2,1,0,0,0,7,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5760,        if (suffix.length() > str.length()) {,0,1,0,3,7,0,14,0,0,15,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5761,            return false;,4,4,0,0,0,1,8,0,0,17,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5763,        int strOffset = str.length() - suffix.length();,2,1,0,2,4,0,14,0,0,17,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5764,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,2,4,1,14,0,0,14,76,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,170,            return StringUtils.EMPTY;,6,1,0,0,0,1,0,0,0,7,25,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,230,            return StringUtils.EMPTY;,4,1,0,0,0,4,0,4,0,12,25,1,1.0,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,229,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,232,        return getPackageName(cls.getName());,0,0,0,2,4,1,0,0,0,7,37,4,0.5,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,201,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,245,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.16667,1,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,252,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,54,4,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,253,        if (i == -1) {,2,1,0,1,3,0,0,0,0,4,14,4,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,256,"        return className.substring(0, i);",0,0,0,1,2,1,6,0,0,6,33,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,86,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,2,0,0,1,2,3,12,2,0,19,94,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",4,0,0,1,2,0,4,2,0,10,53,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",4,0,0,1,2,0,4,2,0,10,47,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",4,0,0,1,2,0,4,2,0,10,57,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",8,1,0,1,2,0,10,2,0,21,53,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",0,0,0,1,2,0,0,0,0,3,47,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",4,0,0,1,2,0,4,2,0,10,51,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",4,1,0,1,2,0,0,0,0,5,49,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",8,0,0,1,2,0,4,0,0,12,46,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,91,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,0,0,0,2,5,0,0,0,0,7,62,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,92,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,0,0,0,1,2,0,0,0,0,3,64,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,93,            if (!primitiveClass.equals(wrapperClass)) {,0,0,0,2,5,0,6,0,0,7,43,6,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,94,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,1,2,0,0,0,0,3,54,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,96,        },0,0,0,0,1,0,0,0,0,1,1,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,102,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",14,1,0,1,2,3,6,14,0,39,89,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,107,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",2,0,0,1,2,3,6,12,0,23,96,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,124,"        addAbbreviation(""int"", ""I"");",0,0,0,1,2,0,0,0,0,3,28,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,125,"        addAbbreviation(""boolean"", ""Z"");",8,3,0,1,2,0,8,0,0,19,32,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,126,"        addAbbreviation(""float"", ""F"");",2,0,0,1,2,0,6,0,0,11,30,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,127,"        addAbbreviation(""long"", ""J"");",0,0,0,1,2,0,2,0,0,4,29,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,128,"        addAbbreviation(""short"", ""S"");",0,0,0,1,2,0,2,0,0,4,30,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,129,"        addAbbreviation(""byte"", ""B"");",0,0,0,1,2,0,0,0,0,3,29,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,130,"        addAbbreviation(""double"", ""D"");",2,0,0,1,2,0,2,0,0,6,31,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,131,"        addAbbreviation(""char"", ""C"");",0,0,0,1,2,0,2,0,0,4,29,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,132,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,116,"        abbreviationMap.put(primitive, abbreviation);",0,0,0,1,2,0,0,0,0,3,45,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,117,"        reverseAbbreviationMap.put(abbreviation, primitive);",4,3,0,1,2,0,8,0,0,15,52,3,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,118,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,169,        if (cls == null) {,2,1,0,1,3,0,4,0,0,7,18,4,0.03846,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,172,        return getShortClassName(cls.getName());,0,0,0,2,4,1,0,0,0,7,40,4,0.03846,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,455,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,459,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,0,0,0,4,8,0,0,0,0,12,67,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,460,"            escapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,24,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,461,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,498,        if (writer == null ) {,4,1,0,1,3,0,6,0,0,12,22,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,501,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,504,"        Entities.HTML40.escape(writer, string);",4,0,0,1,2,0,6,0,0,10,39,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,505,    },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,832,"                    writer.write(""&#"");",0,0,0,1,2,0,4,0,0,5,19,11,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,833,"                    writer.write(Integer.toString(c, 10));",6,3,0,2,4,0,10,0,0,19,38,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,834,                    writer.write(';');,0,0,0,1,2,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,536,            return super.name(value);,0,0,0,1,2,1,0,0,0,4,25,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,831,                if (c > 0x7F) {,0,0,0,1,3,0,0,0,0,4,15,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang/Entities,42,961,"                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);",2,0,0,2,4,0,8,0,0,11,63,18,0.25,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,826,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,827,        for (int i = 0; i < len; i++) {,0,0,0,1,3,0,0,0,0,4,31,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,828,            char c = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.2,1,0
defect4j,lang,org/apache/commons/lang/Entities,42,829,            String entityName = this.entityName(c);,4,2,1,1,2,0,8,0,0,21,39,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,830,            if (entityName == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,844,    },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,951,                        if (entityContentLen > 1) {,0,0,0,1,3,0,0,0,0,4,27,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,952,                            char isHexChar = entityContent.charAt(1);,0,0,0,1,2,0,0,0,0,3,41,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,954,                                switch (isHexChar) {,2,0,0,1,3,0,0,0,0,2,20,16,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,964,                                if (entityValue > 0xFFFF) {,2,1,0,1,3,0,0,0,0,3,27,16,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,969,                            },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,970,                        },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,525,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,529,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,0,0,0,4,8,0,0,0,0,12,67,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,530,"            unescapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,26,7,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,531,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,557,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,560,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,563,"        Entities.HTML40.unescape(writer, string);",0,0,0,1,2,0,6,0,0,7,41,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,564,    },0,0,0,0,1,0,0,0,0,1,1,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,112,"        this(pattern, Locale.getDefault(), registry);",4,0,0,2,4,0,4,0,0,8,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,148,        ArrayList foundFormats = new ArrayList();,4,0,0,1,2,0,0,0,0,5,41,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,149,        ArrayList foundDescriptions = new ArrayList();,0,0,0,1,2,0,0,0,0,3,46,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,150,        StringBuffer stripCustom = new StringBuffer(pattern.length());,2,0,0,2,4,0,4,4,0,10,62,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,152,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,153,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,154,        int fmtCount = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,155,        while (pos.getIndex() < pattern.length()) {,4,2,0,3,7,0,8,12,0,27,43,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,156,            switch (c[pos.getIndex()]) {,2,0,1,3,7,0,10,4,0,18,28,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,187,                stripCustom.append(c[pos.getIndex()]);,0,0,1,3,6,0,8,0,0,10,38,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,188,                next(pos);,0,0,0,1,2,0,4,0,0,4,10,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,403,        pos.setIndex(pos.getIndex() + 1);,0,1,0,2,4,0,8,0,0,9,33,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,404,        return pos;,2,0,0,0,0,1,0,0,0,2,11,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,124,        super(DUMMY_PATTERN);,0,0,0,1,2,0,0,0,0,3,21,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,125,        setLocale(locale);,0,0,0,1,2,0,4,0,0,4,18,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,126,        this.registry = registry;,0,0,0,0,0,0,0,0,0,0,25,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,127,        applyPattern(pattern);,0,0,0,1,2,0,4,0,0,4,22,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,143,        if (registry == null) {,4,1,0,1,3,0,0,2,0,7,23,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,144,            super.applyPattern(pattern);,4,0,0,1,2,0,0,0,0,4,28,7,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,145,            toPattern = super.toPattern();,6,1,0,1,2,0,0,0,0,8,30,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,146,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,349,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,350,            chars = str.toCharArray();,10,1,0,1,2,0,4,0,0,17,26,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,351,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,363,            int len = chars.length;,8,2,0,0,0,0,4,0,0,15,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,364,            if (pos + len > bufferEnd) {,10,3,0,1,3,0,0,0,0,13,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,365,                return 0;,2,0,0,0,0,4,0,0,0,5,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,367,"            for (int i = 0; i < chars.length; i++, pos++) {",0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,368,                if (chars[i] != buffer[pos]) {,0,1,1,3,7,0,0,0,0,9,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,369,                    return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,372,            return len;,2,0,0,0,0,1,0,0,0,2,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,216,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,217,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",8,1,0,1,2,0,0,0,0,10,69,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,2,0,0,1,2,3,0,4,0,10,68,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,8,0,0,1,2,3,0,4,0,17,69,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",4,0,0,2,4,3,2,4,0,15,94,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,2,0,0,1,2,3,0,4,0,9,65,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,0,0,0,1,2,0,0,0,0,3,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",2,0,0,2,4,3,2,4,0,12,88,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,80,        return COMMA_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,89,        return TAB_MATCHER;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,98,        return SPACE_MATCHER;,4,0,0,0,0,1,8,0,0,12,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,108,        return SPLIT_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,117,        return TRIM_MATCHER;,4,1,0,0,0,1,0,0,0,5,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,126,        return SINGLE_QUOTE_MATCHER;,4,1,0,0,0,1,0,0,0,5,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,135,        return DOUBLE_QUOTE_MATCHER;,2,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,144,        return QUOTE_MATCHER;,2,1,0,0,0,1,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,153,        return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,163,        return new CharMatcher(ch);,2,0,0,1,2,1,2,2,0,8,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,173,        if (chars == null || chars.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,174,            return NONE_MATCHER;,4,0,1,0,0,1,0,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,176,        if (chars.length == 1) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,177,            return new CharMatcher(chars[0]);,2,0,1,2,4,1,0,2,0,8,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,179,        return new CharSetMatcher(chars);,2,0,0,1,2,1,0,2,0,4,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,189,        if (chars == null || chars.length() == 0) {,2,3,0,2,5,0,4,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,190,            return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,192,        if (chars.length() == 1) {,0,1,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,193,            return new CharMatcher(chars.charAt(0));,2,1,0,2,4,1,4,4,0,13,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,195,        return new CharSetMatcher(chars.toCharArray());,0,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,205,        if (str == null || str.length() == 0) {,6,0,0,2,5,3,2,0,0,13,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,206,            return NONE_MATCHER;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,208,        return new StringMatcher(str);,4,1,0,1,2,4,2,0,0,11,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,267,"        return isMatch(buffer, pos, 0, buffer.length);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,413,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,414,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,426,            return buffer[pos] <= 32 ? 1 : 0;,0,1,1,1,2,1,0,0,0,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,386,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,387,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,399,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,317,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,318,            this.ch = ch;,14,1,0,0,0,0,4,0,0,21,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,319,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,331,            return ch == buffer[pos] ? 1 : 0;,6,0,0,1,2,1,0,0,0,7,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,284,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,285,            this.chars = (char[]) chars.clone();,0,0,0,3,6,0,0,0,0,9,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,286,            Arrays.sort(this.chars);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,287,        },2,0,0,0,1,0,6,2,0,10,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,299,"            return Arrays.binarySearch(chars, buffer[pos]) >= 0 ? 1 : 0;",0,0,0,2,4,1,0,0,0,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,90,"        this(pattern, Locale.getDefault());",6,3,0,2,4,0,4,0,0,13,35,3,0.0,1,1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,91,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,101,"        this(pattern, locale, null);",4,0,0,1,2,0,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,102,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,113,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,128,    },2,0,0,0,1,0,4,0,0,7,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,134,        return toPattern;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,158,"                appendQuotedString(pattern, pos, stripCustom, true);",4,0,0,1,2,0,8,2,0,15,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,159,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,161,                fmtCount++;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,162,"                seekNonWs(pattern, pos);",4,0,0,1,2,0,6,2,0,12,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,163,                int start = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,164,"                int index = readArgumentIndex(pattern, next(pos));",0,0,0,2,4,0,0,0,0,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,165,                stripCustom.append(START_FE).append(index);,0,0,0,2,4,0,6,0,0,7,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,166,"                seekNonWs(pattern, pos);",0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,167,                Format format = null;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,168,                String formatDescription = null;,0,0,0,0,0,0,0,0,0,0,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,169,                if (c[pos.getIndex()] == START_FMT) {,4,1,0,3,7,0,0,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,170,"                    formatDescription = parseFormatDescription(pattern,",4,0,0,0,1,0,12,2,0,20,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,172,                    format = getFormat(formatDescription);,0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,173,                    if (format == null) {,4,2,0,1,3,0,10,0,0,16,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,174,                        stripCustom.append(START_FMT).append(formatDescription);,0,0,0,2,4,0,10,0,0,10,56,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,177,                foundFormats.add(format);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,178,                foundDescriptions.add(format == null ? null : formatDescription);,0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,179,                Validate.isTrue(foundFormats.size() == fmtCount);,0,0,0,2,4,0,0,0,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,180,                Validate.isTrue(foundDescriptions.size() == fmtCount);,6,2,0,2,4,0,14,2,0,24,54,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,181,                if (c[pos.getIndex()] != END_FE) {,2,0,0,3,7,0,4,0,0,7,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,182,                    throw new IllegalArgumentException(,8,1,0,0,1,0,0,0,0,10,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,191,        super.applyPattern(stripCustom.toString());,0,0,0,2,4,0,0,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,192,"        toPattern = insertFormats(super.toPattern(), foundDescriptions);",6,0,0,2,4,0,12,0,0,20,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,193,        if (containsElements(foundFormats)) {,0,0,0,2,5,0,4,0,0,4,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,194,            Format[] origFormats = getFormats();,2,0,0,2,4,0,2,2,0,6,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,197,            int i = 0;,4,1,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,198,            for (Iterator it = foundFormats.iterator(); it.hasNext(); i++) {,6,1,0,3,7,0,0,0,0,7,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,199,                Format f = (Format) it.next();,8,0,0,2,4,0,8,6,0,25,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,200,                if (f != null) {,2,1,0,1,3,0,0,0,0,3,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,201,                    origFormats[i] = f;,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,204,            super.setFormats(origFormats);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,206,    },2,0,0,0,1,0,8,2,0,14,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,213,        throw new UnsupportedOperationException();,0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,221,        throw new UnsupportedOperationException();,10,1,0,1,2,0,0,2,0,14,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,229,        throw new UnsupportedOperationException();,4,1,0,1,2,0,2,0,0,7,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,237,        throw new UnsupportedOperationException();,6,5,0,1,2,0,0,2,0,13,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,247,        if (registry != null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,248,            String name = desc;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,249,            String args = null;,2,0,1,0,0,0,0,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,250,            int i = desc.indexOf(START_FMT);,2,0,0,1,2,0,6,0,0,8,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,251,            if (i > 0) {,2,1,0,1,3,0,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,252,"                name = desc.substring(0, i).trim();",0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,253,                args = desc.substring(i + 1).trim();,4,1,0,2,4,0,6,0,0,12,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,255,            FormatFactory factory = (FormatFactory) registry.get(name);,0,0,0,2,4,0,0,0,0,6,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,256,            if (factory != null) {,10,0,0,1,3,0,8,0,0,20,22,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,257,"                return factory.getFormat(name, args, getLocale());",2,0,0,2,4,1,0,0,0,2,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,260,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,271,        int start = pos.getIndex();,2,0,0,1,2,0,0,2,0,4,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,272,"        seekNonWs(pattern, pos);",0,1,0,1,2,0,16,0,0,17,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,273,        StringBuffer result = new StringBuffer();,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,274,        boolean error = false;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,275,        for (; !error && pos.getIndex() < pattern.length(); next(pos)) {,12,3,0,4,9,0,12,0,0,29,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,276,            char c = pattern.charAt(pos.getIndex());,2,0,0,2,4,0,8,0,0,10,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,277,            if (Character.isWhitespace(c)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,278,"                seekNonWs(pattern, pos);",4,0,0,1,2,0,0,2,0,7,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,279,                c = pattern.charAt(pos.getIndex());,0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,280,                if (c != START_FMT && c != END_FE) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,281,                    error = true;,4,2,0,0,0,0,4,0,0,13,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,282,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,285,            if ((c == START_FMT || c == END_FE) && result.length() > 0) {,10,5,0,3,7,0,10,2,0,27,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,287,                    return Integer.parseInt(result.toString());,6,2,0,2,4,1,0,0,0,9,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,288,                } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,293,            error = !Character.isDigit(c);,4,0,0,1,2,1,0,2,0,7,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,294,            result.append(c);,0,0,0,1,2,0,4,0,0,5,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,296,        if (error) {,4,0,0,1,3,0,4,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,297,            throw new IllegalArgumentException(,0,0,0,0,1,0,0,0,0,1,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,301,        throw new IllegalArgumentException(,0,0,0,0,1,0,0,0,0,1,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,313,        int start = pos.getIndex();,4,1,0,1,2,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,314,"        seekNonWs(pattern, pos);",0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,315,        int text = pos.getIndex();,4,0,0,1,2,0,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,316,        int depth = 1;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,317,        for (; pos.getIndex() < pattern.length(); next(pos)) {,6,0,0,4,9,0,10,0,0,17,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,318,            switch (pattern.charAt(pos.getIndex())) {,0,0,0,3,7,0,34,0,0,35,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,320,                depth++;,2,0,0,0,0,1,0,2,0,5,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,321,                break;,6,1,1,0,0,3,2,0,0,15,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,323,                depth--;,2,0,0,0,0,0,0,0,0,3,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,324,                if (depth == 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,325,"                    return pattern.substring(text, pos.getIndex());",0,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,329,"                getQuotedString(pattern, pos, false);",0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,333,        throw new IllegalArgumentException(,6,1,0,0,1,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,345,        if (!containsElements(customPatterns)) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,346,            return pattern;,0,0,0,0,0,1,0,0,0,1,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,348,        StringBuffer sb = new StringBuffer(pattern.length() * 2);,0,0,0,2,4,0,0,0,0,6,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,349,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,350,        int fe = -1;,2,0,0,0,0,0,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,351,        int depth = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,352,        while (pos.getIndex() < pattern.length()) {,2,1,0,3,7,0,8,0,0,12,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,353,            char c = pattern.charAt(pos.getIndex());,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,354,            switch (c) {,4,0,1,1,3,0,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,356,"                appendQuotedString(pattern, pos, sb, false);",0,0,0,1,2,0,8,0,0,9,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,357,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,359,                depth++;,2,0,0,0,0,0,0,0,0,3,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,360,                if (depth == 1) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,361,                    fe++;,2,0,0,0,0,0,0,0,0,3,5,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,362,                    sb.append(START_FE).append(,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,364,                    String customPattern = (String) customPatterns.get(fe);,2,0,0,2,4,0,6,4,0,12,55,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,365,                    if (customPattern != null) {,2,1,0,1,3,0,0,0,0,3,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,366,                        sb.append(START_FMT).append(customPattern);,2,0,1,2,4,0,10,0,0,15,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,368,                },4,3,0,0,1,0,0,0,0,7,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,371,                depth--;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,374,                sb.append(c);,2,0,0,1,2,0,6,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,375,                next(pos);,0,0,0,1,2,0,4,0,0,4,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,377,        },6,0,0,0,1,0,0,2,0,8,1,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,378,        return sb.toString();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,388,        int len = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,389,        char[] buffer = pattern.toCharArray();,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,391,"            len = StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex());",2,0,1,3,6,0,0,0,0,7,64,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,392,            pos.setIndex(pos.getIndex() + len);,2,1,0,2,4,0,12,0,0,16,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,393,        } while (len > 0 && pos.getIndex() < pattern.length());,0,0,0,3,7,0,0,0,0,10,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,394,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,419,        int start = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,420,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,7,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,421,        if (escapingOn && c[start] == QUOTE) {,0,0,0,2,5,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,422,            return appendTo == null ? null : appendTo.append(QUOTE);,2,1,0,1,2,1,6,0,0,9,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,424,        int lastHold = start;,4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,425,        for (int i = pos.getIndex(); i < pattern.length(); i++) {,6,1,0,3,7,0,8,0,0,16,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,426,            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {,2,1,0,3,7,0,10,0,0,13,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,427,"                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(",2,1,0,2,5,0,14,0,0,17,63,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,429,                pos.setIndex(i + ESCAPED_QUOTE.length());,0,0,0,2,4,0,0,0,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,430,                lastHold = pos.getIndex();,2,0,0,1,2,0,4,0,0,7,26,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,431,                continue;,2,1,0,0,0,0,4,0,0,8,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,433,            switch (c[pos.getIndex()]) {,0,0,1,3,7,0,4,0,0,6,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,435,                next(pos);,0,0,0,1,2,0,4,0,0,4,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,436,"                return appendTo == null ? null : appendTo.append(c, lastHold,",2,2,0,0,1,1,18,0,0,22,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,439,                next(pos);,0,0,0,1,2,0,0,0,0,3,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,442,        throw new IllegalArgumentException(,0,0,0,0,1,0,0,0,0,1,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,455,"        appendQuotedString(pattern, pos, null, escapingOn);",0,0,0,1,2,0,8,0,0,9,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,456,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,464,        if (coll == null || coll.size() == 0) {,2,3,0,2,5,0,4,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,465,            return false;,0,0,0,0,0,1,6,0,0,7,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,467,        for (Iterator iter = coll.iterator(); iter.hasNext();) {,2,0,0,3,7,0,8,2,0,12,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,468,            if (iter.next() != null) {,0,1,0,2,5,0,4,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,469,                return true;,4,1,0,0,0,1,2,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,472,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,48,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,49,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,76,        if (expression == false) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,77,            throw new IllegalArgumentException(message + value);,6,2,0,1,2,0,0,2,0,10,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,79,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,102,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,103,            throw new IllegalArgumentException(message + value);,0,0,0,1,2,0,0,0,0,3,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,105,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,129,        if (expression == false) {,8,2,0,1,3,0,0,0,0,11,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,130,            throw new IllegalArgumentException(message + value);,0,0,0,1,2,0,6,0,0,6,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,132,    },14,4,0,0,1,0,0,0,0,19,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,156,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,157,            throw new IllegalArgumentException(message);,2,0,0,1,2,1,6,0,0,9,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,159,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,180,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,181,"            throw new IllegalArgumentException(""The validated expression is false"");",6,1,0,1,2,0,4,2,0,15,72,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,183,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,202,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,203,            throw new IllegalArgumentException(message);,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,205,    },4,1,0,0,1,0,0,0,0,5,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,221,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,222,"            throw new IllegalArgumentException(""The validated object is null"");",0,0,0,1,2,0,0,2,0,4,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,224,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,242,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,243,            throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,245,    },6,0,1,0,1,0,12,2,0,27,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,261,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,262,"            throw new IllegalArgumentException(""The validated array is empty"");",0,0,0,1,2,0,0,2,0,3,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,264,    },0,0,1,0,1,0,0,0,0,4,1,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,282,        if (collection == null || collection.size() == 0) {,2,3,0,2,5,0,8,0,0,13,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,283,            throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,285,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,301,        if (collection == null || collection.size() == 0) {,2,3,0,2,5,0,4,0,0,9,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,302,"            throw new IllegalArgumentException(""The validated collection is empty"");",0,0,0,1,2,0,0,2,0,3,72,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,304,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,322,        if (map == null || map.size() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,323,            throw new IllegalArgumentException(message);,4,1,0,1,2,0,0,2,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,325,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,341,        if (map == null || map.size() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,342,"            throw new IllegalArgumentException(""The validated map is empty"");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,344,    },0,0,0,0,1,0,0,2,0,3,1,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,362,        if (string == null || string.length() == 0) {,0,0,0,2,5,0,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,363,            throw new IllegalArgumentException(message);,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,365,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,381,        if (string == null || string.length() == 0) {,2,3,0,2,5,0,4,0,0,9,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,382,"            throw new IllegalArgumentException(""The validated string is empty"");",0,0,0,1,2,0,0,2,0,3,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,384,    },2,0,0,0,1,0,0,0,0,2,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,407,        Validate.notNull(array);,2,0,1,1,2,0,6,0,0,10,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,408,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,409,            if (array[i] == null) {,10,0,1,2,5,0,10,0,0,22,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,410,                throw new IllegalArgumentException(message);,2,1,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,413,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,434,        Validate.notNull(array);,0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,435,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,436,            if (array[i] == null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,437,"                throw new IllegalArgumentException(""The validated array contains null element at index: "" + i);",2,1,0,1,2,0,0,2,0,7,95,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,440,    },2,0,0,0,1,0,0,0,0,2,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,463,        Validate.notNull(collection);,0,0,0,1,2,0,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,464,        for (Iterator it = collection.iterator(); it.hasNext();) {,2,0,0,3,7,0,8,2,0,12,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,465,            if (it.next() == null) {,0,1,0,2,5,0,4,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,466,                throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,469,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,489,        Validate.notNull(collection);,4,1,0,1,2,0,6,0,0,11,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,490,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,491,        for (Iterator it = collection.iterator(); it.hasNext(); i++) {,4,0,0,3,7,0,8,2,0,15,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,492,            if (it.next() == null) {,0,1,0,2,5,0,4,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,493,"                throw new IllegalArgumentException(""The validated collection contains null element at index: "" + i);",2,1,0,1,2,0,6,2,0,13,100,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,496,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,513,        Validate.notNull(collection);,0,0,0,1,2,0,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,514,        Validate.notNull(clazz);,0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,515,        for (Iterator it = collection.iterator(); it.hasNext(); ) {,2,0,0,3,7,0,8,2,0,12,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,516,            if (clazz.isInstance(it.next()) == false) {,0,1,0,3,7,0,8,0,0,10,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,517,                throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,520,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,543,        Validate.notNull(collection);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,544,        Validate.notNull(clazz);,0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,545,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,546,        for (Iterator it = collection.iterator(); it.hasNext(); i++) {,0,0,0,3,7,0,0,0,0,10,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,547,            if (clazz.isInstance(it.next()) == false) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,548,"                throw new IllegalArgumentException(""The validated collection contains an element not of type """,0,0,0,0,1,0,0,2,0,3,94,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,552,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,139,        if (val == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,142,        if (val.length() == 0) {,2,1,0,2,5,0,4,4,0,11,24,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,145,"        if (val.startsWith(""--"")) {",0,0,0,2,5,0,4,0,0,5,27,5,0.5,1,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,152,"        if (val.startsWith(""0x"") || val.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,155,        char lastChar = val.charAt(val.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,159,        int decPos = val.indexOf('.');,4,1,0,1,2,0,4,0,0,10,30,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,160,        int expPos = val.indexOf('e') + val.indexOf('E') + 1;,0,0,0,2,4,0,0,0,0,6,53,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,162,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,174,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,177,                mant = val;,6,0,0,0,0,3,2,2,0,15,11,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,179,            dec = null;,2,0,0,0,0,0,0,0,0,3,11,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,181,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,0,6,0,0,7,35,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,182,            if (expPos > -1 && expPos < val.length() - 1) {,8,5,0,2,5,0,8,0,0,22,47,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,185,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,188,"            String numeric = val.substring(0, val.length() - 1);",0,0,0,2,4,0,0,0,0,6,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,189,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,190,            switch (lastChar) {,0,0,0,1,3,0,0,0,0,4,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,193,                    if (dec == null,2,1,0,0,1,0,0,0,0,3,15,9,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,297,        if (s == null) {,2,1,0,1,3,0,0,0,0,3,16,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,300,        for (int i = s.length() - 1; i >= 0; i--) {,6,3,0,2,5,0,10,0,0,21,43,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,301,            if (s.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,25,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,302,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,47,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,48,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,61,"        return stringToInt(str, 0);",0,0,0,1,2,1,4,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,74,            return Integer.parseInt(str);,0,0,0,1,2,1,6,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,75,        } catch (NumberFormatException nfe) {,8,0,0,1,4,0,8,2,0,19,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,76,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,140,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,143,"            throw new NumberFormatException(""\""\"" is not a valid number."");",0,0,0,1,2,0,0,2,0,3,63,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,150,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,153,            return createInteger(val);,0,0,0,1,2,1,4,2,0,7,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,164,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,165,                if (expPos < decPos) {,6,1,0,1,3,0,0,0,0,7,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,166,"                    throw new NumberFormatException(val + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,168,"                dec = val.substring(decPos + 1, expPos);",4,1,0,1,2,0,6,0,0,12,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,170,                dec = val.substring(decPos + 1);,4,1,0,1,2,0,4,0,0,10,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,172,"            mant = val.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,175,"                mant = val.substring(0, expPos);",2,0,0,1,2,0,6,0,0,9,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,183,"                exp = val.substring(expPos + 1, val.length() - 1);",4,2,0,2,4,0,8,0,0,15,50,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,197,                            return createLong(numeric);,4,3,0,1,2,1,12,0,0,19,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,198,                        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,201,                        return createBigInteger(numeric);,2,0,0,1,2,1,4,2,0,8,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,204,"                    throw new NumberFormatException(val + "" is not a valid number."");",4,1,0,1,2,0,0,2,0,8,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,208,                        Float f = NumberUtils.createFloat(numeric);,2,0,0,1,2,0,6,2,0,10,43,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,209,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,212,                            return f;,4,0,0,0,0,4,4,2,0,13,9,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,217,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,215,                    } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,222,                        Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,0,6,2,0,10,45,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,223,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,4,4,0,5,11,0,8,0,0,18,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,224,                            return d;,6,0,0,0,0,1,0,0,0,6,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,228,                    },0,0,0,0,1,0,4,0,0,4,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,226,                    } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,230,                        return createBigDecimal(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,231,                    } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,236,"                    throw new NumberFormatException(val + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,242,            if (expPos > -1 && expPos < val.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,243,"                exp = val.substring(expPos + 1, val.length());",4,1,0,2,4,0,8,0,0,14,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,245,                exp = null;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,247,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,250,                    return createInteger(val);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,251,                } catch (NumberFormatException nfe) {,6,0,0,1,4,3,0,6,0,16,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,255,                    return createLong(val);,0,0,0,1,2,1,4,0,0,4,23,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,256,                } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,259,                return createBigInteger(val);,0,0,0,1,2,1,4,0,0,4,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,263,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,0,0,0,2,4,0,0,0,0,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,265,                    Float f = createFloat(val);,12,1,0,1,2,5,12,6,0,38,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,266,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,267,                        return f;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,271,                },2,0,0,0,1,3,0,4,0,9,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,269,                } catch (NumberFormatException nfe) {,4,3,0,1,4,0,4,2,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,273,                    Double d = createDouble(val);,2,0,0,1,2,0,4,2,0,8,29,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,274,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,275,                        return d;,2,0,0,0,0,1,0,0,0,3,9,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,279,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,277,                } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,281,                return createBigDecimal(val);,0,0,0,1,2,1,4,0,0,4,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,298,            return true;,0,0,0,0,0,1,4,0,0,5,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,305,        return s.length() > 0;,0,1,0,1,2,1,4,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,318,        return Float.valueOf(val);,0,0,0,1,2,1,6,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,329,        return Double.valueOf(val);,4,1,0,1,2,1,6,0,0,12,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,342,        return Integer.decode(val);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,353,        return Long.valueOf(val);,0,0,0,1,2,1,14,0,0,14,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,364,        BigInteger bi = new BigInteger(val);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,365,        return bi;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,376,        BigDecimal bd = new BigDecimal(val);,4,1,0,1,2,0,4,4,0,13,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,377,        return bd;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,391,        if (b < a) {,4,1,0,1,3,0,6,2,0,13,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,392,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,394,        if (c < a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,395,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,397,        return a;,4,4,0,0,0,1,8,0,0,16,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,409,        if (b < a) {,6,1,0,1,3,0,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,410,            a = b;,2,0,0,0,0,0,6,0,0,9,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,412,        if (c < a) {,10,2,0,1,3,0,0,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,413,            a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,415,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,427,        if (b > a) {,4,0,0,1,3,0,2,0,0,7,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,428,            a = b;,4,0,0,0,0,0,4,0,0,9,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,430,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,431,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,433,        return a;,2,1,0,0,0,1,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,445,        if (b > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,446,            a = b;,18,1,0,0,0,0,8,0,0,30,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,448,        if (c > a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,449,            a = c;,2,0,0,0,0,2,8,2,0,15,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,451,        return a;,2,0,0,0,0,1,4,2,0,8,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,491,        if (lhs < rhs) {,4,1,0,1,3,0,4,0,0,9,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,492,            return -1;,0,0,1,0,0,1,10,2,0,24,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,494,        if (lhs > rhs) {,4,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,495,            return +1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,501,        long lhsBits = Double.doubleToLongBits(lhs);,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,502,        long rhsBits = Double.doubleToLongBits(rhs);,6,1,0,1,2,0,18,0,0,26,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,503,        if (lhsBits == rhsBits) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,504,            return 0;,4,1,1,0,0,1,0,0,0,10,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,512,        if (lhsBits < rhsBits) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,513,            return -1;,0,0,0,0,0,1,4,0,0,5,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,515,            return +1;,0,0,0,0,0,1,6,0,0,8,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,552,        if (lhs < rhs) {,12,1,0,1,3,1,0,6,0,20,16,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,553,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,555,        if (lhs > rhs) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,556,            return +1;,0,0,0,0,0,1,8,0,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,562,        int lhsBits = Float.floatToIntBits(lhs);,2,0,0,1,2,0,6,0,0,8,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,563,        int rhsBits = Float.floatToIntBits(rhs);,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,564,        if (lhsBits == rhsBits) {,6,1,0,1,3,0,6,0,0,13,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,565,            return 0;,2,0,0,0,0,1,0,2,0,5,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,573,        if (lhsBits < rhsBits) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,574,            return -1;,6,1,0,0,0,1,0,2,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,576,            return +1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,593,        if ((str == null) || (str.length() == 0)) {,0,0,0,4,9,0,0,0,0,13,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,594,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,596,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,597,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,11,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,598,                return false;,2,0,0,0,0,2,0,2,0,5,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,601,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,618,        if (StringUtils.isEmpty(str)) {,2,1,0,2,5,1,18,2,0,25,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,619,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,621,        char[] chars = str.toCharArray();,2,0,0,2,4,0,4,0,0,8,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,622,        int sz = chars.length;,8,0,0,0,0,3,4,2,0,17,22,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,623,        boolean hasExp = false;,4,0,0,0,0,0,2,0,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,624,        boolean hasDecPoint = false;,2,0,0,0,0,0,0,0,0,2,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,625,        boolean allowSigns = false;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,626,        boolean foundDigit = false;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,628,        int start = (chars[0] == '-') ? 1 : 0;,2,1,1,2,4,0,0,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,629,        if (sz > start + 1) {,6,0,0,1,3,3,2,2,0,15,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,630,            if (chars[start] == '0' && chars[start + 1] == 'x') {,2,0,0,3,7,0,0,0,0,2,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,631,                int i = start + 2;,4,1,0,0,0,0,8,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,632,                if (i == sz) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,633,"                    return false; // str == ""0x""",2,1,0,0,0,1,0,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,636,                for (; i < chars.length; i++) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,637,                    if ((chars[i] < '0' || chars[i] > '9'),10,3,0,3,7,3,14,0,0,34,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,640,                        return false;,2,2,0,0,0,1,6,0,0,13,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,643,                return true;,2,0,1,0,0,1,8,2,0,17,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,646,"        sz--; // don't want to loop to the last char, check it afterwords",0,1,0,0,0,0,4,0,0,5,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,648,        int i = start;,4,0,0,0,0,0,0,0,0,4,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,651,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,16,6,0,2,5,3,2,0,0,29,61,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,652,            if (chars[i] >= '0' && chars[i] <= '9') {,2,4,1,3,7,0,0,0,0,16,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,653,                foundDigit = true;,2,0,0,0,0,0,0,0,0,4,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,654,                allowSigns = false;,4,1,0,0,0,0,12,4,0,21,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,656,            } else if (chars[i] == '.') {,0,1,1,2,6,0,0,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,657,                if (hasDecPoint || hasExp) {,0,0,0,1,3,0,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,659,                    return false;,0,0,0,0,0,1,0,0,0,1,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,661,                hasDecPoint = true;,2,0,0,0,0,0,0,0,0,4,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,662,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,0,0,3,8,0,0,0,0,11,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,664,                if (hasExp) {,2,0,0,1,3,0,0,0,0,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,666,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,668,                if (!foundDigit) {,6,1,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,669,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,671,                hasExp = true;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,672,                allowSigns = true;,4,0,0,0,0,3,2,0,0,11,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,673,            } else if (chars[i] == '+' || chars[i] == '-') {,0,0,0,3,8,0,0,0,0,11,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,674,                if (!allowSigns) {,16,2,0,1,3,0,8,0,0,28,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,675,                    return false;,0,0,0,0,0,1,0,0,0,1,13,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,677,                allowSigns = false;,8,1,0,0,0,0,4,0,0,15,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,678,                foundDigit = false; // we need a digit after the E,0,0,0,0,0,0,0,0,0,0,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,680,                return false;,2,1,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,682,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,684,        if (i < chars.length) {,6,1,0,1,3,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,685,            if (chars[i] >= '0' && chars[i] <= '9') {,0,0,0,3,7,0,0,0,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,687,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,689,            if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,7,0,0,0,0,13,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,691,                return false;,2,0,0,0,0,1,6,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,693,            if (!allowSigns,0,0,0,0,1,0,10,0,0,10,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,698,                return foundDigit;,4,0,0,0,0,1,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,700,            if (chars[i] == 'l',0,1,1,1,3,0,0,0,0,6,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,703,                return foundDigit && !hasExp;,4,1,0,0,0,1,0,0,0,6,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,706,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,710,        return !allowSigns && foundDigit;,4,1,0,0,0,1,0,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5279,        return str == null ? EMPTY : str;,0,0,0,0,0,1,0,0,0,1,33,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,167,        super();,0,0,0,1,2,0,14,0,0,15,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,168,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,191,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,209,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,229,        if (str == null || (strLen = str.length()) == 0) {,6,4,0,3,7,0,4,0,0,15,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,230,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,232,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,234,                return false;,4,0,0,0,0,1,0,0,0,6,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,237,        return true;,12,4,0,0,0,8,4,10,0,38,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,257,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,282,        return str == null ? EMPTY : str.trim();,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,309,        return str == null ? null : str.trim();,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,335,        String ts = trim(str);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,336,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,361,        return str == null ? EMPTY : str.trim();,2,0,0,1,2,1,4,0,0,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,389,"        return strip(str, null);",0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,416,        if (str == null) {,2,0,0,1,3,2,4,2,0,10,18,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,417,            return null;,4,0,0,0,0,4,2,2,0,12,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,419,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,420,        return str.length() == 0 ? null : str;,2,0,0,1,2,1,0,0,0,2,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,446,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,476,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,477,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,479,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,480,"        return stripEnd(str, stripChars);",2,0,0,1,2,1,6,2,0,11,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,509,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,510,            return str;,4,0,0,0,0,1,6,2,0,12,11,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,512,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,513,        if (stripChars == null) {,12,2,0,1,3,0,10,0,0,26,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,514,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,515,                start++;,2,0,0,0,0,0,0,0,0,3,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,517,        } else if (stripChars.length() == 0) {,2,1,0,2,6,0,10,2,0,15,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,518,            return str;,2,0,0,0,0,1,0,2,0,6,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,520,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,6,3,0,5,11,0,10,0,0,20,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,521,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,524,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,553,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,554,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,557,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,558,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,4,9,0,0,0,0,13,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,559,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,561,        } else if (stripChars.length() == 0) {,10,1,0,2,6,0,0,0,0,12,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,562,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,564,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,4,4,0,5,11,0,14,0,0,23,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,565,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,568,"        return str.substring(0, end);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,593,"        return stripAll(strs, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,623,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,624,            return strs;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,626,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,8,0,0,8,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,627,        for (int i = 0; i < strsLen; i++) {,12,1,0,1,3,3,0,4,0,22,35,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,628,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,630,        return newArr;,14,2,0,0,0,7,4,0,0,29,14,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,656,        return str1 == null ? str2 == null : str1.equals(str2);,4,2,0,1,2,1,6,0,0,12,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,681,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,706,        if (isEmpty(str)) {,6,4,0,2,5,0,4,0,0,15,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,707,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,709,        return str.indexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,738,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,739,            return -1;,0,0,0,0,0,1,4,0,0,5,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,741,"        return str.indexOf(searchChar, startPos);",6,0,0,1,2,1,8,0,0,16,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,767,        if (str == null || searchStr == null) {,10,4,0,1,3,0,0,0,0,15,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,768,            return -1;,2,0,0,0,0,1,0,0,0,3,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,770,        return str.indexOf(searchStr);,0,0,0,1,2,1,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,801,        if (str == null || searchStr == null || ordinal <= 0) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,802,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,3,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,804,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,805,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,807,        int found = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,808,        int index = INDEX_NOT_FOUND;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,810,"            index = str.indexOf(searchStr, index + 1);",0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,811,            if (index < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,812,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,814,            found++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,815,        } while (found < ordinal);,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,816,        return index;,2,0,0,0,0,1,4,2,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,851,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,852,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,855,        if (searchStr.length() == 0 && startPos >= str.length()) {,0,0,0,3,7,0,6,0,0,6,58,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,856,            return str.length();,0,0,0,1,2,1,10,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,858,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,883,        if (isEmpty(str)) {,2,1,0,2,5,0,4,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,884,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,886,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,917,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,918,            return -1;,2,0,0,0,0,1,0,0,0,4,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,920,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,946,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,947,            return -1;,4,1,0,0,0,1,0,0,0,5,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,949,        return str.lastIndexOf(searchStr);,0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,981,        if (str == null || searchStr == null) {,6,3,0,1,3,0,0,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,982,            return -1;,2,0,0,0,0,4,2,2,0,11,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,984,"        return str.lastIndexOf(searchStr, startPos);",4,1,0,1,2,1,8,2,0,15,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1009,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1010,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1012,        return str.indexOf(searchChar) >= 0;,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1037,        if (str == null || searchStr == null) {,6,1,0,1,3,0,6,0,0,14,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1038,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1040,        return str.indexOf(searchStr) >= 0;,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1067,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1068,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1070,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",6,0,1,3,6,1,10,0,0,20,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1098,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1099,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1101,        for (int i = 0; i < str.length(); i++) {,4,1,0,2,5,0,6,0,0,12,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1102,            char ch = str.charAt(i);,2,0,0,1,2,0,4,0,0,8,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1103,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1104,                if (searchChars[j] == ch) {,2,1,1,2,5,0,6,0,0,13,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1105,                    return i;,6,2,0,0,0,1,12,0,0,21,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1109,        return -1;,8,2,0,0,0,1,0,2,0,14,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1135,        if (isEmpty(str) || isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1136,            return -1;,2,0,0,0,0,4,8,4,0,19,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1138,"        return indexOfAny(str, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1167,        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {,0,0,0,2,5,0,0,0,0,7,89,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1168,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1170,        for (int i = 0; i < str.length(); i++) {,8,2,1,2,5,0,4,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1171,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1172,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,1,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1173,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1174,                    return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1178,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1209,        if (searchChars == null) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1210,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1212,"        return containsAny(str, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1240,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1241,            return -1;,2,0,0,0,0,1,0,2,0,4,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1243,        outer : for (int i = 0; i < str.length(); i++) {,4,0,0,2,5,0,4,0,0,8,48,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1244,            char ch = str.charAt(i);,4,1,0,1,2,0,0,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1245,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1246,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1247,                    continue outer;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1250,            return i;,0,0,0,0,0,1,0,0,0,1,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1252,        return -1;,2,0,0,0,0,1,0,0,0,4,10,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1278,        if (isEmpty(str) || isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1279,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1281,        for (int i = 0; i < str.length(); i++) {,2,0,0,2,5,0,14,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1282,            if (searchChars.indexOf(str.charAt(i)) < 0) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1283,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1286,        return -1;,2,0,0,0,0,4,2,2,0,10,10,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1314,        if ((valid == null) || (str == null)) {,0,0,0,3,7,0,8,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1315,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1317,        if (str.length() == 0) {,0,0,0,2,5,0,2,0,0,2,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1318,            return true;,4,1,0,0,0,1,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1320,        if (valid.length == 0) {,10,1,0,1,3,0,0,0,0,13,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1321,            return false;,2,1,0,0,0,1,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1323,"        return indexOfAnyBut(str, valid) == -1;",0,1,0,1,2,1,6,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1349,        if (str == null || validChars == null) {,6,1,0,1,3,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1350,            return false;,2,0,0,0,0,4,14,2,0,23,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1352,"        return containsOnly(str, validChars.toCharArray());",2,0,0,2,4,1,4,0,0,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1380,        if (str == null || invalidChars == null) {,4,3,0,1,3,0,8,0,0,17,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1381,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1383,        int strSize = str.length();,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1384,        int validSize = invalidChars.length;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1385,        for (int i = 0; i < strSize; i++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1386,            char ch = str.charAt(i);,14,1,0,1,2,0,10,2,0,28,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1387,            for (int j = 0; j < validSize; j++) {,16,2,0,1,3,0,0,0,0,20,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1388,                if (invalidChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1389,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1393,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1419,        if (str == null || invalidChars == null) {,4,3,0,1,3,0,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1420,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1422,"        return containsNone(str, invalidChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1454,        if ((str == null) || (searchStrs == null)) {,0,0,0,3,7,0,0,0,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1455,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1457,        int sz = searchStrs.length;,8,0,0,0,0,3,2,0,0,13,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1460,        int ret = Integer.MAX_VALUE;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1462,        int tmp = 0;,2,1,0,0,0,0,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1463,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1464,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1465,            if (search == null) {,2,0,0,1,3,0,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1466,                continue;,12,4,0,0,0,0,4,0,0,21,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1468,            tmp = str.indexOf(search);,4,1,0,1,2,0,6,2,0,16,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1469,            if (tmp == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1470,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1473,            if (tmp < ret) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1474,                ret = tmp;,2,1,0,0,0,0,6,0,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1478,        return (ret == Integer.MAX_VALUE) ? -1 : ret;,0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1507,        if ((str == null) || (searchStrs == null)) {,0,0,0,3,7,0,0,0,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1508,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1510,        int sz = searchStrs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1511,        int ret = -1;,2,0,0,0,0,0,0,0,0,3,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1512,        int tmp = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1513,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,0,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1514,            String search = searchStrs[i];,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1515,            if (search == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1516,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1518,            tmp = str.lastIndexOf(search);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1519,            if (tmp > ret) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1520,                ret = tmp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1523,        return ret;,4,3,0,0,0,1,0,0,0,9,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1553,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1554,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1558,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1559,            start = str.length() + start; // remember start is negative,10,2,1,1,2,0,6,0,0,25,59,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1562,        if (start < 0) {,4,1,1,1,3,0,0,2,0,11,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1563,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1565,        if (start > str.length()) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1566,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1569,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1608,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1609,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1613,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1614,            end = str.length() + end; // remember end is negative,4,1,0,1,2,0,4,0,0,10,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1616,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1617,            start = str.length() + start; // remember start is negative,0,0,0,1,2,0,0,0,0,1,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1621,        if (end > str.length()) {,2,0,0,2,5,0,0,4,0,7,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1622,            end = str.length();,2,0,0,1,2,0,4,0,0,7,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1626,        if (start > end) {,0,0,0,1,3,0,0,0,0,1,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1627,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1630,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1631,            start = 0;,4,0,0,0,0,0,6,0,0,12,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1633,        if (end < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1634,            end = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1637,"        return str.substring(start, end);",0,0,0,1,2,1,8,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1663,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1664,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1666,        if (len < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1667,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1669,        if (str.length() <= len) {,2,1,0,2,5,0,4,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1670,            return str;,2,0,0,0,0,1,0,0,0,2,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1672,"        return str.substring(0, len);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1696,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1697,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1699,        if (len < 0) {,6,2,0,1,3,0,8,0,0,17,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1700,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1702,        if (str.length() <= len) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1703,            return str;,6,0,0,0,0,1,0,0,0,6,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1705,        return str.substring(str.length() - len);,0,0,0,2,4,1,0,0,0,7,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1733,        if (str == null) {,8,1,0,1,3,0,0,0,0,10,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1734,            return null;,2,1,1,0,0,1,0,0,0,7,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1736,        if (len < 0 || pos > str.length()) {,8,4,0,2,5,0,6,0,0,18,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1737,            return EMPTY;,4,0,0,0,0,1,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1739,        if (pos < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1740,            pos = 0;,6,0,0,0,0,0,0,4,0,11,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1742,        if (str.length() <= (pos + len)) {,2,0,0,3,7,0,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1743,            return str.substring(pos);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1745,"        return str.substring(pos, pos + len);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1776,        if (isEmpty(str) || separator == null) {,2,2,0,2,5,0,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1777,            return str;,8,0,0,0,0,1,0,0,0,9,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1779,        if (separator.length() == 0) {,2,0,0,2,5,1,4,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1780,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1782,        int pos = str.indexOf(separator);,2,0,0,1,2,0,16,0,0,18,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1783,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1784,            return str;,2,0,0,0,0,1,10,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1786,"        return str.substring(0, pos);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1816,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1817,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1819,        if (separator == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1820,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1822,        int pos = str.indexOf(separator);,2,0,0,1,2,0,6,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1823,        if (pos == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1824,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1826,        return str.substring(pos + separator.length());,0,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1855,        if (isEmpty(str) || isEmpty(separator)) {,2,1,0,3,7,0,14,2,0,19,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1856,            return str;,4,0,0,0,0,1,0,0,0,5,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1858,        int pos = str.lastIndexOf(separator);,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1859,        if (pos == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1860,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1862,"        return str.substring(0, pos);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1893,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1894,            return str;,0,4,0,0,0,1,12,0,0,16,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1896,        if (isEmpty(separator)) {,0,0,0,2,5,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1897,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1899,        int pos = str.lastIndexOf(separator);,2,0,0,1,2,0,6,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1900,        if (pos == -1 || pos == (str.length() - separator.length())) {,4,4,0,4,9,0,8,0,0,17,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1901,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1903,        return str.substring(pos + separator.length());,4,2,0,2,4,1,8,0,0,14,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1930,"        return substringBetween(str, tag, tag);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1961,        if (str == null || open == null || close == null) {,6,5,0,1,3,0,0,0,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1962,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1964,        int start = str.indexOf(open);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1965,        if (start != -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1966,"            int end = str.indexOf(close, start + open.length());",4,1,0,2,4,0,10,0,0,15,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1967,            if (end != -1) {,2,1,0,1,3,0,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1968,"                return str.substring(start + open.length(), end);",2,1,0,2,4,1,14,0,0,17,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1971,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1997,        if (str == null || isEmpty(open) || isEmpty(close)) {,8,5,1,3,7,0,4,0,0,19,53,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1998,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2000,        int strLen = str.length();,2,0,1,1,2,0,4,0,0,10,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2001,        if (strLen == 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2002,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,5,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2004,        int closeLen = close.length();,6,0,0,1,2,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2005,        int openLen = open.length();,2,0,0,1,2,0,4,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2006,        List list = new ArrayList();,2,0,0,1,2,0,0,4,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2007,        int pos = 0;,4,0,1,0,0,0,4,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2008,        while (pos < (strLen - closeLen)) {,10,2,0,2,5,1,0,2,0,15,35,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2009,"            int start = str.indexOf(open, pos);",0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2010,            if (start < 0) {,4,1,0,1,3,0,0,0,0,6,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2011,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2013,            start += openLen;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2014,"            int end = str.indexOf(close, start);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2015,            if (end < 0) {,4,1,0,1,3,0,6,0,0,11,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2016,                break;,4,1,0,0,0,0,6,0,0,11,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2018,"            list.add(str.substring(start, end));",0,0,0,2,4,0,12,0,0,12,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2019,            pos = end + closeLen;,6,1,0,0,0,0,0,0,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2020,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2021,        if (list.isEmpty()) {,4,3,0,2,5,0,4,0,0,11,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2022,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2024,        return (String[]) list.toArray(new String [list.size()]);,0,0,0,5,10,1,14,4,0,18,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2052,"        return substringBetween(str, tag, tag);",2,0,0,1,2,1,0,0,0,2,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2082,"        return substringBetween(str, open, close);",0,0,0,1,2,1,8,0,0,8,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2110,"        return split(str, null, -1);",0,0,0,1,2,1,12,0,0,15,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2138,"        return splitWorker(str, separatorChar, false);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2167,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2201,"        return splitWorker(str, separatorChars, max, false);",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2228,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2259,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,1,2,1,8,0,0,9,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2288,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0,0,0,1,2,1,0,0,0,4,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2321,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0,0,0,1,2,1,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2341,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2342,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2345,        int len = str.length();,8,1,0,1,2,0,4,0,0,13,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2347,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2348,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2351,        if ((separator == null) || (EMPTY.equals(separator))) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2353,"            return splitWorker(str, null, max, preserveAllTokens);",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2356,        int separatorLength = separator.length();,2,0,0,1,2,0,4,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2358,        ArrayList substrings = new ArrayList();,2,0,0,1,2,0,0,4,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2359,        int numberOfSubstrings = 0;,2,0,0,0,0,0,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2360,        int beg = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2361,        int end = 0;,2,1,0,0,0,0,0,0,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2362,        while (end < len) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2363,"            end = str.indexOf(separator, beg);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2365,            if (end > -1) {,2,1,0,1,3,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2366,                if (end > beg) {,8,4,0,1,3,0,4,0,0,16,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2367,                    numberOfSubstrings += 1;,2,0,1,0,0,0,0,0,0,7,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2369,                    if (numberOfSubstrings == max) {,4,1,0,1,3,0,0,0,0,5,32,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2370,                        end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2371,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2375,"                        substrings.add(str.substring(beg, end));",4,3,1,2,4,0,16,0,0,25,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2380,                        beg = end + separatorLength;,10,2,0,0,0,0,0,0,0,13,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2384,                    if (preserveAllTokens) {,6,0,0,1,3,0,0,2,0,9,24,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2385,                        numberOfSubstrings += 1;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2386,                        if (numberOfSubstrings == max) {,8,1,0,1,3,0,0,0,0,11,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2387,                            end = len;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2388,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2390,                            substrings.add(EMPTY);,0,0,0,1,2,0,6,0,0,6,22,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2393,                    beg = end + separatorLength;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2397,                substrings.add(str.substring(beg));,0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2398,                end = len;,2,0,0,0,0,0,6,0,0,8,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2402,        return (String[]) substrings.toArray(new String[substrings.size()]);,0,0,0,5,10,1,0,0,0,16,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2431,"        return splitWorker(str, null, -1, true);",0,0,0,1,2,1,4,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2467,"        return splitWorker(str, separatorChar, true);",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2485,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2486,            return null;,4,4,0,0,0,1,8,0,0,17,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2488,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2489,        if (len == 0) {,10,7,0,1,3,0,18,4,0,39,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2490,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2492,        List list = new ArrayList();,8,0,0,1,2,0,0,4,0,12,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2493,"        int i = 0, start = 0;",0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2494,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2495,        boolean lastMatch = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2496,        while (i < len) {,10,1,0,1,3,0,0,0,0,12,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2497,            if (str.charAt(i) == separatorChar) {,2,1,0,2,5,0,6,0,0,9,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2498,                if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2499,"                    list.add(str.substring(start, i));",4,1,0,2,4,0,0,0,0,6,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2500,                    match = false;,2,0,0,0,0,0,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2501,                    lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2503,                start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2504,                continue;,0,0,0,0,0,0,0,0,0,1,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2506,            lastMatch = false;,2,0,0,0,0,0,2,0,0,4,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2507,            match = true;,4,1,0,0,0,0,0,0,0,6,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2508,            i++;,4,0,0,0,0,0,0,0,0,6,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2510,        if (match || (preserveAllTokens && lastMatch)) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2511,"            list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2513,        return (String[]) list.toArray(new String[list.size()]);,2,0,0,5,10,1,14,4,0,20,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2550,"        return splitWorker(str, separatorChars, -1, true);",0,0,0,1,2,1,6,0,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2590,"        return splitWorker(str, separatorChars, max, true);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2612,        if (str == null) {,2,0,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2613,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2615,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2616,        if (len == 0) {,6,1,0,1,3,0,0,0,0,8,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2617,            return ArrayUtils.EMPTY_STRING_ARRAY;,8,1,0,0,0,1,0,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2619,        List list = new ArrayList();,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2620,        int sizePlus1 = 1;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2621,"        int i = 0, start = 0;",6,0,0,0,0,0,0,0,0,7,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2622,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2623,        boolean lastMatch = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2624,        if (separatorChars == null) {,10,3,0,1,3,0,0,0,0,13,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2626,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2627,                if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2628,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2629,                        lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2630,                        if (sizePlus1++ == max) {,10,2,0,1,3,0,8,2,0,24,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2631,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2632,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2634,"                        list.add(str.substring(start, i));",2,1,0,2,4,0,12,0,0,15,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2635,                        match = false;,4,1,0,0,0,0,0,0,0,7,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2637,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2638,                    continue;,0,0,0,0,0,0,6,0,0,6,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2640,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2641,                match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2642,                i++;,10,4,0,0,0,0,10,0,0,25,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2644,        } else if (separatorChars.length() == 1) {,0,0,0,2,6,0,0,0,0,8,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2646,            char sep = separatorChars.charAt(0);,2,0,0,1,2,0,4,0,0,6,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2647,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2648,                if (str.charAt(i) == sep) {,0,0,0,2,5,0,12,0,0,12,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2649,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2650,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2651,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,0,0,0,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2652,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2653,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2655,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2656,                        match = false;,2,1,0,0,0,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2658,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2659,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2661,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2662,                match = true;,2,0,0,0,0,0,0,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2663,                i++;,2,0,0,0,0,0,0,0,0,2,4,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2665,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2667,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2668,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,2,0,0,3,7,0,0,0,0,2,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2669,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2670,                        lastMatch = true;,2,0,0,0,0,0,4,0,0,6,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2671,                        if (sizePlus1++ == max) {,6,2,0,1,3,0,4,0,0,14,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2672,                            i = len;,4,1,0,0,0,0,0,0,0,5,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2673,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2675,"                        list.add(str.substring(start, i));",2,0,1,2,4,0,16,0,0,32,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2676,                        match = false;,4,0,0,0,0,0,0,0,0,6,14,0,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2678,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2679,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2681,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2682,                match = true;,2,0,0,0,0,0,0,0,0,4,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2683,                i++;,6,1,0,0,0,0,0,0,0,7,4,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2686,        if (match || (preserveAllTokens && lastMatch)) {,10,3,0,2,5,0,4,2,0,19,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2687,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2689,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,5,10,1,26,4,0,30,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2712,"        return splitByCharacterType(str, false);",0,0,0,1,2,1,4,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2740,"        return splitByCharacterType(str, true);",0,0,0,1,2,1,4,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2758,        if (str == null) {,8,2,0,1,3,0,0,0,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2759,            return null;,6,2,0,0,0,1,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2761,        if (str.length() == 0) {,0,1,0,2,5,0,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2762,            return ArrayUtils.EMPTY_STRING_ARRAY;,16,2,1,0,0,1,6,2,0,33,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2764,        char[] c = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2765,        List list = new ArrayList();,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2766,        int tokenStart = 0;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2767,        int currentType = Character.getType(c[tokenStart]);,4,0,1,2,4,0,4,0,0,13,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2768,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2769,            int type = Character.getType(c[pos]);,2,0,1,2,4,0,4,0,0,10,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2770,            if (type == currentType) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2771,                continue;,6,0,0,0,0,2,0,4,0,13,9,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2773,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,0,0,0,1,3,0,0,0,0,4,99,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2774,                int newTokenStart = pos - 1;,4,1,0,0,0,0,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2775,                if (newTokenStart != tokenStart) {,4,1,0,1,3,0,0,0,0,5,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2776,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2777,                    tokenStart = newTokenStart;,4,0,0,0,0,0,0,0,0,5,27,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2779,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2780,"                list.add(new String(c, tokenStart, pos - tokenStart));",0,0,0,2,4,0,0,0,0,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2781,                tokenStart = pos;,6,1,0,0,0,0,6,0,0,14,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2783,            currentType = type;,4,0,0,0,0,0,0,0,0,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2785,"        list.add(new String(c, tokenStart, c.length - tokenStart));",10,1,0,2,4,0,4,2,0,17,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2786,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,5,10,1,14,4,0,18,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2810,"        return join(array, null);",0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2834,"        return join(array, null);",0,0,0,1,2,1,4,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2860,        if (array == null) {,6,2,0,1,3,0,0,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2861,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2864,"        return join(array, separator, 0, array.length);",12,4,0,1,2,1,18,0,0,36,47,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2894,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2895,            return null;,6,0,0,0,0,1,4,0,0,10,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2897,        int bufSize = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2898,        if (bufSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2899,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2902,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,4,3,1,6,12,0,4,0,0,21,90,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2903,        StringBuffer buf = new StringBuffer(bufSize);,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2905,        for (int i = startIndex; i < endIndex; i++) {,12,1,0,1,3,0,8,2,0,24,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2906,            if (i > startIndex) {,4,1,0,1,3,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2907,                buf.append(separator);,12,1,0,1,2,0,0,0,0,14,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2909,            if (array[i] != null) {,2,1,0,2,5,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2910,                buf.append(array[i]);,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2913,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2941,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2942,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2944,"        return join(array, separator, 0, array.length);",0,0,0,1,2,1,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2975,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2976,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2978,        if (separator == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2979,            separator = EMPTY;,4,0,0,0,0,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2984,        int bufSize = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2985,        if (bufSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2986,            return EMPTY;,6,3,0,0,0,1,10,0,0,20,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2989,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),0,0,0,5,11,0,0,0,0,16,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2992,        StringBuffer buf = new StringBuffer(bufSize);,2,0,0,1,2,0,0,8,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2994,        for (int i = startIndex; i < endIndex; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2995,            if (i > startIndex) {,4,0,0,1,3,0,0,4,0,8,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2996,                buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2998,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2999,                buf.append(array[i]);,0,0,1,2,4,0,4,0,0,8,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3002,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3022,        if (iterator == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3023,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3025,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3026,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3028,        Object first = iterator.next();,4,0,0,1,2,0,4,2,0,10,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3029,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3030,            return ObjectUtils.toString(first);,0,0,0,1,2,1,6,0,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3034,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",4,0,0,1,2,0,0,4,0,8,83,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3035,        if (first != null) {,4,3,0,1,3,0,6,2,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3036,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3039,        while (iterator.hasNext()) {,2,0,0,2,5,0,4,0,0,6,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3040,            buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3041,            Object obj = iterator.next();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3042,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3043,                buf.append(obj);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3045,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3047,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3066,        if (iterator == null) {,8,1,0,1,3,0,0,0,0,10,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3067,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3069,        if (!iterator.hasNext()) {,2,0,0,2,5,0,4,0,0,8,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3070,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3072,        Object first = iterator.next();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3073,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3074,            return ObjectUtils.toString(first);,0,0,0,1,2,1,6,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3078,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",2,0,0,1,2,0,0,4,0,6,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3079,        if (first != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3080,            buf.append(first);,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3083,        while (iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3084,            if (separator != null) {,2,1,0,1,3,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3085,                buf.append(separator);,4,0,0,1,2,0,0,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3087,            Object obj = iterator.next();,2,0,0,1,2,0,16,2,0,20,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3088,            if (obj != null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3089,                buf.append(obj);,0,0,0,1,2,0,6,0,0,6,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3091,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3092,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3110,        if (collection == null) {,0,0,0,1,3,0,6,0,0,6,25,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3111,            return null;,4,1,0,0,0,1,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3113,"        return join(collection.iterator(), separator);",0,0,0,2,4,1,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3131,        if (collection == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3132,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3134,"        return join(collection.iterator(), separator);",0,0,0,2,4,1,6,0,0,8,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3166,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3167,            return null;,0,0,0,0,0,1,10,0,0,10,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3169,"        return CharSetUtils.delete(str, "" \t\r\n\b"");",0,0,0,1,2,1,6,0,0,7,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3187,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3188,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3190,        int sz = str.length();,14,2,0,1,2,0,14,0,0,31,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3191,        char[] chs = new char[sz];,2,0,1,2,4,0,18,0,0,22,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3192,        int count = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3193,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,8,0,0,19,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3194,            if (!Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3195,                chs[count++] = str.charAt(i);,4,0,1,2,4,0,12,0,0,21,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3198,        if (count == sz) {,4,0,0,1,3,0,0,0,0,6,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3199,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3201,"        return new String(chs, 0, count);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3231,        if (isEmpty(str) || isEmpty(remove)) {,4,0,0,3,7,0,0,0,0,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3232,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3234,        if (str.startsWith(remove)){,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3235,            return str.substring(remove.length());,0,0,0,2,4,1,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3237,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3266,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3267,            return str;,4,0,0,0,0,1,0,0,0,4,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3269,"        if (startsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,6,0,0,7,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3270,            return str.substring(remove.length());,0,0,0,2,4,1,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3272,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3300,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3301,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3303,        if (str.endsWith(remove)) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3304,"            return str.substring(0, str.length() - remove.length());",0,0,0,3,6,1,0,0,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3306,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3334,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3335,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3337,"        if (endsWithIgnoreCase(str, remove)) {",2,0,0,2,5,0,6,2,0,10,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3338,"            return str.substring(0, str.length() - remove.length());",0,1,0,3,6,1,12,0,0,13,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3340,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3367,        if (isEmpty(str) || isEmpty(remove)) {,2,0,0,3,7,0,0,0,0,2,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3368,            return str;,4,0,0,0,0,1,6,0,0,10,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3370,"        return replace(str, remove, EMPTY, -1);",4,4,0,1,2,1,16,0,0,27,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3393,        if (isEmpty(str) || str.indexOf(remove) == -1) {,0,0,0,3,7,0,0,0,0,10,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3394,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3396,        char[] chars = str.toCharArray();,0,0,0,2,4,0,0,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3397,        int pos = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3398,        for (int i = 0; i < chars.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3399,            if (chars[i] != remove) {,0,0,0,2,5,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3400,                chars[pos++] = chars[i];,8,1,1,2,4,0,4,0,0,21,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3403,"        return new String(chars, 0, pos);",8,0,0,1,2,1,8,4,0,21,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3432,"        return replace(text, searchString, replacement, 1);",0,1,0,1,2,1,20,0,0,21,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3459,"        return replace(text, searchString, replacement, -1);",0,0,0,1,2,1,8,0,0,9,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3491,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,4,4,0,3,7,0,8,0,0,18,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3492,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3494,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3495,"        int end = text.indexOf(searchString, start);",0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3496,        if (end == -1) {,4,2,0,1,3,0,0,0,0,7,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3497,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3499,        int replLength = searchString.length();,2,0,0,1,2,0,4,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3500,        int increase = replacement.length() - replLength;,4,1,0,1,2,1,6,0,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3501,        increase = (increase < 0 ? 0 : increase);,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3502,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3503,        StringBuffer buf = new StringBuffer(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3504,        while (end != -1) {,2,1,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3505,"            buf.append(text.substring(start, end)).append(replacement);",0,0,0,3,6,0,16,0,0,16,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3506,            start = end + replLength;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3507,            if (--max == 0) {,2,1,0,1,3,0,6,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3508,                break;,6,3,0,0,0,0,0,0,0,9,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3510,"            end = text.indexOf(searchString, start);",0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3512,        buf.append(text.substring(start));,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3513,        return buf.toString();,2,1,1,1,2,1,4,0,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3556,"        return replaceEach(text, searchList, replacementList, false, 0);",2,1,0,1,2,1,8,0,0,12,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3607,        int timeToLive = searchList == null ? 0 : searchList.length;,8,1,0,0,0,0,6,0,0,15,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3608,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",0,0,0,1,2,1,10,0,0,11,72,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3666,        if (text == null || text.length() == 0 || searchList == null || ,4,8,0,1,3,0,4,0,0,16,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3669,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3673,        if (timeToLive < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3674,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",0,0,0,1,2,0,0,0,0,3,92,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3677,        int searchLength = searchList.length;,2,0,0,0,0,0,0,0,0,2,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3678,        int replacementLength = replacementList.length;,10,1,0,0,0,0,0,0,0,11,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3681,        if (searchLength != replacementLength) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3682,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0,0,0,0,1,0,0,2,0,3,83,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3689,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,2,0,1,2,4,0,0,0,0,4,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3692,        int textIndex = -1;,2,0,0,0,0,0,6,0,0,9,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3693,        int replaceIndex = -1;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3694,        int tempIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3698,        for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3699,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,6,5,1,2,5,0,0,0,0,19,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3702,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3704,            tempIndex = text.indexOf(searchList[i]);,2,0,1,2,4,0,4,0,0,11,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3707,            if (tempIndex == -1) {,8,3,0,1,3,0,0,0,0,12,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3708,                noMoreMatchesForReplIndex[i] = true;,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3710,                if (textIndex == -1 || tempIndex < textIndex) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3711,                    textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3712,                    replaceIndex = i;,4,0,0,0,0,0,0,0,0,5,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3719,        if (textIndex == -1) {,4,1,0,1,3,0,0,0,0,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3720,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3723,        int start = 0;,2,0,0,0,0,0,10,0,0,12,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3726,        int increase = 0;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3729,        for (int i = 0; i < searchList.length; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3730,            int greater = replacementList[i].length() - searchList[i].length();,2,1,1,4,8,0,4,0,0,15,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3731,            if (greater > 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3732,                increase += 3 * greater; // assume 3 matches,4,1,0,0,0,0,0,0,0,6,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3736,"        increase = Math.min(increase, text.length() / 5);",4,1,0,2,4,0,10,4,0,20,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3738,        StringBuffer buf = new StringBuffer(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3740,        while (textIndex != -1) {,2,1,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3742,            for (int i = start; i < textIndex; i++) {,12,1,0,1,3,0,4,0,0,18,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3743,                buf.append(text.charAt(i));,4,1,1,2,4,0,10,0,0,24,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3745,            buf.append(replacementList[replaceIndex]);,2,1,0,2,4,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3747,            start = textIndex + searchList[replaceIndex].length();,4,1,1,2,4,0,2,0,0,12,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3749,            textIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3750,            replaceIndex = -1;,2,0,0,0,0,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3751,            tempIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3754,            for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3755,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3758,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3760,"                tempIndex = text.indexOf(searchList[i], start);",2,0,1,2,4,0,6,0,0,13,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3763,                if (tempIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3764,                    noMoreMatchesForReplIndex[i] = true;,8,2,1,1,2,0,0,0,0,17,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3766,                    if (textIndex == -1 || tempIndex < textIndex) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3767,                        textIndex = tempIndex;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3768,                        replaceIndex = i;,4,0,0,0,0,0,0,0,0,5,17,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3775,        int textLength = text.length();,4,1,0,1,2,0,4,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3776,        for (int i = start; i < textLength; i++) {,0,0,0,1,3,0,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3777,            buf.append(text.charAt(i));,0,1,0,2,4,0,22,0,0,23,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3779,        String result = buf.toString();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3780,        if (!repeat) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3781,            return result;,2,0,0,0,0,1,0,0,0,3,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3784,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",0,0,0,1,2,1,0,0,0,4,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3810,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3811,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3813,"        return str.replace(searchChar, replaceChar);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3853,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3854,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3856,        if (replaceChars == null) {,4,1,0,1,3,0,4,0,0,9,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3857,            replaceChars = EMPTY;,4,0,0,0,0,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3859,        boolean modified = false;,10,1,0,0,0,0,0,0,0,13,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3860,        int replaceCharsLength = replaceChars.length();,4,1,0,1,2,0,4,0,0,9,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3861,        int strLength = str.length();,16,3,0,1,2,0,8,4,0,32,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3862,        StringBuffer buf = new StringBuffer(strLength);,6,0,1,1,2,0,0,4,0,15,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3863,        for (int i = 0; i < strLength; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3864,            char ch = str.charAt(i);,2,0,0,1,2,0,10,0,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3865,            int index = searchChars.indexOf(ch);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3866,            if (index >= 0) {,4,1,0,1,3,0,4,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3867,                modified = true;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3868,                if (index < replaceCharsLength) {,4,1,0,1,3,0,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3869,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,10,0,0,10,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3872,                buf.append(ch);,0,0,0,1,2,0,6,0,0,6,15,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3875,        if (modified) {,4,0,0,1,3,0,0,0,0,4,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3876,            return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3878,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3909,        return new StringBuffer(start + overlay.length() + text.length() - end + 1),0,0,0,3,6,1,0,0,0,10,75,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3946,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3947,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3949,        if (overlay == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3950,            overlay = EMPTY;,6,1,0,0,0,0,0,0,0,9,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3952,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3953,        if (start < 0) {,8,1,0,1,3,0,0,0,0,9,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3954,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3956,        if (start > len) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3957,            start = len;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3959,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3960,            end = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3962,        if (end > len) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3963,            end = len;,4,0,0,0,0,0,0,0,0,5,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3965,        if (start > end) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3966,            int temp = start;,2,1,0,0,0,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3967,            start = end;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3968,            end = temp;,2,1,0,0,0,0,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3970,        return new StringBuffer(len + start - end + overlay.length() + 1),0,0,0,2,4,1,0,0,0,7,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4005,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4006,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4009,        if (str.length() == 1) {,2,1,0,2,5,0,8,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4010,            char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4011,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4012,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4014,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4017,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4018,        char last = str.charAt(lastIdx);,4,1,1,1,2,0,6,0,0,15,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4020,        if (last == CharUtils.LF) {,8,1,0,1,3,0,0,0,0,9,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4021,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4022,                lastIdx--;,4,0,0,0,0,0,6,0,0,11,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4024,        } else if (last != CharUtils.CR) {,10,2,0,1,4,0,4,0,0,18,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4025,            lastIdx++;,8,1,0,0,0,0,4,0,0,15,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4027,"        return str.substring(0, lastIdx);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4057,        if (isEmpty(str) || separator == null) {,2,2,0,2,5,0,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4058,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4060,        if (str.endsWith(separator)) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4061,"            return str.substring(0, str.length() - separator.length());",0,0,0,3,6,1,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4063,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4077,"        return chompLast(str, ""\n"");",0,0,1,1,2,1,4,0,0,13,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4091,        if (str.length() == 0) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4092,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4094,        String sub = str.substring(str.length() - sep.length());,8,3,0,3,6,0,16,2,0,29,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4095,        if (sep.equals(sub)) {,0,0,0,2,5,0,6,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4096,"            return str.substring(0, str.length() - sep.length());",0,0,0,3,6,1,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4098,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4114,        int idx = str.lastIndexOf(sep);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4115,        if (idx == str.length() - sep.length()) {,2,2,0,3,7,0,8,0,0,12,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4116,            return sep;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4117,        } else if (idx != -1) {,2,1,0,1,4,0,0,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4118,            return str.substring(idx);,0,0,0,1,2,1,10,0,0,10,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4120,            return EMPTY;,4,1,0,0,0,1,0,0,0,5,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4136,        int idx = str.indexOf(sep);,14,4,0,1,2,0,0,0,0,18,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4137,        if (idx == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4138,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4140,        return str.substring(idx + sep.length());,2,1,0,2,4,1,8,0,0,11,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4156,        int idx = str.indexOf(sep);,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4157,        if (idx == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4158,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4160,"        return str.substring(0, idx + sep.length());",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4189,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4190,            return null;,2,2,0,0,0,1,4,0,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4192,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,7,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4193,        if (strLen < 2) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4194,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4196,        int lastIdx = strLen - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4197,"        String ret = str.substring(0, lastIdx);",2,0,0,1,2,0,6,2,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4198,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4199,        if (last == CharUtils.LF) {,6,1,0,1,3,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4200,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4201,"                return ret.substring(0, lastIdx - 1);",2,1,0,1,2,1,4,0,0,7,37,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4204,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4218,        int lastIdx = str.length() - 1;,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4219,        if (lastIdx <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4220,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4222,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4223,        if (last == CharUtils.LF) {,8,2,0,1,3,0,0,0,0,10,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4224,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,1,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4225,                lastIdx--;,2,0,0,0,0,0,0,0,0,3,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4228,            lastIdx++;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4230,"        return str.substring(0, lastIdx);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4252,        return StringEscapeUtils.escapeJava(str);,0,0,0,1,2,1,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4278,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4279,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4281,        if (repeat <= 0) {,8,2,0,1,3,0,10,0,0,20,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4282,            return EMPTY;,12,2,0,0,0,1,6,0,0,22,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4284,        int inputLength = str.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4285,        if (repeat == 1 || inputLength == 0) {,4,3,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4286,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4288,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4289,"            return padding(repeat, str.charAt(0));",0,0,0,2,4,1,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4292,        int outputLength = inputLength * repeat;,8,2,0,0,0,0,0,0,0,10,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4293,        switch (inputLength) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4295,                char ch = str.charAt(0);,8,5,0,1,2,0,4,0,0,17,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4296,                char[] output1 = new char[outputLength];,2,0,1,2,4,0,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4297,                for (int i = repeat - 1; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4298,                    output1[i] = ch;,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4300,                return new String(output1);,2,0,0,1,2,1,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4302,                char ch0 = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4303,                char ch1 = str.charAt(1);,2,0,0,1,2,0,4,0,0,6,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4304,                char[] output2 = new char[outputLength];,2,0,1,2,4,0,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4305,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",18,3,0,1,3,1,0,0,0,24,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4306,                    output2[i] = ch0;,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4307,                    output2[i + 1] = ch1;,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4309,                return new String(output2);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4311,                StringBuffer buf = new StringBuffer(outputLength);,4,1,1,1,2,0,4,0,0,14,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4312,                for (int i = 0; i < repeat; i++) {,10,1,0,1,3,0,0,0,0,12,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4313,                    buf.append(str);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4315,                return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4343,        if (repeat < 0) {,4,1,0,1,3,0,0,0,0,5,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4344,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",6,1,1,1,2,0,0,2,0,15,79,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4346,        final char[] buf = new char[repeat];,0,0,0,2,4,0,0,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4347,        for (int i = 0; i < buf.length; i++) {,0,0,0,1,3,0,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4348,            buf[i] = padChar;,2,0,1,1,2,0,0,0,0,7,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4350,        return new String(buf);,10,1,0,1,2,1,0,2,0,14,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4373,"        return rightPad(str, size, ' ');",2,1,0,1,2,1,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4398,        if (str == null) {,6,2,0,1,3,0,0,0,0,8,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4399,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4401,        int pads = size - str.length();,4,1,1,1,2,0,8,0,0,22,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4402,        if (pads <= 0) {,2,1,0,1,3,0,6,0,0,9,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4403,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4405,        if (pads > PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4406,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,0,0,0,7,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4408,"        return str.concat(padding(pads, padChar));",0,0,0,2,4,1,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4435,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4436,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4438,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4439,"            padStr = "" "";",2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4441,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4442,        int strLen = str.length();,4,1,0,1,2,0,0,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4443,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4444,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4445,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4447,        if (padLen == 1 && pads <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4448,"            return rightPad(str, size, padStr.charAt(0));",2,0,0,2,4,1,0,0,0,3,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4451,        if (pads == padLen) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4452,            return str.concat(padStr);,0,0,0,1,2,1,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4453,        } else if (pads < padLen) {,2,0,0,1,4,0,0,0,0,2,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4454,"            return str.concat(padStr.substring(0, pads));",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4456,            char[] padding = new char[pads];,2,0,0,2,4,0,4,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4457,            char[] padChars = padStr.toCharArray();,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4458,            for (int i = 0; i < pads; i++) {,10,2,0,1,3,0,0,0,0,13,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4459,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4461,            return str.concat(new String(padding));,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4485,"        return leftPad(str, size, ' ');",0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4510,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4511,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4513,        int pads = size - str.length();,2,0,0,1,2,0,0,0,0,3,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4514,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4515,            return str; // returns original String when possible,8,1,1,0,0,1,0,0,0,12,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4517,        if (pads > PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4518,"            return leftPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,12,0,0,12,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4520,"        return padding(pads, padChar).concat(str);",0,0,0,2,4,1,10,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4547,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4548,            return null;,2,0,0,0,0,1,0,4,0,6,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4550,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4551,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4553,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4554,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4555,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4556,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4557,            return str; // returns original String when possible,8,0,0,0,0,2,0,4,0,13,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4559,        if (padLen == 1 && pads <= PAD_LIMIT) {,2,1,0,1,3,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4560,"            return leftPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4563,        if (pads == padLen) {,6,2,0,1,3,0,0,0,0,8,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4564,            return padStr.concat(str);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4565,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4566,"            return padStr.substring(0, pads).concat(str);",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4568,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4569,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4570,            for (int i = 0; i < pads; i++) {,14,1,0,1,3,0,4,0,0,20,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4571,                padding[i] = padChars[i % padLen];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4573,            return new String(padding).concat(str);,8,1,0,2,4,1,4,2,0,17,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4586,        return str == null ? 0 : str.length();,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4615,"        return center(str, size, ' ');",0,0,1,1,2,1,8,0,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4643,        if (str == null || size <= 0) {,6,3,0,1,3,0,0,2,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4644,            return str;,4,0,0,0,0,1,4,0,0,8,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4646,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4647,        int pads = size - strLen;,4,1,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4648,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4649,            return str;,4,0,0,0,0,1,0,0,0,4,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4651,"        str = leftPad(str, strLen + pads / 2, padChar);",6,2,0,1,2,0,6,0,0,15,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4652,"        str = rightPad(str, size, padChar);",4,1,0,1,2,0,0,0,0,5,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4653,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4683,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4684,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4686,        if (isEmpty(padStr)) {,4,1,1,2,5,0,4,0,0,14,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4687,"            padStr = "" "";",4,0,0,0,0,0,0,0,0,6,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4689,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4690,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4691,        if (pads <= 0) {,4,2,0,1,3,0,0,0,0,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4692,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4694,"        str = leftPad(str, strLen + pads / 2, padStr);",6,2,0,1,2,0,6,0,0,15,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4695,"        str = rightPad(str, size, padStr);",4,1,0,1,2,0,8,0,0,14,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4696,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4721,        if (str == null) {,8,1,0,1,3,0,0,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4722,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4724,        return str.toUpperCase();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4744,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4745,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4747,        return str.toUpperCase(locale);,2,0,0,1,2,1,0,0,0,4,31,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4770,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4771,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4773,        return str.toLowerCase();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4793,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4794,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4796,        return str.toLowerCase(locale);,0,0,0,1,2,1,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4821,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4822,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4824,        return new StringBuffer(strLen),2,0,0,1,2,1,0,2,0,4,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4840,        return capitalize(str);,0,0,0,1,2,1,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4865,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4866,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4868,        return new StringBuffer(strLen),2,0,0,1,2,1,8,2,0,13,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4884,        return uncapitalize(str);,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4916,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4917,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4919,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4921,        char ch = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4922,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4923,            ch = str.charAt(i);,4,0,0,1,2,0,0,0,0,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4924,            if (Character.isUpperCase(ch)) {,10,1,0,2,5,1,6,4,0,23,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4925,                ch = Character.toLowerCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4926,            } else if (Character.isTitleCase(ch)) {,4,1,1,2,6,0,6,0,0,18,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4927,                ch = Character.toLowerCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4928,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,4,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4929,                ch = Character.toUpperCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4931,            buffer.append(ch);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4933,        return buffer.toString();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4949,        return WordUtils.capitalize(str);,0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4974,        if (isEmpty(str) || isEmpty(sub)) {,0,0,0,3,7,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4975,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4977,        int count = 0;,2,1,0,0,0,0,8,0,0,13,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4978,        int idx = 0;,12,3,0,0,0,0,0,2,0,17,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4979,"        while ((idx = str.indexOf(sub, idx)) != -1) {",2,1,0,3,7,0,8,0,0,13,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4980,            count++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4981,            idx += sub.length();,2,0,0,1,2,0,4,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4983,        return count;,8,3,0,0,0,1,0,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5007,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5008,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5010,        int sz = str.length();,2,0,0,1,2,0,4,0,0,7,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5011,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5012,            if (Character.isLetter(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5013,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5016,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5041,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5042,            return false;,6,1,0,0,0,1,0,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5044,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5045,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5046,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,19,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5047,                return false;,4,0,0,0,0,1,0,4,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5050,        return true;,4,0,0,0,0,1,0,0,0,5,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5074,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5075,            return false;,8,1,0,0,0,1,0,0,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5077,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5078,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5079,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5080,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5083,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5108,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5109,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5111,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5112,        for (int i = 0; i < sz; i++) {,10,2,0,1,3,0,6,0,0,19,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5113,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,4,3,0,6,13,0,16,0,0,25,84,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5114,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5117,        return true;,2,0,0,0,0,1,6,2,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5146,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5147,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5149,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5150,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5151,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,8,2,0,3,7,0,10,0,0,23,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5152,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5155,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5180,        if (str == null) {,10,1,0,1,3,0,0,0,0,12,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5181,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5183,        int sz = str.length();,4,1,0,1,2,0,4,0,0,9,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5184,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5185,            if (Character.isDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5186,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5189,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5216,        if (str == null) {,8,4,0,1,3,0,0,0,0,12,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5217,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5219,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5220,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5221,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,19,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5222,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5225,        return true;,2,1,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5248,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5249,            return false;,4,0,0,0,0,1,0,4,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5251,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5252,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,10,0,0,10,30,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5253,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5254,                return false;,0,0,0,0,0,1,6,0,0,7,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5257,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5300,        return str == null ? defaultStr : str;,4,3,0,0,0,1,8,0,0,15,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5320,        return StringUtils.isEmpty(str) ? defaultStr : str;,0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5340,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5341,            return null;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5343,        return new StringBuffer(str).reverse().toString();,2,0,0,3,6,1,4,2,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5366,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5367,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5371,"        String[] strs = split(str, separatorChar);",14,2,0,2,4,0,20,4,0,43,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5372,        ArrayUtils.reverse(strs);,4,1,0,1,2,0,6,0,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5373,"        return join(strs, separatorChar);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5399,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5400,            return null;,6,0,0,0,0,1,6,0,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5404,"        String[] strs = split(str, separatorChars);",2,0,0,2,4,0,6,2,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5405,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5406,        if (separatorChars == null) {,2,1,0,1,3,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5407,"            return join(strs, ' ');",0,0,0,1,2,1,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5409,"        return join(strs, separatorChars);",0,0,0,1,2,1,6,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5447,"        return abbreviate(str, 0, maxWidth);",0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5486,        if (str == null) {,8,2,0,1,3,0,0,0,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5487,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5489,        if (maxWidth < 4) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5490,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,0,0,2,0,3,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5492,        if (str.length() <= maxWidth) {,2,1,0,2,5,0,4,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5493,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5495,        if (offset > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5496,            offset = str.length();,2,0,0,1,2,0,4,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5498,        if ((str.length() - offset) < (maxWidth - 3)) {,0,0,0,4,9,0,0,0,0,13,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5499,            offset = str.length() - (maxWidth - 3);,4,2,0,2,4,0,4,0,0,11,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5501,        if (offset <= 4) {,4,2,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5502,"            return str.substring(0, maxWidth - 3) + ""..."";",2,2,0,1,2,1,4,0,0,9,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5504,        if (maxWidth < 7) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5505,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",6,1,0,1,2,0,4,2,0,15,82,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5507,        if ((offset + (maxWidth - 3)) < str.length()) {,0,0,0,4,9,0,0,0,0,13,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5508,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",2,2,0,2,4,1,8,0,0,13,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5510,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",8,6,0,3,6,1,8,0,0,24,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5541,        if (str1 == null) {,8,4,0,1,3,0,0,0,0,13,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5542,            return str2;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5544,        if (str2 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5545,            return str1;,8,1,0,0,0,1,0,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5547,"        int at = indexOfDifference(str1, str2);",4,0,0,1,2,0,6,0,0,10,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5548,        if (at == -1) {,2,1,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5549,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5551,        return str2.substring(at);,2,0,0,1,2,1,6,0,0,8,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5578,        if (str1 == str2) {,4,1,0,1,3,0,0,0,0,6,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5579,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5581,        if (str1 == null || str2 == null) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5582,            return 0;,6,2,0,0,0,1,4,0,0,12,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5585,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,8,3,0,3,7,0,8,0,0,21,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5586,            if (str1.charAt(i) != str2.charAt(i)) {,0,0,0,3,7,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5587,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5590,        if (i < str2.length() || i < str1.length()) {,4,3,0,3,7,0,8,0,0,15,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5591,            return i;,4,0,0,0,0,1,0,0,0,5,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5593,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5628,        if (strs == null || strs.length <= 1) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5629,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5631,        boolean anyStringNull = false;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5632,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5633,        int arrayLen = strs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5634,        int shortestStrLen = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5635,        int longestStrLen = 0;,4,0,0,0,0,0,0,0,0,5,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5640,        for (int i = 0; i < arrayLen; i++) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5641,            if (strs[i] == null) {,0,1,1,2,5,0,0,0,0,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5642,                anyStringNull = true;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5643,                shortestStrLen = 0;,2,0,0,0,0,0,0,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5645,                allStringsNull = false;,4,1,0,0,0,0,0,0,0,7,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5646,"                shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",0,0,0,3,6,0,0,0,0,9,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5647,"                longestStrLen = Math.max(strs[i].length(), longestStrLen);",2,0,1,3,6,0,8,0,0,15,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5652,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,6,3,0,2,5,0,8,2,0,20,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5653,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5657,        if (shortestStrLen == 0) {,2,1,0,1,3,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5658,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5662,        int firstDiff = -1;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5663,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,20,2,0,1,3,0,0,0,0,24,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5664,            char comparisonChar = strs[0].charAt(stringPos);,2,0,1,2,4,0,4,0,0,8,48,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5665,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,4,3,0,1,3,0,0,0,0,7,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5666,                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {,2,1,1,3,7,0,4,0,0,11,57,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5667,                    firstDiff = stringPos;,10,0,0,0,0,0,4,0,0,15,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5668,                    break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5671,            if (firstDiff != -1) {,2,1,0,1,3,0,0,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5672,                break;,2,1,0,0,0,0,0,0,0,3,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5676,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,6,3,0,1,3,0,6,0,0,16,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5680,            return shortestStrLen;,0,0,0,0,0,1,0,0,0,1,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5682,        return firstDiff;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5719,        if (strs == null || strs.length == 0) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5720,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5722,        int smallestIndexOfDiff = indexOfDifference(strs);,0,0,0,1,2,0,0,0,0,3,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5723,        if (smallestIndexOfDiff == -1) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5725,            if (strs[0] == null) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5726,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5728,            return strs[0];,2,1,1,1,2,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5729,        } else if (smallestIndexOfDiff == 0) {,4,1,1,1,4,0,0,0,0,7,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5731,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5734,"            return strs[0].substring(0, smallestIndexOfDiff);",0,0,1,2,4,1,4,0,0,6,49,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5775,        if (s == null || t == null) {,6,8,1,1,3,0,0,0,0,22,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5776,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5796,        int n = s.length(); // length of s,4,1,0,1,2,0,4,0,0,9,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5797,        int m = t.length(); // length of t,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5799,        if (n == 0) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5800,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5801,        } else if (m == 0) {,2,1,0,1,4,0,0,0,0,3,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5802,            return n;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5805,        if (n > m) {,0,0,0,1,3,0,4,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5807,            String tmp = s;,8,1,0,0,0,0,6,4,0,19,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5808,            s = t;,6,1,0,0,0,0,0,0,0,8,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5809,            t = tmp;,4,0,0,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5810,            n = m;,6,1,0,0,0,0,0,0,0,8,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5811,            m = t.length();,4,0,0,1,2,0,4,0,0,9,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5814,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5815,"        int d[] = new int[n+1]; // cost array, horizontally",4,1,0,2,4,0,0,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5826,        for (i = 0; i<=n; i++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5827,            p[i] = i;,0,0,0,1,2,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5830,        for (j = 1; j<=m; j++) {,10,1,1,1,3,0,2,0,0,24,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5831,            t_j = t.charAt(j-1);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5832,            d[0] = j;,0,0,0,1,2,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5834,            for (i=1; i<=n; i++) {,16,2,0,1,3,0,0,0,0,21,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5835,                cost = s.charAt(i-1)==t_j ? 0 : 1;,6,2,0,1,2,0,4,0,0,13,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5837,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",6,5,1,6,12,0,8,0,0,32,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5841,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5842,            p = d;,4,4,0,0,0,0,8,0,0,18,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5843,            d = _d;,4,0,0,0,0,0,0,0,0,6,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5848,        return p[n];,0,0,1,1,2,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5897,"        return startsWith(str, prefix, false);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5922,"        return startsWith(str, prefix, true);",0,0,0,1,2,1,6,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5937,        if (str == null || prefix == null) {,12,4,0,1,3,0,0,0,0,16,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5938,            return (str == null && prefix == null);,6,3,0,1,2,1,0,0,0,9,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5940,        if (prefix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5941,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5943,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",0,0,0,2,4,1,12,0,0,12,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5971,"        return endsWith(str, suffix, false);",0,0,0,1,2,1,12,0,0,12,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5997,"        return endsWith(str, suffix, true);",0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6012,        if (str == null || suffix == null) {,4,3,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6013,            return (str == null && suffix == null);,4,3,0,1,2,1,0,0,0,7,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6015,        if (suffix.length() > str.length()) {,0,0,0,3,7,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6016,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6018,        int strOffset = str.length() - suffix.length();,0,0,0,2,4,0,0,2,0,4,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6019,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,2,4,1,0,0,0,7,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,44,      super();,0,0,0,1,2,0,0,0,0,1,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,45,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,142,"        return wrap(str, wrapLength, null, false);",0,0,0,1,2,1,6,0,0,8,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,164,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,165,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,167,        if (newLineStr == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,168,            newLineStr = SystemUtils.LINE_SEPARATOR;,6,0,0,0,0,0,0,0,0,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,170,        if (wrapLength < 1) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,171,            wrapLength = 1;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,173,        int inputLineLength = str.length();,2,0,0,1,2,0,4,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,174,        int offset = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,175,        StringBuffer wrappedLine = new StringBuffer(inputLineLength + 32);,0,0,0,1,2,0,0,0,0,3,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,177,        while ((inputLineLength - offset) > wrapLength) {,6,2,0,2,5,0,0,0,0,8,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,178,            if (str.charAt(offset) == ' ') {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,179,                offset++;,2,0,0,0,0,0,0,0,0,3,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,180,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,182,"            int spaceToWrapAt = str.lastIndexOf(' ', wrapLength + offset);",6,1,0,1,2,0,4,0,0,12,62,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,184,            if (spaceToWrapAt >= offset) {,4,1,0,1,3,0,0,0,0,5,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,186,"                wrappedLine.append(str.substring(offset, spaceToWrapAt));",0,0,0,2,4,0,12,0,0,12,57,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,187,                wrappedLine.append(newLineStr);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,188,                offset = spaceToWrapAt + 1;,4,1,0,0,0,0,0,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,192,                if (wrapLongWords) {,2,0,0,1,3,0,0,0,0,2,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,194,"                    wrappedLine.append(str.substring(offset, wrapLength + offset));",4,1,0,2,4,0,10,0,0,15,63,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,195,                    wrappedLine.append(newLineStr);,2,1,1,1,2,0,6,0,0,13,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,196,                    offset += wrapLength;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,199,"                    spaceToWrapAt = str.indexOf(' ', wrapLength + offset);",6,1,0,1,2,0,4,0,0,13,54,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,200,                    if (spaceToWrapAt >= 0) {,2,1,0,1,3,0,0,0,0,3,25,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,201,"                        wrappedLine.append(str.substring(offset, spaceToWrapAt));",2,0,0,2,4,0,4,2,0,8,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,202,                        wrappedLine.append(newLineStr);,0,0,0,1,2,0,6,0,0,6,31,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,203,                        offset = spaceToWrapAt + 1;,4,1,0,0,0,0,0,0,0,6,27,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,205,                        wrappedLine.append(str.substring(offset));,0,0,0,2,4,0,10,0,0,10,42,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,206,                        offset = inputLineLength;,4,0,0,0,0,0,0,0,0,5,25,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,210,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,213,        wrappedLine.append(str.substring(offset));,2,0,0,2,4,0,14,0,0,16,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,215,        return wrappedLine.toString();,0,0,0,1,2,1,4,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,243,"        return capitalize(str, null);",0,0,0,1,2,1,4,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,276,        int delimLen = (delimiters == null ? -1 : delimiters.length);,8,1,0,1,2,0,0,0,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,277,        if (str == null || str.length() == 0 || delimLen == 0) {,4,5,0,2,5,0,14,0,0,24,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,278,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,280,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,281,        StringBuffer buffer = new StringBuffer(strLen);,6,0,0,1,2,0,0,4,0,12,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,282,        boolean capitalizeNext = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,283,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,284,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,286,"            if (isDelimiter(ch, delimiters)) {",0,0,0,2,5,0,6,0,0,6,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,287,                buffer.append(ch);,0,0,0,1,2,0,6,0,0,7,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,288,                capitalizeNext = true;,2,0,0,0,0,0,0,0,0,4,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,289,            } else if (capitalizeNext) {,2,0,0,1,4,0,0,0,0,2,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,290,                buffer.append(Character.toTitleCase(ch));,0,0,0,2,4,0,10,0,0,10,41,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,291,                capitalizeNext = false;,2,0,0,0,0,0,0,0,0,4,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,293,                buffer.append(ch);,2,1,0,1,2,0,12,0,0,15,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,296,        return buffer.toString();,0,0,0,1,2,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,320,"        return capitalizeFully(str, null);",0,0,0,1,2,1,4,0,0,5,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,350,        int delimLen = (delimiters == null ? -1 : delimiters.length);,10,1,0,1,2,0,0,0,0,12,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,351,        if (str == null || str.length() == 0 || delimLen == 0) {,0,0,0,2,5,0,0,0,0,7,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,352,            return str;,2,0,0,0,0,1,0,2,0,4,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,354,        str = str.toLowerCase();,2,0,0,1,2,0,4,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,355,"        return capitalize(str, delimiters);",0,0,0,1,2,1,6,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,377,"        return uncapitalize(str, null);",0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,406,        int delimLen = (delimiters == null ? -1 : delimiters.length);,8,1,0,1,2,0,0,0,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,407,        if (str == null || str.length() == 0 || delimLen == 0) {,4,5,0,2,5,0,4,0,0,13,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,408,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,410,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,411,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,412,        boolean uncapitalizeNext = true;,4,0,0,0,0,0,0,2,0,7,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,413,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,414,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,416,"            if (isDelimiter(ch, delimiters)) {",0,0,0,2,5,0,6,0,0,6,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,417,                buffer.append(ch);,0,0,0,1,2,0,6,0,0,6,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,418,                uncapitalizeNext = true;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,419,            } else if (uncapitalizeNext) {,0,0,0,1,4,0,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,420,                buffer.append(Character.toLowerCase(ch));,0,0,0,2,4,0,10,0,0,10,41,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,421,                uncapitalizeNext = false;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,423,                buffer.append(ch);,2,0,0,1,2,0,6,0,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,426,        return buffer.toString();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,454,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,455,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,457,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,459,        boolean whitespace = true;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,460,        char ch = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,461,        char tmp = 0;,2,0,0,0,0,0,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,463,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,464,            ch = str.charAt(i);,0,0,0,1,2,0,10,0,0,10,19,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,465,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,0,6,0,0,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,466,                tmp = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,467,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,0,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,468,                tmp = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,32,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,469,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,470,                if (whitespace) {,2,0,0,1,3,0,0,0,0,2,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,471,                    tmp = Character.toTitleCase(ch);,4,0,1,1,2,0,10,0,0,20,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,473,                    tmp = Character.toUpperCase(ch);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,476,                tmp = ch;,4,0,0,0,0,0,0,0,0,5,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,478,            buffer.append(tmp);,0,0,0,1,2,0,6,0,0,6,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,479,            whitespace = Character.isWhitespace(ch);,2,0,0,1,2,0,6,0,0,9,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,481,        return buffer.toString();,0,0,0,1,2,1,12,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,508,"        return initials(str, null);",0,0,0,1,2,1,4,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,539,        if (str == null || str.length() == 0) {,2,3,0,2,5,0,4,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,540,            return str;,4,1,0,0,0,1,0,0,0,5,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,542,        if (delimiters != null && delimiters.length == 0) {,6,3,0,1,3,0,6,0,0,16,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,543,"            return """";",0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,545,        int strLen = str.length();,12,2,0,1,2,0,4,0,0,19,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,546,        char[] buf = new char[strLen / 2 + 1];,4,2,0,2,4,0,0,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,547,        int count = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,548,        boolean lastWasGap = true;,6,0,0,0,0,0,6,0,0,13,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,549,        for (int i = 0; i < strLen; i++) {,12,2,1,1,3,0,0,0,0,19,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,550,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,552,"            if (isDelimiter(ch, delimiters)) {",0,0,0,2,5,0,6,0,0,6,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,553,                lastWasGap = true;,2,0,0,0,0,0,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,554,            } else if (lastWasGap) {,2,0,0,1,4,0,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,555,                buf[count++] = ch;,4,0,1,1,2,0,0,0,0,8,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,556,                lastWasGap = false;,2,0,0,0,0,0,0,0,0,4,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,561,"        return new String(buf, 0, count);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,573,        if (delimiters == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,574,            return Character.isWhitespace(ch);,0,0,0,1,2,1,6,0,0,6,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,576,"        for (int i = 0, isize = delimiters.length; i < isize; i++) {",16,1,0,1,3,0,0,0,0,19,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,577,            if (ch == delimiters[i]) {,2,1,1,2,5,0,0,0,0,7,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,578,                return true;,0,0,1,0,0,1,0,0,0,6,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,581,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,607,        if (str == null) {,4,2,0,1,3,0,4,0,0,10,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,608,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,610,        if (str.length() == 0) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,611,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,618,        if (upper == -1 || upper > str.length()) {,4,3,0,2,5,0,4,0,0,12,42,4,0.0,1,1
defect4j,lang,org/apache/commons/lang/WordUtils,45,619,            upper = str.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,622,        if (upper < lower) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,623,            upper = lower;,4,0,0,0,0,0,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,626,        StringBuffer result = new StringBuffer();,2,0,0,1,2,0,0,4,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,627,"        int index = StringUtils.indexOf(str, "" "", lower);",2,0,0,1,2,0,8,0,0,11,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,628,        if (index == -1) {,4,1,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,629,"            result.append(str.substring(0, upper));",0,0,0,2,4,0,10,0,0,10,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,631,            if (upper != str.length()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,632,                result.append(StringUtils.defaultString(appendToEnd));,2,1,0,2,4,0,10,0,0,13,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,634,        } else if (index > upper) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,635,"            result.append(str.substring(0, upper));",0,0,0,2,4,0,10,0,0,10,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,636,            result.append(StringUtils.defaultString(appendToEnd));,0,0,0,2,4,0,0,0,0,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,638,"            result.append(str.substring(0, index));",0,0,0,2,4,0,10,0,0,10,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,639,            result.append(StringUtils.defaultString(appendToEnd));,0,0,0,2,4,0,10,0,0,10,54,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,641,        return result.toString();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,244,                            out.write('\\');,6,1,0,1,2,0,4,0,0,12,16,3,1.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,245,                        out.write('/');,2,0,1,1,2,0,14,2,0,23,15,3,1.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,246,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,86,"        return escapeJavaStyleString(str, false);",2,0,0,1,2,4,8,2,0,17,41,1,0.33333,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,155,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,159,            StringWriter writer = new StringWriter(str.length() * 2);,2,1,0,2,4,0,4,4,0,11,57,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,160,"            escapeJavaStyleString(writer, str, escapeSingleQuotes);",0,0,0,1,2,0,0,0,0,3,55,4,0.25,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,161,            return writer.toString();,6,0,0,1,2,1,8,0,0,14,25,3,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,179,        if (out == null) {,6,1,0,1,3,3,2,2,0,16,18,1,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,182,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,186,        sz = str.length();,2,0,0,1,2,0,4,0,0,7,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,187,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,188,            char ch = str.charAt(i);,2,0,0,1,2,3,2,2,0,10,24,2,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,191,            if (ch > 0xfff) {,2,1,0,1,3,0,0,0,0,3,17,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,193,            } else if (ch > 0xff) {,0,0,0,1,4,0,0,0,0,5,23,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,195,            } else if (ch > 0x7f) {,2,1,0,1,4,0,0,0,0,3,23,8,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,197,            } else if (ch < 32) {,6,2,0,1,4,3,2,2,0,16,21,1,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,228,                switch (ch) {,0,0,0,1,3,0,0,0,0,4,13,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,248,                        out.write(ch);,0,0,0,1,2,0,0,0,0,3,14,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,253,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,45,    private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,2,0,0,1,2,3,6,2,0,13,70,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,46,"    private static final char[] CSV_SEARCH_CHARS = new char[] {CSV_DELIMITER, CSV_QUOTE, CharUtils.CR, CharUtils.LF};",14,0,0,3,6,3,0,0,0,17,113,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,60,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,47,    protected NestableDelegate delegate = new NestableDelegate(this);,4,1,0,1,2,1,0,4,0,12,65,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,53,    private Throwable cause = null;,6,0,0,0,0,1,0,2,0,10,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,61,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,70,        super(msg);,4,0,0,1,2,0,0,4,0,8,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,71,    },0,1,0,0,1,0,8,0,0,9,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,81,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,82,        this.cause = cause;,4,0,0,0,0,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,83,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,94,        super(msg);,4,1,0,1,2,0,4,0,0,10,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,95,        this.cause = cause;,4,1,0,0,0,0,6,0,0,12,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,96,    },2,0,0,0,1,0,4,0,0,6,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,102,        return cause;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,113,        if (super.getMessage() != null) {,2,0,0,2,5,3,0,4,0,9,33,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,114,            return super.getMessage();,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,115,        } else if (cause != null) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,116,            return cause.toString();,10,1,0,1,2,1,0,2,0,14,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,118,            return null;,2,0,0,0,0,4,4,2,0,12,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,126,        if (index == 0) {,12,0,0,1,3,0,0,0,0,12,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,127,            return super.getMessage();,2,0,0,1,2,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,129,        return delegate.getMessage(index);,0,0,0,1,2,1,6,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,136,        return delegate.getMessages();,0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,143,        return delegate.getThrowable(index);,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,150,        return delegate.getThrowableCount();,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,157,        return delegate.getThrowables();,2,0,0,1,2,1,0,0,0,2,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,164,"        return delegate.indexOfThrowable(type, 0);",0,0,0,1,2,1,6,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,171,"        return delegate.indexOfThrowable(type, fromIndex);",0,0,0,1,2,1,8,0,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,178,        delegate.printStackTrace();,0,0,0,1,2,0,4,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,179,    },4,0,0,0,1,6,4,6,0,21,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,185,        delegate.printStackTrace(out);,0,0,0,1,2,0,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,186,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,192,        delegate.printStackTrace(out);,0,0,0,1,2,0,16,0,0,17,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,193,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,199,        super.printStackTrace(out);,4,0,0,1,2,0,0,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,200,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,59,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,60,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,102,"        escapeJavaStyleString(out, str, false);",0,0,0,1,2,0,6,0,0,7,39,5,0.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,103,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,127,"        return escapeJavaStyleString(str, true);",10,0,0,1,2,1,10,0,0,22,40,1,0.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,143,"        escapeJavaStyleString(out, str, true);",0,0,0,1,2,0,0,0,0,3,38,4,0.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,144,    },4,0,0,0,1,0,6,0,0,10,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,156,            return null;,2,0,0,0,0,1,4,2,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,162,        } catch (IOException ioe) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,164,            ioe.printStackTrace();,0,0,0,1,2,0,4,0,0,4,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,165,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,180,"            throw new IllegalArgumentException(""The Writer must not be null"");",10,5,0,1,2,0,8,0,0,23,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,183,            return;,20,1,0,0,0,4,4,2,0,30,7,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,192,"                out.write(""\\u"" + hex(ch));",0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,194,"                out.write(""\\u0"" + hex(ch));",0,1,0,2,4,0,8,0,0,10,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,196,"                out.write(""\\u00"" + hex(ch));",0,1,0,2,4,0,8,0,0,10,29,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,198,                switch (ch) {,2,0,0,1,3,0,0,0,0,2,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,200,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,201,                        out.write('b');,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,202,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,204,                        out.write('\\');,0,0,0,1,2,0,12,0,0,13,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,205,                        out.write('n');,0,1,0,1,2,0,8,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,206,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,208,                        out.write('\\');,2,0,0,1,2,0,4,0,0,8,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,209,                        out.write('t');,0,0,0,1,2,0,8,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,210,                        break;,6,1,1,0,0,0,2,0,0,14,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,212,                        out.write('\\');,6,1,0,1,2,0,4,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,213,                        out.write('f');,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,214,                        break;,4,2,0,0,0,0,8,0,0,15,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,216,                        out.write('\\');,2,0,0,1,2,3,4,4,0,15,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,217,                        out.write('r');,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,218,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,220,                        if (ch > 0xf) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,221,"                            out.write(""\\u00"" + hex(ch));",2,2,0,2,4,0,8,0,0,13,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,223,"                            out.write(""\\u000"" + hex(ch));",0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,225,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,230,                        if (escapeSingleQuote) {,2,0,0,1,3,0,0,0,0,2,24,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,231,                            out.write('\\');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,233,                        out.write('\'');,2,0,0,1,2,3,4,4,0,14,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,234,                        break;,6,1,1,0,0,3,0,0,0,16,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,236,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,237,"                        out.write('""');",0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,238,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,240,                        out.write('\\');,6,1,0,1,2,0,4,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,241,                        out.write('\\');,6,0,0,1,2,3,0,4,0,14,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,242,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,263,        return Integer.toHexString(ch).toUpperCase();,0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,276,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,277,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,280,            StringWriter writer = new StringWriter(str.length());,2,0,0,2,4,0,4,4,0,10,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,281,"            unescapeJava(writer, str);",4,2,0,1,2,0,12,0,0,18,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,282,            return writer.toString();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,283,        } catch (IOException ioe) {,2,0,0,1,4,0,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,285,            ioe.printStackTrace();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,286,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,306,        if (out == null) {,0,0,0,1,3,0,4,0,0,5,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,307,"            throw new IllegalArgumentException(""The Writer must not be null"");",0,0,0,1,2,0,0,0,0,3,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,309,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,310,            return;,4,0,0,0,0,1,0,2,0,6,7,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,312,        int sz = str.length();,12,7,0,1,2,0,8,0,0,27,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,313,        StringBuffer unicode = new StringBuffer(4);,0,0,0,1,2,0,0,0,0,3,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,314,        boolean hadSlash = false;,3,1,0,0,0,0,14,2,0,20,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,315,        boolean inUnicode = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,316,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,317,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,318,            if (inUnicode) {,2,0,0,1,3,0,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,321,                unicode.append(ch);,2,1,0,1,2,0,4,4,0,11,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,322,                if (unicode.length() == 4) {,8,1,0,2,5,0,4,2,0,17,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,326,"                        int value = Integer.parseInt(unicode.toString(), 16);",2,0,0,2,4,0,8,0,0,10,53,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,327,                        out.write((char) value);,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,328,                        unicode.setLength(0);,6,0,0,1,2,3,0,4,0,13,21,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,329,                        inUnicode = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,330,                        hadSlash = false;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,333,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,331,                    } catch (NumberFormatException nfe) {,2,0,0,1,4,3,2,0,0,8,37,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,332,"                        throw new NestableRuntimeException(""Unable to parse unicode value: "" + unicode, nfe);",4,1,0,1,2,0,0,2,0,8,85,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,337,            if (hadSlash) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,339,                hadSlash = false;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,340,                switch (ch) {,6,0,0,1,3,3,0,4,0,13,13,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,342,                        out.write('\\');,2,1,0,1,2,0,4,0,0,8,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,343,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,345,                        out.write('\'');,6,3,0,1,2,0,0,0,0,9,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,346,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,348,"                        out.write('""');",0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,349,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,351,                        out.write('\r');,0,0,0,1,2,0,4,0,0,4,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,352,                        break;,4,0,0,0,0,0,6,0,0,11,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,354,                        out.write('\f');,0,0,0,1,2,0,0,2,0,2,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,355,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,357,                        out.write('\t');,2,1,0,1,2,0,4,0,0,8,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,358,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,360,                        out.write('\n');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,361,                        break;,2,0,0,0,0,0,8,2,0,14,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,363,                        out.write('\b');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,364,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,368,                            inUnicode = true;,4,2,0,0,0,0,0,0,0,6,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,369,                            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,372,                        out.write(ch);,0,0,0,1,2,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,373,                        break;,0,0,0,0,0,0,4,0,0,4,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,376,            } else if (ch == '\\') {,2,1,0,1,4,0,0,0,0,4,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,377,                hadSlash = true;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,378,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,380,            out.write(ch);,0,0,0,1,2,0,2,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,382,        if (hadSlash) {,2,0,0,1,3,0,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,385,            out.write('\\');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,387,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,401,        return unescapeJava(str);,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,421,"        unescapeJava(out, str);",4,0,0,1,2,0,10,0,0,14,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,422,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,453,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,454,            return null;,6,1,0,0,0,1,4,2,0,13,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,457,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,2,1,0,4,8,0,4,4,0,11,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,458,"            escapeHtml(writer, str);",0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,459,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,460,        } catch (IOException e) {,6,0,0,1,4,0,0,2,0,10,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,463,            e.printStackTrace();,2,0,0,1,2,0,16,0,0,19,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,464,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,498,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,499,"            throw new IllegalArgumentException (""The Writer must not be null."");",2,0,0,1,2,0,8,0,0,10,68,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,501,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,502,            return;,6,1,0,0,0,1,4,0,0,12,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,504,"        Entities.HTML40.escape(writer, string);",4,0,0,1,2,0,6,0,0,10,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,505,    },4,1,0,0,1,0,0,0,0,5,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,525,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,526,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,529,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,2,0,0,4,8,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,530,"            unescapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,531,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,532,        } catch (IOException e) {,2,0,0,1,4,0,0,2,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,535,            e.printStackTrace();,2,0,0,1,2,0,8,0,0,11,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,536,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,559,        if (writer == null ) {,6,1,0,1,3,0,0,4,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,560,"            throw new IllegalArgumentException (""The Writer must not be null."");",0,0,0,1,2,0,0,2,0,4,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,562,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,563,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,565,"        Entities.HTML40.unescape(writer, string);",4,0,0,1,2,0,6,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,566,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,589,        if (writer == null ) {,2,1,0,1,3,0,2,0,0,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,590,"            throw new IllegalArgumentException (""The Writer must not be null."");",0,0,0,1,2,0,0,2,0,4,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,592,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,593,            return;,6,1,0,0,0,1,8,2,0,17,7,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,595,"        Entities.XML.escape(writer, str);",4,0,0,1,2,0,6,0,0,10,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,596,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,616,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,617,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,619,        return Entities.XML.escape(str);,4,0,0,1,2,1,4,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,641,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,642,"            throw new IllegalArgumentException (""The Writer must not be null."");",0,0,0,1,2,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,644,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,645,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,647,"        Entities.XML.unescape(writer, str);",6,0,0,1,2,0,6,0,0,12,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,648,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,666,        if (str == null) {,6,2,0,1,3,0,0,0,0,8,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,667,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,669,        return Entities.XML.unescape(str);,10,0,0,1,2,4,4,4,0,21,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,692,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,693,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,695,"        return StringUtils.replace(str, ""'"", ""''"");",0,0,0,1,2,1,6,0,0,8,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,723,"        if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {",0,0,0,2,5,0,8,0,0,8,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,724,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,727,            StringWriter writer = new StringWriter();,8,1,0,1,2,0,4,0,0,14,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,728,"            escapeCsv(writer, str);",0,0,0,1,2,0,6,0,0,6,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,729,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,730,        } catch (IOException ioe) {,2,0,0,1,4,0,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,732,            ioe.printStackTrace();,10,2,0,1,2,0,6,2,0,20,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,733,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,761,"        if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {",0,0,0,2,5,0,8,0,0,8,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,762,            if (str != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,763,                out.write(str);,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,765,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,767,        out.write(CSV_QUOTE);,0,0,0,1,2,0,6,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,768,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,769,            char c = str.charAt(i);,10,1,0,1,2,0,6,0,0,18,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,770,            if (c == CSV_QUOTE) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,771,                out.write(CSV_QUOTE); // escape double quote,0,0,0,1,2,0,6,0,0,6,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,773,            out.write(c);,0,0,0,1,2,0,6,0,0,6,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,775,        out.write(CSV_QUOTE);,0,0,0,1,2,0,6,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,776,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,801,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,802,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,805,            StringWriter writer = new StringWriter();,2,0,0,1,2,0,0,4,0,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,806,"            unescapeCsv(writer, str);",0,0,0,1,2,0,6,0,0,6,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,807,            return writer.toString();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,808,        } catch (IOException ioe) {,2,0,0,1,4,0,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,810,            ioe.printStackTrace();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,811,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,839,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,840,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,842,        if (str.length() < 2) {,2,1,0,2,5,0,12,4,0,19,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,843,            out.write(str);,0,0,0,1,2,0,6,0,0,6,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,844,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,846,        if ( str.charAt(0) != CSV_QUOTE || str.charAt(str.length() - 1) != CSV_QUOTE ) {,0,0,0,4,9,0,0,0,0,13,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,847,            out.write(str);,0,0,0,1,2,0,6,0,0,6,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,848,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,852,"        String quoteless = str.substring(1, str.length() - 1);",0,0,0,2,4,0,0,0,0,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,854,"        if ( StringUtils.containsAny(quoteless, CSV_SEARCH_CHARS) ) {",4,1,0,2,5,0,0,0,0,5,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,856,"            str = StringUtils.replace(quoteless, CSV_QUOTE_STR + CSV_QUOTE_STR, CSV_QUOTE_STR);",6,1,0,1,2,0,8,0,0,16,83,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,859,        out.write(str);,0,0,0,1,2,0,6,0,0,6,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,860,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,158,        return nullText;,2,0,0,0,0,1,0,0,0,2,16,4,1.33333,1,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1183,        if (width > 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1184,            ensureCapacity(size + width);,4,1,0,1,2,0,2,0,0,7,29,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1185,            String str = (obj == null ? getNullText() : obj.toString());,0,0,0,3,6,0,0,0,0,9,60,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1186,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1227,        if (width > 0) {,6,3,0,1,3,0,8,0,0,18,16,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1228,            ensureCapacity(size + width);,6,1,0,1,2,0,8,2,0,17,29,5,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1229,            String str = (obj == null ? getNullText() : obj.toString());,4,1,0,3,6,0,6,2,0,14,60,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1230,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.25,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,98,        this(CAPACITY);,2,0,0,1,2,0,0,0,0,2,15,4,0.02837,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,99,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02837,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,107,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02778,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,108,        if (initialCapacity <= 0) {,0,0,0,1,3,0,0,0,0,4,27,4,0.02778,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,111,        buffer = new char[initialCapacity];,2,0,1,1,2,0,0,0,0,5,35,4,0.02778,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,112,    },2,0,0,0,1,0,6,0,0,9,1,3,0.02778,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,372,            return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,381,                isEquals = lhs.equals(rhs);,4,0,0,1,2,0,6,2,0,13,27,4,0.05263,1,1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,368,        if (isEquals == false) {,2,1,0,1,3,0,0,0,0,4,24,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,371,        if (lhs == rhs) {,6,1,0,1,3,0,6,0,0,15,17,3,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,374,        if (lhs == null || rhs == null) {,4,3,0,1,3,0,0,0,0,7,33,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,378,        Class lhsClass = lhs.getClass();,2,0,0,1,2,0,4,2,0,8,32,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,379,        if (!lhsClass.isArray()) {,6,1,0,2,5,0,4,0,0,12,26,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,408,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.02222,1,1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,831,        return this.isEquals;,4,1,0,0,0,1,0,0,0,6,21,6,0.01639,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,100,    public EqualsBuilder() {,2,0,0,1,3,1,0,0,0,3,24,2,0.01613,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,92,    private boolean isEquals = true;,6,0,0,0,0,1,4,0,0,12,32,1,0.01613,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,102,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01613,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,146,            if (numerator==Integer.MIN_VALUE ||,6,2,0,0,1,0,0,0,0,8,35,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,150,            numerator = -numerator;,2,0,0,0,0,0,0,4,0,6,23,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,151,            denominator = -denominator;,4,0,0,0,0,0,0,0,0,6,27,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,578,        if (u>0) { u=-u; } // make u negative,0,0,0,2,4,0,4,0,0,5,37,5,0.125,1,1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,579,        if (v>0) { v=-v; } // make v negative,0,0,0,2,4,0,0,0,0,6,37,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,581,        int k=0;,0,0,0,0,0,0,0,0,0,0,8,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,582,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,6,7,0,3,7,0,0,0,0,13,72,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,585,        if (k==31) {,2,1,0,1,3,0,0,0,0,3,12,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,590,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,8,3,0,3,6,0,0,0,0,12,38,5,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,596,            while ((t&1)==0) { // while t is even..,4,2,0,2,5,3,6,2,0,17,39,1,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,600,            if (t>0) {,2,1,0,1,3,0,0,0,0,3,10,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,601,                u = -t;,0,0,0,0,0,0,0,0,0,0,7,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,603,                v = t;,4,0,0,0,0,0,0,0,0,5,6,8,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,606,            t = (v - u)/2;,6,2,0,1,2,0,0,0,0,9,14,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,609,        } while (t!=0);,2,1,0,1,3,0,0,0,0,3,15,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,610,        return -u*(1<<k); // gcd is u*2^k,2,0,0,1,2,4,0,0,0,5,33,2,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,571,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,2,1,0,3,7,0,0,0,0,3,43,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,572,            return 1;,6,0,0,0,0,1,8,0,0,14,9,3,0.11111,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,142,        if (denominator == 0) {,4,1,0,1,3,1,0,2,0,8,23,1,0.06667,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,145,        if (denominator < 0) {,2,1,0,1,3,0,0,0,0,3,22,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,153,"        return new Fraction(numerator, denominator);",0,0,0,1,2,1,0,0,0,4,44,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,368,        return numerator;,4,0,0,0,0,1,0,0,0,4,17,3,0.04762,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,377,        return denominator;,2,0,0,0,0,1,0,0,0,2,19,4,0.04762,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1708,"        public Pair(Object obj1, Object obj2) {",6,0,0,1,3,1,0,4,0,11,39,3,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1709,            mObj1 = obj1;,4,2,0,0,0,0,0,0,0,6,13,10,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1710,            mObj2 = obj2;,0,0,0,0,0,0,0,0,0,0,13,4,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1711,        },4,1,0,0,1,0,0,0,0,5,1,8,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1738,            return,0,0,0,0,0,0,0,0,0,0,6,4,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,772,            return new UnpaddedNumberField(field);,2,0,0,1,2,1,0,2,0,4,38,6,1.33333,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,954,        return mLocale;,4,0,0,0,0,1,4,0,0,9,15,3,1.33333,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1185,        UnpaddedNumberField(int field) {,0,0,0,1,3,0,0,0,0,4,32,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1186,            mField = field;,2,0,0,0,0,3,0,4,0,9,15,2,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1187,        },0,0,0,0,1,0,0,0,0,1,1,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1176,        static final UnpaddedNumberField INSTANCE_YEAR = new UnpaddedNumberField(Calendar.YEAR);,6,0,0,1,2,2,0,4,0,12,88,3,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1193,            return 4;,0,0,0,0,0,1,0,0,0,1,9,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,234,"        return getDateInstance(style, null, null);",0,0,0,1,2,1,0,0,0,4,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,293,                locale = Locale.getDefault();,0,0,0,1,2,0,0,0,0,3,29,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,408,"        return getDateTimeInstance(dateStyle, timeStyle, null, null);",0,0,0,1,2,1,6,0,0,7,61,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,425,"        return getDateTimeInstance(dateStyle, timeStyle, null, locale);",4,0,0,1,2,1,8,0,0,13,63,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,461,"        Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));",12,2,0,3,6,0,0,8,0,22,70,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,462,        if (timeZone != null) {,2,1,0,1,3,0,0,0,0,3,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,465,        if (locale != null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,466,"            key = new Pair(key, locale);",0,0,0,1,2,0,0,0,0,3,28,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,469,        FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);,8,5,0,2,4,0,10,4,0,28,73,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,470,        if (format == null) {,4,2,0,1,3,0,10,0,0,16,21,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,471,            if (locale == null) {,4,1,0,1,3,2,4,2,0,13,21,2,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,472,                locale = Locale.getDefault();,0,0,0,1,2,0,0,0,0,3,29,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,475,"                SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,",2,0,0,1,3,0,8,4,0,14,100,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,477,                String pattern = formatter.toPattern();,6,0,0,1,2,3,4,4,0,18,39,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,478,"                format = getInstance(pattern, timeZone, locale);",2,0,0,1,2,0,8,0,0,11,48,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,479,"                cDateTimeInstanceCache.put(key, format);",2,0,0,1,2,2,8,4,0,16,40,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,483,            },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,485,        return format;,4,1,0,0,0,1,8,0,0,13,14,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,672,                if (tokenLen >= 4) {,2,1,0,1,3,0,0,0,0,3,20,7,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,675,"                    rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);",12,0,0,1,2,0,0,2,0,15,81,9,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,677,                break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1717,            if (this == obj) {,0,0,0,1,3,0,6,0,0,6,18,9,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1721,            if (!(obj instanceof Pair)) {,0,0,0,2,5,0,0,0,0,7,29,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1725,            Pair key = (Pair)obj;,2,1,0,1,2,0,0,0,0,4,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1727,            return,2,0,0,0,0,3,0,4,0,9,6,2,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1538,"        TimeZoneNameRule(TimeZone timeZone, boolean timeZoneForced, Locale locale, int style) {",10,0,1,1,3,0,10,4,0,26,87,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1539,            mTimeZone = timeZone;,6,0,0,0,0,3,2,0,0,13,21,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1540,            mTimeZoneForced = timeZoneForced;,4,0,0,0,0,0,0,0,0,5,33,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1541,            mLocale = locale;,4,0,0,0,0,0,0,0,0,5,17,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1542,            mStyle = style;,4,0,0,0,0,0,0,0,0,5,15,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1544,            if (timeZoneForced) {,2,0,0,1,3,0,0,0,0,2,21,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1548,                mStandard = null;,4,0,0,0,0,1,12,0,0,18,17,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1549,                mDaylight = null;,6,1,0,0,0,1,0,2,0,13,17,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1551,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1557,            if (mTimeZoneForced) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1559,            } else if (mStyle == TimeZone.SHORT) {,0,0,0,1,4,0,0,0,0,5,38,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1560,                return 4;,0,0,0,0,0,1,0,0,0,1,9,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1447,        TwelveHourField(NumberRule rule) {,4,0,0,1,3,0,0,2,0,6,34,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1448,            mRule = rule;,4,0,0,0,0,0,4,2,0,13,13,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1449,        },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1455,            return mRule.estimateLength();,0,0,0,1,2,1,4,0,0,4,30,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,249,"        return getDateInstance(style, null, locale);",0,0,0,1,2,1,6,0,0,7,44,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,280,        Object key = new Integer(style);,4,0,0,1,2,0,0,4,0,8,32,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,281,        if (timeZone != null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,285,        if (locale != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,286,"            key = new Pair(key, locale);",6,0,0,1,2,0,0,2,0,9,28,6,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,290,        FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);,0,1,0,2,4,0,4,0,0,5,69,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,291,        if (format == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,292,            if (locale == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,296,"                SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale);",0,0,0,2,4,0,0,0,0,6,90,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,297,                String pattern = formatter.toPattern();,2,0,0,1,2,0,4,2,0,8,39,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,298,"                format = getInstance(pattern, timeZone, locale);",0,0,0,1,2,0,0,0,0,3,48,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,299,"                cDateInstanceCache.put(key, format);",6,0,0,1,2,0,0,0,0,6,36,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,303,            },2,0,0,0,1,0,6,0,0,8,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,305,        return format;,0,0,0,0,0,1,0,0,0,1,14,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,633,"                rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));",6,0,0,2,4,0,4,2,0,13,70,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,634,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,663,"                rule = new TextField(Calendar.AM_PM, AmPmStrings);",0,0,0,1,2,0,0,0,0,3,50,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,664,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,648,"                rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);",0,0,0,1,2,0,0,0,0,3,84,4,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,649,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,690,                    rule = new StringLiteral(sub);,0,0,0,1,2,0,0,0,0,3,30,4,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,692,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1112,        StringLiteral(String value) {,0,0,0,1,3,0,4,0,0,5,29,4,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1113,            mValue = value;,10,1,0,0,0,0,4,2,0,19,15,3,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1114,        },0,0,0,0,1,0,0,0,0,1,1,4,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1120,            return mValue.length();,0,0,0,1,2,1,0,0,0,4,23,4,0.44444,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,44,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,45,    },4,0,0,0,1,0,0,0,0,4,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,64,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,65,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,67,        return (bool.booleanValue() ? Boolean.FALSE : Boolean.TRUE);,0,0,0,2,4,1,0,0,0,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,87,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,1,1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,88,            return false;,0,0,0,0,0,1,4,0,0,5,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,90,        return bool.booleanValue() ? true : false;,0,0,0,1,2,1,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,108,        return !isTrue(bool);,2,0,0,1,2,1,8,0,0,11,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,126,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,127,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,129,        return bool.booleanValue() ? false : true;,0,0,0,1,2,1,4,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,147,        return !isFalse(bool);,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,165,        return bool ? Boolean.TRUE : Boolean.FALSE;,10,0,0,0,0,1,0,0,0,10,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,183,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,184,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,186,        return bool.booleanValue() ? true : false;,0,0,0,1,2,1,4,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,203,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,204,            return valueIfNull;,4,0,0,0,0,4,0,4,0,11,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,206,        return bool.booleanValue() ? true : false;,0,0,0,1,2,1,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,226,        return value == 0 ? false : true;,2,1,0,0,0,1,0,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,244,        return value == 0 ? Boolean.FALSE : Boolean.TRUE;,10,1,0,0,0,1,0,0,0,11,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,264,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,265,            return null;,4,1,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,267,        return value.intValue() == 0 ? Boolean.FALSE : Boolean.TRUE;,8,1,0,1,2,1,4,0,0,13,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,287,        if (value == trueValue) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,288,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,289,        } else if (value == falseValue) {,6,1,0,1,4,0,10,0,0,18,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,290,            return false;,2,0,0,0,0,1,8,2,0,13,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,293,"        throw new IllegalArgumentException(""The Integer did not match either specified value"");",0,0,0,1,2,0,0,2,0,3,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,316,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,317,            if (trueValue == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,318,                return true;,4,0,0,0,0,1,0,0,0,6,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,319,            } else if (falseValue == null) {,4,1,0,1,4,2,0,4,0,11,32,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,320,                return false;,0,0,0,0,0,1,0,0,0,1,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,322,        } else if (value.equals(trueValue)) {,4,0,0,2,6,0,6,0,0,11,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,323,            return true;,0,0,0,0,0,1,0,0,0,1,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,324,        } else if (value.equals(falseValue)) {,0,0,0,2,6,0,6,0,0,6,38,7,0.0,0,0
