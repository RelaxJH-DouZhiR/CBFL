dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1515,            i++;,12,1,0,0,0,0,8,0,0,23,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1517,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1527,        if (array == null) {,4,1,0,1,3,0,10,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1528,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1530,        int i = 0;,2,1,1,0,0,0,0,0,0,7,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1531,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1533,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1534,            tmp = array[j];,10,1,1,1,2,0,0,0,0,17,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1535,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1536,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1537,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1538,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1540,    },2,0,0,0,1,0,6,0,0,9,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1550,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1551,            return;,2,0,0,0,0,1,0,0,0,2,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1553,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1554,        int j = array.length - 1;,6,1,0,0,0,0,10,0,0,18,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1556,        while (j > i) {,8,1,0,1,3,0,12,2,0,23,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1557,            tmp = array[j];,4,0,1,1,2,0,0,0,0,10,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1558,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1559,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1560,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1561,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1563,    },0,1,0,0,1,0,8,0,0,9,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1573,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1574,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1576,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1577,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1579,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1580,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1581,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1582,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1583,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1584,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1586,    },0,0,1,0,1,0,4,0,0,8,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1596,        if (array == null) {,4,2,0,1,3,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1597,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1599,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1600,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1602,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1603,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1604,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1605,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1606,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1607,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1609,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1627,"        return indexOf(array, objectToFind, 0);",0,0,0,1,2,1,6,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1645,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1646,            return INDEX_NOT_FOUND;,6,1,0,0,0,1,8,2,0,17,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1648,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1649,            startIndex = 0;,4,0,1,0,0,0,0,0,0,7,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1651,        if (objectToFind == null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1652,            for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1653,                if (array[i] == null) {,0,1,1,2,5,0,0,0,0,5,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1654,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1657,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,4,10,0,0,0,0,14,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1658,            for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1659,                if (objectToFind.equals(array[i])) {,4,2,1,3,7,0,8,0,0,18,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1660,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1664,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1678,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1696,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1697,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1699,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1700,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1701,        } else if (startIndex >= array.length) {,8,1,0,1,4,0,0,0,0,9,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1702,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1704,        if (objectToFind == null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1705,            for (int i = startIndex; i >= 0; i--) {,12,3,0,1,3,0,4,0,0,20,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1706,                if (array[i] == null) {,10,2,1,2,5,0,0,0,0,17,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1707,                    return i;,4,1,0,0,0,1,0,0,0,5,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1710,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,2,0,0,4,10,0,14,0,0,16,74,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1711,            for (int i = startIndex; i >= 0; i--) {,2,0,0,1,3,0,0,0,0,2,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1712,                if (objectToFind.equals(array[i])) {,0,0,0,3,7,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1713,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1717,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1730,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",2,0,0,1,2,1,0,0,0,3,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1746,"        return indexOf(array, valueToFind, 0);",4,1,0,1,2,1,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1764,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1765,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1767,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1768,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1770,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1771,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1772,                return i;,4,0,0,0,0,1,0,0,0,4,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1775,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1789,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1807,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1808,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1810,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1811,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1812,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1813,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1815,        for (int i = startIndex; i >= 0; i--) {,10,1,0,1,3,0,0,0,0,13,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1816,            if (valueToFind == array[i]) {,6,2,1,2,5,0,0,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1817,                return i;,2,0,0,0,0,1,4,0,0,6,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1820,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1833,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1849,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1867,        if (array == null) {,8,1,0,1,3,0,4,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1868,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1870,        if (startIndex < 0) {,4,1,0,1,3,0,6,2,0,13,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1871,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1873,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1874,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1875,                return i;,4,1,0,0,0,1,4,0,0,9,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1878,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1892,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1910,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1911,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1913,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1914,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1915,        } else if (startIndex >= array.length) {,10,1,0,1,4,0,8,0,0,20,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1916,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1918,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1919,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1920,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1923,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1936,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",10,2,0,1,2,1,6,0,0,19,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1952,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1970,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1971,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1973,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1974,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1976,        for (int i = startIndex; i < array.length; i++) {,18,1,0,1,3,1,0,4,0,25,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1977,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1978,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1981,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1995,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2013,        if (array == null) {,2,0,0,1,3,0,12,2,0,17,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2014,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2016,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2017,            return INDEX_NOT_FOUND;,2,0,1,0,0,1,4,0,0,10,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2018,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2019,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2021,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2022,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2023,                return i;,4,0,0,0,0,1,4,0,0,8,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2026,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2039,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2056,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2075,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2076,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2078,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2079,            startIndex = 0;,2,1,0,0,0,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2081,        for (int i = startIndex; i < array.length; i++) {,20,2,0,1,3,0,0,0,0,25,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2082,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2083,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2086,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2101,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",8,0,1,1,2,1,6,0,0,22,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2120,        if (array == null) {,8,1,1,1,3,0,4,4,0,21,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2121,            return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2123,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2124,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2125,        } else if (startIndex >= array.length) {,8,1,0,1,4,0,0,0,0,9,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2126,            startIndex = array.length - 1;,8,1,0,0,0,0,0,0,0,12,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2128,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2129,            if (valueToFind == array[i]) {,2,1,1,2,5,0,8,0,0,15,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2130,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2133,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2147,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",4,1,0,1,2,1,6,0,0,11,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2163,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2181,        if (array == null) {,4,2,0,1,3,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2182,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2184,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2185,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2187,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2188,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2189,                return i;,4,1,0,0,0,1,0,0,0,6,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2192,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2206,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2224,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2225,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2227,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2228,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,4,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2229,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2230,            startIndex = array.length - 1;,4,1,0,0,0,0,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2232,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2233,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2234,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2237,        return INDEX_NOT_FOUND;,4,0,1,0,0,1,4,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2250,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2266,"        return indexOf(array, valueToFind, 0);",2,1,0,1,2,1,6,0,0,9,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2283,"        return indexOf(array, valueToFind, 0, tolerance);",0,0,0,1,2,1,8,0,0,8,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2301,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2302,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2304,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2305,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2307,        for (int i = startIndex; i < array.length; i++) {,16,1,0,1,3,0,0,0,0,20,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2308,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2309,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2312,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2333,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2334,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2336,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2337,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2339,        double min = valueToFind - tolerance;,6,1,0,0,0,0,0,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2340,        double max = valueToFind + tolerance;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2341,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2342,            if (array[i] >= min && array[i] <= max) {,6,3,1,3,7,0,0,0,0,17,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2343,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2346,        return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2360,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2377,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",4,1,0,1,2,1,12,0,0,17,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2395,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2396,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2398,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2399,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2400,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2401,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2403,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2404,            if (valueToFind == array[i]) {,2,1,1,2,5,0,4,0,0,11,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2405,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2408,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2429,        if (ArrayUtils.isEmpty(array)) {,6,0,0,2,5,0,10,0,0,16,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2430,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2432,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2433,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2434,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2435,            startIndex = array.length - 1;,10,2,0,0,0,0,0,0,0,14,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2437,        double min = valueToFind - tolerance;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2438,        double max = valueToFind + tolerance;,8,1,0,0,0,0,0,0,0,9,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2439,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2440,            if (array[i] >= min && array[i] <= max) {,0,0,0,3,7,0,0,0,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2441,                return i;,2,3,0,0,0,1,8,0,0,14,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2444,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2457,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2474,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;",8,2,0,1,2,1,14,2,0,26,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2490,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2508,        if (ArrayUtils.isEmpty(array)) {,4,0,0,2,5,0,6,0,0,11,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2509,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2511,        if (startIndex < 0) {,6,1,0,1,3,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2512,            startIndex = 0;,2,0,0,0,0,0,4,0,0,8,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2514,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2515,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2516,                return i;,4,1,0,0,0,1,0,0,0,5,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2519,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2533,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",10,1,0,1,2,1,0,0,0,12,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2551,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2552,            return INDEX_NOT_FOUND;,8,1,1,0,0,1,0,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2554,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2555,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2556,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2557,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2559,        for (int i = startIndex; i >= 0; i--) {,10,1,0,1,3,0,0,0,0,12,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2560,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2561,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2564,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2577,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,0,0,1,2,1,0,0,0,2,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2593,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2612,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2613,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2615,        if (startIndex < 0) {,8,2,0,1,3,0,0,0,0,11,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2616,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2618,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2619,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2620,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2623,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2638,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2656,        if (ArrayUtils.isEmpty(array)) {,4,0,0,2,5,0,6,0,0,11,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2657,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,6,0,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2659,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2660,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2661,        } else if (startIndex >= array.length) {,10,1,0,1,4,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2662,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2664,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2665,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2666,                return i;,12,4,0,0,0,1,0,0,0,16,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2669,        return INDEX_NOT_FOUND;,4,1,0,0,0,1,4,0,0,10,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2682,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2700,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2701,            return null;,12,7,1,0,0,1,0,0,0,22,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2702,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2703,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2705,        final char[] result = new char[array.length];,12,1,0,2,4,1,2,0,0,17,45,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2706,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,4,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2707,            result[i] = array[i].charValue();,0,0,0,3,6,0,0,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2709,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2722,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2723,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2724,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2725,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2727,        final char[] result = new char[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2728,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2729,            Character b = array[i];,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2730,            result[i] = (b == null ? valueForNull : b.charValue());,4,1,1,3,6,0,4,0,0,14,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2732,        return result;,2,1,0,0,0,1,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2744,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2745,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2746,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2747,            return EMPTY_CHARACTER_OBJECT_ARRAY;,10,6,0,0,0,1,0,0,0,16,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2749,        final Character[] result = new Character[array.length];,6,0,0,2,4,1,0,4,0,11,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2750,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2751,            result[i] = Character.valueOf(array[i]);,0,0,1,3,6,0,20,0,0,38,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2753,        return result;,2,0,0,0,0,1,0,0,0,3,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2768,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2769,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2770,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2771,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,4,0,0,6,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2773,        final long[] result = new long[array.length];,16,1,0,2,4,1,0,2,0,20,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2774,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,4,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2775,            result[i] = array[i].longValue();,0,0,0,3,6,0,0,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2777,        return result;,2,0,0,0,0,1,4,0,0,6,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2790,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2791,            return null;,10,1,0,0,0,1,0,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2792,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2793,            return EMPTY_LONG_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2795,        final long[] result = new long[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2796,        for (int i = 0; i < array.length; i++) {,14,1,0,1,3,0,0,2,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2797,            Long b = array[i];,4,1,0,1,2,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2798,            result[i] = (b == null ? valueForNull : b.longValue());,0,0,0,3,6,0,0,0,0,9,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2800,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2812,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2813,            return null;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2814,        } else if (array.length == 0) {,4,1,0,1,4,0,4,0,0,9,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2815,            return EMPTY_LONG_OBJECT_ARRAY;,0,1,0,0,0,1,10,0,0,12,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2817,        final Long[] result = new Long[array.length];,6,0,0,2,4,1,4,4,0,17,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2818,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2819,            result[i] = Long.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2821,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2836,        if (array == null) {,8,1,0,1,3,0,4,0,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2837,            return null;,2,0,0,0,0,1,6,0,0,9,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2838,        } else if (array.length == 0) {,6,2,0,1,4,0,0,0,0,8,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2839,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2841,        final int[] result = new int[array.length];,0,0,0,2,4,0,0,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2842,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2843,            result[i] = array[i].intValue();,0,0,0,3,6,0,0,0,0,9,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2845,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2858,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2859,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2860,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2861,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2863,        final int[] result = new int[array.length];,8,1,0,2,4,1,10,0,0,20,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2864,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,4,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2865,            Integer b = array[i];,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2866,            result[i] = (b == null ? valueForNull : b.intValue());,4,1,1,3,6,0,4,0,0,14,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2868,        return result;,6,2,0,0,0,1,4,0,0,13,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2880,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2881,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2882,        } else if (array.length == 0) {,12,1,0,1,4,0,8,0,0,21,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2883,            return EMPTY_INTEGER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2885,        final Integer[] result = new Integer[array.length];,6,0,0,2,4,1,0,4,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2886,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2887,            result[i] = Integer.valueOf(array[i]);,2,0,1,3,6,0,4,0,0,17,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2889,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2904,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2905,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2906,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2907,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2909,        final short[] result = new short[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2910,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2911,            result[i] = array[i].shortValue();,0,0,1,3,6,0,2,0,0,11,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2913,        return result;,2,0,0,0,0,1,6,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2926,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2927,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2928,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2929,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2931,        final short[] result = new short[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2932,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2933,            Short b = array[i];,2,0,1,1,2,0,0,2,0,8,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2934,            result[i] = (b == null ? valueForNull : b.shortValue());,0,0,0,3,6,0,0,0,0,9,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2936,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2948,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2949,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2950,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2951,            return EMPTY_SHORT_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2953,        final Short[] result = new Short[array.length];,8,0,0,2,4,1,0,4,0,13,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2954,        for (int i = 0; i < array.length; i++) {,10,1,1,1,3,0,4,0,0,20,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2955,            result[i] = Short.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2957,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2972,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2973,            return null;,8,1,0,0,0,1,0,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2974,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2975,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,6,0,0,8,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2977,        final byte[] result = new byte[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2978,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2979,            result[i] = array[i].byteValue();,0,0,1,3,6,0,2,0,0,11,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2981,        return result;,4,0,1,0,0,1,0,0,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2994,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2995,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2996,        } else if (array.length == 0) {,4,1,0,1,4,0,4,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2997,            return EMPTY_BYTE_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,2999,        final byte[] result = new byte[array.length];,8,0,1,2,4,1,0,0,0,15,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3000,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,1,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3001,            Byte b = array[i];,8,3,1,1,2,0,0,2,0,18,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3002,            result[i] = (b == null ? valueForNull : b.byteValue());,0,0,0,3,6,0,0,0,0,9,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3004,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3016,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3017,            return null;,2,0,0,0,0,1,0,0,0,4,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3018,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3019,            return EMPTY_BYTE_OBJECT_ARRAY;,6,1,0,0,0,1,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3021,        final Byte[] result = new Byte[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3022,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3023,            result[i] = Byte.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3025,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3040,        if (array == null) {,6,1,0,1,3,0,0,2,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3041,            return null;,10,4,0,0,0,1,4,0,0,18,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3042,        } else if (array.length == 0) {,4,1,0,1,4,0,6,0,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3043,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3045,        final double[] result = new double[array.length];,0,0,0,2,4,0,0,0,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3046,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3047,            result[i] = array[i].doubleValue();,2,0,1,3,6,0,2,0,0,14,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3049,        return result;,4,0,0,0,0,1,10,0,0,14,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3062,        if (array == null) {,2,2,0,1,3,0,10,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3063,            return null;,8,2,0,0,0,1,0,0,0,11,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3064,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3065,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3067,        final double[] result = new double[array.length];,4,0,0,2,4,0,0,0,0,5,49,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3068,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,4,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3069,            Double b = array[i];,2,0,1,1,2,0,0,2,0,8,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3070,            result[i] = (b == null ? valueForNull : b.doubleValue());,8,4,1,3,6,0,4,0,0,21,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3072,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3084,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3085,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3086,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,1,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3087,            return EMPTY_DOUBLE_OBJECT_ARRAY;,8,2,0,0,0,2,0,4,0,15,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3089,        final Double[] result = new Double[array.length];,6,0,0,2,4,1,8,4,0,19,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3090,        for (int i = 0; i < array.length; i++) {,4,1,0,1,3,0,0,0,0,5,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3091,            result[i] = Double.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,14,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3093,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3108,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3109,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3110,        } else if (array.length == 0) {,8,2,0,1,4,0,0,0,0,11,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3111,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3113,        final float[] result = new float[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3114,        for (int i = 0; i < array.length; i++) {,2,0,0,1,3,0,0,0,0,4,40,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3115,            result[i] = array[i].floatValue();,0,0,1,3,6,0,2,0,0,11,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3117,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3130,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3131,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3132,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3133,            return EMPTY_FLOAT_ARRAY;,2,4,1,0,0,1,0,0,0,14,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3135,        final float[] result = new float[array.length];,12,1,0,2,4,1,12,0,0,26,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3136,        for (int i = 0; i < array.length; i++) {,14,4,0,1,3,0,16,0,0,40,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3137,            Float b = array[i];,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3138,            result[i] = (b == null ? valueForNull : b.floatValue());,6,1,1,3,6,0,4,0,0,16,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3140,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3152,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3153,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3154,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3155,            return EMPTY_FLOAT_OBJECT_ARRAY;,12,2,0,0,0,1,0,0,0,14,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3157,        final Float[] result = new Float[array.length];,6,0,0,2,4,0,4,0,0,10,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3158,        for (int i = 0; i < array.length; i++) {,4,3,0,1,3,0,0,0,0,7,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3159,            result[i] = Float.valueOf(array[i]);,0,0,1,3,6,0,16,0,0,25,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3161,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3176,        if (array == null) {,2,1,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3177,            return null;,10,1,0,0,0,1,0,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3178,        } else if (array.length == 0) {,14,2,0,1,4,0,0,0,0,17,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3179,            return EMPTY_BOOLEAN_ARRAY;,8,1,0,0,0,1,10,0,0,19,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3181,        final boolean[] result = new boolean[array.length];,2,0,0,2,4,0,4,2,0,8,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3182,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3183,            result[i] = array[i].booleanValue();,0,0,0,3,6,0,0,0,0,9,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3185,        return result;,4,0,0,0,0,1,0,0,0,4,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3198,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3199,            return null;,2,1,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3200,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3201,            return EMPTY_BOOLEAN_ARRAY;,2,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3203,        final boolean[] result = new boolean[array.length];,8,0,0,2,4,1,4,2,0,15,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3204,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3205,            Boolean b = array[i];,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3206,            result[i] = (b == null ? valueForNull : b.booleanValue());,4,1,0,3,6,0,4,0,0,9,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3208,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3220,        if (array == null) {,8,4,0,1,3,0,8,0,0,21,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3221,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3222,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3223,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,6,0,0,0,0,1,0,0,0,7,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3225,        final Boolean[] result = new Boolean[array.length];,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3226,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3227,            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);,16,3,1,3,6,0,8,0,0,38,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3229,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3241,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3242,            return true;,2,1,0,0,0,1,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3244,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3255,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3256,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3258,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3269,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3270,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3272,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3283,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3284,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3286,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3297,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3298,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3300,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3311,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3312,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3314,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3325,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3326,            return true;,4,0,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3328,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3339,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3340,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3342,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3353,        if (array == null || array.length == 0) {,10,4,0,1,3,1,4,0,0,19,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3354,            return true;,6,1,0,0,0,1,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3356,        return false;,6,4,0,0,0,1,4,2,0,17,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3368,         return (array != null && array.length != 0);,1,0,0,1,2,1,0,0,0,1,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3379,        return (array != null && array.length != 0);,0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3390,        return (array != null && array.length != 0);,6,3,0,1,2,1,0,0,0,9,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3401,        return (array != null && array.length != 0);,10,3,0,1,2,1,0,4,0,17,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3412,        return (array != null && array.length != 0);,6,3,0,1,2,1,0,0,0,9,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3423,        return (array != null && array.length != 0);,2,1,0,1,2,1,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3434,        return (array != null && array.length != 0);,0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3445,        return (array != null && array.length != 0);,0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3456,        return (array != null && array.length != 0);,2,1,0,1,2,1,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3483,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3484,            return clone(array2);,2,1,0,1,2,1,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3485,        } else if (array2 == null) {,4,1,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3486,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3488,        final Class<?> type1 = array1.getClass().getComponentType();,2,0,0,2,4,1,14,2,0,20,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3490,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",0,0,0,4,8,0,0,0,0,12,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3491,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3493,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",2,1,0,1,2,0,0,0,0,3,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3506,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3494,        } catch (ArrayStoreException ase) {,0,0,0,1,4,0,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3501,            final Class<?> type2 = array2.getClass().getComponentType();,10,7,0,2,4,1,22,2,0,44,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3502,            if (!type1.isAssignableFrom(type2)){,0,0,0,2,5,0,6,0,0,7,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3503,"                throw new IllegalArgumentException(""Cannot store ""+type2.getName()+"" in an array of ""+type1.getName(), ase);",2,1,0,3,6,0,8,2,0,15,108,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3505,"            throw ase; // No, so rethrow original",0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3507,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3528,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3529,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3530,        } else if (array2 == null) {,4,1,0,1,4,0,10,0,0,15,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3531,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3533,        boolean[] joinedArray = new boolean[array1.length + array2.length];,14,1,0,2,4,0,2,0,0,17,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3534,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,1,0,1,2,0,8,0,0,15,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3535,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3536,        return joinedArray;,4,0,0,0,0,1,0,0,0,4,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3557,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3558,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3559,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3560,            return clone(array1);,2,0,0,1,2,1,4,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3562,        char[] joinedArray = new char[array1.length + array2.length];,14,1,1,2,4,0,0,0,0,18,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3563,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",12,1,0,1,2,0,8,0,0,23,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3564,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3565,        return joinedArray;,4,0,0,0,0,1,12,2,0,20,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3586,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3587,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3588,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3589,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3591,        byte[] joinedArray = new byte[array1.length + array2.length];,12,2,0,2,4,0,0,0,0,14,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3592,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3593,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3594,        return joinedArray;,2,0,0,0,0,1,6,0,0,8,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3615,        if (array1 == null) {,6,2,0,1,3,0,16,0,0,25,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3616,            return clone(array2);,2,0,0,1,2,1,4,0,0,6,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3617,        } else if (array2 == null) {,6,4,0,1,4,0,0,0,0,10,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3618,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3620,        short[] joinedArray = new short[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3621,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3622,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",10,1,1,1,2,0,8,0,0,24,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3623,        return joinedArray;,6,3,0,0,0,1,8,0,0,18,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3644,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3645,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3646,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3647,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3649,        int[] joinedArray = new int[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3650,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,0,1,1,2,0,12,0,0,23,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3651,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3652,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3673,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3674,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3675,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3676,            return clone(array1);,4,0,0,1,2,1,4,0,0,9,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3678,        long[] joinedArray = new long[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3679,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3680,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3681,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3702,        if (array1 == null) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3703,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3704,        } else if (array2 == null) {,4,2,0,1,4,0,0,0,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3705,            return clone(array1);,2,0,0,1,2,1,0,0,0,2,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3707,        float[] joinedArray = new float[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3708,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,0,0,1,2,0,8,0,0,14,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3709,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3710,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3731,        if (array1 == null) {,2,1,0,1,3,0,4,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3732,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3733,        } else if (array2 == null) {,4,0,0,1,4,0,0,0,0,5,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3734,            return clone(array1);,2,0,0,1,2,1,0,0,0,2,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3736,        double[] joinedArray = new double[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3737,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3738,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3739,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3772,        if (array != null){,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3773,            type = array.getClass();,8,0,0,1,2,0,4,0,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3774,        } else if (element != null) {,6,2,0,1,4,0,4,0,0,12,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3775,            type = element.getClass();,2,0,0,1,2,0,4,0,0,7,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3777,"            throw new IllegalArgumentException(""Arguments cannot both be null"");            ",4,0,0,1,2,0,0,4,0,10,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3780,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",0,0,0,4,8,0,0,0,0,12,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3781,        newArray[newArray.length - 1] = element;,8,2,1,1,2,0,0,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3782,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3807,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",6,0,0,4,8,0,4,0,0,10,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3808,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3809,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3834,"        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);",0,0,0,4,8,0,0,0,0,12,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3835,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3836,        return newArray;,4,0,1,0,0,1,0,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3861,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",10,0,0,4,8,0,10,0,0,20,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3862,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3863,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3888,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);",0,0,0,4,8,0,0,0,0,12,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3889,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3890,        return newArray;,4,1,0,0,0,1,0,0,0,5,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3915,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);",6,0,0,4,8,0,4,0,0,10,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3916,        newArray[newArray.length - 1] = element;,16,3,1,1,2,0,6,0,0,30,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3917,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3942,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",6,0,0,4,8,0,4,0,0,10,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3943,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3944,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3969,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",2,0,0,4,8,0,6,0,0,8,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3970,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3971,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3996,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);",6,0,0,4,8,0,4,0,0,10,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3997,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,3998,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4011,        if (array != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4012,            int arrayLength = Array.getLength(array);,4,0,0,1,2,0,16,0,0,20,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4013,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);",4,1,0,3,6,0,10,2,0,17,90,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4014,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",8,1,0,1,2,0,6,0,0,15,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4015,            return newArray;,2,0,0,0,0,1,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4017,"        return Array.newInstance(newArrayComponentType, 1);",0,0,0,1,2,1,6,0,0,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4050,        Class<?> clss = null;,2,0,0,0,0,0,0,2,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4051,        if (array != null) {,8,3,0,1,3,0,6,0,0,18,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4052,            clss = array.getClass().getComponentType();,0,0,0,2,4,0,0,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4053,        } else if (element != null) {,0,0,0,1,4,0,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4054,            clss = element.getClass();,2,0,0,1,2,0,8,0,0,11,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4056,"            throw new IllegalArgumentException(""Array and element cannot both be null"");            ",2,1,0,1,2,0,0,2,0,7,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4059,"        final T[] newArray = (T[]) add(array, index, element, clss);",4,1,0,4,8,1,10,4,0,20,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4060,        return newArray;,4,1,0,0,0,1,6,0,0,11,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4091,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",0,0,0,4,8,1,0,0,0,13,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4123,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",8,1,0,4,8,1,6,0,0,16,78,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4154,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",4,0,0,4,8,1,12,0,0,16,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4185,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);",0,0,0,4,8,1,0,0,0,13,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4216,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);",4,0,0,4,8,1,12,0,0,16,73,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4247,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",4,0,0,4,8,1,12,0,0,17,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4278,"        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);",0,0,0,4,8,1,0,0,0,13,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4309,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);",4,0,0,4,8,1,12,0,0,16,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4324,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4325,            if (index != 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4326,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",8,5,0,1,2,0,4,4,0,23,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4328,"            Object joinedArray = Array.newInstance(clss, 1);",8,1,0,1,2,0,0,0,0,10,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4329,"            Array.set(joinedArray, 0, element);",10,1,0,1,2,0,0,0,0,12,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4330,            return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4332,        int length = Array.getLength(array);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4333,        if (index > length || index < 0) {,6,3,0,1,3,0,0,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4334,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",16,6,0,1,2,0,4,2,0,31,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4336,"        Object result = Array.newInstance(clss, length + 1);",10,4,0,1,2,0,6,2,0,22,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4337,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,1,2,0,10,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4338,"        Array.set(result, index, element);",0,0,0,1,2,0,10,0,0,10,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4339,        if (index < length) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4340,"            System.arraycopy(array, index, result, index + 1, length - index);",8,3,0,1,2,0,14,0,0,25,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4342,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4375,"        return (T[]) remove((Object) array, index);",6,0,0,4,8,1,4,4,0,14,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4404,"        int index = indexOf(array, element);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4405,        if (index == INDEX_NOT_FOUND) {,6,1,0,1,3,0,0,0,0,7,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4406,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4408,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4440,"        return (boolean[]) remove((Object) array, index);",4,1,0,4,8,1,4,2,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4469,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4470,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4471,            return clone(array);,6,3,0,1,2,1,4,0,0,14,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4473,"        return remove(array, index);",2,1,0,1,2,1,6,0,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4505,"        return (byte[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4534,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4535,        if (index == INDEX_NOT_FOUND) {,10,4,0,1,3,0,0,0,0,14,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4536,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4538,"        return remove(array, index);",2,0,0,1,2,1,0,0,0,2,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4570,"        return (char[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4599,"        int index = indexOf(array, element);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4600,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4601,            return clone(array);,2,0,0,1,2,1,4,0,0,6,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4603,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4635,"        return (double[]) remove((Object) array, index);",4,0,0,4,8,1,4,2,0,10,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4664,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4665,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4666,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4668,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,1,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4700,"        return (float[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4729,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4730,        if (index == INDEX_NOT_FOUND) {,10,3,0,1,3,0,4,0,0,18,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4731,            return clone(array);,2,0,0,1,2,1,4,0,0,6,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4733,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4765,"        return (int[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4794,"        int index = indexOf(array, element);",6,0,0,1,2,0,10,0,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4795,        if (index == INDEX_NOT_FOUND) {,12,2,0,1,3,0,0,0,0,15,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4796,            return clone(array);,2,1,0,1,2,1,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4798,"        return remove(array, index);",4,0,0,1,2,1,0,4,0,8,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4830,"        return (long[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4859,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4860,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4861,            return clone(array);,2,1,0,1,2,1,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4863,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4895,"        return (short[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4924,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4925,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4926,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4928,"        return remove(array, index);",4,1,0,1,2,1,0,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4953,        int length = getLength(array);,2,0,0,1,2,0,8,0,0,10,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4954,        if (index < 0 || index >= length) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4955,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",0,0,0,1,2,0,0,0,0,3,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4958,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);",0,0,0,3,6,0,0,0,0,9,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4959,"        System.arraycopy(array, 0, result, 0, index);",2,1,0,1,2,0,10,0,0,13,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4960,        if (index < length - 1) {,4,2,0,1,3,0,0,0,0,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4961,"            System.arraycopy(array, index + 1, result, index, length - index - 1);",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,4964,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,155,        return ReflectionToStringBuilder.toString(object);,0,0,0,1,2,1,6,0,0,6,50,5,135.2,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,123,"        return toString(object, null, false, false, null);",0,0,0,1,2,1,4,0,0,7,50,4,112.66667,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,473,"        super(object, style, buffer);",6,0,0,1,2,0,0,0,0,6,29,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,474,        this.setUpToClass(reflectUpToClass);,0,0,0,1,2,0,4,0,0,4,36,5,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,475,        this.setAppendTransients(outputTransients);,0,0,0,1,2,0,4,0,0,4,43,5,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,476,        this.setAppendStatics(outputStatics);,0,0,0,1,2,0,4,0,0,4,37,5,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,477,    },0,0,0,0,1,0,0,0,0,1,1,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,290,"        return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)",12,1,0,1,2,1,0,2,0,16,108,3,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,636,        this.appendStatics = appendStatics;,4,0,0,0,0,0,0,0,0,5,35,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,637,    },0,0,0,0,1,0,0,0,0,1,1,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,648,        this.appendTransients = appendTransients;,4,0,0,0,0,0,0,0,0,5,41,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,649,    },0,0,0,0,1,0,0,0,0,1,1,4,75.11111,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,923,        buffer.append(arrayStart);,0,0,0,1,2,0,6,0,0,6,26,5,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,924,        int length = Array.getLength(array);,2,1,0,1,2,0,0,0,0,3,36,4,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,925,        for (int i = 0; i < length; i++) {,10,1,1,1,3,0,0,0,0,15,34,3,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,926,"            Object item = Array.get(array, i);",2,0,0,1,2,0,8,2,0,12,34,6,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,927,            if (i > 0) {,2,1,0,1,3,0,0,0,0,3,12,6,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,930,            if (item == null) {,4,1,0,1,3,3,2,2,0,13,19,1,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,934,"                appendInternal(buffer, fieldName, item, arrayContentDetail);",2,0,0,1,2,0,10,0,0,13,60,3,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,937,        buffer.append(arrayEnd);,2,0,0,1,2,0,12,2,0,16,24,3,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,938,    },0,0,0,0,1,0,0,0,0,1,1,4,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,527,            this.reflectionAppendArray(this.getObject());,0,0,0,2,4,0,4,0,0,4,45,7,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,528,            return;,0,0,0,0,0,1,0,0,0,1,7,4,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,622,"        this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);",0,0,0,3,6,0,8,0,0,8,81,5,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,623,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,73.5,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,683,        this.upToClass = clazz;,4,0,0,0,0,0,0,0,0,5,23,4,67.6,0,0
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,684,    },2,3,0,0,1,0,8,0,0,15,1,10,67.6,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3290,        if (array != null){,8,3,0,1,3,0,0,0,0,11,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3298,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",0,0,0,4,8,0,0,0,0,12,49,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3299,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3300,        return newArray;,6,3,0,0,0,1,4,0,0,13,16,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3535,"        return Array.newInstance(newArrayComponentType, 1);",2,0,0,1,2,1,10,0,0,12,51,3,0.125,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3529,        if (array != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.1,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,58,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,62,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,66,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,70,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,74,    public static final int[] EMPTY_INT_ARRAY = new int[0];,4,0,0,2,4,3,6,2,0,15,55,1,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,78,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,82,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,86,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,90,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,2,1,0,2,4,0,0,0,0,3,58,4,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,94,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,98,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,102,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,2,0,0,2,4,0,0,0,0,2,71,6,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,106,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,110,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,114,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,118,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,122,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,126,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.00303,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,143,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,144,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,160,"        return toString(array, ""{}"");",0,0,0,2,4,1,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,176,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,177,            return stringIfNull;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,179,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",6,0,0,3,6,1,6,2,0,14,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,193,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,3,6,1,8,2,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,224,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,225,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,227,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",6,1,0,3,6,1,0,12,0,20,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,228,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,229,            Object object = array[i];,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,230,"            if (object instanceof Map.Entry<?, ?>) {",6,0,0,1,3,0,0,0,0,6,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,231,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,232,"                map.put(entry.getKey(), entry.getValue());",0,0,0,3,6,0,0,0,0,9,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,233,            } else if (object instanceof Object[]) {,0,0,0,2,6,0,0,0,0,8,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,234,                Object[] entry = (Object[]) object;,6,0,0,3,6,0,12,4,0,23,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,235,                if (entry.length < 2) {,4,1,0,1,3,0,0,0,0,5,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,236,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,240,"                map.put(entry[0], entry[1]);",0,0,0,3,6,0,0,0,0,9,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,241,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,242,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",0,0,0,0,1,0,0,0,0,1,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,247,        return map;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,292,        return items;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,310,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,311,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,313,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,326,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,327,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,329,        return array.clone();,0,0,0,1,2,1,8,0,0,8,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,342,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,343,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,345,        return array.clone();,0,0,1,1,2,1,8,0,0,12,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,358,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,359,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,361,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,374,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,375,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,377,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,390,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,391,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,393,        return array.clone();,2,1,0,1,2,1,14,0,0,18,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,406,        if (array == null) {,4,1,0,1,3,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,407,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,409,        return array.clone();,0,1,0,1,2,1,12,0,0,14,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,422,        if (array == null) {,2,1,0,1,3,0,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,423,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,425,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,438,        if (array == null) {,4,1,0,1,3,0,0,4,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,439,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,441,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,474,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,475,            return null;,2,1,1,0,0,1,2,0,0,9,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,477,        if (startIndexInclusive < 0) {,4,1,0,1,3,0,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,478,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,480,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,481,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,483,        int newSize = endIndexExclusive - startIndexInclusive;,4,0,0,0,0,3,0,4,0,12,54,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,484,        Class<?> type = array.getClass().getComponentType();,4,0,0,2,4,3,10,4,0,21,52,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,485,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,487,"            final T[] emptyArray = (T[]) Array.newInstance(type, 0);",2,0,0,4,8,0,0,0,0,2,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,488,            return emptyArray;,6,0,0,0,0,1,0,2,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,491,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",0,0,0,4,8,0,0,0,0,12,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,492,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,493,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,516,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,517,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,519,        if (startIndexInclusive < 0) {,6,3,0,1,3,0,0,0,0,10,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,520,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,522,        if (endIndexExclusive > array.length) {,8,1,0,1,3,0,0,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,523,            endIndexExclusive = array.length;,10,3,0,0,0,0,0,0,0,14,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,525,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,1,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,526,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,527,            return EMPTY_LONG_ARRAY;,4,2,0,0,0,1,6,0,0,12,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,530,        long[] subarray = new long[newSize];,2,0,1,2,4,0,0,0,0,5,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,531,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,532,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,555,        if (array == null) {,4,1,1,1,3,0,0,2,0,11,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,556,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,558,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,559,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,561,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,562,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,564,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,565,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,566,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,569,        int[] subarray = new int[newSize];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,570,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,0,0,1,2,2,4,2,0,11,67,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,571,        return subarray;,4,0,0,0,0,3,0,2,0,9,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,594,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,595,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,597,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,598,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,600,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,601,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,603,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,604,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,605,            return EMPTY_SHORT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,608,        short[] subarray = new short[newSize];,2,0,1,2,4,0,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,609,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,0,0,1,2,0,12,0,0,14,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,610,        return subarray;,2,1,0,0,0,1,4,0,0,7,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,633,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,634,            return null;,2,0,0,0,0,4,2,2,0,10,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,636,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,637,            startIndexInclusive = 0;,4,0,0,0,0,0,4,8,0,17,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,639,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,640,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,642,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,643,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,644,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,647,        char[] subarray = new char[newSize];,2,0,1,2,4,0,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,648,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,649,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,672,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,673,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,675,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,676,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,678,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,679,            endIndexExclusive = array.length;,6,0,0,0,0,0,8,0,0,15,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,681,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,682,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,683,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,686,        byte[] subarray = new byte[newSize];,2,0,1,2,4,0,0,0,0,4,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,687,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,688,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,711,        if (array == null) {,8,2,0,1,3,0,0,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,712,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,714,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,715,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,717,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,718,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,720,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,721,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,722,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,10,0,0,10,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,725,        double[] subarray = new double[newSize];,6,3,1,2,4,0,0,0,0,11,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,726,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,0,0,1,2,0,18,0,0,20,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,727,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,750,        if (array == null) {,2,0,0,1,3,0,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,751,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,753,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,754,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,756,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,757,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,759,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,760,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,761,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,764,        float[] subarray = new float[newSize];,2,0,1,2,4,0,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,765,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,766,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,789,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,790,            return null;,4,0,0,0,0,1,4,0,0,8,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,792,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,793,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,795,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,796,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,798,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,10,0,0,10,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,799,        if (newSize <= 0) {,8,2,0,1,3,0,0,0,0,10,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,800,            return EMPTY_BOOLEAN_ARRAY;,4,0,0,0,0,1,4,2,0,11,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,803,        boolean[] subarray = new boolean[newSize];,0,0,0,2,4,0,0,0,0,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,804,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,0,0,1,2,0,12,0,0,14,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,805,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,822,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,825,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,827,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,840,        if ((array1 == null && array2 != null && array2.length > 0) ||,10,7,1,1,3,0,0,0,0,21,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,843,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,845,        return true;,2,0,0,0,0,1,4,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,858,        if ((array1 == null && array2 != null && array2.length > 0) ||,10,6,0,1,3,0,0,0,0,16,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,861,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,863,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,876,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,879,                return false;,0,1,0,0,0,1,4,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,881,        return true;,2,3,0,0,0,1,8,0,0,14,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,894,        if ((array1 == null && array2 != null && array2.length > 0) ||,10,6,1,1,3,0,4,0,0,24,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,897,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,899,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,912,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,915,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,917,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,930,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,933,                return false;,8,0,0,0,0,1,0,2,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,935,        return true;,0,0,0,0,0,1,0,0,0,2,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,948,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,951,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,953,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,966,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,969,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,971,        return true;,0,0,0,0,0,1,8,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,996,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,997,            return 0;,2,0,0,0,0,1,0,0,0,3,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,999,        return Array.getLength(array);,0,0,0,1,2,1,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1012,        if (array1 == null || array2 == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1013,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,2,2,0,6,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1015,        return array1.getClass().getName().equals(array2.getClass().getName());,0,0,0,5,10,1,14,0,0,14,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1030,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1031,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1033,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1034,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1036,        while (j > i) {,0,0,0,1,3,0,0,0,0,1,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1037,            tmp = array[j];,4,1,1,1,2,0,0,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1038,            array[j] = array[i];,2,0,0,2,4,0,8,0,0,11,20,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1039,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1040,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1041,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1043,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1053,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1054,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1056,        int i = 0;,8,3,0,0,0,0,0,0,0,11,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1057,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1059,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1060,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1061,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1062,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1063,            j--;,4,0,0,0,0,0,6,0,0,11,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1064,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1066,    },0,0,0,0,1,0,0,2,0,3,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1076,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1077,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1079,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1080,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1082,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1083,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1084,            array[j] = array[i];,6,1,0,2,4,0,8,0,0,16,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1085,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1086,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1087,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1089,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1099,        if (array == null) {,4,1,0,1,3,0,0,2,0,7,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1100,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1102,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1103,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1105,        while (j > i) {,12,6,1,1,3,0,4,0,0,24,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1106,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1107,            array[j] = array[i];,2,0,0,2,4,0,4,2,0,8,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1108,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1109,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1110,            i++;,6,1,1,0,0,0,6,0,0,18,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1112,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1122,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1123,            return;,0,0,0,0,0,1,0,0,0,1,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1125,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1126,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1128,        while (j > i) {,14,2,0,1,3,0,0,0,0,17,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1129,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1130,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1131,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1132,            j--;,2,0,0,0,0,0,0,0,0,4,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1133,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1135,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1145,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1146,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1148,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1149,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1151,        while (j > i) {,6,1,0,1,3,0,4,2,0,14,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1152,            tmp = array[j];,2,0,1,1,2,0,0,0,0,8,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1153,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1154,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1155,            j--;,4,0,0,0,0,0,8,0,0,13,4,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1156,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1158,    },0,0,0,0,1,0,10,0,0,10,1,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1168,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1169,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1171,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1172,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1174,        while (j > i) {,10,4,1,1,3,0,0,0,0,19,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1175,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1176,            array[j] = array[i];,2,2,1,2,4,0,8,0,0,21,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1177,            array[i] = tmp;,6,1,1,1,2,0,0,0,0,12,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1178,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1179,            i++;,6,0,0,0,0,0,8,0,0,16,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1181,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1191,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1192,            return;,2,0,0,0,0,1,0,0,0,2,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1194,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1195,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1197,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1198,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1199,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1200,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1201,            j--;,6,3,0,0,0,0,2,0,0,12,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1202,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1204,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1214,        if (array == null) {,4,3,0,1,3,0,0,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1215,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1217,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1218,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1220,        while (j > i) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1221,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1222,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1223,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1224,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1225,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1227,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1245,"        return indexOf(array, objectToFind, 0);",2,1,0,1,2,1,6,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1263,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1264,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1266,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1267,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1269,        if (objectToFind == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1270,            for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,12,0,0,12,49,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1271,                if (array[i] == null) {,8,1,1,2,5,0,0,2,0,16,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1272,                    return i;,4,1,0,0,0,1,4,0,0,10,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1275,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,2,0,0,4,10,0,0,0,0,3,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1276,            for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1277,                if (objectToFind.equals(array[i])) {,4,0,0,3,7,0,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1278,                    return i;,2,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1282,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1296,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1314,        if (array == null) {,2,1,0,1,3,0,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1315,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1317,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1318,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1319,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1320,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1322,        if (objectToFind == null) {,4,1,0,1,3,0,0,0,0,5,27,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1323,            for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1324,                if (array[i] == null) {,0,0,0,2,5,0,4,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1325,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1328,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,4,10,0,10,0,0,10,74,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1329,            for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1330,                if (objectToFind.equals(array[i])) {,2,0,1,3,7,0,16,0,0,32,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1331,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1335,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1348,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1364,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1382,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1383,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1385,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1386,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1388,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1389,            if (valueToFind == array[i]) {,2,0,0,2,5,0,0,0,0,3,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1390,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1393,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,4,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1407,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1425,        if (array == null) {,6,1,1,1,3,2,4,4,0,21,20,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1426,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,4,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1428,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1429,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1430,        } else if (startIndex >= array.length) {,2,0,0,1,4,0,0,0,0,2,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1431,            startIndex = array.length - 1;,8,2,0,0,0,0,0,0,0,11,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1433,        for (int i = startIndex; i >= 0; i--) {,2,0,0,1,3,0,0,4,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1434,            if (valueToFind == array[i]) {,2,0,0,2,5,0,0,0,0,2,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1435,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1438,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1451,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,0,0,1,2,1,0,0,0,2,54,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1467,"        return indexOf(array, valueToFind, 0);",2,0,0,1,2,1,6,4,0,12,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1485,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1486,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1488,        if (startIndex < 0) {,2,1,0,1,3,0,2,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1489,            startIndex = 0;,8,1,0,0,0,0,0,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1491,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1492,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1493,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1496,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1510,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1528,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1529,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1531,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1532,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1533,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1534,            startIndex = array.length - 1;,10,1,0,0,0,0,0,2,0,14,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1536,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1537,            if (valueToFind == array[i]) {,4,1,1,2,5,0,0,0,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1538,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1541,        return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,3,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1554,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1570,"        return indexOf(array, valueToFind, 0);",2,0,0,1,2,1,4,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1588,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1589,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,6,0,0,9,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1591,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1592,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1594,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1595,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1596,                return i;,4,0,0,0,0,1,0,0,0,4,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1599,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,12,0,0,14,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1613,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,1,0,1,2,1,0,0,0,3,58,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1631,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1632,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1634,        if (startIndex < 0) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1635,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1636,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1637,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1639,        for (int i = startIndex; i >= 0; i--) {,16,4,0,1,3,0,6,0,0,28,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1640,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1641,                return i;,8,4,0,0,0,1,4,0,0,16,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1644,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1657,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1674,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1693,        if (array == null) {,2,0,0,1,3,0,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1694,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1696,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1697,            startIndex = 0;,8,2,0,0,0,0,0,0,0,11,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1699,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1700,            if (valueToFind == array[i]) {,2,1,1,2,5,0,4,0,0,12,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1701,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1704,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1719,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1738,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1739,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1741,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1742,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1743,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1744,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1746,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1747,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1748,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1751,        return INDEX_NOT_FOUND;,8,0,0,0,0,1,0,0,0,9,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1765,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1781,"        return indexOf(array, valueToFind, 0);",4,1,0,1,2,1,6,0,0,11,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1799,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1800,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1802,        if (startIndex < 0) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1803,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1805,        for (int i = startIndex; i < array.length; i++) {,14,1,0,1,3,0,0,0,0,18,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1806,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1807,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1810,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1824,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,1,0,1,2,1,0,0,0,3,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1842,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1843,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1845,        if (startIndex < 0) {,6,2,0,1,3,0,10,0,0,18,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1846,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1847,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1848,            startIndex = array.length - 1;,10,2,0,0,0,0,0,0,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1850,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1851,            if (valueToFind == array[i]) {,4,2,1,2,5,0,0,0,0,11,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1852,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1855,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1868,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",4,0,0,1,2,1,0,0,0,4,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1884,"        return indexOf(array, valueToFind, 0);",12,1,0,1,2,1,6,0,0,20,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1901,"        return indexOf(array, valueToFind, 0, tolerance);",0,0,0,1,2,1,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1919,        if (ArrayUtils.isEmpty(array)) {,2,1,0,2,5,0,6,0,0,9,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1920,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,8,0,0,8,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1922,        if (startIndex < 0) {,6,2,0,1,3,0,4,0,0,13,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1923,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1925,        for (int i = startIndex; i < array.length; i++) {,14,1,0,1,3,0,12,0,0,28,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1926,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1927,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1930,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1951,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1952,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1954,        if (startIndex < 0) {,0,0,0,1,3,0,12,0,0,12,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1955,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1957,        double min = valueToFind - tolerance;,2,1,0,0,0,0,0,0,0,3,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1958,        double max = valueToFind + tolerance;,8,2,0,0,0,0,10,2,0,22,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1959,        for (int i = startIndex; i < array.length; i++) {,14,1,0,1,3,0,0,0,0,16,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1960,            if (array[i] >= min && array[i] <= max) {,4,3,1,3,7,0,0,0,0,15,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1961,                return i;,4,1,0,0,0,1,4,0,0,10,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1964,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1978,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,1995,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",8,0,0,1,2,1,8,0,0,17,69,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2013,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2014,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2016,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,4,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2017,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2018,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,20,2,0,22,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2019,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2021,        for (int i = startIndex; i >= 0; i--) {,14,1,0,1,3,0,4,0,0,21,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2022,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2023,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2026,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2047,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2048,            return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2050,        if (startIndex < 0) {,2,1,0,1,3,0,6,0,0,9,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2051,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,4,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2052,        } else if (startIndex >= array.length) {,8,1,0,1,4,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2053,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2055,        double min = valueToFind - tolerance;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2056,        double max = valueToFind + tolerance;,6,1,0,0,0,0,0,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2057,        for (int i = startIndex; i >= 0; i--) {,10,1,0,1,3,0,0,0,0,12,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2058,            if (array[i] >= min && array[i] <= max) {,10,3,1,3,7,0,4,0,0,26,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2059,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2062,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,8,0,0,14,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2075,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2092,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2108,"        return indexOf(array, valueToFind, 0);",0,3,0,1,2,1,12,0,0,15,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2126,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2127,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2129,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2130,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2132,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2133,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2134,                return i;,10,1,0,0,0,1,0,0,0,12,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2137,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2151,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2169,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2170,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2172,        if (startIndex < 0) {,4,0,0,1,3,0,0,0,0,5,21,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2173,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2174,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2175,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2177,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2178,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2179,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2182,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2195,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2211,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2230,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2231,            return INDEX_NOT_FOUND;,10,1,0,0,0,1,0,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2233,        if (startIndex < 0) {,2,1,0,1,3,0,8,2,0,13,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2234,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2236,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2237,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2238,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2241,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,3,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2256,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",2,0,0,1,2,1,6,0,0,8,58,18,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2274,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2275,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2277,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2278,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2279,        } else if (startIndex >= array.length) {,8,1,0,1,4,0,0,0,0,9,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2280,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2282,        for (int i = startIndex; i >= 0; i--) {,12,2,0,1,3,0,0,0,0,15,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2283,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2284,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2287,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2300,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2318,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2319,            return null;,10,2,0,0,0,1,0,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2320,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2321,            return EMPTY_CHAR_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2323,        final char[] result = new char[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2324,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2325,            result[i] = array[i].charValue();,2,2,1,3,6,0,12,0,0,25,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2327,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2340,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2341,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2342,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2343,            return EMPTY_CHAR_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2345,        final char[] result = new char[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2346,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2347,            Character b = array[i];,4,0,0,1,2,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2348,            result[i] = (b == null ? valueForNull : b.charValue());,0,0,0,3,6,0,0,0,0,9,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2350,        return result;,2,0,0,0,0,1,6,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2362,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2363,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2364,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2365,            return EMPTY_CHARACTER_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2367,        final Character[] result = new Character[array.length];,0,0,0,2,4,0,0,0,0,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2368,        for (int i = 0; i < array.length; i++) {,0,1,1,1,3,0,0,0,0,5,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2369,            result[i] = Character.valueOf(array[i]);,2,1,0,3,6,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2371,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2386,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2387,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2388,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2389,            return EMPTY_LONG_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2391,        final long[] result = new long[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2392,        for (int i = 0; i < array.length; i++) {,8,1,0,1,3,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2393,            result[i] = array[i].longValue();,0,0,1,3,6,0,8,0,0,17,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2395,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2408,        if (array == null) {,14,1,0,1,3,0,0,0,0,17,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2409,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2410,        } else if (array.length == 0) {,0,0,0,1,4,0,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2411,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2413,        final long[] result = new long[array.length];,8,0,0,2,4,1,0,0,0,9,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2414,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,6,0,0,20,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2415,            Long b = array[i];,2,0,1,1,2,0,0,2,0,8,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2416,            result[i] = (b == null ? valueForNull : b.longValue());,12,2,1,3,6,0,4,0,0,24,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2418,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2430,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2431,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2432,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2433,            return EMPTY_LONG_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2435,        final Long[] result = new Long[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2436,        for (int i = 0; i < array.length; i++) {,8,1,0,1,3,0,0,2,0,11,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2437,            result[i] = Long.valueOf(array[i]);,6,1,1,3,6,0,12,0,0,29,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2439,        return result;,2,0,1,0,0,1,4,0,0,10,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2454,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2455,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2456,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2457,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2459,        final int[] result = new int[array.length];,4,1,0,2,4,0,0,0,0,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2460,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2461,            result[i] = array[i].intValue();,2,1,1,3,6,0,14,0,0,31,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2463,        return result;,6,1,0,0,0,1,0,0,0,7,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2476,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2477,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2478,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2479,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2481,        final int[] result = new int[array.length];,6,0,0,2,4,1,0,0,0,7,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2482,        for (int i = 0; i < array.length; i++) {,14,4,0,1,3,0,0,0,0,19,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2483,            Integer b = array[i];,2,0,1,1,2,0,0,2,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2484,            result[i] = (b == null ? valueForNull : b.intValue());,4,1,1,3,6,0,4,0,0,14,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2486,        return result;,12,1,0,0,0,1,0,0,0,15,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2498,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2499,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2500,        } else if (array.length == 0) {,6,1,0,1,4,0,4,0,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2501,            return EMPTY_INTEGER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2503,        final Integer[] result = new Integer[array.length];,6,0,0,2,4,1,0,4,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2504,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2505,            result[i] = Integer.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2507,        return result;,16,4,0,0,0,1,0,0,0,20,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2522,        if (array == null) {,2,1,0,1,3,0,8,2,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2523,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2524,        } else if (array.length == 0) {,10,4,0,1,4,0,0,0,0,14,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2525,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2527,        final short[] result = new short[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2528,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2529,            result[i] = array[i].shortValue();,0,0,1,3,6,0,2,0,0,11,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2531,        return result;,4,1,0,0,0,1,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2544,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2545,            return null;,4,1,0,0,0,1,0,0,0,5,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2546,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2547,            return EMPTY_SHORT_ARRAY;,4,1,0,0,0,1,6,0,0,11,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2549,        final short[] result = new short[array.length];,8,0,0,2,4,1,12,0,0,22,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2550,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,10,0,0,22,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2551,            Short b = array[i];,4,0,1,1,2,0,4,2,0,14,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2552,            result[i] = (b == null ? valueForNull : b.shortValue());,0,0,0,3,6,0,0,0,0,9,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2554,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2566,        if (array == null) {,8,1,0,1,3,0,0,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2567,            return null;,2,0,0,0,0,1,0,0,0,4,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2568,        } else if (array.length == 0) {,2,0,1,1,4,0,0,0,0,7,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2569,            return EMPTY_SHORT_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2571,        final Short[] result = new Short[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2572,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2573,            result[i] = Short.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2575,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2590,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2591,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2592,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2593,            return EMPTY_BYTE_ARRAY;,12,2,0,0,0,1,0,0,0,15,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2595,        final byte[] result = new byte[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2596,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2597,            result[i] = array[i].byteValue();,2,0,1,3,6,0,8,2,0,21,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2599,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2612,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2613,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2614,        } else if (array.length == 0) {,6,2,0,1,4,0,0,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2615,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2617,        final byte[] result = new byte[array.length];,12,1,0,2,4,1,0,0,0,14,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2618,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2619,            Byte b = array[i];,2,0,1,1,2,0,0,2,0,8,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2620,            result[i] = (b == null ? valueForNull : b.byteValue());,0,0,0,3,6,0,0,0,0,9,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2622,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2634,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2635,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2636,        } else if (array.length == 0) {,6,2,0,1,4,0,10,0,0,19,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2637,            return EMPTY_BYTE_OBJECT_ARRAY;,0,0,0,0,0,1,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2639,        final Byte[] result = new Byte[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2640,        for (int i = 0; i < array.length; i++) {,12,2,0,1,3,0,0,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2641,            result[i] = Byte.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2643,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2658,        if (array == null) {,6,2,0,1,3,0,4,0,0,13,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2659,            return null;,4,0,0,0,0,1,6,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2660,        } else if (array.length == 0) {,2,0,0,1,4,0,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2661,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2663,        final double[] result = new double[array.length];,6,0,0,2,4,1,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2664,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2665,            result[i] = array[i].doubleValue();,0,0,1,3,6,0,2,0,0,11,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2667,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2680,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2681,            return null;,8,1,0,0,0,1,4,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2682,        } else if (array.length == 0) {,6,2,0,1,4,0,0,0,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2683,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2685,        final double[] result = new double[array.length];,0,0,0,2,4,0,0,0,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2686,        for (int i = 0; i < array.length; i++) {,14,2,0,1,3,0,0,0,0,17,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2687,            Double b = array[i];,6,0,1,1,2,0,0,2,0,13,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2688,            result[i] = (b == null ? valueForNull : b.doubleValue());,4,1,1,3,6,0,4,0,0,14,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2690,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2702,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2703,            return null;,2,0,0,0,0,1,0,2,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2704,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2705,            return EMPTY_DOUBLE_OBJECT_ARRAY;,2,0,0,0,0,1,6,0,0,8,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2707,        final Double[] result = new Double[array.length];,6,0,0,2,4,1,0,4,0,11,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2708,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2709,            result[i] = Double.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2711,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2726,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2727,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2728,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2729,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2731,        final float[] result = new float[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2732,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2733,            result[i] = array[i].floatValue();,0,0,1,3,6,0,2,0,0,11,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2735,        return result;,6,0,0,0,0,1,6,2,0,14,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2748,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2749,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2750,        } else if (array.length == 0) {,2,2,0,1,4,0,4,0,0,9,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2751,            return EMPTY_FLOAT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2753,        final float[] result = new float[array.length];,8,0,1,2,4,1,0,2,0,15,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2754,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2755,            Float b = array[i];,2,0,1,1,2,0,0,2,0,8,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2756,            result[i] = (b == null ? valueForNull : b.floatValue());,4,1,1,3,6,0,4,0,0,14,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2758,        return result;,2,1,0,0,0,1,0,0,0,3,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2770,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2771,            return null;,4,1,0,0,0,1,0,0,0,5,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2772,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2773,            return EMPTY_FLOAT_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2775,        final Float[] result = new Float[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2776,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2777,            result[i] = Float.valueOf(array[i]);,8,2,1,3,6,0,4,0,0,24,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2779,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2794,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2795,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2796,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2797,            return EMPTY_BOOLEAN_ARRAY;,2,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2799,        final boolean[] result = new boolean[array.length];,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2800,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,6,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2801,            result[i] = array[i].booleanValue();,6,1,1,3,6,1,6,0,0,23,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2803,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2816,        if (array == null) {,4,2,0,1,3,0,8,0,0,14,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2817,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2818,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2819,            return EMPTY_BOOLEAN_ARRAY;,0,0,0,0,0,1,0,0,0,1,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2821,        final boolean[] result = new boolean[array.length];,2,1,0,2,4,0,0,0,0,3,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2822,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2823,            Boolean b = array[i];,6,1,1,1,2,0,4,2,0,17,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2824,            result[i] = (b == null ? valueForNull : b.booleanValue());,8,1,1,3,6,0,10,0,0,24,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2826,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2838,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2839,            return null;,8,0,0,0,0,1,4,0,0,12,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2840,        } else if (array.length == 0) {,6,1,0,1,4,0,0,0,0,9,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2841,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2843,        final Boolean[] result = new Boolean[array.length];,6,0,0,2,4,1,0,4,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2844,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2845,            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);,18,4,1,3,6,1,8,0,0,42,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2847,        return result;,6,0,0,0,0,1,0,0,0,6,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2859,        if (array == null || array.length == 0) {,8,3,0,1,3,0,0,0,0,11,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2860,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2862,        return false;,2,1,0,0,0,1,6,0,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2873,        if (array == null || array.length == 0) {,6,3,0,1,3,0,6,0,0,15,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2874,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2876,        return false;,2,0,0,0,0,2,0,4,0,7,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2887,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2888,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2890,        return false;,4,2,0,0,0,1,4,0,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2901,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2902,            return true;,4,0,0,0,0,1,0,4,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2904,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2915,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2916,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2918,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2929,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2930,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2932,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2943,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2944,            return true;,2,0,0,0,0,1,0,2,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2946,        return false;,4,1,0,0,0,1,4,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2957,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2958,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2960,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2971,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2972,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,2974,        return false;,0,0,0,0,0,1,4,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3001,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3002,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3003,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3004,            return clone(array1);,4,1,0,1,2,1,4,0,0,9,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3006,        final Class<?> type1 = array1.getClass().getComponentType();,4,0,0,2,4,1,6,2,0,13,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3008,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",6,3,0,4,8,0,0,0,0,9,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3009,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",14,1,0,1,2,0,8,0,0,24,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3011,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",12,0,0,1,2,0,8,0,0,21,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3024,        },0,0,0,0,1,0,0,0,0,1,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3012,        } catch (ArrayStoreException ase) {,4,0,0,1,4,0,0,2,0,7,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3019,            final Class<?> type2 = array2.getClass().getComponentType();,2,0,0,2,4,1,6,2,0,11,60,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3020,            if (!type1.isAssignableFrom(type2)){,4,0,0,2,5,0,6,0,0,12,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3021,"                throw new IllegalArgumentException(""Cannot store ""+type2.getName()+"" in an array of ""+type1.getName(), ase);",2,1,0,3,6,0,8,2,0,15,108,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3023,"            throw ase; // No, so rethrow original",8,1,0,0,0,0,0,0,0,10,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3025,        return joinedArray;,2,0,0,0,0,1,6,0,0,8,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3046,        if (array1 == null) {,8,2,0,1,3,0,0,0,0,10,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3047,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3048,        } else if (array2 == null) {,0,0,0,1,4,0,6,0,0,7,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3049,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3051,        boolean[] joinedArray = new boolean[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3052,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3053,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3054,        return joinedArray;,2,0,0,0,0,1,2,0,0,4,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3075,        if (array1 == null) {,12,2,0,1,3,0,0,0,0,15,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3076,            return clone(array2);,8,2,0,1,2,1,4,0,0,15,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3077,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3078,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3080,        char[] joinedArray = new char[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3081,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,0,1,1,2,0,8,0,0,16,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3082,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3083,        return joinedArray;,6,1,0,0,0,1,0,0,0,7,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3104,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3105,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3106,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3107,            return clone(array1);,4,1,0,1,2,1,4,0,0,9,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3109,        byte[] joinedArray = new byte[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3110,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3111,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3112,        return joinedArray;,4,1,0,0,0,1,0,0,0,5,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3133,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3134,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3135,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3136,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3138,        short[] joinedArray = new short[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3139,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,24,0,0,28,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3140,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3141,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3162,        if (array1 == null) {,2,4,0,1,3,0,18,0,0,26,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3163,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3164,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3165,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3167,        int[] joinedArray = new int[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3168,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3169,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3170,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3191,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3192,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3193,        } else if (array2 == null) {,2,1,0,1,4,0,8,0,0,11,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3194,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3196,        long[] joinedArray = new long[array1.length + array2.length];,2,0,1,2,4,0,0,2,0,8,61,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3197,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",14,1,0,1,2,0,8,0,0,24,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3198,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3199,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3220,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3221,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3222,        } else if (array2 == null) {,8,2,0,1,4,0,4,0,0,14,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3223,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3225,        float[] joinedArray = new float[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3226,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3227,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3228,        return joinedArray;,4,0,1,0,0,1,8,2,0,18,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3249,        if (array1 == null) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3250,            return clone(array2);,0,1,0,1,2,1,12,0,0,13,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3251,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3252,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3254,        double[] joinedArray = new double[array1.length + array2.length];,0,0,0,2,4,0,0,0,0,6,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3255,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",8,1,0,1,2,0,4,0,0,13,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3256,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,1,2,0,0,0,0,5,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3257,        return joinedArray;,2,0,0,0,0,1,4,0,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3291,            type = array.getClass();,2,0,0,1,2,0,4,0,0,7,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3292,        } else if (element != null) {,2,1,0,1,4,0,0,0,0,3,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3293,            type = element.getClass();,2,0,0,1,2,0,4,0,0,7,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3295,            type = Object.class;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3325,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",6,0,0,4,8,0,4,0,0,10,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3326,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3327,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3352,"        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);",6,0,0,4,8,0,4,0,0,10,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3353,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3354,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3379,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",0,0,0,4,8,0,0,0,0,12,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3380,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3381,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3406,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);",2,1,0,4,8,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3407,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,4,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3408,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3433,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);",6,0,0,4,8,0,4,0,0,10,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3434,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3435,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3460,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",6,0,0,4,8,0,16,0,0,22,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3461,        newArray[newArray.length - 1] = element;,10,1,1,1,2,0,0,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3462,        return newArray;,4,0,0,0,0,1,12,0,0,17,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3487,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",6,0,0,4,8,0,4,0,0,10,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3488,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3489,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3514,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);",6,0,0,4,8,0,4,0,0,10,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3515,        newArray[newArray.length - 1] = element;,10,1,1,1,2,0,0,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3516,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3530,            int arrayLength = Array.getLength(array);,2,0,0,1,2,0,6,0,0,8,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3531,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);",0,0,0,3,6,0,0,0,0,9,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3532,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",0,0,0,1,2,0,14,0,0,14,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3533,            return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3568,        Class<?> clss = null;,2,0,0,0,0,0,0,2,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3569,        if (array != null) {,18,4,0,1,3,0,4,0,0,28,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3570,            clss = array.getClass().getComponentType();,2,0,0,2,4,0,6,0,0,9,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3571,        } else if (element != null) {,4,1,0,1,4,0,4,0,0,9,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3572,            clss = element.getClass();,6,0,0,1,2,1,0,4,0,11,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3574,            return (T[]) new Object[] { null };,8,0,0,4,8,1,8,4,0,20,35,3,0.0,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3577,"        final T[] newArray = (T[]) add(array, index, element, clss);",2,0,0,4,8,1,10,4,0,17,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3578,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3609,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",4,0,0,4,8,1,12,0,0,16,77,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3641,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",0,0,0,4,8,1,0,0,0,13,78,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3672,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",10,1,0,4,8,1,12,0,0,23,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3703,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);",14,2,0,4,8,1,12,0,0,28,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3734,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);",0,0,0,4,8,1,0,0,0,13,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3765,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",4,0,0,4,8,1,12,0,0,16,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3796,"        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);",4,0,0,4,8,1,12,0,0,16,71,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3827,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);",4,0,0,4,8,1,12,2,0,19,74,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3842,        if (array == null) {,12,2,0,1,3,0,6,0,0,22,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3843,            if (index != 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3844,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",2,1,0,1,2,0,0,2,0,7,71,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3846,"            Object joinedArray = Array.newInstance(clss, 1);",2,3,0,1,2,0,26,2,0,36,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3847,"            Array.set(joinedArray, 0, element);",0,0,0,1,2,0,8,0,0,8,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3848,            return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3850,        int length = Array.getLength(array);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3851,        if (index > length || index < 0) {,8,3,0,1,3,0,0,0,0,11,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3852,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",4,1,0,1,2,0,0,2,0,9,79,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3854,"        Object result = Array.newInstance(clss, length + 1);",4,1,0,1,2,0,6,2,0,13,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3855,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3856,"        Array.set(result, index, element);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3857,        if (index < length) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3858,"            System.arraycopy(array, index, result, index + 1, length - index);",8,3,0,1,2,0,10,0,0,21,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3860,        return result;,6,2,0,0,0,1,0,0,0,9,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3893,"        return (T[]) remove((Object) array, index);",2,0,0,4,8,1,4,4,0,10,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3922,"        int index = indexOf(array, element);",6,0,1,1,2,0,6,0,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3923,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,10,0,0,15,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3924,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3926,"        return remove(array, index);",2,1,0,1,2,1,6,0,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3958,"        return (boolean[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3987,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3988,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3989,            return clone(array);,18,4,0,1,2,1,12,0,0,37,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3991,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4023,"        return (byte[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4052,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4053,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4054,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4056,"        return remove(array, index);",2,0,0,1,2,1,6,0,0,8,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4088,"        return (char[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4117,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4118,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,4,0,0,11,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4119,            return clone(array);,6,3,0,1,2,1,4,0,0,13,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4121,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4153,"        return (double[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4182,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4183,        if (index == INDEX_NOT_FOUND) {,10,2,0,1,3,0,0,0,0,12,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4184,            return clone(array);,2,1,0,1,2,1,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4186,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4218,"        return (float[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4247,"        int index = indexOf(array, element);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4248,        if (index == INDEX_NOT_FOUND) {,14,3,0,1,3,0,0,0,0,18,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4249,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4251,"        return remove(array, index);",4,2,1,1,2,1,10,0,0,20,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4283,"        return (int[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4312,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4313,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4314,            return clone(array);,2,1,0,1,2,1,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4316,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4348,"        return (long[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4377,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4378,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,6,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4379,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4381,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4413,"        return (short[]) remove((Object) array, index);",2,0,0,4,8,1,10,2,0,14,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4442,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4443,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4444,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4446,"        return remove(array, index);",6,0,0,1,2,1,18,0,0,24,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4471,        int length = getLength(array);,2,0,0,1,2,0,4,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4472,        if (index < 0 || index >= length) {,8,3,0,1,3,0,0,0,0,11,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4473,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",0,0,0,1,2,0,0,0,0,3,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4476,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);",0,0,0,3,6,0,0,0,0,9,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4477,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4478,        if (index < length - 1) {,0,0,0,1,3,0,0,0,0,1,25,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4479,"            System.arraycopy(array, index + 1, result, index, length - index - 1);",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,4482,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,449,        if (str == null) {,2,1,0,1,3,0,6,0,0,10,18,3,4.0,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,452,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,455,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,0,0,0,7,27,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,462,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,0,0,3,7,0,0,0,0,10,52,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,465,        char lastChar = str.charAt(str.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,469,        int decPos = str.indexOf('.');,2,0,0,1,2,0,0,2,0,4,30,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,470,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,472,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,484,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,487,                mant = str;,14,1,0,0,0,3,0,4,0,24,11,1,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,489,            dec = null;,0,0,0,0,0,0,0,0,0,0,11,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,491,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,0,6,0,0,7,35,4,4.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,492,            if (expPos > -1 && expPos < str.length() - 1) {,0,0,0,2,5,0,0,0,0,7,47,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,495,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,498,"            String numeric = str.substring(0, str.length() - 1);",4,2,0,2,4,0,8,2,0,16,52,3,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,499,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,500,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,503,                    if (dec == null,0,0,0,0,1,0,0,0,0,1,15,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,507,                            return createLong(numeric);,0,0,0,1,2,1,4,0,0,4,27,12,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,606,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,609,        for (int i = str.length() - 1; i >= 0; i--) {,8,2,0,2,5,3,8,4,0,26,45,1,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,610,            if (str.charAt(i) != '0') {,0,0,0,2,5,0,0,0,0,7,27,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,611,                return false;,2,1,0,0,0,1,0,0,0,4,13,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,628,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,631,        return Float.valueOf(str);,0,0,0,1,2,1,6,0,0,6,26,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,644,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,647,        return Double.valueOf(str);,0,0,0,1,2,1,6,0,0,6,27,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,661,        if (str == null) {,4,4,0,1,3,0,4,0,0,12,18,3,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,665,        return Integer.decode(str);,0,0,0,1,2,1,0,0,0,4,27,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,694,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,697,        return new BigInteger(str);,4,0,0,1,2,1,4,4,0,12,27,1,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,710,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,714,        if (StringUtils.isBlank(str)) {,2,0,0,2,5,0,0,2,0,4,31,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,717,        return new BigDecimal(str);,2,0,0,1,2,1,0,2,0,4,27,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,678,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,681,        return Long.valueOf(str);,0,0,0,1,2,1,0,0,0,4,25,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1288,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1291,        for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,0,0,0,7,40,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1292,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,40,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1296,        return true;,0,0,0,0,0,1,0,0,0,1,12,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,191,        return str == null || str.length() == 0;,0,0,0,1,2,1,0,0,0,4,40,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,229,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,232,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,2.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,234,                return false;,0,0,0,0,0,1,0,2,0,5,13,3,2.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,453,"            throw new NumberFormatException(""A blank string is not a valid number"");",2,0,0,1,2,3,4,4,0,14,72,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,460,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,476,"                    throw new NumberFormatException(str + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,485,"                mant = str.substring(0, expPos);",4,0,0,1,2,3,6,0,0,14,32,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,508,                        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,511,                        return createBigInteger(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,514,"                    throw new NumberFormatException(str + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,527,                    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,525,                    } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,538,                    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,536,                    } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,541,                    } catch (NumberFormatException e) {,0,0,0,1,4,0,0,0,0,5,35,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,581,                },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,579,                } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,584,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,8,3,0,5,11,0,8,2,0,24,66,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,585,                        return d;,4,1,0,0,0,1,4,0,0,9,9,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,587,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,591,                return createBigDecimal(str);,0,0,0,1,2,1,4,0,0,4,29,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,614,        return str.length() > 0;,0,1,0,1,2,1,4,0,0,5,24,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1313,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1314,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1316,        char[] chars = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1317,        int sz = chars.length;,0,0,0,0,0,0,0,0,0,0,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1318,        boolean hasExp = false;,0,0,0,0,0,0,0,0,0,0,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1319,        boolean hasDecPoint = false;,2,0,0,0,0,0,0,0,0,3,28,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1320,        boolean allowSigns = false;,2,0,0,0,0,0,0,0,0,3,27,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1321,        boolean foundDigit = false;,2,0,0,0,0,0,0,0,0,3,27,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1323,        int start = (chars[0] == '-') ? 1 : 0;,2,1,1,2,4,0,0,0,0,6,38,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1324,        if (sz > start + 1) {,0,0,0,1,3,0,0,0,0,4,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1325,            if (chars[start] == '0' && chars[start + 1] == 'x') {,8,4,1,3,7,0,0,4,0,25,53,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1326,                int i = start + 2;,4,1,0,0,0,0,0,0,0,5,18,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1327,                if (i == sz) {,0,0,0,1,3,0,0,0,0,4,14,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1331,                for (; i < chars.length; i++) {,10,1,0,1,3,0,0,0,0,12,31,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1332,                    if ((chars[i] < '0' || chars[i] > '9'),0,3,1,3,7,0,0,0,0,13,38,13,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1335,                        return false;,0,0,0,0,0,1,0,0,0,1,13,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1338,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1341,"        sz--; // don't want to loop to the last char, check it afterwords",0,0,0,0,0,0,0,0,0,0,65,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1343,        int i = start;,4,0,0,0,0,0,0,0,0,4,14,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1346,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,12,6,0,2,5,0,0,0,0,19,61,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1347,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,13,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1348,                foundDigit = true;,2,0,0,0,0,0,0,0,0,4,18,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1349,                allowSigns = false;,2,0,0,0,0,0,0,0,0,4,19,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1351,            } else if (chars[i] == '.') {,0,0,0,2,6,0,0,0,0,8,29,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1352,                if (hasDecPoint || hasExp) {,4,1,0,1,3,0,0,0,0,5,28,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1354,                    return false;,0,0,0,0,0,1,0,0,0,1,13,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1356,                hasDecPoint = true;,4,0,0,0,0,1,0,2,0,9,19,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1357,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,8,0,0,0,0,13,48,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1359,                if (hasExp) {,4,1,0,1,3,0,0,0,0,5,13,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1363,                if (!foundDigit) {,2,0,0,1,3,0,0,0,0,3,18,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1366,                hasExp = true;,0,0,0,0,0,0,0,0,0,0,14,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1367,                allowSigns = true;,2,0,0,0,0,0,0,0,0,4,18,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1368,            } else if (chars[i] == '+' || chars[i] == '-') {,0,0,0,3,8,0,0,0,0,11,48,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1369,                if (!allowSigns) {,0,0,0,1,3,0,0,0,0,4,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1370,                    return false;,0,0,0,0,0,1,0,2,0,4,13,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1372,                allowSigns = false;,8,2,0,0,0,0,6,0,0,18,19,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1373,                foundDigit = false; // we need a digit after the E,2,0,0,0,0,0,0,0,0,4,50,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1375,                return false;,0,0,0,0,0,1,0,0,0,1,13,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1377,            i++;,2,0,0,0,0,0,0,2,0,7,4,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1379,        if (i < chars.length) {,6,1,0,1,3,0,0,0,0,7,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1380,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,13,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1382,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1384,            if (chars[i] == 'e' || chars[i] == 'E') {,4,3,1,3,7,0,0,0,0,17,41,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1386,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1388,            if (!allowSigns,2,1,0,0,1,0,0,0,0,3,15,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1393,                return foundDigit;,2,0,0,0,0,1,0,0,0,2,18,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1395,            if (chars[i] == 'l',0,0,0,1,3,0,0,0,0,4,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1398,                return foundDigit && !hasExp;,4,1,0,0,0,1,0,0,0,6,29,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1401,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,36,230,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.5,0,0
