dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,other,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,32,"    JAVA_0_9(1.5f, ""0.9""),",1,0,0,0,2,0,0,0,1,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,27,public enum JavaVersion {,1,0,0,0,1,2,0,0,1,4,25,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,105,        return this.value >= requiredVersion.value;,3,1,0,0,0,2,0,0,0,3,43,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,132,"        if (""0.9"".equals(nom)) {",0,0,0,2,5,1,2,0,1,5,24,5,1.0,1,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,134,"        } else if (""1.1"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,136,"        } else if (""1.2"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,138,"        } else if (""1.3"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,140,"        } else if (""1.4"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,142,"        } else if (""1.5"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,144,"        } else if (""1.6"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,146,"        } else if (""1.7"".equals(nom)) {",0,0,0,2,6,2,2,0,1,5,31,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,147,            return JAVA_1_7;,1,0,0,0,0,1,0,0,0,2,16,13,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,456,            int hexDigits = str.length() - 2; // drop 0x,1,1,0,1,2,1,2,0,0,6,44,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,457,"            if (str.startsWith(""-"")) { // drop -",0,0,0,2,5,1,2,0,1,5,36,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,474,            if (expPos > -1) {,1,1,0,1,3,1,0,0,1,6,18,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,475,                if (expPos < decPos || expPos > str.length()) {,3,3,0,2,5,1,2,0,0,6,47,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,478,"                dec = str.substring(decPos + 1, expPos);",2,1,0,0,2,0,3,0,1,5,40,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,482,"            mant = str.substring(0, decPos);",1,0,0,0,2,0,3,0,1,4,32,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,485,                if (expPos > str.length()) {,1,1,0,2,5,1,2,0,0,6,28,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,496,"                exp = str.substring(expPos + 1, str.length() - 1);",2,2,0,1,4,0,4,0,1,6,50,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,521,                        Float f = NumberUtils.createFloat(numeric);,1,0,0,1,2,0,3,1,0,5,43,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,522,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,525,                            return f;,1,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,543,                        return createBigDecimal(numeric);,0,0,0,1,2,1,2,0,1,5,33,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,555,            if (expPos > -1 && expPos < str.length() - 1) {,2,4,0,2,5,1,2,0,1,7,47,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,556,"                exp = str.substring(expPos + 1, str.length());",2,1,0,1,4,0,4,0,1,6,46,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,558,                exp = null;,1,0,0,0,0,0,0,0,1,2,11,8,1.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,560,            if (dec == null && exp == null) {,2,3,0,1,3,1,0,0,0,5,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,563,                    return createInteger(str);,0,0,0,1,2,1,2,0,1,5,26,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,564,                } catch (NumberFormatException nfe) { // NOPMD,1,0,0,1,4,1,0,1,0,5,46,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,572,                return createBigInteger(str);,0,0,0,1,2,1,2,0,1,5,29,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,576,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,578,                    Float f = createFloat(str);,1,0,0,1,2,0,2,1,1,6,27,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,579,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,580,                        return f;,1,0,0,0,0,1,0,0,0,2,9,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1134,            if (zone.useDaylightTime(),0,1,0,1,3,1,2,0,0,5,26,5,2.0,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1138,"                buffer.append(getTimeZoneDisplay(zone, false, mStyle, mLocale));",0,0,0,0,4,0,6,0,2,3,64,8,2.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,180,        return parsePattern;,1,0,0,0,0,1,0,0,0,2,20,4,1.0,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,253,                ch = (char) (random.nextInt(gap) + start);,2,1,0,2,6,1,3,0,1,7,42,8,0.5,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,248,                ch = chars[random.nextInt(gap) + start];,2,1,1,1,4,0,3,0,1,7,40,8,4.0,1,1
defect4j,lang,org/apache/commons/lang3/SerializationException,13,75,"        super(msg, cause);",2,0,0,0,2,1,0,0,1,4,18,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,782,        if (cs1 == cs2) {,2,1,0,1,3,1,0,0,0,5,17,4,0.0625,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,783,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,676,            return typeVarAssigns;,1,0,0,0,0,1,0,0,0,2,22,6,4.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,484,"                mant = str.substring(0, expPos);",1,0,0,0,2,0,3,0,1,4,32,8,1.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,545,"                    throw new NumberFormatException(str + "" is not a valid number."");",1,1,0,1,2,2,0,1,2,7,65,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,409,"        TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);",5,0,0,0,2,1,0,2,1,5,77,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,410,        String value = cTimeZoneDisplayCache.get(key);,1,0,0,1,2,0,3,1,0,5,46,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,413,"            value = tz.getDisplayName(daylight, style, locale);",1,0,0,0,2,0,5,0,1,4,51,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,414,"            String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);",1,0,0,0,2,0,4,1,0,4,61,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,555,                if (tokenLen >= 4) {,1,1,0,1,3,1,0,0,0,5,20,7,1.0,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,558,"                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);",5,0,0,0,2,1,0,1,2,5,64,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1240,"            appendTo(buffer, calendar.get(Calendar.YEAR) % 100);",2,1,0,1,4,0,4,0,1,6,52,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1247,            buffer.append((char)(value / 10 + '0'));,1,2,0,2,6,1,2,0,1,7,40,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1484,"                           boolean daylight, int style, Locale locale) {",3,0,0,0,2,2,0,1,0,4,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1485,            mTimeZone = timeZone;,2,0,0,0,0,0,0,0,1,2,21,5,1.0,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1486,            if (daylight) {,1,0,0,1,3,1,0,0,0,4,15,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1487,                style |= 0x80000000;,1,0,0,0,0,0,0,0,1,2,20,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1498,            return (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();,1,4,0,2,6,1,4,0,0,6,71,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1387,"        TimeZoneNameRule(TimeZone timeZone, Locale locale, int style) {",4,0,0,0,3,1,0,2,0,4,63,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1390,"            mStandard = getTimeZoneDisplay(timeZone, false, style, locale);",1,0,0,0,2,0,4,0,3,4,63,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1398,"            return Math.max(mStandard.length(), mDaylight.length());",0,0,0,1,6,1,6,0,0,4,56,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,41,            int start = index + 2;,2,1,0,0,0,1,0,0,0,3,22,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,42,            boolean isHex = false;,1,0,0,0,0,1,0,0,1,3,22,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,44,            char firstChar = input.charAt(start);,1,0,0,1,2,1,3,0,0,5,37,7,1.0,1,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,88,    private static final int[][] fields = {,1,0,0,0,5,4,0,0,3,4,39,2,0.00926,1,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,216,"            throw new ArithmeticException(""The denominator must not be zero"");",0,0,0,1,2,2,0,1,2,5,66,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,223,            numerator/=2; denominator/=2;,2,0,0,0,0,0,0,0,2,2,29,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,226,            if (numerator==Integer.MIN_VALUE ||,3,2,0,0,1,1,0,0,0,4,35,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,228,"                throw new ArithmeticException(""overflow: can't negate"");",0,0,0,1,2,2,0,1,2,5,56,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,476,            return equals(ZERO) ? this : ZERO;,1,0,0,1,2,2,2,0,1,6,34,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,478,"        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);",1,0,0,1,4,1,5,0,1,6,66,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,480,            return this;,0,0,0,0,0,2,0,0,0,1,12,2,1.0,1,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,482,"        return Fraction.getFraction(numerator / gcd, denominator / gcd);",4,2,0,0,2,1,2,0,0,5,64,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,216,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.25,1,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",1,0,0,0,2,4,0,2,5,5,69,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,1,0,0,1,2,4,0,2,5,6,68,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",1,0,0,2,4,4,1,2,5,7,94,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,1,0,0,1,2,4,0,2,4,6,65,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,267,"        return isMatch(buffer, pos, 0, buffer.length);",2,0,0,0,2,1,3,0,1,5,46,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,417,            super();,0,0,0,1,2,1,0,0,1,4,8,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,319,            this.ch = ch;,2,0,0,0,0,1,0,0,1,3,13,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,285,            this.chars = chars.clone();,1,0,0,1,2,1,2,0,1,6,27,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,286,            Arrays.sort(this.chars);,1,0,0,1,2,1,2,0,0,5,24,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,300,"            return Arrays.binarySearch(chars, buffer[pos]) >= 0 ? 1 : 0;",0,1,1,0,4,1,3,0,0,5,60,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,151,        ArrayList<Format> foundFormats = new ArrayList<Format>();,1,0,0,1,2,1,0,4,1,6,57,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,153,        StringBuilder stripCustom = new StringBuilder(pattern.length());,1,0,0,2,4,1,2,2,1,7,64,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,155,        ParsePosition pos = new ParsePosition(0);,1,0,0,1,2,1,0,2,1,6,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,156,        char[] c = pattern.toCharArray();,1,0,0,1,4,1,2,0,0,5,33,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,157,        int fmtCount = 0;,1,0,0,0,0,1,0,0,0,2,17,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,158,        while (pos.getIndex() < pattern.length()) {,0,1,0,2,7,1,4,0,0,5,43,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,159,            switch (c[pos.getIndex()]) {,0,0,1,2,7,1,2,0,0,5,28,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,165,"                seekNonWs(pattern, pos);",0,0,0,0,2,0,3,0,1,3,24,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,166,                int start = pos.getIndex();,1,0,0,1,2,1,2,0,0,5,27,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,167,"                int index = readArgumentIndex(pattern, next(pos));",1,0,0,1,4,1,4,0,2,6,50,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,168,                stripCustom.append(START_FE).append(index);,0,0,0,1,4,0,5,0,0,3,43,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,170,                Format format = null;,1,0,0,0,0,0,0,1,0,2,21,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,172,                if (c[pos.getIndex()] == START_FMT) {,1,1,1,2,7,1,2,0,0,7,37,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,173,"                    formatDescription = parseFormatDescription(pattern,",1,0,0,0,1,0,2,0,2,4,51,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,175,                    format = getFormat(formatDescription);,1,0,0,1,2,0,2,0,2,5,38,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,176,                    if (format == null) {,1,1,0,1,3,1,0,0,0,5,21,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,180,                foundFormats.add(format);,0,0,0,1,2,0,3,0,0,3,25,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,181,                foundDescriptions.add(format == null ? null : formatDescription);,2,1,0,1,2,0,2,0,0,5,65,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,182,                Validate.isTrue(foundFormats.size() == fmtCount);,1,1,0,2,4,0,4,0,0,5,49,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,190,                stripCustom.append(c[pos.getIndex()]);,0,0,1,2,6,0,4,0,0,4,38,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,191,                next(pos);,0,0,0,1,2,0,2,0,1,4,10,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,194,        super.applyPattern(stripCustom.toString());,1,0,0,2,4,1,2,0,0,5,43,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,195,"        toPattern = insertFormats(super.toPattern(), foundDescriptions);",2,0,0,1,4,1,2,0,2,6,64,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,196,        if (containsElements(foundFormats)) {,0,0,0,2,5,1,2,0,1,5,37,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,197,            Format[] origFormats = getFormats();,1,0,0,1,4,0,1,1,1,6,36,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,200,            int i = 0;,1,0,0,0,0,1,0,0,0,2,10,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,201,            for (Iterator<Format> it = foundFormats.iterator(); it.hasNext(); i++) {,2,0,0,2,7,1,4,2,1,7,72,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,202,                Format f = it.next();,1,0,0,1,2,0,2,1,0,5,21,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,203,                if (f != null) {,1,1,0,1,3,1,0,0,0,5,16,8,0.25,1,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,204,                    origFormats[i] = f;,1,0,1,0,2,0,0,0,1,4,19,10,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,207,            super.setFormats(origFormats);,2,0,0,1,2,1,0,0,0,4,30,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,278,            String name = desc;,2,0,0,0,0,0,0,1,0,2,19,6,0.25,1,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,279,            String args = null;,1,0,0,0,0,0,0,1,0,2,19,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,285,            FormatFactory factory = registry.get(name);,1,0,0,1,2,0,3,1,0,5,43,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,287,"                return factory.getFormat(name, args, getLocale());",0,0,0,1,4,1,5,0,1,5,50,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,301,        int start = pos.getIndex();,1,0,0,1,2,1,2,0,0,5,27,5,0.25,1,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,302,"        seekNonWs(pattern, pos);",0,0,0,0,2,0,3,0,1,3,24,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,304,        boolean error = false;,1,0,0,0,0,1,0,0,1,3,22,5,0.25,1,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,305,        for (; !error && pos.getIndex() < pattern.length(); next(pos)) {,1,2,0,2,9,1,6,0,2,7,64,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,306,            char c = pattern.charAt(pos.getIndex());,1,0,0,2,4,1,4,0,0,5,40,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,307,            if (Character.isWhitespace(c)) {,0,0,0,2,5,1,3,0,0,4,32,7,0.25,1,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,315,            if ((c == START_FMT || c == END_FE) && result.length() > 0) {,4,5,0,2,7,1,2,0,0,6,61,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,317,                    return Integer.parseInt(result.toString());,0,0,0,2,4,1,4,0,0,4,43,11,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,323,            error = !Character.isDigit(c);,1,0,0,1,2,0,3,0,2,5,30,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,324,            result.append(c);,0,0,0,1,2,0,3,0,0,3,17,7,0.25,1,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,347,        for (; pos.getIndex() < pattern.length(); next(pos)) {,0,1,0,2,9,1,6,0,1,6,54,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,348,            switch (pattern.charAt(pos.getIndex())) {,0,0,0,3,7,1,4,0,0,4,41,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,355,"                    return pattern.substring(text, pos.getIndex());",0,0,0,1,4,1,5,0,0,4,47,10,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,375,        if (!containsElements(customPatterns)) {,0,0,0,2,5,1,2,0,2,5,40,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,378,        StringBuilder sb = new StringBuilder(pattern.length() * 2);,1,1,0,2,4,1,2,2,1,8,59,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,384,            switch (c) {,1,0,0,1,3,1,0,0,0,4,12,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,391,                    fe++;,1,0,0,0,0,0,0,0,1,2,5,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,392,                    sb.append(START_FE).append(,0,0,0,1,3,0,4,0,0,3,27,10,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,396,                        sb.append(START_FMT).append(customPattern);,0,0,0,1,4,0,5,0,0,3,43,12,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,408,        return sb.toString();,0,0,0,1,2,1,2,0,0,4,21,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,421,"            len = StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex());",1,0,0,1,6,0,6,0,1,5,64,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,422,            pos.setIndex(pos.getIndex() + len);,1,1,0,2,4,0,4,0,0,5,35,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,423,        } while (len > 0 && pos.getIndex() < pattern.length());,1,3,0,2,7,1,4,0,0,6,55,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,433,        pos.setIndex(pos.getIndex() + 1);,0,1,0,2,4,0,4,0,0,4,33,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,495,        if (coll == null || coll.size() == 0) {,1,3,0,2,5,1,2,0,0,6,39,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,498,        for (Iterator<?> iter = coll.iterator(); iter.hasNext();) {,1,0,0,2,7,1,4,1,0,6,59,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,499,            if (iter.next() != null) {,0,1,0,2,5,1,2,0,0,5,26,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,500,                return true;,0,0,0,0,0,1,0,0,1,2,12,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,176,        if (expression == false) {,1,1,0,1,3,1,0,0,1,6,26,4,0.25,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,30,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },1,0,0,1,10,3,2,1,2,7,80,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1171,            buffer.append(mValues[calendar.get(mField)]);,0,0,1,2,6,0,5,0,0,4,45,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1130,            buffer.append(mValue);,0,0,0,1,2,0,3,0,0,3,22,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,479,                if (expPos < decPos) {,2,1,0,1,3,1,0,0,0,5,22,8,1.0,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,57,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);",1,0,0,1,6,0,7,0,1,5,77,10,0.5,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,            return 2 + (end - start) + (isHex ? 1 : 0) + 1;,3,2,0,1,4,1,0,0,0,5,47,6,0.5,1,1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1717,            return ArrayUtils.EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,7,1.0,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,        int searchLen = searchChars.length;,3,0,0,0,0,1,0,0,0,2,35,5,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,        for (int i = 0; i < csLen; i++) {,4,1,0,1,3,2,0,0,1,6,33,4,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,            for (int j = 0; j < searchLen; j++) {,4,1,0,1,3,2,0,0,1,6,37,6,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,                if (searchChars[j] == ch) {,1,1,1,1,5,1,0,0,0,6,27,8,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,                        return false;,0,0,0,0,0,1,0,0,1,2,13,10,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1441,		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,2,7,1,5,0,1,6,53,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,400,"        return reflectionHashCode(17, 37, object, false, null, null);",0,0,0,0,2,1,2,0,2,4,61,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,1,0,0,0,4,4,0,2,3,5,64,2,0.025,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,1,0,0,0,4,6,0,0,3,4,58,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3298,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",1,0,0,1,8,0,3,2,1,6,49,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3299,        newArray[newArray.length - 1] = element;,3,1,1,0,2,0,0,0,1,5,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,452,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,1,3,0,0,4,31,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,462,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,2,7,1,4,0,2,6,52,4,4.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,465,        char lastChar = str.charAt(str.length() - 1);,1,1,0,2,4,1,4,0,0,6,45,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,470,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,1,1,0,1,4,1,4,0,2,7,53,5,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,487,                mant = str;,2,0,0,0,0,0,0,0,1,2,11,8,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,489,            dec = null;,1,0,0,0,0,0,0,0,1,2,11,6,4.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,491,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,1,3,0,1,5,35,4,4.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,498,"            String numeric = str.substring(0, str.length() - 1);",1,1,0,1,4,0,4,1,0,6,52,6,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,499,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,1,1,0,1,4,1,4,0,2,7,55,7,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,503,                    if (dec == null,1,3,0,0,1,1,0,0,0,4,15,7,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,507,                            return createLong(numeric);,0,0,0,1,2,1,2,0,1,5,27,11,4.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,609,        for (int i = str.length() - 1; i >= 0; i--) {,3,2,0,2,5,2,2,0,1,7,45,4,4.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,610,            if (str.charAt(i) != '0') {,0,1,0,2,5,1,3,0,1,6,27,6,4.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,697,        return new BigInteger(str);,1,0,0,1,2,2,0,1,1,6,27,4,4.0,1,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2956,        } else if (array2 == null) {,1,1,0,1,4,2,0,0,0,5,28,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2959,        final Class<?> type1 = array1.getClass().getComponentType();,1,0,0,1,4,1,3,1,1,7,60,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2960,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",5,1,0,1,8,0,3,2,0,6,80,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2961,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,0,2,0,4,0,0,3,59,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2962,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",4,0,0,0,2,0,4,0,0,3,71,5,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3612,        if (text == null || text.length() == 0 || searchList == null || ,2,8,0,1,3,1,2,0,0,6,63,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3635,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,1,0,1,0,4,3,0,0,0,4,64,5,1.0,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3645,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,0,5,1,0,0,0,4,60,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3650,            tempIndex = text.indexOf(searchList[i]);,1,0,1,1,4,0,2,0,1,6,40,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3654,                noMoreMatchesForReplIndex[i] = true;,0,0,1,0,2,0,0,0,2,3,36,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3656,                if (textIndex == -1 || tempIndex < textIndex) {,3,3,0,1,3,1,0,0,1,6,47,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3657,                    textIndex = tempIndex;,2,0,0,0,0,0,0,0,1,2,22,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3675,        for (int i = 0; i < searchList.length; i++) {,5,1,0,1,3,2,0,0,1,6,45,4,1.0,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3676,            int greater = replacementList[i].length() - searchList[i].length();,1,1,1,1,8,1,2,0,0,7,67,7,1.0,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3682,"        increase = Math.min(increase, text.length() / 5);",1,1,0,1,4,0,5,0,1,6,49,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3684,        StringBuilder buf = new StringBuilder(text.length() + increase);,2,1,0,2,4,1,2,2,1,8,64,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3688,            for (int i = start; i < textIndex; i++) {,5,1,0,1,3,2,0,0,1,6,41,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3689,                buf.append(text.charAt(i));,0,0,0,2,4,0,5,0,0,3,27,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3691,            buf.append(replacementList[replaceIndex]);,0,0,1,1,4,0,2,0,0,4,42,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3693,            start = textIndex + searchList[replaceIndex].length();,2,1,1,1,4,0,1,0,1,7,54,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3695,            textIndex = -1;,1,0,0,0,0,0,0,0,2,2,15,6,1.0,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3701,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,0,5,1,0,0,0,4,60,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3706,"                tempIndex = text.indexOf(searchList[i], start);",1,0,1,0,4,0,3,0,1,5,47,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3709,                if (tempIndex == -1) {,1,1,0,1,3,1,0,0,1,6,22,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3710,                    noMoreMatchesForReplIndex[i] = true;,0,0,1,0,2,0,0,0,2,3,36,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3712,                    if (textIndex == -1 || tempIndex < textIndex) {,3,3,0,1,3,1,0,0,1,6,47,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3713,                        textIndex = tempIndex;,2,0,0,0,0,0,0,0,1,2,22,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3723,            buf.append(text.charAt(i));,0,0,0,2,4,0,5,0,0,3,27,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3725,        String result = buf.toString();,1,0,0,1,2,0,2,1,0,5,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3726,        if (!repeat) {,1,0,0,1,3,1,0,0,1,5,14,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",0,0,0,1,6,1,5,0,1,5,60,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,459,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,1,1,0,3,8,2,2,2,1,8,67,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,460,"            escapeHtml(writer, str);",0,0,0,0,2,0,3,0,1,3,24,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,461,            return writer.toString();,0,0,0,1,2,1,2,0,0,4,25,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,504,"        Entities.HTML40.escape(writer, string);",2,0,0,0,2,0,3,0,0,3,39,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,832,"                    writer.write(""&#"");",0,0,0,1,2,0,2,0,1,4,19,11,0.5,1,0
defect4j,lang,org/apache/commons/lang/Entities,42,833,"                    writer.write(Integer.toString(c, 10));",0,0,0,0,4,0,5,0,0,2,38,11,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,536,            return super.name(value);,2,0,0,1,2,2,0,0,0,4,25,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,112,"        this(pattern, Locale.getDefault(), registry);",2,0,0,1,4,1,2,0,0,5,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,142,        if (val.length() == 0) {,0,1,0,2,5,1,2,0,0,5,24,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5279,        return str == null ? EMPTY : str;,3,1,0,0,0,1,0,0,0,3,33,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,244,                            out.write('\\');,0,0,0,1,2,0,2,0,1,4,16,13,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1708,"        public Pair(Object obj1, Object obj2) {",3,0,0,0,3,1,0,2,1,5,39,3,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1738,            return,0,0,0,0,0,0,0,0,0,0,6,2,4.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,67,        return (bool.booleanValue() ? Boolean.FALSE : Boolean.TRUE);,4,0,0,2,4,1,2,0,0,5,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,90,        return bool.booleanValue() ? true : false;,0,0,0,1,2,1,2,0,2,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,108,        return !isTrue(bool);,0,0,0,1,2,1,2,0,2,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,165,        return bool ? Boolean.TRUE : Boolean.FALSE;,5,0,0,0,0,1,0,0,0,2,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,226,        return value == 0 ? false : true;,1,1,0,0,0,1,0,0,2,4,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,244,        return value == 0 ? Boolean.FALSE : Boolean.TRUE;,5,1,0,0,0,1,0,0,0,3,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,267,        return value.intValue() == 0 ? Boolean.FALSE : Boolean.TRUE;,4,1,0,1,2,1,2,0,0,6,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,289,        } else if (value == falseValue) {,2,1,0,1,4,2,0,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,290,            return false;,0,0,0,0,0,1,0,0,1,2,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,293,"        throw new IllegalArgumentException(""The Integer did not match either specified value"");",0,0,0,1,2,2,0,1,2,5,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,319,            } else if (falseValue == null) {,1,1,0,1,4,2,0,0,0,5,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,320,                return false;,0,0,0,0,0,1,0,0,1,2,13,9,0.0,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,322,        } else if (value.equals(trueValue)) {,0,0,0,2,6,2,3,0,0,4,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,324,        } else if (value.equals(falseValue)) {,0,0,0,2,6,2,3,0,0,4,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,351,            return Boolean.FALSE;,2,0,0,0,0,1,0,0,0,2,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,352,        } else if (value == nullValue) {,2,1,0,1,4,2,0,0,0,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,381,                return Boolean.TRUE;,2,0,0,0,0,1,0,0,0,2,20,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,383,                return Boolean.FALSE;,2,0,0,0,0,1,0,0,0,2,21,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,384,            } else if (nullValue == null) {,1,1,0,1,4,2,0,0,0,5,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,391,        } else if (value.equals(nullValue)) {,0,0,0,2,6,2,3,0,0,4,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,450,        return bool.booleanValue() ? NumberUtils.INTEGER_ONE : NumberUtils.INTEGER_ZERO;,4,0,0,1,2,1,2,0,0,5,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,489,        return bool.booleanValue() ? trueValue : falseValue;,2,0,0,1,2,1,2,0,0,5,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,572,            return Boolean.TRUE;,2,0,0,0,0,1,0,0,0,2,20,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,574,            return Boolean.FALSE;,2,0,0,0,0,1,0,0,0,2,21,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,662,        switch (str.length()) {,0,0,0,2,5,1,2,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,664,                char ch0 = str.charAt(0);,1,0,0,1,2,1,2,0,0,5,25,7,0.0,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,699,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,0.0,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,764,"        return toString(bool, ""true"", ""false"", null);",0,0,0,0,2,1,2,0,3,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,921,"            throw new IllegalArgumentException(""Array is empty"");",0,0,0,1,2,2,0,1,2,5,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,929,            if (array[i]) {,0,0,1,1,5,1,0,0,0,4,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,931,                    trueCount++;,1,0,0,0,0,0,0,0,1,2,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,939,        return trueCount == 1;,1,1,0,0,0,1,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,963,        boolean[] primitive = null;,1,0,0,0,2,1,0,0,0,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,965,            primitive = ArrayUtils.toPrimitive(array);,1,0,0,1,2,0,3,0,1,5,42,6,0.0,1,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,966,        } catch (NullPointerException ex) {,1,0,0,1,4,1,0,1,0,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,969,        return xor(primitive) ? Boolean.TRUE : Boolean.FALSE;,4,0,0,1,2,1,2,0,1,6,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,676,                        if (field == DateUtils.SEMI_MONTH) {,3,1,0,1,3,1,0,0,0,5,36,12,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,689,"                            val.add(fields[i][0], 1);",0,0,1,0,6,0,2,0,0,3,25,15,1.0,1,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",1,1,0,1,2,2,0,1,2,7,68,8,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,179,        stopTime = System.currentTimeMillis();,1,0,0,1,2,0,2,0,1,5,38,4,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,631,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",3,0,0,0,2,0,2,0,2,4,57,7,0.07692,1,1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,798,    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();,1,0,0,1,2,3,1,1,4,7,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,818,    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();,1,0,0,1,2,4,1,0,4,6,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,995,    public static final boolean IS_OS_UNIX =,1,0,0,0,0,4,0,0,3,3,40,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1122,"        String str = JAVA_VERSION_TRIMMED.substring(0, 3);",1,0,0,0,2,0,2,1,0,4,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1124,"            str = str + JAVA_VERSION_TRIMMED.substring(4, 5);",2,1,0,0,2,0,2,0,1,5,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1152,"        str = str + JAVA_VERSION_TRIMMED.substring(2, 3);",2,1,0,0,2,0,2,0,1,5,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1156,"            str = str + ""0"";",2,1,0,0,0,0,0,0,2,3,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1172,            for (int i = 0; i < JAVA_VERSION.length(); i++) {,3,1,0,2,5,2,2,0,1,7,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1173,                char ch = JAVA_VERSION.charAt(i);,1,0,0,1,2,1,3,0,0,5,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1174,                if (ch >= '0' && ch <= '9') {,2,3,0,1,3,1,0,0,2,6,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1175,                    return JAVA_VERSION.substring(i);,0,0,0,1,2,1,3,0,0,4,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1238,            System.err.println(,2,0,0,0,1,0,1,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1260,        return JAVA_VERSION_FLOAT >= requiredVersion;,2,1,0,0,0,1,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1292,        return JAVA_AWT_HEADLESS != null ? JAVA_AWT_HEADLESS.equals(Boolean.TRUE.toString()) : false;,3,1,0,2,4,1,3,0,1,7,93,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1305,        return new File(System.getProperty(JAVA_HOME_KEY));,0,0,0,2,4,2,3,1,1,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,47,    private static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());,1,0,0,2,4,4,2,2,4,7,90,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,51,        List list = Arrays.asList(Locale.getAvailableLocales());,1,0,0,2,4,0,4,1,0,5,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,52,        cAvailableLocaleList = Collections.unmodifiableList(list);,1,0,0,1,2,0,3,0,1,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,99,        if (len != 2 && len != 5 && len < 7) {,3,5,0,1,3,1,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,104,        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {,4,7,0,1,3,1,0,0,4,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,108,"            return new Locale(str, """");",1,0,0,0,2,2,0,1,2,5,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,110,            if (str.charAt(2) != '_') {,0,1,0,2,5,1,2,0,1,6,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,115,            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {,4,7,0,1,3,1,0,0,4,6,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,119,"                return new Locale(str.substring(0, 2), str.substring(3, 5));",0,0,0,0,6,2,4,1,1,5,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,121,                if (str.charAt(5) != '_') {,0,1,0,2,5,1,2,0,1,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,122,"                    throw new IllegalArgumentException(""Invalid locale format: "" + str);",1,1,0,1,2,2,0,1,2,7,68,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,124,"                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));",0,0,0,1,8,2,6,1,1,6,78,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,168,            if (locale.getVariant().length() > 0) {,0,1,0,2,7,1,3,0,0,5,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,169,"                list.add(new Locale(locale.getLanguage(), locale.getCountry()));",0,0,0,1,8,1,6,1,1,6,64,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,172,"                list.add(new Locale(locale.getLanguage(), """"));",0,0,0,1,6,1,4,1,2,6,47,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,175,                list.add(defaultLocale);,0,0,0,1,2,0,3,0,0,3,24,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,206,        Set set = cAvailableLocaleSet;,2,0,0,0,0,0,0,1,0,2,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,208,            set = new HashSet(availableLocaleList());,1,0,0,2,4,1,1,1,3,7,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,210,            cAvailableLocaleSet = set;,2,0,0,0,0,0,0,0,1,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,237,        List langs = (List) cLanguagesByCountry.get(countryCode);  //syncd,1,0,0,1,4,0,3,2,0,5,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,240,                langs = new ArrayList();,1,0,0,1,2,1,0,1,2,6,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,241,                List locales = availableLocaleList();,1,0,0,1,2,0,1,1,1,6,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,242,                for (int i = 0; i < locales.size(); i++) {,3,1,0,2,5,2,2,0,1,7,42,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,243,                    Locale locale = (Locale) locales.get(i);,1,0,0,1,4,0,3,2,0,5,40,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,244,                    if (countryCode.equals(locale.getCountry()) &&,0,1,0,2,5,1,4,0,0,5,46,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,246,                        langs.add(locale);,0,0,0,1,2,0,3,0,0,3,18,13,0.0,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,249,                langs = Collections.unmodifiableList(langs);,1,0,0,1,2,0,3,0,1,5,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,250,            } else {,0,0,0,0,2,1,0,0,0,2,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,251,                langs = Collections.EMPTY_LIST;,3,0,0,0,0,0,0,0,1,2,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,253,"            cLanguagesByCountry.put(countryCode, langs);  //syncd",0,0,0,0,2,0,4,0,0,2,53,7,0.0,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,276,                    if (languageCode.equals(locale.getLanguage()) &&,0,2,0,2,5,1,4,0,0,5,48,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,880,            ensureCapacity(size + width);,2,1,0,1,2,0,1,0,1,6,29,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,881,            String str = (obj == null ? getNullText() : obj.toString());,2,1,0,2,6,0,3,1,1,7,60,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,883,            if (strLen >= width) {,2,1,0,1,3,1,0,0,0,5,22,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);",0,0,0,0,2,0,5,0,0,2,38,9,0.5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1672,        char[] thisBuf = buffer;,2,0,0,0,2,1,0,0,0,3,24,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1674,            if (thisBuf[i] == ch) {,1,1,1,1,5,1,0,0,0,6,23,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,3,1,0,1,2,0,0,0,1,5,47,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1762,        if (str == null || startIndex >= size) {,3,3,0,1,3,1,0,0,0,5,40,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,4,1,0,0,0,1,0,0,0,3,34,5,0.57143,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1778,        for (int i = startIndex; i < len; i++) {,5,1,0,1,3,2,0,0,1,6,40,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1779,            for (int j = 0; j < strLen; j++) {,4,1,0,1,3,2,0,0,1,6,34,7,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1780,                if (str.charAt(j) != thisBuf[i + j]) {,2,2,1,2,7,1,3,0,0,7,38,9,0.57143,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,840,                    if (entityName.length() == 1) {,0,1,0,2,5,1,2,0,0,5,31,11,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,843,                        char charAt1 = entityName.charAt(1);,1,0,0,1,2,1,2,0,0,5,36,14,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,845,                            if (charAt1 == 'x' || charAt1=='X') {,2,3,0,1,3,1,0,0,2,6,37,15,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,848,                                entityValue = Integer.parseInt(entityName.substring(1));,1,0,0,2,4,0,4,0,1,5,56,17,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,247,"        return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());",0,0,0,1,4,1,6,0,2,5,81,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,330,"            if (Token.containsTokenWithValue(tokens, M)) {",0,0,0,0,5,1,4,0,0,3,46,7,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,331,                months += 12 * years;,2,1,0,0,0,0,0,0,1,3,21,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,344,            hours += 24 * days;,2,1,0,0,0,0,0,0,1,3,19,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,        return iValue - ((ValuedEnum) other).iValue;,3,1,0,2,4,1,0,1,0,6,44,4,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,547,        gval.setTime(date);,0,0,0,1,2,0,3,0,0,3,19,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,548,"        modify(gval, field, false);",0,0,0,0,2,0,3,0,2,3,27,4,1.0,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,594,                if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,1,3,0,4,11,1,4,0,2,7,65,6,0.33333,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,46,"        lookupMap = new HashMap<CharSequence, CharSequence>();",1,0,0,1,2,1,0,3,2,6,54,4,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,51,"                this.lookupMap.put(seq[0], seq[1]);",1,0,1,0,6,1,1,0,0,5,35,9,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,95,"                pos += Character.charCount(Character.codePointAt(input, pos));",1,0,0,0,4,0,6,0,1,4,62,8,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,308,                if(!wasWhite) {,1,0,0,1,3,1,0,0,1,5,15,8,0.05263,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,309,                    wasWhite= true;,1,0,0,0,0,0,0,0,2,2,15,10,0.05263,1,0,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,232,                if (!letters && !numbers) {,2,1,0,1,3,1,0,0,2,6,27,6,2.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,83,        ByteArrayInputStream bais = new ByteArrayInputStream(objectData);,2,0,0,1,2,1,0,2,1,6,65,4,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,85,        ClassLoaderAwareObjectInputStream in = null;,1,0,0,0,0,0,0,1,0,2,44,4,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,88,"            in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());",2,0,0,1,6,1,3,1,2,7,85,6,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,95,            T readObject = (T) in.readObject();,1,0,0,1,4,0,2,2,0,5,35,6,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,675,        if (cls.getTypeParameters().length > 0 || toClass.equals(cls)) {,1,2,0,2,7,1,5,0,0,6,64,4,1.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,219,"        for (Map.Entry<TypeVariable<?>, Type> entry : toTypeVarAssigns.entrySet()) {",3,0,0,1,5,1,2,2,0,6,76,4,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,220,            Type toTypeArg = entry.getValue();,1,0,0,1,2,0,2,1,0,5,34,6,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,221,            Type fromTypeArg = fromTypeVarAssigns.get(entry.getKey());,1,0,0,2,4,0,4,1,0,5,58,6,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,83,"        int len = Character.codePointCount(input, 0, input.length());",1,0,0,1,4,1,5,0,0,5,61,5,0.0303,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,94,                    if (pos < len - 2) {,2,2,0,1,3,1,0,0,0,5,20,10,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,97,                        pos++;,1,0,0,0,0,0,0,0,1,2,6,12,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,496,"                    rule = selectNumberRule(Calendar.YEAR, tokenLen);",3,0,0,0,2,0,2,0,2,4,49,9,0.02222,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,40,        if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {,3,7,0,2,7,1,5,0,2,7,88,4,0.44444,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,54,            while(input.charAt(end) != ';') ,0,1,0,2,4,1,3,0,1,6,31,6,0.2,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3298,        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,1,2,1,3,12,1,2,2,1,9,116,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3383,        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());,1,2,1,3,14,1,4,2,1,9,133,4,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,591,        if (u>0) { u=-u; } // make u negative,3,1,0,1,4,1,0,0,2,6,37,4,0.57143,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,584,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,0,3,0,2,7,1,6,0,0,5,43,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,91,"        this(pattern, Locale.getDefault());",1,0,0,1,4,1,2,0,0,5,35,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1413,                return foundDigit && !hasExp;,2,1,0,0,0,1,0,0,1,4,29,8,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1718,"        return containsNone(cs, invalidChars.toCharArray());",0,0,0,1,4,1,4,0,1,5,52,4,0.44444,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,194,        return cs == null || cs.length() == 0;,1,3,0,1,2,1,2,0,0,6,38,4,0.37113,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1455,                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {,10,7,0,1,3,1,0,0,0,5,111,10,0.28571,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1576,            if (searchChars.indexOf(ch) < 0) {,0,1,0,2,5,1,3,0,0,5,34,6,0.1,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,212,        return !StringUtils.isEmpty(cs);,0,0,0,1,2,1,3,0,1,5,32,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1457,                        if (searchChars[j + 1] == cs.charAt(i + 1)) {,2,3,1,2,7,1,2,0,0,7,45,12,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,107,            return new HashSet<IDKey>();,0,0,0,1,2,2,0,2,1,5,28,8,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,152,        return getRegistry().contains(new IDKey(value));,1,0,0,2,6,2,2,1,2,7,48,5,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,522,        getRegistry().add(new IDKey(value));,1,0,0,2,6,1,2,1,2,7,36,5,0.14286,1,1,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,104,    private static final ThreadLocal<Set<IDKey>> REGISTRY = new ThreadLocal<Set<IDKey>>() {,1,0,0,1,3,4,0,6,4,6,87,2,0.02273,1,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,910,            classes[i] = array[i].getClass();,0,0,1,1,6,0,1,0,1,5,33,6,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,148,"        return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();",0,1,0,1,6,1,6,2,0,6,88,5,8.67857,1,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3295,            type = Object.class;,1,0,0,0,0,1,0,1,1,4,20,7,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3574,            return (T[]) new Object[] { null };,0,0,0,1,8,2,0,2,0,4,35,8,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,232,        return getPackageName(cls.getName());,0,0,0,2,4,1,3,0,1,5,37,4,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,201,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",1,0,0,0,2,0,4,0,1,4,70,6,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,252,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,1,0,0,1,2,1,3,0,0,5,54,5,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/WordUtils,45,618,        if (upper == -1 || upper > str.length()) {,2,3,0,2,5,1,2,0,1,7,42,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,160,"            escapeJavaStyleString(writer, str, escapeSingleQuotes);",0,0,0,0,2,0,4,0,1,3,55,6,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,772,            return new UnpaddedNumberField(field);,1,0,0,1,2,2,0,1,1,6,38,5,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,466,"            key = new Pair(key, locale);",3,0,0,0,2,1,0,1,2,5,28,6,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1730,        for (int i = startIndex; i < thisBuf.length; i++) {,6,1,0,1,3,2,0,0,1,6,51,4,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,922,"                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);",1,0,0,1,4,0,4,0,1,5,63,18,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,318,"        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);",3,0,0,0,2,0,4,0,2,4,81,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,433,"        end.add( field, -1 * difference );",1,1,0,0,2,0,3,0,1,5,34,5,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,437,            int newdiff = startValue - endValue;,3,1,0,0,0,1,0,0,0,3,36,7,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,205,            String shortName = ClassUtils.getShortClassName(getEnumClass());,1,0,0,2,4,0,3,1,1,6,64,6,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,206,"            iToString = shortName + ""["" + getName() + ""="" + getValue() + ""]"";",2,1,0,1,6,0,2,0,6,6,65,6,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,643,            for (int j = 0; j < fields[i].length; j++) {,4,1,1,1,5,2,0,0,1,7,44,6,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,644,                if (fields[i][j] == field) {,1,1,1,1,7,1,0,0,0,6,28,8,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,646,                    if (round && roundUp) {,2,1,0,1,3,1,0,0,0,5,23,10,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,709,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);",1,1,1,1,12,0,4,0,0,6,54,7,0.25,1,1,-1
