dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang/StringUtils,40,4837,        int sz = str.length();,4,0,0,1,2,0,4,0,0,8,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4838,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4839,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4840,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4843,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4868,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4869,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4871,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4872,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4873,            if (Character.isDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4874,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4877,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4904,        if (str == null) {,4,1,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4905,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4907,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4908,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4909,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,76,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4910,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4913,        return true;,2,1,0,0,0,1,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4936,        if (str == null) {,8,4,0,1,3,0,0,0,0,12,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4937,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4939,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4940,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4941,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4942,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4945,        return true;,4,1,0,0,0,1,0,0,0,6,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4966,        if (str == null || isEmpty(str)) {,6,3,0,2,5,0,4,0,0,14,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4967,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4969,        int sz = str.length();,2,0,0,1,2,0,4,0,0,7,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4970,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4971,            if (Character.isLowerCase(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4972,                return false;,2,0,0,0,0,1,6,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4975,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4996,        if (str == null || isEmpty(str)) {,4,2,1,2,5,0,8,0,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4997,            return false;,2,1,0,0,0,1,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4999,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5000,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5001,            if (Character.isUpperCase(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5002,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5005,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5027,        return str == null ? EMPTY : str;,6,1,0,0,0,1,0,0,0,7,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5048,        return str == null ? defaultStr : str;,0,0,0,0,0,1,0,0,0,1,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5069,        return StringUtils.isEmpty(str) ? defaultStr : str;,12,2,0,1,2,1,6,0,0,21,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5089,        if (str == null) {,0,1,1,1,3,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5090,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5092,        return new StringBuilder(str).reverse().toString();,2,0,0,3,6,1,4,2,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5115,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5116,            return null;,6,5,1,0,0,1,0,0,0,19,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5120,"        String[] strs = split(str, separatorChar);",0,0,0,2,4,0,0,0,0,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5121,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5122,"        return join(strs, separatorChar);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5160,"        return abbreviate(str, 0, maxWidth);",0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5199,        if (str == null) {,10,4,0,1,3,0,6,0,0,21,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5200,            return null;,4,0,0,0,0,1,8,0,0,12,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5202,        if (maxWidth < 4) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5203,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",4,1,1,1,2,0,4,0,0,13,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5205,        if (str.length() <= maxWidth) {,4,1,0,2,5,0,12,0,0,17,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5206,            return str;,8,0,0,0,0,2,0,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5208,        if (offset > str.length()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5209,            offset = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5211,        if ((str.length() - offset) < (maxWidth - 3)) {,6,3,0,4,9,0,4,0,0,15,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5212,            offset = str.length() - (maxWidth - 3);,4,2,0,2,4,0,4,0,0,11,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5214,        if (offset <= 4) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5215,"            return str.substring(0, maxWidth - 3) + ""..."";",8,3,0,1,2,2,4,0,0,17,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5217,        if (maxWidth < 7) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5218,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0,0,0,1,2,0,0,2,0,3,82,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5220,        if ((offset + (maxWidth - 3)) < str.length()) {,4,3,0,4,9,0,4,0,0,11,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5221,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",6,3,0,2,4,1,8,0,0,18,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5223,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",0,0,0,3,6,1,0,0,0,10,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5254,        if (str1 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5255,            return str2;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5257,        if (str2 == null) {,4,1,1,1,3,0,6,0,0,16,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5258,            return str1;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5260,"        int at = indexOfDifference(str1, str2);",2,0,1,1,2,0,10,0,0,21,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5261,        if (at == -1) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5262,            return EMPTY;,4,0,0,0,0,1,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5264,        return str2.substring(at);,0,0,0,1,2,1,16,0,0,16,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5291,        if (str1 == str2) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5292,            return -1;,8,0,0,0,0,1,8,0,0,17,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5294,        if (str1 == null || str2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5295,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5298,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,8,3,0,3,7,0,8,0,0,21,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5299,            if (str1.charAt(i) != str2.charAt(i)) {,0,1,0,3,7,0,12,0,0,13,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5300,                break;,8,1,0,0,0,0,12,0,0,23,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5303,        if (i < str2.length() || i < str1.length()) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5304,            return i;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5306,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5341,        if (strs == null || strs.length <= 1) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5342,            return -1;,4,0,0,0,0,1,2,0,0,8,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5344,        boolean anyStringNull = false;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5345,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5346,        int arrayLen = strs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5347,        int shortestStrLen = Integer.MAX_VALUE;,0,0,0,0,0,0,0,0,0,0,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5348,        int longestStrLen = 0;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5353,        for (int i = 0; i < arrayLen; i++) {,10,1,0,1,3,0,0,0,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5354,            if (strs[i] == null) {,4,1,1,2,5,0,8,0,0,18,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5355,                anyStringNull = true;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5356,                shortestStrLen = 0;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5358,                allStringsNull = false;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5359,"                shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",10,0,0,3,6,0,8,0,0,18,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5360,"                longestStrLen = Math.max(strs[i].length(), longestStrLen);",10,0,1,3,6,0,16,0,0,31,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5365,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,8,3,0,2,5,0,0,0,0,14,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5366,            return -1;,2,0,0,0,0,1,0,0,0,3,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5370,        if (shortestStrLen == 0) {,2,1,0,1,3,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5371,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5375,        int firstDiff = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5376,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,8,1,0,1,3,0,0,0,0,10,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5377,            char comparisonChar = strs[0].charAt(stringPos);,2,0,1,2,4,0,6,0,0,19,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5378,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,8,1,0,1,3,0,0,0,0,10,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5379,                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {,2,0,0,3,7,0,0,0,0,3,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5380,                    firstDiff = stringPos;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5381,                    break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5384,            if (firstDiff != -1) {,6,4,0,1,3,0,4,0,0,15,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5385,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5389,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,0,0,0,1,3,0,0,0,0,4,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5393,            return shortestStrLen;,2,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5395,        return firstDiff;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5432,        if (strs == null || strs.length == 0) {,8,4,0,1,3,0,0,0,0,12,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5433,            return EMPTY;,4,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5435,        int smallestIndexOfDiff = indexOfDifference(strs);,4,1,0,1,2,0,4,0,0,9,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5436,        if (smallestIndexOfDiff == -1) {,4,2,0,1,3,0,4,0,0,11,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5438,            if (strs[0] == null) {,0,1,1,2,5,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5439,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5441,            return strs[0];,0,0,0,1,2,1,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5442,        } else if (smallestIndexOfDiff == 0) {,8,2,1,1,4,0,4,0,0,21,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5444,            return EMPTY;,6,4,0,0,0,1,4,0,0,15,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5447,"            return strs[0].substring(0, smallestIndexOfDiff);",10,1,0,2,4,1,0,0,0,12,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5488,        if (s == null || t == null) {,4,3,0,1,3,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5489,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5509,        int n = s.length(); // length of s,4,0,0,1,2,0,4,0,0,10,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5510,        int m = t.length(); // length of t,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5512,        if (n == 0) {,4,2,0,1,3,0,12,0,0,18,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5513,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5514,        } else if (m == 0) {,2,1,0,1,4,0,0,0,0,3,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5515,            return n;,0,0,0,0,0,1,10,0,0,10,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5518,        if (n > m) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5520,            String tmp = s;,4,0,0,0,0,0,0,2,0,6,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5521,            s = t;,6,0,0,0,0,0,0,0,0,7,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5522,            t = tmp;,0,1,1,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5523,            n = m;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5524,            m = t.length();,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5527,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",4,1,0,2,4,0,0,0,0,5,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5528,"        int d[] = new int[n+1]; // cost array, horizontally",4,1,0,2,4,0,0,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5539,        for (i = 0; i<=n; i++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5540,            p[i] = i;,4,0,1,1,2,0,0,0,0,10,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5543,        for (j = 1; j<=m; j++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5544,            t_j = t.charAt(j-1);,4,1,0,1,2,0,4,0,0,10,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5545,            d[0] = j;,4,0,1,1,2,0,0,0,0,7,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5547,            for (i=1; i<=n; i++) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5548,                cost = s.charAt(i-1)==t_j ? 0 : 1;,6,2,0,1,2,0,4,0,0,13,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5550,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",6,5,1,6,12,0,8,0,0,32,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5554,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5555,            p = d;,6,0,1,0,0,1,0,0,0,10,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5556,            d = _d;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5561,        return p[n];,0,0,0,1,2,1,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5610,"        return startsWith(str, prefix, false);",0,0,0,1,2,1,6,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5635,"        return startsWith(str, prefix, true);",0,0,0,1,2,1,6,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5650,        if (str == null || prefix == null) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5651,            return (str == null && prefix == null);,6,5,0,1,2,1,4,0,0,16,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5653,        if (prefix.length() > str.length()) {,0,0,0,3,7,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5654,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5656,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",0,0,0,2,4,1,0,0,0,7,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5678,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,8,1,0,3,7,0,12,2,0,24,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5679,            return false;,4,1,0,0,0,1,0,0,0,6,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5681,        for (int i = 0; i < searchStrings.length; i++) {,0,0,1,1,3,0,4,0,0,8,48,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5682,            String searchString = searchStrings[i];,2,0,1,1,2,0,0,2,0,8,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5683,"            if (StringUtils.startsWith(string, searchString)) {",0,0,0,2,5,0,8,0,0,8,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5684,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5687,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5716,"        return endsWith(str, suffix, false);",0,0,0,1,2,1,6,0,0,7,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5742,"        return endsWith(str, suffix, true);",0,0,0,1,2,1,6,0,0,7,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5757,        if (str == null || suffix == null) {,4,3,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5758,            return (str == null && suffix == null);,4,3,0,1,2,1,0,0,0,7,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5760,        if (suffix.length() > str.length()) {,0,1,0,3,7,0,14,0,0,15,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5761,            return false;,4,4,0,0,0,1,8,0,0,17,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5763,        int strOffset = str.length() - suffix.length();,2,1,0,2,4,0,14,0,0,17,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5764,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,2,4,1,14,0,0,14,76,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,170,            return StringUtils.EMPTY;,6,1,0,0,0,1,0,0,0,7,25,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,230,            return StringUtils.EMPTY;,4,1,0,0,0,4,0,4,0,12,25,1,1.0,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,229,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,232,        return getPackageName(cls.getName());,0,0,0,2,4,1,0,0,0,7,37,4,0.5,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,201,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,245,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.16667,1,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,252,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,54,4,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,253,        if (i == -1) {,2,1,0,1,3,0,0,0,0,4,14,4,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,256,"        return className.substring(0, i);",0,0,0,1,2,1,6,0,0,6,33,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,86,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,2,0,0,1,2,3,12,2,0,19,94,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",4,0,0,1,2,0,4,2,0,10,53,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",4,0,0,1,2,0,4,2,0,10,47,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",4,0,0,1,2,0,4,2,0,10,57,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",8,1,0,1,2,0,10,2,0,21,53,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",0,0,0,1,2,0,0,0,0,3,47,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",4,0,0,1,2,0,4,2,0,10,51,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",4,1,0,1,2,0,0,0,0,5,49,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",8,0,0,1,2,0,4,0,0,12,46,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,91,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,0,0,0,2,5,0,0,0,0,7,62,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,92,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,0,0,0,1,2,0,0,0,0,3,64,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,93,            if (!primitiveClass.equals(wrapperClass)) {,0,0,0,2,5,0,6,0,0,7,43,6,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,94,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,1,2,0,0,0,0,3,54,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,96,        },0,0,0,0,1,0,0,0,0,1,1,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,102,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",14,1,0,1,2,3,6,14,0,39,89,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,107,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",2,0,0,1,2,3,6,12,0,23,96,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,124,"        addAbbreviation(""int"", ""I"");",0,0,0,1,2,0,0,0,0,3,28,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,125,"        addAbbreviation(""boolean"", ""Z"");",8,3,0,1,2,0,8,0,0,19,32,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,126,"        addAbbreviation(""float"", ""F"");",2,0,0,1,2,0,6,0,0,11,30,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,127,"        addAbbreviation(""long"", ""J"");",0,0,0,1,2,0,2,0,0,4,29,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,128,"        addAbbreviation(""short"", ""S"");",0,0,0,1,2,0,2,0,0,4,30,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,129,"        addAbbreviation(""byte"", ""B"");",0,0,0,1,2,0,0,0,0,3,29,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,130,"        addAbbreviation(""double"", ""D"");",2,0,0,1,2,0,2,0,0,6,31,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,131,"        addAbbreviation(""char"", ""C"");",0,0,0,1,2,0,2,0,0,4,29,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,132,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,116,"        abbreviationMap.put(primitive, abbreviation);",0,0,0,1,2,0,0,0,0,3,45,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,117,"        reverseAbbreviationMap.put(abbreviation, primitive);",4,3,0,1,2,0,8,0,0,15,52,3,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,118,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,169,        if (cls == null) {,2,1,0,1,3,0,4,0,0,7,18,4,0.03846,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,172,        return getShortClassName(cls.getName());,0,0,0,2,4,1,0,0,0,7,40,4,0.03846,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,455,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,459,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,0,0,0,4,8,0,0,0,0,12,67,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,460,"            escapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,24,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,461,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,498,        if (writer == null ) {,4,1,0,1,3,0,6,0,0,12,22,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,501,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,504,"        Entities.HTML40.escape(writer, string);",4,0,0,1,2,0,6,0,0,10,39,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,505,    },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,832,"                    writer.write(""&#"");",0,0,0,1,2,0,4,0,0,5,19,11,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,833,"                    writer.write(Integer.toString(c, 10));",6,3,0,2,4,0,10,0,0,19,38,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,834,                    writer.write(';');,0,0,0,1,2,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,536,            return super.name(value);,0,0,0,1,2,1,0,0,0,4,25,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,831,                if (c > 0x7F) {,0,0,0,1,3,0,0,0,0,4,15,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang/Entities,42,961,"                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);",2,0,0,2,4,0,8,0,0,11,63,18,0.25,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,826,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,827,        for (int i = 0; i < len; i++) {,0,0,0,1,3,0,0,0,0,4,31,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,828,            char c = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.2,1,0
defect4j,lang,org/apache/commons/lang/Entities,42,829,            String entityName = this.entityName(c);,4,2,1,1,2,0,8,0,0,21,39,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,830,            if (entityName == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,844,    },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,951,                        if (entityContentLen > 1) {,0,0,0,1,3,0,0,0,0,4,27,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,952,                            char isHexChar = entityContent.charAt(1);,0,0,0,1,2,0,0,0,0,3,41,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,954,                                switch (isHexChar) {,2,0,0,1,3,0,0,0,0,2,20,16,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,964,                                if (entityValue > 0xFFFF) {,2,1,0,1,3,0,0,0,0,3,27,16,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,969,                            },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,970,                        },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,525,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,529,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,0,0,0,4,8,0,0,0,0,12,67,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,530,"            unescapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,26,7,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,531,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,557,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,560,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,563,"        Entities.HTML40.unescape(writer, string);",0,0,0,1,2,0,6,0,0,7,41,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,564,    },0,0,0,0,1,0,0,0,0,1,1,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,112,"        this(pattern, Locale.getDefault(), registry);",4,0,0,2,4,0,4,0,0,8,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,148,        ArrayList foundFormats = new ArrayList();,4,0,0,1,2,0,0,0,0,5,41,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,149,        ArrayList foundDescriptions = new ArrayList();,0,0,0,1,2,0,0,0,0,3,46,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,150,        StringBuffer stripCustom = new StringBuffer(pattern.length());,2,0,0,2,4,0,4,4,0,10,62,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,152,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,153,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,154,        int fmtCount = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,155,        while (pos.getIndex() < pattern.length()) {,4,2,0,3,7,0,8,12,0,27,43,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,156,            switch (c[pos.getIndex()]) {,2,0,1,3,7,0,10,4,0,18,28,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,187,                stripCustom.append(c[pos.getIndex()]);,0,0,1,3,6,0,8,0,0,10,38,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,188,                next(pos);,0,0,0,1,2,0,4,0,0,4,10,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,403,        pos.setIndex(pos.getIndex() + 1);,0,1,0,2,4,0,8,0,0,9,33,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,404,        return pos;,2,0,0,0,0,1,0,0,0,2,11,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,124,        super(DUMMY_PATTERN);,0,0,0,1,2,0,0,0,0,3,21,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,125,        setLocale(locale);,0,0,0,1,2,0,4,0,0,4,18,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,126,        this.registry = registry;,0,0,0,0,0,0,0,0,0,0,25,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,127,        applyPattern(pattern);,0,0,0,1,2,0,4,0,0,4,22,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,143,        if (registry == null) {,4,1,0,1,3,0,0,2,0,7,23,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,144,            super.applyPattern(pattern);,4,0,0,1,2,0,0,0,0,4,28,7,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,145,            toPattern = super.toPattern();,6,1,0,1,2,0,0,0,0,8,30,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,146,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,349,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,350,            chars = str.toCharArray();,10,1,0,1,2,0,4,0,0,17,26,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,351,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,363,            int len = chars.length;,8,2,0,0,0,0,4,0,0,15,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,364,            if (pos + len > bufferEnd) {,10,3,0,1,3,0,0,0,0,13,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,365,                return 0;,2,0,0,0,0,4,0,0,0,5,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,367,"            for (int i = 0; i < chars.length; i++, pos++) {",0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,368,                if (chars[i] != buffer[pos]) {,0,1,1,3,7,0,0,0,0,9,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,369,                    return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,372,            return len;,2,0,0,0,0,1,0,0,0,2,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,216,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,217,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",8,1,0,1,2,0,0,0,0,10,69,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,2,0,0,1,2,3,0,4,0,10,68,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,8,0,0,1,2,3,0,4,0,17,69,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",4,0,0,2,4,3,2,4,0,15,94,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,2,0,0,1,2,3,0,4,0,9,65,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,0,0,0,1,2,0,0,0,0,3,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",2,0,0,2,4,3,2,4,0,12,88,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,80,        return COMMA_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,89,        return TAB_MATCHER;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,98,        return SPACE_MATCHER;,4,0,0,0,0,1,8,0,0,12,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,108,        return SPLIT_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,117,        return TRIM_MATCHER;,4,1,0,0,0,1,0,0,0,5,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,126,        return SINGLE_QUOTE_MATCHER;,4,1,0,0,0,1,0,0,0,5,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,135,        return DOUBLE_QUOTE_MATCHER;,2,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,144,        return QUOTE_MATCHER;,2,1,0,0,0,1,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,153,        return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,163,        return new CharMatcher(ch);,2,0,0,1,2,1,2,2,0,8,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,173,        if (chars == null || chars.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,174,            return NONE_MATCHER;,4,0,1,0,0,1,0,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,176,        if (chars.length == 1) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,177,            return new CharMatcher(chars[0]);,2,0,1,2,4,1,0,2,0,8,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,179,        return new CharSetMatcher(chars);,2,0,0,1,2,1,0,2,0,4,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,189,        if (chars == null || chars.length() == 0) {,2,3,0,2,5,0,4,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,190,            return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,192,        if (chars.length() == 1) {,0,1,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,193,            return new CharMatcher(chars.charAt(0));,2,1,0,2,4,1,4,4,0,13,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,195,        return new CharSetMatcher(chars.toCharArray());,0,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,205,        if (str == null || str.length() == 0) {,6,0,0,2,5,3,2,0,0,13,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,206,            return NONE_MATCHER;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,208,        return new StringMatcher(str);,4,1,0,1,2,4,2,0,0,11,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,267,"        return isMatch(buffer, pos, 0, buffer.length);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,413,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,414,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,426,            return buffer[pos] <= 32 ? 1 : 0;,0,1,1,1,2,1,0,0,0,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,386,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,387,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,399,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,317,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,318,            this.ch = ch;,14,1,0,0,0,0,4,0,0,21,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,319,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,331,            return ch == buffer[pos] ? 1 : 0;,6,0,0,1,2,1,0,0,0,7,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,284,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,285,            this.chars = (char[]) chars.clone();,0,0,0,3,6,0,0,0,0,9,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,286,            Arrays.sort(this.chars);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,287,        },2,0,0,0,1,0,6,2,0,10,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,299,"            return Arrays.binarySearch(chars, buffer[pos]) >= 0 ? 1 : 0;",0,0,0,2,4,1,0,0,0,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,90,"        this(pattern, Locale.getDefault());",6,3,0,2,4,0,4,0,0,13,35,3,0.0,1,1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,91,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,101,"        this(pattern, locale, null);",4,0,0,1,2,0,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,102,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,113,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,128,    },2,0,0,0,1,0,4,0,0,7,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,134,        return toPattern;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,158,"                appendQuotedString(pattern, pos, stripCustom, true);",4,0,0,1,2,0,8,2,0,15,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,159,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,161,                fmtCount++;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,162,"                seekNonWs(pattern, pos);",4,0,0,1,2,0,6,2,0,12,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,163,                int start = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,164,"                int index = readArgumentIndex(pattern, next(pos));",0,0,0,2,4,0,0,0,0,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,165,                stripCustom.append(START_FE).append(index);,0,0,0,2,4,0,6,0,0,7,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,166,"                seekNonWs(pattern, pos);",0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,167,                Format format = null;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,168,                String formatDescription = null;,0,0,0,0,0,0,0,0,0,0,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,169,                if (c[pos.getIndex()] == START_FMT) {,4,1,0,3,7,0,0,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,170,"                    formatDescription = parseFormatDescription(pattern,",4,0,0,0,1,0,12,2,0,20,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,172,                    format = getFormat(formatDescription);,0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,173,                    if (format == null) {,4,2,0,1,3,0,10,0,0,16,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,174,                        stripCustom.append(START_FMT).append(formatDescription);,0,0,0,2,4,0,10,0,0,10,56,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,177,                foundFormats.add(format);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,178,                foundDescriptions.add(format == null ? null : formatDescription);,0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,179,                Validate.isTrue(foundFormats.size() == fmtCount);,0,0,0,2,4,0,0,0,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,180,                Validate.isTrue(foundDescriptions.size() == fmtCount);,6,2,0,2,4,0,14,2,0,24,54,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,181,                if (c[pos.getIndex()] != END_FE) {,2,0,0,3,7,0,4,0,0,7,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,182,                    throw new IllegalArgumentException(,8,1,0,0,1,0,0,0,0,10,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,191,        super.applyPattern(stripCustom.toString());,0,0,0,2,4,0,0,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,192,"        toPattern = insertFormats(super.toPattern(), foundDescriptions);",6,0,0,2,4,0,12,0,0,20,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,193,        if (containsElements(foundFormats)) {,0,0,0,2,5,0,4,0,0,4,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,194,            Format[] origFormats = getFormats();,2,0,0,2,4,0,2,2,0,6,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,197,            int i = 0;,4,1,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,198,            for (Iterator it = foundFormats.iterator(); it.hasNext(); i++) {,6,1,0,3,7,0,0,0,0,7,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,199,                Format f = (Format) it.next();,8,0,0,2,4,0,8,6,0,25,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,200,                if (f != null) {,2,1,0,1,3,0,0,0,0,3,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,201,                    origFormats[i] = f;,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,204,            super.setFormats(origFormats);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,206,    },2,0,0,0,1,0,8,2,0,14,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,213,        throw new UnsupportedOperationException();,0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,221,        throw new UnsupportedOperationException();,10,1,0,1,2,0,0,2,0,14,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,229,        throw new UnsupportedOperationException();,4,1,0,1,2,0,2,0,0,7,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,237,        throw new UnsupportedOperationException();,6,5,0,1,2,0,0,2,0,13,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,247,        if (registry != null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,248,            String name = desc;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,249,            String args = null;,2,0,1,0,0,0,0,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,250,            int i = desc.indexOf(START_FMT);,2,0,0,1,2,0,6,0,0,8,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,251,            if (i > 0) {,2,1,0,1,3,0,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,252,"                name = desc.substring(0, i).trim();",0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,253,                args = desc.substring(i + 1).trim();,4,1,0,2,4,0,6,0,0,12,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,255,            FormatFactory factory = (FormatFactory) registry.get(name);,0,0,0,2,4,0,0,0,0,6,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,256,            if (factory != null) {,10,0,0,1,3,0,8,0,0,20,22,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,257,"                return factory.getFormat(name, args, getLocale());",2,0,0,2,4,1,0,0,0,2,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,260,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,271,        int start = pos.getIndex();,2,0,0,1,2,0,0,2,0,4,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,272,"        seekNonWs(pattern, pos);",0,1,0,1,2,0,16,0,0,17,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,273,        StringBuffer result = new StringBuffer();,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,274,        boolean error = false;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,275,        for (; !error && pos.getIndex() < pattern.length(); next(pos)) {,12,3,0,4,9,0,12,0,0,29,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,276,            char c = pattern.charAt(pos.getIndex());,2,0,0,2,4,0,8,0,0,10,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,277,            if (Character.isWhitespace(c)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,278,"                seekNonWs(pattern, pos);",4,0,0,1,2,0,0,2,0,7,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,279,                c = pattern.charAt(pos.getIndex());,0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,280,                if (c != START_FMT && c != END_FE) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,281,                    error = true;,4,2,0,0,0,0,4,0,0,13,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,282,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,285,            if ((c == START_FMT || c == END_FE) && result.length() > 0) {,10,5,0,3,7,0,10,2,0,27,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,287,                    return Integer.parseInt(result.toString());,6,2,0,2,4,1,0,0,0,9,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,288,                } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,293,            error = !Character.isDigit(c);,4,0,0,1,2,1,0,2,0,7,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,294,            result.append(c);,0,0,0,1,2,0,4,0,0,5,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,296,        if (error) {,4,0,0,1,3,0,4,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,297,            throw new IllegalArgumentException(,0,0,0,0,1,0,0,0,0,1,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,301,        throw new IllegalArgumentException(,0,0,0,0,1,0,0,0,0,1,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,313,        int start = pos.getIndex();,4,1,0,1,2,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,314,"        seekNonWs(pattern, pos);",0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,315,        int text = pos.getIndex();,4,0,0,1,2,0,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,316,        int depth = 1;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,317,        for (; pos.getIndex() < pattern.length(); next(pos)) {,6,0,0,4,9,0,10,0,0,17,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,318,            switch (pattern.charAt(pos.getIndex())) {,0,0,0,3,7,0,34,0,0,35,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,320,                depth++;,2,0,0,0,0,1,0,2,0,5,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,321,                break;,6,1,1,0,0,3,2,0,0,15,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,323,                depth--;,2,0,0,0,0,0,0,0,0,3,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,324,                if (depth == 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,325,"                    return pattern.substring(text, pos.getIndex());",0,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,329,"                getQuotedString(pattern, pos, false);",0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,333,        throw new IllegalArgumentException(,6,1,0,0,1,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,345,        if (!containsElements(customPatterns)) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,346,            return pattern;,0,0,0,0,0,1,0,0,0,1,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,348,        StringBuffer sb = new StringBuffer(pattern.length() * 2);,0,0,0,2,4,0,0,0,0,6,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,349,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,350,        int fe = -1;,2,0,0,0,0,0,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,351,        int depth = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,352,        while (pos.getIndex() < pattern.length()) {,2,1,0,3,7,0,8,0,0,12,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,353,            char c = pattern.charAt(pos.getIndex());,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,354,            switch (c) {,4,0,1,1,3,0,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,356,"                appendQuotedString(pattern, pos, sb, false);",0,0,0,1,2,0,8,0,0,9,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,357,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,359,                depth++;,2,0,0,0,0,0,0,0,0,3,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,360,                if (depth == 1) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,361,                    fe++;,2,0,0,0,0,0,0,0,0,3,5,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,362,                    sb.append(START_FE).append(,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,364,                    String customPattern = (String) customPatterns.get(fe);,2,0,0,2,4,0,6,4,0,12,55,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,365,                    if (customPattern != null) {,2,1,0,1,3,0,0,0,0,3,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,366,                        sb.append(START_FMT).append(customPattern);,2,0,1,2,4,0,10,0,0,15,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,368,                },4,3,0,0,1,0,0,0,0,7,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,371,                depth--;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,374,                sb.append(c);,2,0,0,1,2,0,6,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,375,                next(pos);,0,0,0,1,2,0,4,0,0,4,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,377,        },6,0,0,0,1,0,0,2,0,8,1,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,378,        return sb.toString();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,388,        int len = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,389,        char[] buffer = pattern.toCharArray();,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,391,"            len = StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex());",2,0,1,3,6,0,0,0,0,7,64,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,392,            pos.setIndex(pos.getIndex() + len);,2,1,0,2,4,0,12,0,0,16,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,393,        } while (len > 0 && pos.getIndex() < pattern.length());,0,0,0,3,7,0,0,0,0,10,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,394,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,419,        int start = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,420,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,7,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,421,        if (escapingOn && c[start] == QUOTE) {,0,0,0,2,5,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,422,            return appendTo == null ? null : appendTo.append(QUOTE);,2,1,0,1,2,1,6,0,0,9,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,424,        int lastHold = start;,4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,425,        for (int i = pos.getIndex(); i < pattern.length(); i++) {,6,1,0,3,7,0,8,0,0,16,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,426,            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {,2,1,0,3,7,0,10,0,0,13,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,427,"                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(",2,1,0,2,5,0,14,0,0,17,63,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,429,                pos.setIndex(i + ESCAPED_QUOTE.length());,0,0,0,2,4,0,0,0,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,430,                lastHold = pos.getIndex();,2,0,0,1,2,0,4,0,0,7,26,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,431,                continue;,2,1,0,0,0,0,4,0,0,8,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,433,            switch (c[pos.getIndex()]) {,0,0,1,3,7,0,4,0,0,6,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,435,                next(pos);,0,0,0,1,2,0,4,0,0,4,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,436,"                return appendTo == null ? null : appendTo.append(c, lastHold,",2,2,0,0,1,1,18,0,0,22,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,439,                next(pos);,0,0,0,1,2,0,0,0,0,3,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,442,        throw new IllegalArgumentException(,0,0,0,0,1,0,0,0,0,1,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,455,"        appendQuotedString(pattern, pos, null, escapingOn);",0,0,0,1,2,0,8,0,0,9,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,456,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,464,        if (coll == null || coll.size() == 0) {,2,3,0,2,5,0,4,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,465,            return false;,0,0,0,0,0,1,6,0,0,7,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,467,        for (Iterator iter = coll.iterator(); iter.hasNext();) {,2,0,0,3,7,0,8,2,0,12,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,468,            if (iter.next() != null) {,0,1,0,2,5,0,4,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,469,                return true;,4,1,0,0,0,1,2,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,472,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,48,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,49,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,76,        if (expression == false) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,77,            throw new IllegalArgumentException(message + value);,6,2,0,1,2,0,0,2,0,10,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,79,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,102,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,103,            throw new IllegalArgumentException(message + value);,0,0,0,1,2,0,0,0,0,3,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,105,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,129,        if (expression == false) {,8,2,0,1,3,0,0,0,0,11,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,130,            throw new IllegalArgumentException(message + value);,0,0,0,1,2,0,6,0,0,6,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,132,    },14,4,0,0,1,0,0,0,0,19,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,156,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,157,            throw new IllegalArgumentException(message);,2,0,0,1,2,1,6,0,0,9,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,159,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,180,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,181,"            throw new IllegalArgumentException(""The validated expression is false"");",6,1,0,1,2,0,4,2,0,15,72,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,183,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,202,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,203,            throw new IllegalArgumentException(message);,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,205,    },4,1,0,0,1,0,0,0,0,5,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,221,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,222,"            throw new IllegalArgumentException(""The validated object is null"");",0,0,0,1,2,0,0,2,0,4,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,224,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,242,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,243,            throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,245,    },6,0,1,0,1,0,12,2,0,27,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,261,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,262,"            throw new IllegalArgumentException(""The validated array is empty"");",0,0,0,1,2,0,0,2,0,3,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,264,    },0,0,1,0,1,0,0,0,0,4,1,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,282,        if (collection == null || collection.size() == 0) {,2,3,0,2,5,0,8,0,0,13,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,283,            throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,285,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,301,        if (collection == null || collection.size() == 0) {,2,3,0,2,5,0,4,0,0,9,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,302,"            throw new IllegalArgumentException(""The validated collection is empty"");",0,0,0,1,2,0,0,2,0,3,72,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,304,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,322,        if (map == null || map.size() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,323,            throw new IllegalArgumentException(message);,4,1,0,1,2,0,0,2,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,325,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,341,        if (map == null || map.size() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,342,"            throw new IllegalArgumentException(""The validated map is empty"");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,344,    },0,0,0,0,1,0,0,2,0,3,1,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,362,        if (string == null || string.length() == 0) {,0,0,0,2,5,0,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,363,            throw new IllegalArgumentException(message);,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,365,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,381,        if (string == null || string.length() == 0) {,2,3,0,2,5,0,4,0,0,9,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,382,"            throw new IllegalArgumentException(""The validated string is empty"");",0,0,0,1,2,0,0,2,0,3,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,384,    },2,0,0,0,1,0,0,0,0,2,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,407,        Validate.notNull(array);,2,0,1,1,2,0,6,0,0,10,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,408,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,409,            if (array[i] == null) {,10,0,1,2,5,0,10,0,0,22,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,410,                throw new IllegalArgumentException(message);,2,1,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,413,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,434,        Validate.notNull(array);,0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,435,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,436,            if (array[i] == null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,437,"                throw new IllegalArgumentException(""The validated array contains null element at index: "" + i);",2,1,0,1,2,0,0,2,0,7,95,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,440,    },2,0,0,0,1,0,0,0,0,2,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,463,        Validate.notNull(collection);,0,0,0,1,2,0,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,464,        for (Iterator it = collection.iterator(); it.hasNext();) {,2,0,0,3,7,0,8,2,0,12,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,465,            if (it.next() == null) {,0,1,0,2,5,0,4,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,466,                throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,469,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,489,        Validate.notNull(collection);,4,1,0,1,2,0,6,0,0,11,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,490,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,491,        for (Iterator it = collection.iterator(); it.hasNext(); i++) {,4,0,0,3,7,0,8,2,0,15,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,492,            if (it.next() == null) {,0,1,0,2,5,0,4,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,493,"                throw new IllegalArgumentException(""The validated collection contains null element at index: "" + i);",2,1,0,1,2,0,6,2,0,13,100,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,496,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,513,        Validate.notNull(collection);,0,0,0,1,2,0,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,514,        Validate.notNull(clazz);,0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,515,        for (Iterator it = collection.iterator(); it.hasNext(); ) {,2,0,0,3,7,0,8,2,0,12,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,516,            if (clazz.isInstance(it.next()) == false) {,0,1,0,3,7,0,8,0,0,10,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,517,                throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,520,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,543,        Validate.notNull(collection);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,544,        Validate.notNull(clazz);,0,0,0,1,2,0,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,545,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,546,        for (Iterator it = collection.iterator(); it.hasNext(); i++) {,0,0,0,3,7,0,0,0,0,10,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,547,            if (clazz.isInstance(it.next()) == false) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,548,"                throw new IllegalArgumentException(""The validated collection contains an element not of type """,0,0,0,0,1,0,0,2,0,3,94,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,552,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,139,        if (val == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,142,        if (val.length() == 0) {,2,1,0,2,5,0,4,4,0,11,24,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,145,"        if (val.startsWith(""--"")) {",0,0,0,2,5,0,4,0,0,5,27,5,0.5,1,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,152,"        if (val.startsWith(""0x"") || val.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,155,        char lastChar = val.charAt(val.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,159,        int decPos = val.indexOf('.');,4,1,0,1,2,0,4,0,0,10,30,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,160,        int expPos = val.indexOf('e') + val.indexOf('E') + 1;,0,0,0,2,4,0,0,0,0,6,53,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,162,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,174,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,177,                mant = val;,6,0,0,0,0,3,2,2,0,15,11,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,179,            dec = null;,2,0,0,0,0,0,0,0,0,3,11,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,181,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,0,6,0,0,7,35,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,182,            if (expPos > -1 && expPos < val.length() - 1) {,8,5,0,2,5,0,8,0,0,22,47,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,185,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,188,"            String numeric = val.substring(0, val.length() - 1);",0,0,0,2,4,0,0,0,0,6,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,189,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,190,            switch (lastChar) {,0,0,0,1,3,0,0,0,0,4,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,193,                    if (dec == null,2,1,0,0,1,0,0,0,0,3,15,9,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,297,        if (s == null) {,2,1,0,1,3,0,0,0,0,3,16,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,300,        for (int i = s.length() - 1; i >= 0; i--) {,6,3,0,2,5,0,10,0,0,21,43,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,301,            if (s.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,25,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,302,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,47,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,48,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,61,"        return stringToInt(str, 0);",0,0,0,1,2,1,4,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,74,            return Integer.parseInt(str);,0,0,0,1,2,1,6,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,75,        } catch (NumberFormatException nfe) {,8,0,0,1,4,0,8,2,0,19,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,76,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,140,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,143,"            throw new NumberFormatException(""\""\"" is not a valid number."");",0,0,0,1,2,0,0,2,0,3,63,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,150,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,153,            return createInteger(val);,0,0,0,1,2,1,4,2,0,7,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,164,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,165,                if (expPos < decPos) {,6,1,0,1,3,0,0,0,0,7,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,166,"                    throw new NumberFormatException(val + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,168,"                dec = val.substring(decPos + 1, expPos);",4,1,0,1,2,0,6,0,0,12,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,170,                dec = val.substring(decPos + 1);,4,1,0,1,2,0,4,0,0,10,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,172,"            mant = val.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,175,"                mant = val.substring(0, expPos);",2,0,0,1,2,0,6,0,0,9,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,183,"                exp = val.substring(expPos + 1, val.length() - 1);",4,2,0,2,4,0,8,0,0,15,50,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,197,                            return createLong(numeric);,4,3,0,1,2,1,12,0,0,19,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,198,                        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,201,                        return createBigInteger(numeric);,2,0,0,1,2,1,4,2,0,8,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,204,"                    throw new NumberFormatException(val + "" is not a valid number."");",4,1,0,1,2,0,0,2,0,8,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,208,                        Float f = NumberUtils.createFloat(numeric);,2,0,0,1,2,0,6,2,0,10,43,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,209,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,212,                            return f;,4,0,0,0,0,4,4,2,0,13,9,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,217,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,215,                    } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,222,                        Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,0,6,2,0,10,45,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,223,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,4,4,0,5,11,0,8,0,0,18,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,224,                            return d;,6,0,0,0,0,1,0,0,0,6,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,228,                    },0,0,0,0,1,0,4,0,0,4,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,226,                    } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,230,                        return createBigDecimal(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,231,                    } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,236,"                    throw new NumberFormatException(val + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,242,            if (expPos > -1 && expPos < val.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,243,"                exp = val.substring(expPos + 1, val.length());",4,1,0,2,4,0,8,0,0,14,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,245,                exp = null;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,247,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,250,                    return createInteger(val);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,251,                } catch (NumberFormatException nfe) {,6,0,0,1,4,3,0,6,0,16,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,255,                    return createLong(val);,0,0,0,1,2,1,4,0,0,4,23,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,256,                } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,259,                return createBigInteger(val);,0,0,0,1,2,1,4,0,0,4,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,263,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,0,0,0,2,4,0,0,0,0,6,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,265,                    Float f = createFloat(val);,12,1,0,1,2,5,12,6,0,38,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,266,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,267,                        return f;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,271,                },2,0,0,0,1,3,0,4,0,9,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,269,                } catch (NumberFormatException nfe) {,4,3,0,1,4,0,4,2,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,273,                    Double d = createDouble(val);,2,0,0,1,2,0,4,2,0,8,29,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,274,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,275,                        return d;,2,0,0,0,0,1,0,0,0,3,9,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,279,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,277,                } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,281,                return createBigDecimal(val);,0,0,0,1,2,1,4,0,0,4,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,298,            return true;,0,0,0,0,0,1,4,0,0,5,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,305,        return s.length() > 0;,0,1,0,1,2,1,4,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,318,        return Float.valueOf(val);,0,0,0,1,2,1,6,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,329,        return Double.valueOf(val);,4,1,0,1,2,1,6,0,0,12,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,342,        return Integer.decode(val);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,353,        return Long.valueOf(val);,0,0,0,1,2,1,14,0,0,14,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,364,        BigInteger bi = new BigInteger(val);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,365,        return bi;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,376,        BigDecimal bd = new BigDecimal(val);,4,1,0,1,2,0,4,4,0,13,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,377,        return bd;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,391,        if (b < a) {,4,1,0,1,3,0,6,2,0,13,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,392,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,394,        if (c < a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,395,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,397,        return a;,4,4,0,0,0,1,8,0,0,16,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,409,        if (b < a) {,6,1,0,1,3,0,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,410,            a = b;,2,0,0,0,0,0,6,0,0,9,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,412,        if (c < a) {,10,2,0,1,3,0,0,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,413,            a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,415,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,427,        if (b > a) {,4,0,0,1,3,0,2,0,0,7,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,428,            a = b;,4,0,0,0,0,0,4,0,0,9,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,430,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,431,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,433,        return a;,2,1,0,0,0,1,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,445,        if (b > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,446,            a = b;,18,1,0,0,0,0,8,0,0,30,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,448,        if (c > a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,449,            a = c;,2,0,0,0,0,2,8,2,0,15,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,451,        return a;,2,0,0,0,0,1,4,2,0,8,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,491,        if (lhs < rhs) {,4,1,0,1,3,0,4,0,0,9,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,492,            return -1;,0,0,1,0,0,1,10,2,0,24,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,494,        if (lhs > rhs) {,4,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,495,            return +1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,501,        long lhsBits = Double.doubleToLongBits(lhs);,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,502,        long rhsBits = Double.doubleToLongBits(rhs);,6,1,0,1,2,0,18,0,0,26,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,503,        if (lhsBits == rhsBits) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,504,            return 0;,4,1,1,0,0,1,0,0,0,10,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,512,        if (lhsBits < rhsBits) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,513,            return -1;,0,0,0,0,0,1,4,0,0,5,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,515,            return +1;,0,0,0,0,0,1,6,0,0,8,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,552,        if (lhs < rhs) {,12,1,0,1,3,1,0,6,0,20,16,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,553,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,555,        if (lhs > rhs) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,556,            return +1;,0,0,0,0,0,1,8,0,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,562,        int lhsBits = Float.floatToIntBits(lhs);,2,0,0,1,2,0,6,0,0,8,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,563,        int rhsBits = Float.floatToIntBits(rhs);,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,564,        if (lhsBits == rhsBits) {,6,1,0,1,3,0,6,0,0,13,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,565,            return 0;,2,0,0,0,0,1,0,2,0,5,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,573,        if (lhsBits < rhsBits) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,574,            return -1;,6,1,0,0,0,1,0,2,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,576,            return +1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,593,        if ((str == null) || (str.length() == 0)) {,0,0,0,4,9,0,0,0,0,13,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,594,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,596,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,597,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,11,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,598,                return false;,2,0,0,0,0,2,0,2,0,5,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,601,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,618,        if (StringUtils.isEmpty(str)) {,2,1,0,2,5,1,18,2,0,25,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,619,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,621,        char[] chars = str.toCharArray();,2,0,0,2,4,0,4,0,0,8,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,622,        int sz = chars.length;,8,0,0,0,0,3,4,2,0,17,22,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,623,        boolean hasExp = false;,4,0,0,0,0,0,2,0,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,624,        boolean hasDecPoint = false;,2,0,0,0,0,0,0,0,0,2,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,625,        boolean allowSigns = false;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,626,        boolean foundDigit = false;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,628,        int start = (chars[0] == '-') ? 1 : 0;,2,1,1,2,4,0,0,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,629,        if (sz > start + 1) {,6,0,0,1,3,3,2,2,0,15,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,630,            if (chars[start] == '0' && chars[start + 1] == 'x') {,2,0,0,3,7,0,0,0,0,2,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,631,                int i = start + 2;,4,1,0,0,0,0,8,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,632,                if (i == sz) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,633,"                    return false; // str == ""0x""",2,1,0,0,0,1,0,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,636,                for (; i < chars.length; i++) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,637,                    if ((chars[i] < '0' || chars[i] > '9'),10,3,0,3,7,3,14,0,0,34,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,640,                        return false;,2,2,0,0,0,1,6,0,0,13,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,643,                return true;,2,0,1,0,0,1,8,2,0,17,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,646,"        sz--; // don't want to loop to the last char, check it afterwords",0,1,0,0,0,0,4,0,0,5,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,648,        int i = start;,4,0,0,0,0,0,0,0,0,4,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,651,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,16,6,0,2,5,3,2,0,0,29,61,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,652,            if (chars[i] >= '0' && chars[i] <= '9') {,2,4,1,3,7,0,0,0,0,16,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,653,                foundDigit = true;,2,0,0,0,0,0,0,0,0,4,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,654,                allowSigns = false;,4,1,0,0,0,0,12,4,0,21,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,656,            } else if (chars[i] == '.') {,0,1,1,2,6,0,0,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,657,                if (hasDecPoint || hasExp) {,0,0,0,1,3,0,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,659,                    return false;,0,0,0,0,0,1,0,0,0,1,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,661,                hasDecPoint = true;,2,0,0,0,0,0,0,0,0,4,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,662,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,0,0,3,8,0,0,0,0,11,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,664,                if (hasExp) {,2,0,0,1,3,0,0,0,0,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,666,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,668,                if (!foundDigit) {,6,1,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,669,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,671,                hasExp = true;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,672,                allowSigns = true;,4,0,0,0,0,3,2,0,0,11,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,673,            } else if (chars[i] == '+' || chars[i] == '-') {,0,0,0,3,8,0,0,0,0,11,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,674,                if (!allowSigns) {,16,2,0,1,3,0,8,0,0,28,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,675,                    return false;,0,0,0,0,0,1,0,0,0,1,13,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,677,                allowSigns = false;,8,1,0,0,0,0,4,0,0,15,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,678,                foundDigit = false; // we need a digit after the E,0,0,0,0,0,0,0,0,0,0,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,680,                return false;,2,1,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,682,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,684,        if (i < chars.length) {,6,1,0,1,3,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,685,            if (chars[i] >= '0' && chars[i] <= '9') {,0,0,0,3,7,0,0,0,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,687,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,689,            if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,7,0,0,0,0,13,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,691,                return false;,2,0,0,0,0,1,6,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,693,            if (!allowSigns,0,0,0,0,1,0,10,0,0,10,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,698,                return foundDigit;,4,0,0,0,0,1,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,700,            if (chars[i] == 'l',0,1,1,1,3,0,0,0,0,6,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,703,                return foundDigit && !hasExp;,4,1,0,0,0,1,0,0,0,6,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,706,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,710,        return !allowSigns && foundDigit;,4,1,0,0,0,1,0,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5279,        return str == null ? EMPTY : str;,0,0,0,0,0,1,0,0,0,1,33,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,167,        super();,0,0,0,1,2,0,14,0,0,15,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,168,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,191,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,209,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,229,        if (str == null || (strLen = str.length()) == 0) {,6,4,0,3,7,0,4,0,0,15,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,230,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,232,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,234,                return false;,4,0,0,0,0,1,0,0,0,6,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,237,        return true;,12,4,0,0,0,8,4,10,0,38,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,257,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,282,        return str == null ? EMPTY : str.trim();,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,309,        return str == null ? null : str.trim();,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,335,        String ts = trim(str);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,336,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,361,        return str == null ? EMPTY : str.trim();,2,0,0,1,2,1,4,0,0,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,389,"        return strip(str, null);",0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,416,        if (str == null) {,2,0,0,1,3,2,4,2,0,10,18,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,417,            return null;,4,0,0,0,0,4,2,2,0,12,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,419,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,420,        return str.length() == 0 ? null : str;,2,0,0,1,2,1,0,0,0,2,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,446,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,476,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,477,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,479,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,480,"        return stripEnd(str, stripChars);",2,0,0,1,2,1,6,2,0,11,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,509,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,510,            return str;,4,0,0,0,0,1,6,2,0,12,11,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,512,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,513,        if (stripChars == null) {,12,2,0,1,3,0,10,0,0,26,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,514,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,515,                start++;,2,0,0,0,0,0,0,0,0,3,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,517,        } else if (stripChars.length() == 0) {,2,1,0,2,6,0,10,2,0,15,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,518,            return str;,2,0,0,0,0,1,0,2,0,6,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,520,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,6,3,0,5,11,0,10,0,0,20,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,521,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,524,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,553,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,554,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,557,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,558,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,4,9,0,0,0,0,13,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,559,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,561,        } else if (stripChars.length() == 0) {,10,1,0,2,6,0,0,0,0,12,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,562,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,564,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,4,4,0,5,11,0,14,0,0,23,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,565,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,568,"        return str.substring(0, end);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,593,"        return stripAll(strs, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,623,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,624,            return strs;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,626,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,8,0,0,8,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,627,        for (int i = 0; i < strsLen; i++) {,12,1,0,1,3,3,0,4,0,22,35,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,628,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,630,        return newArr;,14,2,0,0,0,7,4,0,0,29,14,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,656,        return str1 == null ? str2 == null : str1.equals(str2);,4,2,0,1,2,1,6,0,0,12,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,681,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,706,        if (isEmpty(str)) {,6,4,0,2,5,0,4,0,0,15,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,707,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,709,        return str.indexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,738,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,739,            return -1;,0,0,0,0,0,1,4,0,0,5,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,741,"        return str.indexOf(searchChar, startPos);",6,0,0,1,2,1,8,0,0,16,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,767,        if (str == null || searchStr == null) {,10,4,0,1,3,0,0,0,0,15,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,768,            return -1;,2,0,0,0,0,1,0,0,0,3,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,770,        return str.indexOf(searchStr);,0,0,0,1,2,1,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,801,        if (str == null || searchStr == null || ordinal <= 0) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,802,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,3,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,804,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,805,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,807,        int found = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,808,        int index = INDEX_NOT_FOUND;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,810,"            index = str.indexOf(searchStr, index + 1);",0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,811,            if (index < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,812,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,814,            found++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,815,        } while (found < ordinal);,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,816,        return index;,2,0,0,0,0,1,4,2,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,851,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,852,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,855,        if (searchStr.length() == 0 && startPos >= str.length()) {,0,0,0,3,7,0,6,0,0,6,58,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,856,            return str.length();,0,0,0,1,2,1,10,0,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,858,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,883,        if (isEmpty(str)) {,2,1,0,2,5,0,4,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,884,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,886,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,917,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,918,            return -1;,2,0,0,0,0,1,0,0,0,4,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,920,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,946,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,947,            return -1;,4,1,0,0,0,1,0,0,0,5,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,949,        return str.lastIndexOf(searchStr);,0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,981,        if (str == null || searchStr == null) {,6,3,0,1,3,0,0,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,982,            return -1;,2,0,0,0,0,4,2,2,0,11,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,984,"        return str.lastIndexOf(searchStr, startPos);",4,1,0,1,2,1,8,2,0,15,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1009,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1010,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1012,        return str.indexOf(searchChar) >= 0;,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1037,        if (str == null || searchStr == null) {,6,1,0,1,3,0,6,0,0,14,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1038,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1040,        return str.indexOf(searchStr) >= 0;,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1067,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1068,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1070,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",6,0,1,3,6,1,10,0,0,20,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1098,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1099,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1101,        for (int i = 0; i < str.length(); i++) {,4,1,0,2,5,0,6,0,0,12,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1102,            char ch = str.charAt(i);,2,0,0,1,2,0,4,0,0,8,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1103,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1104,                if (searchChars[j] == ch) {,2,1,1,2,5,0,6,0,0,13,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1105,                    return i;,6,2,0,0,0,1,12,0,0,21,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1109,        return -1;,8,2,0,0,0,1,0,2,0,14,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1135,        if (isEmpty(str) || isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1136,            return -1;,2,0,0,0,0,4,8,4,0,19,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1138,"        return indexOfAny(str, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1167,        if (str == null || str.length() == 0 || searchChars == null || searchChars.length == 0) {,0,0,0,2,5,0,0,0,0,7,89,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1168,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1170,        for (int i = 0; i < str.length(); i++) {,8,2,1,2,5,0,4,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1171,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1172,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,1,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1173,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1174,                    return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1178,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1209,        if (searchChars == null) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1210,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1212,"        return containsAny(str, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1240,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1241,            return -1;,2,0,0,0,0,1,0,2,0,4,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1243,        outer : for (int i = 0; i < str.length(); i++) {,4,0,0,2,5,0,4,0,0,8,48,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1244,            char ch = str.charAt(i);,4,1,0,1,2,0,0,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1245,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1246,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1247,                    continue outer;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1250,            return i;,0,0,0,0,0,1,0,0,0,1,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1252,        return -1;,2,0,0,0,0,1,0,0,0,4,10,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1278,        if (isEmpty(str) || isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1279,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1281,        for (int i = 0; i < str.length(); i++) {,2,0,0,2,5,0,14,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1282,            if (searchChars.indexOf(str.charAt(i)) < 0) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1283,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1286,        return -1;,2,0,0,0,0,4,2,2,0,10,10,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1314,        if ((valid == null) || (str == null)) {,0,0,0,3,7,0,8,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1315,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1317,        if (str.length() == 0) {,0,0,0,2,5,0,2,0,0,2,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1318,            return true;,4,1,0,0,0,1,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1320,        if (valid.length == 0) {,10,1,0,1,3,0,0,0,0,13,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1321,            return false;,2,1,0,0,0,1,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1323,"        return indexOfAnyBut(str, valid) == -1;",0,1,0,1,2,1,6,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1349,        if (str == null || validChars == null) {,6,1,0,1,3,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1350,            return false;,2,0,0,0,0,4,14,2,0,23,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1352,"        return containsOnly(str, validChars.toCharArray());",2,0,0,2,4,1,4,0,0,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1380,        if (str == null || invalidChars == null) {,4,3,0,1,3,0,8,0,0,17,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1381,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1383,        int strSize = str.length();,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1384,        int validSize = invalidChars.length;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1385,        for (int i = 0; i < strSize; i++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1386,            char ch = str.charAt(i);,14,1,0,1,2,0,10,2,0,28,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1387,            for (int j = 0; j < validSize; j++) {,16,2,0,1,3,0,0,0,0,20,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1388,                if (invalidChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1389,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1393,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1419,        if (str == null || invalidChars == null) {,4,3,0,1,3,0,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1420,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1422,"        return containsNone(str, invalidChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1454,        if ((str == null) || (searchStrs == null)) {,0,0,0,3,7,0,0,0,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1455,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1457,        int sz = searchStrs.length;,8,0,0,0,0,3,2,0,0,13,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1460,        int ret = Integer.MAX_VALUE;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1462,        int tmp = 0;,2,1,0,0,0,0,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1463,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1464,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1465,            if (search == null) {,2,0,0,1,3,0,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1466,                continue;,12,4,0,0,0,0,4,0,0,21,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1468,            tmp = str.indexOf(search);,4,1,0,1,2,0,6,2,0,16,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1469,            if (tmp == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1470,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1473,            if (tmp < ret) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1474,                ret = tmp;,2,1,0,0,0,0,6,0,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1478,        return (ret == Integer.MAX_VALUE) ? -1 : ret;,0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1507,        if ((str == null) || (searchStrs == null)) {,0,0,0,3,7,0,0,0,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1508,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1510,        int sz = searchStrs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1511,        int ret = -1;,2,0,0,0,0,0,0,0,0,3,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1512,        int tmp = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1513,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,0,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1514,            String search = searchStrs[i];,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1515,            if (search == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1516,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1518,            tmp = str.lastIndexOf(search);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1519,            if (tmp > ret) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1520,                ret = tmp;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1523,        return ret;,4,3,0,0,0,1,0,0,0,9,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1553,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1554,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1558,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1559,            start = str.length() + start; // remember start is negative,10,2,1,1,2,0,6,0,0,25,59,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1562,        if (start < 0) {,4,1,1,1,3,0,0,2,0,11,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1563,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1565,        if (start > str.length()) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1566,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1569,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1608,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1609,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1613,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1614,            end = str.length() + end; // remember end is negative,4,1,0,1,2,0,4,0,0,10,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1616,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1617,            start = str.length() + start; // remember start is negative,0,0,0,1,2,0,0,0,0,1,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1621,        if (end > str.length()) {,2,0,0,2,5,0,0,4,0,7,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1622,            end = str.length();,2,0,0,1,2,0,4,0,0,7,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1626,        if (start > end) {,0,0,0,1,3,0,0,0,0,1,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1627,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1630,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1631,            start = 0;,4,0,0,0,0,0,6,0,0,12,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1633,        if (end < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1634,            end = 0;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1637,"        return str.substring(start, end);",0,0,0,1,2,1,8,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1663,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1664,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1666,        if (len < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1667,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1669,        if (str.length() <= len) {,2,1,0,2,5,0,4,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1670,            return str;,2,0,0,0,0,1,0,0,0,2,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1672,"        return str.substring(0, len);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1696,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1697,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1699,        if (len < 0) {,6,2,0,1,3,0,8,0,0,17,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1700,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1702,        if (str.length() <= len) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1703,            return str;,6,0,0,0,0,1,0,0,0,6,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1705,        return str.substring(str.length() - len);,0,0,0,2,4,1,0,0,0,7,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1733,        if (str == null) {,8,1,0,1,3,0,0,0,0,10,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1734,            return null;,2,1,1,0,0,1,0,0,0,7,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1736,        if (len < 0 || pos > str.length()) {,8,4,0,2,5,0,6,0,0,18,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1737,            return EMPTY;,4,0,0,0,0,1,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1739,        if (pos < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1740,            pos = 0;,6,0,0,0,0,0,0,4,0,11,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1742,        if (str.length() <= (pos + len)) {,2,0,0,3,7,0,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1743,            return str.substring(pos);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1745,"        return str.substring(pos, pos + len);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1776,        if (isEmpty(str) || separator == null) {,2,2,0,2,5,0,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1777,            return str;,8,0,0,0,0,1,0,0,0,9,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1779,        if (separator.length() == 0) {,2,0,0,2,5,1,4,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1780,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1782,        int pos = str.indexOf(separator);,2,0,0,1,2,0,16,0,0,18,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1783,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1784,            return str;,2,0,0,0,0,1,10,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1786,"        return str.substring(0, pos);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1816,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1817,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1819,        if (separator == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1820,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1822,        int pos = str.indexOf(separator);,2,0,0,1,2,0,6,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1823,        if (pos == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1824,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1826,        return str.substring(pos + separator.length());,0,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1855,        if (isEmpty(str) || isEmpty(separator)) {,2,1,0,3,7,0,14,2,0,19,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1856,            return str;,4,0,0,0,0,1,0,0,0,5,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1858,        int pos = str.lastIndexOf(separator);,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1859,        if (pos == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1860,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1862,"        return str.substring(0, pos);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1893,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1894,            return str;,0,4,0,0,0,1,12,0,0,16,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1896,        if (isEmpty(separator)) {,0,0,0,2,5,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1897,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1899,        int pos = str.lastIndexOf(separator);,2,0,0,1,2,0,6,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1900,        if (pos == -1 || pos == (str.length() - separator.length())) {,4,4,0,4,9,0,8,0,0,17,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1901,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1903,        return str.substring(pos + separator.length());,4,2,0,2,4,1,8,0,0,14,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1930,"        return substringBetween(str, tag, tag);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1961,        if (str == null || open == null || close == null) {,6,5,0,1,3,0,0,0,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1962,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1964,        int start = str.indexOf(open);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1965,        if (start != -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1966,"            int end = str.indexOf(close, start + open.length());",4,1,0,2,4,0,10,0,0,15,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1967,            if (end != -1) {,2,1,0,1,3,0,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1968,"                return str.substring(start + open.length(), end);",2,1,0,2,4,1,14,0,0,17,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1971,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1997,        if (str == null || isEmpty(open) || isEmpty(close)) {,8,5,1,3,7,0,4,0,0,19,53,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1998,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2000,        int strLen = str.length();,2,0,1,1,2,0,4,0,0,10,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2001,        if (strLen == 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2002,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,5,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2004,        int closeLen = close.length();,6,0,0,1,2,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2005,        int openLen = open.length();,2,0,0,1,2,0,4,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2006,        List list = new ArrayList();,2,0,0,1,2,0,0,4,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2007,        int pos = 0;,4,0,1,0,0,0,4,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2008,        while (pos < (strLen - closeLen)) {,10,2,0,2,5,1,0,2,0,15,35,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2009,"            int start = str.indexOf(open, pos);",0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2010,            if (start < 0) {,4,1,0,1,3,0,0,0,0,6,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2011,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2013,            start += openLen;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2014,"            int end = str.indexOf(close, start);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2015,            if (end < 0) {,4,1,0,1,3,0,6,0,0,11,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2016,                break;,4,1,0,0,0,0,6,0,0,11,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2018,"            list.add(str.substring(start, end));",0,0,0,2,4,0,12,0,0,12,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2019,            pos = end + closeLen;,6,1,0,0,0,0,0,0,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2020,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2021,        if (list.isEmpty()) {,4,3,0,2,5,0,4,0,0,11,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2022,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2024,        return (String[]) list.toArray(new String [list.size()]);,0,0,0,5,10,1,14,4,0,18,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2052,"        return substringBetween(str, tag, tag);",2,0,0,1,2,1,0,0,0,2,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2082,"        return substringBetween(str, open, close);",0,0,0,1,2,1,8,0,0,8,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2110,"        return split(str, null, -1);",0,0,0,1,2,1,12,0,0,15,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2138,"        return splitWorker(str, separatorChar, false);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2167,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2201,"        return splitWorker(str, separatorChars, max, false);",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2228,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2259,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,1,2,1,8,0,0,9,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2288,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0,0,0,1,2,1,0,0,0,4,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2321,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0,0,0,1,2,1,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2341,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2342,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2345,        int len = str.length();,8,1,0,1,2,0,4,0,0,13,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2347,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2348,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2351,        if ((separator == null) || (EMPTY.equals(separator))) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2353,"            return splitWorker(str, null, max, preserveAllTokens);",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2356,        int separatorLength = separator.length();,2,0,0,1,2,0,4,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2358,        ArrayList substrings = new ArrayList();,2,0,0,1,2,0,0,4,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2359,        int numberOfSubstrings = 0;,2,0,0,0,0,0,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2360,        int beg = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2361,        int end = 0;,2,1,0,0,0,0,0,0,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2362,        while (end < len) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2363,"            end = str.indexOf(separator, beg);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2365,            if (end > -1) {,2,1,0,1,3,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2366,                if (end > beg) {,8,4,0,1,3,0,4,0,0,16,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2367,                    numberOfSubstrings += 1;,2,0,1,0,0,0,0,0,0,7,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2369,                    if (numberOfSubstrings == max) {,4,1,0,1,3,0,0,0,0,5,32,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2370,                        end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2371,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2375,"                        substrings.add(str.substring(beg, end));",4,3,1,2,4,0,16,0,0,25,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2380,                        beg = end + separatorLength;,10,2,0,0,0,0,0,0,0,13,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2384,                    if (preserveAllTokens) {,6,0,0,1,3,0,0,2,0,9,24,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2385,                        numberOfSubstrings += 1;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2386,                        if (numberOfSubstrings == max) {,8,1,0,1,3,0,0,0,0,11,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2387,                            end = len;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2388,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2390,                            substrings.add(EMPTY);,0,0,0,1,2,0,6,0,0,6,22,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2393,                    beg = end + separatorLength;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2397,                substrings.add(str.substring(beg));,0,0,0,2,4,0,0,0,0,6,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2398,                end = len;,2,0,0,0,0,0,6,0,0,8,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2402,        return (String[]) substrings.toArray(new String[substrings.size()]);,0,0,0,5,10,1,0,0,0,16,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2431,"        return splitWorker(str, null, -1, true);",0,0,0,1,2,1,4,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2467,"        return splitWorker(str, separatorChar, true);",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2485,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2486,            return null;,4,4,0,0,0,1,8,0,0,17,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2488,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2489,        if (len == 0) {,10,7,0,1,3,0,18,4,0,39,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2490,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2492,        List list = new ArrayList();,8,0,0,1,2,0,0,4,0,12,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2493,"        int i = 0, start = 0;",0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2494,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2495,        boolean lastMatch = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2496,        while (i < len) {,10,1,0,1,3,0,0,0,0,12,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2497,            if (str.charAt(i) == separatorChar) {,2,1,0,2,5,0,6,0,0,9,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2498,                if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2499,"                    list.add(str.substring(start, i));",4,1,0,2,4,0,0,0,0,6,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2500,                    match = false;,2,0,0,0,0,0,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2501,                    lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2503,                start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2504,                continue;,0,0,0,0,0,0,0,0,0,1,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2506,            lastMatch = false;,2,0,0,0,0,0,2,0,0,4,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2507,            match = true;,4,1,0,0,0,0,0,0,0,6,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2508,            i++;,4,0,0,0,0,0,0,0,0,6,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2510,        if (match || (preserveAllTokens && lastMatch)) {,0,0,0,2,5,0,0,0,0,7,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2511,"            list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2513,        return (String[]) list.toArray(new String[list.size()]);,2,0,0,5,10,1,14,4,0,20,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2550,"        return splitWorker(str, separatorChars, -1, true);",0,0,0,1,2,1,6,0,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2590,"        return splitWorker(str, separatorChars, max, true);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2612,        if (str == null) {,2,0,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2613,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2615,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2616,        if (len == 0) {,6,1,0,1,3,0,0,0,0,8,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2617,            return ArrayUtils.EMPTY_STRING_ARRAY;,8,1,0,0,0,1,0,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2619,        List list = new ArrayList();,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2620,        int sizePlus1 = 1;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2621,"        int i = 0, start = 0;",6,0,0,0,0,0,0,0,0,7,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2622,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2623,        boolean lastMatch = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2624,        if (separatorChars == null) {,10,3,0,1,3,0,0,0,0,13,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2626,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2627,                if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2628,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2629,                        lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2630,                        if (sizePlus1++ == max) {,10,2,0,1,3,0,8,2,0,24,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2631,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2632,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2634,"                        list.add(str.substring(start, i));",2,1,0,2,4,0,12,0,0,15,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2635,                        match = false;,4,1,0,0,0,0,0,0,0,7,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2637,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2638,                    continue;,0,0,0,0,0,0,6,0,0,6,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2640,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2641,                match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2642,                i++;,10,4,0,0,0,0,10,0,0,25,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2644,        } else if (separatorChars.length() == 1) {,0,0,0,2,6,0,0,0,0,8,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2646,            char sep = separatorChars.charAt(0);,2,0,0,1,2,0,4,0,0,6,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2647,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2648,                if (str.charAt(i) == sep) {,0,0,0,2,5,0,12,0,0,12,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2649,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2650,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2651,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,0,0,0,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2652,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2653,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2655,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2656,                        match = false;,2,1,0,0,0,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2658,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2659,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2661,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2662,                match = true;,2,0,0,0,0,0,0,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2663,                i++;,2,0,0,0,0,0,0,0,0,2,4,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2665,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2667,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2668,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,2,0,0,3,7,0,0,0,0,2,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2669,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2670,                        lastMatch = true;,2,0,0,0,0,0,4,0,0,6,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2671,                        if (sizePlus1++ == max) {,6,2,0,1,3,0,4,0,0,14,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2672,                            i = len;,4,1,0,0,0,0,0,0,0,5,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2673,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2675,"                        list.add(str.substring(start, i));",2,0,1,2,4,0,16,0,0,32,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2676,                        match = false;,4,0,0,0,0,0,0,0,0,6,14,0,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2678,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2679,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2681,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2682,                match = true;,2,0,0,0,0,0,0,0,0,4,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2683,                i++;,6,1,0,0,0,0,0,0,0,7,4,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2686,        if (match || (preserveAllTokens && lastMatch)) {,10,3,0,2,5,0,4,2,0,19,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2687,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2689,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,5,10,1,26,4,0,30,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2712,"        return splitByCharacterType(str, false);",0,0,0,1,2,1,4,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2740,"        return splitByCharacterType(str, true);",0,0,0,1,2,1,4,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2758,        if (str == null) {,8,2,0,1,3,0,0,0,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2759,            return null;,6,2,0,0,0,1,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2761,        if (str.length() == 0) {,0,1,0,2,5,0,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2762,            return ArrayUtils.EMPTY_STRING_ARRAY;,16,2,1,0,0,1,6,2,0,33,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2764,        char[] c = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2765,        List list = new ArrayList();,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2766,        int tokenStart = 0;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2767,        int currentType = Character.getType(c[tokenStart]);,4,0,1,2,4,0,4,0,0,13,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2768,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2769,            int type = Character.getType(c[pos]);,2,0,1,2,4,0,4,0,0,10,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2770,            if (type == currentType) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2771,                continue;,6,0,0,0,0,2,0,4,0,13,9,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2773,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,0,0,0,1,3,0,0,0,0,4,99,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2774,                int newTokenStart = pos - 1;,4,1,0,0,0,0,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2775,                if (newTokenStart != tokenStart) {,4,1,0,1,3,0,0,0,0,5,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2776,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2777,                    tokenStart = newTokenStart;,4,0,0,0,0,0,0,0,0,5,27,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2779,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2780,"                list.add(new String(c, tokenStart, pos - tokenStart));",0,0,0,2,4,0,0,0,0,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2781,                tokenStart = pos;,6,1,0,0,0,0,6,0,0,14,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2783,            currentType = type;,4,0,0,0,0,0,0,0,0,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2785,"        list.add(new String(c, tokenStart, c.length - tokenStart));",10,1,0,2,4,0,4,2,0,17,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2786,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,5,10,1,14,4,0,18,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2810,"        return join(array, null);",0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2834,"        return join(array, null);",0,0,0,1,2,1,4,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2860,        if (array == null) {,6,2,0,1,3,0,0,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2861,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2864,"        return join(array, separator, 0, array.length);",12,4,0,1,2,1,18,0,0,36,47,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2894,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2895,            return null;,6,0,0,0,0,1,4,0,0,10,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2897,        int bufSize = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2898,        if (bufSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2899,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2902,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,4,3,1,6,12,0,4,0,0,21,90,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2903,        StringBuffer buf = new StringBuffer(bufSize);,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2905,        for (int i = startIndex; i < endIndex; i++) {,12,1,0,1,3,0,8,2,0,24,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2906,            if (i > startIndex) {,4,1,0,1,3,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2907,                buf.append(separator);,12,1,0,1,2,0,0,0,0,14,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2909,            if (array[i] != null) {,2,1,0,2,5,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2910,                buf.append(array[i]);,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2913,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2941,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2942,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2944,"        return join(array, separator, 0, array.length);",0,0,0,1,2,1,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2975,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2976,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2978,        if (separator == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2979,            separator = EMPTY;,4,0,0,0,0,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2984,        int bufSize = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2985,        if (bufSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2986,            return EMPTY;,6,3,0,0,0,1,10,0,0,20,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2989,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),0,0,0,5,11,0,0,0,0,16,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2992,        StringBuffer buf = new StringBuffer(bufSize);,2,0,0,1,2,0,0,8,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2994,        for (int i = startIndex; i < endIndex; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2995,            if (i > startIndex) {,4,0,0,1,3,0,0,4,0,8,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2996,                buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2998,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2999,                buf.append(array[i]);,0,0,1,2,4,0,4,0,0,8,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3002,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3022,        if (iterator == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3023,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3025,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3026,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3028,        Object first = iterator.next();,4,0,0,1,2,0,4,2,0,10,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3029,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3030,            return ObjectUtils.toString(first);,0,0,0,1,2,1,6,0,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3034,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",4,0,0,1,2,0,0,4,0,8,83,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3035,        if (first != null) {,4,3,0,1,3,0,6,2,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3036,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3039,        while (iterator.hasNext()) {,2,0,0,2,5,0,4,0,0,6,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3040,            buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3041,            Object obj = iterator.next();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3042,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3043,                buf.append(obj);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3045,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3047,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3066,        if (iterator == null) {,8,1,0,1,3,0,0,0,0,10,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3067,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3069,        if (!iterator.hasNext()) {,2,0,0,2,5,0,4,0,0,8,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3070,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3072,        Object first = iterator.next();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3073,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3074,            return ObjectUtils.toString(first);,0,0,0,1,2,1,6,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3078,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",2,0,0,1,2,0,0,4,0,6,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3079,        if (first != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3080,            buf.append(first);,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3083,        while (iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3084,            if (separator != null) {,2,1,0,1,3,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3085,                buf.append(separator);,4,0,0,1,2,0,0,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3087,            Object obj = iterator.next();,2,0,0,1,2,0,16,2,0,20,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3088,            if (obj != null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3089,                buf.append(obj);,0,0,0,1,2,0,6,0,0,6,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3091,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3092,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3110,        if (collection == null) {,0,0,0,1,3,0,6,0,0,6,25,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3111,            return null;,4,1,0,0,0,1,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3113,"        return join(collection.iterator(), separator);",0,0,0,2,4,1,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3131,        if (collection == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3132,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3134,"        return join(collection.iterator(), separator);",0,0,0,2,4,1,6,0,0,8,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3166,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3167,            return null;,0,0,0,0,0,1,10,0,0,10,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3169,"        return CharSetUtils.delete(str, "" \t\r\n\b"");",0,0,0,1,2,1,6,0,0,7,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3187,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3188,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3190,        int sz = str.length();,14,2,0,1,2,0,14,0,0,31,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3191,        char[] chs = new char[sz];,2,0,1,2,4,0,18,0,0,22,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3192,        int count = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3193,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,8,0,0,19,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3194,            if (!Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3195,                chs[count++] = str.charAt(i);,4,0,1,2,4,0,12,0,0,21,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3198,        if (count == sz) {,4,0,0,1,3,0,0,0,0,6,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3199,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3201,"        return new String(chs, 0, count);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3231,        if (isEmpty(str) || isEmpty(remove)) {,4,0,0,3,7,0,0,0,0,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3232,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3234,        if (str.startsWith(remove)){,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3235,            return str.substring(remove.length());,0,0,0,2,4,1,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3237,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3266,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3267,            return str;,4,0,0,0,0,1,0,0,0,4,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3269,"        if (startsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,6,0,0,7,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3270,            return str.substring(remove.length());,0,0,0,2,4,1,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3272,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3300,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3301,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3303,        if (str.endsWith(remove)) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3304,"            return str.substring(0, str.length() - remove.length());",0,0,0,3,6,1,0,0,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3306,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3334,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3335,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3337,"        if (endsWithIgnoreCase(str, remove)) {",2,0,0,2,5,0,6,2,0,10,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3338,"            return str.substring(0, str.length() - remove.length());",0,1,0,3,6,1,12,0,0,13,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3340,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3367,        if (isEmpty(str) || isEmpty(remove)) {,2,0,0,3,7,0,0,0,0,2,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3368,            return str;,4,0,0,0,0,1,6,0,0,10,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3370,"        return replace(str, remove, EMPTY, -1);",4,4,0,1,2,1,16,0,0,27,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3393,        if (isEmpty(str) || str.indexOf(remove) == -1) {,0,0,0,3,7,0,0,0,0,10,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3394,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3396,        char[] chars = str.toCharArray();,0,0,0,2,4,0,0,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3397,        int pos = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3398,        for (int i = 0; i < chars.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3399,            if (chars[i] != remove) {,0,0,0,2,5,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3400,                chars[pos++] = chars[i];,8,1,1,2,4,0,4,0,0,21,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3403,"        return new String(chars, 0, pos);",8,0,0,1,2,1,8,4,0,21,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3432,"        return replace(text, searchString, replacement, 1);",0,1,0,1,2,1,20,0,0,21,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3459,"        return replace(text, searchString, replacement, -1);",0,0,0,1,2,1,8,0,0,9,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3491,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,4,4,0,3,7,0,8,0,0,18,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3492,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3494,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3495,"        int end = text.indexOf(searchString, start);",0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3496,        if (end == -1) {,4,2,0,1,3,0,0,0,0,7,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3497,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3499,        int replLength = searchString.length();,2,0,0,1,2,0,4,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3500,        int increase = replacement.length() - replLength;,4,1,0,1,2,1,6,0,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3501,        increase = (increase < 0 ? 0 : increase);,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3502,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3503,        StringBuffer buf = new StringBuffer(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3504,        while (end != -1) {,2,1,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3505,"            buf.append(text.substring(start, end)).append(replacement);",0,0,0,3,6,0,16,0,0,16,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3506,            start = end + replLength;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3507,            if (--max == 0) {,2,1,0,1,3,0,6,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3508,                break;,6,3,0,0,0,0,0,0,0,9,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3510,"            end = text.indexOf(searchString, start);",0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3512,        buf.append(text.substring(start));,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3513,        return buf.toString();,2,1,1,1,2,1,4,0,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3556,"        return replaceEach(text, searchList, replacementList, false, 0);",2,1,0,1,2,1,8,0,0,12,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3607,        int timeToLive = searchList == null ? 0 : searchList.length;,8,1,0,0,0,0,6,0,0,15,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3608,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",0,0,0,1,2,1,10,0,0,11,72,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3666,        if (text == null || text.length() == 0 || searchList == null || ,4,8,0,1,3,0,4,0,0,16,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3669,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3673,        if (timeToLive < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3674,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",0,0,0,1,2,0,0,0,0,3,92,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3677,        int searchLength = searchList.length;,2,0,0,0,0,0,0,0,0,2,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3678,        int replacementLength = replacementList.length;,10,1,0,0,0,0,0,0,0,11,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3681,        if (searchLength != replacementLength) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3682,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0,0,0,0,1,0,0,2,0,3,83,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3689,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,2,0,1,2,4,0,0,0,0,4,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3692,        int textIndex = -1;,2,0,0,0,0,0,6,0,0,9,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3693,        int replaceIndex = -1;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3694,        int tempIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3698,        for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3699,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,6,5,1,2,5,0,0,0,0,19,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3702,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3704,            tempIndex = text.indexOf(searchList[i]);,2,0,1,2,4,0,4,0,0,11,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3707,            if (tempIndex == -1) {,8,3,0,1,3,0,0,0,0,12,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3708,                noMoreMatchesForReplIndex[i] = true;,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3710,                if (textIndex == -1 || tempIndex < textIndex) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3711,                    textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3712,                    replaceIndex = i;,4,0,0,0,0,0,0,0,0,5,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3719,        if (textIndex == -1) {,4,1,0,1,3,0,0,0,0,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3720,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3723,        int start = 0;,2,0,0,0,0,0,10,0,0,12,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3726,        int increase = 0;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3729,        for (int i = 0; i < searchList.length; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3730,            int greater = replacementList[i].length() - searchList[i].length();,2,1,1,4,8,0,4,0,0,15,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3731,            if (greater > 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3732,                increase += 3 * greater; // assume 3 matches,4,1,0,0,0,0,0,0,0,6,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3736,"        increase = Math.min(increase, text.length() / 5);",4,1,0,2,4,0,10,4,0,20,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3738,        StringBuffer buf = new StringBuffer(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3740,        while (textIndex != -1) {,2,1,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3742,            for (int i = start; i < textIndex; i++) {,12,1,0,1,3,0,4,0,0,18,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3743,                buf.append(text.charAt(i));,4,1,1,2,4,0,10,0,0,24,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3745,            buf.append(replacementList[replaceIndex]);,2,1,0,2,4,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3747,            start = textIndex + searchList[replaceIndex].length();,4,1,1,2,4,0,2,0,0,12,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3749,            textIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3750,            replaceIndex = -1;,2,0,0,0,0,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3751,            tempIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3754,            for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3755,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3758,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3760,"                tempIndex = text.indexOf(searchList[i], start);",2,0,1,2,4,0,6,0,0,13,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3763,                if (tempIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3764,                    noMoreMatchesForReplIndex[i] = true;,8,2,1,1,2,0,0,0,0,17,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3766,                    if (textIndex == -1 || tempIndex < textIndex) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3767,                        textIndex = tempIndex;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3768,                        replaceIndex = i;,4,0,0,0,0,0,0,0,0,5,17,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3775,        int textLength = text.length();,4,1,0,1,2,0,4,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3776,        for (int i = start; i < textLength; i++) {,0,0,0,1,3,0,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3777,            buf.append(text.charAt(i));,0,1,0,2,4,0,22,0,0,23,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3779,        String result = buf.toString();,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3780,        if (!repeat) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3781,            return result;,2,0,0,0,0,1,0,0,0,3,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3784,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",0,0,0,1,2,1,0,0,0,4,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3810,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3811,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3813,"        return str.replace(searchChar, replaceChar);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3853,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3854,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3856,        if (replaceChars == null) {,4,1,0,1,3,0,4,0,0,9,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3857,            replaceChars = EMPTY;,4,0,0,0,0,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3859,        boolean modified = false;,10,1,0,0,0,0,0,0,0,13,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3860,        int replaceCharsLength = replaceChars.length();,4,1,0,1,2,0,4,0,0,9,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3861,        int strLength = str.length();,16,3,0,1,2,0,8,4,0,32,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3862,        StringBuffer buf = new StringBuffer(strLength);,6,0,1,1,2,0,0,4,0,15,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3863,        for (int i = 0; i < strLength; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3864,            char ch = str.charAt(i);,2,0,0,1,2,0,10,0,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3865,            int index = searchChars.indexOf(ch);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3866,            if (index >= 0) {,4,1,0,1,3,0,4,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3867,                modified = true;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3868,                if (index < replaceCharsLength) {,4,1,0,1,3,0,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3869,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,10,0,0,10,39,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3872,                buf.append(ch);,0,0,0,1,2,0,6,0,0,6,15,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3875,        if (modified) {,4,0,0,1,3,0,0,0,0,4,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3876,            return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3878,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3909,        return new StringBuffer(start + overlay.length() + text.length() - end + 1),0,0,0,3,6,1,0,0,0,10,75,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3946,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3947,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3949,        if (overlay == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3950,            overlay = EMPTY;,6,1,0,0,0,0,0,0,0,9,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3952,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3953,        if (start < 0) {,8,1,0,1,3,0,0,0,0,9,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3954,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3956,        if (start > len) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3957,            start = len;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3959,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3960,            end = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3962,        if (end > len) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3963,            end = len;,4,0,0,0,0,0,0,0,0,5,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3965,        if (start > end) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3966,            int temp = start;,2,1,0,0,0,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3967,            start = end;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3968,            end = temp;,2,1,0,0,0,0,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3970,        return new StringBuffer(len + start - end + overlay.length() + 1),0,0,0,2,4,1,0,0,0,7,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4005,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4006,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4009,        if (str.length() == 1) {,2,1,0,2,5,0,8,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4010,            char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4011,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4012,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4014,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4017,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4018,        char last = str.charAt(lastIdx);,4,1,1,1,2,0,6,0,0,15,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4020,        if (last == CharUtils.LF) {,8,1,0,1,3,0,0,0,0,9,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4021,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4022,                lastIdx--;,4,0,0,0,0,0,6,0,0,11,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4024,        } else if (last != CharUtils.CR) {,10,2,0,1,4,0,4,0,0,18,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4025,            lastIdx++;,8,1,0,0,0,0,4,0,0,15,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4027,"        return str.substring(0, lastIdx);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4057,        if (isEmpty(str) || separator == null) {,2,2,0,2,5,0,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4058,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4060,        if (str.endsWith(separator)) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4061,"            return str.substring(0, str.length() - separator.length());",0,0,0,3,6,1,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4063,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4077,"        return chompLast(str, ""\n"");",0,0,1,1,2,1,4,0,0,13,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4091,        if (str.length() == 0) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4092,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4094,        String sub = str.substring(str.length() - sep.length());,8,3,0,3,6,0,16,2,0,29,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4095,        if (sep.equals(sub)) {,0,0,0,2,5,0,6,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4096,"            return str.substring(0, str.length() - sep.length());",0,0,0,3,6,1,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4098,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4114,        int idx = str.lastIndexOf(sep);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4115,        if (idx == str.length() - sep.length()) {,2,2,0,3,7,0,8,0,0,12,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4116,            return sep;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4117,        } else if (idx != -1) {,2,1,0,1,4,0,0,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4118,            return str.substring(idx);,0,0,0,1,2,1,10,0,0,10,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4120,            return EMPTY;,4,1,0,0,0,1,0,0,0,5,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4136,        int idx = str.indexOf(sep);,14,4,0,1,2,0,0,0,0,18,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4137,        if (idx == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4138,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4140,        return str.substring(idx + sep.length());,2,1,0,2,4,1,8,0,0,11,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4156,        int idx = str.indexOf(sep);,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4157,        if (idx == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4158,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4160,"        return str.substring(0, idx + sep.length());",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4189,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4190,            return null;,2,2,0,0,0,1,4,0,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4192,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,7,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4193,        if (strLen < 2) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4194,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4196,        int lastIdx = strLen - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4197,"        String ret = str.substring(0, lastIdx);",2,0,0,1,2,0,6,2,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4198,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4199,        if (last == CharUtils.LF) {,6,1,0,1,3,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4200,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4201,"                return ret.substring(0, lastIdx - 1);",2,1,0,1,2,1,4,0,0,7,37,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4204,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4218,        int lastIdx = str.length() - 1;,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4219,        if (lastIdx <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4220,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4222,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4223,        if (last == CharUtils.LF) {,8,2,0,1,3,0,0,0,0,10,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4224,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,1,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4225,                lastIdx--;,2,0,0,0,0,0,0,0,0,3,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4228,            lastIdx++;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4230,"        return str.substring(0, lastIdx);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4252,        return StringEscapeUtils.escapeJava(str);,0,0,0,1,2,1,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4278,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4279,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4281,        if (repeat <= 0) {,8,2,0,1,3,0,10,0,0,20,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4282,            return EMPTY;,12,2,0,0,0,1,6,0,0,22,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4284,        int inputLength = str.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4285,        if (repeat == 1 || inputLength == 0) {,4,3,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4286,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4288,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4289,"            return padding(repeat, str.charAt(0));",0,0,0,2,4,1,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4292,        int outputLength = inputLength * repeat;,8,2,0,0,0,0,0,0,0,10,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4293,        switch (inputLength) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4295,                char ch = str.charAt(0);,8,5,0,1,2,0,4,0,0,17,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4296,                char[] output1 = new char[outputLength];,2,0,1,2,4,0,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4297,                for (int i = repeat - 1; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4298,                    output1[i] = ch;,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4300,                return new String(output1);,2,0,0,1,2,1,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4302,                char ch0 = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4303,                char ch1 = str.charAt(1);,2,0,0,1,2,0,4,0,0,6,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4304,                char[] output2 = new char[outputLength];,2,0,1,2,4,0,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4305,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",18,3,0,1,3,1,0,0,0,24,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4306,                    output2[i] = ch0;,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4307,                    output2[i + 1] = ch1;,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4309,                return new String(output2);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4311,                StringBuffer buf = new StringBuffer(outputLength);,4,1,1,1,2,0,4,0,0,14,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4312,                for (int i = 0; i < repeat; i++) {,10,1,0,1,3,0,0,0,0,12,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4313,                    buf.append(str);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4315,                return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4343,        if (repeat < 0) {,4,1,0,1,3,0,0,0,0,5,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4344,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",6,1,1,1,2,0,0,2,0,15,79,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4346,        final char[] buf = new char[repeat];,0,0,0,2,4,0,0,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4347,        for (int i = 0; i < buf.length; i++) {,0,0,0,1,3,0,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4348,            buf[i] = padChar;,2,0,1,1,2,0,0,0,0,7,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4350,        return new String(buf);,10,1,0,1,2,1,0,2,0,14,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4373,"        return rightPad(str, size, ' ');",2,1,0,1,2,1,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4398,        if (str == null) {,6,2,0,1,3,0,0,0,0,8,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4399,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4401,        int pads = size - str.length();,4,1,1,1,2,0,8,0,0,22,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4402,        if (pads <= 0) {,2,1,0,1,3,0,6,0,0,9,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4403,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4405,        if (pads > PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4406,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,0,0,0,7,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4408,"        return str.concat(padding(pads, padChar));",0,0,0,2,4,1,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4435,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4436,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4438,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4439,"            padStr = "" "";",2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4441,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4442,        int strLen = str.length();,4,1,0,1,2,0,0,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4443,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4444,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4445,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4447,        if (padLen == 1 && pads <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4448,"            return rightPad(str, size, padStr.charAt(0));",2,0,0,2,4,1,0,0,0,3,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4451,        if (pads == padLen) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4452,            return str.concat(padStr);,0,0,0,1,2,1,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4453,        } else if (pads < padLen) {,2,0,0,1,4,0,0,0,0,2,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4454,"            return str.concat(padStr.substring(0, pads));",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4456,            char[] padding = new char[pads];,2,0,0,2,4,0,4,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4457,            char[] padChars = padStr.toCharArray();,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4458,            for (int i = 0; i < pads; i++) {,10,2,0,1,3,0,0,0,0,13,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4459,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4461,            return str.concat(new String(padding));,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4485,"        return leftPad(str, size, ' ');",0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4510,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4511,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4513,        int pads = size - str.length();,2,0,0,1,2,0,0,0,0,3,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4514,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4515,            return str; // returns original String when possible,8,1,1,0,0,1,0,0,0,12,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4517,        if (pads > PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4518,"            return leftPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,12,0,0,12,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4520,"        return padding(pads, padChar).concat(str);",0,0,0,2,4,1,10,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4547,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4548,            return null;,2,0,0,0,0,1,0,4,0,6,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4550,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4551,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4553,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4554,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4555,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4556,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4557,            return str; // returns original String when possible,8,0,0,0,0,2,0,4,0,13,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4559,        if (padLen == 1 && pads <= PAD_LIMIT) {,2,1,0,1,3,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4560,"            return leftPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4563,        if (pads == padLen) {,6,2,0,1,3,0,0,0,0,8,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4564,            return padStr.concat(str);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4565,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4566,"            return padStr.substring(0, pads).concat(str);",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4568,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4569,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4570,            for (int i = 0; i < pads; i++) {,14,1,0,1,3,0,4,0,0,20,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4571,                padding[i] = padChars[i % padLen];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4573,            return new String(padding).concat(str);,8,1,0,2,4,1,4,2,0,17,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4586,        return str == null ? 0 : str.length();,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4615,"        return center(str, size, ' ');",0,0,1,1,2,1,8,0,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4643,        if (str == null || size <= 0) {,6,3,0,1,3,0,0,2,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4644,            return str;,4,0,0,0,0,1,4,0,0,8,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4646,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4647,        int pads = size - strLen;,4,1,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4648,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4649,            return str;,4,0,0,0,0,1,0,0,0,4,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4651,"        str = leftPad(str, strLen + pads / 2, padChar);",6,2,0,1,2,0,6,0,0,15,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4652,"        str = rightPad(str, size, padChar);",4,1,0,1,2,0,0,0,0,5,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4653,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4683,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4684,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4686,        if (isEmpty(padStr)) {,4,1,1,2,5,0,4,0,0,14,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4687,"            padStr = "" "";",4,0,0,0,0,0,0,0,0,6,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4689,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4690,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4691,        if (pads <= 0) {,4,2,0,1,3,0,0,0,0,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4692,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4694,"        str = leftPad(str, strLen + pads / 2, padStr);",6,2,0,1,2,0,6,0,0,15,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4695,"        str = rightPad(str, size, padStr);",4,1,0,1,2,0,8,0,0,14,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4696,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4721,        if (str == null) {,8,1,0,1,3,0,0,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4722,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4724,        return str.toUpperCase();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4744,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4745,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4747,        return str.toUpperCase(locale);,2,0,0,1,2,1,0,0,0,4,31,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4770,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4771,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4773,        return str.toLowerCase();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4793,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4794,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4796,        return str.toLowerCase(locale);,0,0,0,1,2,1,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4821,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4822,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4824,        return new StringBuffer(strLen),2,0,0,1,2,1,0,2,0,4,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4840,        return capitalize(str);,0,0,0,1,2,1,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4865,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4866,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4868,        return new StringBuffer(strLen),2,0,0,1,2,1,8,2,0,13,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4884,        return uncapitalize(str);,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4916,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4917,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4919,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4921,        char ch = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4922,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4923,            ch = str.charAt(i);,4,0,0,1,2,0,0,0,0,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4924,            if (Character.isUpperCase(ch)) {,10,1,0,2,5,1,6,4,0,23,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4925,                ch = Character.toLowerCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4926,            } else if (Character.isTitleCase(ch)) {,4,1,1,2,6,0,6,0,0,18,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4927,                ch = Character.toLowerCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4928,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,4,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4929,                ch = Character.toUpperCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4931,            buffer.append(ch);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4933,        return buffer.toString();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4949,        return WordUtils.capitalize(str);,0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4974,        if (isEmpty(str) || isEmpty(sub)) {,0,0,0,3,7,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4975,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4977,        int count = 0;,2,1,0,0,0,0,8,0,0,13,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4978,        int idx = 0;,12,3,0,0,0,0,0,2,0,17,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4979,"        while ((idx = str.indexOf(sub, idx)) != -1) {",2,1,0,3,7,0,8,0,0,13,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4980,            count++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4981,            idx += sub.length();,2,0,0,1,2,0,4,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4983,        return count;,8,3,0,0,0,1,0,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5007,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5008,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5010,        int sz = str.length();,2,0,0,1,2,0,4,0,0,7,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5011,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5012,            if (Character.isLetter(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5013,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5016,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5041,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5042,            return false;,6,1,0,0,0,1,0,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5044,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5045,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5046,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,19,77,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5047,                return false;,4,0,0,0,0,1,0,4,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5050,        return true;,4,0,0,0,0,1,0,0,0,5,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5074,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5075,            return false;,8,1,0,0,0,1,0,0,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5077,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5078,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5079,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5080,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5083,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5108,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5109,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5111,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5112,        for (int i = 0; i < sz; i++) {,10,2,0,1,3,0,6,0,0,19,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5113,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,4,3,0,6,13,0,16,0,0,25,84,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5114,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5117,        return true;,2,0,0,0,0,1,6,2,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5146,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5147,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5149,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5150,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5151,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,8,2,0,3,7,0,10,0,0,23,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5152,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5155,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5180,        if (str == null) {,10,1,0,1,3,0,0,0,0,12,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5181,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5183,        int sz = str.length();,4,1,0,1,2,0,4,0,0,9,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5184,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5185,            if (Character.isDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5186,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5189,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5216,        if (str == null) {,8,4,0,1,3,0,0,0,0,12,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5217,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5219,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5220,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5221,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,19,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5222,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5225,        return true;,2,1,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5248,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5249,            return false;,4,0,0,0,0,1,0,4,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5251,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5252,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,10,0,0,10,30,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5253,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5254,                return false;,0,0,0,0,0,1,6,0,0,7,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5257,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5300,        return str == null ? defaultStr : str;,4,3,0,0,0,1,8,0,0,15,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5320,        return StringUtils.isEmpty(str) ? defaultStr : str;,0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5340,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5341,            return null;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5343,        return new StringBuffer(str).reverse().toString();,2,0,0,3,6,1,4,2,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5366,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5367,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5371,"        String[] strs = split(str, separatorChar);",14,2,0,2,4,0,20,4,0,43,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5372,        ArrayUtils.reverse(strs);,4,1,0,1,2,0,6,0,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5373,"        return join(strs, separatorChar);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5399,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5400,            return null;,6,0,0,0,0,1,6,0,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5404,"        String[] strs = split(str, separatorChars);",2,0,0,2,4,0,6,2,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5405,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5406,        if (separatorChars == null) {,2,1,0,1,3,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5407,"            return join(strs, ' ');",0,0,0,1,2,1,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5409,"        return join(strs, separatorChars);",0,0,0,1,2,1,6,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5447,"        return abbreviate(str, 0, maxWidth);",0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5486,        if (str == null) {,8,2,0,1,3,0,0,0,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5487,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5489,        if (maxWidth < 4) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5490,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,0,0,2,0,3,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5492,        if (str.length() <= maxWidth) {,2,1,0,2,5,0,4,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5493,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5495,        if (offset > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5496,            offset = str.length();,2,0,0,1,2,0,4,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5498,        if ((str.length() - offset) < (maxWidth - 3)) {,0,0,0,4,9,0,0,0,0,13,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5499,            offset = str.length() - (maxWidth - 3);,4,2,0,2,4,0,4,0,0,11,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5501,        if (offset <= 4) {,4,2,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5502,"            return str.substring(0, maxWidth - 3) + ""..."";",2,2,0,1,2,1,4,0,0,9,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5504,        if (maxWidth < 7) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5505,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",6,1,0,1,2,0,4,2,0,15,82,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5507,        if ((offset + (maxWidth - 3)) < str.length()) {,0,0,0,4,9,0,0,0,0,13,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5508,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",2,2,0,2,4,1,8,0,0,13,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5510,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",8,6,0,3,6,1,8,0,0,24,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5541,        if (str1 == null) {,8,4,0,1,3,0,0,0,0,13,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5542,            return str2;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5544,        if (str2 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5545,            return str1;,8,1,0,0,0,1,0,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5547,"        int at = indexOfDifference(str1, str2);",4,0,0,1,2,0,6,0,0,10,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5548,        if (at == -1) {,2,1,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5549,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5551,        return str2.substring(at);,2,0,0,1,2,1,6,0,0,8,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5578,        if (str1 == str2) {,4,1,0,1,3,0,0,0,0,6,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5579,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5581,        if (str1 == null || str2 == null) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5582,            return 0;,6,2,0,0,0,1,4,0,0,12,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5585,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,8,3,0,3,7,0,8,0,0,21,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5586,            if (str1.charAt(i) != str2.charAt(i)) {,0,0,0,3,7,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5587,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5590,        if (i < str2.length() || i < str1.length()) {,4,3,0,3,7,0,8,0,0,15,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5591,            return i;,4,0,0,0,0,1,0,0,0,5,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5593,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5628,        if (strs == null || strs.length <= 1) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5629,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5631,        boolean anyStringNull = false;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5632,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5633,        int arrayLen = strs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5634,        int shortestStrLen = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5635,        int longestStrLen = 0;,4,0,0,0,0,0,0,0,0,5,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5640,        for (int i = 0; i < arrayLen; i++) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5641,            if (strs[i] == null) {,0,1,1,2,5,0,0,0,0,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5642,                anyStringNull = true;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5643,                shortestStrLen = 0;,2,0,0,0,0,0,0,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5645,                allStringsNull = false;,4,1,0,0,0,0,0,0,0,7,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5646,"                shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",0,0,0,3,6,0,0,0,0,9,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5647,"                longestStrLen = Math.max(strs[i].length(), longestStrLen);",2,0,1,3,6,0,8,0,0,15,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5652,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,6,3,0,2,5,0,8,2,0,20,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5653,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5657,        if (shortestStrLen == 0) {,2,1,0,1,3,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5658,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5662,        int firstDiff = -1;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5663,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,20,2,0,1,3,0,0,0,0,24,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5664,            char comparisonChar = strs[0].charAt(stringPos);,2,0,1,2,4,0,4,0,0,8,48,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5665,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,4,3,0,1,3,0,0,0,0,7,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5666,                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {,2,1,1,3,7,0,4,0,0,11,57,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5667,                    firstDiff = stringPos;,10,0,0,0,0,0,4,0,0,15,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5668,                    break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5671,            if (firstDiff != -1) {,2,1,0,1,3,0,0,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5672,                break;,2,1,0,0,0,0,0,0,0,3,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5676,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,6,3,0,1,3,0,6,0,0,16,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5680,            return shortestStrLen;,0,0,0,0,0,1,0,0,0,1,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5682,        return firstDiff;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5719,        if (strs == null || strs.length == 0) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5720,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5722,        int smallestIndexOfDiff = indexOfDifference(strs);,0,0,0,1,2,0,0,0,0,3,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5723,        if (smallestIndexOfDiff == -1) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5725,            if (strs[0] == null) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5726,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5728,            return strs[0];,2,1,1,1,2,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5729,        } else if (smallestIndexOfDiff == 0) {,4,1,1,1,4,0,0,0,0,7,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5731,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5734,"            return strs[0].substring(0, smallestIndexOfDiff);",0,0,1,2,4,1,4,0,0,6,49,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5775,        if (s == null || t == null) {,6,8,1,1,3,0,0,0,0,22,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5776,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5796,        int n = s.length(); // length of s,4,1,0,1,2,0,4,0,0,9,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5797,        int m = t.length(); // length of t,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5799,        if (n == 0) {,0,0,0,1,3,0,0,0,0,4,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5800,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5801,        } else if (m == 0) {,2,1,0,1,4,0,0,0,0,3,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5802,            return n;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5805,        if (n > m) {,0,0,0,1,3,0,4,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5807,            String tmp = s;,8,1,0,0,0,0,6,4,0,19,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5808,            s = t;,6,1,0,0,0,0,0,0,0,8,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5809,            t = tmp;,4,0,0,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5810,            n = m;,6,1,0,0,0,0,0,0,0,8,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5811,            m = t.length();,4,0,0,1,2,0,4,0,0,9,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5814,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5815,"        int d[] = new int[n+1]; // cost array, horizontally",4,1,0,2,4,0,0,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5826,        for (i = 0; i<=n; i++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5827,            p[i] = i;,0,0,0,1,2,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5830,        for (j = 1; j<=m; j++) {,10,1,1,1,3,0,2,0,0,24,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5831,            t_j = t.charAt(j-1);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5832,            d[0] = j;,0,0,0,1,2,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5834,            for (i=1; i<=n; i++) {,16,2,0,1,3,0,0,0,0,21,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5835,                cost = s.charAt(i-1)==t_j ? 0 : 1;,6,2,0,1,2,0,4,0,0,13,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5837,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",6,5,1,6,12,0,8,0,0,32,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5841,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5842,            p = d;,4,4,0,0,0,0,8,0,0,18,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5843,            d = _d;,4,0,0,0,0,0,0,0,0,6,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5848,        return p[n];,0,0,1,1,2,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5897,"        return startsWith(str, prefix, false);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5922,"        return startsWith(str, prefix, true);",0,0,0,1,2,1,6,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5937,        if (str == null || prefix == null) {,12,4,0,1,3,0,0,0,0,16,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5938,            return (str == null && prefix == null);,6,3,0,1,2,1,0,0,0,9,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5940,        if (prefix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5941,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5943,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",0,0,0,2,4,1,12,0,0,12,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5971,"        return endsWith(str, suffix, false);",0,0,0,1,2,1,12,0,0,12,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5997,"        return endsWith(str, suffix, true);",0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6012,        if (str == null || suffix == null) {,4,3,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6013,            return (str == null && suffix == null);,4,3,0,1,2,1,0,0,0,7,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6015,        if (suffix.length() > str.length()) {,0,0,0,3,7,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6016,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6018,        int strOffset = str.length() - suffix.length();,0,0,0,2,4,0,0,2,0,4,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6019,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",0,0,0,2,4,1,0,0,0,7,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,44,      super();,0,0,0,1,2,0,0,0,0,1,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,45,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,142,"        return wrap(str, wrapLength, null, false);",0,0,0,1,2,1,6,0,0,8,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,164,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,165,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,167,        if (newLineStr == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,168,            newLineStr = SystemUtils.LINE_SEPARATOR;,6,0,0,0,0,0,0,0,0,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,170,        if (wrapLength < 1) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,171,            wrapLength = 1;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,173,        int inputLineLength = str.length();,2,0,0,1,2,0,4,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,174,        int offset = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,175,        StringBuffer wrappedLine = new StringBuffer(inputLineLength + 32);,0,0,0,1,2,0,0,0,0,3,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,177,        while ((inputLineLength - offset) > wrapLength) {,6,2,0,2,5,0,0,0,0,8,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,178,            if (str.charAt(offset) == ' ') {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,179,                offset++;,2,0,0,0,0,0,0,0,0,3,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,180,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,182,"            int spaceToWrapAt = str.lastIndexOf(' ', wrapLength + offset);",6,1,0,1,2,0,4,0,0,12,62,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,184,            if (spaceToWrapAt >= offset) {,4,1,0,1,3,0,0,0,0,5,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,186,"                wrappedLine.append(str.substring(offset, spaceToWrapAt));",0,0,0,2,4,0,12,0,0,12,57,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,187,                wrappedLine.append(newLineStr);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,188,                offset = spaceToWrapAt + 1;,4,1,0,0,0,0,0,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,192,                if (wrapLongWords) {,2,0,0,1,3,0,0,0,0,2,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,194,"                    wrappedLine.append(str.substring(offset, wrapLength + offset));",4,1,0,2,4,0,10,0,0,15,63,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,195,                    wrappedLine.append(newLineStr);,2,1,1,1,2,0,6,0,0,13,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,196,                    offset += wrapLength;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,199,"                    spaceToWrapAt = str.indexOf(' ', wrapLength + offset);",6,1,0,1,2,0,4,0,0,13,54,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,200,                    if (spaceToWrapAt >= 0) {,2,1,0,1,3,0,0,0,0,3,25,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,201,"                        wrappedLine.append(str.substring(offset, spaceToWrapAt));",2,0,0,2,4,0,4,2,0,8,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,202,                        wrappedLine.append(newLineStr);,0,0,0,1,2,0,6,0,0,6,31,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,203,                        offset = spaceToWrapAt + 1;,4,1,0,0,0,0,0,0,0,6,27,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,205,                        wrappedLine.append(str.substring(offset));,0,0,0,2,4,0,10,0,0,10,42,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,206,                        offset = inputLineLength;,4,0,0,0,0,0,0,0,0,5,25,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,210,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,213,        wrappedLine.append(str.substring(offset));,2,0,0,2,4,0,14,0,0,16,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,215,        return wrappedLine.toString();,0,0,0,1,2,1,4,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,243,"        return capitalize(str, null);",0,0,0,1,2,1,4,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,276,        int delimLen = (delimiters == null ? -1 : delimiters.length);,8,1,0,1,2,0,0,0,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,277,        if (str == null || str.length() == 0 || delimLen == 0) {,4,5,0,2,5,0,14,0,0,24,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,278,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,280,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,281,        StringBuffer buffer = new StringBuffer(strLen);,6,0,0,1,2,0,0,4,0,12,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,282,        boolean capitalizeNext = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,283,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,284,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,286,"            if (isDelimiter(ch, delimiters)) {",0,0,0,2,5,0,6,0,0,6,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,287,                buffer.append(ch);,0,0,0,1,2,0,6,0,0,7,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,288,                capitalizeNext = true;,2,0,0,0,0,0,0,0,0,4,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,289,            } else if (capitalizeNext) {,2,0,0,1,4,0,0,0,0,2,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,290,                buffer.append(Character.toTitleCase(ch));,0,0,0,2,4,0,10,0,0,10,41,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,291,                capitalizeNext = false;,2,0,0,0,0,0,0,0,0,4,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,293,                buffer.append(ch);,2,1,0,1,2,0,12,0,0,15,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,296,        return buffer.toString();,0,0,0,1,2,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,320,"        return capitalizeFully(str, null);",0,0,0,1,2,1,4,0,0,5,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,350,        int delimLen = (delimiters == null ? -1 : delimiters.length);,10,1,0,1,2,0,0,0,0,12,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,351,        if (str == null || str.length() == 0 || delimLen == 0) {,0,0,0,2,5,0,0,0,0,7,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,352,            return str;,2,0,0,0,0,1,0,2,0,4,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,354,        str = str.toLowerCase();,2,0,0,1,2,0,4,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,355,"        return capitalize(str, delimiters);",0,0,0,1,2,1,6,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,377,"        return uncapitalize(str, null);",0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,406,        int delimLen = (delimiters == null ? -1 : delimiters.length);,8,1,0,1,2,0,0,0,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,407,        if (str == null || str.length() == 0 || delimLen == 0) {,4,5,0,2,5,0,4,0,0,13,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,408,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,410,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,411,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,412,        boolean uncapitalizeNext = true;,4,0,0,0,0,0,0,2,0,7,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,413,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,414,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,416,"            if (isDelimiter(ch, delimiters)) {",0,0,0,2,5,0,6,0,0,6,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,417,                buffer.append(ch);,0,0,0,1,2,0,6,0,0,6,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,418,                uncapitalizeNext = true;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,419,            } else if (uncapitalizeNext) {,0,0,0,1,4,0,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,420,                buffer.append(Character.toLowerCase(ch));,0,0,0,2,4,0,10,0,0,10,41,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,421,                uncapitalizeNext = false;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,423,                buffer.append(ch);,2,0,0,1,2,0,6,0,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,426,        return buffer.toString();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,454,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,455,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,457,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,459,        boolean whitespace = true;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,460,        char ch = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,461,        char tmp = 0;,2,0,0,0,0,0,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,463,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,464,            ch = str.charAt(i);,0,0,0,1,2,0,10,0,0,10,19,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,465,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,0,6,0,0,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,466,                tmp = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,467,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,0,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,468,                tmp = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,32,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,469,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,470,                if (whitespace) {,2,0,0,1,3,0,0,0,0,2,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,471,                    tmp = Character.toTitleCase(ch);,4,0,1,1,2,0,10,0,0,20,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,473,                    tmp = Character.toUpperCase(ch);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,476,                tmp = ch;,4,0,0,0,0,0,0,0,0,5,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,478,            buffer.append(tmp);,0,0,0,1,2,0,6,0,0,6,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,479,            whitespace = Character.isWhitespace(ch);,2,0,0,1,2,0,6,0,0,9,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,481,        return buffer.toString();,0,0,0,1,2,1,12,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,508,"        return initials(str, null);",0,0,0,1,2,1,4,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,539,        if (str == null || str.length() == 0) {,2,3,0,2,5,0,4,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,540,            return str;,4,1,0,0,0,1,0,0,0,5,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,542,        if (delimiters != null && delimiters.length == 0) {,6,3,0,1,3,0,6,0,0,16,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,543,"            return """";",0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,545,        int strLen = str.length();,12,2,0,1,2,0,4,0,0,19,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,546,        char[] buf = new char[strLen / 2 + 1];,4,2,0,2,4,0,0,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,547,        int count = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,548,        boolean lastWasGap = true;,6,0,0,0,0,0,6,0,0,13,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,549,        for (int i = 0; i < strLen; i++) {,12,2,1,1,3,0,0,0,0,19,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,550,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,552,"            if (isDelimiter(ch, delimiters)) {",0,0,0,2,5,0,6,0,0,6,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,553,                lastWasGap = true;,2,0,0,0,0,0,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,554,            } else if (lastWasGap) {,2,0,0,1,4,0,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,555,                buf[count++] = ch;,4,0,1,1,2,0,0,0,0,8,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,556,                lastWasGap = false;,2,0,0,0,0,0,0,0,0,4,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,561,"        return new String(buf, 0, count);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,573,        if (delimiters == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,574,            return Character.isWhitespace(ch);,0,0,0,1,2,1,6,0,0,6,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,576,"        for (int i = 0, isize = delimiters.length; i < isize; i++) {",16,1,0,1,3,0,0,0,0,19,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,577,            if (ch == delimiters[i]) {,2,1,1,2,5,0,0,0,0,7,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,578,                return true;,0,0,1,0,0,1,0,0,0,6,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,581,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,607,        if (str == null) {,4,2,0,1,3,0,4,0,0,10,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,608,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,610,        if (str.length() == 0) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,611,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,618,        if (upper == -1 || upper > str.length()) {,4,3,0,2,5,0,4,0,0,12,42,4,0.0,1,1
defect4j,lang,org/apache/commons/lang/WordUtils,45,619,            upper = str.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,622,        if (upper < lower) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,623,            upper = lower;,4,0,0,0,0,0,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,626,        StringBuffer result = new StringBuffer();,2,0,0,1,2,0,0,4,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,627,"        int index = StringUtils.indexOf(str, "" "", lower);",2,0,0,1,2,0,8,0,0,11,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,628,        if (index == -1) {,4,1,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,629,"            result.append(str.substring(0, upper));",0,0,0,2,4,0,10,0,0,10,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,631,            if (upper != str.length()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,632,                result.append(StringUtils.defaultString(appendToEnd));,2,1,0,2,4,0,10,0,0,13,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,634,        } else if (index > upper) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,635,"            result.append(str.substring(0, upper));",0,0,0,2,4,0,10,0,0,10,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,636,            result.append(StringUtils.defaultString(appendToEnd));,0,0,0,2,4,0,0,0,0,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,638,"            result.append(str.substring(0, index));",0,0,0,2,4,0,10,0,0,10,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,639,            result.append(StringUtils.defaultString(appendToEnd));,0,0,0,2,4,0,10,0,0,10,54,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,641,        return result.toString();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,244,                            out.write('\\');,6,1,0,1,2,0,4,0,0,12,16,3,1.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,245,                        out.write('/');,2,0,1,1,2,0,14,2,0,23,15,3,1.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,246,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,86,"        return escapeJavaStyleString(str, false);",2,0,0,1,2,4,8,2,0,17,41,1,0.33333,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,155,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,159,            StringWriter writer = new StringWriter(str.length() * 2);,2,1,0,2,4,0,4,4,0,11,57,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,160,"            escapeJavaStyleString(writer, str, escapeSingleQuotes);",0,0,0,1,2,0,0,0,0,3,55,4,0.25,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,161,            return writer.toString();,6,0,0,1,2,1,8,0,0,14,25,3,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,179,        if (out == null) {,6,1,0,1,3,3,2,2,0,16,18,1,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,182,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,186,        sz = str.length();,2,0,0,1,2,0,4,0,0,7,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,187,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,188,            char ch = str.charAt(i);,2,0,0,1,2,3,2,2,0,10,24,2,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,191,            if (ch > 0xfff) {,2,1,0,1,3,0,0,0,0,3,17,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,193,            } else if (ch > 0xff) {,0,0,0,1,4,0,0,0,0,5,23,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,195,            } else if (ch > 0x7f) {,2,1,0,1,4,0,0,0,0,3,23,8,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,197,            } else if (ch < 32) {,6,2,0,1,4,3,2,2,0,16,21,1,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,228,                switch (ch) {,0,0,0,1,3,0,0,0,0,4,13,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,248,                        out.write(ch);,0,0,0,1,2,0,0,0,0,3,14,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,253,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,45,    private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,2,0,0,1,2,3,6,2,0,13,70,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,46,"    private static final char[] CSV_SEARCH_CHARS = new char[] {CSV_DELIMITER, CSV_QUOTE, CharUtils.CR, CharUtils.LF};",14,0,0,3,6,3,0,0,0,17,113,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,60,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,47,    protected NestableDelegate delegate = new NestableDelegate(this);,4,1,0,1,2,1,0,4,0,12,65,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,53,    private Throwable cause = null;,6,0,0,0,0,1,0,2,0,10,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,61,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,70,        super(msg);,4,0,0,1,2,0,0,4,0,8,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,71,    },0,1,0,0,1,0,8,0,0,9,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,81,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,82,        this.cause = cause;,4,0,0,0,0,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,83,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,94,        super(msg);,4,1,0,1,2,0,4,0,0,10,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,95,        this.cause = cause;,4,1,0,0,0,0,6,0,0,12,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,96,    },2,0,0,0,1,0,4,0,0,6,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,102,        return cause;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,113,        if (super.getMessage() != null) {,2,0,0,2,5,3,0,4,0,9,33,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,114,            return super.getMessage();,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,115,        } else if (cause != null) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,116,            return cause.toString();,10,1,0,1,2,1,0,2,0,14,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,118,            return null;,2,0,0,0,0,4,4,2,0,12,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,126,        if (index == 0) {,12,0,0,1,3,0,0,0,0,12,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,127,            return super.getMessage();,2,0,0,1,2,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,129,        return delegate.getMessage(index);,0,0,0,1,2,1,6,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,136,        return delegate.getMessages();,0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,143,        return delegate.getThrowable(index);,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,150,        return delegate.getThrowableCount();,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,157,        return delegate.getThrowables();,2,0,0,1,2,1,0,0,0,2,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,164,"        return delegate.indexOfThrowable(type, 0);",0,0,0,1,2,1,6,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,171,"        return delegate.indexOfThrowable(type, fromIndex);",0,0,0,1,2,1,8,0,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,178,        delegate.printStackTrace();,0,0,0,1,2,0,4,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,179,    },4,0,0,0,1,6,4,6,0,21,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,185,        delegate.printStackTrace(out);,0,0,0,1,2,0,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,186,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,192,        delegate.printStackTrace(out);,0,0,0,1,2,0,16,0,0,17,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,193,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,199,        super.printStackTrace(out);,4,0,0,1,2,0,0,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,200,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,59,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,60,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,102,"        escapeJavaStyleString(out, str, false);",0,0,0,1,2,0,6,0,0,7,39,5,0.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,103,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,127,"        return escapeJavaStyleString(str, true);",10,0,0,1,2,1,10,0,0,22,40,1,0.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,143,"        escapeJavaStyleString(out, str, true);",0,0,0,1,2,0,0,0,0,3,38,4,0.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,144,    },4,0,0,0,1,0,6,0,0,10,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,156,            return null;,2,0,0,0,0,1,4,2,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,162,        } catch (IOException ioe) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,164,            ioe.printStackTrace();,0,0,0,1,2,0,4,0,0,4,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,165,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,180,"            throw new IllegalArgumentException(""The Writer must not be null"");",10,5,0,1,2,0,8,0,0,23,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,183,            return;,20,1,0,0,0,4,4,2,0,30,7,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,192,"                out.write(""\\u"" + hex(ch));",0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,194,"                out.write(""\\u0"" + hex(ch));",0,1,0,2,4,0,8,0,0,10,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,196,"                out.write(""\\u00"" + hex(ch));",0,1,0,2,4,0,8,0,0,10,29,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,198,                switch (ch) {,2,0,0,1,3,0,0,0,0,2,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,200,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,201,                        out.write('b');,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,202,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,204,                        out.write('\\');,0,0,0,1,2,0,12,0,0,13,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,205,                        out.write('n');,0,1,0,1,2,0,8,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,206,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,208,                        out.write('\\');,2,0,0,1,2,0,4,0,0,8,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,209,                        out.write('t');,0,0,0,1,2,0,8,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,210,                        break;,6,1,1,0,0,0,2,0,0,14,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,212,                        out.write('\\');,6,1,0,1,2,0,4,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,213,                        out.write('f');,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,214,                        break;,4,2,0,0,0,0,8,0,0,15,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,216,                        out.write('\\');,2,0,0,1,2,3,4,4,0,15,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,217,                        out.write('r');,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,218,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,220,                        if (ch > 0xf) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,221,"                            out.write(""\\u00"" + hex(ch));",2,2,0,2,4,0,8,0,0,13,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,223,"                            out.write(""\\u000"" + hex(ch));",0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,225,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,230,                        if (escapeSingleQuote) {,2,0,0,1,3,0,0,0,0,2,24,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,231,                            out.write('\\');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,233,                        out.write('\'');,2,0,0,1,2,3,4,4,0,14,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,234,                        break;,6,1,1,0,0,3,0,0,0,16,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,236,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,237,"                        out.write('""');",0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,238,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,240,                        out.write('\\');,6,1,0,1,2,0,4,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,241,                        out.write('\\');,6,0,0,1,2,3,0,4,0,14,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,242,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,263,        return Integer.toHexString(ch).toUpperCase();,0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,276,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,277,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,280,            StringWriter writer = new StringWriter(str.length());,2,0,0,2,4,0,4,4,0,10,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,281,"            unescapeJava(writer, str);",4,2,0,1,2,0,12,0,0,18,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,282,            return writer.toString();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,283,        } catch (IOException ioe) {,2,0,0,1,4,0,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,285,            ioe.printStackTrace();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,286,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,306,        if (out == null) {,0,0,0,1,3,0,4,0,0,5,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,307,"            throw new IllegalArgumentException(""The Writer must not be null"");",0,0,0,1,2,0,0,0,0,3,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,309,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,310,            return;,4,0,0,0,0,1,0,2,0,6,7,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,312,        int sz = str.length();,12,7,0,1,2,0,8,0,0,27,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,313,        StringBuffer unicode = new StringBuffer(4);,0,0,0,1,2,0,0,0,0,3,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,314,        boolean hadSlash = false;,3,1,0,0,0,0,14,2,0,20,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,315,        boolean inUnicode = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,316,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,317,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,318,            if (inUnicode) {,2,0,0,1,3,0,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,321,                unicode.append(ch);,2,1,0,1,2,0,4,4,0,11,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,322,                if (unicode.length() == 4) {,8,1,0,2,5,0,4,2,0,17,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,326,"                        int value = Integer.parseInt(unicode.toString(), 16);",2,0,0,2,4,0,8,0,0,10,53,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,327,                        out.write((char) value);,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,328,                        unicode.setLength(0);,6,0,0,1,2,3,0,4,0,13,21,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,329,                        inUnicode = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,330,                        hadSlash = false;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,333,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,331,                    } catch (NumberFormatException nfe) {,2,0,0,1,4,3,2,0,0,8,37,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,332,"                        throw new NestableRuntimeException(""Unable to parse unicode value: "" + unicode, nfe);",4,1,0,1,2,0,0,2,0,8,85,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,337,            if (hadSlash) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,339,                hadSlash = false;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,340,                switch (ch) {,6,0,0,1,3,3,0,4,0,13,13,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,342,                        out.write('\\');,2,1,0,1,2,0,4,0,0,8,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,343,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,345,                        out.write('\'');,6,3,0,1,2,0,0,0,0,9,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,346,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,348,"                        out.write('""');",0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,349,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,351,                        out.write('\r');,0,0,0,1,2,0,4,0,0,4,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,352,                        break;,4,0,0,0,0,0,6,0,0,11,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,354,                        out.write('\f');,0,0,0,1,2,0,0,2,0,2,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,355,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,357,                        out.write('\t');,2,1,0,1,2,0,4,0,0,8,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,358,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,360,                        out.write('\n');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,361,                        break;,2,0,0,0,0,0,8,2,0,14,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,363,                        out.write('\b');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,364,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,368,                            inUnicode = true;,4,2,0,0,0,0,0,0,0,6,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,369,                            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,372,                        out.write(ch);,0,0,0,1,2,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,373,                        break;,0,0,0,0,0,0,4,0,0,4,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,376,            } else if (ch == '\\') {,2,1,0,1,4,0,0,0,0,4,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,377,                hadSlash = true;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,378,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,380,            out.write(ch);,0,0,0,1,2,0,2,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,382,        if (hadSlash) {,2,0,0,1,3,0,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,385,            out.write('\\');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,387,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,401,        return unescapeJava(str);,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,421,"        unescapeJava(out, str);",4,0,0,1,2,0,10,0,0,14,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,422,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,453,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,454,            return null;,6,1,0,0,0,1,4,2,0,13,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,457,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,2,1,0,4,8,0,4,4,0,11,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,458,"            escapeHtml(writer, str);",0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,459,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,460,        } catch (IOException e) {,6,0,0,1,4,0,0,2,0,10,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,463,            e.printStackTrace();,2,0,0,1,2,0,16,0,0,19,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,464,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,498,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,499,"            throw new IllegalArgumentException (""The Writer must not be null."");",2,0,0,1,2,0,8,0,0,10,68,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,501,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,502,            return;,6,1,0,0,0,1,4,0,0,12,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,504,"        Entities.HTML40.escape(writer, string);",4,0,0,1,2,0,6,0,0,10,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,505,    },4,1,0,0,1,0,0,0,0,5,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,525,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,526,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,529,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,2,0,0,4,8,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,530,"            unescapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,531,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,532,        } catch (IOException e) {,2,0,0,1,4,0,0,2,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,535,            e.printStackTrace();,2,0,0,1,2,0,8,0,0,11,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,536,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,559,        if (writer == null ) {,6,1,0,1,3,0,0,4,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,560,"            throw new IllegalArgumentException (""The Writer must not be null."");",0,0,0,1,2,0,0,2,0,4,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,562,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,563,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,565,"        Entities.HTML40.unescape(writer, string);",4,0,0,1,2,0,6,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,566,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,589,        if (writer == null ) {,2,1,0,1,3,0,2,0,0,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,590,"            throw new IllegalArgumentException (""The Writer must not be null."");",0,0,0,1,2,0,0,2,0,4,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,592,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,593,            return;,6,1,0,0,0,1,8,2,0,17,7,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,595,"        Entities.XML.escape(writer, str);",4,0,0,1,2,0,6,0,0,10,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,596,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,616,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,617,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,619,        return Entities.XML.escape(str);,4,0,0,1,2,1,4,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,641,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,642,"            throw new IllegalArgumentException (""The Writer must not be null."");",0,0,0,1,2,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,644,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,645,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,647,"        Entities.XML.unescape(writer, str);",6,0,0,1,2,0,6,0,0,12,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,648,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,666,        if (str == null) {,6,2,0,1,3,0,0,0,0,8,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,667,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,669,        return Entities.XML.unescape(str);,10,0,0,1,2,4,4,4,0,21,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,692,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,693,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,695,"        return StringUtils.replace(str, ""'"", ""''"");",0,0,0,1,2,1,6,0,0,8,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,723,"        if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {",0,0,0,2,5,0,8,0,0,8,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,724,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,727,            StringWriter writer = new StringWriter();,8,1,0,1,2,0,4,0,0,14,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,728,"            escapeCsv(writer, str);",0,0,0,1,2,0,6,0,0,6,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,729,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,730,        } catch (IOException ioe) {,2,0,0,1,4,0,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,732,            ioe.printStackTrace();,10,2,0,1,2,0,6,2,0,20,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,733,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,761,"        if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {",0,0,0,2,5,0,8,0,0,8,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,762,            if (str != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,763,                out.write(str);,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,765,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,767,        out.write(CSV_QUOTE);,0,0,0,1,2,0,6,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,768,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,769,            char c = str.charAt(i);,10,1,0,1,2,0,6,0,0,18,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,770,            if (c == CSV_QUOTE) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,771,                out.write(CSV_QUOTE); // escape double quote,0,0,0,1,2,0,6,0,0,6,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,773,            out.write(c);,0,0,0,1,2,0,6,0,0,6,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,775,        out.write(CSV_QUOTE);,0,0,0,1,2,0,6,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,776,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,801,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,802,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,805,            StringWriter writer = new StringWriter();,2,0,0,1,2,0,0,4,0,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,806,"            unescapeCsv(writer, str);",0,0,0,1,2,0,6,0,0,6,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,807,            return writer.toString();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,808,        } catch (IOException ioe) {,2,0,0,1,4,0,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,810,            ioe.printStackTrace();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,811,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,839,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,840,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,842,        if (str.length() < 2) {,2,1,0,2,5,0,12,4,0,19,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,843,            out.write(str);,0,0,0,1,2,0,6,0,0,6,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,844,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,846,        if ( str.charAt(0) != CSV_QUOTE || str.charAt(str.length() - 1) != CSV_QUOTE ) {,0,0,0,4,9,0,0,0,0,13,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,847,            out.write(str);,0,0,0,1,2,0,6,0,0,6,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,848,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,852,"        String quoteless = str.substring(1, str.length() - 1);",0,0,0,2,4,0,0,0,0,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,854,"        if ( StringUtils.containsAny(quoteless, CSV_SEARCH_CHARS) ) {",4,1,0,2,5,0,0,0,0,5,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,856,"            str = StringUtils.replace(quoteless, CSV_QUOTE_STR + CSV_QUOTE_STR, CSV_QUOTE_STR);",6,1,0,1,2,0,8,0,0,16,83,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,859,        out.write(str);,0,0,0,1,2,0,6,0,0,6,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,860,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,158,        return nullText;,2,0,0,0,0,1,0,0,0,2,16,4,1.33333,1,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1183,        if (width > 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1184,            ensureCapacity(size + width);,4,1,0,1,2,0,2,0,0,7,29,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1185,            String str = (obj == null ? getNullText() : obj.toString());,0,0,0,3,6,0,0,0,0,9,60,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1186,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1227,        if (width > 0) {,6,3,0,1,3,0,8,0,0,18,16,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1228,            ensureCapacity(size + width);,6,1,0,1,2,0,8,2,0,17,29,5,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1229,            String str = (obj == null ? getNullText() : obj.toString());,4,1,0,3,6,0,6,2,0,14,60,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1230,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.25,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,98,        this(CAPACITY);,2,0,0,1,2,0,0,0,0,2,15,4,0.02837,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,99,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02837,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,107,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02778,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,108,        if (initialCapacity <= 0) {,0,0,0,1,3,0,0,0,0,4,27,4,0.02778,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,111,        buffer = new char[initialCapacity];,2,0,1,1,2,0,0,0,0,5,35,4,0.02778,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,112,    },2,0,0,0,1,0,6,0,0,9,1,3,0.02778,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,372,            return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,381,                isEquals = lhs.equals(rhs);,4,0,0,1,2,0,6,2,0,13,27,4,0.05263,1,1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,368,        if (isEquals == false) {,2,1,0,1,3,0,0,0,0,4,24,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,371,        if (lhs == rhs) {,6,1,0,1,3,0,6,0,0,15,17,3,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,374,        if (lhs == null || rhs == null) {,4,3,0,1,3,0,0,0,0,7,33,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,378,        Class lhsClass = lhs.getClass();,2,0,0,1,2,0,4,2,0,8,32,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,379,        if (!lhsClass.isArray()) {,6,1,0,2,5,0,4,0,0,12,26,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,408,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.02222,1,1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,831,        return this.isEquals;,4,1,0,0,0,1,0,0,0,6,21,6,0.01639,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,100,    public EqualsBuilder() {,2,0,0,1,3,1,0,0,0,3,24,2,0.01613,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,92,    private boolean isEquals = true;,6,0,0,0,0,1,4,0,0,12,32,1,0.01613,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,102,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01613,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,146,            if (numerator==Integer.MIN_VALUE ||,6,2,0,0,1,0,0,0,0,8,35,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,150,            numerator = -numerator;,2,0,0,0,0,0,0,4,0,6,23,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,151,            denominator = -denominator;,4,0,0,0,0,0,0,0,0,6,27,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,578,        if (u>0) { u=-u; } // make u negative,0,0,0,2,4,0,4,0,0,5,37,5,0.125,1,1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,579,        if (v>0) { v=-v; } // make v negative,0,0,0,2,4,0,0,0,0,6,37,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,581,        int k=0;,0,0,0,0,0,0,0,0,0,0,8,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,582,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,6,7,0,3,7,0,0,0,0,13,72,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,585,        if (k==31) {,2,1,0,1,3,0,0,0,0,3,12,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,590,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,8,3,0,3,6,0,0,0,0,12,38,5,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,596,            while ((t&1)==0) { // while t is even..,4,2,0,2,5,3,6,2,0,17,39,1,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,600,            if (t>0) {,2,1,0,1,3,0,0,0,0,3,10,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,601,                u = -t;,0,0,0,0,0,0,0,0,0,0,7,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,603,                v = t;,4,0,0,0,0,0,0,0,0,5,6,8,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,606,            t = (v - u)/2;,6,2,0,1,2,0,0,0,0,9,14,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,609,        } while (t!=0);,2,1,0,1,3,0,0,0,0,3,15,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,610,        return -u*(1<<k); // gcd is u*2^k,2,0,0,1,2,4,0,0,0,5,33,2,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,571,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,2,1,0,3,7,0,0,0,0,3,43,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,572,            return 1;,6,0,0,0,0,1,8,0,0,14,9,3,0.11111,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,142,        if (denominator == 0) {,4,1,0,1,3,1,0,2,0,8,23,1,0.06667,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,145,        if (denominator < 0) {,2,1,0,1,3,0,0,0,0,3,22,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,153,"        return new Fraction(numerator, denominator);",0,0,0,1,2,1,0,0,0,4,44,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,368,        return numerator;,4,0,0,0,0,1,0,0,0,4,17,3,0.04762,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,377,        return denominator;,2,0,0,0,0,1,0,0,0,2,19,4,0.04762,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1708,"        public Pair(Object obj1, Object obj2) {",6,0,0,1,3,1,0,4,0,11,39,3,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1709,            mObj1 = obj1;,4,2,0,0,0,0,0,0,0,6,13,10,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1710,            mObj2 = obj2;,0,0,0,0,0,0,0,0,0,0,13,4,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1711,        },4,1,0,0,1,0,0,0,0,5,1,8,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1738,            return,0,0,0,0,0,0,0,0,0,0,6,4,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,772,            return new UnpaddedNumberField(field);,2,0,0,1,2,1,0,2,0,4,38,6,1.33333,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,954,        return mLocale;,4,0,0,0,0,1,4,0,0,9,15,3,1.33333,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1185,        UnpaddedNumberField(int field) {,0,0,0,1,3,0,0,0,0,4,32,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1186,            mField = field;,2,0,0,0,0,3,0,4,0,9,15,2,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1187,        },0,0,0,0,1,0,0,0,0,1,1,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1176,        static final UnpaddedNumberField INSTANCE_YEAR = new UnpaddedNumberField(Calendar.YEAR);,6,0,0,1,2,2,0,4,0,12,88,3,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1193,            return 4;,0,0,0,0,0,1,0,0,0,1,9,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,234,"        return getDateInstance(style, null, null);",0,0,0,1,2,1,0,0,0,4,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,293,                locale = Locale.getDefault();,0,0,0,1,2,0,0,0,0,3,29,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,408,"        return getDateTimeInstance(dateStyle, timeStyle, null, null);",0,0,0,1,2,1,6,0,0,7,61,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,425,"        return getDateTimeInstance(dateStyle, timeStyle, null, locale);",4,0,0,1,2,1,8,0,0,13,63,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,461,"        Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));",12,2,0,3,6,0,0,8,0,22,70,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,462,        if (timeZone != null) {,2,1,0,1,3,0,0,0,0,3,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,465,        if (locale != null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,466,"            key = new Pair(key, locale);",0,0,0,1,2,0,0,0,0,3,28,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,469,        FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);,8,5,0,2,4,0,10,4,0,28,73,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,470,        if (format == null) {,4,2,0,1,3,0,10,0,0,16,21,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,471,            if (locale == null) {,4,1,0,1,3,2,4,2,0,13,21,2,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,472,                locale = Locale.getDefault();,0,0,0,1,2,0,0,0,0,3,29,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,475,"                SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,",2,0,0,1,3,0,8,4,0,14,100,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,477,                String pattern = formatter.toPattern();,6,0,0,1,2,3,4,4,0,18,39,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,478,"                format = getInstance(pattern, timeZone, locale);",2,0,0,1,2,0,8,0,0,11,48,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,479,"                cDateTimeInstanceCache.put(key, format);",2,0,0,1,2,2,8,4,0,16,40,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,483,            },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,485,        return format;,4,1,0,0,0,1,8,0,0,13,14,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,672,                if (tokenLen >= 4) {,2,1,0,1,3,0,0,0,0,3,20,7,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,675,"                    rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);",12,0,0,1,2,0,0,2,0,15,81,9,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,677,                break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1717,            if (this == obj) {,0,0,0,1,3,0,6,0,0,6,18,9,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1721,            if (!(obj instanceof Pair)) {,0,0,0,2,5,0,0,0,0,7,29,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1725,            Pair key = (Pair)obj;,2,1,0,1,2,0,0,0,0,4,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1727,            return,2,0,0,0,0,3,0,4,0,9,6,2,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1538,"        TimeZoneNameRule(TimeZone timeZone, boolean timeZoneForced, Locale locale, int style) {",10,0,1,1,3,0,10,4,0,26,87,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1539,            mTimeZone = timeZone;,6,0,0,0,0,3,2,0,0,13,21,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1540,            mTimeZoneForced = timeZoneForced;,4,0,0,0,0,0,0,0,0,5,33,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1541,            mLocale = locale;,4,0,0,0,0,0,0,0,0,5,17,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1542,            mStyle = style;,4,0,0,0,0,0,0,0,0,5,15,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1544,            if (timeZoneForced) {,2,0,0,1,3,0,0,0,0,2,21,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1548,                mStandard = null;,4,0,0,0,0,1,12,0,0,18,17,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1549,                mDaylight = null;,6,1,0,0,0,1,0,2,0,13,17,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1551,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1557,            if (mTimeZoneForced) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1559,            } else if (mStyle == TimeZone.SHORT) {,0,0,0,1,4,0,0,0,0,5,38,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1560,                return 4;,0,0,0,0,0,1,0,0,0,1,9,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1447,        TwelveHourField(NumberRule rule) {,4,0,0,1,3,0,0,2,0,6,34,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1448,            mRule = rule;,4,0,0,0,0,0,4,2,0,13,13,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1449,        },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1455,            return mRule.estimateLength();,0,0,0,1,2,1,4,0,0,4,30,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,249,"        return getDateInstance(style, null, locale);",0,0,0,1,2,1,6,0,0,7,44,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,280,        Object key = new Integer(style);,4,0,0,1,2,0,0,4,0,8,32,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,281,        if (timeZone != null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,285,        if (locale != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,286,"            key = new Pair(key, locale);",6,0,0,1,2,0,0,2,0,9,28,6,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,290,        FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);,0,1,0,2,4,0,4,0,0,5,69,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,291,        if (format == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,292,            if (locale == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,296,"                SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale);",0,0,0,2,4,0,0,0,0,6,90,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,297,                String pattern = formatter.toPattern();,2,0,0,1,2,0,4,2,0,8,39,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,298,"                format = getInstance(pattern, timeZone, locale);",0,0,0,1,2,0,0,0,0,3,48,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,299,"                cDateInstanceCache.put(key, format);",6,0,0,1,2,0,0,0,0,6,36,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,303,            },2,0,0,0,1,0,6,0,0,8,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,305,        return format;,0,0,0,0,0,1,0,0,0,1,14,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,633,"                rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));",6,0,0,2,4,0,4,2,0,13,70,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,634,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,663,"                rule = new TextField(Calendar.AM_PM, AmPmStrings);",0,0,0,1,2,0,0,0,0,3,50,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,664,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,648,"                rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);",0,0,0,1,2,0,0,0,0,3,84,4,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,649,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,690,                    rule = new StringLiteral(sub);,0,0,0,1,2,0,0,0,0,3,30,4,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,692,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1112,        StringLiteral(String value) {,0,0,0,1,3,0,4,0,0,5,29,4,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1113,            mValue = value;,10,1,0,0,0,0,4,2,0,19,15,3,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1114,        },0,0,0,0,1,0,0,0,0,1,1,4,0.44444,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1120,            return mValue.length();,0,0,0,1,2,1,0,0,0,4,23,4,0.44444,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,44,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,45,    },4,0,0,0,1,0,0,0,0,4,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,64,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,65,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,67,        return (bool.booleanValue() ? Boolean.FALSE : Boolean.TRUE);,0,0,0,2,4,1,0,0,0,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,87,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,1,1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,88,            return false;,0,0,0,0,0,1,4,0,0,5,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,90,        return bool.booleanValue() ? true : false;,0,0,0,1,2,1,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,108,        return !isTrue(bool);,2,0,0,1,2,1,8,0,0,11,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,126,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,127,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,129,        return bool.booleanValue() ? false : true;,0,0,0,1,2,1,4,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,147,        return !isFalse(bool);,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,165,        return bool ? Boolean.TRUE : Boolean.FALSE;,10,0,0,0,0,1,0,0,0,10,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,183,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,184,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,186,        return bool.booleanValue() ? true : false;,0,0,0,1,2,1,4,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,203,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,204,            return valueIfNull;,4,0,0,0,0,4,0,4,0,11,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,206,        return bool.booleanValue() ? true : false;,0,0,0,1,2,1,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,226,        return value == 0 ? false : true;,2,1,0,0,0,1,0,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,244,        return value == 0 ? Boolean.FALSE : Boolean.TRUE;,10,1,0,0,0,1,0,0,0,11,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,264,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,265,            return null;,4,1,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,267,        return value.intValue() == 0 ? Boolean.FALSE : Boolean.TRUE;,8,1,0,1,2,1,4,0,0,13,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,287,        if (value == trueValue) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,288,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,289,        } else if (value == falseValue) {,6,1,0,1,4,0,10,0,0,18,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,290,            return false;,2,0,0,0,0,1,8,2,0,13,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,293,"        throw new IllegalArgumentException(""The Integer did not match either specified value"");",0,0,0,1,2,0,0,2,0,3,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,316,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,317,            if (trueValue == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,318,                return true;,4,0,0,0,0,1,0,0,0,6,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,319,            } else if (falseValue == null) {,4,1,0,1,4,2,0,4,0,11,32,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,320,                return false;,0,0,0,0,0,1,0,0,0,1,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,322,        } else if (value.equals(trueValue)) {,4,0,0,2,6,0,6,0,0,11,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,323,            return true;,0,0,0,0,0,1,0,0,0,1,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,324,        } else if (value.equals(falseValue)) {,0,0,0,2,6,0,6,0,0,6,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,325,            return false;,2,1,0,0,0,1,0,0,0,4,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,328,"        throw new IllegalArgumentException(""The Integer did not match either specified value"");",2,0,0,1,2,0,4,0,0,6,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,348,        if (value == trueValue) {,4,2,0,1,3,0,12,0,0,20,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,349,            return Boolean.TRUE;,6,0,0,0,0,4,0,4,0,13,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,350,        } else if (value == falseValue) {,0,0,0,1,4,0,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,351,            return Boolean.FALSE;,8,0,0,0,0,1,0,0,0,9,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,352,        } else if (value == nullValue) {,4,1,0,1,4,0,0,0,0,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,353,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,356,"        throw new IllegalArgumentException(""The Integer did not match any specified value"");",0,0,0,1,2,0,0,2,0,3,84,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,379,        if (value == null) {,4,2,0,1,3,0,8,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,380,            if (trueValue == null) {,2,0,0,1,3,3,0,0,0,5,24,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,381,                return Boolean.TRUE;,8,0,0,0,0,4,0,2,0,13,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,382,            } else if (falseValue == null) {,2,1,0,1,4,0,0,0,0,3,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,383,                return Boolean.FALSE;,4,0,0,0,0,1,4,0,0,8,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,384,            } else if (nullValue == null) {,2,1,0,1,4,0,0,0,0,3,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,385,                return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,387,        } else if (value.equals(trueValue)) {,0,0,0,2,6,0,0,0,0,8,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,388,            return Boolean.TRUE;,4,0,0,0,0,1,0,0,0,4,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,389,        } else if (value.equals(falseValue)) {,0,0,0,2,6,0,6,0,0,6,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,390,            return Boolean.FALSE;,6,1,0,0,0,1,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,391,        } else if (value.equals(nullValue)) {,0,0,0,2,6,0,6,0,0,6,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,392,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,395,"        throw new IllegalArgumentException(""The Integer did not match any specified value"");",0,0,0,1,2,0,4,0,0,5,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,413,        return bool ? 1 : 0;,2,0,0,0,0,1,0,0,0,2,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,429,        return bool ? NumberUtils.INTEGER_ONE : NumberUtils.INTEGER_ZERO;,8,1,0,0,0,1,0,0,0,10,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,447,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,448,            return null;,10,0,0,0,0,1,6,8,0,26,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,450,        return bool.booleanValue() ? NumberUtils.INTEGER_ONE : NumberUtils.INTEGER_ZERO;,0,0,0,1,2,1,0,0,0,4,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,467,        return bool ? trueValue : falseValue;,2,0,0,0,0,1,4,0,0,6,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,486,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,487,            return nullValue;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,489,        return bool.booleanValue() ? trueValue : falseValue;,6,0,0,1,2,1,10,2,0,18,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,508,        return bool ? trueValue : falseValue;,6,0,0,0,0,1,0,0,0,6,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,530,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,531,            return nullValue;,2,0,0,0,0,1,0,2,0,4,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,533,        return bool.booleanValue() ? trueValue : falseValue;,10,1,0,1,2,4,20,0,0,37,52,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,563,"        if (""true"".equalsIgnoreCase(str)) {",0,0,0,2,5,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,564,            return Boolean.TRUE;,12,1,0,0,0,1,0,2,0,16,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,565,"        } else if (""false"".equalsIgnoreCase(str)) {",2,0,0,2,6,0,0,0,0,2,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,566,            return Boolean.FALSE;,4,0,0,0,0,1,0,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,567,"        } else if (""on"".equalsIgnoreCase(str)) {",0,0,0,2,6,0,0,0,0,8,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,568,            return Boolean.TRUE;,0,1,0,0,0,1,8,0,0,10,20,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,569,"        } else if (""off"".equalsIgnoreCase(str)) {",0,0,0,2,6,0,4,0,0,5,41,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,570,            return Boolean.FALSE;,6,0,0,0,0,1,2,2,0,10,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,571,"        } else if (""yes"".equalsIgnoreCase(str)) {",0,0,0,2,6,0,0,0,0,8,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,572,            return Boolean.TRUE;,8,1,0,0,0,6,8,6,0,33,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,573,"        } else if (""no"".equalsIgnoreCase(str)) {",0,0,0,2,6,0,12,0,0,13,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,574,            return Boolean.FALSE;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,577,        return null;,4,3,0,0,0,1,4,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,603,        if (str == null) {,4,3,0,1,3,0,12,0,0,20,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,604,            if (trueString == null) {,2,1,0,1,3,0,0,0,0,3,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,605,                return Boolean.TRUE;,4,0,0,0,0,1,0,0,0,4,20,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,606,            } else if (falseString == null) {,0,0,0,1,4,0,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,607,                return Boolean.FALSE;,4,0,0,0,0,1,0,0,0,4,21,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,608,            } else if (nullString == null) {,0,0,0,1,4,0,0,0,0,5,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,609,                return null;,0,0,1,0,0,1,4,0,0,13,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,611,        } else if (str.equals(trueString)) {,4,6,0,2,6,0,12,0,0,22,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,612,            return Boolean.TRUE;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,613,        } else if (str.equals(falseString)) {,0,0,0,2,6,0,6,0,0,6,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,614,            return Boolean.FALSE;,14,1,1,0,0,1,0,2,0,22,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,615,        } else if (str.equals(nullString)) {,6,1,0,2,6,0,6,0,0,14,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,616,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,619,"        throw new IllegalArgumentException(""The String did not match any specified value"");",8,1,0,1,2,0,0,2,0,13,83,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,656,"        if (str == ""true"") {",2,1,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,657,            return true;,0,1,0,0,0,1,4,0,0,6,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,659,        if (str == null) {,6,0,0,1,3,3,4,2,0,16,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,660,            return false;,8,0,0,0,0,4,0,4,0,16,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,662,        switch (str.length()) {,2,0,0,2,5,0,0,0,0,2,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,664,                char ch0 = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,665,                char ch1 = str.charAt(1);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,666,                return ,2,0,0,0,0,1,0,0,0,3,6,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,671,                char ch = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,672,                if (ch == 'y') {,2,1,0,1,3,0,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,673,                    return ,0,0,0,0,0,1,0,0,0,1,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,677,                if (ch == 'Y') {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,678,                    return ,0,0,0,0,0,1,0,0,0,1,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,684,                char ch = str.charAt(0);,2,1,0,1,2,0,0,0,0,3,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,685,                if (ch == 't') {,0,0,1,1,3,0,4,0,0,13,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,686,                    return ,4,1,0,0,0,1,4,0,0,11,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,691,                if (ch == 'T') {,2,1,0,1,3,0,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,692,                    return ,0,0,0,0,0,1,6,2,0,8,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,699,        return false;,4,0,0,0,0,1,0,0,0,6,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,732,        if (str == null) {,6,1,0,1,3,0,0,0,0,8,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,733,            if (trueString == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,734,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,735,            } else if (falseString == null) {,0,0,0,1,4,0,0,0,0,5,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,736,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,738,        } else if (str.equals(trueString)) {,0,0,0,2,6,0,6,0,0,6,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,739,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,740,        } else if (str.equals(falseString)) {,0,0,0,2,6,0,0,0,0,8,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,741,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,744,"        throw new IllegalArgumentException(""The String did not match either specified value"");",0,0,0,1,2,0,0,2,0,3,86,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,764,"        return toString(bool, ""true"", ""false"", null);",4,0,0,1,2,1,4,0,0,12,45,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,782,"        return toString(bool, ""on"", ""off"", null);",6,2,0,1,2,1,4,0,0,15,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,800,"        return toString(bool, ""yes"", ""no"", null);",6,0,0,1,2,4,6,4,0,23,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,822,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,823,            return nullString;,2,0,0,0,0,1,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,825,        return bool.booleanValue() ? trueString : falseString;,0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,844,"        return toString(bool, ""true"", ""false"");",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,861,"        return toString(bool, ""on"", ""off"");",4,0,0,1,2,1,0,0,0,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,878,"        return toString(bool, ""yes"", ""no"");",2,0,0,1,2,2,0,0,0,4,35,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,897,        return bool ? trueString : falseString;,0,0,0,0,0,1,0,0,0,1,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,918,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,919,"            throw new IllegalArgumentException(""The Array must not be null"");",6,1,0,1,2,0,6,0,0,13,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,920,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,921,"            throw new IllegalArgumentException(""Array is empty"");",0,0,0,1,2,0,0,0,0,3,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,925,        int trueCount = 0;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,926,        for (int i = 0; i < array.length; i++) {,2,0,0,1,3,0,0,0,0,3,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,929,            if (array[i]) {,0,0,1,2,5,0,0,0,0,4,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,930,                if (trueCount < 1) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,931,                    trueCount++;,6,1,0,0,0,0,0,0,0,8,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,933,                    return false;,6,1,0,0,0,3,0,0,0,10,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,939,        return trueCount == 1;,0,0,0,0,0,1,0,0,0,1,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,958,        if (array == null) {,2,0,0,1,3,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,959,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,960,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,961,"            throw new IllegalArgumentException(""Array is empty"");",0,0,0,1,2,0,0,2,0,3,53,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,963,        boolean[] primitive = null;,4,0,0,1,2,0,4,0,0,9,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,965,            primitive = ArrayUtils.toPrimitive(array);,2,0,0,1,2,3,2,0,0,8,42,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,968,        },4,2,0,0,1,0,0,0,0,7,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,966,        } catch (NullPointerException ex) {,4,1,0,1,4,0,6,0,0,11,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,967,"            throw new IllegalArgumentException(""The array must not contain any null elements"");",0,0,0,1,2,0,0,0,0,3,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,969,        return xor(primitive) ? Boolean.TRUE : Boolean.FALSE;,8,0,0,1,2,1,4,0,0,12,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,150,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,173,"            throw new IllegalArgumentException(""The Writer must not be null"");",0,0,0,1,2,0,4,2,0,8,66,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,229,                        out.write('\\');,2,0,0,1,2,3,4,2,0,12,16,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,230,"                        out.write('""');",0,0,0,1,2,0,4,0,0,5,15,13,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,231,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,223,                        if (escapeSingleQuote) {,0,0,0,1,3,0,0,0,0,4,24,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,226,                        out.write('\'');,2,0,0,1,2,0,4,0,0,8,16,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,227,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,149,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,153,            StringWriter writer = new StringWriter(str.length() * 2);,4,1,0,2,4,0,4,4,0,13,57,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,154,"            escapeJavaStyleString(writer, str, escapeSingleQuotes);",0,0,0,1,2,0,0,0,0,3,55,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,155,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,172,        if (out == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,175,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,179,        sz = str.length();,2,0,0,1,2,0,4,0,0,7,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,180,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,181,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,184,            if (ch > 0xfff) {,4,2,0,1,3,0,8,2,0,16,17,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,186,            } else if (ch > 0xff) {,2,1,0,1,4,0,0,0,0,3,23,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,188,            } else if (ch > 0x7f) {,2,1,0,1,4,0,0,0,0,3,23,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,190,            } else if (ch < 32) {,0,0,0,1,4,0,0,0,0,5,21,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,221,                switch (ch) {,0,0,0,1,3,0,0,0,0,4,13,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,237,                        out.write(ch);,4,0,0,1,2,0,0,0,0,6,14,12,0.33333,1,1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,242,    },0,0,0,0,1,0,0,0,0,1,1,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,60,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,47,    protected NestableDelegate delegate = new NestableDelegate(this);,2,0,0,1,2,1,0,4,0,7,65,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,53,    private Throwable cause = null;,2,0,0,0,0,1,0,2,0,5,31,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,61,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,70,        super(msg);,2,0,0,1,2,0,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,71,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,81,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,82,        this.cause = cause;,10,1,0,0,0,3,4,2,0,22,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,83,    },2,0,1,0,1,0,0,0,0,7,1,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,94,        super(msg);,4,0,0,1,2,0,0,2,0,6,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,95,        this.cause = cause;,4,0,0,0,0,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,96,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,102,        return cause;,2,0,0,0,0,1,6,0,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,113,        if (super.getMessage() != null) {,0,0,0,2,5,0,0,0,0,7,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,114,            return super.getMessage();,2,0,0,1,2,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,115,        } else if (cause != null) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,116,            return cause.toString();,0,0,0,1,2,1,4,0,0,4,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,118,            return null;,8,1,1,0,0,4,4,2,0,23,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,126,        if (index == 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,127,            return super.getMessage();,2,0,0,1,2,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,129,        return delegate.getMessage(index);,2,2,0,1,2,1,10,0,0,15,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,136,        return delegate.getMessages();,0,0,0,1,2,1,4,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,143,        return delegate.getThrowable(index);,0,0,0,1,2,1,6,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,150,        return delegate.getThrowableCount();,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,157,        return delegate.getThrowables();,0,0,0,1,2,1,4,0,0,4,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,164,"        return delegate.indexOfThrowable(type, 0);",0,0,0,1,2,1,6,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,171,"        return delegate.indexOfThrowable(type, fromIndex);",0,0,0,1,2,1,0,0,0,4,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,178,        delegate.printStackTrace();,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,179,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,185,        delegate.printStackTrace(out);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,186,    },10,3,1,0,1,0,12,2,0,37,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,192,        delegate.printStackTrace(out);,8,5,0,1,2,3,8,4,0,30,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,193,    },2,0,0,0,1,0,2,2,0,6,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,199,        super.printStackTrace(out);,4,0,0,1,2,0,6,0,0,10,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,200,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,54,      super();,2,0,0,1,2,0,6,0,0,8,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,55,    },2,0,0,0,1,0,0,0,0,2,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,81,"        return escapeJavaStyleString(str, false);",2,1,0,1,2,1,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,97,"        escapeJavaStyleString(out, str, false);",0,0,0,1,2,0,6,0,0,7,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,98,    },4,0,0,0,1,0,4,0,0,9,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,122,"        return escapeJavaStyleString(str, true);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,138,"        escapeJavaStyleString(out, str, true);",4,1,0,1,2,3,8,0,0,18,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,139,    },4,3,0,0,1,0,4,0,0,12,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,156,        } catch (IOException ioe) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,158,            ioe.printStackTrace();,0,0,0,1,2,0,4,0,0,4,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,159,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,176,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,185,"                out.write(""\\u"" + hex(ch));",4,1,0,2,4,0,4,0,0,10,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,187,"                out.write(""\\u0"" + hex(ch));",0,0,0,2,4,0,10,0,0,10,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,189,"                out.write(""\\u00"" + hex(ch));",6,4,0,2,4,0,8,0,0,20,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,191,                switch (ch) {,10,1,0,1,3,0,0,0,0,11,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,193,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,194,                        out.write('b');,4,1,0,1,2,0,8,0,0,15,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,195,                        break;,0,0,0,0,0,0,4,0,0,5,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,197,                        out.write('\\');,2,1,0,1,2,0,4,0,0,9,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,198,                        out.write('n');,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,199,                        break;,0,0,0,0,0,0,4,0,0,4,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,201,                        out.write('\\');,2,4,1,1,2,0,0,0,0,16,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,202,                        out.write('t');,0,0,0,1,2,0,4,0,0,5,15,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,203,                        break;,8,0,0,0,0,0,0,0,0,8,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,205,                        out.write('\\');,2,0,0,1,2,0,0,0,0,2,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,206,                        out.write('f');,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,207,                        break;,2,0,0,0,0,0,4,0,0,8,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,209,                        out.write('\\');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,210,                        out.write('r');,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,211,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,213,                        if (ch > 0xf) {,2,1,0,1,3,0,0,0,0,3,15,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,214,"                            out.write(""\\u00"" + hex(ch));",0,0,0,2,4,0,0,0,0,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,216,"                            out.write(""\\u000"" + hex(ch));",0,1,0,2,4,0,16,2,0,21,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,218,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,224,                          out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,233,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,234,                        out.write('\\');,4,3,0,1,2,0,0,0,0,7,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,235,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,252,        return Integer.toHexString(ch).toUpperCase();,0,0,0,2,4,1,8,0,0,8,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,265,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,266,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,269,            StringWriter writer = new StringWriter(str.length());,0,0,0,2,4,0,0,0,0,6,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,270,"            unescapeJava(writer, str);",0,0,0,1,2,0,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,271,            return writer.toString();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,272,        } catch (IOException ioe) {,2,0,0,1,4,0,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,274,            ioe.printStackTrace();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,275,            return null;,8,3,0,0,0,1,8,0,0,20,12,0,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,295,        if (out == null) {,10,3,0,1,3,0,6,0,0,20,18,0,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,296,"            throw new IllegalArgumentException(""The Writer must not be null"");",0,0,0,1,2,0,0,2,0,4,66,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,298,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,299,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,301,        int sz = str.length();,4,3,0,1,2,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,302,        StringBuffer unicode = new StringBuffer(4);,2,0,0,1,2,0,0,4,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,303,        boolean hadSlash = false;,0,0,0,0,0,0,8,0,0,8,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,304,        boolean inUnicode = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,305,        for (int i = 0; i < sz; i++) {,10,2,0,1,3,0,0,0,0,14,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,306,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,307,            if (inUnicode) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,310,                unicode.append(ch);,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,311,                if (unicode.length() == 4) {,0,1,0,2,5,0,4,0,0,5,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,315,"                        int value = Integer.parseInt(unicode.toString(), 16);",2,0,0,2,4,0,8,0,0,11,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,316,                        out.write((char) value);,0,0,0,2,4,0,0,0,0,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,317,                        unicode.setLength(0);,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,318,                        inUnicode = false;,2,0,0,0,0,0,0,0,0,4,18,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,319,                        hadSlash = false;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,322,                    },0,1,0,0,1,0,4,0,0,5,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,320,                    } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,321,"                        throw new NestableRuntimeException(""Unable to parse unicode value: "" + unicode, nfe);",2,0,0,1,2,0,6,0,0,8,85,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,326,            if (hadSlash) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,328,                hadSlash = false;,8,0,0,0,0,0,16,0,0,26,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,329,                switch (ch) {,2,0,0,1,3,3,6,2,0,14,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,331,                        out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,332,                        break;,2,0,0,0,0,0,4,0,0,6,6,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,334,                        out.write('\'');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,335,                        break;,2,0,0,0,0,0,4,0,0,6,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,337,"                        out.write('""');",2,0,0,1,2,3,6,2,0,15,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,338,                        break;,4,0,0,0,0,0,12,4,0,22,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,340,                        out.write('\r');,6,1,0,1,2,3,22,2,0,37,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,341,                        break;,0,1,0,0,0,0,12,4,0,20,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,343,                        out.write('\f');,2,0,0,1,2,3,8,2,0,16,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,344,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,346,                        out.write('\t');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,347,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,349,                        out.write('\n');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,350,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,352,                        out.write('\b');,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,353,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,357,                            inUnicode = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,358,                            break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,361,                        out.write(ch);,0,0,0,1,2,0,6,0,0,6,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,362,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,365,            } else if (ch == '\\') {,0,0,0,1,4,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,366,                hadSlash = true;,4,0,0,0,0,0,6,0,0,13,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,367,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,369,            out.write(ch);,0,0,0,1,2,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,371,        if (hadSlash) {,4,3,0,1,3,0,8,0,0,17,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,374,            out.write('\\');,2,0,0,1,2,0,8,2,0,13,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,376,    },6,1,0,0,1,0,0,2,0,10,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,390,        return unescapeJava(str);,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,410,"        unescapeJava(out, str);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,411,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,442,        if (str == null) {,2,0,0,1,3,3,2,2,0,10,18,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,443,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,446,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,6,1,0,4,8,3,16,6,0,33,67,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,447,"            escapeHtml(writer, str);",0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,448,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,449,        } catch (IOException e) {,2,0,0,1,4,0,0,2,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,452,            e.printStackTrace();,2,0,0,1,2,0,6,2,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,453,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,487,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,488,"            throw new IllegalArgumentException (""The Writer must not be null."");",6,1,0,1,2,0,0,2,0,11,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,490,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,491,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,493,"        Entities.HTML40.escape(writer, string);",4,0,0,1,2,0,6,2,0,13,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,494,    },6,1,0,0,1,0,0,0,0,7,1,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,514,        if (str == null) {,2,0,0,1,3,0,4,0,0,6,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,515,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,518,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,0,0,0,4,8,0,8,0,0,8,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,519,"            unescapeHtml(writer, str);",0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,520,            return writer.toString();,2,0,0,1,2,1,0,0,0,2,25,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,521,        } catch (IOException e) {,2,0,0,1,4,0,0,2,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,524,            e.printStackTrace();,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,525,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,548,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,549,"            throw new IllegalArgumentException (""The Writer must not be null."");",0,0,0,1,2,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,551,        if (string == null) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,552,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,554,"        Entities.HTML40.unescape(writer, string);",8,3,0,1,2,0,18,0,0,29,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,555,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,578,        if (writer == null ) {,4,4,0,1,3,0,4,0,0,12,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,579,"            throw new IllegalArgumentException (""The Writer must not be null."");",0,0,0,1,2,0,0,2,0,4,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,581,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,582,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,584,"        Entities.XML.escape(writer, str);",4,0,0,1,2,0,6,0,0,10,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,585,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,605,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,606,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,608,        return Entities.XML.escape(str);,4,0,0,1,2,1,4,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,630,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,631,"            throw new IllegalArgumentException (""The Writer must not be null."");",0,0,0,1,2,0,0,2,0,4,68,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,633,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,634,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,636,"        Entities.XML.unescape(writer, str);",0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,637,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,655,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,656,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,658,        return Entities.XML.unescape(str);,0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,681,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,682,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,684,"        return StringUtils.replace(str, ""'"", ""''"");",0,0,0,1,2,1,0,0,0,4,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,676,                        if (field == DateUtils.SEMI_MONTH) {,6,1,0,1,3,0,0,0,0,7,36,12,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,689,"                            val.add(fields[i][0], 1);",0,0,0,3,6,0,0,0,0,9,25,4,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,437,        if (date == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,440,        Calendar gval = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,441,        gval.setTime(date);,0,0,0,1,2,0,6,0,0,6,19,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,442,"        modify(gval, field, true);",0,0,0,1,2,0,0,0,0,3,26,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,443,        return gval.getTime();,0,0,0,1,2,1,4,0,0,4,22,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,621,        if (val.get(Calendar.YEAR) > 280000000) {,4,1,0,2,5,0,4,0,0,9,41,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,625,        if (field == Calendar.MILLISECOND) {,0,0,0,1,3,0,0,0,0,4,36,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,635,        Date date = val.getTime();,2,0,0,1,2,0,4,2,0,8,26,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,636,        long time = date.getTime();,0,0,0,1,2,0,0,0,0,3,27,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,637,        boolean done = false;,2,0,0,0,0,0,0,0,0,3,21,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,640,        int millisecs = val.get(Calendar.MILLISECOND);,0,0,0,1,2,0,0,0,0,3,46,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,641,        if (!round || millisecs < 500) {,4,2,0,1,3,0,0,0,0,7,32,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,649,        int seconds = val.get(Calendar.SECOND);,0,0,0,1,2,0,0,0,0,3,39,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,650,        if (!done && (!round || seconds < 30)) {,8,3,0,2,5,0,4,0,0,18,40,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,658,        int minutes = val.get(Calendar.MINUTE);,6,0,0,1,2,0,4,0,0,10,39,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,659,        if (!done && (!round || minutes < 30)) {,0,0,0,2,5,0,0,0,0,7,40,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,660,            time = time - (minutes * 60000L);,8,2,0,1,2,0,0,2,0,13,33,1,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,664,        if (date.getTime() != time) {,4,0,0,2,5,2,0,2,0,8,29,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,665,            date.setTime(time);,2,0,0,1,2,3,6,4,0,15,19,1,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,666,            val.setTime(date);,0,0,0,1,2,0,0,0,0,3,18,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,670,        boolean roundUp = false;,0,0,0,0,0,0,0,0,0,0,24,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,671,        for (int i = 0; i < fields.length; i++) {,0,0,0,1,3,0,0,0,0,4,41,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,672,            for (int j = 0; j < fields[i].length; j++) {,8,1,1,2,5,0,0,0,0,14,44,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,673,                if (fields[i][j] == field) {,0,0,0,3,7,0,0,0,0,10,28,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,675,                    if (round && roundUp) {,0,0,0,1,3,0,0,0,0,4,23,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,692,                    return;,0,0,0,0,0,1,6,0,0,6,7,13,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,696,            int offset = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,697,            boolean offsetSet = false;,2,0,0,0,0,3,0,4,0,9,26,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,699,            switch (field) {,2,0,0,1,3,0,0,2,0,4,16,10,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,729,            if (!offsetSet) {,2,0,0,1,3,0,6,0,0,9,17,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,730,                int min = val.getActualMinimum(fields[i][0]);,2,0,1,3,6,0,4,0,0,10,45,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,731,                int max = val.getActualMaximum(fields[i][0]);,2,0,1,3,6,0,4,0,0,10,45,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,733,                offset = val.get(fields[i][0]) - min;,4,1,1,3,6,0,4,0,0,14,37,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,735,                roundUp = offset > ((max - min) / 2);,10,4,0,2,4,0,8,2,0,25,37,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,738,            if (offset != 0) {,2,1,0,1,3,0,0,0,0,3,18,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,739,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);",0,0,0,6,12,0,0,0,0,18,54,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,45,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");",8,0,1,1,2,3,16,2,0,34,73,1,0.04762,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,73,    private static final int[][] fields = {,12,0,0,2,5,0,10,2,0,25,39,3,0.04762,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,124,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,125,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,142,        if (date1 == null || date2 == null) {,4,3,0,1,3,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,143,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,145,        Calendar cal1 = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,146,        cal1.setTime(date1);,2,0,0,1,2,0,6,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,147,        Calendar cal2 = Calendar.getInstance();,4,2,0,1,2,0,8,2,0,17,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,148,        cal2.setTime(date2);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,149,"        return isSameDay(cal1, cal2);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,166,        if (cal1 == null || cal2 == null) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,167,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,169,        return (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&,14,6,0,2,5,1,18,0,0,39,59,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,187,        if (date1 == null || date2 == null) {,10,5,0,1,3,0,4,0,0,20,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,188,"            throw new IllegalArgumentException(""The date must not be null"");",4,0,0,1,2,0,0,0,0,4,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,190,        return date1.getTime() == date2.getTime();,0,1,0,2,4,1,8,0,0,9,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,205,        if (cal1 == null || cal2 == null) {,6,3,0,1,3,3,2,2,0,17,35,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,206,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,208,        return cal1.getTime().getTime() == cal2.getTime().getTime();,0,1,0,4,8,1,12,0,0,13,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,225,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,4,0,0,11,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,226,"            throw new IllegalArgumentException(""The date must not be null"");",10,3,0,1,2,3,4,4,0,27,64,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,228,        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&,18,8,1,2,5,7,12,4,0,52,75,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,253,        if (str == null || parsePatterns == null) {,0,0,0,1,3,0,0,0,0,4,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,254,"            throw new IllegalArgumentException(""Date and Patterns must not be null"");",0,0,0,1,2,0,0,0,0,3,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,257,        SimpleDateFormat parser = null;,2,0,0,0,0,0,0,2,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,258,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,259,        for (int i = 0; i < parsePatterns.length; i++) {,0,0,0,1,3,0,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,260,            if (i == 0) {,0,0,0,1,3,0,2,0,0,3,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,261,                parser = new SimpleDateFormat(parsePatterns[0]);,2,0,0,2,4,3,0,12,0,17,48,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,263,                parser.applyPattern(parsePatterns[i]);,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,265,            pos.setIndex(0);,0,0,0,1,2,0,4,0,0,4,16,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,266,"            Date date = parser.parse(str, pos);",0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,267,            if (date != null && pos.getIndex() == str.length()) {,2,3,0,3,7,0,14,0,0,19,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,268,                return date;,2,0,0,0,0,1,0,0,0,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,271,"        throw new ParseException(""Unable to parse the date: "" + str, -1);",2,1,0,1,2,0,0,2,0,7,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,285,"        return add(date, Calendar.YEAR, amount);",6,0,0,1,2,1,12,2,0,20,40,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,299,"        return add(date, Calendar.MONTH, amount);",4,1,0,1,2,1,0,0,0,5,41,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,313,"        return add(date, Calendar.WEEK_OF_YEAR, amount);",4,0,0,1,2,1,6,0,0,10,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,327,"        return add(date, Calendar.DAY_OF_MONTH, amount);",0,0,0,1,2,1,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,341,"        return add(date, Calendar.HOUR_OF_DAY, amount);",6,1,0,1,2,1,14,0,0,22,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,355,"        return add(date, Calendar.MINUTE, amount);",0,0,0,1,2,1,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,369,"        return add(date, Calendar.SECOND, amount);",0,0,0,1,2,1,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,383,"        return add(date, Calendar.MILLISECOND, amount);",0,0,0,1,2,1,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,398,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,399,"            throw new IllegalArgumentException(""The date must not be null"");",14,2,1,1,2,1,20,6,0,52,64,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,401,        Calendar c = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,402,        c.setTime(date);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,403,"        c.add(calendarField, amount);",0,0,0,1,2,0,8,0,0,8,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,404,        return c.getTime();,0,0,0,1,2,1,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,438,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,475,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,476,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,8,2,0,10,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,478,        Calendar rounded = (Calendar) date.clone();,2,1,0,2,4,0,0,0,0,3,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,479,"        modify(rounded, field, true);",0,0,0,1,2,0,6,0,0,7,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,480,        return rounded;,4,0,0,0,0,1,0,2,0,6,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,514,        if (date == null) {,4,1,0,1,3,1,0,0,0,7,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,515,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,517,        if (date instanceof Date) {,2,0,0,1,3,0,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,518,"            return round((Date) date, field);",2,0,0,2,4,1,4,2,0,8,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,519,        } else if (date instanceof Calendar) {,2,4,0,1,4,0,12,2,0,22,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,520,"            return round((Calendar) date, field).getTime();",4,1,0,3,6,1,6,2,0,13,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,522,"            throw new ClassCastException(""Could not round "" + date);",2,1,0,1,2,0,0,2,0,6,56,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,544,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,545,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,4,0,0,5,64,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,547,        Calendar gval = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,548,        gval.setTime(date);,0,0,0,1,2,0,6,0,0,6,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,549,"        modify(gval, field, false);",0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,550,        return gval.getTime();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,570,        if (date == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,571,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,573,        Calendar truncated = (Calendar) date.clone();,2,0,0,2,4,0,4,4,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,574,"        modify(truncated, field, false);",2,0,0,1,2,0,12,2,0,17,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,575,        return truncated;,6,0,1,0,0,4,2,4,0,20,17,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,599,        if (date == null) {,6,1,0,1,3,0,0,0,0,7,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,600,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,602,        if (date instanceof Date) {,2,0,0,1,3,0,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,603,"            return truncate((Date) date, field);",0,0,0,2,4,1,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,604,        } else if (date instanceof Calendar) {,8,1,0,1,4,0,10,4,0,23,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,605,"            return truncate((Calendar) date, field).getTime();",2,0,0,3,6,1,0,0,0,2,50,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,607,"            throw new ClassCastException(""Could not truncate "" + date);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,622,"            throw new ArithmeticException(""Calendar value too large for accurate calculations"");",2,0,0,1,2,0,6,2,0,10,84,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,626,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,642,            time = time - millisecs;,20,6,0,0,0,3,0,4,0,35,24,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,643,        if (field == Calendar.SECOND) {,2,0,0,1,3,0,20,2,0,25,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,644,            done = true;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,651,            time = time - (seconds * 1000L);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,652,        if (field == Calendar.MINUTE) {,4,3,0,1,3,0,8,0,0,15,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,653,            done = true;,2,0,1,0,0,0,2,0,0,8,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,680,                            if (val.get(Calendar.DATE) == 1) {,0,0,0,2,5,0,0,0,0,7,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,681,"                                val.add(Calendar.DATE, 15);",4,0,0,1,2,0,4,0,0,8,27,17,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,683,"                                val.add(Calendar.DATE, -15);",2,0,1,1,2,0,0,0,0,5,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,684,"                                val.add(Calendar.MONTH, 1);",0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,701,                    if (fields[i][0] == Calendar.DATE) {,8,1,0,3,7,0,0,0,0,9,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,705,                        offset = val.get(Calendar.DATE) - 1;,6,1,0,1,2,0,4,0,0,12,36,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,708,                        if (offset >= 15) {,2,1,0,1,3,0,0,0,0,3,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,709,                            offset -= 15;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,712,                        roundUp = offset > 7;,6,1,0,0,0,0,0,0,0,10,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,713,                        offsetSet = true;,8,5,0,0,0,0,0,0,0,13,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,717,                    if (fields[i][0] == Calendar.HOUR_OF_DAY) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,720,                        offset = val.get(Calendar.HOUR_OF_DAY);,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,721,                        if (offset >= 12) {,2,1,0,1,3,0,0,0,0,3,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,722,                            offset -= 12;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,724,                        roundUp = offset > 6;,4,0,0,0,0,3,2,2,0,12,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,725,                        offsetSet = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,742,"        throw new IllegalArgumentException(""The field "" + field + "" is not supported"");",0,0,0,1,2,0,0,0,0,3,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,772,        if (focus == null) {,4,1,0,1,3,0,0,2,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,773,"            throw new IllegalArgumentException(""The date must not be null"");",2,0,0,1,2,0,0,2,0,7,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,775,        Calendar gval = Calendar.getInstance();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,776,        gval.setTime(focus);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,777,"        return iterator(gval, rangeStyle);",0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,805,        if (focus == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,806,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,808,        Calendar start = null;,2,0,0,0,0,0,0,2,0,5,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,809,        Calendar end = null;,4,0,0,0,0,0,12,2,0,18,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,810,        int startCutoff = Calendar.SUNDAY;,10,0,0,0,0,0,8,0,0,21,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,811,        int endCutoff = Calendar.SATURDAY;,8,2,0,0,0,0,4,0,0,14,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,812,        switch (rangeStyle) {,0,0,0,1,3,0,16,0,0,17,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,816,"                start = truncate(focus, Calendar.MONTH);",6,0,0,1,2,0,4,0,0,11,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,818,                end = (Calendar) start.clone();,2,0,0,2,4,0,10,2,0,15,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,819,"                end.add(Calendar.MONTH, 1);",0,0,0,1,2,0,4,0,0,4,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,820,"                end.add(Calendar.DATE, -1);",18,2,0,1,2,6,16,6,0,50,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,822,                if (rangeStyle == RANGE_MONTH_MONDAY) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,823,                    startCutoff = Calendar.MONDAY;,6,0,0,0,0,0,0,0,0,7,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,824,                    endCutoff = Calendar.SUNDAY;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,832,"                start = truncate(focus, Calendar.DATE);",10,6,1,1,2,0,0,2,0,27,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,833,"                end = truncate(focus, Calendar.DATE);",6,0,0,1,2,0,4,0,0,11,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,834,                switch (rangeStyle) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,837,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,839,                        startCutoff = Calendar.MONDAY;,8,0,0,0,0,0,0,0,0,10,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,840,                        endCutoff = Calendar.SUNDAY;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,841,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,843,                        startCutoff = focus.get(Calendar.DAY_OF_WEEK);,0,0,0,1,2,0,0,0,0,3,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,844,                        endCutoff = startCutoff - 1;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,845,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,847,                        startCutoff = focus.get(Calendar.DAY_OF_WEEK) - 3;,0,0,0,1,2,0,0,0,0,3,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,848,                        endCutoff = focus.get(Calendar.DAY_OF_WEEK) + 3;,6,1,0,1,2,0,4,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,851,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,853,"                throw new IllegalArgumentException(""The range style "" + rangeStyle + "" is not valid."");",0,0,0,1,2,0,0,0,0,3,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,855,        if (startCutoff < Calendar.SUNDAY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,856,            startCutoff += 7;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,858,        if (startCutoff > Calendar.SATURDAY) {,6,1,0,1,3,0,0,0,0,8,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,859,            startCutoff -= 7;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,861,        if (endCutoff < Calendar.SUNDAY) {,0,0,0,1,3,0,16,2,0,18,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,862,            endCutoff += 7;,4,1,1,0,0,0,0,0,0,10,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,864,        if (endCutoff > Calendar.SATURDAY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,865,            endCutoff -= 7;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,867,        while (start.get(Calendar.DAY_OF_WEEK) != startCutoff) {,0,0,0,2,5,0,0,0,0,7,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,868,"            start.add(Calendar.DATE, -1);",0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,870,        while (end.get(Calendar.DAY_OF_WEEK) != endCutoff) {,0,0,0,2,5,0,0,0,0,7,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,871,"            end.add(Calendar.DATE, 1);",16,4,0,1,2,0,0,0,0,21,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,873,"        return new DateIterator(start, end);",4,0,0,1,2,1,0,2,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,896,        if (focus == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,897,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,899,        if (focus instanceof Date) {,0,0,0,1,3,0,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,900,"            return iterator((Date) focus, rangeStyle);",4,1,0,2,4,1,0,0,0,6,42,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,901,        } else if (focus instanceof Calendar) {,2,0,0,1,4,0,0,2,0,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,902,"            return iterator((Calendar) focus, rangeStyle);",0,0,0,2,4,1,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,904,"            throw new ClassCastException(""Could not iterate based on "" + focus);",2,1,0,1,2,0,0,2,0,6,68,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,922,            super();,2,0,1,1,2,0,0,0,0,7,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,923,            this.endFinal = endFinal;,4,0,0,0,0,0,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,924,            spot = startFinal;,4,0,0,0,0,0,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,925,"            spot.add(Calendar.DATE, -1);",4,0,0,1,2,0,10,0,0,15,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,926,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,934,            return spot.before(endFinal);,0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,943,            if (spot.equals(endFinal)) {,0,0,0,2,5,0,6,0,0,6,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,944,                throw new NoSuchElementException();,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,946,"            spot.add(Calendar.DATE, 1);",4,0,0,1,2,0,4,0,0,8,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,947,            return spot.clone();,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,957,            throw new UnsupportedOperationException();,0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,9,1.0,1,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,110,            if (str.charAt(2) != '_') {,8,5,0,2,5,0,4,0,0,18,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,113,            char ch3 = str.charAt(3);,2,0,0,1,2,0,4,0,0,6,25,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,114,            char ch4 = str.charAt(4);,2,0,0,1,2,0,4,0,0,6,25,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,115,            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {,8,7,0,1,3,0,0,0,0,19,55,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,95,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,98,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,99,        if (len != 2 && len != 5 && len < 7) {,8,6,0,1,3,0,8,0,0,24,38,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,102,        char ch0 = str.charAt(0);,4,1,0,1,2,0,4,0,0,10,25,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,103,        char ch1 = str.charAt(1);,2,0,0,1,2,0,4,0,0,6,25,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,104,        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {,8,7,0,1,3,0,0,0,0,19,55,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,107,        if (len == 2) {,0,0,0,1,3,0,0,0,0,4,15,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,47,    private static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());,2,0,0,2,4,3,4,4,0,13,90,2,0.09091,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,49,    private static final Map cCountriesByLanguage = Collections.synchronizedMap(new HashMap());,0,0,0,2,4,0,0,0,0,6,91,4,0.09091,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,51,        List list = Arrays.asList(Locale.getAvailableLocales());,2,0,0,2,4,0,8,2,0,12,56,4,0.09091,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,52,        cAvailableLocaleList = Collections.unmodifiableList(list);,2,0,0,1,2,0,6,0,0,9,58,4,0.09091,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,53,    },0,0,0,0,1,0,0,0,0,1,1,4,0.09091,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,192,        return cAvailableLocaleList;,0,0,0,0,0,1,0,0,0,1,28,4,0.09091,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,223,        return availableLocaleList().contains(locale);,0,0,0,2,4,1,6,0,0,6,46,5,0.09091,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,63,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,64,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,96,            return null;,12,1,0,0,0,4,8,0,0,24,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,100,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,105,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,108,"            return new Locale(str, """");",0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,111,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",0,0,0,1,2,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,118,            if (len == 5) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,119,"                return new Locale(str.substring(0, 2), str.substring(3, 5));",0,0,0,3,6,1,0,0,0,10,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,121,                if (str.charAt(5) != '_') {,0,1,0,2,5,0,4,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,122,"                    throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,124,"                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));",0,0,0,4,8,1,0,0,0,13,78,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,143,"        return localeLookupList(locale, locale);",0,0,0,1,2,1,6,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,165,        List list = new ArrayList(4);,2,0,0,1,2,0,0,4,0,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,166,        if (locale != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,167,            list.add(locale);,0,0,0,1,2,0,6,0,0,6,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,168,            if (locale.getVariant().length() > 0) {,0,0,0,3,7,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,169,"                list.add(new Locale(locale.getLanguage(), locale.getCountry()));",0,0,0,4,8,0,12,2,0,14,64,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,171,            if (locale.getCountry().length() > 0) {,0,1,0,3,7,0,6,0,0,7,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,172,"                list.add(new Locale(locale.getLanguage(), """"));",0,0,0,3,6,0,8,2,0,11,47,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,174,            if (list.contains(defaultLocale) == false) {,4,4,0,2,5,0,10,0,0,20,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,175,                list.add(defaultLocale);,0,0,0,1,2,0,6,0,0,6,24,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,178,        return Collections.unmodifiableList(list);,0,0,0,1,2,1,6,0,0,6,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,206,        Set set = cAvailableLocaleSet;,4,0,0,0,0,0,8,2,0,14,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,207,        if (set == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,208,            set = new HashSet(availableLocaleList());,2,0,0,2,4,0,2,2,0,7,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,209,            set = Collections.unmodifiableSet(set);,2,0,0,1,2,0,6,0,0,9,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,210,            cAvailableLocaleSet = set;,4,0,0,0,0,0,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,212,        return set;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,237,        List langs = (List) cLanguagesByCountry.get(countryCode);  //syncd,2,0,0,2,4,0,6,4,0,12,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,238,        if (langs == null) {,2,0,0,1,3,0,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,239,            if (countryCode != null) {,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,240,                langs = new ArrayList();,2,0,0,1,2,0,0,2,0,5,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,241,                List locales = availableLocaleList();,2,0,0,1,2,0,2,2,0,6,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,242,                for (int i = 0; i < locales.size(); i++) {,6,1,0,2,5,0,4,0,0,12,42,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,243,                    Locale locale = (Locale) locales.get(i);,2,0,0,2,4,0,6,4,0,12,40,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,244,                    if (countryCode.equals(locale.getCountry()) &&,0,0,0,2,5,0,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,246,                        langs.add(locale);,0,0,0,1,2,0,10,0,0,10,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,249,                langs = Collections.unmodifiableList(langs);,6,1,0,1,2,0,10,2,0,22,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,250,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,251,                langs = Collections.EMPTY_LIST;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,253,"            cLanguagesByCountry.put(countryCode, langs);  //syncd",4,1,0,1,2,0,0,2,0,7,53,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,255,        return langs;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,269,        List countries = (List) cCountriesByLanguage.get(languageCode);  //syncd,0,0,0,2,4,0,0,0,0,6,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,270,        if (countries == null) {,2,1,0,1,3,0,4,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,271,            if (languageCode != null) {,2,0,0,1,3,0,0,0,0,2,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,272,                countries = new ArrayList();,2,0,0,1,2,0,0,2,0,5,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,273,                List locales = availableLocaleList();,0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,274,                for (int i = 0; i < locales.size(); i++) {,8,4,0,2,5,0,8,0,0,21,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,275,                    Locale locale = (Locale) locales.get(i);,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,276,                    if (languageCode.equals(locale.getLanguage()) &&,0,2,0,2,5,0,8,0,0,10,48,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,279,                        countries.add(locale);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,282,                countries = Collections.unmodifiableList(countries);,2,0,0,1,2,0,6,0,0,9,52,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,283,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,284,                countries = Collections.EMPTY_LIST;,6,0,0,0,0,0,4,0,0,11,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,286,"            cCountriesByLanguage.put(languageCode, countries);  //syncd",28,13,0,1,2,0,40,0,0,84,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,288,        return countries;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,179,        stopTime = System.currentTimeMillis();,2,0,0,1,2,0,4,0,0,7,38,4,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,180,        this.runningState = STATE_SUSPENDED;,4,0,0,0,0,0,0,0,0,5,36,4,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,181,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,176,        if(this.runningState != STATE_RUNNING) {,4,1,0,1,3,0,0,0,0,5,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,210,            return this.stopTime - this.startTime;,4,1,0,0,0,1,0,0,0,5,38,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,115,        if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {,8,3,0,1,3,0,0,0,0,11,80,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,118,            stopTime = System.currentTimeMillis();,2,0,0,1,2,0,4,0,0,7,38,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,119,        this.runningState = STATE_STOPPED;,4,0,0,0,0,0,0,0,0,5,34,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,120,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,209,        if(this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED) {,8,3,0,1,3,0,0,0,0,11,80,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,85,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,65,    private int runningState = STATE_UNSTARTED;,4,0,0,0,0,1,0,0,0,5,43,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,70,    private int splitState   = STATE_UNSPLIT;,4,0,0,0,0,1,0,0,0,5,41,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,75,    private long startTime = -1;,2,0,0,0,0,1,0,0,0,4,28,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,79,    private long stopTime = -1;,2,0,0,0,0,1,0,0,0,4,27,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,86,    },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,96,        if(this.runningState == STATE_STOPPED) {,4,1,0,1,3,0,0,0,0,5,40,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,99,        if(this.runningState != STATE_UNSTARTED) {,4,1,0,1,3,0,0,0,0,5,42,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,102,        stopTime = -1;,2,0,0,0,0,0,0,0,0,4,14,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,103,        startTime = System.currentTimeMillis();,2,0,0,1,2,0,4,0,0,7,39,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,104,        this.runningState = STATE_RUNNING;,4,0,0,0,0,0,0,0,0,5,34,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,105,    },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,631,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",6,0,0,1,2,0,4,0,0,11,57,7,0.07692,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,632,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.07692,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,167,"        return getInstance(pattern, null, null);",0,0,0,1,2,1,4,0,0,5,40,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,553,            locale = Locale.getDefault();,4,0,0,1,2,3,6,2,0,17,29,1,0.0625,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,614,"                    rule = selectNumberRule(Calendar.YEAR, tokenLen);",12,0,0,1,2,0,4,0,0,17,49,3,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,625,                    rule = TwoDigitMonthField.INSTANCE;,10,1,0,0,0,0,4,0,0,16,35,3,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,777,"            return new PaddedNumberField(field, padding);",4,0,0,1,2,1,0,2,0,6,45,6,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1261,"        PaddedNumberField(int field, int size) {",0,0,0,1,3,0,0,0,0,4,40,4,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1262,            if (size < 3) {,2,1,0,1,3,0,0,0,0,3,15,5,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1266,            mField = field;,0,0,0,0,0,0,0,0,0,0,15,4,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1267,            mSize = size;,0,0,0,0,0,0,0,0,0,0,13,4,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1268,        },0,0,0,0,1,0,0,0,0,1,1,4,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1274,            return 4;,0,0,0,0,0,1,0,0,0,1,9,4,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1398,            super();,10,1,0,1,2,0,0,0,0,12,8,4,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1399,        },0,0,0,0,1,0,8,0,0,8,1,5,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1392,        static final TwoDigitMonthField INSTANCE = new TwoDigitMonthField();,6,0,0,1,2,2,0,4,0,13,68,1,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1405,            return 2;,0,0,0,0,0,1,0,0,0,1,9,4,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,539,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,540,        if (pattern == null) {,2,0,0,1,3,0,4,0,0,6,22,5,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,543,        mPattern = pattern;,4,0,0,0,0,0,0,0,0,5,19,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,545,        mTimeZoneForced = (timeZone != null);,0,0,0,1,2,0,0,0,0,3,37,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,546,        if (timeZone == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,547,            timeZone = TimeZone.getDefault();,6,1,0,1,2,0,8,0,0,16,33,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,549,        mTimeZone = timeZone;,0,0,0,0,0,0,0,0,0,0,21,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,551,        mLocaleForced = (locale != null);,0,0,0,1,2,0,0,0,0,3,33,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,552,        if (locale == null) {,2,0,0,1,3,3,0,0,0,5,21,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,555,        mLocale = locale;,0,0,0,0,0,0,0,0,0,0,17,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,556,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,111,    private static Map cInstanceCache = new HashMap(7);,6,0,0,1,2,2,0,4,0,14,51,1,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,112,    private static Map cDateInstanceCache = new HashMap(7);,6,2,0,1,2,0,4,0,0,14,55,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,113,    private static Map cTimeInstanceCache = new HashMap(7);,0,0,0,1,2,0,0,0,0,3,55,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,114,    private static Map cDateTimeInstanceCache = new HashMap(7);,0,0,0,1,2,0,0,0,0,3,59,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,115,    private static Map cTimeZoneDisplayCache = new HashMap(7);,2,0,0,1,2,3,0,4,0,9,58,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,213,"        FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale);",0,0,0,1,2,0,0,0,0,3,75,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,214,        FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat);,0,0,0,2,4,0,0,0,0,6,73,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,215,        if (format == null) {,4,2,0,1,3,1,8,0,0,17,21,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,216,            format = emptyFormat;,0,0,0,0,0,0,0,0,0,0,21,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,217,            format.init();  // convert shell format into usable one,2,0,0,1,2,0,6,0,0,10,55,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,218,"            cInstanceCache.put(format, format);  // this is OK!",2,0,0,1,2,3,10,2,0,18,51,1,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,220,        return format;,0,0,0,0,0,1,0,0,0,1,14,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,562,        List rulesList = parsePattern();,2,0,0,1,2,3,4,2,0,11,32,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,563,        mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]);,0,0,0,5,10,0,0,0,0,15,64,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,565,        int len = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,566,        for (int i=mRules.length; --i >= 0; ) {,0,0,0,1,3,0,0,0,0,4,39,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,567,            len += mRules[i].estimateLength();,2,0,1,2,4,0,2,0,0,9,34,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,570,        mMaxLengthEstimate = len;,4,0,0,0,0,0,0,0,0,5,25,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,571,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,582,        DateFormatSymbols symbols = new DateFormatSymbols(mLocale);,0,0,0,1,2,0,0,0,0,3,59,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,583,        List rules = new ArrayList();,0,0,0,1,2,0,0,0,0,3,29,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,585,        String[] ERAs = symbols.getEras();,2,0,0,2,4,0,4,2,0,8,34,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,586,        String[] months = symbols.getMonths();,2,0,0,2,4,0,4,2,0,8,38,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,587,        String[] shortMonths = symbols.getShortMonths();,2,0,0,2,4,0,4,2,0,8,48,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,588,        String[] weekdays = symbols.getWeekdays();,2,0,0,2,4,0,4,2,0,8,42,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,589,        String[] shortWeekdays = symbols.getShortWeekdays();,0,0,0,2,4,0,0,0,0,6,52,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,590,        String[] AmPmStrings = symbols.getAmPmStrings();,0,0,0,2,4,0,0,0,0,6,48,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,592,        int length = mPattern.length();,4,1,0,1,2,0,4,0,0,9,31,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,593,        int[] indexRef = new int[1];,2,0,0,2,4,0,0,0,0,2,28,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,595,        for (int i = 0; i < length; i++) {,2,0,0,1,3,0,0,0,0,2,34,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,596,            indexRef[0] = i;,2,0,1,1,2,0,0,0,0,5,16,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,597,"            String token = parseToken(mPattern, indexRef);",2,0,0,1,2,3,2,0,0,7,46,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,598,            i = indexRef[0];,4,1,1,1,2,0,0,0,0,8,16,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,600,            int tokenLen = token.length();,0,0,0,1,2,0,0,0,0,3,30,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,601,            if (tokenLen == 0) {,2,1,0,1,3,0,0,0,0,3,20,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,606,            char c = token.charAt(0);,8,3,0,1,2,0,8,0,0,20,25,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,608,            switch (c) {,0,0,0,1,3,0,0,0,0,4,12,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,613,                if (tokenLen >= 4) {,4,0,0,1,3,0,0,2,0,6,20,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,620,                if (tokenLen >= 4) {,0,0,0,1,3,0,0,0,0,4,20,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,622,                } else if (tokenLen == 3) {,0,0,0,1,4,0,0,0,0,5,27,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,624,                } else if (tokenLen == 2) {,0,0,0,1,4,0,0,0,0,5,27,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,687,                String sub = token.substring(1);,4,0,0,1,2,0,4,2,0,10,32,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,688,                if (sub.length() == 1) {,4,3,0,2,5,0,8,0,0,16,24,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,689,                    rule = new CharacterLiteral(sub.charAt(0));,0,0,0,2,4,0,0,0,0,6,43,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,698,            rules.add(rule);,0,0,0,1,2,0,0,0,0,3,16,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,701,        return rules;,0,0,0,0,0,1,0,0,0,1,13,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,712,        StringBuffer buf = new StringBuffer();,0,0,0,1,2,0,0,0,0,3,38,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,714,        int i = indexRef[0];,2,0,1,1,2,0,0,0,0,4,20,5,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,715,        int length = pattern.length();,0,0,0,1,2,0,0,0,0,3,30,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,717,        char c = pattern.charAt(i);,0,0,0,1,2,0,0,0,0,3,27,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,718,        if (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') {,0,0,0,1,3,0,0,0,0,4,51,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,721,            buf.append(c);,0,0,0,1,2,0,0,0,0,3,14,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,723,            while (i + 1 < length) {,18,4,0,1,3,3,4,2,0,33,24,1,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,724,                char peek = pattern.charAt(i + 1);,2,0,0,1,2,0,0,0,0,2,34,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,725,                if (peek == c) {,0,0,0,1,3,0,0,0,0,4,16,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,726,                    buf.append(c);,0,0,0,1,2,0,6,0,0,6,14,11,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,727,                    i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,731,            },0,0,0,0,1,0,0,0,0,1,1,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,734,            buf.append('\'');,0,0,0,1,2,0,4,0,0,5,17,7,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,736,            boolean inLiteral = false;,2,0,0,0,0,0,0,0,0,3,26,7,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,738,            for (; i < length; i++) {,0,0,0,1,3,0,0,0,0,4,25,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,739,                c = pattern.charAt(i);,2,0,0,1,2,0,6,0,0,9,22,8,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,741,                if (c == '\'') {,0,0,0,1,3,0,0,0,0,4,16,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,749,                } else if (!inLiteral &&,6,1,0,0,2,0,0,0,0,9,24,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,751,                    i--;,0,0,0,0,0,0,0,0,0,0,4,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,752,                    break;,0,0,0,0,0,0,0,0,0,0,6,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,754,                    buf.append(c);,2,0,0,1,2,0,12,0,0,14,14,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,759,        indexRef[0] = i;,2,0,1,1,2,0,0,0,0,5,16,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,760,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,771,        switch (padding) {,2,0,0,1,3,0,0,0,0,2,18,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,775,            return new TwoDigitNumberField(field);,4,1,0,1,2,1,0,2,0,7,38,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1002,        int total = 0;,2,0,0,0,0,0,4,0,0,6,14,5,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1003,        total += mPattern.hashCode();,2,0,0,1,2,2,0,2,0,7,29,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1004,        total += mTimeZone.hashCode();,4,1,0,1,2,3,0,0,0,8,30,1,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1005,        total += (mTimeZoneForced ? 1 : 0);,0,0,0,1,2,0,0,0,0,3,35,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1006,        total += mLocale.hashCode();,0,0,0,1,2,0,0,0,0,3,28,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1007,        total += (mLocaleForced ? 1 : 0);,0,0,0,1,2,0,0,0,0,3,33,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1008,        return total;,0,0,0,0,0,1,0,0,0,1,13,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1070,        CharacterLiteral(char value) {,2,0,0,1,3,0,6,0,0,8,30,7,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1071,            mValue = value;,4,0,0,0,0,0,0,0,0,5,15,5,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1072,        },0,0,0,0,1,0,0,0,0,1,1,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1078,            return 1;,0,0,0,0,0,1,0,0,0,1,9,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1321,        TwoDigitNumberField(int field) {,0,0,0,1,3,0,0,0,0,4,32,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1322,            mField = field;,0,0,0,0,0,0,0,0,0,0,15,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1323,        },2,0,0,0,1,3,2,2,0,10,1,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1329,            return 2;,0,0,0,0,0,1,0,0,0,1,9,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1083,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1084,    },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,87,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,105,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,122,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",0,0,0,1,2,0,0,0,0,3,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,138,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,154,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",2,1,0,1,2,0,0,0,0,3,92,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,175,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,191,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,207,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,224,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,241,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,258,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",0,0,0,1,2,0,0,0,0,3,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,275,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,291,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,0,0,0,1,2,0,0,0,0,3,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,307,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,4,0,0,1,2,6,4,6,0,20,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,324,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",0,0,0,1,2,0,0,0,0,3,86,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,342,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,3,6,2,0,16,86,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,360,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",4,0,0,1,2,6,2,6,0,19,92,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,377,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",6,0,0,1,2,3,2,2,0,15,98,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,394,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,102,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,411,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",0,0,0,1,2,0,0,0,0,3,104,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,428,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = ,2,0,0,0,0,3,0,2,0,7,64,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,445,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",4,0,0,1,2,6,2,2,0,15,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,461,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,0,0,1,2,3,2,2,0,10,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,477,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",2,0,0,1,2,3,2,2,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,495,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",0,0,0,1,2,0,0,0,0,3,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,512,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,529,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,546,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",6,0,0,1,2,3,6,4,0,20,108,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,563,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",0,0,0,1,2,0,0,0,0,3,110,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,580,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,597,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",0,0,0,1,2,0,0,0,0,3,82,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,614,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,630,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,8,2,0,17,66,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,646,"    public static final String OS_NAME = getSystemProperty(""os.name"");",2,0,0,1,2,3,2,2,0,10,66,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,662,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",0,0,0,1,2,0,0,0,0,3,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,679,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,698,    public static final String USER_COUNTRY = ,2,0,0,0,0,3,0,2,0,7,41,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,717,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,733,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,751,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,767,"    public static final String USER_NAME = getSystemProperty(""user.name"");",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,784,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,798,    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();,0,0,0,1,2,0,0,0,0,3,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,818,    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();,2,0,0,1,2,3,2,0,0,7,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,833,    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();,2,0,0,1,2,3,2,0,0,7,65,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,846,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",2,1,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,854,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,862,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,870,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,878,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,886,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,904,"    public static final boolean IS_OS_AIX = getOSMatches(""AIX"");",8,1,0,1,2,3,6,0,0,20,60,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,914,"    public static final boolean IS_OS_HP_UX = getOSMatches(""HP-UX"");",2,0,0,1,2,3,2,0,0,8,64,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,924,"    public static final boolean IS_OS_IRIX = getOSMatches(""Irix"");",2,1,0,1,2,0,0,0,0,3,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,934,"    public static final boolean IS_OS_LINUX = getOSMatches(""Linux"") || getOSMatches(""LINUX"");",2,0,0,2,4,0,6,4,0,12,89,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,944,"    public static final boolean IS_OS_MAC = getOSMatches(""Mac"");",2,0,0,1,2,0,4,0,0,7,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,954,"    public static final boolean IS_OS_MAC_OSX = getOSMatches(""Mac OS X"");",4,0,0,1,2,6,6,2,0,19,69,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,964,"    public static final boolean IS_OS_OS2 = getOSMatches(""OS/2"");",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,974,"    public static final boolean IS_OS_SOLARIS = getOSMatches(""Solaris"");",0,0,0,1,2,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,984,"    public static final boolean IS_OS_SUN_OS = getOSMatches(""SunOS"");",2,0,0,1,2,0,0,0,0,2,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,995,    public static final boolean IS_OS_UNIX =,0,0,0,0,0,0,0,0,0,0,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1007,    public static final boolean IS_OS_WINDOWS = getOSMatches(OS_NAME_WINDOWS_PREFIX);,2,0,0,1,2,3,4,0,0,9,81,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1017,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",2,0,0,1,2,3,4,0,0,10,93,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1027,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",4,1,0,1,2,3,2,0,0,12,98,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1038,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",0,0,0,1,2,0,6,0,0,6,98,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1049,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",2,0,0,1,2,3,4,0,0,10,91,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1060,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" NT"");",0,0,0,1,2,0,8,0,0,8,92,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1071,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",2,0,0,1,2,3,4,0,0,10,91,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1101,        return JAVA_VERSION_FLOAT;,2,0,0,0,0,1,0,0,0,2,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1119,        if (JAVA_VERSION_TRIMMED == null) {,8,0,0,1,3,2,8,4,0,22,35,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1120,            return 0f;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1122,"        String str = JAVA_VERSION_TRIMMED.substring(0, 3);",2,0,0,1,2,0,4,2,0,8,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1123,        if (JAVA_VERSION_TRIMMED.length() >= 5) {,0,0,0,2,5,0,0,0,0,7,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1124,"            str = str + JAVA_VERSION_TRIMMED.substring(4, 5);",4,0,0,1,2,0,6,0,0,10,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1127,            return Float.parseFloat(str);,0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1128,        } catch (Exception ex) {,2,0,0,1,4,0,0,2,0,4,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1129,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1148,        if (JAVA_VERSION_TRIMMED == null) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1149,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1151,"        String str = JAVA_VERSION_TRIMMED.substring(0, 1);",2,0,0,1,2,0,4,2,0,8,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1152,"        str = str + JAVA_VERSION_TRIMMED.substring(2, 3);",4,1,0,1,2,0,4,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1153,        if (JAVA_VERSION_TRIMMED.length() >= 5) {,0,1,0,2,5,0,4,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1154,"            str = str + JAVA_VERSION_TRIMMED.substring(4, 5);",0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1156,"            str = str + ""0"";",6,1,0,0,0,0,0,0,0,11,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1159,            return Integer.parseInt(str);,0,0,0,1,2,1,6,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1160,        } catch (Exception ex) {,4,0,0,1,4,1,0,4,0,9,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1161,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1171,        if (JAVA_VERSION != null) {,2,1,0,1,3,0,6,0,0,9,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1172,            for (int i = 0; i < JAVA_VERSION.length(); i++) {,6,1,0,2,5,0,4,0,0,12,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1173,                char ch = JAVA_VERSION.charAt(i);,2,0,0,1,2,0,6,0,0,8,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1174,                if (ch >= '0' && ch <= '9') {,0,1,0,1,3,0,4,0,0,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1175,                    return JAVA_VERSION.substring(i);,2,0,0,1,2,4,6,4,0,15,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1179,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1189,        if (JAVA_VERSION_TRIMMED == null) {,2,1,0,1,3,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1190,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1192,        return JAVA_VERSION_TRIMMED.startsWith(versionPrefix);,0,0,0,1,2,1,6,0,0,6,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1202,        if (OS_NAME == null) {,2,1,0,1,3,0,0,2,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1203,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1205,        return OS_NAME.startsWith(osNamePrefix);,0,0,0,1,2,1,6,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1216,        if (OS_NAME == null || OS_VERSION == null) {,0,0,0,1,3,0,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1217,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1219,        return OS_NAME.startsWith(osNamePrefix) && OS_VERSION.startsWith(osVersionPrefix);,0,0,0,2,4,1,0,0,0,7,82,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1235,            return System.getProperty(property);,2,1,0,1,2,1,6,0,0,9,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1236,        } catch (SecurityException ex) {,2,0,0,1,4,0,0,2,0,4,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1238,            System.err.println(,8,1,0,0,1,0,2,0,0,11,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1242,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1260,        return JAVA_VERSION_FLOAT >= requiredVersion;,0,0,0,0,0,1,0,0,0,1,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1278,        return JAVA_VERSION_INT >= requiredVersion;,4,1,0,0,0,1,0,0,0,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1292,        return JAVA_AWT_HEADLESS != null ? JAVA_AWT_HEADLESS.equals(Boolean.TRUE.toString()) : false;,0,0,0,2,4,1,0,0,0,7,93,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1305,        return new File(System.getProperty(JAVA_HOME_KEY));,0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1319,        return new File(System.getProperty(JAVA_IO_TMPDIR_KEY));,8,1,0,2,4,1,0,0,0,10,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1333,        return new File(System.getProperty(USER_DIR_KEY));,6,1,0,2,4,1,8,0,0,15,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1347,        return new File(System.getProperty(USER_HOME_KEY));,4,1,0,2,4,4,4,2,0,14,51,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,63,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,64,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,47,    private static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());,2,0,0,2,4,3,4,4,0,13,90,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,49,    private static final Map cCountriesByLanguage = Collections.synchronizedMap(new HashMap());,2,0,0,2,4,3,4,4,0,13,91,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,51,        List list = Arrays.asList(Locale.getAvailableLocales());,8,2,0,2,4,0,0,0,0,11,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,52,        cAvailableLocaleList = Collections.unmodifiableList(list);,0,0,0,1,2,0,6,0,0,6,58,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,53,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,95,        if (str == null) {,4,1,0,1,3,3,2,2,0,13,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,96,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,98,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,99,        if (len != 2 && len != 5 && len < 7) {,4,0,0,1,3,0,0,2,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,100,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",0,0,0,1,2,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,102,        char ch0 = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,103,        char ch1 = str.charAt(1);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,104,        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,105,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",10,3,0,1,2,0,10,4,0,29,68,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,107,        if (len == 2) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,108,"            return new Locale(str, """");",2,1,0,1,2,1,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,110,            if (str.charAt(2) != '_') {,6,2,0,2,5,0,12,4,0,26,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,111,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",10,2,0,1,2,0,0,2,0,15,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,113,            char ch3 = str.charAt(3);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,114,            char ch4 = str.charAt(4);,4,0,0,1,2,0,4,2,0,11,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,115,            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {,8,7,0,1,3,0,0,0,0,19,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",0,0,0,1,2,0,0,0,0,3,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,118,            if (len == 5) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,119,"                return new Locale(str.substring(0, 2), str.substring(3, 5));",0,0,0,3,6,1,0,0,0,10,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,121,                if (str.charAt(5) != '_') {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,122,"                    throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,124,"                return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));",0,0,0,4,8,1,0,0,0,13,78,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,143,"        return localeLookupList(locale, locale);",0,0,0,1,2,1,6,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,165,        List list = new ArrayList(4);,10,2,0,1,2,3,6,4,0,26,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,166,        if (locale != null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,167,            list.add(locale);,2,0,0,1,2,0,26,0,0,28,17,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,168,            if (locale.getVariant().length() > 0) {,0,0,0,3,7,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,169,"                list.add(new Locale(locale.getLanguage(), locale.getCountry()));",0,0,0,4,8,0,0,0,0,12,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,171,            if (locale.getCountry().length() > 0) {,2,0,0,3,7,0,0,2,0,4,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,172,"                list.add(new Locale(locale.getLanguage(), """"));",0,0,0,3,6,0,0,0,0,9,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,174,            if (list.contains(defaultLocale) == false) {,0,1,0,2,5,0,6,0,0,8,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,175,                list.add(defaultLocale);,0,0,0,1,2,0,6,0,0,6,24,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,178,        return Collections.unmodifiableList(list);,8,4,0,1,2,1,6,0,0,19,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,192,        return cAvailableLocaleList;,0,0,0,0,0,1,0,0,0,1,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,206,        Set set = cAvailableLocaleSet;,4,0,0,0,0,0,0,2,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,207,        if (set == null) {,2,1,0,1,3,0,0,0,0,4,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,208,            set = new HashSet(availableLocaleList());,0,0,0,2,4,0,0,0,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,209,            set = Collections.unmodifiableSet(set);,2,0,0,1,2,0,6,0,0,9,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,210,            cAvailableLocaleSet = set;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,212,        return set;,2,0,0,0,0,1,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,223,        return cAvailableLocaleSet.contains(locale);,0,0,0,1,2,1,0,0,0,4,44,4,0.0,1,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,237,        List langs = (List) cLanguagesByCountry.get(countryCode);  //syncd,0,0,0,2,4,0,0,0,0,6,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,238,        if (langs == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,239,            if (countryCode != null) {,2,1,0,1,3,3,4,0,0,12,26,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,240,                langs = new ArrayList();,2,0,0,1,2,0,0,2,0,5,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,241,                List locales = availableLocaleList();,10,2,0,1,2,0,2,2,0,16,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,242,                for (int i = 0; i < locales.size(); i++) {,0,0,0,2,5,0,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,243,                    Locale locale = (Locale) locales.get(i);,2,0,0,2,4,0,6,4,0,12,40,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,244,                    if (countryCode.equals(locale.getCountry()) &&,0,0,0,2,5,0,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,246,                        langs.add(locale);,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,249,                langs = Collections.unmodifiableList(langs);,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,250,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,251,                langs = Collections.EMPTY_LIST;,24,3,0,0,0,0,16,0,0,44,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,253,"            cLanguagesByCountry.put(countryCode, langs);  //syncd",2,0,0,1,2,0,0,0,0,2,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,255,        return langs;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,269,        List countries = (List) cCountriesByLanguage.get(languageCode);  //syncd,4,0,0,2,4,0,4,2,0,10,72,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,270,        if (countries == null) {,2,1,0,1,3,0,6,0,0,9,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,271,            if (languageCode != null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,272,                countries = new ArrayList();,2,0,0,1,2,0,8,2,0,12,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,273,                List locales = availableLocaleList();,6,1,0,1,2,0,2,2,0,11,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,274,                for (int i = 0; i < locales.size(); i++) {,8,2,0,2,5,0,4,0,0,15,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,275,                    Locale locale = (Locale) locales.get(i);,2,0,0,2,4,0,6,4,0,12,40,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,276,                    if (languageCode.equals(locale.getLanguage()) &&,0,2,0,2,5,0,18,0,0,20,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,279,                        countries.add(locale);,0,0,0,1,2,0,6,0,0,6,22,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,282,                countries = Collections.unmodifiableList(countries);,2,0,0,1,2,0,6,0,0,9,52,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,283,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,284,                countries = Collections.EMPTY_LIST;,6,0,0,0,0,0,0,0,0,7,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,286,"            cCountriesByLanguage.put(languageCode, countries);  //syncd",0,0,0,1,2,0,8,0,0,8,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,288,        return countries;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,464,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1508,            return false;,4,1,0,0,0,1,8,6,0,20,13,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,398,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,401,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,404,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,0,0,0,7,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,411,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,414,        char lastChar = str.charAt(str.length() - 1);,0,0,0,2,4,0,0,0,0,6,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,418,        int decPos = str.indexOf('.');,0,0,0,1,2,0,0,0,0,3,30,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,419,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,12,0,0,19,53,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,421,        if (decPos > -1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,433,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,436,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,438,            dec = null;,6,0,0,0,0,0,0,0,0,8,11,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,440,        if (!Character.isDigit(lastChar)) {,2,1,1,2,5,0,6,0,0,14,35,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,441,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,444,                exp = null;,4,1,0,0,0,1,4,2,0,12,11,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,447,"            String numeric = str.substring(0, str.length() - 1);",8,4,0,2,4,0,8,2,0,22,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,448,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,449,            switch (lastChar) {,0,0,0,1,3,0,0,0,0,4,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,452,                    if (dec == null,4,1,0,0,1,3,0,0,0,8,15,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,457,                            return createLong(numeric);,0,0,0,1,2,1,4,0,0,4,27,12,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,556,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,559,        for (int i = str.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,560,            if (str.charAt(i) != '0') {,6,2,0,2,5,0,6,0,0,16,27,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,561,                return false;,4,1,0,0,0,1,0,0,0,7,13,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,185,        return str == null || str.length() == 0;,0,0,0,1,2,1,0,0,0,4,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,223,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,226,        for (int i = 0; i < strLen; i++) {,10,2,0,1,3,0,4,0,0,17,34,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,227,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,26,0,0,28,55,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,228,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,628,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,631,        return Long.valueOf(str);,0,0,0,1,2,1,0,0,0,4,25,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1507,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1510,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1511,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1515,        return true;,4,3,0,0,0,1,0,0,0,8,12,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,41,    public static final Long LONG_ZERO = new Long(0L);,4,1,1,1,2,3,8,4,0,28,50,1,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,43,    public static final Long LONG_ONE = new Long(1L);,0,0,0,1,2,0,0,0,0,3,49,4,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,2,0,0,1,2,0,0,0,0,2,56,5,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,47,    public static final Integer INTEGER_ZERO = new Integer(0);,0,0,0,1,2,0,0,0,0,3,58,4,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,49,    public static final Integer INTEGER_ONE = new Integer(1);,0,0,0,1,2,0,0,0,0,3,57,4,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,51,    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);,2,0,0,1,2,0,6,2,0,12,64,1,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,53,    public static final Short SHORT_ZERO = new Short((short) 0);,2,0,0,2,4,3,0,4,0,9,60,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,55,    public static final Short SHORT_ONE = new Short((short) 1);,4,2,0,2,4,3,4,4,0,18,59,1,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,2,0,0,2,4,3,0,4,0,10,66,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,59,    public static final Byte BYTE_ZERO = new Byte((byte) 0);,2,0,0,2,4,3,0,4,0,9,56,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,61,    public static final Byte BYTE_ONE = new Byte((byte) 1);,2,0,0,2,4,3,0,4,0,9,55,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,63,    public static final Byte BYTE_MINUS_ONE = new Byte((byte) -1);,2,0,0,2,4,3,0,4,0,10,62,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,65,    public static final Double DOUBLE_ZERO = new Double(0.0d);,2,0,0,1,2,3,2,0,0,8,58,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,2,0,0,1,2,3,0,4,0,9,57,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,69,    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);,2,0,0,1,2,3,0,4,0,10,64,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,2,0,0,1,2,3,0,4,0,9,55,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,73,    public static final Float FLOAT_ONE = new Float(1.0f);,2,0,0,1,2,3,6,4,0,15,54,1,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,75,    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);,0,0,0,1,2,0,0,0,0,3,61,4,0.0137,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,161,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,162,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,203,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,224,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,231,        return true;,2,0,0,0,0,4,0,12,0,17,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,251,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,276,        return str == null ? EMPTY : str.trim();,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,303,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,329,        String ts = trim(str);,12,3,0,1,2,0,16,2,0,33,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,330,        return isEmpty(ts) ? null : ts;,10,0,0,1,2,1,20,4,0,35,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,355,        return str == null ? EMPTY : str.trim();,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,383,"        return strip(str, null);",2,1,0,1,2,1,4,0,0,8,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,410,        if (str == null) {,2,0,0,1,3,0,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,411,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,413,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,414,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,440,"        return str == null ? EMPTY : strip(str, null);",2,0,0,1,2,1,0,0,0,2,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,470,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,471,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,473,"        str = stripStart(str, stripChars);",2,0,0,1,2,1,0,2,0,5,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,474,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,503,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,504,            return str;,6,1,0,0,0,1,4,0,0,12,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,506,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,507,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,508,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,509,                start++;,12,3,1,0,0,3,18,4,0,47,8,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,511,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,512,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,514,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,0,0,0,5,11,0,0,0,0,16,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,515,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,518,        return str.substring(start);,2,0,0,1,2,1,0,2,0,6,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,547,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,548,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,551,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,552,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,4,9,0,0,0,0,13,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,553,                end--;,10,0,0,0,0,1,0,6,0,18,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,555,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,556,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,558,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,0,0,0,5,11,0,0,0,0,16,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,559,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,562,"        return str.substring(0, end);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,587,"        return stripAll(strs, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,617,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,4,0,0,5,51,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,618,            return strs;,4,0,0,0,0,3,8,2,0,17,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,620,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,621,        for (int i = 0; i < strsLen; i++) {,12,0,0,1,3,3,0,6,0,21,35,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,622,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,624,        return newArr;,6,0,0,0,0,1,0,0,0,7,14,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,650,        return str1 == null ? str2 == null : str1.equals(str2);,0,0,0,1,2,1,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,675,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,700,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,701,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,703,        return str.indexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,732,        if (isEmpty(str)) {,2,0,0,2,5,0,12,0,0,15,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,733,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,735,"        return str.indexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,761,        if (str == null || searchStr == null) {,2,0,0,1,3,3,2,2,0,10,39,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,762,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,764,        return str.indexOf(searchStr);,0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,795,        if (str == null || searchStr == null || ordinal <= 0) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,796,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,798,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,799,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,801,        int found = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,802,        int index = INDEX_NOT_FOUND;,2,0,0,0,0,0,0,2,0,5,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,804,"            index = str.indexOf(searchStr, index + 1);",2,0,0,1,2,0,0,0,0,2,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,805,            if (index < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,806,                return index;,4,0,0,0,0,1,6,2,0,13,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,808,            found++;,2,0,0,0,0,0,0,0,0,3,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,809,        } while (found < ordinal);,8,2,0,1,3,0,0,0,0,10,26,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,810,        return index;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,845,        if (str == null || searchStr == null) {,10,4,0,1,3,1,0,12,0,27,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,846,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,849,        if (searchStr.length() == 0 && startPos >= str.length()) {,0,0,0,3,7,0,0,0,0,10,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,850,            return str.length();,2,0,0,1,2,4,2,2,0,10,20,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,852,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,877,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,878,            return -1;,2,0,0,0,0,1,4,2,0,8,10,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,880,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,6,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,911,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,912,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,914,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,940,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,941,            return -1;,4,1,0,0,0,1,0,0,0,5,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,943,        return str.lastIndexOf(searchStr);,0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,975,        if (str == null || searchStr == null) {,0,0,0,1,3,0,6,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,976,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,978,"        return str.lastIndexOf(searchStr, startPos);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1003,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1004,            return false;,16,0,0,0,0,4,0,4,0,26,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1006,        return str.indexOf(searchChar) >= 0;,0,1,0,1,2,1,6,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1031,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,2,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1032,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1034,        return str.indexOf(searchStr) >= 0;,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1061,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1062,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1064,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",0,0,0,3,6,1,0,0,0,10,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1092,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1093,            return -1;,0,0,0,0,0,1,0,0,0,1,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1095,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1096,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1097,            for (int j = 0; j < searchChars.length; j++) {,10,1,0,1,3,0,0,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1098,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,2,0,12,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1099,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1103,        return -1;,4,0,0,0,0,1,0,0,0,6,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1129,        if (isEmpty(str) || isEmpty(searchChars)) {,2,0,0,3,7,0,4,0,0,6,43,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1130,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1132,"        return indexOfAny(str, searchChars.toCharArray());",0,0,0,2,4,1,8,0,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1160,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1161,            return -1;,4,0,0,0,0,1,0,8,0,13,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1163,        outer : for (int i = 0; i < str.length(); i++) {,8,1,0,2,5,0,4,0,0,14,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1164,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1165,            for (int j = 0; j < searchChars.length; j++) {,4,0,0,1,3,0,8,0,0,12,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1166,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1167,                    continue outer;,6,0,0,0,0,0,0,4,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1170,            return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1172,        return -1;,4,0,0,0,0,1,0,0,0,6,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1198,        if (isEmpty(str) || isEmpty(searchChars)) {,0,2,0,3,7,0,14,0,0,16,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1199,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1201,        for (int i = 0; i < str.length(); i++) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1202,            if (searchChars.indexOf(str.charAt(i)) < 0) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1203,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1206,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1234,        if ((valid == null) || (str == null)) {,0,0,0,3,7,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1235,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1237,        if (str.length() == 0) {,2,1,0,2,5,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1238,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1240,        if (valid.length == 0) {,2,0,0,1,3,0,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1241,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1243,"        return indexOfAnyBut(str, valid) == -1;",0,1,0,1,2,1,6,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1269,        if (str == null || validChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1270,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1272,"        return containsOnly(str, validChars.toCharArray());",2,1,0,2,4,1,10,0,0,13,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1300,        if (str == null || invalidChars == null) {,2,1,0,1,3,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1301,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1303,        int strSize = str.length();,2,0,0,1,2,0,4,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1304,        int validSize = invalidChars.length;,6,0,0,0,0,0,0,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1305,        for (int i = 0; i < strSize; i++) {,8,1,0,1,3,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1306,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1307,            for (int j = 0; j < validSize; j++) {,16,5,0,1,3,0,6,0,0,28,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1308,                if (invalidChars[j] == ch) {,12,2,1,2,5,0,8,0,0,26,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1309,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1313,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1339,        if (str == null || invalidChars == null) {,0,0,0,1,3,0,0,0,0,4,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1340,            return true;,0,0,0,0,0,1,10,0,0,10,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1342,"        return containsNone(str, invalidChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1374,        if ((str == null) || (searchStrs == null)) {,6,3,0,3,7,0,0,0,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1375,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1377,        int sz = searchStrs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1380,        int ret = Integer.MAX_VALUE;,8,0,0,0,0,1,4,0,0,13,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1382,        int tmp = 0;,8,0,0,0,0,1,0,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1383,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1384,            String search = searchStrs[i];,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1385,            if (search == null) {,6,2,0,1,3,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1386,                continue;,4,0,0,0,0,0,0,0,0,5,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1388,            tmp = str.indexOf(search);,6,4,0,1,2,3,10,0,0,25,26,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1389,            if (tmp == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1390,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1393,            if (tmp < ret) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1394,                ret = tmp;,4,0,0,0,0,0,2,0,0,7,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1398,        return (ret == Integer.MAX_VALUE) ? -1 : ret;,0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1427,        if ((str == null) || (searchStrs == null)) {,4,3,0,3,7,0,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1428,            return -1;,0,0,0,0,0,1,2,0,0,3,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1430,        int sz = searchStrs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1431,        int ret = -1;,2,0,0,0,0,0,0,0,0,3,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1432,        int tmp = 0;,6,0,0,0,0,0,0,0,0,6,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1433,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1434,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1435,            if (search == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1436,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1438,            tmp = str.lastIndexOf(search);,2,0,0,1,2,0,4,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1439,            if (tmp > ret) {,6,2,0,1,3,0,4,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1440,                ret = tmp;,4,0,0,0,0,0,10,0,0,15,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1443,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1473,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1474,            return null;,2,0,0,0,0,1,8,0,0,11,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1478,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1479,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1482,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1483,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1485,        if (start > str.length()) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1486,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1489,        return str.substring(start);,2,0,0,1,2,1,0,0,0,2,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1528,        if (str == null) {,2,0,0,1,3,0,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1529,            return null;,6,2,0,0,0,1,0,0,0,9,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1533,        if (end < 0) {,2,1,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1534,            end = str.length() + end; // remember end is negative,0,0,0,1,2,0,0,0,0,3,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1536,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1537,            start = str.length() + start; // remember start is negative,0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1541,        if (end > str.length()) {,0,0,0,2,5,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1542,            end = str.length();,2,0,0,1,2,0,4,0,0,7,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1546,        if (start > end) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1547,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1550,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1551,            start = 0;,4,0,0,0,0,0,0,0,0,6,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1553,        if (end < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1554,            end = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1557,"        return str.substring(start, end);",2,1,0,1,2,1,8,0,0,11,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1583,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1584,            return null;,4,1,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1586,        if (len < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1587,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1589,        if (str.length() <= len) {,4,1,0,2,5,0,12,0,0,18,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1590,            return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1592,"            return str.substring(0, len);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1617,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1618,            return null;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1620,        if (len < 0) {,4,1,0,1,3,0,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1621,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1623,        if (str.length() <= len) {,10,5,0,2,5,0,4,0,0,19,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1624,            return str;,4,0,1,0,0,1,0,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1626,            return str.substring(str.length() - len);,2,1,0,2,4,1,8,0,0,11,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1655,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1656,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1658,        if (len < 0 || pos > str.length()) {,0,0,0,2,5,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1659,            return EMPTY;,2,0,0,0,0,1,0,2,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1661,        if (pos < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1662,            pos = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1664,        if (str.length() <= (pos + len)) {,8,3,0,3,7,0,8,0,0,19,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1665,            return str.substring(pos);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1667,"            return str.substring(pos, pos + len);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1699,        if (isEmpty(str) || separator == null) {,2,2,0,2,5,0,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1700,            return str;,6,2,1,0,0,1,0,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1702,        if (separator.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1703,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1705,        int pos = str.indexOf(separator);,2,0,0,1,2,0,6,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1706,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1707,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1709,"        return str.substring(0, pos);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1739,        if (isEmpty(str)) {,2,0,0,2,5,0,0,6,0,9,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1740,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1742,        if (separator == null) {,4,1,0,1,3,0,8,0,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1743,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1745,        int pos = str.indexOf(separator);,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1746,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1747,            return EMPTY;,0,0,0,0,0,1,4,0,0,4,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1749,        return str.substring(pos + separator.length());,0,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1778,        if (isEmpty(str) || isEmpty(separator)) {,2,2,0,3,7,0,8,0,0,12,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1779,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1781,        int pos = str.lastIndexOf(separator);,6,1,0,1,2,0,4,0,0,12,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1782,        if (pos == -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1783,            return str;,8,2,0,0,0,1,0,0,0,10,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1785,"        return str.substring(0, pos);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1816,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1817,            return str;,2,0,0,0,0,1,10,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1819,        if (isEmpty(separator)) {,0,0,0,2,5,0,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1820,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1822,        int pos = str.lastIndexOf(separator);,6,1,0,1,2,0,16,0,0,24,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1823,        if (pos == -1 || pos == (str.length() - separator.length())) {,0,0,0,4,9,0,0,0,0,13,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1824,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1826,        return str.substring(pos + separator.length());,4,2,0,2,4,1,8,0,0,14,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1853,"        return substringBetween(str, tag, tag);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1882,        if (str == null || open == null || close == null) {,0,0,0,1,3,0,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1883,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1885,        int start = str.indexOf(open);,2,4,1,1,2,0,0,0,0,14,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1886,        if (start != -1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1887,"            int end = str.indexOf(close, start + open.length());",0,0,0,2,4,0,0,0,0,6,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1888,            if (end != -1) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1889,"                return str.substring(start + open.length(), end);",2,1,0,2,4,1,10,0,0,13,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1892,        return null;,2,0,0,0,0,1,4,0,0,6,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1920,"        return substringBetween(str, tag, tag);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1950,"        return substringBetween(str, open, close);",0,0,0,1,2,1,8,0,0,8,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1978,"        return split(str, null, -1);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2008,"        return splitWorker(str, separatorChar, false);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2037,"        return splitWorker(str, separatorChars, -1, false);",2,0,0,1,2,1,0,0,0,2,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2071,"        return splitWorker(str, separatorChars, max, false);",0,0,0,1,2,1,8,0,0,9,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2098,"        return splitByWholeSeparator( str, separator, -1 ) ;",0,0,1,1,2,1,10,0,0,15,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2129,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2130,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2133,        int len = str.length() ;,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2135,        if (len == 0) {,4,2,0,1,3,0,0,0,0,6,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2136,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2139,"        if ( ( separator == null ) || ( """".equals( separator ) ) ) {",2,1,0,4,9,0,8,0,0,11,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2141,"            return split( str, null, max ) ;",2,0,1,1,2,1,6,0,0,11,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2145,        int separatorLength = separator.length() ;,0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2147,        ArrayList substrings = new ArrayList() ;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2148,        int numberOfSubstrings = 0 ;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2149,        int beg = 0 ;,4,0,0,0,0,0,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2150,        int end = 0 ;,2,0,0,0,0,0,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2151,        while ( end < len ) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2152,"            end = str.indexOf( separator, beg ) ;",0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2154,            if ( end > -1 ) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2155,                if ( end > beg ) {,4,1,0,1,3,0,0,0,0,5,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2156,                    numberOfSubstrings += 1 ;,4,0,0,0,0,0,2,2,0,10,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2158,                    if ( numberOfSubstrings == max ) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2159,                        end = len ;,6,0,0,0,0,0,0,0,0,7,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2160,                        substrings.add( str.substring( beg ) ) ;,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2164,"                        substrings.add( str.substring( beg, end ) ) ;",0,0,0,2,4,0,12,0,0,12,45,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2169,                        beg = end + separatorLength ;,10,2,0,0,0,0,2,0,0,15,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2173,                    beg = end + separatorLength ;,6,1,0,0,0,0,0,0,0,8,29,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2177,                substrings.add( str.substring( beg ) ) ;,2,1,0,2,4,0,10,0,0,13,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2178,                end = len ;,6,0,0,0,0,0,6,0,0,13,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2182,        return (String[]) substrings.toArray( new String[substrings.size()] ) ;,0,0,0,5,10,1,8,4,0,12,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2212,"        return splitWorker(str, null, -1, true);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2248,"        return splitWorker(str, separatorChar, true);",0,0,0,1,2,1,6,0,0,7,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2266,        if (str == null) {,2,0,1,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2267,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2269,        int len = str.length();,8,5,0,1,2,0,4,0,0,17,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2270,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2271,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2273,        List list = new ArrayList();,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2274,"        int i = 0, start = 0;",8,1,0,0,0,0,0,0,0,9,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2275,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2276,        boolean lastMatch = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2277,        while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2278,            if (str.charAt(i) == separatorChar) {,2,1,0,2,5,0,6,0,0,9,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2279,                if (match || preserveAllTokens) {,6,3,0,1,3,0,8,0,0,17,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2280,"                    list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2281,                    match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2282,                    lastMatch = true;,4,0,0,0,0,0,0,0,0,8,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2284,                start = ++i;,4,0,0,0,0,0,0,0,0,6,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2285,                continue;,0,0,0,0,0,0,4,0,0,4,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2287,                lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2289,            match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2290,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2292,        if (match || (preserveAllTokens && lastMatch)) {,6,2,0,2,5,0,0,0,0,8,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2293,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2295,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,5,10,1,8,4,0,12,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2332,"        return splitWorker(str, separatorChars, -1, true);",0,0,0,1,2,1,6,0,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2372,"        return splitWorker(str, separatorChars, max, true);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2394,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2395,            return null;,2,0,0,0,0,1,2,0,0,4,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2397,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2398,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2399,            return ArrayUtils.EMPTY_STRING_ARRAY;,8,1,0,0,0,1,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2401,        List list = new ArrayList();,2,0,0,1,2,0,0,4,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2402,        int sizePlus1 = 1;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2403,"        int i = 0, start = 0;",4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2404,        boolean match = false;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2405,        boolean lastMatch = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2406,        if (separatorChars == null) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2408,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2409,                if (Character.isWhitespace(str.charAt(i))) {,2,0,0,3,7,0,10,0,0,13,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2410,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2411,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2412,                        if (sizePlus1++ == max) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2413,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2414,                            lastMatch = false;,4,0,0,0,0,0,0,0,0,7,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2416,"                        list.add(str.substring(start, i));",2,1,0,2,4,0,12,0,0,15,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2417,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2419,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2420,                    continue;,0,0,0,0,0,0,10,0,0,10,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2422,                    lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2424,                match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2425,                i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2427,        } else if (separatorChars.length() == 1) {,0,1,0,2,6,0,4,0,0,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2429,            char sep = separatorChars.charAt(0);,4,1,0,1,2,0,10,0,0,16,36,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2430,            while (i < len) {,10,5,0,1,3,0,0,0,0,15,17,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2431,                if (str.charAt(i) == sep) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2432,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2433,                        lastMatch = true;,4,1,0,0,0,0,0,0,0,7,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2434,                        if (sizePlus1++ == max) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2435,                            i = len;,4,0,0,0,0,0,0,0,0,5,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2436,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2438,"                        list.add(str.substring(start, i));",2,1,0,2,4,0,8,0,0,11,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2439,                        match = false;,8,0,0,0,0,0,0,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2441,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2442,                    continue;,0,0,0,0,0,0,18,0,0,20,9,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2444,                    lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2446,                match = true;,6,1,0,0,0,0,4,0,0,14,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2447,                i++;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2449,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2451,            while (i < len) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2452,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,0,0,0,3,7,0,0,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2453,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2454,                        lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2455,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,8,0,0,15,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2456,                            i = len;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2457,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2459,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2460,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2462,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2463,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2465,                    lastMatch = false;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2467,                match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2468,                i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2471,        if (match || (preserveAllTokens && lastMatch)) {,6,2,0,2,5,0,0,0,0,9,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2472,"            list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2474,        return (String[]) list.toArray(new String[list.size()]);,14,4,0,5,10,1,8,4,0,30,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2498,"        return join(array, null);",0,0,0,1,2,1,4,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2522,"        return join(array, null);",0,0,0,1,2,1,4,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2548,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2549,            return null;,0,0,0,0,0,1,4,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2552,"        return join(array, separator, 0, array.length);",0,0,0,1,2,1,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2582,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2583,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2585,        int bufSize = (endIndex - startIndex);,0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2586,        if (bufSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2587,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2590,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,2,2,1,6,12,0,4,0,0,17,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2591,        StringBuffer buf = new StringBuffer(bufSize);,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2593,        for (int i = startIndex; i < endIndex; i++) {,12,3,0,1,3,0,4,0,0,21,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2594,            if (i > startIndex) {,16,3,0,1,3,0,6,2,0,28,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2595,                buf.append(separator);,0,0,0,1,2,0,8,0,0,8,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2597,            if (array[i] != null) {,0,4,1,2,5,0,0,0,0,18,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2598,                buf.append(array[i]);,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2601,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2629,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2630,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2632,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,0,0,0,4,47,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2663,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2664,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2666,        if (separator == null) {,4,1,0,1,3,0,0,0,0,6,24,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2667,            separator = EMPTY;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2672,        int bufSize = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2673,        if (bufSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2674,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2677,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),2,1,1,5,11,0,4,0,0,16,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2680,        StringBuffer buf = new StringBuffer(bufSize);,8,3,0,1,2,0,0,4,0,15,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2682,        for (int i = startIndex; i < endIndex; i++) {,12,1,0,1,3,0,0,0,0,14,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2683,            if (i > startIndex) {,16,2,0,1,3,0,0,0,0,19,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2684,                buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2686,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2687,                buf.append(array[i]);,4,0,1,2,4,0,4,0,0,14,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2690,        return buf.toString();,4,0,0,1,2,1,0,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2710,        if (iterator == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2711,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2713,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2714,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2716,        Object first = iterator.next();,4,1,0,1,2,0,0,0,0,5,31,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2717,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2718,            return ObjectUtils.toString(first);,0,0,0,1,2,1,6,0,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2722,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",6,0,0,1,2,0,0,4,0,11,83,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2723,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2724,            buf.append(first);,4,3,0,1,2,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2727,        while (iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2728,            buf.append(separator);,2,1,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2729,            Object obj = iterator.next();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2730,            if (obj != null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2731,                buf.append(obj);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2733,        },0,0,0,0,1,0,12,0,0,12,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2735,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2754,        if (iterator == null) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2755,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2757,        if (!iterator.hasNext()) {,2,0,0,2,5,0,4,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2758,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2760,        Object first = iterator.next();,4,1,0,1,2,0,4,2,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2761,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2762,            return ObjectUtils.toString(first);,4,3,1,1,2,1,6,0,0,21,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2766,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",6,1,1,1,2,0,8,4,0,24,83,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2767,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2768,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2771,        while (iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2772,            if (separator != null) {,2,0,0,1,3,0,4,2,0,8,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2773,                buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2775,            Object obj = iterator.next();,6,1,0,1,2,0,4,2,0,13,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2776,            if (obj != null) {,4,2,0,1,3,0,0,2,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2777,                buf.append(obj);,0,0,0,1,2,0,6,0,0,6,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2779,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2780,        return buf.toString();,2,1,0,1,2,1,4,0,0,7,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2798,        if (collection == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2799,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2801,"        return join(collection.iterator(), separator);",0,0,0,2,4,1,8,0,0,8,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2819,        if (collection == null) {,4,2,0,1,3,0,6,0,0,12,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2820,            return null;,4,0,1,0,0,1,0,0,0,9,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2822,"        return join(collection.iterator(), separator);",0,0,0,2,4,1,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2854,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2855,            return null;,2,0,0,0,0,1,8,0,0,11,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2857,"        return CharSetUtils.delete(str, "" \t\r\n\b"");",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2875,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2876,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2878,        int sz = str.length();,2,1,0,1,2,0,8,0,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2879,        char[] chs = new char[sz];,12,1,1,2,4,0,2,2,0,20,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2880,        int count = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2881,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2882,            if (!Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2883,                chs[count++] = str.charAt(i);,2,0,1,2,4,0,6,0,0,12,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2886,        if (count == sz) {,10,4,0,1,3,0,6,0,0,20,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2887,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2889,"        return new String(chs, 0, count);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2919,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,14,0,0,15,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2920,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2922,        if (str.startsWith(remove)){,2,1,0,2,5,0,6,0,0,9,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2923,            return str.substring(remove.length());,0,0,0,2,4,1,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2925,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2953,        if (isEmpty(str) || isEmpty(remove)) {,8,1,0,3,7,0,4,0,0,15,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2954,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2956,        if (str.endsWith(remove)) {,2,0,0,2,5,0,6,0,0,8,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2957,"            return str.substring(0, str.length() - remove.length());",2,1,0,3,6,1,12,0,0,15,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2959,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2986,        if (isEmpty(str) || isEmpty(remove)) {,0,1,1,3,7,0,14,0,0,24,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2987,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2989,"        return replace(str, remove, """", -1);",0,0,0,1,2,1,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3012,        if (isEmpty(str) || str.indexOf(remove) == -1) {,0,0,1,3,7,0,2,0,0,6,48,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3013,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3015,        char[] chars = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3016,        int pos = 0;,0,0,0,0,0,0,4,0,0,4,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3017,        for (int i = 0; i < chars.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3018,            if (chars[i] != remove) {,0,0,0,2,5,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3019,                chars[pos++] = chars[i];,2,0,1,2,4,0,0,0,0,11,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3022,"        return new String(chars, 0, pos);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3051,"        return replace(text, repl, with, 1);",0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3078,"        return replace(text, repl, with, -1);",12,3,0,1,2,1,26,0,0,44,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3110,        if (isEmpty(text) || isEmpty(repl) || with == null || max == 0) {,0,0,0,3,7,0,0,0,0,10,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3111,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3113,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3114,"        int end = text.indexOf(repl, start);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3115,        if (end == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3116,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3118,        int replLength = repl.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3119,        int increase = with.length() - replLength;,6,2,0,1,2,0,4,0,0,12,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3120,        increase = (increase < 0 ? 0 : increase);,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3121,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,8,2,0,2,4,0,0,0,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3122,        StringBuffer buf = new StringBuffer(text.length() + increase);,0,0,0,2,4,0,0,0,0,6,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3123,        while (end != -1) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3124,"            buf.append(text.substring(start, end)).append(with);",6,3,0,3,6,0,0,0,0,9,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3125,            start = end + replLength;,6,1,0,0,0,0,0,0,0,8,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3126,            if (--max == 0) {,2,0,0,1,3,0,0,0,0,2,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3127,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3129,"            end = text.indexOf(repl, start);",14,1,0,1,2,0,8,0,0,25,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3131,        buf.append(text.substring(start));,4,2,1,2,4,0,10,0,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3132,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3158,        if (str == null) {,2,1,0,1,3,0,8,0,0,11,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3159,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3161,"        return str.replace(searchChar, replaceChar);",0,0,0,1,2,1,8,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3201,        if (isEmpty(str) || isEmpty(searchChars)) {,4,2,0,3,7,0,12,0,0,18,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3202,            return str;,8,1,0,0,0,1,0,0,0,10,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3204,        if (replaceChars == null) {,2,1,0,1,3,0,8,2,0,13,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3205,"            replaceChars = """";",0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3207,        boolean modified = false;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3208,        int replaceCharsLength = replaceChars.length();,2,0,0,1,2,0,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3209,        int strLength = str.length();,16,2,0,1,2,0,8,0,0,27,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3210,        StringBuffer buf = new StringBuffer(strLength);,10,3,0,1,2,0,0,4,0,17,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3211,        for (int i = 0; i < strLength; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3212,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3213,            int index = searchChars.indexOf(ch);,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3214,            if (index >= 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3215,                modified = true;,6,1,0,0,0,0,16,0,0,26,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3216,                if (index < replaceCharsLength) {,4,1,0,1,3,0,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3217,                    buf.append(replaceChars.charAt(index));,2,1,0,2,4,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3220,                buf.append(ch);,0,0,0,1,2,0,6,0,0,6,15,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3223,        if (modified) {,2,0,0,1,3,0,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3224,            return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3226,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3258,        return new StringBuffer(start + overlay.length() + text.length() - end + 1),6,3,0,3,6,1,8,0,0,17,75,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3295,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3296,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3298,        if (overlay == null) {,6,3,0,1,3,0,0,0,0,9,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3299,            overlay = EMPTY;,4,0,0,0,0,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3301,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3302,        if (start < 0) {,2,1,0,1,3,0,8,0,0,11,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3303,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3305,        if (start > len) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3306,            start = len;,4,0,0,0,0,0,6,0,0,11,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3308,        if (end < 0) {,4,1,0,1,3,0,12,0,0,17,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3309,            end = 0;,10,1,1,0,0,0,10,2,0,30,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3311,        if (end > len) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3312,            end = len;,4,0,0,0,0,0,0,0,0,5,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3314,        if (start > end) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3315,            int temp = start;,4,0,0,0,0,0,0,0,0,4,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3316,            start = end;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3317,            end = temp;,6,0,0,0,0,0,0,0,0,7,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3319,        return new StringBuffer(len + start - end + overlay.length() + 1),4,0,0,2,4,1,0,0,0,5,65,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3354,        if (isEmpty(str)) {,2,2,0,2,5,0,8,0,0,13,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3355,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3358,        if (str.length() == 1) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3359,            char ch = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3360,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,12,3,0,1,3,0,6,0,0,21,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3361,                return EMPTY;,4,0,0,0,0,1,0,8,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3363,                return str;,10,2,0,0,0,1,0,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3367,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3368,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3370,        if (last == CharUtils.LF) {,6,1,0,1,3,0,6,0,0,13,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3371,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,24,4,1,2,5,1,12,0,0,45,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3372,                lastIdx--;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3374,        } else if (last != CharUtils.CR) {,6,1,0,1,4,0,0,0,0,7,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3375,            lastIdx++;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3377,"        return str.substring(0, lastIdx);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3407,        if (isEmpty(str) || separator == null) {,2,2,0,2,5,0,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3408,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3410,        if (str.endsWith(separator)) {,8,1,0,2,5,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3411,"            return str.substring(0, str.length() - separator.length());",0,1,0,3,6,1,12,0,0,13,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3413,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3427,"        return chompLast(str, ""\n"");",0,0,0,1,2,1,4,0,0,5,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3441,        if (str.length() == 0) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3442,            return str;,0,0,0,0,0,1,6,0,0,6,11,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3444,        String sub = str.substring(str.length() - sep.length());,4,2,0,3,6,0,12,2,0,20,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3445,        if (sep.equals(sub)) {,12,1,0,2,5,0,0,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3446,"            return str.substring(0, str.length() - sep.length());",0,0,0,3,6,1,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3448,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3465,        int idx = str.lastIndexOf(sep);,2,0,0,1,2,0,6,0,0,8,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3466,        if (idx == str.length() - sep.length()) {,10,1,0,3,7,0,0,0,0,12,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3467,            return sep;,2,0,0,0,0,1,0,0,0,2,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3468,        } else if (idx != -1) {,2,1,1,1,4,0,0,0,0,7,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3469,            return str.substring(idx);,2,0,0,1,2,1,6,0,0,9,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3471,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3487,        int idx = str.indexOf(sep);,4,0,1,1,2,0,6,0,0,15,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3488,        if (idx != -1) {,4,2,0,1,3,0,0,0,0,7,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3489,            return str.substring(idx + sep.length());,2,1,0,2,4,1,8,0,0,11,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3491,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3508,        int idx = str.indexOf(sep);,2,0,0,1,2,0,6,0,0,8,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3509,        if (idx != -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3510,"            return str.substring(0, idx + sep.length());",4,1,0,2,4,1,8,0,0,14,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3512,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3542,        if (str == null) {,2,1,0,1,3,0,0,0,0,4,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3543,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3545,        int strLen = str.length();,2,0,0,1,2,0,0,0,0,2,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3546,        if (strLen < 2) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3547,            return EMPTY;,6,1,0,0,0,1,4,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3549,        int lastIdx = strLen - 1;,14,3,1,0,0,0,0,2,0,23,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3550,"        String ret = str.substring(0, lastIdx);",0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3551,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3552,        if (last == CharUtils.LF) {,6,1,0,1,3,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3553,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,7,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3554,"                return ret.substring(0, lastIdx - 1);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3557,        return ret;,2,0,0,0,0,1,8,0,0,10,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3571,        int lastIdx = str.length() - 1;,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3572,        if (lastIdx <= 0) {,2,0,0,1,3,0,6,0,0,8,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3573,            return EMPTY;,2,0,0,0,0,1,10,0,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3575,        char last = str.charAt(lastIdx);,2,0,0,1,2,0,6,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3576,        if (last == CharUtils.LF) {,6,1,0,1,3,0,6,0,0,13,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3577,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3578,                lastIdx--;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3581,            lastIdx++;,8,1,0,0,0,0,0,0,0,11,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3583,"        return str.substring(0, lastIdx);",0,0,0,1,2,1,10,0,0,11,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3605,        return StringEscapeUtils.escapeJava(str);,0,0,0,1,2,1,6,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3631,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3632,            return null;,2,0,1,0,0,1,0,2,0,8,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3634,        if (repeat <= 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3635,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3637,        int inputLength = str.length();,6,0,0,1,2,0,4,0,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3638,        if (repeat == 1 || inputLength == 0) {,8,4,0,1,3,0,0,0,0,12,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3639,            return str;,4,1,1,0,0,1,0,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3641,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,8,4,0,1,3,0,0,0,0,12,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3642,"            return padding(repeat, str.charAt(0));",0,0,0,2,4,1,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3645,        int outputLength = inputLength * repeat;,0,0,0,0,0,0,0,0,0,0,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3646,        switch (inputLength) {,10,1,0,1,3,0,8,0,0,19,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3648,                char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3649,                char[] output1 = new char[outputLength];,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3650,                for (int i = repeat - 1; i >= 0; i--) {,12,2,0,1,3,0,4,2,0,22,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3651,                    output1[i] = ch;,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3653,                return new String(output1);,2,0,0,1,2,1,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3655,                char ch0 = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3656,                char ch1 = str.charAt(1);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3657,                char[] output2 = new char[outputLength];,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3658,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",10,3,0,1,3,0,0,0,0,15,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3659,                    output2[i] = ch0;,4,1,1,1,2,0,0,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3660,                    output2[i + 1] = ch1;,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3662,                return new String(output2);,2,1,0,1,2,1,8,2,0,13,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3664,                StringBuffer buf = new StringBuffer(outputLength);,0,0,0,1,2,0,0,0,0,3,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3665,                for (int i = 0; i < repeat; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3666,                    buf.append(str);,0,0,0,1,2,0,6,0,0,6,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3668,                return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3696,        if (repeat < 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3697,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",4,2,0,1,2,0,0,2,0,9,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3699,        final char[] buf = new char[repeat];,2,0,1,2,4,1,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3700,        for (int i = 0; i < buf.length; i++) {,10,1,0,1,3,0,0,0,0,12,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3701,            buf[i] = padChar;,0,0,0,1,2,0,6,0,0,6,17,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3703,        return new String(buf);,0,0,0,1,2,1,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3726,"        return rightPad(str, size, ' ');",0,0,0,1,2,1,6,0,0,7,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3751,        if (str == null) {,8,1,0,1,3,1,0,4,0,14,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3752,            return null;,0,0,0,0,0,1,4,0,0,5,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3754,        int pads = size - str.length();,4,1,0,1,2,0,4,0,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3755,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3756,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3758,        if (pads > PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3759,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,12,0,0,12,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3761,"        return str.concat(padding(pads, padChar));",0,0,0,2,4,1,10,0,0,10,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3788,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3789,            return null;,6,2,0,0,0,1,6,0,0,15,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3791,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3792,"            padStr = "" "";",8,3,0,0,0,0,0,0,0,14,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3794,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3795,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3796,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3797,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3798,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3800,        if (padLen == 1 && pads <= PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3801,"            return rightPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3804,        if (pads == padLen) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3805,            return str.concat(padStr);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3806,        } else if (pads < padLen) {,6,1,0,1,4,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3807,"            return str.concat(padStr.substring(0, pads));",0,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3809,            char[] padding = new char[pads];,0,0,0,2,4,0,0,0,0,6,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3810,            char[] padChars = padStr.toCharArray();,4,0,0,2,4,1,8,2,0,15,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3811,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,0,0,0,10,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3812,                padding[i] = padChars[i % padLen];,6,2,1,2,4,0,0,0,0,19,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3814,            return str.concat(new String(padding));,4,0,0,2,4,1,4,2,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3838,"        return leftPad(str, size, ' ');",2,0,0,1,2,1,6,2,0,11,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3863,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3864,            return null;,12,2,0,0,0,1,0,0,0,15,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3866,        int pads = size - str.length();,4,1,0,1,2,0,4,0,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3867,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3868,            return str; // returns original String when possible,4,1,0,0,0,1,0,0,0,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3870,        if (pads > PAD_LIMIT) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3871,"            return leftPad(str, size, String.valueOf(padChar));",4,1,0,2,4,1,12,0,0,17,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3873,"        return padding(pads, padChar).concat(str);",0,0,0,2,4,1,10,0,0,11,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3900,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3901,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3903,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3904,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3906,        int padLen = padStr.length();,18,1,0,1,2,0,16,0,0,36,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3907,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3908,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3909,        if (pads <= 0) {,4,1,0,1,3,0,0,0,0,5,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3910,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,3,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3912,        if (padLen == 1 && pads <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3913,"            return leftPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,10,0,0,10,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3916,        if (pads == padLen) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3917,            return padStr.concat(str);,0,0,0,1,2,1,6,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3918,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3919,"            return padStr.substring(0, pads).concat(str);",0,0,0,2,4,1,10,0,0,10,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3921,            char[] padding = new char[pads];,0,0,0,2,4,0,0,0,0,6,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3922,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3923,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,0,0,0,10,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3924,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3926,            return new String(padding).concat(str);,0,0,0,2,4,1,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3956,"        return center(str, size, ' ');",0,0,0,1,2,1,6,0,0,7,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3984,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3985,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3987,        int strLen = str.length();,4,2,0,1,2,0,10,0,0,16,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3988,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3989,        if (pads <= 0) {,6,4,0,1,3,0,0,0,0,10,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3990,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3992,"        str = leftPad(str, strLen + pads / 2, padChar);",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3993,"        str = rightPad(str, size, padChar);",2,1,0,1,2,0,18,0,0,23,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3994,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4024,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4025,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4027,        if (isEmpty(padStr)) {,2,0,0,2,5,0,4,0,0,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4028,"            padStr = "" "";",2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4030,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4031,        int pads = size - strLen;,8,1,0,0,0,0,0,0,0,9,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4032,        if (pads <= 0) {,10,6,0,1,3,0,4,2,0,22,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4033,            return str;,2,0,1,0,0,1,0,0,0,4,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4035,"        str = leftPad(str, strLen + pads / 2, padStr);",6,2,0,1,2,0,16,0,0,25,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4036,"        str = rightPad(str, size, padStr);",2,0,1,1,2,0,10,0,0,22,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4037,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4057,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4058,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4060,        return str.toUpperCase();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4078,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4079,            return null;,4,1,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4081,        return str.toLowerCase();,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4106,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4107,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4109,        return new StringBuffer(strLen),12,1,0,1,2,1,0,2,0,16,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4125,        return capitalize(str);,0,0,0,1,2,1,4,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4150,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4151,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4153,        return new StringBuffer(strLen),4,1,0,1,2,1,0,2,0,7,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4169,        return uncapitalize(str);,0,0,0,1,2,1,4,0,0,4,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4201,        if (str == null || (strLen = str.length()) == 0) {,4,0,0,3,7,0,0,0,0,4,50,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4202,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4204,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4206,        char ch = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4207,        for (int i = 0; i < strLen; i++) {,10,2,0,1,3,0,0,0,0,13,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4208,            ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,9,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4209,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4210,                ch = Character.toLowerCase(ch);,0,0,0,1,2,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4211,            } else if (Character.isTitleCase(ch)) {,4,0,0,2,6,0,6,0,0,10,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4212,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,31,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4213,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4214,                ch = Character.toUpperCase(ch);,8,0,0,1,2,0,8,0,0,16,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4216,            buffer.append(ch);,2,1,0,1,2,0,10,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4218,        return buffer.toString();,6,2,0,1,2,1,4,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4234,        return WordUtils.capitalize(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4259,        if (isEmpty(str) || isEmpty(sub)) {,10,1,0,3,7,0,0,0,0,12,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4260,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4262,        int count = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4263,        int idx = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4264,"        while ((idx = str.indexOf(sub, idx)) != -1) {",4,2,0,3,7,0,16,0,0,25,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4265,            count++;,4,1,0,0,0,0,8,0,0,14,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4266,            idx += sub.length();,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4268,        return count;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4292,        if (str == null) {,2,1,0,1,3,0,12,0,0,15,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4293,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4295,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4296,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,4,0,0,16,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4297,            if (Character.isLetter(str.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4298,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4301,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4326,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4327,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4329,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4330,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4331,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,77,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4332,                return false;,0,0,0,0,0,1,10,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4335,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4359,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4360,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4362,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4363,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4364,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,4,1,0,3,7,0,10,0,0,18,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4365,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4368,        return true;,2,0,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4393,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4394,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4396,        int sz = str.length();,2,0,0,1,2,0,16,0,0,18,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4397,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4398,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4399,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4402,        return true;,6,0,0,0,0,1,4,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4431,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4432,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4434,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4435,        for (int i = 0; i < sz; i++) {,12,2,0,1,3,0,0,0,0,15,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4436,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4437,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4440,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4465,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4466,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4468,        int sz = str.length();,2,0,0,1,2,0,12,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4469,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4470,            if (Character.isDigit(str.charAt(i)) == false) {,6,0,0,3,7,0,4,0,0,10,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4471,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4474,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4501,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4502,            return false;,6,3,0,0,0,1,8,0,0,19,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4504,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4505,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4506,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,76,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4507,                return false;,6,3,0,0,0,1,0,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4510,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4533,        if (str == null) {,8,4,0,1,3,0,0,0,0,12,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4534,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4536,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4537,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4538,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,14,0,0,17,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4539,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4542,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4564,        return str == null ? EMPTY : str;,8,2,0,0,0,1,0,0,0,10,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4585,        return str == null ? defaultStr : str;,10,2,0,0,0,1,8,0,0,20,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4605,        return StringUtils.isEmpty(str) ? defaultStr : str;,4,0,0,1,2,1,6,0,0,11,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4625,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4626,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4628,        return new StringBuffer(str).reverse().toString();,0,0,0,3,6,1,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4651,        if (str == null) {,2,1,0,1,3,0,4,0,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4652,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4656,"        String[] strs = split(str, separatorChar);",0,0,0,2,4,0,0,0,0,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4657,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,6,0,0,6,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4658,"        return join(strs, separatorChar);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4684,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4685,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4689,"        String[] strs = split(str, separatorChars);",0,0,0,2,4,0,0,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4690,        ArrayUtils.reverse(strs);,0,0,0,1,2,0,6,0,0,6,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4691,        if (separatorChars == null) {,6,1,0,1,3,0,8,0,0,15,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4692,"            return join(strs, ' ');",0,0,0,1,2,1,4,0,0,5,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4694,"        return join(strs, separatorChars);",0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4732,"        return abbreviate(str, 0, maxWidth);",2,0,1,1,2,1,10,0,0,17,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4771,        if (str == null) {,2,1,0,1,3,0,8,2,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4772,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4774,        if (maxWidth < 4) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4775,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,0,20,4,0,25,70,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4777,        if (str.length() <= maxWidth) {,0,1,0,2,5,0,4,2,0,9,31,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4778,            return str;,2,0,0,0,0,1,6,0,0,8,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4780,        if (offset > str.length()) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4781,            offset = str.length();,4,1,0,1,2,0,0,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4783,        if ((str.length() - offset) < (maxWidth - 3)) {,12,3,0,4,9,0,10,0,0,25,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4784,            offset = str.length() - (maxWidth - 3);,2,0,0,2,4,0,0,0,0,2,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4786,        if (offset <= 4) {,6,1,0,1,3,1,6,2,0,16,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4787,"            return str.substring(0, maxWidth - 3) + ""..."";",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4789,        if (maxWidth < 7) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4790,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0,0,0,1,2,0,0,2,0,4,82,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4792,        if ((offset + (maxWidth - 3)) < str.length()) {,0,0,0,4,9,0,0,0,0,13,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4793,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",0,0,0,2,4,1,0,0,0,7,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4795,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",0,0,0,3,6,1,0,0,0,10,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4826,        if (str1 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4827,            return str2;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4829,        if (str2 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4830,            return str1;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4832,"        int at = indexOfDifference(str1, str2);",2,0,0,1,2,0,6,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4833,        if (at == -1) {,2,1,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4834,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4836,        return str2.substring(at);,8,1,0,1,2,1,0,0,0,10,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4863,        if (str1 == str2) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4864,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4866,        if (str1 == null || str2 == null) {,6,5,1,1,3,0,4,0,0,24,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4867,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4870,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,8,3,0,3,7,0,8,0,0,21,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4871,            if (str1.charAt(i) != str2.charAt(i)) {,0,1,0,3,7,0,12,0,0,13,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4872,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4875,        if (i < str2.length() || i < str1.length()) {,8,3,0,3,7,0,16,0,0,27,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4876,            return i;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4878,        return -1;,0,0,0,0,0,1,6,0,0,9,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4918,        if (s == null || t == null) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4919,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4939,        int n = s.length(); // length of s,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4940,        int m = t.length(); // length of t,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4942,        if (n == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4943,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4944,        } else if (m == 0) {,0,0,0,1,4,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4945,            return n;,4,1,0,0,0,1,0,0,0,5,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4948,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4949,"        int d[] = new int[n+1]; // cost array, horizontally",4,1,0,2,4,0,0,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4960,        for (i = 0; i<=n; i++) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4961,            p[i] = i;,2,0,1,1,2,0,0,0,0,7,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4964,        for (j = 1; j<=m; j++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4965,            t_j = t.charAt(j-1);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4966,            d[0] = j;,2,0,1,1,2,0,0,0,0,5,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4968,            for (i=1; i<=n; i++) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4969,                cost = s.charAt(i-1)==t_j ? 0 : 1;,8,2,0,1,2,0,8,2,0,21,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4971,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",8,6,1,6,12,0,8,0,0,35,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4975,            _d = p;,4,0,0,0,0,0,0,0,0,6,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4976,            p = d;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4977,            d = _d;,2,0,1,0,0,0,0,0,0,7,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4982,        return p[n];,0,0,1,1,2,1,0,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,85,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,86,    },4,2,0,0,1,0,0,0,0,6,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,108,        return toInt(str);,0,0,0,1,2,1,10,0,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,129,"        return toInt(str, 0);",0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,151,"        return toInt(str, defaultValue);",4,4,1,1,2,1,6,0,0,22,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,172,        if(str == null) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,173,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,176,            return Integer.parseInt(str);,0,0,0,1,2,1,6,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,177,        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,178,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,200,"        return toLong(str, 0L);",0,0,0,1,2,1,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,221,        if (str == null) {,4,2,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,222,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,225,            return Long.parseLong(str);,0,0,0,1,2,1,6,0,0,6,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,226,        } catch (NumberFormatException nfe) {,10,1,0,1,4,0,0,2,0,15,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,227,            return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,250,"        return toFloat(str, 0.0f);",0,0,0,1,2,1,4,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,273,      if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,274,          return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,277,          return Float.parseFloat(str);,0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,278,      } catch (NumberFormatException nfe) {,8,1,0,1,4,1,0,2,0,12,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,279,          return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,302,"        return toDouble(str, 0.0d);",0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,325,      if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,326,          return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,329,          return Double.parseDouble(str);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,330,      } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,331,          return defaultValue;,8,1,0,0,0,2,8,0,0,18,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,399,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,402,"            throw new NumberFormatException(""A blank string is not a valid number"");",0,0,0,1,2,0,0,2,0,3,72,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,409,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,412,            return createInteger(str);,0,0,0,1,2,1,4,0,0,4,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,423,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,424,                if (expPos < decPos) {,4,1,0,1,3,0,0,0,0,5,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,425,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,427,"                dec = str.substring(decPos + 1, expPos);",4,1,0,1,2,0,6,0,0,12,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,429,                dec = str.substring(decPos + 1);,4,1,0,1,2,0,4,0,0,10,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,431,"            mant = str.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,434,"                mant = str.substring(0, expPos);",2,0,0,1,2,0,6,0,0,9,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,442,"                exp = str.substring(expPos + 1, str.length() - 1);",0,0,0,2,4,0,0,0,0,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,458,                        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,461,                        return createBigInteger(numeric);,0,0,0,1,2,1,10,0,0,10,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,468,                        Float f = NumberUtils.createFloat(numeric);,2,0,0,1,2,0,6,2,0,10,43,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,469,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,472,                            return f;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,477,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,475,                    } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,482,                        Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,0,6,2,0,10,45,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,483,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,484,                            return d;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,488,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,486,                    } catch (NumberFormatException nfe) {,4,0,0,1,4,0,0,2,0,6,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,490,                        return createBigDecimal(numeric);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,491,                    } catch (NumberFormatException e) {,4,1,0,1,4,0,0,2,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,496,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,502,            if (expPos > -1 && expPos < str.length() - 1) {,0,0,0,2,5,0,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,503,"                exp = str.substring(expPos + 1, str.length());",4,1,0,2,4,0,8,0,0,14,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,505,                exp = null;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,507,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,510,                    return createInteger(str);,2,0,0,1,2,1,8,0,0,11,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,511,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,515,                    return createLong(str);,0,0,0,1,2,1,4,0,0,4,23,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,516,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,519,                return createBigInteger(str);,0,0,0,1,2,1,4,0,0,4,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,523,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,0,0,0,2,4,0,0,0,0,1,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,525,                    Float f = createFloat(str);,0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,526,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,0,0,5,11,0,6,0,0,11,65,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,527,                        return f;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,531,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,529,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,533,                    Double d = createDouble(str);,10,3,0,1,2,0,16,2,0,32,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,534,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,66,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,535,                        return d;,0,0,0,0,0,1,4,0,0,4,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,539,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,537,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,541,                return createBigDecimal(str);,0,0,0,1,2,1,4,0,0,4,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,557,            return true;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,564,        return str.length() > 0;,0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,578,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,579,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,581,        return Float.valueOf(str);,0,0,0,1,2,1,6,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,594,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,595,            return null;,0,0,0,0,0,1,10,0,0,10,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,597,        return Double.valueOf(str);,2,0,0,1,2,1,6,0,0,9,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,611,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,612,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,615,        return Integer.decode(str);,0,0,0,1,2,1,6,0,0,7,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,629,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,644,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,645,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,647,        return new BigInteger(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,660,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,661,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,664,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,665,"            throw new NumberFormatException(""A blank string is not a valid number"");",0,0,0,1,2,0,0,2,0,3,72,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,667,        return new BigDecimal(str);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,680,        if (array1 == array2) {,0,0,0,1,3,0,0,0,0,1,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,681,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,683,        if (array1 == null || array2 == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,684,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,686,        if (array1.length != array2.length) {,8,1,0,1,3,0,0,0,0,10,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,687,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,690,        for (int i=0; i<array1.length; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,691,            if (array1[i] != array2[i]) {,2,1,1,3,7,0,0,0,0,11,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,692,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,696,        return true;,0,0,0,0,0,1,0,0,0,2,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,707,        if (array1 == array2) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,708,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,710,        if (array1 == null || array2 == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,711,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,713,        if (array1.length != array2.length) {,8,1,0,1,3,0,0,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,714,            return false;,2,0,0,0,0,1,0,0,0,2,13,16,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,717,        for (int i=0; i<array1.length; i++) {,4,0,0,1,3,0,0,4,0,8,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,718,            if (array1[i] != array2[i]) {,2,1,1,3,7,0,4,0,0,15,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,719,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,723,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,734,        if (array1 == array2) {,6,1,0,1,3,0,4,0,0,11,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,735,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,737,        if (array1 == null || array2 == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,738,            return false;,4,0,0,0,0,1,0,0,0,6,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,740,        if (array1.length != array2.length) {,8,1,0,1,3,0,0,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,741,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,744,        for (int i=0; i<array1.length; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,745,            if (array1[i] != array2[i]) {,0,0,0,3,7,0,0,0,0,10,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,746,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,750,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,761,        if (array1 == array2) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,762,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,764,        if (array1 == null || array2 == null) {,4,3,0,1,3,0,10,0,0,17,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,765,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,767,        if (array1.length != array2.length) {,14,3,0,1,3,0,0,0,0,17,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,768,            return false;,8,2,1,0,0,1,0,2,0,17,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,771,        for (int i=0; i<array1.length; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,772,            if (array1[i] != array2[i]) {,10,7,1,3,7,0,12,2,0,39,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,773,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,777,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,788,        if (array1 == array2) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,789,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,791,        if (array1 == null || array2 == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,792,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,794,        if (array1.length != array2.length) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,795,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,798,        for (int i=0; i<array1.length; i++) {,12,2,0,1,3,0,0,0,0,15,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,799,"            if (compare(array1[i], array2[i]) != 0) {",4,2,1,4,9,0,6,4,0,24,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,800,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,804,        return true;,10,1,0,0,0,1,4,0,0,18,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,815,        if (array1 == array2) {,8,5,0,1,3,0,12,0,0,25,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,816,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,818,        if (array1 == null || array2 == null) {,6,4,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,819,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,821,        if (array1.length != array2.length) {,8,1,0,1,3,0,4,0,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,822,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,825,        for (int i=0; i<array1.length; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,826,"            if (compare(array1[i], array2[i]) != 0) {",6,2,1,4,9,0,2,0,0,18,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,827,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,831,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,846,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,847,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,848,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,849,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,853,        long min = array[0];,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,854,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,855,            if (array[i] < min) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,856,                min = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,860,        return min;,4,1,0,0,0,1,0,0,0,5,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,873,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,874,"            throw new IllegalArgumentException(""The Array must not be null"");",6,3,0,1,2,0,0,0,0,9,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,875,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,876,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,880,        int min = array[0];,2,0,1,1,2,0,0,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,881,        for (int j = 1; j < array.length; j++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,882,            if (array[j] < min) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,883,                min = array[j];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,887,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,900,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,901,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,902,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,903,"            throw new IllegalArgumentException(""Array cannot be empty."");",2,0,1,1,2,0,0,0,0,4,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,907,        short min = array[0];,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,908,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,909,            if (array[i] < min) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,910,                min = array[i];,2,0,1,1,2,0,4,0,0,11,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,914,        return min;,2,0,0,0,0,1,8,0,0,11,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,927,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,928,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,929,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,930,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,934,        byte min = array[0];,2,0,1,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,935,        for (int i = 1; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,936,            if (array[i] < min) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,937,                min = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,941,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,954,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,955,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,956,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,957,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,961,        double min = array[0];,2,0,1,1,2,0,0,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,962,        for (int i = 1; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,963,            if (array[i] < min) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,964,                min = array[i];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,968,        return min;,4,3,0,0,0,1,0,0,0,7,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,981,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,982,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,983,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,984,"            throw new IllegalArgumentException(""Array cannot be empty."");",2,1,0,1,2,0,0,2,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,988,        float min = array[0];,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,989,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,990,            if (array[i] < min) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,991,                min = array[i];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,995,        return min;,6,0,0,0,0,1,6,0,0,12,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1010,        if (array == null) {,2,1,0,1,3,0,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1011,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1012,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1013,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1017,        long max = array[0];,2,0,1,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1018,        for (int j = 1; j < array.length; j++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1019,            if (array[j] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1020,                max = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1024,        return max;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1037,        if (array == null) {,4,1,0,1,3,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1038,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1039,        } else if (array.length == 0) {,0,0,0,1,4,0,6,0,0,6,31,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1040,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1044,        int max = array[0];,2,0,1,1,2,0,0,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1045,        for (int j = 1; j < array.length; j++) {,14,2,0,1,3,0,0,0,0,17,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1046,            if (array[j] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1047,                max = array[j];,4,0,1,1,2,0,0,0,0,11,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1051,        return max;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1064,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1065,"            throw new IllegalArgumentException(""The Array must not be null"");",6,1,0,1,2,0,8,2,0,20,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1066,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1067,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1071,        short max = array[0];,12,2,1,1,2,0,6,0,0,23,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1072,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1073,            if (array[i] > max) {,2,1,1,2,5,0,8,0,0,16,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1074,                max = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1078,        return max;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1091,        if (array == null) {,2,2,0,1,3,0,8,0,0,13,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1092,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1093,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1094,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1098,        byte max = array[0];,4,0,1,1,2,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1099,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1100,            if (array[i] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1101,                max = array[i];,4,0,0,1,2,0,4,0,0,8,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1105,        return max;,4,0,0,0,0,1,6,0,0,11,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1118,        if (array== null) {,6,2,0,1,3,0,0,0,0,8,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1119,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1120,        } else if (array.length == 0) {,6,1,0,1,4,0,0,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1121,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1125,        double max = array[0];,2,0,1,1,2,0,0,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1126,        for (int j = 1; j < array.length; j++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1127,            if (array[j] > max) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1128,                max = array[j];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1132,        return max;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1145,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1146,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1147,        } else if (array.length == 0) {,8,1,0,1,4,0,0,0,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1148,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,10,0,0,11,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1152,        float max = array[0];,2,0,1,1,2,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1153,        for (int j = 1; j < array.length; j++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1154,            if (array[j] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1155,                max = array[j];,8,1,1,1,2,0,6,0,0,21,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1159,        return max;,2,1,0,0,0,1,10,0,0,14,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1173,        if (b < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1174,            a = b;,4,0,0,0,0,0,0,0,0,6,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1176,        if (c < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1177,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1179,        return a;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1191,        if (b < a) {,2,0,0,1,3,0,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1192,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1194,        if (c < a) {,16,4,0,1,3,0,0,0,0,20,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1195,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1197,        return a;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1209,        if (b < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1210,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1212,        if (c < a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1213,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1215,        return a;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1227,        if (b < a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1228,            a = b;,10,1,0,0,0,0,0,0,0,12,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1230,        if (c < a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1231,            a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1233,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1248,"        return Math.min(Math.min(a, b), c);",0,0,0,2,4,1,14,0,0,15,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1263,"        return Math.min(Math.min(a, b), c);",0,0,0,2,4,1,14,0,0,14,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1277,        if (b > a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1278,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1280,        if (c > a) {,4,1,0,1,3,0,10,0,0,15,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1281,            a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1283,        return a;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1295,        if (b > a) {,4,1,0,1,3,0,0,0,0,6,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1296,            a = b;,8,0,0,0,0,0,18,2,0,29,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1298,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1299,            a = c;,4,0,0,0,0,0,8,0,0,13,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1301,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1313,        if (b > a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1314,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1316,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1317,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1319,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1331,        if (b > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1332,            a = b;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1334,        if (c > a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1335,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1337,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1352,"        return Math.max(Math.max(a, b), c);",4,3,0,2,4,1,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1367,"        return Math.max(Math.max(a, b), c);",0,0,0,2,4,1,14,0,0,14,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1406,        if (lhs < rhs) {,6,1,0,1,3,0,4,0,0,11,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1407,            return -1;,2,1,0,0,0,1,0,0,0,4,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1409,        if (lhs > rhs) {,6,2,0,1,3,0,0,0,0,8,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1410,            return +1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1416,        long lhsBits = Double.doubleToLongBits(lhs);,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1417,        long rhsBits = Double.doubleToLongBits(rhs);,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1418,        if (lhsBits == rhsBits) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1419,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1427,        if (lhsBits < rhsBits) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1428,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1430,            return +1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1467,        if (lhs < rhs) {,4,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1468,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1470,        if (lhs > rhs) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1471,            return +1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1477,        int lhsBits = Float.floatToIntBits(lhs);,2,0,0,1,2,0,6,0,0,8,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1478,        int rhsBits = Float.floatToIntBits(rhs);,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1479,        if (lhsBits == rhsBits) {,4,1,0,1,3,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1480,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1488,        if (lhsBits < rhsBits) {,6,1,0,1,3,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1489,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1491,            return +1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1512,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1532,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1533,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1535,        char[] chars = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1536,        int sz = chars.length;,6,0,0,0,0,0,0,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1537,        boolean hasExp = false;,2,0,0,0,0,0,0,0,0,3,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1538,        boolean hasDecPoint = false;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1539,        boolean allowSigns = false;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1540,        boolean foundDigit = false;,0,0,0,0,0,0,6,0,0,6,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1542,        int start = (chars[0] == '-') ? 1 : 0;,2,1,1,2,4,0,0,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1543,        if (sz > start + 1) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1544,            if (chars[start] == '0' && chars[start + 1] == 'x') {,2,4,1,3,7,0,0,0,0,14,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1545,                int i = start + 2;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1546,                if (i == sz) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1547,"                    return false; // str == ""0x""",0,0,0,0,0,1,0,0,0,1,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1550,                for (; i < chars.length; i++) {,8,1,0,1,3,0,0,0,0,10,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1551,                    if ((chars[i] < '0' || chars[i] > '9'),4,1,0,3,7,0,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1554,                        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1557,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1560,"        sz--; // don't want to loop to the last char, check it afterwords",4,0,0,0,0,0,0,0,0,5,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1562,        int i = start;,6,1,0,0,0,0,0,0,0,7,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1565,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,0,0,0,2,5,0,0,0,0,7,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1566,            if (chars[i] >= '0' && chars[i] <= '9') {,4,0,0,3,7,0,0,0,0,5,41,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1567,                foundDigit = true;,10,0,0,0,0,0,4,0,0,16,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1568,                allowSigns = false;,2,0,0,0,0,0,0,0,0,4,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1570,            } else if (chars[i] == '.') {,0,0,0,2,6,0,0,0,0,8,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1571,                if (hasDecPoint || hasExp) {,4,1,0,1,3,0,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1573,                    return false;,2,1,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1575,                hasDecPoint = true;,2,0,0,0,0,0,0,0,0,4,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1576,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,0,0,3,8,0,0,0,0,11,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1578,                if (hasExp) {,2,0,0,1,3,0,0,0,0,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1580,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1582,                if (!foundDigit) {,2,0,0,1,3,0,0,0,0,3,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1583,                    return false;,6,0,0,0,0,1,4,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1585,                hasExp = true;,2,0,0,0,0,0,0,0,0,4,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1586,                allowSigns = true;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1587,            } else if (chars[i] == '+' || chars[i] == '-') {,12,6,1,3,8,0,0,0,0,28,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1588,                if (!allowSigns) {,4,0,0,1,3,0,4,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1589,                    return false;,2,0,0,0,0,1,0,0,0,3,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1591,                allowSigns = false;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1592,                foundDigit = false; // we need a digit after the E,4,0,0,0,0,0,0,0,0,6,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1594,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1596,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1598,        if (i < chars.length) {,12,2,0,1,3,0,0,0,0,14,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1599,            if (chars[i] >= '0' && chars[i] <= '9') {,2,4,1,3,7,0,8,0,0,24,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1601,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1603,            if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,7,0,0,0,0,13,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1605,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1607,            if (!allowSigns,0,0,0,0,1,0,0,0,0,1,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1612,                return foundDigit;,2,0,0,0,0,1,0,0,0,2,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1614,            if (chars[i] == 'l',0,1,1,1,3,0,0,0,0,6,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1617,                return foundDigit && !hasExp;,4,1,0,0,0,1,0,0,0,6,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1620,            return false;,2,1,0,0,0,1,0,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1624,        return !allowSigns && foundDigit;,6,1,0,0,0,1,0,0,0,8,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,879,        if (width > 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,880,            ensureCapacity(size + width);,4,1,0,1,2,0,2,0,0,7,29,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,881,            String str = (obj == null ? getNullText() : obj.toString());,4,1,0,3,6,0,6,2,0,14,60,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,882,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,883,            if (strLen >= width) {,4,1,0,1,3,0,0,0,0,5,22,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);",4,0,0,1,2,1,10,2,0,17,38,5,0.5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,107,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.008,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,108,        if (initialCapacity <= 0) {,2,1,0,1,3,0,0,0,0,3,27,4,0.008,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,111,        buffer = new char[initialCapacity];,2,0,1,1,2,0,0,0,0,5,35,4,0.008,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,112,    },0,0,0,0,1,0,0,0,0,1,1,4,0.008,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,228,        if (capacity > buffer.length) {,0,0,0,1,3,0,0,0,0,4,31,4,0.00581,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,233,        return this;,4,0,0,0,0,1,0,2,0,6,12,1,0.00581,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,241,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,118,    private StrMatcher delimMatcher = StrMatcher.splitMatcher();,4,1,0,1,2,1,4,2,0,12,60,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,120,    private StrMatcher quoteMatcher = StrMatcher.noneMatcher();,0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,122,    private StrMatcher ignoredMatcher = StrMatcher.noneMatcher();,2,0,0,1,2,1,4,2,0,9,61,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,124,    private StrMatcher trimmerMatcher = StrMatcher.noneMatcher();,2,0,0,1,2,1,4,2,0,9,61,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,127,    private boolean emptyAsNull = false;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,129,    private boolean ignoreEmptyTokens = true;,4,0,0,0,0,1,0,0,0,6,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,242,        this.chars = null;,2,0,0,0,0,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,243,    },12,1,0,0,1,0,0,2,0,16,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,252,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,253,        if (input != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,254,            chars = input.toCharArray();,6,0,1,1,2,0,4,2,0,16,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,256,            chars = null;,2,1,0,0,0,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,258,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,267,        this(input);,0,0,0,1,2,0,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,268,        setDelimiterChar(delim);,2,1,0,1,2,0,4,0,0,7,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,269,    },0,0,0,0,1,0,4,0,0,4,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,278,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,279,        setDelimiterString(delim);,0,0,0,1,2,0,4,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,280,    },2,0,0,0,1,3,4,2,0,12,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,289,        this(input);,0,0,0,1,2,0,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,290,        setDelimiterMatcher(delim);,0,0,0,1,2,0,4,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,291,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,302,"        this(input, delim);",4,0,0,1,2,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,303,        setQuoteChar(quote);,0,0,0,1,2,0,14,0,0,14,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,304,    },0,0,0,0,1,0,12,2,0,14,1,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,315,"        this(input, delim);",4,0,0,1,2,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,316,        setQuoteMatcher(quote);,4,0,0,1,2,6,2,6,0,19,23,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,317,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,329,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,330,        this.chars = input;,4,0,0,0,0,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,331,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,343,        this(input);,0,0,0,1,2,0,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,344,        setDelimiterChar(delim);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,345,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,357,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,358,        setDelimiterString(delim);,4,1,0,1,2,0,4,0,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,359,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,371,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,372,        setDelimiterMatcher(delim);,0,0,0,1,2,0,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,373,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,387,"        this(input, delim);",0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,388,        setQuoteChar(quote);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,389,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,403,"        this(input, delim);",0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,404,        setQuoteMatcher(quote);,0,0,0,1,2,0,12,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,405,    },4,1,0,0,1,6,8,2,0,23,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,93,        CSV_TOKENIZER_PROTOTYPE = new StrTokenizer();,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,94,        CSV_TOKENIZER_PROTOTYPE.setDelimiterMatcher(StrMatcher.commaMatcher());,0,0,0,2,4,0,0,0,0,6,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,95,        CSV_TOKENIZER_PROTOTYPE.setQuoteMatcher(StrMatcher.doubleQuoteMatcher());,0,0,0,2,4,0,8,0,0,8,73,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,96,        CSV_TOKENIZER_PROTOTYPE.setIgnoredMatcher(StrMatcher.noneMatcher());,0,0,0,2,4,0,0,0,0,6,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,97,        CSV_TOKENIZER_PROTOTYPE.setTrimmerMatcher(StrMatcher.trimMatcher());,0,0,0,2,4,0,8,0,0,8,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,98,        CSV_TOKENIZER_PROTOTYPE.setEmptyTokenAsNull(false);,0,0,0,1,2,0,0,0,0,3,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,99,        CSV_TOKENIZER_PROTOTYPE.setIgnoreEmptyTokens(false);,2,3,0,1,2,0,4,0,0,9,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,101,        TSV_TOKENIZER_PROTOTYPE = new StrTokenizer();,2,0,0,1,2,0,0,2,0,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,102,        TSV_TOKENIZER_PROTOTYPE.setDelimiterMatcher(StrMatcher.tabMatcher());,0,0,0,2,4,0,0,0,0,6,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,103,        TSV_TOKENIZER_PROTOTYPE.setQuoteMatcher(StrMatcher.doubleQuoteMatcher());,0,0,0,2,4,0,8,0,0,8,73,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,104,        TSV_TOKENIZER_PROTOTYPE.setIgnoredMatcher(StrMatcher.noneMatcher());,0,0,0,2,4,0,8,0,0,8,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,105,        TSV_TOKENIZER_PROTOTYPE.setTrimmerMatcher(StrMatcher.trimMatcher());,0,0,0,2,4,0,16,0,0,16,68,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,106,        TSV_TOKENIZER_PROTOTYPE.setEmptyTokenAsNull(false);,2,1,0,1,2,0,4,0,0,8,51,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,107,        TSV_TOKENIZER_PROTOTYPE.setIgnoreEmptyTokens(false);,4,1,0,1,2,3,12,0,0,23,52,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,108,    },18,4,0,0,1,0,8,0,0,31,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,139,        return (StrTokenizer) CSV_TOKENIZER_PROTOTYPE.clone();,4,0,0,2,4,1,0,0,0,5,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,152,        return getCSVClone();,14,6,0,1,2,1,10,0,0,32,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,165,        StrTokenizer tok = getCSVClone();,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,166,        tok.reset(input);,6,1,1,1,2,0,14,0,0,25,17,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,167,        return tok;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,180,        StrTokenizer tok = getCSVClone();,2,0,0,1,2,0,2,2,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,181,        tok.reset(input);,0,0,0,1,2,0,6,0,0,6,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,182,        return tok;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,191,        return (StrTokenizer) TSV_TOKENIZER_PROTOTYPE.clone();,0,0,0,2,4,1,4,2,0,6,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,204,        return getTSVClone();,6,1,0,1,2,1,0,0,0,7,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,215,        StrTokenizer tok = getTSVClone();,2,0,0,1,2,0,2,2,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,216,        tok.reset(input);,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,217,        return tok;,4,0,0,0,0,1,4,2,0,10,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,228,        StrTokenizer tok = getTSVClone();,6,0,0,1,2,3,0,4,0,13,33,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,229,        tok.reset(input);,2,0,0,1,2,0,0,0,0,3,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,230,        return tok;,0,0,0,0,0,1,4,0,0,5,11,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,415,        checkTokenized();,0,0,0,1,2,0,2,0,0,2,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,416,        return tokens.length;,6,0,0,0,0,1,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,425,        if (hasNext()) {,0,0,0,2,5,0,2,0,0,2,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,426,            return tokens[tokenPos++];,4,0,1,1,2,4,4,0,0,15,26,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,428,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,437,        if (hasPrevious()) {,0,0,0,2,5,0,2,0,0,2,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,438,            return tokens[--tokenPos];,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,440,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,449,        checkTokenized();,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,450,        return (String[]) tokens.clone();,6,0,0,3,6,4,4,6,0,19,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,459,        checkTokenized();,0,1,0,1,2,0,6,0,0,7,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,460,        List list = new ArrayList(tokens.length);,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,461,        for (int i = 0; i < tokens.length; i++) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,462,            list.add(tokens[i]);,4,4,0,2,4,0,8,0,0,17,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,464,        return list;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,475,        tokenPos = 0;,6,1,0,0,0,0,0,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,476,        tokens = null;,4,1,0,0,0,0,0,2,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,477,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,489,        reset();,0,0,0,1,2,0,2,2,0,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,490,        if (input != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,491,            this.chars = input.toCharArray();,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,493,            this.chars = null;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,495,        return this;,0,0,0,0,0,1,4,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,510,        reset();,0,0,0,1,2,0,2,0,0,2,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,511,        this.chars = input;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,512,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,523,        checkTokenized();,2,0,0,1,2,0,2,0,0,5,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,524,        return tokenPos < tokens.length;,6,1,0,0,0,1,14,0,0,22,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,533,        if (hasNext()) {,8,0,0,2,5,6,20,4,0,39,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,534,            return tokens[tokenPos++];,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,536,        throw new NoSuchElementException();,0,0,0,1,2,0,0,2,0,2,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,545,        return tokenPos;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,554,        checkTokenized();,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,555,        return tokenPos > 0;,2,1,0,0,0,1,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,564,        if (hasPrevious()) {,0,0,0,2,5,0,2,0,0,2,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,565,            return tokens[--tokenPos];,2,0,1,1,2,1,0,0,0,5,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,567,        throw new NoSuchElementException();,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,576,        return tokenPos - 1;,2,0,0,0,0,1,10,0,0,12,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,585,"        throw new UnsupportedOperationException(""remove() is unsupported"");",0,0,0,2,4,0,0,2,0,3,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,594,"        throw new UnsupportedOperationException(""set() is unsupported"");",0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,603,"        throw new UnsupportedOperationException(""add() is unsupported"");",0,0,0,2,4,0,0,2,0,3,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,612,        if (tokens == null) {,2,0,0,1,3,0,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,613,            if (chars == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,615,"                List split = tokenize(null, 0, 0);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,616,                tokens = (String[]) split.toArray(new String[split.size()]);,2,0,0,5,10,0,8,4,0,15,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,617,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,618,"                List split = tokenize(chars, 0, chars.length);",6,0,0,1,2,0,4,2,0,12,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,619,                tokens = (String[]) split.toArray(new String[split.size()]);,0,0,0,5,10,0,0,0,0,15,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,622,    },2,0,0,0,1,0,0,0,0,2,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,645,        if (chars == null || count == 0) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,646,            return Collections.EMPTY_LIST;,12,1,0,0,0,1,16,4,0,35,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,648,        StrBuilder buf = new StrBuilder();,4,1,0,1,2,0,0,6,0,12,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,649,        List tokens = new ArrayList();,6,0,0,1,2,3,0,4,0,13,30,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,650,        int pos = offset;,18,1,1,0,0,1,0,4,0,29,17,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,653,        while (pos >= 0 && pos < count) {,6,3,0,1,3,0,0,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,655,"            pos = readNextToken(chars, pos, count, buf, tokens);",0,0,0,1,2,0,0,0,0,3,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,658,            if (pos >= count) {,6,1,0,1,3,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,659,"                addToken(tokens, """");",0,0,0,1,2,0,4,0,0,5,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,662,        return tokens;,6,0,0,0,0,1,0,0,0,7,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,672,        if (tok == null || tok.length() == 0) {,2,1,0,2,5,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,673,            if (isIgnoreEmptyTokens()) {,0,0,0,2,5,0,2,0,0,2,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,674,                return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,676,            if (isEmptyTokenAsNull()) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,677,                tok = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,680,        list.add(tok);,0,0,0,1,2,0,6,0,0,6,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,681,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,697,        while (start < len) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,698,            int removeLen = Math.max(,0,0,0,0,1,0,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,701,            if (removeLen == 0 ||,2,0,0,0,1,0,0,0,0,2,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,704,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,706,            start += removeLen;,10,1,0,0,0,0,0,2,0,17,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,707,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,710,        if (start >= len) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,711,"            addToken(tokens, """");",6,1,0,1,2,0,8,0,0,17,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,712,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,716,"        int delimLen = getDelimiterMatcher().isMatch(chars, start, start, len);",0,0,0,2,4,0,0,0,0,6,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,717,        if (delimLen > 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,718,"            addToken(tokens, """");",0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,719,            return start + delimLen;,4,1,0,0,0,1,0,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,723,"        int quoteLen = getQuoteMatcher().isMatch(chars, start, start, len);",0,0,0,2,4,0,0,0,0,6,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,724,        if (quoteLen > 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,725,"            return readWithQuotes(chars, start + quoteLen, len, workArea, tokens, start, quoteLen);",0,0,0,1,2,1,0,0,0,4,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,727,"        return readWithQuotes(chars, start, len, workArea, tokens, 0, 0);",0,0,0,1,2,1,12,0,0,12,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,749,        workArea.clear();,2,0,0,1,2,3,4,2,0,11,17,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,750,        int pos = start;,18,0,0,0,0,0,18,2,0,39,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,751,        boolean quoting = (quoteLen > 0);,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,752,        int trimStart = 0;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,754,        while (pos < len) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,758,            if (quoting) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,765,"                if (isQuote(chars, pos, len, quoteStart, quoteLen)) {",0,0,0,2,5,0,16,0,0,16,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,766,"                    if (isQuote(chars, pos + quoteLen, len, quoteStart, quoteLen)) {",4,1,0,2,5,0,16,0,0,21,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,768,"                        workArea.append(chars, pos, quoteLen);",0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,769,                        pos += (quoteLen * 2);,4,1,0,1,2,0,0,0,0,6,22,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,770,                        trimStart = workArea.size();,2,0,0,1,2,0,4,0,0,7,28,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,771,                        continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,775,                    quoting = false;,2,0,0,0,0,0,0,0,0,4,16,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,776,                    pos += quoteLen;,4,0,0,0,0,0,0,0,0,5,16,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,777,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,781,                workArea.append(chars[pos++]);,2,0,1,2,4,0,4,0,0,9,30,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,782,                trimStart = workArea.size();,0,0,0,1,2,0,4,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,788,"                int delimLen = getDelimiterMatcher().isMatch(chars, pos, start, len);",2,0,0,2,4,0,12,0,0,14,69,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,789,                if (delimLen > 0) {,2,1,0,1,3,0,0,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,791,"                    addToken(tokens, workArea.substring(0, trimStart));",0,0,0,2,4,0,10,0,0,10,51,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,792,                    return pos + delimLen;,2,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,796,                if (quoteLen > 0) {,2,1,0,1,3,0,0,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,797,"                    if (isQuote(chars, pos, len, quoteStart, quoteLen)) {",0,0,0,2,5,0,12,0,0,12,53,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,798,                        quoting = true;,6,3,0,0,0,0,4,0,0,16,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,799,                        pos += quoteLen;,4,0,0,0,0,0,0,0,0,5,16,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,800,                        continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,805,"                int ignoredLen = getIgnoredMatcher().isMatch(chars, pos, start, len);",2,0,0,2,4,0,12,0,0,14,69,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,806,                if (ignoredLen > 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,807,                    pos += ignoredLen;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,808,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,814,"                int trimmedLen = getTrimmerMatcher().isMatch(chars, pos, start, len);",4,0,0,2,4,3,16,2,0,25,69,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,815,                if (trimmedLen > 0) {,2,1,0,1,3,0,0,0,0,3,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,816,"                    workArea.append(chars, pos, trimmedLen);",0,0,0,1,2,0,10,0,0,10,40,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,817,                    pos += trimmedLen;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,818,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,822,                workArea.append(chars[pos++]);,4,0,1,2,4,0,4,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,823,                trimStart = workArea.size();,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,824,            },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,828,"        addToken(tokens, workArea.substring(0, trimStart));",0,0,0,2,4,0,10,0,0,10,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,829,        return -1;,2,0,0,0,0,1,4,2,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,844,        for (int i = 0; i < quoteLen; i++) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,845,            if ((pos + i) >= len || chars[pos + i] != chars[quoteStart + i]) {,0,0,0,4,9,0,0,0,0,13,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,846,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,849,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,860,        return this.delimMatcher;,2,0,0,0,0,1,0,0,0,2,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,872,        if (delim == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,873,            this.delimMatcher = StrMatcher.noneMatcher();,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,875,            this.delimMatcher = delim;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,877,        return this;,2,0,0,0,0,3,0,4,0,11,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,887,        return setDelimiterMatcher(StrMatcher.charMatcher(delim));,0,0,0,2,4,1,8,0,0,8,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,897,        return setDelimiterMatcher(StrMatcher.stringMatcher(delim));,0,0,0,2,4,1,0,0,0,7,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,912,        return quoteMatcher;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,925,        if (quote != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,926,            this.quoteMatcher = quote;,4,0,0,0,0,0,12,0,0,17,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,928,        return this;,6,1,0,0,0,1,4,0,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,941,        return setQuoteMatcher(StrMatcher.charMatcher(quote));,0,0,0,2,4,1,8,0,0,8,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,956,        return ignoredMatcher;,2,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,969,        if (ignored != null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,970,            this.ignoredMatcher = ignored;,4,0,0,0,0,0,0,0,0,5,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,972,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,985,        return setIgnoredMatcher(StrMatcher.charMatcher(ignored));,4,2,0,2,4,1,8,0,0,14,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1000,        return trimmerMatcher;,10,6,0,0,0,1,0,0,0,16,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1013,        if (trimmer != null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1014,            this.trimmerMatcher = trimmer;,12,1,0,0,0,0,4,0,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1016,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1027,        return this.emptyAsNull;,2,0,0,0,0,1,0,0,0,2,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1038,        this.emptyAsNull = emptyAsNull;,4,0,0,0,0,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1039,        return this;,4,1,0,0,0,2,0,0,0,6,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1050,        return ignoreEmptyTokens;,4,0,1,0,0,1,0,2,0,10,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1061,        this.ignoreEmptyTokens = ignoreEmptyTokens;,4,0,0,0,0,0,0,0,0,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1062,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1072,        if (chars == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1073,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1075,        return new String(chars);,12,1,0,1,2,1,0,2,0,16,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1088,            return cloneReset();,0,0,0,1,2,1,2,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1089,        } catch (CloneNotSupportedException ex) {,2,0,0,1,4,0,0,2,0,4,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1090,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1102,        StrTokenizer cloned = (StrTokenizer) super.clone();,4,0,0,2,4,0,0,4,0,8,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1103,        if (cloned.chars != null) {,14,2,0,1,3,0,0,0,0,17,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1104,            cloned.chars = (char[]) cloned.chars.clone();,0,0,0,3,6,0,0,0,0,9,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1106,        cloned.reset();,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1107,        return cloned;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1117,        if (tokens == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1118,"            return ""StrTokenizer[not tokenized yet]"";",0,0,0,1,2,1,0,0,0,1,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1120,"            return ""StrTokenizer"" + getTokenList();",0,1,0,1,2,1,2,0,0,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2213,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2212,        StrBuilderTokenizer() {,4,1,0,1,3,0,0,0,0,5,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2214,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2218,            if (chars == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2219,"                return super.tokenize(StrBuilder.this.buffer, 0, StrBuilder.this.size());",8,0,0,2,4,1,2,0,0,10,73,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2221,"                return super.tokenize(chars, offset, count);",8,0,0,1,2,1,0,0,0,8,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2227,            String str = super.getContent();,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2228,            if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2229,                return StrBuilder.this.toString();,6,0,0,1,2,1,12,0,0,18,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2231,                return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,98,        this(CAPACITY);,2,0,0,1,2,0,0,2,0,5,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,99,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,109,            initialCapacity = CAPACITY;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,121,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,122,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,123,            buffer = new char[CAPACITY];,10,5,1,1,2,0,14,0,0,32,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,125,            buffer = new char[str.length() + CAPACITY];,8,2,0,2,4,0,4,0,0,15,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,126,            append(str);,0,0,0,1,2,0,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,128,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,137,        return newLine;,2,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,147,        this.newLine = newLine;,4,0,0,0,0,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,148,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,158,        return nullText;,4,0,0,0,0,1,6,4,0,14,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,168,        if (nullText != null && nullText.length() == 0) {,4,3,0,2,5,0,4,0,0,12,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,169,            nullText = null;,12,3,1,0,0,1,4,0,0,25,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,171,        this.nullText = nullText;,4,0,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,172,        return this;,4,3,0,0,0,1,0,0,0,7,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,182,        return size;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,194,        if (length < 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,195,            throw new StringIndexOutOfBoundsException(length);,6,1,0,1,2,0,0,0,0,7,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,197,        if (length < size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,198,            size = length;,10,4,0,0,0,0,8,0,0,23,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,199,        } else if (length > size) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,200,            ensureCapacity(length);,0,0,0,1,2,0,4,0,0,4,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,201,            int oldEnd = size;,4,0,0,0,0,0,0,0,0,4,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,202,            int newEnd = length;,4,0,0,0,0,0,0,0,0,4,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,203,            size = length;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,204,            for (int i = oldEnd; i < newEnd; i++) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,205,                buffer[i] = '\0';,0,0,1,1,2,0,4,0,0,11,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,208,        return this;,2,0,0,0,0,1,12,0,0,14,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,218,        return buffer.length;,4,0,0,0,0,1,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,229,            char[] old = buffer;,4,0,0,1,2,0,0,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,230,            buffer = new char[capacity];,2,0,1,1,2,0,0,0,0,5,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,231,"            System.arraycopy(old, 0, buffer, 0, size);",0,0,0,1,2,0,10,0,0,10,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,242,        if (buffer.length > length()) {,4,1,0,2,5,0,2,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,243,            char[] old = buffer;,6,0,0,1,2,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,244,            buffer = new char[length()];,4,1,0,2,4,0,2,0,0,8,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,245,"            System.arraycopy(old, 0, buffer, 0, size);",0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,247,        return this;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,260,        return size;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,272,        return size == 0;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,287,        size = 0;,2,0,0,0,0,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,288,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,302,        if (index < 0 || index >= length()) {,4,3,0,2,5,0,2,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,303,            throw new StringIndexOutOfBoundsException(index);,2,0,0,1,2,0,0,2,0,4,49,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,305,        return buffer[index];,8,1,0,1,2,1,0,0,0,10,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,319,        if (index < 0 || index >= length()) {,0,0,0,2,5,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,320,            throw new StringIndexOutOfBoundsException(index);,10,1,0,1,2,0,4,2,0,18,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,322,        buffer[index] = ch;,2,0,1,1,2,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,323,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,336,        if (index < 0 || index >= size) {,6,3,0,1,3,0,0,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,337,            throw new StringIndexOutOfBoundsException(index);,0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,339,"        deleteImpl(index, index + 1, 1);",0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,340,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,350,        if (size == 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,351,            return ArrayUtils.EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,353,        char chars[] = new char[size];,2,0,1,2,4,0,0,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,354,"        System.arraycopy(buffer, 0, chars, 0, size);",0,0,0,1,2,0,10,0,0,10,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,355,        return chars;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,369,"        endIndex = validateRange(startIndex, endIndex);",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,370,        int len = endIndex - startIndex;,2,0,0,0,0,0,6,0,0,10,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,371,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,372,            return ArrayUtils.EMPTY_CHAR_ARRAY;,0,0,0,0,0,1,0,0,0,1,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,374,        char chars[] = new char[len];,2,0,1,2,4,0,0,0,0,4,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,375,"        System.arraycopy(buffer, startIndex, chars, 0, len);",0,0,0,1,2,0,20,2,0,22,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,376,        return chars;,2,1,0,0,0,1,6,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,386,        int len = length();,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,387,        if (destination == null || destination.length < len) {,8,3,0,1,3,0,0,0,0,11,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,388,            destination = new char[len];,2,0,1,1,2,0,0,0,0,5,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,390,"        System.arraycopy(buffer, 0, destination, 0, len);",0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,391,        return destination;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,405,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,406,            throw new StringIndexOutOfBoundsException(startIndex);,0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,408,        if (endIndex < 0 || endIndex > length()) {,0,0,0,2,5,0,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,409,            throw new StringIndexOutOfBoundsException(endIndex);,2,0,0,1,2,0,0,2,0,4,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,411,        if (startIndex > endIndex) {,4,1,0,1,3,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,412,"            throw new StringIndexOutOfBoundsException(""end < start"");",0,0,0,1,2,0,0,2,0,3,57,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,414,"        System.arraycopy(buffer, startIndex, destination, destinationIndex, endIndex - startIndex);",0,0,0,1,2,0,0,0,0,3,91,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,415,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,428,        if (newLine == null)  {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,429,            append(SystemUtils.LINE_SEPARATOR);,4,0,0,1,2,0,2,0,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,430,            return this;,4,0,0,0,0,1,0,0,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,432,        return append(newLine);,2,0,0,1,2,1,10,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,441,        if (nullText == null)  {,4,1,0,1,3,0,0,0,0,5,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,442,            return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,444,        return append(nullText);,2,0,0,1,2,1,4,0,0,7,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,455,        if (obj == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,456,            return appendNull();,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,458,        return append(obj.toString());        ,0,0,0,2,4,1,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,469,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,470,            return appendNull();,0,0,0,1,2,1,2,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,472,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,473,        if (strLen > 0) {,2,0,0,1,3,0,0,0,0,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,474,            int len = length();,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,475,            ensureCapacity(len + strLen);,4,1,0,1,2,0,10,0,0,15,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,476,"            str.getChars(0, strLen, buffer, len);",0,0,0,1,2,0,10,0,0,10,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,477,            size += strLen;,4,0,0,0,0,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,479,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,492,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,493,            return appendNull();,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,495,        if (startIndex < 0 || startIndex > str.length()) {,2,0,0,2,5,0,0,0,0,2,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,496,"            throw new StringIndexOutOfBoundsException(""startIndex must be valid"");",0,0,0,1,2,0,0,2,0,3,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,498,        if (length < 0 || (startIndex + length) > str.length()) {,6,4,0,3,7,0,4,0,0,14,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,499,"            throw new StringIndexOutOfBoundsException(""length must be valid"");",0,0,0,1,2,0,0,0,0,3,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,501,        if (length > 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,502,            int len = length();,2,0,0,1,2,0,2,0,0,4,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,503,            ensureCapacity(len + length);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,504,"            str.getChars(startIndex, startIndex + length, buffer, len);",4,1,0,1,2,0,0,0,0,5,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,505,            size += length;,0,0,0,0,0,0,8,4,0,12,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,507,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,518,        if (str == null) {,4,2,1,1,3,0,6,0,0,16,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,519,            return appendNull();,0,0,0,1,2,1,2,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,521,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,522,        if (strLen > 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,523,            int len = length();,2,0,0,1,2,0,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,524,            ensureCapacity(len + strLen);,4,1,0,1,2,0,2,0,0,7,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,525,"            str.getChars(0, strLen, buffer, len);",0,0,0,1,2,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,526,            size += strLen;,4,0,0,0,0,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,528,        return this;,0,0,0,0,0,1,12,0,0,12,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,541,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,542,            return appendNull();,0,0,0,1,2,1,2,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,544,        if (startIndex < 0 || startIndex > str.length()) {,4,3,0,2,5,0,4,0,0,11,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,545,"            throw new StringIndexOutOfBoundsException(""startIndex must be valid"");",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,547,        if (length < 0 || (startIndex + length) > str.length()) {,6,4,0,3,7,0,4,0,0,14,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,548,"            throw new StringIndexOutOfBoundsException(""length must be valid"");",0,0,0,1,2,0,0,0,0,3,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,550,        if (length > 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,551,            int len = length();,0,0,0,1,2,0,8,0,0,8,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,552,            ensureCapacity(len + length);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,553,"            str.getChars(startIndex, startIndex + length, buffer, len);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,554,            size += length;,4,0,0,0,0,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,556,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,567,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,568,            return appendNull();,0,0,0,1,2,1,2,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,570,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,571,        if (strLen > 0) {,14,4,0,1,3,0,10,0,0,29,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,572,            int len = length();,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,573,            ensureCapacity(len + strLen);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,574,"            System.arraycopy(str.buffer, 0, buffer, len, strLen);",4,0,0,1,2,0,10,0,0,14,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,575,            size += strLen;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,577,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,590,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,591,            return appendNull();,2,1,0,1,2,1,2,0,0,5,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,593,        if (startIndex < 0 || startIndex > str.length()) {,6,3,0,2,5,0,4,0,0,13,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,594,"            throw new StringIndexOutOfBoundsException(""startIndex must be valid"");",0,0,0,1,2,0,0,2,0,3,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,596,        if (length < 0 || (startIndex + length) > str.length()) {,0,0,0,3,7,0,0,0,0,10,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,597,"            throw new StringIndexOutOfBoundsException(""length must be valid"");",2,0,0,1,2,0,0,2,0,5,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,599,        if (length > 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,600,            int len = length();,2,0,0,1,2,0,2,0,0,4,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,601,            ensureCapacity(len + length);,2,1,0,1,2,0,0,0,0,3,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,602,"            str.getChars(startIndex, startIndex + length, buffer, len);",6,1,0,1,2,0,10,0,0,17,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,603,            size += length;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,605,        return this;,2,0,0,0,0,1,4,2,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,616,        if (chars == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,617,            return appendNull();,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,619,        int strLen = chars.length;,6,0,0,0,0,0,0,2,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,620,        if (strLen > 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,621,            int len = length();,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,622,            ensureCapacity(len + strLen);,4,1,0,1,2,0,2,0,0,7,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,623,"            System.arraycopy(chars, 0, buffer, len, strLen);",0,0,0,1,2,0,12,0,0,12,48,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,624,            size += strLen;,4,0,0,0,0,0,8,0,0,13,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,626,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,639,        if (chars == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,640,            return appendNull();,0,0,0,1,2,1,2,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,642,        if (startIndex < 0 || startIndex > chars.length) {,8,3,0,1,3,0,0,0,0,11,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,643,"            throw new StringIndexOutOfBoundsException(""Invalid startIndex: "" + length);",2,0,0,1,2,0,4,0,0,6,75,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,645,        if (length < 0 || (startIndex + length) > chars.length) {,10,4,0,2,5,0,0,0,0,14,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,646,"            throw new StringIndexOutOfBoundsException(""Invalid length: "" + length);",2,1,0,1,2,0,0,2,0,6,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,648,        if (length > 0) {,6,2,0,1,3,0,0,0,0,8,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,649,            int len = length();,4,0,0,1,2,0,12,0,0,16,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,650,            ensureCapacity(len + length);,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,651,"            System.arraycopy(chars, startIndex, buffer, len, length);",0,0,0,1,2,0,14,0,0,14,57,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,652,            size += length;,4,0,0,0,0,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,654,        return this;,0,0,0,0,0,1,4,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,664,        if (value) {,2,0,0,1,3,0,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,665,            ensureCapacity(size + 4);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,666,            buffer[size++] = 't';,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,667,            buffer[size++] = 'r';,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,668,            buffer[size++] = 'u';,2,0,1,1,2,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,669,            buffer[size++] = 'e';,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,671,            ensureCapacity(size + 5);,4,1,0,1,2,0,2,0,0,7,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,672,            buffer[size++] = 'f';,12,4,0,1,2,0,0,0,0,16,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,673,            buffer[size++] = 'a';,2,0,1,1,2,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,674,            buffer[size++] = 'l';,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,675,            buffer[size++] = 's';,2,0,1,1,2,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,676,            buffer[size++] = 'e';,2,0,1,1,2,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,678,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,688,        int len = length();,2,0,0,1,2,0,2,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,689,        ensureCapacity(len + 1);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,690,        buffer[size++] = ch;,4,0,1,1,2,0,8,4,0,20,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,691,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,701,        return append(String.valueOf(value));,4,1,0,2,4,1,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,711,        return append(String.valueOf(value));,0,0,0,2,4,1,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,721,        return append(String.valueOf(value));,4,0,0,2,4,1,8,0,0,12,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,731,        return append(String.valueOf(value));,2,0,1,2,4,1,0,0,0,6,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,746,        if (array != null && array.length > 0) {,6,3,0,1,3,0,0,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,747,"            separator = (separator == null ? """" : separator);",0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,748,            append(array[0]);,0,0,1,2,4,0,2,0,0,4,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,749,            for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,6,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,750,                append(separator);,2,0,0,1,2,1,8,0,0,11,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,751,                append(array[i]);,0,0,1,2,4,0,2,0,0,6,17,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,754,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,768,        if (coll != null && coll.size() > 0) {,0,0,0,2,5,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,769,"            separator = (separator == null ? """" : separator);",0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,770,            Iterator it = coll.iterator();,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,771,            while (it.hasNext()) {,4,1,1,2,5,0,4,0,0,15,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,772,                append(it.next());,2,1,0,2,4,0,6,0,0,9,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,773,                if (it.hasNext()) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,774,                    append(separator);,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,778,        return this;,0,0,0,0,0,1,6,0,0,6,12,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,792,        if (it != null) {,4,1,0,1,3,0,0,0,0,5,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,793,"            separator = (separator == null ? """" : separator);",0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,794,            while (it.hasNext()) {,0,0,0,2,5,0,4,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,795,                append(it.next());,0,0,0,2,4,0,6,0,0,6,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,796,                if (it.hasNext()) {,2,1,0,2,5,0,4,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,797,                    append(separator);,0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,801,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,813,        if (length >= 0) {,4,1,0,1,3,0,0,0,0,6,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,814,            ensureCapacity(size + length);,4,1,0,1,2,0,2,0,0,7,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,815,            for (int i = 0; i < length; i++) {,8,1,0,1,3,0,2,0,0,12,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,816,                buffer[size++] = padChar;,4,0,1,1,2,0,0,0,0,8,25,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,819,        return this;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,835,        if (width > 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,836,            ensureCapacity(size + width);,4,1,0,1,2,0,2,0,0,7,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,837,            String str = (obj == null ? getNullText() : obj.toString());,0,0,0,3,6,0,0,0,0,9,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,838,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,839,            if (strLen >= width) {,6,2,0,1,3,0,16,0,0,24,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,840,"                str.getChars(strLen - width, strLen, buffer, size);",0,0,0,1,2,0,0,0,0,3,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,842,                int padLen = width - strLen;,6,1,0,0,0,0,0,0,0,7,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,843,                for (int i = 0; i < padLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,844,                    buffer[size + i] = padChar;,6,1,1,1,2,0,0,0,0,10,27,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,846,"                str.getChars(0, strLen, buffer, size + padLen);",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,848,            size += width;,6,0,0,0,0,0,12,2,0,22,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,850,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,864,"        return appendFixedWidthPadLeft(String.valueOf(value), width, padChar);",2,1,1,2,4,1,0,0,0,7,70,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,886,                int padLen = width - strLen;,8,1,0,0,0,0,0,0,0,10,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,887,"                str.getChars(0, strLen, buffer, size);",0,0,1,1,2,0,10,0,0,14,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,888,                for (int i = 0; i < padLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,889,                    buffer[size + strLen + i] = padChar;,8,1,1,1,2,0,0,0,0,12,36,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,892,            size += width;,4,0,0,0,0,0,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,894,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,908,"        return appendFixedWidthPadRight(String.valueOf(value), width, padChar);",8,1,0,2,4,1,12,0,0,23,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,922,        if (obj == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,923,"            return insert(index, nullText);",0,0,0,1,2,1,6,0,0,7,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,925,"        return insert(index, obj.toString());",2,0,0,2,4,1,14,0,0,17,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,938,        validateIndex(index);,0,0,0,1,2,0,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,939,        if (str == null) {,2,0,0,1,3,0,0,0,0,4,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,940,            str = nullText;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,942,        int strLen = (str == null ? 0 : str.length());,0,0,0,2,4,0,0,0,0,6,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,943,        if (strLen > 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,944,            int newSize = size + strLen;,6,1,0,0,0,0,10,0,0,17,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,945,            ensureCapacity(newSize);,6,1,0,1,2,0,4,0,0,11,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,946,"            System.arraycopy(buffer, index, buffer, index + strLen, size - index);",14,3,0,1,2,0,10,0,0,27,70,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,947,            size = newSize;,4,0,0,0,0,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,948,"            str.getChars(0, strLen, buffer, index);",0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,950,        return this;,0,0,0,0,0,1,12,0,0,13,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,963,        validateIndex(index);,0,0,0,1,2,0,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,964,        if (chars == null) {,8,4,1,1,3,0,0,0,0,20,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,965,"            return insert(index, nullText);",0,0,0,1,2,1,16,2,0,19,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,967,        int len = chars.length;,6,0,0,0,0,0,0,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,968,        if (len > 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,969,            ensureCapacity(size + len);,6,1,0,1,2,0,2,0,0,11,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,970,"            System.arraycopy(buffer, index, buffer, index + len, size - index);",10,2,0,1,2,0,16,0,0,28,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,971,"            System.arraycopy(chars, 0, buffer, index, len);",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,972,            size += len;,10,1,0,0,0,0,0,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,974,        return this;,2,0,0,0,0,1,0,0,0,4,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,989,        validateIndex(index);,0,0,0,1,2,0,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,990,        if (chars == null) {,16,5,0,1,3,0,0,0,0,22,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,991,"            return insert(index, nullText);",0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,993,        if (offset < 0 || offset > chars.length) {,8,3,0,1,3,0,0,0,0,11,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,994,"            throw new StringIndexOutOfBoundsException(""Invalid offset: "" + offset);",2,1,0,1,2,0,0,2,0,6,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,996,        if (length < 0 || offset + length > chars.length) {,0,0,0,1,3,0,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,997,"            throw new StringIndexOutOfBoundsException(""Invalid length: "" + length);",8,1,0,1,2,0,0,6,0,16,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,999,        if (length > 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1000,            ensureCapacity(size + length);,10,1,0,1,2,0,6,0,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1001,"            System.arraycopy(buffer, index, buffer, index + length, size - index);",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1002,"            System.arraycopy(chars, offset, buffer, index, length);",0,0,0,1,2,0,0,0,0,3,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1003,            size += length;,4,0,0,0,0,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1005,        return this;,8,4,0,0,0,1,8,0,0,22,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1017,        validateIndex(index);,0,0,0,1,2,0,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1018,        if (value) {,6,0,0,1,3,0,0,0,0,7,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1019,            ensureCapacity(size + 4);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1020,"            System.arraycopy(buffer, index, buffer, index + 4, size - index);",2,1,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1021,            buffer[index++] = 't';,2,0,1,1,2,0,0,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1022,            buffer[index++] = 'r';,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1023,            buffer[index++] = 'u';,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1024,            buffer[index] = 'e';,0,0,1,1,2,0,0,0,0,6,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1025,            size += 4;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1027,            ensureCapacity(size + 5);,2,1,0,1,2,0,2,0,0,5,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1028,"            System.arraycopy(buffer, index, buffer, index + 5, size - index);",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1029,            buffer[index++] = 'f';,4,0,1,1,2,0,0,0,0,9,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1030,            buffer[index++] = 'a';,2,0,1,1,2,0,0,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1031,            buffer[index++] = 'l';,2,0,1,1,2,0,0,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1032,            buffer[index++] = 's';,4,0,1,1,2,0,0,0,0,9,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1033,            buffer[index] = 'e';,2,0,1,1,2,0,0,0,0,8,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1034,            size += 5;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1036,        return this;,0,0,0,0,0,1,6,0,0,6,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1048,        validateIndex(index);,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1049,        ensureCapacity(size + 1);,2,1,0,1,2,0,8,0,0,11,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1050,"        System.arraycopy(buffer, index, buffer, index + 1, size - index);",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1051,        buffer[index] = value;,2,0,1,1,2,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1052,        size++;,2,0,0,0,0,0,0,0,0,3,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1053,        return this;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1065,"        return insert(index, String.valueOf(value));",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1077,"        return insert(index, String.valueOf(value));",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1089,"        return insert(index, String.valueOf(value));",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1101,"        return insert(index, String.valueOf(value));",0,0,0,2,4,1,0,0,0,1,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",6,1,0,1,2,1,18,0,0,26,72,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1115,        size -= len;,4,0,0,0,0,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1116,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1128,"        endIndex = validateRange(startIndex, endIndex);",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1129,        int len = endIndex - startIndex;,0,0,0,0,0,0,0,0,0,0,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1130,        if (len > 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1131,"            deleteImpl(startIndex, endIndex, len);",0,0,0,1,2,0,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1133,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1144,        for (int i = 0; i < size; i++) {,8,1,0,1,3,0,0,0,0,10,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1145,            if (buffer[i] == ch) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1146,                int start = i;,4,2,1,0,0,0,6,0,0,16,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1147,                while (++i < size) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1148,                    if (buffer[i] != ch) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1149,                        break;,0,0,0,0,0,0,8,2,0,10,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1152,                int len = i - start;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1153,"                deleteImpl(start, i, len);",0,0,0,1,2,0,8,0,0,8,26,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1154,                i -= len;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1157,        return this;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1167,        for (int i = 0; i < size; i++) {,8,1,0,1,3,0,0,0,0,10,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1168,            if (buffer[i] == ch) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1169,"                deleteImpl(i, i + 1, 1);",2,1,0,1,2,0,4,0,0,7,24,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1170,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1173,        return this;,2,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1184,        int len = (str == null ? 0 : str.length());,4,1,0,2,4,0,4,0,0,9,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1185,        if (len > 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1186,"            int index = indexOf(str, 0);",2,0,0,1,2,0,4,0,0,6,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1187,            while (index >= 0) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1188,"                deleteImpl(index, index + len, len);",4,1,0,1,2,0,6,0,0,11,36,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1189,"                index = indexOf(str, index);",2,0,0,1,2,0,6,0,0,9,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1192,        return this;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1202,        int len = (str == null ? 0 : str.length());,8,1,0,2,4,0,8,0,0,18,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1203,        if (len > 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1204,"            int index = indexOf(str, 0);",2,0,0,1,2,0,4,0,0,6,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1205,            if (index >= 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1206,"                deleteImpl(index, index + len, len);",20,3,0,1,2,0,6,0,0,31,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1209,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1224,"        return replace(matcher, null, 0, size, -1);",0,0,0,1,2,1,0,0,0,4,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1238,"        return replace(matcher, null, 0, size, 1);",2,0,0,1,2,1,0,0,0,4,42,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1253,        int newSize = size - removeLen + insertLen;,0,0,0,0,0,0,0,0,0,0,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1254,        if (insertLen != removeLen) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1255,            ensureCapacity(newSize);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1256,"            System.arraycopy(buffer, endIndex, buffer, startIndex + insertLen, size - endIndex);",8,2,0,1,2,0,10,0,0,20,84,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1257,            size = newSize;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1259,        if (insertLen > 0) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1260,"            insertStr.getChars(0, insertLen, buffer, startIndex);",2,0,0,1,2,0,10,0,0,13,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1262,    },0,0,0,0,1,0,6,0,0,6,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1276,"        endIndex = validateRange(startIndex, endIndex);",2,0,0,1,2,0,6,0,0,9,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1277,        int insertLen = (replaceStr == null ? 0 : replaceStr.length());,4,1,0,2,4,0,4,0,0,9,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1278,"        replaceImpl(startIndex, endIndex, endIndex - startIndex, replaceStr, insertLen);",2,0,0,1,2,0,0,0,0,2,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1279,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1292,        if (search != replace) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1293,            for (int i = 0; i < size; i++) {,8,1,0,1,3,0,0,0,0,10,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1294,                if (buffer[i] == search) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1295,                    buffer[i] = replace;,2,0,1,1,2,0,0,0,0,7,20,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1299,        return this;,10,2,0,0,0,1,14,0,0,26,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1311,        if (search != replace) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1312,            for (int i = 0; i < size; i++) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1313,                if (buffer[i] == search) {,2,1,1,2,5,0,0,0,0,7,26,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1314,                    buffer[i] = replace;,2,0,1,1,2,0,0,0,0,7,20,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1315,                    break;,4,3,0,0,0,0,0,0,0,7,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1319,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1331,        int searchLen = (searchStr == null ? 0 : searchStr.length());,4,1,0,2,4,0,4,0,0,9,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1332,        if (searchLen > 0) {,16,4,0,1,3,0,4,0,0,25,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1333,            int replaceLen = (replaceStr == null ? 0 : replaceStr.length());,0,0,0,2,4,0,8,0,0,8,64,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1334,"            int index = indexOf(searchStr, 0);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1335,            while (index >= 0) {,2,1,0,1,3,0,0,0,0,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1336,"                replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",4,1,0,1,2,0,10,0,0,15,73,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1337,"                index = indexOf(searchStr, index + replaceLen);",6,1,0,1,2,0,4,0,0,12,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1340,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1351,        int searchLen = (searchStr == null ? 0 : searchStr.length());,0,0,0,2,4,0,0,0,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1352,        if (searchLen > 0) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1353,"            int index = indexOf(searchStr, 0);",2,0,0,1,2,0,4,0,0,6,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1354,            if (index >= 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1355,                int replaceLen = (replaceStr == null ? 0 : replaceStr.length());,6,1,0,2,4,0,4,0,0,11,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1356,"                replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",14,2,0,1,2,1,10,0,0,27,73,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1359,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1375,"        return replace(matcher, replaceStr, 0, size, -1);",0,0,0,1,2,1,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1390,"        return replace(matcher, replaceStr, 0, size, 1);",4,1,0,1,2,1,0,0,0,5,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1413,"        endIndex = validateRange(startIndex, endIndex);",2,0,0,1,2,0,6,0,0,9,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1414,"        return replaceImpl(matcher, replaceStr, startIndex, endIndex, replaceCount);",14,1,0,1,2,1,12,0,0,28,76,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1435,        if (matcher == null || size == 0) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1436,            return this;,8,1,0,0,0,1,0,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1438,        int replaceLen = (replaceStr == null ? 0 : replaceStr.length());,0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1439,        char[] buf = buffer;,4,0,0,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1440,        for (int i = from; i < to && replaceCount != 0; i++) {,12,3,0,1,3,0,0,0,0,16,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1441,"            int removeLen = matcher.isMatch(buf, i, from, to);",2,0,0,1,2,0,12,0,0,14,50,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1442,            if (removeLen > 0) {,2,1,0,1,3,0,0,0,0,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1443,"                replaceImpl(i, i + removeLen, removeLen, replaceStr, replaceLen);",4,1,0,1,2,0,10,0,0,15,65,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1444,                to = to - removeLen + replaceLen;,12,3,0,0,0,0,2,0,0,18,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1445,                i = i + replaceLen - 1;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1446,                if (replaceCount > 0) {,2,1,0,1,3,0,0,0,0,3,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1447,                    replaceCount--;,2,0,0,0,0,0,0,0,0,3,15,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1451,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1461,        if (size == 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1462,            return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1465,        int half = size / 2;,4,3,0,0,0,0,0,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1466,        char[] buf = buffer;,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1467,"        for (int leftIdx = 0, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {",0,0,0,1,3,0,0,0,0,4,82,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1468,            char swap = buf[leftIdx];,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1469,            buf[leftIdx] = buf[rightIdx];,0,0,1,2,4,0,0,0,0,9,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1470,            buf[rightIdx] = swap;,2,0,1,1,2,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1472,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1483,        if (size == 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1484,            return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1486,        int len = size;,4,0,0,0,0,0,0,0,0,4,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1487,        char[] buf = buffer;,4,0,0,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1488,        int pos = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1489,        while (pos < len && buf[pos] <= ' ') {,0,0,0,2,5,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1490,            pos++;,6,0,0,0,0,0,0,0,0,8,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1492,        while (pos < len && buf[len - 1] <= ' ') {,6,4,1,2,5,0,0,0,0,13,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1493,            len--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1495,        if (len < size) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1496,"            delete(len, size);",0,0,0,1,2,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1498,        if (pos > 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1499,"            delete(0, pos);",8,1,0,1,2,0,4,0,0,14,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1501,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1514,        if (str == null) {,6,3,1,1,3,0,0,0,0,13,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1515,            return false;,16,6,0,0,0,1,8,2,0,33,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1517,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1518,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1519,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1521,        if (len > size) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1522,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1524,        for (int i = 0; i < len; i++) {,8,1,0,1,3,0,0,0,0,10,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1525,            if (buffer[i] != str.charAt(i)) {,0,0,0,3,7,0,0,0,0,10,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1526,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1529,        return true;,2,2,0,0,0,1,8,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1541,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1542,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1544,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1545,        if (len == 0) {,6,1,0,1,3,0,0,0,0,8,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1546,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1548,        if (len > size) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1549,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1551,        int pos = size - len;,6,1,0,0,0,0,0,0,0,7,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1552,"        for (int i = 0; i < len; i++,pos++) {",10,1,0,1,3,0,0,0,0,13,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1553,            if (buffer[pos] != str.charAt(i)) {,0,0,0,3,7,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1554,                return false;,4,0,0,0,0,1,6,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1557,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1569,"        return substring(start, size);",2,0,0,1,2,1,6,0,0,9,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1586,"        endIndex = validateRange(startIndex, endIndex);",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1587,"        return new String(buffer, startIndex, endIndex - startIndex);",0,0,0,1,2,1,0,0,0,4,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1603,        if (length <= 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1604,"            return """";",2,0,0,0,0,1,0,0,0,4,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1605,        } else if (length >= size) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1606,"            return new String(buffer, 0, size);",4,0,0,1,2,1,0,2,0,6,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1608,"            return new String(buffer, 0, length);",4,0,0,1,2,1,0,2,0,6,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1625,        if (length <= 0) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1626,"            return """";",0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1627,        } else if (length >= size) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1628,"            return new String(buffer, 0, size);",0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1630,"            return new String(buffer, size - length, length);",10,2,0,1,2,1,4,2,0,18,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1651,        if (index < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1652,            index = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1654,        if (length <= 0 || index >= size) {,6,3,0,1,3,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1655,"            return """";",0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1657,        if (size <= index + length) {,6,2,0,1,3,0,0,0,0,8,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1658,"            return new String(buffer, index, size - index);",8,1,0,1,2,1,0,2,0,11,47,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1660,"            return new String(buffer, index, length);",6,0,0,1,2,1,0,2,0,8,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1672,        char[] thisBuf = buffer;,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1673,        for (int i = 0; i < this.size; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1674,            if (thisBuf[i] == ch) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1675,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1678,        return false;,10,1,0,0,0,1,0,0,0,12,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1688,"        return indexOf(str, 0) >= 0;",6,1,0,1,2,1,10,2,0,19,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1703,"        return indexOf(matcher, 0) >= 0;",2,1,0,1,2,1,4,0,0,7,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1714,"        return indexOf(ch, 0);",0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1725,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1726,        if (startIndex >= size) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1727,            return -1;,2,0,0,0,0,1,0,0,0,3,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1729,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1730,        for (int i = startIndex; i < size; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1731,            if (thisBuf[i] == ch) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1732,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1735,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1747,"        return indexOf(str, 0);",0,0,0,1,2,1,16,0,0,16,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,2,0,0,1,2,0,0,0,0,3,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1762,        if (str == null || startIndex >= size) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1763,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1765,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1766,        if (strLen == 1) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1767,"            return indexOf(str.charAt(0), startIndex);",2,1,0,2,4,1,8,0,0,11,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1769,        if (strLen == 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1770,            return startIndex;,2,0,0,0,0,1,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1772,        if (strLen > size) {,8,1,0,1,3,0,6,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1773,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1775,        char[] thisBuf = buffer;,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1776,        int len = size - strLen + 1;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1778,        for (int i = startIndex; i < len; i++) {,12,1,0,1,3,0,0,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1779,            for (int j = 0; j < strLen; j++) {,18,2,0,1,3,0,0,0,0,22,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1780,                if (str.charAt(j) != thisBuf[i + j]) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1781,                    continue outer;,2,1,0,0,0,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1784,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1786,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1800,"        return indexOf(matcher, 0);",0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1816,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1817,        if (matcher == null || startIndex >= size) {,0,0,0,1,3,0,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1818,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1820,        int len = size;,4,0,0,0,0,0,0,0,0,4,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1821,        char[] buf = buffer;,4,0,0,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1822,        for (int i = startIndex; i < len; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1823,"            if (matcher.isMatch(buf, i, startIndex, len) > 0) {",0,1,0,2,5,0,12,0,0,13,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1824,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1827,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1838,"        return lastIndexOf(ch, size - 1);",2,1,0,1,2,1,4,0,0,7,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1849,        startIndex = (startIndex >= size ? size - 1 : startIndex);,0,0,0,1,2,0,0,0,0,3,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1850,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1851,            return -1;,2,0,0,0,0,2,6,0,0,10,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1853,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1854,            if (buffer[i] == ch) {,2,1,1,2,5,0,0,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1855,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1858,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1870,"        return lastIndexOf(str, size - 1);",4,2,0,1,2,1,4,0,0,10,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1884,        startIndex = (startIndex >= size ? size - 1 : startIndex);,14,3,0,1,2,0,0,0,0,19,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1885,        if (str == null || startIndex < 0) {,6,3,1,1,3,0,6,0,0,19,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1886,            return -1;,0,4,1,0,0,1,0,0,0,13,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1888,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1889,        if (strLen > 0 && strLen <= size) {,6,3,0,1,3,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1890,            if (strLen == 1) {,8,1,0,1,3,0,0,0,0,10,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1891,"                return lastIndexOf(str.charAt(0), startIndex);",0,0,0,2,4,1,8,0,0,8,46,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1895,            for (int i = startIndex - strLen + 1; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1896,                for (int j = 0; j < strLen; j++) {,14,1,0,1,3,1,0,0,0,17,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1897,                    if (str.charAt(j) != buffer[i + j]) {,4,2,1,3,7,0,6,0,0,14,37,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1898,                        continue outer;,2,0,0,0,0,0,0,0,0,2,15,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1901,                return i;,2,0,0,0,0,1,0,0,0,2,9,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1904,        } else if (strLen == 0) {,2,1,0,1,4,0,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1905,            return startIndex;,4,0,0,0,0,1,0,0,0,4,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1907,        return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1921,"        return lastIndexOf(matcher, size);",0,0,0,1,2,1,6,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1937,        startIndex = (startIndex >= size ? size - 1 : startIndex);,0,0,0,1,2,0,0,0,0,3,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1938,        if (matcher == null || startIndex < 0) {,10,3,0,1,3,1,0,4,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1939,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1941,        char[] buf = buffer;,4,0,0,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1942,        int endIndex = startIndex + 1;,6,1,1,0,0,0,0,2,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1943,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1944,"            if (matcher.isMatch(buf, i, 0, endIndex) > 0) {",4,1,0,2,5,0,16,0,0,21,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1945,                return i;,2,1,0,0,0,1,12,0,0,15,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1948,        return -1;,2,1,0,0,0,1,0,0,0,4,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1985,        return new StrBuilderTokenizer();,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2009,        return new StrBuilderReader();,0,1,0,1,2,1,8,2,0,11,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2034,        return new StrBuilderWriter();,4,0,0,1,2,1,6,2,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2076,        if (this == other) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2077,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2079,        if (this.size != other.size) {,6,1,0,1,3,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2080,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2082,        char thisBuf[] = this.buffer;,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2083,        char otherBuf[] = other.buffer;,6,0,0,1,2,0,0,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2084,        for (int i = size - 1; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2085,            char c1 = thisBuf[i];,12,1,1,1,2,0,6,0,0,26,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2086,            char c2 = otherBuf[i];,2,0,1,1,2,0,0,0,0,6,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2087,            if (c1 != c2 && Character.toUpperCase(c1) != Character.toUpperCase(c2)) {,0,0,0,3,7,0,0,0,0,10,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2088,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2091,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2102,        if (this == other) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2103,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2105,        if (this.size != other.size) {,6,1,0,1,3,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2106,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2108,        char thisBuf[] = this.buffer;,4,0,0,1,2,0,0,0,0,4,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2109,        char otherBuf[] = other.buffer;,0,0,0,1,2,0,8,0,0,8,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2110,        for (int i = size - 1; i >= 0; i--) {,10,2,0,1,3,0,0,0,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2111,            if (thisBuf[i] != otherBuf[i]) {,0,0,0,3,7,0,0,0,0,10,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2112,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2115,        return true;,2,0,0,0,0,1,6,0,0,10,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2126,        if (obj instanceof StrBuilder) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2127,            return equals((StrBuilder) obj);,4,1,0,2,4,1,2,2,0,9,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2129,        return false;,2,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2138,        char buf[] = buffer;,4,0,0,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2139,        int hash = 0;,6,1,0,0,0,0,0,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2140,        for (int i = size - 1; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2141,            hash = 31 * hash + buf[i];,4,2,1,1,2,0,0,0,0,11,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2143,        return hash;,4,1,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2157,"        return new String(buffer, 0, size);",8,1,0,1,2,1,0,2,0,11,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2167,"        return new StringBuffer(size).append(buffer, 0, size);",2,0,0,2,4,1,6,2,0,10,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2181,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2182,            throw new StringIndexOutOfBoundsException(startIndex);,2,0,0,1,2,0,0,2,0,4,54,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2184,        if (endIndex > size) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2185,            endIndex = size;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2187,        if (startIndex > endIndex) {,0,0,0,1,3,0,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2188,"            throw new StringIndexOutOfBoundsException(""end < start"");",0,0,0,1,2,0,0,0,0,3,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2190,        return endIndex;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2200,        if (index < 0 || index > size) {,4,1,0,1,3,0,0,0,0,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2201,            throw new StringIndexOutOfBoundsException(index);,2,0,1,1,2,0,4,2,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2203,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2325,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2324,        StrBuilderWriter() {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2326,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2331,        },0,1,0,0,1,0,0,2,0,4,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2336,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2340,            StrBuilder.this.append((char) c);,4,0,0,2,4,0,2,0,0,6,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2341,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2345,            StrBuilder.this.append(cbuf);,6,1,0,1,2,0,4,0,0,11,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2346,        },2,0,0,0,1,0,0,0,0,3,1,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2350,"            StrBuilder.this.append(cbuf, off, len);",2,0,0,1,2,0,8,0,0,10,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2351,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2355,            StrBuilder.this.append(str);,0,0,0,1,2,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2356,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2360,"            StrBuilder.this.append(str, off, len);",0,0,0,1,2,0,0,0,0,3,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2361,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2248,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2247,        StrBuilderReader() {,2,0,0,1,3,0,0,0,0,2,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2249,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2254,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2258,            if (ready() == false) {,0,1,0,2,5,0,2,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2259,                return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2261,            return StrBuilder.this.charAt(pos++);,0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2266,            if (off < 0 || len < 0 || off > b.length ||,10,7,0,0,1,0,0,0,0,17,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2268,                throw new IndexOutOfBoundsException();,0,0,0,1,2,0,0,2,0,2,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2270,            if (len == 0) {,10,1,0,1,3,0,0,0,0,11,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2271,                return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2273,            if (pos >= StrBuilder.this.size()) {,2,0,0,2,5,0,4,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2274,                return -1;,0,0,0,0,0,1,0,0,0,1,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2276,            if (pos + len > size()) {,0,0,0,2,5,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2277,                len = StrBuilder.this.size() - pos;,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2279,"            StrBuilder.this.getChars(pos, pos + len, b, off);",6,1,0,1,2,0,8,0,0,15,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2280,            pos += len;,4,0,0,0,0,0,0,0,0,5,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2281,            return len;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2286,            if (pos + n > StrBuilder.this.size()) {,6,2,0,2,5,0,2,0,0,10,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2287,                n = StrBuilder.this.size() - pos;,6,1,0,1,2,0,2,0,0,10,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2289,            if (n < 0) {,4,1,0,1,3,0,0,0,0,5,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2290,                return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2292,            pos += n;,4,0,0,0,0,0,0,0,0,5,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2293,            return n;,4,1,1,0,0,1,2,0,0,12,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2298,            return pos < StrBuilder.this.size();,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2303,            return true;,2,0,0,0,0,1,0,2,0,4,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2308,            mark = pos;,4,0,0,0,0,0,0,0,0,5,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2309,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2313,            pos = mark;,0,0,0,0,0,0,0,0,0,0,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2314,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1672,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1673,        for (int i = 0; i < thisBuf.length; i++) {,0,0,0,1,3,0,0,0,0,4,42,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1674,            if (thisBuf[i] == ch) {,2,1,1,2,5,0,0,0,0,7,23,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1675,                return true;,2,0,0,0,0,1,4,4,0,11,12,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1202,        int len = (str == null ? 0 : str.length());,0,0,0,2,4,0,6,0,0,6,43,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1203,        if (len > 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1204,"            int index = indexOf(str, 0);",0,0,0,1,2,0,0,0,0,3,28,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1205,            if (index >= 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1206,"                deleteImpl(index, index + len, len);",0,0,0,1,2,0,0,0,0,3,36,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1209,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1762,        if (str == null || startIndex >= size) {,0,0,0,1,3,0,0,0,0,4,40,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1765,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1766,        if (strLen == 1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1769,        if (strLen == 0) {,4,1,0,1,3,3,2,2,0,13,18,1,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1772,        if (strLen > size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1775,        char[] thisBuf = buffer;,2,0,0,1,2,3,0,0,0,5,24,2,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1776,        int len = size - strLen + 1;,0,0,0,0,0,0,0,0,0,0,28,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1778,        for (int i = startIndex; i < len; i++) {,10,1,0,1,3,0,0,0,0,12,40,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1779,            for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,0,0,0,10,34,7,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1780,                if (str.charAt(j) != thisBuf[i + j]) {,4,2,1,3,7,0,6,0,0,14,38,9,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1781,                    continue outer;,0,0,0,0,0,0,0,0,0,0,15,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1784,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",4,1,0,1,2,0,12,0,0,17,72,5,0.06667,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1115,        size -= len;,4,0,0,0,0,0,0,0,0,5,12,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1116,    },4,0,0,0,1,0,0,2,0,6,1,5,0.06667,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,121,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.01429,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,122,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.01429,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,125,            buffer = new char[str.length() + CAPACITY];,0,0,0,2,4,0,0,0,0,1,43,8,0.01429,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,126,            append(str);,0,0,0,1,2,0,4,0,0,4,12,7,0.01429,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,128,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01429,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1762,        if (str == null || startIndex >= size) {,0,0,0,1,3,0,0,0,0,4,40,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1765,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1766,        if (strLen == 1) {,8,2,0,1,3,0,0,0,0,12,18,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1769,        if (strLen == 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1772,        if (strLen > size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1775,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,8,1,0,0,0,0,0,0,0,9,34,5,0.57143,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1778,        for (int i = startIndex; i < len; i++) {,10,1,0,1,3,0,0,0,0,12,40,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1779,            for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,0,0,0,10,34,7,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1780,                if (str.charAt(j) != thisBuf[i + j]) {,4,2,1,3,7,0,6,0,0,14,38,9,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1781,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1784,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1184,        int len = (str == null ? 0 : str.length());,4,1,0,2,4,0,4,0,0,9,43,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1185,        if (len > 0) {,12,2,0,1,3,3,0,4,0,22,14,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1186,"            int index = indexOf(str, 0);",2,0,0,1,2,0,4,0,0,6,28,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1187,            while (index >= 0) {,0,0,0,1,3,0,0,0,0,4,20,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1188,"                deleteImpl(index, index + len, len);",0,0,0,1,2,0,0,0,0,3,36,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1189,"                index = indexOf(str, index);",2,0,0,1,2,0,6,0,0,9,28,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1202,        int len = (str == null ? 0 : str.length());,0,0,0,2,4,0,0,0,0,6,43,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1203,        if (len > 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1204,"            int index = indexOf(str, 0);",0,0,0,1,2,0,0,0,0,3,28,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1205,            if (index >= 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1206,"                deleteImpl(index, index + len, len);",0,0,0,1,2,0,0,0,0,3,36,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1209,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1747,"        return indexOf(str, 0);",4,1,0,1,2,1,8,0,0,14,23,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",4,1,0,1,2,0,12,0,0,17,72,5,0.30769,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1115,        size -= len;,0,0,0,0,0,0,0,0,0,0,12,4,0.30769,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1116,    },0,0,0,0,1,0,0,0,0,1,1,4,0.30769,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,121,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.05882,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,122,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.05882,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,125,            buffer = new char[str.length() + CAPACITY];,4,1,0,2,4,0,4,0,0,10,43,6,0.05882,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,126,            append(str);,0,0,0,1,2,0,4,0,0,4,12,7,0.05882,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,128,    },0,0,0,0,1,0,4,0,0,4,1,5,0.05882,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,474,            int len = length();,2,0,0,1,2,0,2,0,0,4,19,7,0.03571,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,475,            ensureCapacity(len + strLen);,0,0,0,1,2,0,0,0,0,3,29,4,0.03571,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,476,"            str.getChars(0, strLen, buffer, len);",8,1,0,1,2,0,10,0,0,19,37,3,0.03571,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,477,            size += strLen;,0,0,0,0,0,0,0,0,0,0,15,4,0.03571,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,840,                    if (entityName.length() == 1) {,0,1,0,2,5,0,4,0,0,5,31,11,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,843,                        char charAt1 = entityName.charAt(1);,2,0,0,1,2,0,14,0,0,16,36,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,845,                            if (charAt1 == 'x' || charAt1=='X') {,4,3,0,1,3,0,0,0,0,9,37,15,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,848,                                entityValue = Integer.parseInt(entityName.substring(1));,4,1,0,2,4,0,8,0,0,14,56,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,852,                        },4,1,0,0,1,0,6,0,0,12,1,8,0.5,1,1
defect4j,lang,org/apache/commons/lang/Entities,62,853,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,862,                    buf.append((char) (entityValue));,2,0,0,3,6,0,4,0,0,6,33,11,0.25,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,819,        StringBuffer buf = new StringBuffer(str.length());,6,0,0,2,4,0,4,4,0,15,50,1,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,820,"        buf.append(str.substring(0, firstAmp));",0,0,0,2,4,0,0,0,0,6,39,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,821,        for (int i = firstAmp; i < str.length(); ++i) {,8,1,0,2,5,0,4,0,0,14,47,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,822,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,823,            if (ch == '&') {,2,1,0,1,3,0,0,0,0,4,16,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,824,"                int semi = str.indexOf(';', i + 1);",4,1,0,1,2,0,4,0,0,10,35,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,825,                if (semi == -1) {,2,1,0,1,3,0,0,0,0,4,17,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,829,"                int amph = str.indexOf('&', i + 1);",8,3,0,1,2,0,4,0,0,17,35,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,830,                if( amph != -1 && amph < semi ) {,6,3,0,1,3,0,0,0,0,10,33,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,835,"                String entityName = str.substring(i + 1, semi);",2,0,0,1,2,0,0,0,0,2,47,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,837,                if (entityName.length() == 0) {,0,1,0,2,5,0,4,0,0,5,31,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,839,                } else if (entityName.charAt(0) == '#') {,0,1,0,2,6,0,4,0,0,6,41,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,857,                if (entityValue == -1) {,2,1,0,1,3,0,4,0,0,10,24,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,864,                i = semi;,0,0,0,0,0,0,0,0,0,0,9,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,865,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,869,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,814,        int firstAmp = str.indexOf('&');,2,0,0,1,2,0,4,0,0,7,32,5,0.03704,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,815,        if (firstAmp < 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.03704,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,83,"        protected Entry(int hash, int key, Object value, Entry next) {",10,0,0,1,3,1,0,4,0,15,62,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,84,            this.hash = hash;,6,0,0,0,0,0,6,2,0,15,17,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,85,            this.key = key;,8,2,0,0,0,0,0,2,0,13,15,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,86,            this.value = value;,0,0,0,0,0,0,0,0,0,0,19,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,87,            this.next = next;,4,0,0,0,0,0,0,0,0,5,17,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,88,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,502,    static class LookupEntityMap extends PrimitiveEntityMap {,2,0,0,0,1,1,0,2,0,5,57,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,504,        private int LOOKUP_TABLE_SIZE = 256;,2,0,0,0,0,1,0,0,0,3,36,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,419,    static class PrimitiveEntityMap implements EntityMap {,4,0,0,0,1,3,0,2,0,10,54,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,420,        private Map mapNameToValue = new HashMap();,2,0,0,1,2,1,0,4,0,7,43,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,421,        private IntHashMap mapValueToName = new IntHashMap();,4,0,0,1,2,4,2,6,0,17,53,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,427,"            mapNameToValue.put(name, new Integer(value));",0,0,0,2,4,0,0,0,0,6,45,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,428,"            mapValueToName.put(value, name);",0,0,0,1,2,0,0,0,0,3,32,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,429,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,39,class Entities {,0,0,0,0,1,0,0,0,0,1,16,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,693,    EntityMap map = new Entities.LookupEntityMap();,6,0,0,1,2,0,0,2,0,8,47,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,41,    private static final String[][] BASIC_ARRAY = {,8,3,0,2,5,3,4,4,0,22,47,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,48,    private static final String[][] APOS_ARRAY = {,2,0,0,2,5,3,0,2,0,7,46,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,53,    static final String[][] ISO8859_1_ARRAY = {,2,0,0,2,5,2,0,2,0,6,43,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,154,    static final String[][] HTML40_ARRAY = {,2,0,0,2,5,2,0,2,0,6,40,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,366,        XML = new Entities();,4,0,0,1,2,3,0,6,0,14,21,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,367,        XML.addEntities(BASIC_ARRAY);,0,0,0,1,2,0,0,0,0,3,29,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,368,        XML.addEntities(APOS_ARRAY);,0,0,0,1,2,0,0,0,0,3,28,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,372,        HTML32 = new Entities();,2,0,0,1,2,0,0,2,0,5,24,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,373,        HTML32.addEntities(BASIC_ARRAY);,0,0,0,1,2,0,6,0,0,6,32,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,374,        HTML32.addEntities(ISO8859_1_ARRAY);,0,0,0,1,2,0,6,0,0,6,36,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,378,        HTML40 = new Entities();,0,0,0,1,2,0,0,0,0,3,24,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,379,        fillWithHtml40Entities(HTML40);,0,0,0,1,2,0,4,0,0,4,31,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,380,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,388,        entities.addEntities(BASIC_ARRAY);,0,0,0,1,2,0,0,0,0,3,34,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,389,        entities.addEntities(ISO8859_1_ARRAY);,0,0,0,1,2,0,0,0,0,3,38,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,390,        entities.addEntities(HTML40_ARRAY);,0,0,0,1,2,0,6,0,0,6,35,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,391,    },2,0,0,0,1,0,0,0,0,2,1,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,701,        for (int i = 0; i < entityArray.length; ++i) {,12,2,0,1,3,0,0,0,0,15,46,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,702,"            addEntity(entityArray[i][0], Integer.parseInt(entityArray[i][1]));",0,0,0,6,12,0,0,0,0,18,66,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,704,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,713,"        map.add(name, value);",0,0,0,1,2,0,8,0,0,8,21,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,714,    },2,0,0,0,1,0,0,2,0,4,1,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,96,"        this(20, 0.75f);",0,0,0,1,2,0,0,0,0,3,16,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,97,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,121,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,122,        if (initialCapacity < 0) {,2,1,0,1,3,0,0,0,0,3,26,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,125,        if (loadFactor <= 0) {,0,0,0,1,3,0,0,0,0,4,22,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,128,        if (initialCapacity == 0) {,2,1,0,1,3,0,0,0,0,3,27,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,132,        this.loadFactor = loadFactor;,4,0,0,0,0,0,0,0,0,5,29,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,133,        table = new Entry[initialCapacity];,2,0,1,1,2,0,0,2,0,7,35,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,134,        threshold = (int) (initialCapacity * loadFactor);,0,0,0,2,4,0,0,0,0,6,49,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,135,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,258,        int oldCapacity = table.length;,6,0,0,0,0,0,0,0,0,6,31,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,259,        Entry oldMap[] = table;,0,0,0,1,2,0,0,0,0,3,23,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,261,        int newCapacity = oldCapacity * 2 + 1;,0,0,0,0,0,0,0,0,0,0,38,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,262,        Entry newMap[] = new Entry[newCapacity];,2,0,1,2,4,0,0,4,0,8,40,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,264,        threshold = (int) (newCapacity * loadFactor);,14,2,0,2,4,0,0,0,0,18,45,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,265,        table = newMap;,4,0,0,0,0,0,6,0,0,11,15,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,267,        for (int i = oldCapacity; i-- > 0;) {,8,1,0,1,3,0,0,0,0,10,37,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,268,            for (Entry old = oldMap[i]; old != null;) {,0,0,0,2,5,0,0,0,0,7,43,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,269,                Entry e = old;,4,0,0,0,0,0,0,2,0,6,14,8,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,270,                old = old.next;,8,0,0,0,0,3,2,0,0,15,15,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,272,                int index = (e.hash & 0x7FFFFFFF) % newCapacity;,8,2,0,1,2,0,0,0,0,10,48,9,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,273,                e.next = newMap[index];,0,0,0,1,2,0,0,0,0,3,23,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,274,                newMap[index] = e;,2,0,1,1,2,0,0,0,0,7,18,8,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,275,            },0,0,0,0,1,0,0,0,0,1,1,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,277,    },2,1,0,0,1,0,0,0,0,3,1,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,296,        Entry tab[] = table;,8,2,0,1,2,0,0,0,0,11,20,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,297,        int hash = key;,4,0,0,0,0,0,0,0,0,4,15,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,298,        int index = (hash & 0x7FFFFFFF) % tab.length;,8,2,0,1,2,0,0,0,0,10,45,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,299,        for (Entry e = tab[index]; e != null; e = e.next) {,0,0,0,2,5,0,0,0,0,7,51,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,300,            if (e.hash == hash) {,6,1,0,1,3,0,0,0,0,7,21,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,307,        if (count >= threshold) {,0,0,0,1,3,0,0,0,0,4,25,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,309,            rehash();,0,0,0,1,2,0,2,0,0,2,9,7,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,311,            tab = table;,4,0,0,0,0,0,0,0,0,5,12,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,312,            index = (hash & 0x7FFFFFFF) % tab.length;,0,0,0,1,2,0,0,0,0,3,41,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,316,"        Entry e = new Entry(hash, key, value, tab[index]);",12,0,1,2,4,0,0,4,0,21,50,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,317,        tab[index] = e;,2,0,1,1,2,0,0,0,0,7,15,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,318,        count++;,0,0,0,0,0,0,0,0,0,0,8,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,319,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,247,"        return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());",0,0,0,2,4,1,12,0,0,13,81,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,330,"            if (Token.containsTokenWithValue(tokens, M)) {",0,0,0,2,5,0,8,0,0,8,46,7,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,331,                months += 12 * years;,6,4,0,0,0,0,8,0,0,21,21,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,332,                years = 0;,2,0,0,0,0,0,0,0,0,3,10,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,344,            hours += 24 * days;,4,1,0,0,0,0,0,0,0,6,19,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,345,            days = 0;,4,0,0,0,0,0,0,0,0,5,9,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,348,            minutes += 60 * hours;,4,1,0,0,0,0,0,0,0,6,22,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,349,            hours = 0;,4,0,0,0,0,0,4,4,0,13,10,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,352,            seconds += 60 * minutes;,4,1,0,0,0,0,0,0,0,6,24,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,353,            minutes = 0;,2,0,0,0,0,0,0,0,0,3,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,356,            milliseconds += 1000 * seconds;,0,0,0,0,0,0,0,0,0,0,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,357,            seconds = 0;,2,0,0,0,0,0,0,0,0,3,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,265,        long millis = endMillis - startMillis;,10,1,0,0,0,0,4,4,0,20,38,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,266,        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {,0,0,0,1,3,0,0,2,0,2,45,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,270,        Token[] tokens = lexx(format);,2,0,0,2,4,0,4,2,0,8,30,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,274,        Calendar start = Calendar.getInstance(timezone);,2,0,0,1,2,0,6,2,0,10,48,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,275,        start.setTime(new Date(startMillis));,4,0,0,2,4,0,10,2,0,18,37,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,276,        Calendar end = Calendar.getInstance(timezone);,2,0,0,1,2,0,6,2,0,10,46,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,277,        end.setTime(new Date(endMillis));,2,0,0,2,4,0,4,2,0,8,33,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,280,        int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);,0,0,0,2,4,0,0,0,0,6,83,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,281,        int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);,0,0,0,2,4,0,0,0,0,6,68,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,282,        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);,14,2,0,2,4,0,8,0,0,24,68,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,283,        int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);,0,0,0,2,4,0,0,0,0,6,76,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,284,        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);,10,1,0,2,4,0,8,0,0,19,77,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,285,        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);,10,1,0,2,4,0,8,0,0,19,65,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,286,        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);,14,4,0,2,4,0,12,0,0,31,62,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,289,        while (milliseconds < 0) {,2,1,0,1,3,0,0,0,0,3,26,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,293,        while (seconds < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,297,        while (minutes < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,301,        while (hours < 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,305,        while (days < 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,314,        while (months < 0) {,2,1,0,1,3,0,0,0,0,3,20,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,318,"        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);",6,0,0,1,2,0,8,0,0,15,81,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,319,"        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);",0,0,0,1,2,0,0,0,0,3,66,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,320,"        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);",6,0,0,1,2,0,8,0,0,15,66,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,321,"        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);",6,0,0,1,2,0,8,0,0,15,67,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,322,"        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);",6,0,0,1,2,0,8,0,0,15,66,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,323,"        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);",0,0,0,1,2,0,0,0,0,3,63,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,324,"        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);",2,0,1,1,2,0,4,2,0,10,60,3,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,329,"        if (!Token.containsTokenWithValue(tokens, y)) {",0,0,0,2,5,0,12,0,0,13,47,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,339,"        if (!Token.containsTokenWithValue(tokens, M)) {",2,0,0,2,5,3,16,2,0,25,47,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,343,"        if (!Token.containsTokenWithValue(tokens, d)) {",0,0,0,2,5,0,0,0,0,7,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,347,"        if (!Token.containsTokenWithValue(tokens, H)) {",2,0,0,2,5,0,8,0,0,11,47,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,351,"        if (!Token.containsTokenWithValue(tokens, m)) {",0,0,0,2,5,0,8,0,0,9,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,355,"        if (!Token.containsTokenWithValue(tokens, s)) {",2,1,0,2,5,0,8,0,0,12,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,360,"        return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);",0,0,0,1,2,1,20,0,0,20,96,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,433,"        end.add( field, -1 * difference );",8,1,0,1,2,3,12,4,0,30,34,1,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,434,        int endValue = end.get(field);,4,0,0,1,2,0,10,0,0,14,30,1,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,435,        int startValue = start.get(field);,2,0,0,1,2,3,2,2,0,10,34,2,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,436,        if (endValue < startValue) {,4,1,0,1,3,0,0,0,0,5,28,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,441,            return 0;,0,0,0,0,0,1,4,0,0,4,9,7,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,395,"                    buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(months), count, '0') : Integer",2,0,0,2,5,0,18,0,0,21,96,12,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,397,                    lastOutputSeconds = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,487,                case 'M'  : value = M; break;,4,0,0,0,0,0,0,0,0,6,29,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,63,3865,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,63,3868,        int pads = size - str.length();,0,0,0,1,2,0,0,0,0,3,31,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,63,3869,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,63,3870,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,534,            return false;,4,1,0,0,0,1,0,0,0,6,13,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,        return iValue - ((ValuedEnum) other).iValue;,6,1,0,2,4,1,0,2,0,9,44,4,0.25,1,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,126,        super(name);,2,0,0,1,2,0,0,0,0,2,12,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,127,        iValue = value;,4,0,0,0,0,0,0,0,0,5,15,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,128,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,519,        return getClass();,0,0,0,1,2,1,2,0,0,2,18,5,0.01754,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,314,        iName = name;,4,0,0,0,0,0,0,0,0,5,13,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,315,        iHashCode = 7 + getEnumClass().hashCode() + 3 * name.hashCode();,2,2,0,3,6,0,8,0,0,13,64,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,317,    },2,1,0,0,1,0,0,0,0,3,1,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,339,                ok = true;,6,1,0,0,0,0,0,0,0,9,10,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,340,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,349,        Entry entry = (Entry) cEnumClasses.get(enumClass);,0,0,0,2,4,0,0,0,0,6,50,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,350,        if (entry == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,351,            entry = createEntry(enumClass);,2,0,0,1,2,0,6,2,0,10,31,12,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,352,"            cEnumClasses.put(enumClass, entry);",0,0,0,1,2,0,0,0,0,3,35,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,354,        if (entry.map.containsKey(name)) {,4,0,0,2,5,0,4,0,0,8,34,5,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,357,"        entry.map.put(name, this);",4,0,0,1,2,0,4,0,0,8,26,5,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,358,        entry.list.add(this);,8,0,0,1,2,0,2,0,0,11,21,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,359,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,484,        Entry entry = new Entry();,6,1,0,1,2,3,10,2,0,24,26,1,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,485,        Class cls = enumClass.getSuperclass();,2,0,0,1,2,0,4,2,0,8,38,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,486,        while (cls != null && cls != Enum.class && cls != ValuedEnum.class) {,6,5,0,1,3,0,0,4,0,15,69,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,495,        return entry;,2,0,0,0,0,1,0,0,0,2,13,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,297,          super();,4,2,0,1,2,0,8,2,0,16,8,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,279,        final Map map = new HashMap();,2,0,0,1,2,1,0,4,0,7,30,3,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,283,        final Map unmodifiableMap = Collections.unmodifiableMap(map);,2,0,0,1,2,1,6,2,0,11,61,3,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,287,        final List list = new ArrayList(25);,2,0,0,1,2,1,0,4,0,7,36,3,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,291,        final List unmodifiableList = Collections.unmodifiableList(list);,2,0,0,1,2,1,6,2,0,11,65,3,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,298,        },0,0,0,0,1,0,0,0,0,1,1,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,335,        Class cls = getClass();,4,0,0,1,2,0,2,4,0,10,23,3,0.01515,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,336,        boolean ok = false;,0,0,0,0,0,0,0,0,0,0,19,4,0.01515,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,338,            if (cls == enumClass) {,4,1,0,1,3,0,0,0,0,5,23,6,0.01515,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,344,        if (ok == false) {,6,1,0,1,3,3,0,2,0,13,18,1,0.01515,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,543,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,546,        Calendar gval = Calendar.getInstance();,0,0,0,1,2,0,0,0,0,3,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,547,        gval.setTime(date);,0,0,0,1,2,0,0,0,0,3,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,548,"        modify(gval, field, false);",0,0,0,1,2,0,6,0,0,7,27,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,549,        return gval.getTime();,2,1,0,1,2,1,4,0,0,7,22,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,620,        if (val.get(Calendar.YEAR) > 280000000) {,4,1,0,2,5,0,4,0,0,9,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,641,        boolean roundUp = false;,0,0,0,0,0,0,0,0,0,0,24,4,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,642,        for (int i = 0; i < fields.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,643,            for (int j = 0; j < fields[i].length; j++) {,0,0,0,2,5,0,0,0,0,7,44,4,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,644,                if (fields[i][j] == field) {,2,1,1,3,7,0,0,0,0,9,28,8,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,646,                    if (round && roundUp) {,4,1,0,1,3,0,0,0,0,5,23,10,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,663,                    return;,0,0,0,0,0,1,4,0,0,5,7,11,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,667,            int offset = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,668,            boolean offsetSet = false;,2,0,0,0,0,0,0,0,0,4,26,3,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,670,            switch (field) {,2,0,0,1,3,0,0,0,0,2,16,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,700,            if (!offsetSet) {,10,2,0,1,3,0,4,0,0,17,17,3,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,701,                int min = val.getActualMinimum(fields[i][0]);,6,3,1,3,6,0,8,0,0,22,45,3,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,702,                int max = val.getActualMaximum(fields[i][0]);,0,0,0,3,6,0,0,0,0,9,45,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,704,                offset = val.get(fields[i][0]) - min;,4,1,1,3,6,0,4,0,0,14,37,8,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,706,                roundUp = offset > ((max - min) / 2);,0,0,0,2,4,0,0,0,0,6,37,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,709,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);",2,1,1,6,12,0,8,0,0,19,54,7,0.25,1,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,44,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");",4,3,0,1,2,3,8,2,0,21,73,1,0.05,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,72,    private static final int[][] fields = {,4,0,0,2,5,3,10,0,0,18,39,1,0.05,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,123,        super();,4,1,0,1,2,2,0,4,0,11,8,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,124,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,141,        if (date1 == null || date2 == null) {,4,3,0,1,3,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,142,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,144,        Calendar cal1 = Calendar.getInstance();,4,1,0,1,2,0,14,2,0,22,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,145,        cal1.setTime(date1);,0,0,0,1,2,0,6,0,0,6,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,146,        Calendar cal2 = Calendar.getInstance();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,147,        cal2.setTime(date2);,0,0,0,1,2,0,6,0,0,6,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,148,"        return isSameDay(cal1, cal2);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,165,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,166,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,168,        return (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&,2,0,0,2,5,4,0,4,0,10,59,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,186,        if (date1 == null || date2 == null) {,4,3,0,1,3,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,187,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,189,        return date1.getTime() == date2.getTime();,2,1,0,2,4,4,8,4,0,18,42,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,204,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,205,"            throw new IllegalArgumentException(""The date must not be null"");",2,0,0,1,2,3,4,6,0,17,64,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,207,        return cal1.getTime().getTime() == cal2.getTime().getTime();,0,0,0,4,8,1,0,0,0,13,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,224,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,225,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,227,        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&,8,8,0,2,5,1,8,0,0,24,75,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,252,        if (str == null || parsePatterns == null) {,6,3,0,1,3,3,0,4,0,16,43,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,253,"            throw new IllegalArgumentException(""Date and Patterns must not be null"");",0,0,0,1,2,0,0,0,0,3,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,256,        SimpleDateFormat parser = null;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,257,        ParsePosition pos = new ParsePosition(0);,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,258,        for (int i = 0; i < parsePatterns.length; i++) {,0,0,0,1,3,0,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,259,            if (i == 0) {,4,2,0,1,3,0,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,260,                parser = new SimpleDateFormat(parsePatterns[0]);,2,0,0,2,4,0,4,0,0,6,48,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,262,                parser.applyPattern(parsePatterns[i]);,0,0,1,2,4,0,4,0,0,8,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,264,            pos.setIndex(0);,0,0,0,1,2,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,265,"            Date date = parser.parse(str, pos);",2,0,0,1,2,0,8,2,0,12,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,266,            if (date != null && pos.getIndex() == str.length()) {,0,0,0,3,7,0,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,267,                return date;,2,0,0,0,0,1,0,2,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,270,"        throw new ParseException(""Unable to parse the date: "" + str, -1);",2,1,0,1,2,0,0,2,0,7,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,284,"        return add(date, Calendar.YEAR, amount);",4,0,0,1,2,1,6,0,0,10,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,298,"        return add(date, Calendar.MONTH, amount);",6,1,0,1,2,4,18,2,0,34,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,312,"        return add(date, Calendar.WEEK_OF_YEAR, amount);",0,0,0,1,2,1,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,326,"        return add(date, Calendar.DAY_OF_MONTH, amount);",4,0,0,1,2,1,6,0,0,10,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,340,"        return add(date, Calendar.HOUR_OF_DAY, amount);",4,0,0,1,2,1,0,0,0,4,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,354,"        return add(date, Calendar.MINUTE, amount);",4,0,0,1,2,1,12,0,0,16,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,368,"        return add(date, Calendar.SECOND, amount);",2,0,0,1,2,1,1,0,0,3,42,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,382,"        return add(date, Calendar.MILLISECOND, amount);",8,0,0,1,2,1,6,0,0,16,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,397,        if (date == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,398,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,400,        Calendar c = Calendar.getInstance();,2,0,0,1,2,0,0,2,0,4,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,401,        c.setTime(date);,0,0,0,1,2,0,6,0,0,6,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,402,"        c.add(calendarField, amount);",2,0,0,1,2,3,12,0,0,18,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,403,        return c.getTime();,0,0,0,1,2,1,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,436,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,437,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,439,        Calendar gval = Calendar.getInstance();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,440,        gval.setTime(date);,10,3,0,1,2,0,22,4,0,40,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,441,"        modify(gval, field, true);",0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,442,        return gval.getTime();,2,0,0,1,2,1,0,0,0,3,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,474,        if (date == null) {,6,1,0,1,3,0,0,0,0,9,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,475,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,477,        Calendar rounded = (Calendar) date.clone();,0,0,0,2,4,0,0,0,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,478,"        modify(rounded, field, true);",0,0,0,1,2,0,6,0,0,7,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,479,        return rounded;,2,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,513,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,514,"            throw new IllegalArgumentException(""The date must not be null"");",4,0,0,1,2,1,0,4,0,11,64,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,516,        if (date instanceof Date) {,6,0,0,1,3,3,0,4,0,13,27,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,517,"            return round((Date) date, field);",0,0,0,2,4,1,0,0,0,7,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,518,        } else if (date instanceof Calendar) {,4,3,0,1,4,0,4,0,0,12,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,519,"            return round((Calendar) date, field).getTime();",2,0,0,3,6,1,14,2,0,18,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,521,"            throw new ClassCastException(""Could not round "" + date);",2,1,0,1,2,0,0,2,0,6,56,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,544,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,4,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,569,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,570,"            throw new IllegalArgumentException(""The date must not be null"");",12,1,0,1,2,0,0,0,0,15,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,572,        Calendar truncated = (Calendar) date.clone();,2,0,0,2,4,0,4,4,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,573,"        modify(truncated, field, false);",0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,574,        return truncated;,4,1,0,0,0,1,0,0,0,5,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,598,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,599,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,5,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,601,        if (date instanceof Date) {,0,0,0,1,3,0,6,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,602,"            return truncate((Date) date, field);",2,0,0,2,4,1,0,0,0,3,36,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,603,        } else if (date instanceof Calendar) {,2,0,0,1,4,0,0,2,0,4,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,604,"            return truncate((Calendar) date, field).getTime();",0,0,0,3,6,1,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,606,"            throw new ClassCastException(""Could not truncate "" + date);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,621,"            throw new ArithmeticException(""Calendar value too large for accurate calculations"");",0,0,0,1,2,0,0,2,0,3,84,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,647,                        if (field == DateUtils.SEMI_MONTH) {,6,1,0,1,3,0,0,0,0,7,36,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,651,                            if (val.get(Calendar.DATE) == 1) {,4,1,0,2,5,0,4,0,0,9,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,652,"                                val.add(Calendar.DATE, 15);",4,0,0,1,2,0,4,0,0,8,27,17,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,654,"                                val.add(Calendar.DATE, -15);",6,0,0,1,2,3,4,0,0,14,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,655,"                                val.add(Calendar.MONTH, 1);",4,1,0,1,2,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,660,"                            val.add(fields[i][0], 1);",0,1,0,3,6,0,6,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,672,                    if (fields[i][0] == Calendar.DATE) {,0,0,0,3,7,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,676,                        offset = val.get(Calendar.DATE) - 1;,8,3,0,1,2,0,0,0,0,12,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,679,                        if (offset >= 15) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,680,                            offset -= 15;,2,0,1,0,0,0,0,4,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,683,                        roundUp = offset > 7;,10,1,1,0,0,3,0,6,0,27,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,684,                        offsetSet = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,688,                    if (fields[i][0] == Calendar.HOUR_OF_DAY) {,2,0,0,3,7,0,0,0,0,2,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,691,                        offset = val.get(Calendar.HOUR_OF_DAY);,8,0,0,1,2,0,4,0,0,13,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,692,                        if (offset >= 12) {,2,0,0,1,3,3,0,4,0,9,19,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,693,                            offset -= 12;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,695,                        roundUp = offset > 6;,0,0,0,0,0,0,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,696,                        offsetSet = true;,2,1,0,0,0,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,711,"        throw new IllegalArgumentException(""The field "" + field + "" is not supported"");",2,1,0,1,2,0,4,0,0,7,79,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,741,        if (focus == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,742,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,744,        Calendar gval = Calendar.getInstance();,8,0,0,1,2,6,6,6,0,27,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,745,        gval.setTime(focus);,0,0,0,1,2,0,6,0,0,6,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,746,"        return iterator(gval, rangeStyle);",0,0,1,1,2,1,16,0,0,21,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,774,        if (focus == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,775,"            throw new IllegalArgumentException(""The date must not be null"");",8,1,0,1,2,0,8,0,0,17,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,777,        Calendar start = null;,0,0,0,0,0,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,778,        Calendar end = null;,0,0,0,0,0,0,0,0,0,0,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,779,        int startCutoff = Calendar.SUNDAY;,8,0,0,0,0,1,4,2,0,15,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,780,        int endCutoff = Calendar.SATURDAY;,2,0,0,0,0,0,6,0,0,8,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,781,        switch (rangeStyle) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,785,"                start = truncate(focus, Calendar.MONTH);",0,0,0,1,2,0,10,0,0,10,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,787,                end = (Calendar) start.clone();,2,0,0,2,4,0,4,2,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,788,"                end.add(Calendar.MONTH, 1);",0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,789,"                end.add(Calendar.DATE, -1);",0,0,0,1,2,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,791,                if (rangeStyle == RANGE_MONTH_MONDAY) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,792,                    startCutoff = Calendar.MONDAY;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,793,                    endCutoff = Calendar.SUNDAY;,0,0,0,0,0,0,8,2,0,10,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,801,"                start = truncate(focus, Calendar.DATE);",2,1,0,1,2,0,0,2,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,802,"                end = truncate(focus, Calendar.DATE);",8,0,0,1,2,0,4,0,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,803,                switch (rangeStyle) {,2,0,0,1,3,0,4,0,0,6,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,806,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,808,                        startCutoff = Calendar.MONDAY;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,809,                        endCutoff = Calendar.SUNDAY;,6,0,0,0,0,0,0,0,0,7,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,810,                        break;,6,1,0,0,0,0,0,0,0,8,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,812,                        startCutoff = focus.get(Calendar.DAY_OF_WEEK);,6,0,0,1,2,0,4,0,0,11,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,813,                        endCutoff = startCutoff - 1;,4,1,0,0,0,0,0,0,0,6,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,814,                        break;,6,0,0,0,0,0,8,0,0,15,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,816,                        startCutoff = focus.get(Calendar.DAY_OF_WEEK) - 3;,12,0,0,1,2,0,14,4,0,31,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,817,                        endCutoff = focus.get(Calendar.DAY_OF_WEEK) + 3;,0,0,0,1,2,0,0,0,0,3,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,820,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,822,"                throw new IllegalArgumentException(""The range style "" + rangeStyle + "" is not valid."");",2,1,0,1,2,0,0,2,0,7,87,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,824,        if (startCutoff < Calendar.SUNDAY) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,825,            startCutoff += 7;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,827,        if (startCutoff > Calendar.SATURDAY) {,14,1,0,1,3,3,6,8,0,34,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,828,            startCutoff -= 7;,10,0,0,0,0,0,0,4,0,15,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,830,        if (endCutoff < Calendar.SUNDAY) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,831,            endCutoff += 7;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,833,        if (endCutoff > Calendar.SATURDAY) {,8,2,1,1,3,0,0,0,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,834,            endCutoff -= 7;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,836,        while (start.get(Calendar.DAY_OF_WEEK) != startCutoff) {,0,0,0,2,5,0,0,0,0,7,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,837,"            start.add(Calendar.DATE, -1);",2,0,0,1,2,3,2,2,0,10,29,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,839,        while (end.get(Calendar.DAY_OF_WEEK) != endCutoff) {,6,1,0,2,5,0,4,0,0,12,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,840,"            end.add(Calendar.DATE, 1);",2,0,0,1,2,3,4,0,0,10,26,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,842,"        return new DateIterator(start, end);",0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,865,        if (focus == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,866,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,868,        if (focus instanceof Date) {,2,0,0,1,3,0,6,2,0,10,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,869,"            return iterator((Date) focus, rangeStyle);",8,3,1,2,4,1,6,2,0,24,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,870,        } else if (focus instanceof Calendar) {,2,0,0,1,4,0,0,2,0,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,871,"            return iterator((Calendar) focus, rangeStyle);",2,0,0,2,4,1,4,2,0,8,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,873,"            throw new ClassCastException(""Could not iterate based on "" + focus);",2,1,0,1,2,0,0,2,0,6,68,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,891,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,892,            this.endFinal = endFinal;,4,0,0,0,0,0,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,893,            spot = startFinal;,4,0,0,0,0,0,6,0,0,11,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,894,"            spot.add(Calendar.DATE, -1);",4,0,0,1,2,0,4,0,0,9,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,895,        },0,0,0,0,1,0,6,0,0,6,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,903,            return spot.before(endFinal);,0,0,0,1,2,1,6,0,0,6,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,912,            if (spot.equals(endFinal)) {,0,0,0,2,5,0,6,0,0,6,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,913,                throw new NoSuchElementException();,0,0,0,1,2,0,0,2,0,2,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,915,"            spot.add(Calendar.DATE, 1);",8,1,0,1,2,0,10,0,0,20,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,916,            return spot.clone();,2,1,0,1,2,1,4,0,0,8,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,926,            throw new UnsupportedOperationException();,0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0
