dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,587,                    Double d = createDouble(str);,8,0,0,1,2,0,0,4,0,12,29,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,453,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,456,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,459,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,2,0,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,466,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",6,0,0,3,7,0,0,4,0,10,52,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,469,        char lastChar = str.charAt(str.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,473,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,474,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,0,0,0,2,4,0,0,0,0,6,53,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,476,        if (decPos > -1) {,2,0,0,1,3,0,0,2,0,4,18,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,488,            if (expPos > -1) {,8,1,0,1,3,0,4,2,0,17,18,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,491,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,493,            dec = null;,4,0,0,0,0,0,0,0,0,5,11,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,495,        if (!Character.isDigit(lastChar) && lastChar != '.') {,0,0,0,2,5,0,0,0,0,7,54,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,496,            if (expPos > -1 && expPos < str.length() - 1) {,0,0,0,2,5,0,0,0,0,7,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,499,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,502,"            String numeric = str.substring(0, str.length() - 1);",2,1,0,2,4,0,8,2,0,13,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,503,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,504,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,507,                    if (dec == null,2,2,0,0,1,0,8,0,0,12,15,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,511,                            return createLong(numeric);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,610,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,613,        for (int i = str.length() - 1; i >= 0; i--) {,2,0,0,2,5,0,4,0,0,8,45,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,614,            if (str.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,615,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,632,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,635,        return Float.valueOf(str);,0,1,0,1,2,1,24,0,0,25,26,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,648,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,651,        return Double.valueOf(str);,6,0,0,1,2,1,6,0,0,13,27,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,665,        if (str == null) {,4,2,0,1,3,0,10,0,0,16,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,669,        return Integer.decode(str);,8,3,0,1,2,1,0,0,0,12,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,698,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,701,        return new BigInteger(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,714,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,718,        if (StringUtils.isBlank(str)) {,2,1,0,2,5,0,6,0,0,9,31,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,721,        return new BigDecimal(str);,2,0,0,1,2,2,0,0,0,3,27,2,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,682,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,685,        return Long.valueOf(str);,2,1,0,1,2,1,6,0,0,9,25,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1292,        if (StringUtils.isEmpty(str)) {,2,0,0,2,5,0,6,0,0,8,31,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1295,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1296,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,11,40,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1300,        return true;,0,0,0,0,0,1,0,2,0,4,12,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,193,        return cs == null || cs.length() == 0;,0,0,0,1,2,1,0,0,0,4,38,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,233,        if (cs == null || (strLen = cs.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,48,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,236,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,237,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,2,1,0,4,9,0,8,2,0,14,54,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,238,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,41,    public static final Long LONG_ZERO = new Long(0L);,2,0,0,1,2,3,0,4,0,9,50,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,43,    public static final Long LONG_ONE = new Long(1L);,4,0,0,1,2,4,0,8,0,16,49,1,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,0,0,0,1,2,0,0,0,0,3,56,4,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,47,    public static final Integer INTEGER_ZERO = new Integer(0);,0,0,0,1,2,0,10,0,0,10,58,5,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,49,    public static final Integer INTEGER_ONE = new Integer(1);,10,1,0,1,2,3,6,4,0,25,57,1,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,51,    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);,4,0,0,1,2,6,0,16,0,27,64,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,53,    public static final Short SHORT_ZERO = new Short((short) 0);,4,0,0,2,4,0,0,0,0,5,60,6,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,55,    public static final Short SHORT_ONE = new Short((short) 1);,2,0,0,2,4,3,0,4,0,9,59,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,2,0,0,2,4,3,0,4,0,10,66,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,59,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,2,0,0,2,4,3,4,2,0,11,60,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,61,    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);,0,0,0,2,4,0,0,0,0,6,59,4,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,63,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,6,0,0,2,4,3,4,6,0,20,66,1,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,65,    public static final Double DOUBLE_ZERO = new Double(0.0d);,0,0,0,1,2,0,0,0,0,3,58,4,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,2,0,0,1,2,3,0,4,0,9,57,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,69,    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);,2,1,0,1,2,0,0,0,0,3,64,4,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,4,0,0,1,2,4,0,6,0,14,55,1,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,73,    public static final Float FLOAT_ONE = new Float(1.0f);,0,0,0,1,2,0,0,0,0,3,54,4,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,75,    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);,2,0,0,1,2,3,0,4,0,10,61,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1821,        super();,10,3,0,1,2,0,10,0,0,23,8,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1822,    },0,0,0,0,1,0,6,0,0,6,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,104,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,127,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",0,0,0,1,2,0,0,0,0,3,78,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,146,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",0,0,0,1,2,0,0,0,0,3,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,165,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",0,0,0,1,2,0,0,0,0,3,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,184,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",4,0,0,1,2,3,6,6,0,20,92,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,206,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",4,0,0,1,2,3,2,2,0,12,86,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,225,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,1,0,1,2,0,8,0,0,11,90,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,244,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",0,0,0,1,2,0,0,0,0,3,82,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,263,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",0,0,0,1,2,0,0,0,0,3,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,283,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",0,0,0,1,2,0,0,0,0,3,78,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,302,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",0,0,0,1,2,0,0,0,0,3,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,321,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,0,4,0,0,7,78,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,340,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,0,0,0,1,2,0,0,0,0,3,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,359,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,0,0,0,1,2,0,0,0,0,3,82,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,378,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",0,0,0,1,2,0,0,0,0,3,86,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,398,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,3,2,2,0,10,86,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,418,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",0,0,0,1,2,0,0,0,0,3,92,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,437,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",0,0,0,1,2,0,0,0,0,3,98,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,456,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",0,0,0,1,2,0,4,0,0,4,102,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,475,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",0,0,0,1,2,0,0,0,0,3,104,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,495,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = getSystemProperty(""java.util.prefs.PreferencesFactory"");",0,0,0,1,2,0,0,0,0,3,121,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,514,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,1,1,2,3,2,2,0,14,74,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,533,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,1,0,1,2,0,2,0,0,5,82,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,552,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",0,0,0,1,2,0,0,0,0,3,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,572,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,1,0,1,2,0,4,0,0,7,76,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,591,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",6,1,0,1,2,3,2,2,0,15,76,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,610,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,629,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,108,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,648,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",0,0,0,1,2,0,0,0,0,3,110,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,667,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",2,0,0,1,2,1,4,2,0,9,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,686,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",0,0,0,1,2,0,0,0,0,3,82,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,705,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",0,0,0,1,2,0,0,0,0,3,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,724,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",0,0,0,1,2,0,0,0,0,3,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,743,"    public static final String OS_NAME = getSystemProperty(""os.name"");",0,0,0,1,2,0,0,0,0,3,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,762,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",0,0,0,1,2,0,0,0,0,3,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,781,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,802,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ? getSystemProperty(""user.region"")",2,1,0,2,4,3,4,2,0,16,118,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,822,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,6,1,0,1,2,0,0,0,0,7,70,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,841,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,0,0,0,1,2,0,0,0,0,3,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,861,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",0,0,0,1,2,0,0,0,0,3,78,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,880,"    public static final String USER_NAME = getSystemProperty(""user.name"");",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,899,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",4,0,0,1,2,3,8,2,0,19,78,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,917,    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();,0,0,0,1,2,0,0,0,0,3,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,943,    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();,0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,964,    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();,0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,980,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,991,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",12,3,0,1,2,6,4,2,0,29,71,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1002,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",8,2,0,1,2,0,0,0,0,11,71,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1013,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",4,1,0,1,2,3,2,2,0,15,71,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1024,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,1,0,1,2,3,4,0,0,12,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1035,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1048,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",4,0,0,1,2,3,2,0,0,10,71,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1069,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",8,1,0,1,2,3,2,0,0,15,64,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1082,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",4,0,0,1,2,3,8,0,0,16,68,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1095,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",2,0,0,1,2,0,6,0,0,9,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1108,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",0,0,0,2,4,0,0,0,0,6,97,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1121,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",4,0,0,1,2,3,2,0,0,11,64,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1134,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",0,0,0,1,2,0,0,0,0,3,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1147,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",2,0,0,1,2,3,2,0,0,8,65,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1160,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",6,1,0,1,2,6,4,2,0,21,72,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1173,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",0,0,0,1,2,0,0,0,0,3,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1186,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX || IS_OS_SOLARIS,0,0,0,0,0,0,0,0,0,0,128,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1200,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,0,0,0,1,2,0,0,0,0,3,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1213,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",0,0,0,1,2,0,0,0,0,3,93,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1226,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",0,0,0,1,2,0,0,0,0,3,98,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1240,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",0,0,0,1,2,0,0,0,0,3,98,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1254,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",0,0,0,1,2,0,0,0,0,3,91,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1268,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",4,1,0,1,2,3,12,0,0,21,96,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1282,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",8,0,0,1,2,3,14,0,0,26,91,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1296,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",6,3,0,1,2,0,6,0,0,15,94,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1309,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",0,0,0,1,2,0,0,0,0,3,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1324,        return new File(System.getProperty(JAVA_HOME_KEY));,0,0,0,2,4,1,6,2,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1340,        return new File(System.getProperty(JAVA_IO_TMPDIR_KEY));,0,0,0,2,4,1,0,0,0,1,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1364,"        return toVersionFloat(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",0,0,0,2,4,1,0,0,0,7,95,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1388,"        return toVersionInt(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",4,0,0,2,4,1,6,0,0,10,93,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1401,"        return isJavaVersionMatch(JAVA_VERSION_TRIMMED, versionPrefix);",2,1,0,1,2,1,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1410,        if (JAVA_VERSION != null) {,0,1,0,1,3,0,4,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1411,            for (int i = 0; i < JAVA_VERSION.length(); i++) {,6,2,0,2,5,0,14,0,0,23,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1412,                char ch = JAVA_VERSION.charAt(i);,2,0,0,1,2,0,6,0,0,8,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1413,                if (ch >= '0' && ch <= '9') {,4,3,0,1,3,0,0,0,0,9,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1414,                    return JAVA_VERSION.substring(i);,2,0,0,1,2,1,6,0,0,9,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1418,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1431,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);",0,0,0,1,2,1,10,0,0,10,69,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1442,"        return isOSNameMatch(OS_NAME, osNamePrefix);",0,0,0,1,2,1,2,0,0,2,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1462,            return System.getProperty(property);,0,0,0,1,2,1,6,0,0,6,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1463,        } catch (SecurityException ex) {,6,1,0,1,4,2,0,8,0,20,32,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1465,"            System.err.println(""Caught a SecurityException reading the system property '"" + property",6,1,0,0,1,0,2,0,0,10,88,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1467,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1484,        return new File(System.getProperty(USER_DIR_KEY));,0,0,0,2,4,1,0,0,0,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1500,        return new File(System.getProperty(USER_HOME_KEY));,0,0,0,2,4,1,6,2,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1513,        return JAVA_AWT_HEADLESS != null ? JAVA_AWT_HEADLESS.equals(Boolean.TRUE.toString()) : false;,2,0,0,2,4,1,0,0,0,2,93,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1534,        return JAVA_VERSION_FLOAT >= requiredVersion;,4,1,0,0,0,1,0,0,0,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1556,        return JAVA_VERSION_INT >= requiredVersion;,4,1,0,0,0,1,0,0,0,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1574,        if (version == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1575,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1577,        return version.startsWith(versionPrefix);,0,0,0,1,2,1,6,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1597,        if (osName == null || osVersion == null) {,4,3,0,1,3,0,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1598,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1600,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,8,3,0,2,4,3,12,0,0,25,80,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1616,        if (osName == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1617,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1619,        return osName.startsWith(osNamePrefix);,0,0,0,1,2,1,6,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1646,"        return toVersionFloat(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));",2,1,0,2,4,1,0,0,0,3,78,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1673,"        return toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));",0,0,0,2,4,1,8,0,0,8,76,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1696,"        return toJavaVersionIntArray(version, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1716,        if (version == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1717,            return ArrayUtils.EMPTY_INT_ARRAY;,4,0,0,0,0,1,0,0,0,4,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1719,"        String[] strings = Pattern.compile(""[^\\d]"").split(version);",2,0,0,4,8,0,8,2,0,13,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1720,"        int[] ints = new int[Math.min(limit, strings.length)];",0,0,0,3,6,0,0,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1721,        int j = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1722,        for (int i = 0; i < strings.length && j < limit; i++) {,4,0,0,1,3,0,16,0,0,23,55,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1723,            String s = strings[i];,2,0,1,1,2,0,0,2,0,8,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1724,            if (s.length() > 0) {,0,1,0,2,5,0,4,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1725,                ints[j++] = Integer.parseInt(s);,2,0,1,2,4,0,6,0,0,12,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1728,        return ints;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1752,        if (javaVersions == null || javaVersions.length == 0) {,2,0,0,1,3,0,6,0,0,9,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1753,            return 0f;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1755,        if (javaVersions.length == 1) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1756,            return javaVersions[0];,0,0,1,1,2,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1758,        StringBuilder builder = new StringBuilder();,2,0,0,1,2,0,0,4,0,6,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1759,        builder.append(javaVersions[0]);,8,6,1,2,4,0,4,0,0,20,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1760,        builder.append('.');,0,0,0,1,2,0,8,0,0,10,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1761,        for (int i = 1; i < javaVersions.length; i++) {,0,0,0,1,3,0,8,0,0,8,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1762,            builder.append(javaVersions[i]);,0,0,1,2,4,0,4,0,0,8,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1765,            return Float.parseFloat(builder.toString());,4,3,0,2,4,1,8,0,0,15,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1766,        } catch (Exception ex) {,2,0,0,1,4,0,0,2,0,4,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1767,            return 0f;,2,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1792,        if (javaVersions == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1793,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1795,        int intVersion = 0;,2,0,0,0,0,0,0,0,0,2,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1796,        int len = javaVersions.length;,10,0,0,0,0,3,0,4,0,17,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1797,        if (len >= 1) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1798,            intVersion = javaVersions[0] * 100;,2,1,1,1,2,0,0,0,0,6,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1800,        if (len >= 2) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1801,            intVersion += javaVersions[1] * 10;,2,1,1,1,2,0,0,0,0,6,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1803,        if (len >= 3) {,4,1,0,1,3,0,0,0,0,5,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1804,            intVersion += javaVersions[2];,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1806,        return intVersion;,2,0,0,0,0,1,0,0,0,3,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,85,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,86,    },0,0,0,0,1,0,0,0,0,1,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,107,"        return toInt(str, 0);",0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,128,        if(str == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,129,            return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,132,            return Integer.parseInt(str);,0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,133,        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,134,            return defaultValue;,2,0,0,0,0,1,4,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,156,"        return toLong(str, 0L);",0,0,0,1,2,1,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,177,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,178,            return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,181,            return Long.parseLong(str);,6,0,0,1,2,1,0,0,0,7,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,182,        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,183,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,206,"        return toFloat(str, 0.0f);",0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,229,      if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,230,          return defaultValue;,4,0,0,0,0,1,6,0,0,11,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,233,          return Float.parseFloat(str);,0,0,0,1,2,1,6,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,234,      } catch (NumberFormatException nfe) {,10,1,1,1,4,0,0,0,0,17,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,235,          return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,258,"        return toDouble(str, 0.0d);",0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,281,      if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,282,          return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,285,          return Double.parseDouble(str);,0,0,0,1,2,1,6,0,0,6,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,286,      } catch (NumberFormatException nfe) {,2,0,0,1,4,0,5,2,0,9,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,287,          return defaultValue;,4,1,1,0,0,1,0,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,310,"        return toByte(str, (byte) 0);",0,0,0,2,4,1,4,0,0,4,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,331,        if(str == null) {,2,1,0,1,3,0,0,2,0,7,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,332,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,335,            return Byte.parseByte(str);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,336,        } catch (NumberFormatException nfe) {,6,1,0,1,4,0,0,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,337,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,359,"        return toShort(str, (short) 0);",0,0,0,2,4,1,4,0,0,4,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,380,        if(str == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,381,            return defaultValue;,2,0,1,0,0,1,0,0,0,11,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,384,            return Short.parseShort(str);,0,0,0,1,2,1,6,0,0,7,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,385,        } catch (NumberFormatException nfe) {,6,0,0,1,4,0,0,0,0,6,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,386,            return defaultValue;,2,0,0,0,0,1,6,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,457,"            throw new NumberFormatException(""A blank string is not a valid number"");",0,0,0,1,2,0,0,2,0,3,72,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,464,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,480,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,512,                        } catch (NumberFormatException nfe) {,2,1,0,1,4,0,4,2,0,9,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,515,                        return createBigInteger(numeric);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,518,"                    throw new NumberFormatException(str + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,531,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,529,                    } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,542,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,540,                    } catch (NumberFormatException nfe) {,10,0,0,1,4,0,10,4,0,25,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,545,                    } catch (NumberFormatException e) {,0,0,0,1,4,0,0,0,0,5,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,550,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,585,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,583,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,588,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,66,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,589,                        return d;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,593,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,591,                } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,595,                return createBigDecimal(str);,0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,611,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,618,        return str.length() > 0;,0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,633,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,649,            return null;,2,1,1,0,0,1,0,0,0,7,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,666,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,683,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,699,            return null;,0,0,0,0,0,1,6,0,0,6,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,715,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,719,"            throw new NumberFormatException(""A blank string is not a valid number"");",0,0,0,1,2,0,0,2,0,3,72,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,736,        if (array == null) {,12,1,0,1,3,0,4,0,0,18,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,737,"            throw new IllegalArgumentException(""The Array must not be null"");",2,0,0,1,2,0,0,2,0,7,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,738,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,739,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,743,        long min = array[0];,2,0,1,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,744,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,745,            if (array[i] < min) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,746,                min = array[i];,10,6,1,1,2,0,0,0,0,21,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,750,        return min;,6,3,0,0,0,1,10,0,0,19,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,763,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,764,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,765,        } else if (array.length == 0) {,2,0,0,1,4,0,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,766,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,770,        int min = array[0];,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,771,        for (int j = 1; j < array.length; j++) {,12,1,0,1,3,0,12,0,0,26,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,772,            if (array[j] < min) {,4,1,1,2,5,0,6,0,0,15,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,773,                min = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,777,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,790,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,791,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,792,        } else if (array.length == 0) {,0,0,0,1,4,0,0,2,0,4,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,793,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,797,        short min = array[0];,2,0,1,1,2,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,798,        for (int i = 1; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,799,            if (array[i] < min) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,800,                min = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,804,        return min;,2,0,0,0,0,1,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,817,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,818,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,819,        } else if (array.length == 0) {,8,3,0,1,4,0,0,0,0,13,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,820,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,824,        byte min = array[0];,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,825,        for (int i = 1; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,826,            if (array[i] < min) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,827,                min = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,831,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,845,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,846,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,847,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,848,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,852,        double min = array[0];,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,853,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,854,            if (Double.isNaN(array[i])) {,0,0,0,3,7,0,0,0,0,10,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,855,                return Double.NaN;,6,1,0,0,0,1,0,0,0,7,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,857,            if (array[i] < min) {,4,2,1,2,5,0,0,0,0,10,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,858,                min = array[i];,0,1,0,1,2,0,4,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,862,        return min;,4,0,0,0,0,1,4,0,0,8,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,876,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,877,"            throw new IllegalArgumentException(""The Array must not be null"");",4,0,0,1,2,0,6,2,0,14,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,878,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,879,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,883,        float min = array[0];,2,0,1,1,2,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,884,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,885,            if (Float.isNaN(array[i])) {,2,0,1,3,7,2,8,2,0,18,28,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,886,                return Float.NaN;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,888,            if (array[i] < min) {,2,1,1,2,5,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,889,                min = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,893,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,908,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,909,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,910,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,911,"            throw new IllegalArgumentException(""Array cannot be empty."");",2,0,0,1,2,0,4,2,0,9,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,915,        long max = array[0];,2,0,1,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,916,        for (int j = 1; j < array.length; j++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,917,            if (array[j] > max) {,6,2,1,2,5,0,0,0,0,17,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,918,                max = array[j];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,922,        return max;,4,0,0,0,0,1,0,0,0,4,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,935,        if (array == null) {,6,1,0,1,3,0,0,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,936,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,937,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,938,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,942,        int max = array[0];,4,0,1,1,2,0,0,0,0,7,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,943,        for (int j = 1; j < array.length; j++) {,10,1,0,1,3,0,6,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,944,            if (array[j] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,945,                max = array[j];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,949,        return max;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,962,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,963,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,964,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,965,"            throw new IllegalArgumentException(""Array cannot be empty."");",2,0,0,1,2,0,0,0,0,2,61,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,969,        short max = array[0];,2,0,1,1,2,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,970,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,971,            if (array[i] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,972,                max = array[i];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,976,        return max;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,989,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,990,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,991,        } else if (array.length == 0) {,8,2,0,1,4,0,0,0,0,10,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,992,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,996,        byte max = array[0];,2,0,1,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,997,        for (int i = 1; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,998,            if (array[i] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,999,                max = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1003,        return max;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1017,        if (array== null) {,8,3,1,1,3,0,12,0,0,29,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1018,"            throw new IllegalArgumentException(""The Array must not be null"");",0,0,0,1,2,0,0,2,0,4,65,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1019,        } else if (array.length == 0) {,8,2,0,1,4,0,0,0,0,11,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1020,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1024,        double max = array[0];,2,0,1,1,2,0,0,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1025,        for (int j = 1; j < array.length; j++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1026,            if (Double.isNaN(array[j])) {,0,0,1,3,7,0,4,0,0,8,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1027,                return Double.NaN;,4,0,0,0,0,1,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1029,            if (array[j] > max) {,6,2,1,2,5,0,4,0,0,16,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1030,                max = array[j];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1034,        return max;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1048,        if (array == null) {,4,1,1,1,3,0,0,0,0,10,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1049,"            throw new IllegalArgumentException(""The Array must not be null"");",2,0,1,1,2,0,0,2,0,11,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1050,        } else if (array.length == 0) {,6,1,0,1,4,0,4,0,0,11,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1051,"            throw new IllegalArgumentException(""Array cannot be empty."");",4,1,0,1,2,0,0,2,0,8,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1055,        float max = array[0];,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1056,        for (int j = 1; j < array.length; j++) {,10,1,0,1,3,0,4,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1057,            if (Float.isNaN(array[j])) {,0,0,0,3,7,0,0,0,0,10,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1058,                return Float.NaN;,0,0,0,0,0,1,6,0,0,6,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1060,            if (array[j] > max) {,0,0,0,2,5,0,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1061,                max = array[j];,8,1,1,1,2,0,4,0,0,18,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1065,        return max;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1079,        if (b < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1080,            a = b;,6,0,0,0,0,0,6,0,0,13,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1082,        if (c < a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1083,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1085,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1097,        if (b < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1098,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1100,        if (c < a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1101,            a = c;,2,0,0,0,0,0,0,0,0,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1103,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1115,        if (b < a) {,6,2,1,1,3,0,0,0,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1116,            a = b;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1118,        if (c < a) {,10,1,0,1,3,0,4,0,0,15,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1119,            a = c;,10,4,0,0,0,0,0,0,0,15,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1121,        return a;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1133,        if (b < a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1134,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1136,        if (c < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1137,            a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1139,        return a;,6,3,0,0,0,1,0,0,0,9,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1155,"        return Math.min(Math.min(a, b), c);",2,0,0,2,4,1,26,2,0,30,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1171,"        return Math.min(Math.min(a, b), c);",0,0,0,2,4,1,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1185,        if (b > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1186,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1188,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1189,            a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1191,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1203,        if (b > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1204,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1206,        if (c > a) {,6,1,0,1,3,0,0,2,0,9,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1207,            a = c;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1209,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1221,        if (b > a) {,0,0,0,1,3,0,0,0,0,4,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1222,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1224,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1225,            a = c;,6,0,0,0,0,0,4,0,0,11,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1227,        return a;,4,0,0,0,0,1,0,0,0,4,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1239,        if (b > a) {,6,1,0,1,3,0,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1240,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1242,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1243,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1245,        return a;,0,0,0,0,0,1,12,0,0,12,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1261,"        return Math.max(Math.max(a, b), c);",0,0,0,2,4,1,14,0,0,14,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1277,"        return Math.max(Math.max(a, b), c);",0,0,0,2,4,1,14,0,0,14,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1293,            return false;,4,1,0,0,0,1,10,0,0,16,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1297,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1317,        if (StringUtils.isEmpty(str)) {,4,3,1,2,5,0,6,0,0,21,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1318,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1320,        char[] chars = str.toCharArray();,2,0,0,2,4,0,4,2,0,9,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1321,        int sz = chars.length;,6,0,0,0,0,0,0,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1322,        boolean hasExp = false;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1323,        boolean hasDecPoint = false;,2,0,0,0,0,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1324,        boolean allowSigns = false;,2,0,0,0,0,0,0,0,0,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1325,        boolean foundDigit = false;,2,0,0,0,0,0,0,0,0,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1327,        int start = (chars[0] == '-') ? 1 : 0;,4,1,1,2,4,0,0,0,0,8,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1328,        if (sz > start + 1) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1329,            if (chars[start] == '0' && chars[start + 1] == 'x') {,2,4,1,3,7,0,0,0,0,14,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1330,                int i = start + 2;,4,1,0,0,0,0,0,0,0,5,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1331,                if (i == sz) {,4,1,0,1,3,0,8,0,0,14,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1332,"                    return false; // str == ""0x""",0,0,0,0,0,1,0,0,0,1,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1335,                for (; i < chars.length; i++) {,8,1,0,1,3,0,0,0,0,10,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1336,                    if ((chars[i] < '0' || chars[i] > '9'),0,3,1,3,7,0,0,0,0,13,38,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1339,                        return false;,2,1,0,0,0,1,0,0,0,4,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1342,                return true;,0,0,0,0,0,1,0,0,0,1,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1345,"        sz--; // don't want to loop to the last char, check it afterwords",2,0,0,0,0,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1347,        int i = start;,4,0,0,0,0,0,0,0,0,4,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1350,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,12,6,0,2,5,0,0,0,0,19,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1351,            if (chars[i] >= '0' && chars[i] <= '9') {,2,0,0,3,7,0,0,0,0,2,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1352,                foundDigit = true;,4,1,0,0,0,0,0,0,0,7,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1353,                allowSigns = false;,2,0,0,0,0,0,0,0,0,4,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1355,            } else if (chars[i] == '.') {,0,1,1,2,6,0,4,0,0,10,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1356,                if (hasDecPoint || hasExp) {,0,0,0,1,3,0,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1358,                    return false;,0,0,0,0,0,1,0,0,0,1,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1360,                hasDecPoint = true;,2,0,0,0,0,0,0,0,0,4,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1361,            } else if (chars[i] == 'e' || chars[i] == 'E') {,8,6,1,3,8,0,4,0,0,30,48,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1363,                if (hasExp) {,2,0,0,1,3,0,0,0,0,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1365,                    return false;,0,0,0,0,0,1,0,0,0,1,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1367,                if (!foundDigit) {,6,1,0,1,3,0,4,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1368,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1370,                hasExp = true;,2,0,0,0,0,0,0,0,0,4,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1371,                allowSigns = true;,4,0,0,0,0,0,2,0,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1372,            } else if (chars[i] == '+' || chars[i] == '-') {,0,3,1,3,8,0,0,0,0,13,48,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1373,                if (!allowSigns) {,2,0,0,1,3,0,0,0,0,3,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1374,                    return false;,4,1,0,0,0,1,10,0,0,16,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1376,                allowSigns = false;,4,0,0,0,0,0,0,0,0,8,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1377,                foundDigit = false; // we need a digit after the E,8,1,0,0,0,0,12,0,0,22,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1379,                return false;,4,1,0,0,0,1,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1381,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1383,        if (i < chars.length) {,6,1,0,1,3,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1384,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,13,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1386,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1388,            if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,7,0,0,0,0,13,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1390,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1392,            if (chars[i] == '.') {,4,1,1,2,5,0,0,0,0,10,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1393,                if (hasDecPoint || hasExp) {,4,1,0,1,3,0,0,0,0,5,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1395,                    return false;,6,0,0,0,0,1,10,0,0,18,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1398,                return foundDigit;,4,0,0,0,0,1,4,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1400,            if (!allowSigns,0,0,0,0,1,0,0,0,0,1,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1405,                return foundDigit;,2,0,0,0,0,1,0,0,0,2,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1407,            if (chars[i] == 'l',0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1410,                return foundDigit && !hasExp;,4,1,0,0,0,1,0,0,0,6,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1413,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1417,        return !allowSigns && foundDigit;,10,2,0,0,0,1,14,0,0,28,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,168,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,169,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,212,        return !StringUtils.isEmpty(cs);,18,0,0,1,2,1,2,0,0,21,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,234,            return true;,2,1,1,0,0,1,0,0,0,7,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,241,        return true;,4,3,0,0,0,1,0,0,0,7,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,262,        return !StringUtils.isBlank(cs);,0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,291,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,317,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,318,        return isEmpty(ts) ? null : ts;,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,343,        return str == null ? EMPTY : str.trim();,6,1,0,1,2,1,16,0,0,23,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,371,"        return strip(str, null);",4,0,0,1,2,1,0,2,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,398,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,399,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,401,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,402,        return str.length() == 0 ? null : str;,2,1,0,1,2,1,4,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,428,"        return str == null ? EMPTY : strip(str, null);",8,2,0,1,2,1,4,0,0,15,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,458,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,459,            return str;,4,1,1,0,0,1,0,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,461,"        str = stripStart(str, stripChars);",2,0,0,1,2,1,4,0,0,7,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,462,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,491,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,8,0,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,492,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,494,        int start = 0;,4,0,0,0,0,0,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,495,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,496,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,497,                start++;,4,0,0,0,0,0,0,0,0,4,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,499,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,500,            return str;,2,0,0,0,0,1,0,2,0,4,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,502,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND)) {,0,0,0,5,11,0,0,0,0,16,89,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,503,                start++;,8,0,0,0,0,0,4,0,0,14,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,506,        return str.substring(start);,0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,535,        if (str == null || (end = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,536,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,539,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,540,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,4,3,0,4,9,0,8,0,0,15,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,541,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,543,        } else if (stripChars.length() == 0) {,14,4,0,2,6,0,0,0,0,18,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,544,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,546,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND)) {,0,0,0,5,11,0,0,0,0,16,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,547,                end--;,14,1,0,0,0,0,0,0,0,17,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,550,"        return str.substring(0, end);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,575,"        return stripAll(strs, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,605,        if (strs == null || (strsLen = strs.length) == 0) {,8,4,0,2,5,0,8,0,0,21,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,606,            return strs;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,608,        String[] newArr = new String[strsLen];,2,0,1,2,4,0,0,4,0,8,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,609,        for (int i = 0; i < strsLen; i++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,610,"            newArr[i] = strip(strs[i], stripChars);",0,1,1,3,6,0,14,0,0,24,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,612,        return newArr;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,632,        if(input == null) {,4,1,0,1,3,0,12,0,0,18,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,633,            return null;,0,0,1,0,0,1,2,0,0,6,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,635,        if(SystemUtils.isJavaVersionAtLeast(1.6f)) {,0,0,0,2,5,0,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,642,"                Class<?> normalizerFormClass = ClassUtils.getClass(""java.text.Normalizer$Form"", false);",2,0,0,1,2,0,4,2,0,10,87,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,645,"                Class<?> normalizerClass = ClassUtils.getClass(""java.text.Normalizer"", false);",2,0,0,1,2,0,4,2,0,10,78,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,648,"                java.lang.reflect.Method method = normalizerClass.getMethod(""normalize"", CharSequence.class, normalizerFormClass );",0,0,0,1,2,0,0,0,0,3,115,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,651,"                java.lang.reflect.Field nfd = normalizerFormClass.getField(""NFD"");",0,0,0,1,2,0,0,0,0,3,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,654,"                String decomposed = (String) method.invoke( null, input, nfd.get(null) );",0,0,0,3,6,0,0,0,0,9,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,657,"                java.util.regex.Pattern accentPattern = java.util.regex.Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");",0,0,0,2,4,0,0,0,0,6,109,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,658,"                return accentPattern.matcher(decomposed).replaceAll("""");",0,0,0,2,4,1,0,0,0,7,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,659,            } catch(ClassNotFoundException cnfe) {,2,0,0,1,4,0,0,2,0,4,38,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,660,"                throw new RuntimeException(""ClassNotFoundException occurred during 1.6 backcompat code"", cnfe);",0,0,0,1,2,0,0,0,0,3,95,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,661,            } catch(NoSuchMethodException nsme) {,2,0,0,1,4,0,6,2,0,10,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,662,"                throw new RuntimeException(""NoSuchMethodException occurred during 1.6 backcompat code"", nsme);",0,0,0,1,2,0,0,0,0,3,94,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,663,            } catch(NoSuchFieldException nsfe) {,4,0,0,1,4,0,0,2,0,6,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,664,"                throw new RuntimeException(""NoSuchFieldException occurred during 1.6 backcompat code"", nsfe);",0,0,0,1,2,0,0,0,0,3,93,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,665,            } catch(IllegalAccessException iae) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,666,"                throw new RuntimeException(""IllegalAccessException occurred during 1.6 backcompat code"", iae);",0,0,0,1,2,0,0,0,0,3,94,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,667,            } catch(IllegalArgumentException iae) {,0,0,0,1,4,0,0,0,0,5,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,668,"                throw new RuntimeException(""IllegalArgumentException occurred during 1.6 backcompat code"", iae);",2,0,0,1,2,0,0,2,0,5,96,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,669,            } catch(java.lang.reflect.InvocationTargetException ite) {,0,0,0,1,4,0,0,0,0,5,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,670,"                throw new RuntimeException(""InvocationTargetException occurred during 1.6 backcompat code"", ite);",2,0,0,1,2,0,4,2,0,9,97,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,671,            } catch(SecurityException se) {,2,0,0,1,4,0,0,2,0,4,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,672,"                throw new RuntimeException(""SecurityException occurred during 1.6 backcompat code"", se);",0,0,0,1,2,0,0,0,0,3,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,675,"            throw new UnsupportedOperationException(""The stripAccents(String) method is not supported until Java 1.6"");",0,0,0,2,4,0,0,0,0,6,107,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,703,        return cs1 == null ? cs2 == null : cs1.equals(cs2);,4,2,0,1,2,1,6,0,0,12,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,728,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,753,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,754,            return INDEX_NOT_FOUND;,2,3,0,0,0,1,8,0,0,15,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,756,        return str.indexOf(searchChar);,2,0,0,1,2,1,6,0,0,8,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,785,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,786,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,788,"        return str.indexOf(searchChar, startPos);",0,0,0,1,2,1,8,0,0,8,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,815,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,816,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,818,        return str.indexOf(searchStr);,0,0,0,1,2,1,6,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,854,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,855,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,857,"        return str.indexOf(searchStr, startPos);",2,0,0,1,2,1,8,0,0,11,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,894,"        return ordinalIndexOf(str, searchStr, ordinal, false);",0,0,0,1,2,1,6,0,0,8,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,912,        if (str == null || searchStr == null || ordinal <= 0) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,913,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,915,        if (searchStr.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,916,            return lastIndex ? str.length() : 0;,4,0,0,1,2,1,4,0,0,8,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,918,        int found = 0;,0,0,0,0,0,0,6,0,0,6,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,919,        int index = lastIndex ? str.length() : INDEX_NOT_FOUND;,6,0,0,1,2,0,4,0,0,10,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,921,            if(lastIndex) {,2,0,0,1,3,0,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,922,"                index = str.lastIndexOf(searchStr, index - 1);",0,0,0,1,2,0,0,0,0,3,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,924,"                index = str.indexOf(searchStr, index + 1);",4,1,0,1,2,0,6,0,0,12,42,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,926,            if (index < 0) {,8,2,0,1,3,0,0,0,0,10,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,927,                return index;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,929,            found++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,930,        } while (found < ordinal);,4,0,0,1,3,0,6,0,0,10,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,931,        return index;,12,1,0,0,0,1,6,0,0,20,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,959,"        return indexOfIgnoreCase(str, searchStr, 0);",6,1,0,1,2,1,6,0,0,14,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,994,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,995,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,997,        if (startPos < 0) {,12,2,0,1,3,0,12,0,0,28,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,998,            startPos = 0;,4,0,0,0,0,0,0,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1000,        int endLimit = (str.length() - searchStr.length()) + 1;,2,2,0,3,6,0,8,0,0,12,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1001,        if (startPos > endLimit) {,2,0,0,1,3,0,0,0,0,2,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1002,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,6,0,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1004,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1005,            return startPos;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1007,        for (int i = startPos; i < endLimit; i++) {,10,1,0,1,3,0,8,0,0,21,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1008,"            if (str.regionMatches(true, i, searchStr, 0, searchStr.length())) {",0,0,0,3,7,0,12,0,0,13,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1009,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1012,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,3,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1037,        if (isEmpty(str)) {,4,1,0,2,5,0,4,0,0,9,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1038,            return INDEX_NOT_FOUND;,4,1,0,0,0,1,20,0,0,25,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1040,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1071,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1072,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1074,"        return str.lastIndexOf(searchChar, startPos);",4,1,0,1,2,1,0,0,0,5,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1100,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1101,            return INDEX_NOT_FOUND;,6,1,0,0,0,2,0,4,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1103,        return str.lastIndexOf(searchStr);,0,0,0,1,2,1,6,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1140,"        return ordinalIndexOf(str, searchStr, ordinal, true);",4,1,0,1,2,1,0,0,0,5,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1172,        if (str == null || searchStr == null) {,6,3,0,1,3,0,0,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1173,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1175,"        return str.lastIndexOf(searchStr, startPos);",6,0,0,1,2,2,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1201,        if (str == null || searchStr == null) {,10,1,0,1,3,0,0,0,0,12,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1202,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1204,"        return lastIndexOfIgnoreCase(str, searchStr, str.length());",2,0,0,2,4,1,0,0,0,2,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1236,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,8,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1237,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1239,        if (startPos > (str.length() - searchStr.length())) {,2,2,0,4,9,0,8,0,0,12,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1240,            startPos = str.length() - searchStr.length();,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1242,        if (startPos < 0) {,0,0,0,1,3,0,6,0,0,6,19,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1243,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,3,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1245,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1246,            return startPos;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1249,        for (int i = startPos; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1250,"            if (str.regionMatches(true, i, searchStr, 0, searchStr.length())) {",0,0,0,3,7,0,0,0,0,10,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1251,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1254,        return INDEX_NOT_FOUND;,8,0,0,0,0,1,0,0,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1279,        if (isEmpty(str)) {,2,1,0,2,5,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1280,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1282,        return str.indexOf(searchChar) >= 0;,0,1,0,1,2,1,6,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1307,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1308,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1310,        return str.indexOf(searchStr) >= 0;,0,1,0,1,2,1,12,0,0,13,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1337,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1338,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1340,        int len = searchStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1341,        int max = str.length() - len;,4,1,0,1,2,0,4,0,0,9,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1342,        for (int i = 0; i <= max; i++) {,14,2,0,1,3,0,0,0,0,17,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1343,"            if (str.regionMatches(true, i, searchStr, 0, len)) {",2,1,0,2,5,0,10,0,0,14,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1344,                return true;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1347,        return false;,8,2,0,0,0,1,4,0,0,16,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1360,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1361,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1363,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1364,        for (int i = 0; i < strLen; i++) {,2,0,0,1,3,0,0,0,0,2,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1365,            if (Character.isWhitespace(str.charAt(i))) {,4,1,0,3,7,0,10,0,0,15,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1366,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1369,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1398,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1399,            return INDEX_NOT_FOUND;,12,2,0,0,0,1,0,0,0,15,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1401,        int csLen = cs.length();,2,1,0,1,2,0,16,0,0,19,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1402,        int csLast = csLen - 1;,6,1,0,0,0,0,0,0,0,7,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1403,        int searchLen = searchChars.length;,0,0,0,0,0,0,0,0,0,0,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1404,        int searchLast = searchLen - 1;,4,1,0,0,0,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1405,        for (int i = 0; i < csLen; i++) {,10,2,0,1,3,0,0,0,0,13,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1406,            char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1407,            for (int j = 0; j < searchLen; j++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1408,                if (searchChars[j] == ch) {,8,1,0,2,5,0,0,0,0,10,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1409,                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {,0,0,0,2,5,0,0,0,0,7,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1411,                        if (searchChars[j + 1] == cs.charAt(i + 1)) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1412,                            return i;,2,0,0,0,0,1,0,0,0,2,9,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1415,                        return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1420,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,4,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1447,        if (isEmpty(cs) || isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1448,            return INDEX_NOT_FOUND;,8,2,0,0,0,1,4,0,0,15,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1450,"        return indexOfAny(cs, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1479,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1480,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1482,        int csLength = cs.length();,2,0,0,1,2,0,4,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1483,        int searchLength = searchChars.length;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1484,        int csLast = csLength - 1;,0,0,0,0,0,0,0,0,0,0,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1485,        int searchLast = searchLength - 1;,4,1,0,0,0,0,0,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1486,        for (int i = 0; i < csLength; i++) {,10,2,0,1,3,0,0,0,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1487,            char ch = cs.charAt(i);,12,3,0,1,2,0,6,0,0,22,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1488,            for (int j = 0; j < searchLength; j++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1489,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1490,                    if (Character.isHighSurrogate(ch)) {,0,0,0,2,5,0,6,0,0,6,36,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1491,                        if (j == searchLast) {,10,1,0,1,3,0,10,0,0,23,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1493,                            return true;,0,0,0,0,0,1,0,0,0,1,12,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1495,                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {,0,0,0,3,7,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1496,                            return true;,0,0,0,0,0,1,0,0,0,1,12,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1500,                        return true;,0,0,0,0,0,1,0,0,0,1,12,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1505,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1536,        if (searchChars == null) {,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1537,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1539,"        return containsAny(cs, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1568,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1569,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1571,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1572,        int csLast = csLen - 1;,4,1,0,0,0,0,0,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1573,        int searchLen = searchChars.length;,14,0,0,0,0,1,0,4,0,20,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1574,        int searchLast = searchLen - 1;,6,1,0,0,0,0,6,0,0,14,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1576,        for (int i = 0; i < csLen; i++) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1577,            char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1578,            for (int j = 0; j < searchLen; j++) {,10,1,0,1,3,0,0,0,0,12,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1579,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1580,                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {,0,0,0,2,5,0,0,0,0,7,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1581,                        if (searchChars[j + 1] == cs.charAt(i + 1)) {,0,0,0,3,7,0,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1582,                            continue outer;,2,0,0,0,0,0,0,0,0,2,15,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1589,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1591,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1617,        if (isEmpty(str) || isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1618,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1620,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1621,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1622,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1623,            boolean chFound = searchChars.indexOf(ch) >= 0;,6,2,1,1,2,0,10,0,0,23,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1624,            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {,0,0,0,2,5,0,0,0,0,7,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1625,                char ch2 = str.charAt(i + 1);,4,1,0,1,2,0,4,0,0,9,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1626,                if (chFound && searchChars.indexOf(ch2) < 0) {,2,2,0,2,5,0,6,0,0,10,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1627,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1629,            } else {,0,0,0,0,2,0,6,0,0,6,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1630,                if (!chFound) {,4,1,0,1,3,0,0,0,0,6,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1631,                    return i;,8,2,0,0,0,1,18,0,0,28,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1635,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1664,        if (valid == null || cs == null) {,2,0,0,1,3,0,0,0,0,2,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1665,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1667,        if (cs.length() == 0) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1668,            return true;,2,1,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1670,        if (valid.length == 0) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1671,            return false;,6,2,0,0,0,1,6,0,0,16,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1673,"        return indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1700,        if (cs == null || validChars == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1701,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1703,"        return containsOnly(cs, validChars.toCharArray());",0,0,0,2,4,1,8,0,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1732,        if (cs == null || searchChars == null) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1733,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1735,        int csLen = cs.length();,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1736,        int csLast = csLen - 1;,4,1,0,0,0,0,0,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1737,        int searchLen = searchChars.length;,0,0,0,0,0,0,0,0,0,0,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1738,        int searchLast = searchLen - 1;,0,0,0,0,0,0,6,0,0,6,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1739,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1740,            char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1741,            for (int j = 0; j < searchLen; j++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1742,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1743,                    if (Character.isHighSurrogate(ch)) {,12,1,0,2,5,0,0,0,0,14,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1744,                        if (j == searchLast) {,0,0,0,1,3,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1746,                            return false;,0,0,0,0,0,1,0,0,0,1,13,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1748,                        if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1)) {,0,0,0,3,7,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1749,                            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1753,                        return false;,0,0,0,0,0,1,0,0,0,1,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1758,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1785,        if (cs == null || invalidChars == null) {,4,3,0,1,3,0,0,0,0,7,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1786,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1788,"        return containsNone(cs, invalidChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1820,        if (str == null || searchStrs == null) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1821,            return INDEX_NOT_FOUND;,4,1,1,0,0,1,0,0,0,9,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1823,        int sz = searchStrs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1826,        int ret = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1828,        int tmp = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1829,        for (int i = 0; i < sz; i++) {,12,2,1,1,3,0,0,0,0,22,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1830,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1831,            if (search == null) {,8,2,0,1,3,1,4,0,0,15,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1832,                continue;,0,1,0,0,0,0,8,0,0,9,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1834,            tmp = str.indexOf(search);,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1835,            if (tmp == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1836,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1839,            if (tmp < ret) {,4,1,1,1,3,0,2,0,0,16,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1840,                ret = tmp;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1844,        return (ret == Integer.MAX_VALUE) ? INDEX_NOT_FOUND : ret;,10,1,0,1,2,1,10,0,0,21,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1873,        if (str == null || searchStrs == null) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1874,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1876,        int sz = searchStrs.length;,8,0,0,0,0,0,0,0,0,8,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1877,        int ret = INDEX_NOT_FOUND;,4,0,0,0,0,0,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1878,        int tmp = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1879,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1880,            String search = searchStrs[i];,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1881,            if (search == null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1882,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1884,            tmp = str.lastIndexOf(search);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1885,            if (tmp > ret) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1886,                ret = tmp;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1889,        return ret;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1919,        if (str == null) {,0,1,0,1,3,0,12,0,0,13,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1920,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1924,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1925,            start = str.length() + start; // remember start is negative,0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1928,        if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1929,            start = 0;,8,1,0,0,0,0,0,0,0,10,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1931,        if (start > str.length()) {,2,1,0,2,5,0,4,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1932,            return EMPTY;,12,1,0,0,0,1,12,0,0,26,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1935,        return str.substring(start);,0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1974,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1975,            return null;,2,0,0,0,0,1,0,0,0,3,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1979,        if (end < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1980,            end = str.length() + end; // remember end is negative,6,2,0,1,2,0,10,0,0,19,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1982,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1983,            start = str.length() + start; // remember start is negative,0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1987,        if (end > str.length()) {,2,1,0,2,5,0,4,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1988,            end = str.length();,2,0,0,1,2,0,4,0,0,7,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1992,        if (start > end) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1993,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1996,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1997,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1999,        if (end < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2000,            end = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2003,"        return str.substring(start, end);",0,0,0,1,2,1,8,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2029,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2030,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2032,        if (len < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2033,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2035,        if (str.length() <= len) {,12,2,1,2,5,0,6,0,0,29,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2036,            return str;,2,1,0,0,0,1,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2038,"        return str.substring(0, len);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2062,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2063,            return null;,4,1,0,0,0,1,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2065,        if (len < 0) {,4,2,0,1,3,0,0,0,0,6,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2066,            return EMPTY;,6,0,0,0,0,1,8,0,0,16,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2068,        if (str.length() <= len) {,2,1,0,2,5,0,4,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2069,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2071,        return str.substring(str.length() - len);,6,3,0,2,4,1,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2099,        if (str == null) {,6,1,0,1,3,0,0,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2100,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2102,        if (len < 0 || pos > str.length()) {,0,0,0,2,5,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2103,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2105,        if (pos < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2106,            pos = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2108,        if (str.length() <= (pos + len)) {,0,0,0,3,7,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2109,            return str.substring(pos);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2111,"        return str.substring(pos, pos + len);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2144,        if (isEmpty(str) || separator == null) {,4,3,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2145,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2147,        if (separator.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2148,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2150,        int pos = str.indexOf(separator);,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2151,        if (pos == INDEX_NOT_FOUND) {,14,2,1,1,3,0,4,0,0,24,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2152,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2154,"        return str.substring(0, pos);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2186,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2187,            return str;,8,5,1,0,0,1,0,0,0,23,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2189,        if (separator == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2190,            return EMPTY;,4,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2192,        int pos = str.indexOf(separator);,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2193,        if (pos == INDEX_NOT_FOUND) {,0,0,0,1,3,0,10,0,0,10,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2194,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2196,        return str.substring(pos + separator.length());,2,1,0,2,4,1,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2227,        if (isEmpty(str) || isEmpty(separator)) {,0,1,0,3,7,0,18,0,0,20,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2228,            return str;,2,0,0,0,0,1,0,0,0,3,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2230,        int pos = str.lastIndexOf(separator);,6,1,0,1,2,0,0,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2231,        if (pos == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2232,            return str;,2,0,0,0,0,1,10,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2234,"        return str.substring(0, pos);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2267,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2268,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2270,        if (isEmpty(separator)) {,2,0,0,2,5,0,4,0,0,8,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2271,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2273,        int pos = str.lastIndexOf(separator);,2,0,0,1,2,0,6,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2274,        if (pos == INDEX_NOT_FOUND || pos == (str.length() - separator.length())) {,8,5,0,4,9,0,16,0,0,29,75,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2275,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2277,        return str.substring(pos + separator.length());,2,1,0,2,4,1,12,0,0,16,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2304,"        return substringBetween(str, tag, tag);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2335,        if (str == null || open == null || close == null) {,8,5,0,1,3,0,0,0,0,13,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2336,            return null;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2338,        int start = str.indexOf(open);,2,0,0,1,2,0,6,0,0,8,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2339,        if (start != INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2340,"            int end = str.indexOf(close, start + open.length());",4,1,0,2,4,0,10,0,0,15,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2341,            if (end != INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2342,"                return str.substring(start + open.length(), end);",0,0,0,2,4,1,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2345,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2371,        if (str == null || isEmpty(open) || isEmpty(close)) {,4,3,0,3,7,0,14,0,0,23,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2372,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2374,        int strLen = str.length();,6,1,0,1,2,0,8,0,0,15,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2375,        if (strLen == 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2376,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2378,        int closeLen = close.length();,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2379,        int openLen = open.length();,4,0,0,1,2,0,4,0,0,10,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2380,        List<String> list = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,11,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2381,        int pos = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2382,        while (pos < (strLen - closeLen)) {,6,2,0,2,5,0,0,0,0,8,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2383,"            int start = str.indexOf(open, pos);",0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2384,            if (start < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2385,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2387,            start += openLen;,6,0,0,0,0,0,0,0,0,7,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2388,"            int end = str.indexOf(close, start);",2,0,0,1,2,0,8,0,0,10,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2389,            if (end < 0) {,0,0,0,1,3,0,4,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2390,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2392,"            list.add(str.substring(start, end));",4,0,0,2,4,0,12,0,0,16,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2393,            pos = end + closeLen;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2394,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2395,        if (list.isEmpty()) {,4,1,1,2,5,0,8,0,0,18,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2396,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2398,        return list.toArray(new String [list.size()]);,6,2,1,3,6,1,8,2,0,25,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2429,"        return split(str, null, -1);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2457,"        return splitWorker(str, separatorChar, false);",0,0,0,1,2,1,6,0,0,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2486,"        return splitWorker(str, separatorChars, -1, false);",0,0,0,1,2,1,6,0,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2520,"        return splitWorker(str, separatorChars, max, false);",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2547,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",2,1,0,1,2,1,6,0,0,11,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2578,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0,0,0,1,2,1,8,0,0,9,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2607,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0,0,0,1,2,1,6,0,0,8,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2640,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0,0,0,1,2,1,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2660,        if (str == null) {,10,3,0,1,3,0,0,0,0,13,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2661,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2664,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2666,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2667,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2670,        if ((separator == null) || (EMPTY.equals(separator))) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2672,"            return splitWorker(str, null, max, preserveAllTokens);",0,0,0,1,2,1,8,0,0,9,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2675,        int separatorLength = separator.length();,6,0,0,1,2,0,16,0,0,26,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2677,        ArrayList<String> substrings = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2678,        int numberOfSubstrings = 0;,0,0,0,0,0,0,0,0,0,0,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2679,        int beg = 0;,10,1,0,0,0,0,0,0,0,11,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2680,        int end = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2681,        while (end < len) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2682,"            end = str.indexOf(separator, beg);",2,0,0,1,2,0,8,0,0,11,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2684,            if (end > -1) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2685,                if (end > beg) {,2,0,1,1,3,0,0,2,0,8,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2686,                    numberOfSubstrings += 1;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2688,                    if (numberOfSubstrings == max) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2689,                        end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2690,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2694,"                        substrings.add(str.substring(beg, end));",4,1,0,2,4,0,12,0,0,19,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2699,                        beg = end + separatorLength;,18,2,0,0,0,0,0,0,0,23,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2703,                    if (preserveAllTokens) {,6,0,0,1,3,0,8,0,0,14,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2704,                        numberOfSubstrings += 1;,2,0,0,0,0,0,0,0,0,2,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2705,                        if (numberOfSubstrings == max) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2706,                            end = len;,4,0,0,0,0,0,0,0,0,5,10,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2707,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2709,                            substrings.add(EMPTY);,0,0,0,1,2,0,6,0,0,6,22,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2712,                    beg = end + separatorLength;,2,2,0,0,0,0,4,0,0,9,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2716,                substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2717,                end = len;,0,0,0,0,0,0,12,0,0,12,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2721,        return substrings.toArray(new String[substrings.size()]);,0,0,0,3,6,1,0,0,0,1,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2750,"        return splitWorker(str, null, -1, true);",0,0,0,1,2,1,4,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2786,"        return splitWorker(str, separatorChar, true);",0,0,0,1,2,1,0,0,0,1,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2804,        if (str == null) {,7,6,0,1,3,0,0,0,0,13,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2805,            return null;,2,0,0,0,0,1,6,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2807,        int len = str.length();,6,0,0,1,2,0,4,0,0,11,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2808,        if (len == 0) {,2,1,0,1,3,0,6,0,0,9,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2809,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2811,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2812,"        int i = 0, start = 0;",4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2813,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2814,        boolean lastMatch = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2815,        while (i < len) {,4,1,0,1,3,0,6,0,0,11,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2816,            if (str.charAt(i) == separatorChar) {,0,1,0,2,5,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2817,                if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2818,"                    list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2819,                    match = false;,6,1,0,0,0,0,0,0,0,8,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2820,                    lastMatch = true;,8,3,0,0,0,0,0,0,0,13,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2822,                start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2823,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2825,            lastMatch = false;,8,0,0,0,0,0,8,0,0,20,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2826,            match = true;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2827,            i++;,4,0,0,0,0,0,0,0,0,5,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2829,        if (match || (preserveAllTokens && lastMatch)) {,6,2,0,2,5,0,0,0,0,8,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2830,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2832,        return list.toArray(new String[list.size()]);,2,0,0,3,6,2,14,0,0,17,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2869,"        return splitWorker(str, separatorChars, -1, true);",0,0,0,1,2,1,6,0,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2909,"        return splitWorker(str, separatorChars, max, true);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2931,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2932,            return null;,2,0,1,0,0,1,0,0,0,7,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2934,        int len = str.length();,0,0,0,1,2,0,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2935,        if (len == 0) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2936,            return ArrayUtils.EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2938,        List<String> list = new ArrayList<String>();,8,2,0,1,2,1,4,12,0,28,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2939,        int sizePlus1 = 1;,2,0,0,0,0,0,0,0,0,3,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2940,"        int i = 0, start = 0;",2,1,0,0,0,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2941,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2942,        boolean lastMatch = false;,2,0,0,0,0,0,0,0,0,2,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2943,        if (separatorChars == null) {,4,1,0,1,3,0,0,0,0,5,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2945,            while (i < len) {,20,5,0,1,3,0,0,0,0,29,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2946,                if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,10,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2947,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2948,                        lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2949,                        if (sizePlus1++ == max) {,6,1,0,1,3,0,4,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2950,                            i = len;,4,0,0,0,0,0,0,0,0,5,8,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2951,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2953,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2954,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2956,                    start = ++i;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2957,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2959,                lastMatch = false;,4,1,0,0,0,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2960,                match = true;,4,0,0,0,0,0,8,0,0,15,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2961,                i++;,4,0,0,0,0,0,4,2,0,11,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2963,        } else if (separatorChars.length() == 1) {,4,0,0,2,6,0,0,4,0,8,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2965,            char sep = separatorChars.charAt(0);,2,0,0,1,2,0,4,0,0,6,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2966,            while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2967,                if (str.charAt(i) == sep) {,2,0,0,2,5,0,0,8,0,10,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2968,                    if (match || preserveAllTokens) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2969,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2970,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,0,0,0,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2971,                            i = len;,0,0,0,0,0,0,6,0,0,6,8,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2972,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2974,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2975,                        match = false;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2977,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2978,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2980,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2981,                match = true;,10,0,0,0,0,0,4,0,0,17,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2982,                i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2984,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2986,            while (i < len) {,6,2,0,1,3,0,0,0,0,8,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2987,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,2,0,0,3,7,0,0,0,0,2,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2988,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2989,                        lastMatch = true;,0,0,0,0,0,0,0,0,0,0,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2990,                        if (sizePlus1++ == max) {,14,1,0,1,3,0,4,0,0,20,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2991,                            i = len;,0,1,0,0,0,0,8,0,0,9,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2992,                            lastMatch = false;,2,0,0,0,0,0,8,0,0,12,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2994,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2995,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2997,                    start = ++i;,2,0,1,0,0,0,0,2,0,8,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2998,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3000,                lastMatch = false;,2,0,0,0,0,0,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3001,                match = true;,2,0,0,0,0,0,0,0,0,4,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3002,                i++;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3005,        if (match || (preserveAllTokens && lastMatch)) {,6,2,0,2,5,0,0,0,0,8,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3006,"            list.add(str.substring(start, i));",0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3008,        return list.toArray(new String[list.size()]);,2,0,0,3,6,1,0,0,0,2,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3031,"        return splitByCharacterType(str, false);",0,0,0,1,2,1,4,0,0,5,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3059,"        return splitByCharacterType(str, true);",0,0,0,1,2,1,4,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3077,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3078,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3080,        if (str.length() == 0) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3081,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,8,0,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3083,        char[] c = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3084,        List<String> list = new ArrayList<String>();,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3085,        int tokenStart = 0;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3086,        int currentType = Character.getType(c[tokenStart]);,2,0,1,2,4,0,4,0,0,10,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3087,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3088,            int type = Character.getType(c[pos]);,2,0,1,2,4,0,4,0,0,10,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3089,            if (type == currentType) {,6,1,0,1,3,0,0,0,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3090,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3092,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,14,4,0,1,3,0,0,0,0,18,99,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3093,                int newTokenStart = pos - 1;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3094,                if (newTokenStart != tokenStart) {,2,0,1,1,3,0,0,0,0,7,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3095,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",8,1,0,2,4,0,4,2,0,15,64,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3096,                    tokenStart = newTokenStart;,8,3,0,0,0,0,8,0,0,20,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3098,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3099,"                list.add(new String(c, tokenStart, pos - tokenStart));",0,0,0,2,4,0,0,0,0,6,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3100,                tokenStart = pos;,8,0,0,0,0,0,0,0,0,9,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3102,            currentType = type;,8,1,1,0,0,0,4,0,0,19,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3104,"        list.add(new String(c, tokenStart, c.length - tokenStart));",10,1,0,2,4,0,4,2,0,17,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3105,        return list.toArray(new String[list.size()]);,0,0,0,3,6,1,0,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3127,"        return join(elements, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3149,"        return join(elements, separator);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3173,"        return join(array, null);",0,0,0,1,2,1,4,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3199,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3200,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3203,"        return join(array, separator, 0, array.length);",0,0,0,1,2,1,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3233,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3234,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3236,        int bufSize = (endIndex - startIndex);,8,1,0,1,2,0,0,0,0,10,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3237,        if (bufSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3238,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3241,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,0,0,0,6,12,0,0,0,0,18,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3242,        StringBuilder buf = new StringBuilder(bufSize);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3244,        for (int i = startIndex; i < endIndex; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3245,            if (i > startIndex) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3246,                buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3248,            if (array[i] != null) {,0,0,0,2,5,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3249,                buf.append(array[i]);,0,0,0,2,4,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3252,        return buf.toString();,2,1,0,1,2,1,4,0,0,8,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3280,        if (array == null) {,2,2,1,1,3,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3281,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3283,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,12,0,0,16,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3314,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3315,            return null;,2,0,0,0,0,1,6,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3317,        if (separator == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3318,            separator = EMPTY;,12,1,0,0,0,0,0,0,0,15,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3323,        int bufSize = (endIndex - startIndex);,10,2,0,1,2,0,0,0,0,12,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3324,        if (bufSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3325,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3328,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),0,0,0,5,11,0,0,0,0,1,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3331,        StringBuilder buf = new StringBuilder(bufSize);,0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3333,        for (int i = startIndex; i < endIndex; i++) {,14,2,0,1,3,0,0,0,0,17,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3334,            if (i > startIndex) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3335,                buf.append(separator);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3337,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,6,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3338,                buf.append(array[i]);,0,0,0,2,4,0,10,0,0,10,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3341,        return buf.toString();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3361,        if (iterator == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3362,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3364,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3365,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3367,        Object first = iterator.next();,2,0,0,1,2,0,4,2,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3368,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3369,            return ObjectUtils.toString(first);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3373,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",2,0,0,1,2,0,0,4,0,6,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3374,        if (first != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3375,            buf.append(first);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3378,        while (iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3379,            buf.append(separator);,4,3,0,1,2,0,10,0,0,18,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3380,            Object obj = iterator.next();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3381,            if (obj != null) {,4,3,0,1,3,0,8,0,0,15,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3382,                buf.append(obj);,0,0,0,1,2,0,6,0,0,6,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3384,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3386,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3405,        if (iterator == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3406,            return null;,2,0,0,0,0,1,10,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3408,        if (!iterator.hasNext()) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3409,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3411,        Object first = iterator.next();,0,0,0,1,2,0,8,0,0,8,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3412,        if (!iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3413,            return ObjectUtils.toString(first);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3417,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",0,0,0,1,2,0,0,0,0,3,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3418,        if (first != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3419,            buf.append(first);,4,0,0,1,2,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3422,        while (iterator.hasNext()) {,0,0,0,2,5,0,4,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3423,            if (separator != null) {,4,2,0,1,3,0,0,0,0,6,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3424,                buf.append(separator);,0,0,0,1,2,0,6,0,0,6,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3426,            Object obj = iterator.next();,4,0,0,1,2,0,4,2,0,10,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3427,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3428,                buf.append(obj);,0,0,0,1,2,0,6,0,0,6,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3430,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3431,        return buf.toString();,0,1,0,1,2,1,10,0,0,12,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3449,        if (iterable == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3450,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3452,"        return join(iterable.iterator(), separator);",0,0,0,2,4,1,8,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3470,        if (iterable == null) {,2,1,1,1,3,0,0,0,0,7,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3471,            return null;,2,0,0,0,0,1,4,0,0,6,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3473,"        return join(iterable.iterator(), separator);",0,0,0,2,4,1,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3493,        if (isEmpty(str)) {,4,1,1,2,5,0,10,0,0,22,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3494,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3496,        int sz = str.length();,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3497,        char[] chs = new char[sz];,2,0,1,2,4,0,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3498,        int count = 0;,8,0,0,0,0,0,0,0,0,10,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3499,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3500,            if (!Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,11,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3501,                chs[count++] = str.charAt(i);,4,0,1,2,4,0,6,0,0,14,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3504,        if (count == sz) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3505,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3507,"        return new String(chs, 0, count);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3537,        if (isEmpty(str) || isEmpty(remove)) {,8,2,0,3,7,0,8,0,0,19,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3538,            return str;,2,0,0,0,0,1,0,0,0,3,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3540,        if (str.startsWith(remove)){,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3541,            return str.substring(remove.length());,0,0,0,2,4,1,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3543,        return str;,2,0,0,0,0,1,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3572,        if (isEmpty(str) || isEmpty(remove)) {,2,1,0,3,7,0,0,0,0,3,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3573,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3575,"        if (startsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,6,0,0,6,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3576,            return str.substring(remove.length());,0,0,0,2,4,1,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3578,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3606,        if (isEmpty(str) || isEmpty(remove)) {,0,0,0,3,7,0,0,0,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3607,            return str;,10,1,0,0,0,2,0,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3609,        if (str.endsWith(remove)) {,4,1,0,2,5,0,6,0,0,11,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3610,"            return str.substring(0, str.length() - remove.length());",0,0,0,3,6,1,0,0,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3612,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3642,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3643,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3645,"        if (endsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3646,"            return str.substring(0, str.length() - remove.length());",0,1,0,3,6,1,12,0,0,13,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3648,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3675,        if (isEmpty(str) || isEmpty(remove)) {,2,2,0,3,7,0,8,0,0,12,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3676,            return str;,10,0,0,0,0,1,4,0,0,15,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3678,"        return replace(str, remove, EMPTY, -1);",0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3701,        if (isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND) {,0,0,0,3,7,0,0,0,0,10,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3702,            return str;,6,0,0,0,0,1,4,2,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3704,        char[] chars = str.toCharArray();,4,0,0,2,4,0,4,0,0,8,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3705,        int pos = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3706,        for (int i = 0; i < chars.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3707,            if (chars[i] != remove) {,0,0,0,2,5,0,0,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3708,                chars[pos++] = chars[i];,2,0,1,2,4,0,0,0,0,10,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3711,"        return new String(chars, 0, pos);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3740,"        return replace(text, searchString, replacement, 1);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3767,"        return replace(text, searchString, replacement, -1);",8,3,0,1,2,1,0,2,0,14,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3799,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,4,4,0,3,7,0,8,0,0,18,80,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3800,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3802,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3803,"        int end = text.indexOf(searchString, start);",4,0,0,1,2,0,8,0,0,12,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3804,        if (end == INDEX_NOT_FOUND) {,4,0,0,1,3,0,0,0,0,5,29,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3805,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3807,        int replLength = searchString.length();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3808,        int increase = replacement.length() - replLength;,2,0,0,1,2,0,4,0,0,6,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3809,        increase = (increase < 0 ? 0 : increase);,6,1,0,1,2,0,0,0,0,8,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3810,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,8,2,0,2,4,0,8,0,0,19,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3811,        StringBuilder buf = new StringBuilder(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3812,        while (end != INDEX_NOT_FOUND) {,2,1,0,1,3,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3813,"            buf.append(text.substring(start, end)).append(replacement);",14,1,0,3,6,0,16,0,0,32,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3814,            start = end + replLength;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3815,            if (--max == 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3816,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3818,"            end = text.indexOf(searchString, start);",4,0,0,1,2,0,8,0,0,13,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3820,        buf.append(text.substring(start));,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3821,        return buf.toString();,4,1,0,1,2,1,10,0,0,15,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3864,"        return replaceEach(text, searchList, replacementList, false, 0);",0,0,0,1,2,1,0,0,0,4,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3915,        int timeToLive = searchList == null ? 0 : searchList.length;,0,0,0,0,0,0,0,0,0,0,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3916,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",0,0,0,1,2,1,0,0,0,4,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3974,        if (text == null || text.length() == 0 || searchList == null ||,0,0,0,1,3,0,0,0,0,4,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3977,            return text;,2,0,0,0,0,1,16,0,0,18,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3981,        if (timeToLive < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3982,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",12,4,0,1,2,0,4,2,0,24,92,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3985,        int searchLength = searchList.length;,6,0,0,0,0,0,0,0,0,6,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3986,        int replacementLength = replacementList.length;,0,0,0,0,0,0,0,0,0,0,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3989,        if (searchLength != replacementLength) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3990,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0,0,0,0,1,0,10,0,0,10,83,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3997,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,2,0,1,2,4,0,0,0,0,4,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4000,        int textIndex = -1;,6,1,0,0,0,0,8,0,0,16,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4001,        int replaceIndex = -1;,2,1,0,0,0,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4002,        int tempIndex = -1;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4006,        for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4007,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||,6,8,1,2,5,0,4,2,0,28,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4010,                continue;,0,0,0,0,0,0,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4012,            tempIndex = text.indexOf(searchList[i]);,0,0,0,2,4,0,4,0,0,4,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4015,            if (tempIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4016,                noMoreMatchesForReplIndex[i] = true;,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4018,                if (textIndex == -1 || tempIndex < textIndex) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4019,                    textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4020,                    replaceIndex = i;,8,3,0,0,0,0,4,0,0,16,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4027,        if (textIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4028,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4031,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4034,        int increase = 0;,2,1,0,0,0,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4037,        for (int i = 0; i < searchList.length; i++) {,12,1,0,1,3,0,0,0,0,14,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4038,            if (searchList[i] == null || replacementList[i] == null) {,4,6,1,3,7,0,0,0,0,18,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4039,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4041,            int greater = replacementList[i].length() - searchList[i].length();,2,1,1,4,8,0,4,0,0,15,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4042,            if (greater > 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4043,                increase += 3 * greater; // assume 3 matches,0,0,0,0,0,0,0,0,0,0,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4047,"        increase = Math.min(increase, text.length() / 5);",4,1,0,2,4,0,10,0,0,16,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4049,        StringBuilder buf = new StringBuilder(text.length() + increase);,0,0,0,2,4,0,0,0,0,6,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4051,        while (textIndex != -1) {,2,1,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4053,            for (int i = start; i < textIndex; i++) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4054,                buf.append(text.charAt(i));,0,0,0,2,4,0,0,0,0,6,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4056,            buf.append(replacementList[replaceIndex]);,0,0,1,2,4,0,4,0,0,8,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4058,            start = textIndex + searchList[replaceIndex].length();,4,1,1,2,4,0,2,0,0,12,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4060,            textIndex = -1;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4061,            replaceIndex = -1;,0,0,0,0,0,0,0,0,0,0,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4062,            tempIndex = -1;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4065,            for (int i = 0; i < searchLength; i++) {,8,1,0,1,3,0,8,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4066,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||,0,4,1,2,5,0,6,0,0,18,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4069,                    continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4071,"                tempIndex = text.indexOf(searchList[i], start);",4,0,1,2,4,0,6,2,0,17,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4074,                if (tempIndex == -1) {,6,1,0,1,3,0,8,0,0,16,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4075,                    noMoreMatchesForReplIndex[i] = true;,0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4077,                    if (textIndex == -1 || tempIndex < textIndex) {,6,3,0,1,3,0,0,0,0,10,47,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4078,                        textIndex = tempIndex;,10,3,0,0,0,0,0,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4079,                        replaceIndex = i;,6,0,0,0,0,1,6,0,0,14,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4086,        int textLength = text.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4087,        for (int i = start; i < textLength; i++) {,12,1,0,1,3,0,0,0,0,15,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4088,            buf.append(text.charAt(i));,0,0,0,2,4,0,10,0,0,10,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4090,        String result = buf.toString();,2,0,0,1,2,0,4,2,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4091,        if (!repeat) {,4,1,0,1,3,0,0,0,0,6,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4092,            return result;,2,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4095,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",2,1,0,1,2,1,14,0,0,17,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4121,        if (str == null) {,0,0,0,1,3,0,0,0,0,1,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4122,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4124,"        return str.replace(searchChar, replaceChar);",0,0,0,1,2,1,8,0,0,8,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4164,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4165,            return str;,10,3,0,0,0,1,0,0,0,14,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4167,        if (replaceChars == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4168,            replaceChars = EMPTY;,2,0,0,0,0,0,6,4,0,12,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4170,        boolean modified = false;,2,0,0,0,0,0,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4171,        int replaceCharsLength = replaceChars.length();,0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4172,        int strLength = str.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4173,        StringBuilder buf = new StringBuilder(strLength);,0,0,0,1,2,0,6,0,0,6,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4174,        for (int i = 0; i < strLength; i++) {,8,1,0,1,3,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4175,            char ch = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4176,            int index = searchChars.indexOf(ch);,8,0,0,1,2,0,10,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4177,            if (index >= 0) {,4,1,0,1,3,0,0,0,0,5,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4178,                modified = true;,0,0,0,0,0,0,0,0,0,0,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4179,                if (index < replaceCharsLength) {,4,1,0,1,3,0,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4180,                    buf.append(replaceChars.charAt(index));,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4183,                buf.append(ch);,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4186,        if (modified) {,2,0,0,1,3,0,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4187,            return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4189,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4224,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4225,            return null;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4227,        if (overlay == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4228,            overlay = EMPTY;,0,0,0,0,0,0,0,0,0,1,16,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4230,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4231,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4232,            start = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4234,        if (start > len) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4235,            start = len;,6,1,1,0,0,0,0,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4237,        if (end < 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4238,            end = 0;,6,3,0,0,0,0,0,0,0,10,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4240,        if (end > len) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4241,            end = len;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4243,        if (start > end) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4244,            int temp = start;,4,0,0,0,0,0,6,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4245,            start = end;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4246,            end = temp;,4,0,0,0,0,0,0,0,0,5,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4248,        return new StringBuilder(len + start - end + overlay.length() + 1),6,4,0,2,4,1,4,2,0,16,66,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4283,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4284,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4287,        if (str.length() == 1) {,0,0,0,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4288,            char ch = str.charAt(0);,4,0,0,1,2,0,4,0,0,10,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4289,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4290,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4292,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4295,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4296,        char last = str.charAt(lastIdx);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4298,        if (last == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4299,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,8,2,0,2,5,0,4,0,0,15,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4300,                lastIdx--;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4302,        } else if (last != CharUtils.CR) {,0,0,0,1,4,0,0,0,0,5,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4303,            lastIdx++;,8,0,0,0,0,0,0,0,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4305,"        return str.substring(0, lastIdx);",2,0,0,1,2,1,0,0,0,2,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4335,        if (isEmpty(str) || separator == null) {,0,0,0,2,5,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4336,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4338,        if (str.endsWith(separator)) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4339,"            return str.substring(0, str.length() - separator.length());",4,0,0,3,6,1,4,0,0,9,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4341,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4370,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4371,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4373,        int strLen = str.length();,12,4,1,1,2,1,4,0,0,23,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4374,        if (strLen < 2) {,6,3,0,1,3,0,0,0,0,9,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4375,            return EMPTY;,10,3,0,0,0,1,0,0,0,13,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4377,        int lastIdx = strLen - 1;,4,1,0,0,0,0,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4378,"        String ret = str.substring(0, lastIdx);",2,1,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4379,        char last = str.charAt(lastIdx);,2,0,0,1,2,0,6,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4380,        if (last == CharUtils.LF) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4381,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4382,"                return ret.substring(0, lastIdx - 1);",0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4385,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4414,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4415,            return null;,2,0,0,0,0,1,0,0,0,4,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4417,        if (repeat <= 0) {,0,0,0,1,3,0,12,0,0,12,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4418,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4420,        int inputLength = str.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4421,        if (repeat == 1 || inputLength == 0) {,4,3,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4422,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4424,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4425,"            return padding(repeat, str.charAt(0));",8,2,0,2,4,1,8,0,0,18,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4428,        int outputLength = inputLength * repeat;,0,0,0,0,0,0,0,0,0,0,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4429,        switch (inputLength) {,4,0,0,1,3,0,6,2,0,12,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4431,                char ch = str.charAt(0);,4,1,0,1,2,0,4,0,0,9,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4432,                char[] output1 = new char[outputLength];,2,0,1,2,4,0,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4433,                for (int i = repeat - 1; i >= 0; i--) {,8,2,0,1,3,0,0,0,0,11,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4434,                    output1[i] = ch;,6,0,1,1,2,1,0,2,0,14,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4436,                return new String(output1);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4438,                char ch0 = str.charAt(0);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4439,                char ch1 = str.charAt(1);,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4440,                char[] output2 = new char[outputLength];,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4441,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",12,4,0,1,3,1,8,0,0,27,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4442,                    output2[i] = ch0;,0,0,0,1,2,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4443,                    output2[i + 1] = ch1;,4,1,1,1,2,0,0,0,0,8,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4445,                return new String(output2);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4447,                StringBuilder buf = new StringBuilder(outputLength);,12,0,0,1,2,0,8,4,0,24,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4448,                for (int i = 0; i < repeat; i++) {,14,2,0,1,3,0,0,0,0,17,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4449,                    buf.append(str);,2,0,0,1,2,0,6,2,0,10,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4451,                return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4476,        if(str == null || separator == null) {,0,0,1,1,3,0,0,0,0,2,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4477,"            return repeat(str, repeat);",2,1,0,1,2,1,6,0,0,9,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4480,"            String result = repeat(str + separator, repeat);",0,0,0,1,2,0,0,0,0,3,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4481,"            return removeEnd(result, separator);",0,0,0,1,2,1,6,0,0,6,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4509,        if (repeat < 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4510,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",2,1,0,1,2,0,0,2,0,6,79,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4512,        final char[] buf = new char[repeat];,4,1,0,2,4,0,4,0,0,9,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4513,        for (int i = 0; i < buf.length; i++) {,10,1,0,1,3,0,0,0,0,12,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4514,            buf[i] = padChar;,2,0,1,1,2,0,0,0,0,7,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4516,        return new String(buf);,2,0,0,1,2,1,0,2,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4539,"        return rightPad(str, size, ' ');",0,0,0,1,2,1,6,0,0,7,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4564,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4565,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4567,        int pads = size - str.length();,4,1,0,1,2,0,4,0,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4568,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4569,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4571,        if (pads > PAD_LIMIT) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4572,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,0,0,0,7,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4574,"        return str.concat(padding(pads, padChar));",0,0,0,2,4,1,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4601,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4602,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4604,        if (isEmpty(padStr)) {,0,0,0,2,5,0,4,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4605,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4607,        int padLen = padStr.length();,4,0,0,1,2,0,4,0,0,8,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4608,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4609,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4610,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4611,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4613,        if (padLen == 1 && pads <= PAD_LIMIT) {,2,1,0,1,3,0,8,0,0,11,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4614,"            return rightPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,10,0,0,10,45,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4617,        if (pads == padLen) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4618,            return str.concat(padStr);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4619,        } else if (pads < padLen) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4620,"            return str.concat(padStr.substring(0, pads));",0,0,0,2,4,1,10,0,0,10,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4622,            char[] padding = new char[pads];,4,1,0,2,4,0,10,0,0,15,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4623,            char[] padChars = padStr.toCharArray();,0,0,0,2,4,0,0,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4624,            for (int i = 0; i < pads; i++) {,14,2,0,1,3,0,10,0,0,28,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4625,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4627,            return str.concat(new String(padding));,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4651,"        return leftPad(str, size, ' ');",0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4676,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4677,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4679,        int pads = size - str.length();,4,1,0,1,2,0,4,0,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4680,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4681,            return str; // returns original String when possible,4,1,0,0,0,1,0,0,0,5,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4683,        if (pads > PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4684,"            return leftPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4686,"        return padding(pads, padChar).concat(str);",0,0,0,2,4,1,18,0,0,19,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4713,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4714,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4716,        if (isEmpty(padStr)) {,0,0,0,2,5,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4717,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4719,        int padLen = padStr.length();,0,0,0,1,2,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4720,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4721,        int pads = size - strLen;,2,1,0,0,0,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4722,        if (pads <= 0) {,2,1,0,1,3,0,4,0,0,8,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4723,            return str; // returns original String when possible,4,0,0,0,0,1,0,0,0,4,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4725,        if (padLen == 1 && pads <= PAD_LIMIT) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4726,"            return leftPad(str, size, padStr.charAt(0));",2,0,0,2,4,1,10,0,0,14,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4729,        if (pads == padLen) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4730,            return padStr.concat(str);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4731,        } else if (pads < padLen) {,0,0,0,1,4,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4732,"            return padStr.substring(0, pads).concat(str);",0,0,0,2,4,1,10,0,0,10,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4734,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4735,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4736,            for (int i = 0; i < pads; i++) {,2,0,0,1,3,0,0,0,0,2,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4737,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4739,            return new String(padding).concat(str);,8,3,1,2,4,1,12,2,0,38,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4757,        return CharSequenceUtils.length(cs);,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4786,"        return center(str, size, ' ');",0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4814,        if (str == null || size <= 0) {,6,4,0,1,3,0,0,0,0,10,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4815,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4817,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4818,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4819,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4820,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4822,"        str = leftPad(str, strLen + pads / 2, padChar);",6,2,0,1,2,0,6,0,0,15,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4823,"        str = rightPad(str, size, padChar);",0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4824,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4854,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4855,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4857,        if (isEmpty(padStr)) {,2,1,0,2,5,0,4,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4858,"            padStr = "" "";",0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4860,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4861,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,1,25,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4862,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4863,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4865,"        str = leftPad(str, strLen + pads / 2, padStr);",10,3,0,1,2,0,6,0,0,20,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4866,"        str = rightPad(str, size, padStr);",6,0,0,1,2,0,8,0,0,16,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4867,        return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4892,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4893,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4895,        return str.toUpperCase();,8,1,0,1,2,1,4,0,0,14,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4915,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4916,            return null;,0,1,0,0,0,1,10,0,0,12,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4918,        return str.toUpperCase(locale);,0,0,0,1,2,1,6,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4941,        if (str == null) {,2,1,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4942,            return null;,2,1,0,0,0,1,0,2,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4944,        return str.toLowerCase();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4964,        if (str == null) {,2,1,0,1,3,0,6,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4965,            return null;,0,0,1,0,0,1,6,0,0,11,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4967,        return str.toLowerCase(locale);,0,0,0,1,2,1,12,0,0,12,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4992,        if (cs == null ) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4993,            return null;,4,1,0,0,0,1,4,0,0,10,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4996,        if ((strLen = cs.length()) == 0) {,2,0,1,3,7,0,0,0,0,5,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4997,            return cs.toString();,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4999,        return new StringBuilder(strLen),0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5027,        if (cs == null ) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5028,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5031,        if ((strLen = cs.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5032,            return cs.toString();,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5034,        return new StringBuilder(strLen),4,0,0,1,2,1,0,2,0,8,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5069,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5070,            return str;,10,0,1,0,0,1,0,0,0,19,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5072,        StringBuilder buffer = new StringBuilder(strLen);,10,2,0,1,2,0,4,4,0,21,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5074,        char ch = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5075,        for (int i = 0; i < strLen; i++) {,14,4,0,1,3,0,0,0,0,19,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5076,            ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,9,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5077,            if (Character.isUpperCase(ch)) {,0,0,0,2,5,0,6,0,0,6,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5078,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5079,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5080,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,31,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5081,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5082,                ch = Character.toUpperCase(ch);,8,1,0,1,2,0,6,0,0,17,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5084,            buffer.append(ch);,0,0,0,1,2,0,6,0,0,6,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5086,        return buffer.toString();,0,1,0,1,2,1,16,0,0,17,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5111,        if (isEmpty(str) || isEmpty(sub)) {,0,1,0,3,7,0,8,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5112,            return 0;,4,0,0,0,0,1,0,0,0,5,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5114,        int count = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5115,        int idx = 0;,2,1,0,0,0,0,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5116,"        while ((idx = str.indexOf(sub, idx)) != INDEX_NOT_FOUND) {",4,1,0,3,7,0,8,0,0,14,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5117,            count++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5118,            idx += sub.length();,6,3,0,1,2,0,0,0,0,9,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5120,        return count;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5145,        if (cs == null) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5146,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5148,        int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5149,        for (int i = 0; i < sz; i++) {,10,2,0,1,3,0,0,0,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5150,            if (Character.isLetter(cs.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5151,                return false;,0,0,0,0,0,1,12,0,0,13,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5154,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5180,        if (cs == null) {,2,1,0,1,3,0,4,0,0,7,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5181,            return false;,6,1,0,0,0,1,4,0,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5183,        int sz = cs.length();,4,1,0,1,2,0,4,0,0,9,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5184,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5185,            if ((Character.isLetter(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {,2,0,0,6,13,0,0,0,0,4,75,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5186,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5189,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5214,        if (cs == null) {,22,3,0,1,3,1,0,2,0,30,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5215,            return false;,2,0,0,0,0,2,4,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5217,        int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5218,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5219,            if (Character.isLetterOrDigit(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5220,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5223,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5249,        if (cs == null) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5250,            return false;,8,1,0,0,0,1,0,0,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5252,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5253,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5254,            if ((Character.isLetterOrDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {,4,3,0,6,13,0,16,0,0,28,82,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5255,                return false;,6,2,0,0,0,1,4,0,0,16,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5258,        return true;,8,2,0,0,0,1,0,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5288,        if (cs == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5289,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5291,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5292,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5293,            if (CharUtils.isAsciiPrintable(cs.charAt(i)) == false) {,2,0,0,3,7,0,0,0,0,2,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5294,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5297,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5323,        if (cs == null) {,4,1,0,1,3,0,0,0,0,5,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5324,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5326,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5327,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,4,0,0,14,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5328,            if (Character.isDigit(cs.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5329,                return false;,0,0,0,0,0,1,4,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5332,        return true;,10,1,0,0,0,1,0,0,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5360,        if (cs == null) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5361,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5363,        int sz = cs.length();,4,0,0,1,2,0,4,0,0,8,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5364,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5365,            if ((Character.isDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,19,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5366,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5369,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5393,        if (cs == null) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5394,            return false;,6,3,0,0,0,1,0,0,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5396,        int sz = cs.length();,4,1,0,1,2,0,4,2,0,12,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5397,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,1,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5398,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5399,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5402,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5425,        if (cs == null || isEmpty(cs)) {,2,2,0,2,5,0,4,0,0,9,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5426,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5428,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5429,        for (int i = 0; i < sz; i++) {,14,4,0,1,3,0,0,0,0,19,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5430,            if (Character.isLowerCase(cs.charAt(i)) == false) {,2,1,0,3,7,0,10,0,0,14,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5431,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5434,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5457,        if (cs == null || isEmpty(cs)) {,2,2,0,2,5,0,4,0,0,9,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5458,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5460,        int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5461,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5462,            if (Character.isUpperCase(cs.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5463,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5466,        return true;,0,0,1,0,0,1,0,0,0,9,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5488,        return str == null ? EMPTY : str;,6,1,0,0,0,1,0,0,0,7,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5509,        return str == null ? defaultStr : str;,6,1,0,0,0,1,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5530,        return StringUtils.isEmpty(str) ? defaultStr : str;,6,0,0,1,2,1,6,0,0,12,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5550,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5551,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5553,        return new StringBuilder(str).reverse().toString();,6,0,0,3,6,1,4,2,0,13,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5576,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5577,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5581,"        String[] strs = split(str, separatorChar);",0,0,0,2,4,0,0,0,0,6,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5582,        ArrayUtils.reverse(strs);,2,0,1,1,2,0,10,0,0,17,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5583,"        return join(strs, separatorChar);",0,0,0,1,2,1,16,0,0,16,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5621,"        return abbreviate(str, 0, maxWidth);",0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5660,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5661,            return null;,10,1,0,0,0,1,0,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5663,        if (maxWidth < 4) {,6,1,0,1,3,1,6,0,0,14,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5664,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,0,0,2,0,3,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5666,        if (str.length() <= maxWidth) {,2,0,0,2,5,0,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5667,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5669,        if (offset > str.length()) {,0,0,0,2,5,0,12,0,0,12,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5670,            offset = str.length();,2,0,0,1,2,0,4,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5672,        if ((str.length() - offset) < (maxWidth - 3)) {,0,0,0,4,9,0,0,0,0,13,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5673,            offset = str.length() - (maxWidth - 3);,6,3,0,2,4,0,4,0,0,14,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5675,"        final String abrevMarker = ""..."";",0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5676,        if (offset <= 4) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5677,"            return str.substring(0, maxWidth - 3) + abrevMarker;",4,2,0,1,2,1,4,0,0,10,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5679,        if (maxWidth < 7) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5680,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0,0,0,1,2,0,0,0,0,3,82,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5682,        if ((offset + (maxWidth - 3)) < str.length()) {,4,3,0,4,9,0,4,0,0,11,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5683,"            return abrevMarker + abbreviate(str.substring(offset), maxWidth - 3);",0,0,0,2,4,1,0,0,0,7,69,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5685,        return abrevMarker + str.substring(str.length() - (maxWidth - 3));,2,0,0,3,6,1,0,0,0,2,66,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5718,        if (isEmpty(str) || isEmpty(middle)) {,0,1,1,3,7,0,12,0,0,17,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5719,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5722,        if (length >= str.length() || length < (middle.length()+2)) {,0,0,0,4,9,0,0,0,0,13,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5723,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5726,        int targetSting = length-middle.length();,0,0,0,1,2,0,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5727,        int startOffset = targetSting/2+targetSting%2;,6,3,0,0,0,0,6,0,0,15,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5728,        int endOffset = str.length()-targetSting/2;,0,0,0,1,2,0,0,0,0,3,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5730,        StringBuilder builder = new StringBuilder(length);,0,0,0,1,2,0,0,0,0,3,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5731,"        builder.append(str.substring(0,startOffset));",0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5732,        builder.append(middle);,0,0,0,1,2,0,6,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5733,        builder.append(str.substring(endOffset));,6,0,0,2,4,0,14,0,0,20,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5735,        return builder.toString();,0,0,0,1,2,1,4,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5766,        if (str1 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5767,            return str2;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5769,        if (str2 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5770,            return str1;,4,0,0,0,0,1,0,0,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5772,"        int at = indexOfDifference(str1, str2);",2,0,0,1,2,0,6,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5773,        if (at == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5774,            return EMPTY;,4,0,0,0,0,1,0,4,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5776,        return str2.substring(at);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5804,        if (cs1 == cs2) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5805,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5807,        if (cs1 == null || cs2 == null) {,6,3,0,1,3,0,0,0,0,9,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5808,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5811,        for (i = 0; i < cs1.length() && i < cs2.length(); ++i) {,0,0,0,3,7,0,0,0,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5812,            if (cs1.charAt(i) != cs2.charAt(i)) {,0,0,0,3,7,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5813,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5816,        if (i < cs2.length() || i < cs1.length()) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5817,            return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5819,        return INDEX_NOT_FOUND;,6,1,0,0,0,1,0,0,0,7,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5855,        if (css == null || css.length <= 1) {,8,3,0,1,3,0,6,0,0,18,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5856,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5858,        boolean anyStringNull = false;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5859,        boolean allStringsNull = true;,2,0,1,0,0,0,0,0,0,5,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5860,        int arrayLen = css.length;,6,0,0,0,0,0,0,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5861,        int shortestStrLen = Integer.MAX_VALUE;,8,1,0,0,0,0,0,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5862,        int longestStrLen = 0;,2,0,0,0,0,0,0,0,0,2,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5867,        for (int i = 0; i < arrayLen; i++) {,14,2,0,1,3,0,12,0,0,29,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5868,            if (css[i] == null) {,0,1,1,2,5,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5869,                anyStringNull = true;,6,0,0,0,0,0,4,2,0,15,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5870,                shortestStrLen = 0;,6,0,0,0,0,0,0,0,0,8,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5872,                allStringsNull = false;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5873,"                shortestStrLen = Math.min(css[i].length(), shortestStrLen);",6,0,1,3,6,0,20,0,0,31,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5874,"                longestStrLen = Math.max(css[i].length(), longestStrLen);",0,0,0,3,6,0,0,0,0,9,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5879,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,6,3,0,2,5,0,6,0,0,16,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5880,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5884,        if (shortestStrLen == 0) {,2,1,0,1,3,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5885,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5889,        int firstDiff = -1;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5890,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,0,0,0,1,3,0,0,0,0,4,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5891,            char comparisonChar = css[0].charAt(stringPos);,2,0,1,2,4,0,4,0,0,8,47,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5892,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,16,2,0,1,3,0,0,2,0,23,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5893,                if (css[arrayPos].charAt(stringPos) != comparisonChar) {,2,1,1,3,7,0,4,0,0,11,56,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5894,                    firstDiff = stringPos;,0,0,0,0,0,0,0,0,0,0,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5895,                    break;,6,1,0,0,0,0,0,0,0,7,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5898,            if (firstDiff != -1) {,2,1,0,1,3,0,0,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5899,                break;,2,1,0,0,0,0,0,0,0,3,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5903,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,10,4,0,1,3,0,0,0,0,15,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5907,            return shortestStrLen;,2,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5909,        return firstDiff;,0,0,0,0,0,1,0,0,0,1,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5946,        if (strs == null || strs.length == 0) {,0,1,0,1,3,0,8,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5947,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5949,        int smallestIndexOfDiff = indexOfDifference(strs);,0,0,0,1,2,0,0,0,0,3,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5950,        if (smallestIndexOfDiff == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5952,            if (strs[0] == null) {,0,1,1,2,5,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5953,                return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5955,            return strs[0];,0,0,1,1,2,1,0,0,0,2,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5956,        } else if (smallestIndexOfDiff == 0) {,6,0,0,1,4,0,0,0,0,7,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5958,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5961,"            return strs[0].substring(0, smallestIndexOfDiff);",4,2,0,2,4,1,0,0,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6003,        if (s == null || t == null) {,4,3,0,1,3,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6004,"            throw new IllegalArgumentException(""Strings must not be null"");",0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6024,        int n = s.length(); // length of s,6,0,1,1,2,0,4,0,0,13,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6025,        int m = t.length(); // length of t,0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6027,        if (n == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6028,            return m;,4,1,1,0,0,2,0,0,0,9,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6029,        } else if (m == 0) {,2,0,1,1,4,0,0,0,0,7,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6030,            return n;,4,0,0,0,0,1,0,0,0,4,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6033,        if (n > m) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6035,            CharSequence tmp = s;,4,0,0,0,0,0,0,2,0,6,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6036,            s = t;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6037,            t = tmp;,14,1,0,0,0,0,0,0,0,18,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6038,            n = m;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6039,            m = t.length();,6,5,1,1,2,0,8,0,0,32,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6042,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",4,1,0,2,4,0,0,0,0,5,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6043,"        int d[] = new int[n+1]; // cost array, horizontally",6,1,0,2,4,0,0,0,0,7,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6054,        for (i = 0; i<=n; i++) {,12,2,1,1,3,0,0,0,0,23,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6055,            p[i] = i;,2,0,1,1,2,0,0,0,0,7,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6058,        for (j = 1; j<=m; j++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6059,            t_j = t.charAt(j-1);,2,0,0,1,2,0,6,0,0,8,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6060,            d[0] = j;,0,0,0,1,2,0,0,0,0,1,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6062,            for (i=1; i<=n; i++) {,8,1,0,1,3,0,0,0,0,11,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6063,                cost = s.charAt(i-1)==t_j ? 0 : 1;,6,2,0,1,2,0,4,0,0,13,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6065,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",6,5,1,6,12,0,8,0,0,32,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6069,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6070,            p = d;,4,0,0,0,0,0,0,0,0,6,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6071,            d = _d;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6076,        return p[n];,4,1,1,1,2,1,8,0,0,18,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6104,"        return startsWith(str, prefix, false);",0,0,0,1,2,1,6,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6129,"        return startsWith(str, prefix, true);",0,0,0,1,2,1,6,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6144,        if (str == null || prefix == null) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6145,            return (str == null && prefix == null);,4,3,0,1,2,1,0,0,0,7,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6147,        if (prefix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6148,            return false;,4,1,0,0,0,1,0,0,0,6,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6150,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",4,1,0,2,4,1,12,0,0,17,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6172,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,0,0,0,3,7,0,0,0,0,10,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6173,            return false;,4,1,0,0,0,1,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6175,        for (int i = 0; i < searchStrings.length; i++) {,0,0,0,1,3,0,0,0,0,4,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6176,            String searchString = searchStrings[i];,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6177,"            if (StringUtils.startsWith(string, searchString)) {",2,0,1,2,5,0,0,0,0,7,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6178,                return true;,0,0,1,0,0,1,0,0,0,4,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6181,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6210,"        return endsWith(str, suffix, false);",0,0,0,1,2,1,6,0,0,7,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6236,"        return endsWith(str, suffix, true);",4,1,0,1,2,1,6,0,0,13,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6251,        if (str == null || suffix == null) {,0,0,0,1,3,0,0,0,0,4,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6252,            return str == null && suffix == null;,6,1,0,0,0,1,6,0,0,13,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6254,        if (suffix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6255,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6257,        int strOffset = str.length() - suffix.length();,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6258,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",8,5,1,2,4,1,18,0,0,39,76,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,57,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);",2,0,0,3,6,0,14,0,0,17,77,10,0.5,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,61,            },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,63,                out.write(entityValue);,0,0,0,1,2,0,6,0,0,6,23,7,0.5,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,            return 2 + (end - start) + (isHex ? 1 : 0) + 1;,6,2,0,2,4,1,0,0,0,8,47,6,0.5,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,38,            int start = index + 2;,4,1,0,0,0,0,0,0,0,5,22,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,39,            boolean isHex = false;,2,0,0,0,0,0,0,0,0,3,22,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,41,            char firstChar = input.charAt(start);,2,0,0,1,2,0,6,0,0,8,37,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,42,            if(firstChar == 'x' || firstChar == 'X') {,4,3,0,1,3,0,0,0,0,9,42,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,47,            int end = start;,4,0,0,0,0,0,0,0,0,4,16,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,48,            while(input.charAt(end) != ';') {,0,1,0,2,5,0,6,0,0,8,33,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,49,                end++;,2,0,0,0,0,0,0,0,0,3,6,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,54,                if(isHex) {,2,0,0,1,3,0,0,0,0,2,11,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,37,        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {,2,4,0,3,7,0,10,0,0,18,66,4,0.125,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,93,                for(int j=0; j<consumed; j++) {,8,1,0,1,3,0,0,0,0,10,31,8,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,94,                    if(i < sz - 2) {,0,0,0,1,3,0,0,0,0,4,16,4,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,95,"                        i += Character.charCount( Character.codePointAt(input, i) );",2,0,0,2,4,0,12,0,0,15,60,12,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,98,                        i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,102,                i--;,2,0,0,0,0,0,0,0,0,3,4,8,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,54,        if (input == null) {,6,2,0,1,3,0,6,0,0,15,20,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,58,            StringWriter writer = new StringWriter(input.length() * 2);  // TODO: Make the 2 part of the API???,2,1,0,2,4,0,4,4,0,11,99,6,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,59,"            translate(input, writer);",0,0,0,1,2,0,6,0,0,6,25,7,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,60,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1717,            return ArrayUtils.EMPTY_INT_ARRAY;,4,0,0,0,0,1,0,0,0,4,34,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,4,0,0,2,4,5,0,4,0,13,74,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,4,0,0,2,4,6,4,2,0,17,61,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,22,7,0,2,4,6,8,4,0,51,64,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,8,3,0,2,4,3,16,6,0,37,74,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,4,4,0,15,80,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,104,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,127,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,0,4,0,9,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,146,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",4,0,0,1,2,3,6,4,0,18,80,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,165,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",6,0,0,1,2,3,2,2,0,15,80,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,184,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",4,1,0,1,2,3,2,2,0,13,92,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,206,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,225,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,244,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,263,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,283,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,302,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",2,0,0,1,2,3,2,2,0,10,88,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,321,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",4,0,0,1,2,6,2,2,0,15,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,340,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,4,0,0,1,2,3,8,4,0,19,72,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,359,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,2,0,0,1,2,3,4,2,0,11,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,378,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",10,3,0,1,2,6,8,6,0,34,86,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,398,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,0,0,0,0,2,86,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,418,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",0,0,0,1,2,0,0,0,0,3,92,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,437,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",2,0,0,1,2,3,2,2,0,10,98,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,456,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,102,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,475,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",2,0,0,1,2,3,2,2,0,10,104,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,495,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = getSystemProperty(""java.util.prefs.PreferencesFactory"");",10,1,0,1,2,3,2,2,0,20,121,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,514,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,0,1,2,3,2,2,0,10,74,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,533,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,0,0,1,2,3,2,2,0,10,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,552,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",4,0,0,1,2,3,2,4,0,14,76,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,572,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,2,0,10,76,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,591,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,610,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,629,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,108,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,648,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,667,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",0,0,0,1,2,0,0,0,0,3,80,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,686,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",0,0,0,1,2,0,0,0,0,3,82,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,705,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",0,0,0,1,2,0,0,0,0,3,80,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,724,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,743,"    public static final String OS_NAME = getSystemProperty(""os.name"");",6,3,0,1,2,0,8,0,0,17,66,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,762,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",0,0,0,1,2,0,0,0,0,3,72,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,781,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,802,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ? getSystemProperty(""user.region"")",0,0,0,2,4,0,6,0,0,6,118,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,822,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,0,0,0,1,2,0,0,0,0,3,70,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,841,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,0,0,0,1,2,0,0,0,0,3,72,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,861,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",0,0,0,1,2,0,0,0,0,3,78,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,880,"    public static final String USER_NAME = getSystemProperty(""user.name"");",2,0,0,1,2,3,2,2,0,10,70,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,899,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,917,    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();,2,0,0,1,2,3,2,2,0,9,74,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,943,    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();,0,0,0,1,2,0,0,0,0,3,71,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,964,    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();,2,0,0,1,2,3,2,0,0,7,65,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,980,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,991,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",2,1,0,1,2,0,0,0,0,3,71,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1002,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",0,0,0,1,2,0,0,0,0,3,71,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1013,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",2,0,0,1,2,0,0,2,0,4,71,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1024,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1035,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1048,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",0,0,0,1,2,0,0,0,0,3,71,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1069,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",2,0,0,1,2,3,2,0,0,8,64,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1082,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",6,1,0,1,2,6,4,0,0,20,68,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1095,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",4,1,0,1,2,3,2,0,0,11,66,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1108,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",0,0,0,2,4,0,0,0,0,6,97,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1121,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",0,0,0,1,2,0,0,0,0,3,64,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1134,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",4,0,0,1,2,3,6,2,0,17,73,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1147,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",6,0,0,1,2,3,2,0,0,13,65,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1160,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",2,0,0,1,2,3,2,0,0,8,72,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1173,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",0,0,0,1,2,0,0,0,0,3,69,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1186,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX || IS_OS_SOLARIS,14,2,0,0,0,3,4,0,0,23,128,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1200,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,6,0,0,1,2,3,0,4,0,13,85,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1213,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",0,0,0,1,2,0,0,0,0,3,93,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1226,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",2,0,0,1,2,0,4,4,0,10,98,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1240,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",0,0,0,1,2,0,0,0,0,3,98,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1254,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",4,0,0,1,2,3,4,0,0,12,91,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1268,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",10,4,0,1,2,3,12,0,0,30,96,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1282,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",2,0,0,1,2,3,4,0,0,10,91,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1296,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",2,0,0,1,2,3,4,0,0,10,94,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1309,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",0,0,0,1,2,0,0,0,0,3,90,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1364,"        return toVersionFloat(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",2,1,0,2,4,1,0,0,0,3,95,7,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1388,"        return toVersionInt(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",4,0,0,2,4,1,6,0,0,10,93,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1401,"        return isJavaVersionMatch(JAVA_VERSION_TRIMMED, versionPrefix);",0,0,0,1,2,1,0,0,0,4,63,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1410,        if (JAVA_VERSION != null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1411,            for (int i = 0; i < JAVA_VERSION.length(); i++) {,6,1,0,2,5,0,8,0,0,16,49,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1412,                char ch = JAVA_VERSION.charAt(i);,2,0,0,1,2,0,14,0,0,17,33,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1413,                if (ch >= '0' && ch <= '9') {,0,0,0,1,3,0,0,0,0,4,29,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1414,                    return JAVA_VERSION.substring(i);,0,0,0,1,2,1,0,0,0,4,33,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1431,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);",0,0,0,1,2,1,0,0,0,4,69,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1442,"        return isOSNameMatch(OS_NAME, osNamePrefix);",0,0,0,1,2,1,6,0,0,6,44,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1462,            return System.getProperty(property);,0,0,0,1,2,1,0,0,0,4,36,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1574,        if (version == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1577,        return version.startsWith(versionPrefix);,0,0,0,1,2,1,6,0,0,6,41,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1597,        if (osName == null || osVersion == null) {,4,3,0,1,3,0,0,0,0,7,42,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1600,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,0,1,0,2,4,1,12,0,0,13,80,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1616,        if (osName == null) {,2,0,0,1,3,0,0,0,0,2,21,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1619,        return osName.startsWith(osNamePrefix);,2,0,0,1,2,4,6,2,0,15,39,0,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1716,        if (version == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1719,"        String[] strings = Pattern.compile(""[^\\d]"").split(version);",2,0,0,4,8,0,8,2,0,13,60,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1720,"        int[] ints = new int[Math.min(limit, strings.length)];",0,0,0,3,6,0,0,0,0,9,54,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1721,        int j = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1722,        for (int i = 0; i < strings.length && j < limit; i++) {,0,0,0,1,3,0,0,0,0,4,55,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1723,            String s = strings[i];,0,0,0,1,2,0,4,0,0,5,22,8,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1724,            if (s.length() > 0) {,0,0,0,2,5,0,0,0,0,7,21,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1725,                ints[j++] = Integer.parseInt(s);,8,0,1,2,4,0,14,4,0,31,32,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1728,        return ints;,0,0,0,0,0,1,0,0,0,1,12,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1752,        if (javaVersions == null || javaVersions.length == 0) {,2,0,0,1,3,0,0,2,0,4,55,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1755,        if (javaVersions.length == 1) {,6,1,0,1,3,2,0,4,0,13,31,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1758,        StringBuilder builder = new StringBuilder();,2,0,0,1,2,0,0,4,0,6,44,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1759,        builder.append(javaVersions[0]);,0,0,1,2,4,0,4,0,0,6,32,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1760,        builder.append('.');,0,0,0,1,2,0,4,0,0,5,20,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1761,        for (int i = 1; i < javaVersions.length; i++) {,0,0,0,1,3,0,0,0,0,4,47,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1762,            builder.append(javaVersions[i]);,0,0,1,2,4,0,4,0,0,8,32,7,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1765,            return Float.parseFloat(builder.toString());,2,1,0,2,4,1,8,0,0,11,44,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1792,        if (javaVersions == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1795,        int intVersion = 0;,2,0,0,0,0,0,0,2,0,5,19,8,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1796,        int len = javaVersions.length;,2,0,0,0,0,2,10,0,0,14,30,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1797,        if (len >= 1) {,2,1,0,1,3,0,0,0,0,3,15,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1798,            intVersion = javaVersions[0] * 100;,10,1,1,1,2,6,2,4,0,28,35,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1800,        if (len >= 2) {,2,0,0,1,3,0,0,2,0,4,15,8,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1801,            intVersion += javaVersions[1] * 10;,0,0,0,1,2,0,0,0,0,3,35,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1803,        if (len >= 3) {,0,0,0,1,3,0,0,0,0,4,15,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1804,            intVersion += javaVersions[2];,0,0,0,1,2,0,0,0,0,3,30,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1806,        return intVersion;,2,0,0,0,0,1,0,0,0,2,18,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,145,      super();,2,0,0,1,2,3,2,2,0,10,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,146,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,162,"        return toString(array, ""{}"");",0,0,0,2,4,1,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,178,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,179,            return stringIfNull;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,181,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",10,2,0,3,6,1,6,0,0,20,87,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,195,"        return new EqualsBuilder().append(array1, array2).isEquals();",6,1,0,3,6,1,6,0,0,15,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,226,        if (array == null) {,2,1,0,1,3,0,4,0,0,7,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,227,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,229,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",0,0,0,3,6,0,0,0,0,9,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,230,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,231,            Object object = array[i];,0,0,0,1,2,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,232,"            if (object instanceof Map.Entry<?, ?>) {",12,1,0,1,3,3,6,4,0,26,40,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,233,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",0,0,0,1,2,0,4,0,0,4,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,234,"                map.put(entry.getKey(), entry.getValue());",0,0,0,3,6,0,0,0,0,9,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,235,            } else if (object instanceof Object[]) {,0,0,0,2,6,0,0,0,0,8,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,236,                Object[] entry = (Object[]) object;,2,0,0,3,6,3,2,2,0,10,35,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,237,                if (entry.length < 2) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,238,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",0,0,0,0,1,0,0,0,0,1,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,242,"                map.put(entry[0], entry[1]);",6,4,0,3,6,0,4,0,0,14,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,243,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,244,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",6,1,0,0,1,0,4,2,0,13,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,249,        return map;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,294,        return items;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,312,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,313,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,315,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,328,        if (array == null) {,4,1,0,1,3,0,0,4,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,329,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,331,        return array.clone();,8,1,0,1,2,1,4,0,0,14,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,344,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,345,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,347,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,360,        if (array == null) {,6,0,0,1,3,0,0,0,0,7,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,361,            return null;,8,1,0,0,0,1,0,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,363,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,376,        if (array == null) {,14,2,0,1,3,0,0,2,0,20,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,377,            return null;,6,1,0,0,0,1,6,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,379,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,392,        if (array == null) {,4,0,0,1,3,0,4,0,0,8,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,393,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,395,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,408,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,409,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,411,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,424,        if (array == null) {,2,0,0,1,3,0,2,2,0,6,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,425,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,427,        return array.clone();,2,0,0,1,2,1,4,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,440,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,441,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,443,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,462,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,463,            return EMPTY_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,465,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,482,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,483,            return EMPTY_STRING_ARRAY;,6,1,0,0,0,1,2,4,0,13,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,485,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,502,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,503,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,4,2,0,0,8,24,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,505,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,522,        if (array == null || array.length == 0) {,8,3,0,1,3,0,0,0,0,12,41,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,523,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,525,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,542,        if (array == null || array.length == 0) {,10,4,0,1,3,0,0,0,0,14,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,543,            return EMPTY_SHORT_ARRAY;,4,0,0,0,0,1,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,545,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,562,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,563,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,565,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,582,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,583,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,585,        return array;,10,7,0,0,0,1,4,0,0,21,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,602,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,603,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,605,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,622,        if (array == null || array.length == 0) {,2,0,0,1,3,0,6,0,0,8,41,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,623,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,4,4,2,0,11,25,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,625,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,642,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,643,            return EMPTY_BOOLEAN_ARRAY;,4,0,0,0,0,1,0,0,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,645,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,662,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,663,            return EMPTY_LONG_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,665,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,682,        if (array == null || array.length == 0) {,6,3,0,1,3,0,4,0,0,13,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,683,            return EMPTY_INTEGER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,3,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,685,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,702,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,703,            return EMPTY_SHORT_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,705,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,722,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,723,            return EMPTY_CHARACTER_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,725,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,742,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,743,            return EMPTY_BYTE_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,745,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,762,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,763,            return EMPTY_DOUBLE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,765,        return array;,0,0,0,0,0,1,6,0,0,7,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,782,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,783,            return EMPTY_FLOAT_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,785,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,802,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,803,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,14,2,0,0,0,2,0,4,0,21,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,805,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,838,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,839,            return null;,6,0,0,0,0,2,0,0,0,7,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,841,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,842,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,844,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,845,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,847,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,848,        Class<?> type = array.getClass().getComponentType();,4,0,0,2,4,0,8,2,0,14,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,849,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,851,"            final T[] emptyArray = (T[]) Array.newInstance(type, 0);",0,0,0,4,8,0,0,0,0,12,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,852,            return emptyArray;,4,1,1,0,0,1,6,0,0,16,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,855,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",0,0,0,4,8,0,0,0,0,12,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,856,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,857,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,880,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,881,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,883,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,4,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,884,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,886,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,887,            endIndexExclusive = array.length;,6,0,0,0,0,0,8,2,0,19,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,889,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,890,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,891,            return EMPTY_LONG_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,894,        long[] subarray = new long[newSize];,0,0,0,2,4,0,0,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,895,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,896,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,919,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,920,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,922,        if (startIndexInclusive < 0) {,4,1,0,1,3,0,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,923,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,925,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,926,            endIndexExclusive = array.length;,10,1,0,0,0,0,0,0,0,12,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,928,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,929,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,930,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,933,        int[] subarray = new int[newSize];,2,0,1,2,4,0,0,0,0,4,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,934,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,0,1,1,2,0,0,0,0,5,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,935,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,958,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,959,            return null;,2,0,0,0,0,1,3,2,0,7,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,961,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,962,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,964,        if (endIndexExclusive > array.length) {,10,2,0,1,3,0,0,0,0,12,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,965,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,967,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,8,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,968,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,969,            return EMPTY_SHORT_ARRAY;,6,3,0,0,0,1,4,0,0,13,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,972,        short[] subarray = new short[newSize];,4,0,1,2,4,0,0,0,0,6,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,973,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,974,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,997,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,998,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1000,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1001,            startIndexInclusive = 0;,4,0,0,0,0,0,6,2,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1003,        if (endIndexExclusive > array.length) {,8,1,0,1,3,0,6,2,0,17,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1004,            endIndexExclusive = array.length;,10,1,0,0,0,0,0,0,0,13,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1006,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1007,        if (newSize <= 0) {,2,1,0,1,3,0,0,2,0,6,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1008,            return EMPTY_CHAR_ARRAY;,4,1,0,0,0,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1011,        char[] subarray = new char[newSize];,0,0,0,2,4,0,0,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1012,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1013,        return subarray;,8,1,0,0,0,1,4,0,0,14,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1036,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1037,            return null;,0,0,0,0,0,1,6,0,0,7,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1039,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1040,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1042,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1043,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1045,        int newSize = endIndexExclusive - startIndexInclusive;,12,6,0,0,0,0,0,0,0,18,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1046,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1047,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1050,        byte[] subarray = new byte[newSize];,0,0,0,2,4,0,0,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1051,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,1,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1052,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1075,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1076,            return null;,2,1,0,0,0,1,4,0,0,7,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1078,        if (startIndexInclusive < 0) {,4,1,0,1,3,0,12,4,0,21,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1079,            startIndexInclusive = 0;,10,1,0,0,0,0,4,0,0,17,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1081,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1082,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1084,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1085,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1086,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1089,        double[] subarray = new double[newSize];,0,0,0,2,4,0,0,0,0,6,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1090,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1091,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1114,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1115,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1117,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1118,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1120,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1121,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1123,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1124,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1125,            return EMPTY_FLOAT_ARRAY;,4,1,0,0,0,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1128,        float[] subarray = new float[newSize];,2,0,1,2,4,0,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1129,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1130,        return subarray;,4,0,0,0,0,1,2,2,0,9,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1153,        if (array == null) {,4,3,0,1,3,0,4,0,0,12,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1154,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1156,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1157,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1159,        if (endIndexExclusive > array.length) {,10,1,0,1,3,0,0,0,0,12,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1160,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1162,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1163,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1164,            return EMPTY_BOOLEAN_ARRAY;,0,0,0,0,0,1,0,0,0,1,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1167,        boolean[] subarray = new boolean[newSize];,2,0,1,2,4,0,0,0,0,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1168,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",6,1,0,1,2,0,0,0,0,8,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1169,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1186,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1189,                return false;,16,3,0,0,0,1,0,0,0,21,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1191,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1204,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1207,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1209,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1222,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1225,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1227,        return true;,6,0,0,0,0,1,0,2,0,9,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1240,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1243,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1245,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1258,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1261,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1263,        return true;,6,0,0,0,0,1,4,0,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1276,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1279,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1281,        return true;,2,1,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1294,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,15,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1297,                return false;,2,1,0,0,0,1,6,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1299,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1312,        if ((array1 == null && array2 != null && array2.length > 0) ||,12,7,0,1,3,0,10,0,0,29,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1315,                return false;,0,0,0,0,0,1,0,2,0,5,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1317,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1330,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1333,                return false;,4,1,0,0,0,1,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1335,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1360,        if (array == null) {,6,1,0,1,3,0,0,0,0,7,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1361,            return 0;,2,1,0,0,0,1,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1363,        return Array.getLength(array);,0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1376,        if (array1 == null || array2 == null) {,16,4,0,1,3,0,4,0,0,25,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1377,"            throw new IllegalArgumentException(""The Array must not be null"");",6,0,0,1,2,0,0,0,0,7,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1379,        return array1.getClass().getName().equals(array2.getClass().getName());,2,0,0,5,10,1,22,4,0,28,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1394,        if (array == null) {,2,1,0,1,3,0,0,2,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1395,            return;,2,0,0,0,0,1,8,0,0,12,7,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1397,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1398,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1400,        while (j > i) {,6,1,0,1,3,0,4,0,0,13,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1401,            tmp = array[j];,8,1,1,1,2,0,0,0,0,15,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1402,            array[j] = array[i];,8,0,1,2,4,0,4,0,0,17,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1403,            array[i] = tmp;,6,0,1,1,2,0,0,0,0,12,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1404,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1405,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1407,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1417,        if (array == null) {,4,2,0,1,3,0,14,0,0,21,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1418,            return;,4,2,0,0,0,1,4,0,0,10,7,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1420,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1421,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1423,        while (j > i) {,4,0,0,1,3,0,0,0,0,4,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1424,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1425,            array[j] = array[i];,0,1,0,2,4,0,4,0,0,5,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1426,            array[i] = tmp;,0,0,1,1,2,0,0,0,0,9,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1427,            j--;,10,1,0,0,0,0,0,0,0,12,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1428,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1430,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1440,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1441,            return;,2,0,0,0,0,1,0,0,0,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1443,        int i = 0;,4,1,0,0,0,0,0,0,0,5,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1444,        int j = array.length - 1;,6,1,0,0,0,0,12,0,0,19,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1446,        while (j > i) {,8,2,0,1,3,0,0,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1447,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1448,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1449,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1450,            j--;,4,0,0,0,0,0,0,0,0,6,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1451,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1453,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1463,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1464,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1466,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1467,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1469,        while (j > i) {,22,2,0,1,3,0,0,4,0,30,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1470,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1471,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1472,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1473,            j--;,8,0,0,0,0,0,0,0,0,9,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1474,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1476,    },6,3,0,0,1,0,4,0,0,15,1,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1486,        if (array == null) {,2,1,0,1,3,0,8,0,0,12,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1487,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1489,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1490,        int j = array.length - 1;,10,4,0,0,0,0,2,0,0,16,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1492,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1493,            tmp = array[j];,10,2,0,1,2,0,0,0,0,14,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1494,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1495,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1496,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1497,            i++;,2,0,0,0,0,0,0,0,0,2,4,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1499,    },0,0,0,0,1,0,8,2,0,10,1,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1509,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1510,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1512,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1513,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1515,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1516,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1517,            array[j] = array[i];,2,1,1,2,4,0,0,0,0,12,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1518,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1519,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1520,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1522,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1532,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1533,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1535,        int i = 0;,4,0,0,0,0,0,0,0,0,4,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1536,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1538,        while (j > i) {,2,0,1,1,3,0,2,0,0,8,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1539,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1540,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1541,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1542,            j--;,4,0,0,0,0,0,6,0,0,10,4,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1543,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1545,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1555,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1556,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1558,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1559,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1561,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1562,            tmp = array[j];,2,1,0,1,2,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1563,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1564,            array[i] = tmp;,8,1,1,1,2,0,0,0,0,14,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1565,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1566,            i++;,2,0,0,0,0,0,0,0,0,4,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1568,    },2,1,0,0,1,0,6,0,0,9,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1578,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1579,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1581,        int i = 0;,4,0,0,0,0,0,0,0,0,4,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1582,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1584,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1585,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1586,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1587,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1588,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1589,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1591,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1609,"        return indexOf(array, objectToFind, 0);",0,0,0,1,2,1,6,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1627,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1628,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,4,0,0,6,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1630,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1631,            startIndex = 0;,8,1,0,0,0,0,0,0,0,11,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1633,        if (objectToFind == null) {,0,0,0,1,3,0,0,0,0,4,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1634,            for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1635,                if (array[i] == null) {,6,4,1,2,5,0,4,0,0,18,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1636,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1639,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,4,10,0,0,0,0,14,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1640,            for (int i = startIndex; i < array.length; i++) {,2,1,0,1,3,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1641,                if (objectToFind.equals(array[i])) {,0,0,0,3,7,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1642,                    return i;,2,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1646,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,6,0,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1660,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1678,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1679,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1681,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1682,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1683,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1684,            startIndex = array.length - 1;,6,1,0,0,0,0,6,0,0,14,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1686,        if (objectToFind == null) {,4,1,0,1,3,0,4,2,0,11,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1687,            for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1688,                if (array[i] == null) {,6,1,1,2,5,0,4,0,0,16,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1689,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1692,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,4,0,0,4,10,0,10,0,0,14,74,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1693,            for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1694,                if (objectToFind.equals(array[i])) {,0,0,0,3,7,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1695,                    return i;,2,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1699,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1712,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1728,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1746,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1747,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1749,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1750,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1752,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1753,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1754,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1757,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1771,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,11,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1789,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1790,            return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1792,        if (startIndex < 0) {,8,1,0,1,3,0,0,0,0,10,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1793,            return INDEX_NOT_FOUND;,6,0,0,0,0,1,0,0,0,6,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1794,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,1,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1795,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1797,        for (int i = startIndex; i >= 0; i--) {,0,1,0,1,3,0,0,2,0,4,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1798,            if (valueToFind == array[i]) {,4,2,1,2,5,0,0,0,0,10,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1799,                return i;,2,0,0,0,0,1,6,0,0,8,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1802,        return INDEX_NOT_FOUND;,10,1,0,0,0,1,0,0,0,11,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1815,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1831,"        return indexOf(array, valueToFind, 0);",4,1,0,1,2,1,6,0,0,11,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1849,        if (array == null) {,2,1,0,1,3,0,0,0,0,4,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1850,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1852,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1853,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1855,        for (int i = startIndex; i < array.length; i++) {,14,1,0,1,3,0,0,0,0,16,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1856,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1857,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1860,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1874,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1892,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1893,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1895,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1896,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1897,        } else if (startIndex >= array.length) {,12,2,0,1,4,0,0,0,0,16,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1898,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1900,        for (int i = startIndex; i >= 0; i--) {,14,2,0,1,3,0,0,0,0,18,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1901,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1902,                return i;,2,0,0,0,0,1,8,0,0,11,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1905,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1918,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,18,0,0,22,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1934,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1952,        if (array == null) {,6,2,0,1,3,0,0,0,0,8,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1953,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1955,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,4,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1956,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1958,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1959,            if (valueToFind == array[i]) {,2,0,0,2,5,0,0,2,0,5,30,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1960,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1963,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,5,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1977,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1995,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1996,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,6,0,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1998,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1999,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2000,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2001,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2003,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2004,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2005,                return i;,4,0,0,0,0,1,0,0,0,5,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2008,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2021,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,1,54,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2038,"        return indexOf(array, valueToFind, 0);",4,1,0,1,2,1,6,0,0,11,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2057,        if (array == null) {,2,1,1,1,3,0,4,0,0,16,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2058,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2060,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2061,            startIndex = 0;,0,0,1,0,0,0,4,0,0,8,15,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2063,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2064,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2065,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2068,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,4,23,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2083,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2102,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2103,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,4,23,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2105,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2106,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2107,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2108,            startIndex = array.length - 1;,14,2,0,0,0,0,4,2,0,23,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2110,        for (int i = startIndex; i >= 0; i--) {,0,0,0,1,3,0,4,0,0,4,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2111,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2112,                return i;,14,1,0,0,0,2,0,0,0,17,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2115,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2129,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,0,0,1,2,1,0,0,0,3,54,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2145,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2163,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2164,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2166,        if (startIndex < 0) {,14,2,0,1,3,0,0,0,0,17,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2167,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2169,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2170,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2171,                return i;,0,0,0,0,0,1,8,0,0,8,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2174,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2188,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2206,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2207,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2209,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2210,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2211,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2212,            startIndex = array.length - 1;,0,0,0,0,0,0,0,0,0,0,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2214,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,0,0,0,0,5,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2215,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2216,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2219,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2232,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2248,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2265,"        return indexOf(array, valueToFind, 0, tolerance);",0,0,0,1,2,1,6,0,0,6,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2283,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2284,            return INDEX_NOT_FOUND;,10,1,0,0,0,1,0,0,0,11,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2286,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2287,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2289,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2290,            if (valueToFind == array[i]) {,8,2,1,2,5,0,0,0,0,14,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2291,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2294,        return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,6,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2315,        if (ArrayUtils.isEmpty(array)) {,2,0,0,2,5,0,6,0,0,8,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2316,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2318,        if (startIndex < 0) {,6,4,0,1,3,0,4,2,0,16,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2319,            startIndex = 0;,8,3,0,0,0,0,18,0,0,30,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2321,        double min = valueToFind - tolerance;,6,1,0,0,0,0,0,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2322,        double max = valueToFind + tolerance;,16,2,0,0,0,0,0,0,0,18,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2323,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2324,            if (array[i] >= min && array[i] <= max) {,6,3,1,3,7,0,0,0,0,17,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2325,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2328,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2342,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2359,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",4,0,0,1,2,1,8,0,0,12,69,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2377,        if (ArrayUtils.isEmpty(array)) {,2,1,0,2,5,0,6,0,0,9,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2378,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2380,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2381,            return INDEX_NOT_FOUND;,6,1,0,0,0,1,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2382,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2383,            startIndex = array.length - 1;,8,1,0,0,0,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2385,        for (int i = startIndex; i >= 0; i--) {,12,2,0,1,3,0,0,0,0,15,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2386,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2387,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2390,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2411,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,10,0,0,10,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2412,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2414,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2415,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2416,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2417,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2419,        double min = valueToFind - tolerance;,0,0,0,0,0,0,0,0,0,0,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2420,        double max = valueToFind + tolerance;,6,1,0,0,0,0,0,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2421,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2422,            if (array[i] >= min && array[i] <= max) {,0,0,0,3,7,0,0,0,0,10,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2423,                return i;,2,0,0,0,0,1,4,0,0,6,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2426,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,4,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2439,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2456,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;",0,0,0,1,2,1,0,0,0,4,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2472,"        return indexOf(array, valueToFind, 0);",2,1,0,1,2,1,6,0,0,9,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2490,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2491,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2493,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2494,            startIndex = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2496,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,1,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2497,            if (valueToFind == array[i]) {,4,1,1,2,5,0,0,0,0,9,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2498,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2501,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2515,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2533,        if (ArrayUtils.isEmpty(array)) {,2,0,0,2,5,0,6,0,0,8,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2534,            return INDEX_NOT_FOUND;,10,1,0,0,0,1,0,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2536,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2537,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2538,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2539,            startIndex = array.length - 1;,2,0,0,0,0,0,6,0,0,9,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2541,        for (int i = startIndex; i >= 0; i--) {,10,1,0,1,3,0,0,0,0,14,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2542,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2543,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2546,        return INDEX_NOT_FOUND;,2,1,0,0,0,1,8,0,0,11,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2559,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2575,"        return indexOf(array, valueToFind, 0);",0,0,0,1,2,1,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2594,        if (ArrayUtils.isEmpty(array)) {,8,1,0,2,5,0,6,0,0,16,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2595,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2597,        if (startIndex < 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2598,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2600,        for (int i = startIndex; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2601,            if (valueToFind == array[i]) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2602,                return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2605,        return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2620,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0,0,0,1,2,1,0,0,0,4,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2638,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,6,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2639,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2641,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2642,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2643,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2644,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2646,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,6,0,0,16,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2647,            if (valueToFind == array[i]) {,10,2,1,2,5,0,6,0,0,23,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2648,                return i;,4,1,0,0,0,1,0,0,0,5,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2651,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2664,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",4,1,1,1,2,1,6,2,0,17,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2682,        if (array == null) {,6,2,1,1,3,0,4,0,0,17,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2683,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2684,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2685,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2687,        final char[] result = new char[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2688,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2689,            result[i] = array[i].charValue();,0,0,1,3,6,0,10,0,0,19,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2691,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2704,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2705,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2706,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2707,            return EMPTY_CHAR_ARRAY;,20,3,1,0,0,1,8,0,0,34,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2709,        final char[] result = new char[array.length];,8,0,0,2,4,1,6,0,0,15,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2710,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2711,            Character b = array[i];,2,0,1,1,2,0,0,2,0,8,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2712,            result[i] = (b == null ? valueForNull : b.charValue());,4,1,1,3,6,0,4,0,0,14,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2714,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2726,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2727,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2728,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2729,            return EMPTY_CHARACTER_OBJECT_ARRAY;,4,0,0,0,0,1,0,0,0,4,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2731,        final Character[] result = new Character[array.length];,6,0,0,2,4,1,0,4,0,11,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2732,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,6,0,0,6,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2733,            result[i] = Character.valueOf(array[i]);,4,1,0,3,6,0,0,0,0,5,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2735,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2750,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2751,            return null;,4,1,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2752,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2753,            return EMPTY_LONG_ARRAY;,14,2,0,0,0,1,0,0,0,18,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2755,        final long[] result = new long[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2756,        for (int i = 0; i < array.length; i++) {,12,2,0,1,3,0,0,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2757,            result[i] = array[i].longValue();,0,0,1,3,6,0,2,0,0,11,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2759,        return result;,10,3,0,0,0,1,0,0,0,13,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2772,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2773,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2774,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2775,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2777,        final long[] result = new long[array.length];,10,1,0,2,4,1,0,0,0,12,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2778,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2779,            Long b = array[i];,2,0,1,1,2,0,0,2,0,8,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2780,            result[i] = (b == null ? valueForNull : b.longValue());,4,1,1,3,6,0,4,0,0,14,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2782,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2794,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2795,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2796,        } else if (array.length == 0) {,8,1,1,1,4,1,0,0,0,12,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2797,            return EMPTY_LONG_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2799,        final Long[] result = new Long[array.length];,8,0,0,2,4,1,0,4,0,13,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2800,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2801,            result[i] = Long.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2803,        return result;,2,0,0,0,0,1,0,0,0,3,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2818,        if (array == null) {,0,0,0,1,3,0,8,0,0,9,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2819,            return null;,2,0,0,0,0,1,6,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2820,        } else if (array.length == 0) {,6,1,0,1,4,0,12,0,0,19,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2821,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2823,        final int[] result = new int[array.length];,6,0,0,2,4,1,8,0,0,16,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2824,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2825,            result[i] = array[i].intValue();,0,0,1,3,6,0,2,0,0,11,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2827,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2840,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2841,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2842,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2843,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2845,        final int[] result = new int[array.length];,6,0,0,2,4,1,0,0,0,7,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2846,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2847,            Integer b = array[i];,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2848,            result[i] = (b == null ? valueForNull : b.intValue());,4,1,1,3,6,0,4,0,0,14,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2850,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2862,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2863,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2864,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2865,            return EMPTY_INTEGER_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2867,        final Integer[] result = new Integer[array.length];,6,0,0,2,4,1,0,4,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2868,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2869,            result[i] = Integer.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2871,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2886,        if (array == null) {,4,1,0,1,3,0,6,0,0,11,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2887,            return null;,10,1,0,0,0,1,0,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2888,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2889,            return EMPTY_SHORT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2891,        final short[] result = new short[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2892,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2893,            result[i] = array[i].shortValue();,8,0,1,3,6,0,10,0,0,27,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2895,        return result;,4,0,0,0,0,1,10,0,0,15,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2908,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2909,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2910,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2911,            return EMPTY_SHORT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2913,        final short[] result = new short[array.length];,6,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2914,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2915,            Short b = array[i];,2,0,1,1,2,0,0,2,0,8,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2916,            result[i] = (b == null ? valueForNull : b.shortValue());,6,2,1,3,6,0,8,0,0,21,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2918,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2930,        if (array == null) {,4,2,0,1,3,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2931,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2932,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2933,            return EMPTY_SHORT_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2935,        final Short[] result = new Short[array.length];,8,0,0,2,4,1,0,4,0,13,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2936,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2937,            result[i] = Short.valueOf(array[i]);,4,1,1,3,6,0,8,0,0,23,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2939,        return result;,2,0,0,0,0,1,4,0,0,6,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2954,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2955,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2956,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2957,            return EMPTY_BYTE_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2959,        final byte[] result = new byte[array.length];,2,0,0,2,4,0,0,0,0,2,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2960,        for (int i = 0; i < array.length; i++) {,4,1,0,1,3,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2961,            result[i] = array[i].byteValue();,10,1,0,3,6,0,0,0,0,12,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2963,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2976,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2977,            return null;,2,0,1,0,0,1,0,0,0,4,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2978,        } else if (array.length == 0) {,2,1,0,1,4,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2979,            return EMPTY_BYTE_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2981,        final byte[] result = new byte[array.length];,6,0,0,2,4,1,0,0,0,7,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2982,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2983,            Byte b = array[i];,4,0,1,1,2,0,0,2,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2984,            result[i] = (b == null ? valueForNull : b.byteValue());,6,1,1,3,6,0,4,0,0,17,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2986,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2998,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2999,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3000,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3001,            return EMPTY_BYTE_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3003,        final Byte[] result = new Byte[array.length];,6,0,0,2,4,1,0,4,0,11,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3004,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3005,            result[i] = Byte.valueOf(array[i]);,0,0,1,3,6,0,4,0,0,13,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3007,        return result;,4,0,0,0,0,1,0,0,0,4,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3022,        if (array == null) {,2,2,0,1,3,0,10,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3023,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3024,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3025,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3027,        final double[] result = new double[array.length];,0,0,0,2,4,0,0,0,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3028,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3029,            result[i] = array[i].doubleValue();,0,0,1,3,6,0,2,0,0,11,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3031,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3044,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3045,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3046,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3047,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3049,        final double[] result = new double[array.length];,6,0,0,2,4,1,0,0,0,7,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3050,        for (int i = 0; i < array.length; i++) {,12,2,0,1,3,0,0,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3051,            Double b = array[i];,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3052,            result[i] = (b == null ? valueForNull : b.doubleValue());,4,1,1,3,6,0,4,0,0,14,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3054,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3066,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3067,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3068,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3069,            return EMPTY_DOUBLE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3071,        final Double[] result = new Double[array.length];,6,0,0,2,4,1,0,4,0,11,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3072,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3073,            result[i] = Double.valueOf(array[i]);,0,0,0,3,6,0,0,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3075,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3090,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3091,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3092,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3093,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3095,        final float[] result = new float[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3096,        for (int i = 0; i < array.length; i++) {,12,2,0,1,3,0,0,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3097,            result[i] = array[i].floatValue();,0,0,1,3,6,0,2,0,0,11,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3099,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3112,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3113,            return null;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3114,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3115,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3117,        final float[] result = new float[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3118,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3119,            Float b = array[i];,0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3120,            result[i] = (b == null ? valueForNull : b.floatValue());,4,1,1,3,6,0,4,0,0,14,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3122,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3134,        if (array == null) {,6,2,0,1,3,0,0,0,0,8,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3135,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3136,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3137,            return EMPTY_FLOAT_OBJECT_ARRAY;,2,1,0,0,0,1,10,0,0,14,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3139,        final Float[] result = new Float[array.length];,0,0,0,2,4,0,0,0,0,6,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3140,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3141,            result[i] = Float.valueOf(array[i]);,0,0,0,3,6,0,4,0,0,5,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3143,        return result;,8,2,0,0,0,1,0,0,0,10,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3158,        if (array == null) {,4,0,0,1,3,0,0,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3159,            return null;,8,0,0,0,0,1,2,0,0,11,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3160,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3161,            return EMPTY_BOOLEAN_ARRAY;,2,0,0,0,0,1,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3163,        final boolean[] result = new boolean[array.length];,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3164,        for (int i = 0; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3165,            result[i] = array[i].booleanValue();,0,0,1,3,6,0,2,0,0,11,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3167,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3180,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3181,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3182,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3183,            return EMPTY_BOOLEAN_ARRAY;,4,3,0,0,0,1,4,0,0,12,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3185,        final boolean[] result = new boolean[array.length];,6,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3186,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3187,            Boolean b = array[i];,2,0,1,1,2,0,0,2,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3188,            result[i] = (b == null ? valueForNull : b.booleanValue());,4,1,1,3,6,0,4,0,0,14,58,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3190,        return result;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3202,        if (array == null) {,2,0,0,1,3,0,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3203,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3204,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3205,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3207,        final Boolean[] result = new Boolean[array.length];,0,0,0,2,4,0,0,0,0,6,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3208,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3209,            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);,2,1,0,3,6,0,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3211,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3223,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3224,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3226,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3237,        if (array == null || array.length == 0) {,8,3,0,1,3,0,0,0,0,11,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3238,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3240,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3251,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3252,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3254,        return false;,0,0,0,0,0,1,0,2,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3265,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3266,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3268,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3279,        if (array == null || array.length == 0) {,8,3,0,1,3,0,0,0,0,13,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3280,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3282,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3293,        if (array == null || array.length == 0) {,6,3,0,1,3,0,4,0,0,13,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3294,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3296,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3307,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3308,            return true;,10,1,0,0,0,1,0,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3310,        return false;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3321,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3322,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3324,        return false;,12,3,0,0,0,1,0,0,0,16,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3335,        if (array == null || array.length == 0) {,6,3,0,1,3,0,4,0,0,13,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3336,            return true;,6,1,0,0,0,1,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3338,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3350,         return (array != null && array.length != 0);,8,3,0,1,2,1,0,0,0,13,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3361,        return (array != null && array.length != 0);,6,3,0,1,2,1,0,0,0,9,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3372,        return (array != null && array.length != 0);,6,3,0,1,2,1,0,0,0,9,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3383,        return (array != null && array.length != 0);,0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3394,        return (array != null && array.length != 0);,6,3,0,1,2,1,0,0,0,10,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3405,        return (array != null && array.length != 0);,2,0,0,1,2,1,0,0,0,2,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3416,        return (array != null && array.length != 0);,0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3427,        return (array != null && array.length != 0);,6,3,0,1,2,1,0,0,0,9,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3438,        return (array != null && array.length != 0);,0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3465,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3466,            return clone(array2);,0,0,0,1,2,1,4,0,0,4,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3467,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3468,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3470,        final Class<?> type1 = array1.getClass().getComponentType();,2,0,0,2,4,1,6,2,0,11,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3472,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",12,1,0,4,8,0,6,4,0,23,80,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3473,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",6,0,0,1,2,0,12,2,0,20,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3475,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",16,2,0,1,2,0,16,0,0,34,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3488,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3476,        } catch (ArrayStoreException ase) {,2,0,0,1,4,0,6,2,0,10,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3483,            final Class<?> type2 = array2.getClass().getComponentType();,0,0,0,2,4,0,0,0,0,6,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3484,            if (!type1.isAssignableFrom(type2)){,0,0,0,2,5,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3485,"                throw new IllegalArgumentException(""Cannot store ""+type2.getName()+"" in an array of ""+type1.getName(), ase);",2,1,0,3,6,0,12,2,0,20,108,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3487,"            throw ase; // No, so rethrow original",4,0,0,0,0,0,0,0,0,4,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3489,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3510,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3511,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3512,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3513,            return clone(array1);,0,0,0,1,2,1,4,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3515,        boolean[] joinedArray = new boolean[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3516,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",10,2,0,1,2,0,8,0,0,20,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3517,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",10,0,0,1,2,0,8,0,0,20,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3518,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3539,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3540,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3541,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3542,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3544,        char[] joinedArray = new char[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3545,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",10,1,0,1,2,0,8,0,0,19,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3546,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3547,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3568,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3569,            return clone(array2);,0,0,1,1,2,1,8,0,0,12,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3570,        } else if (array2 == null) {,2,1,0,1,4,0,6,0,0,9,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3571,            return clone(array1);,8,3,0,1,2,1,10,0,0,21,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3573,        byte[] joinedArray = new byte[array1.length + array2.length];,2,1,0,2,4,0,8,0,0,11,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3574,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3575,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3576,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3597,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3598,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3599,        } else if (array2 == null) {,8,2,1,1,4,0,14,0,0,34,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3600,            return clone(array1);,12,1,0,1,2,1,22,0,0,35,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3602,        short[] joinedArray = new short[array1.length + array2.length];,12,1,0,2,4,0,0,0,0,14,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3603,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3604,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0,0,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3605,        return joinedArray;,2,1,0,0,0,1,0,0,0,4,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3626,        if (array1 == null) {,2,0,0,1,3,0,0,0,0,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3627,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3628,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3629,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3631,        int[] joinedArray = new int[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3632,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",2,0,0,1,2,0,0,0,0,2,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3633,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3634,        return joinedArray;,4,1,0,0,0,1,0,0,0,5,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3655,        if (array1 == null) {,4,2,0,1,3,0,4,0,0,11,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3656,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3657,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3658,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3660,        long[] joinedArray = new long[array1.length + array2.length];,12,1,0,2,4,0,6,0,0,20,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3661,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3662,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3663,        return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3684,        if (array1 == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3685,            return clone(array2);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3686,        } else if (array2 == null) {,2,1,0,1,4,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3687,            return clone(array1);,2,1,0,1,2,1,4,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3689,        float[] joinedArray = new float[array1.length + array2.length];,16,4,0,2,4,0,0,0,0,20,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3690,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3691,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3692,        return joinedArray;,0,1,1,0,0,1,2,0,0,12,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3713,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3714,            return clone(array2);,0,0,0,1,2,1,10,0,0,10,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3715,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3716,            return clone(array1);,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3718,        double[] joinedArray = new double[array1.length + array2.length];,10,1,0,2,4,0,0,0,0,11,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3719,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0,0,0,1,2,0,8,0,0,8,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3720,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,8,0,0,16,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3721,        return joinedArray;,0,0,0,0,0,1,6,0,0,6,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3754,        if (array != null){,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3755,            type = array.getClass();,2,1,0,1,2,0,0,2,0,7,24,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3756,        } else if (element != null) {,0,0,0,1,4,0,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3757,            type = element.getClass();,4,0,0,1,2,1,8,0,0,14,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3759,"            throw new IllegalArgumentException(""Arguments cannot both be null"");            ",0,0,0,1,2,0,0,2,0,4,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3762,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",2,0,0,4,8,0,6,4,0,12,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3763,        newArray[newArray.length - 1] = element;,10,1,1,1,2,0,4,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3764,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3789,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",0,0,0,4,8,0,0,0,0,12,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3790,        newArray[newArray.length - 1] = element;,18,3,1,1,2,0,4,0,0,30,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3791,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3816,"        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);",6,0,0,4,8,0,4,0,0,10,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3817,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3818,        return newArray;,2,0,0,0,0,1,4,0,0,6,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3843,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",6,0,0,4,8,0,4,0,0,10,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3844,        newArray[newArray.length - 1] = element;,0,0,1,1,2,0,0,0,0,4,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3845,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3870,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);",12,1,0,4,8,0,4,0,0,17,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3871,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3872,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3897,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);",0,0,0,4,8,0,0,0,0,12,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3898,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3899,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3924,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",6,0,0,4,8,0,4,0,0,10,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3925,        newArray[newArray.length - 1] = element;,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3926,        return newArray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3951,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",6,0,0,4,8,0,4,0,0,10,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3952,        newArray[newArray.length - 1] = element;,6,1,1,1,2,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3953,        return newArray;,6,0,0,0,0,1,0,0,0,7,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3978,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);",10,0,0,4,8,0,4,0,0,15,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3979,        newArray[newArray.length - 1] = element;,8,2,1,1,2,0,0,0,0,13,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3980,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3993,        if (array != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3994,            int arrayLength = Array.getLength(array);,2,0,0,1,2,0,6,0,0,8,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3995,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);",0,0,0,3,6,0,0,0,0,9,90,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3996,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",0,0,0,1,2,0,0,0,0,3,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3997,            return newArray;,2,1,0,0,0,1,8,0,0,11,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,3999,"        return Array.newInstance(newArrayComponentType, 1);",0,0,0,1,2,1,0,0,0,4,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4032,        Class<?> clss = null;,2,0,0,0,0,0,0,4,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4033,        if (array != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4034,            clss = array.getClass().getComponentType();,2,0,0,2,4,0,6,0,0,9,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4035,        } else if (element != null) {,8,1,0,1,4,0,4,0,0,13,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4036,            clss = element.getClass();,2,0,0,1,2,0,4,0,0,7,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4038,"            throw new IllegalArgumentException(""Array and element cannot both be null"");            ",6,0,0,1,2,0,4,2,0,14,76,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4041,"        final T[] newArray = (T[]) add(array, index, element, clss);",6,1,0,4,8,1,10,4,0,22,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4042,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4073,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",8,1,0,4,8,1,12,0,0,21,77,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4105,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",6,1,0,4,8,1,12,0,0,19,78,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4136,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",0,0,0,4,8,1,0,0,0,13,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4167,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);",4,0,0,4,8,1,12,0,0,16,71,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4198,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);",16,2,0,4,8,1,12,0,0,31,73,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4229,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",0,0,0,4,8,1,0,0,0,13,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4260,"        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);",18,2,0,4,8,1,12,0,0,33,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4291,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);",6,0,0,4,8,1,16,0,0,22,74,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4306,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4307,            if (index != 0) {,6,4,0,1,3,0,8,0,0,19,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4308,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",2,1,0,1,2,0,0,2,0,7,71,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4310,"            Object joinedArray = Array.newInstance(clss, 1);",2,0,0,1,2,0,6,2,0,10,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4311,"            Array.set(joinedArray, 0, element);",0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4312,            return joinedArray;,2,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4314,        int length = Array.getLength(array);,2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4315,        if (index > length || index < 0) {,6,3,0,1,3,0,0,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4316,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",4,1,0,1,2,0,0,2,0,9,79,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4318,"        Object result = Array.newInstance(clss, length + 1);",0,0,0,1,2,0,0,0,0,3,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4319,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,1,2,0,10,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4320,"        Array.set(result, index, element);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4321,        if (index < length) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4322,"            System.arraycopy(array, index, result, index + 1, length - index);",10,2,0,1,2,0,10,0,0,23,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4324,        return result;,4,0,0,0,0,1,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4357,"        return (T[]) remove((Object) array, index);",2,0,0,4,8,1,10,4,0,17,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4386,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4387,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4388,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4390,"        return remove(array, index);",6,1,0,1,2,1,6,0,0,13,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4422,"        return (boolean[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4451,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4452,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4453,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4455,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4487,"        return (byte[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4516,"        int index = indexOf(array, element);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4517,        if (index == INDEX_NOT_FOUND) {,6,3,1,1,3,0,14,0,0,27,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4518,            return clone(array);,0,0,0,1,2,1,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4520,"        return remove(array, index);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4552,"        return (char[]) remove((Object) array, index);",6,1,0,4,8,1,4,2,0,13,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4581,"        int index = indexOf(array, element);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4582,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4583,            return clone(array);,2,0,0,1,2,1,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4585,"        return remove(array, index);",10,1,0,1,2,1,6,0,0,18,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4617,"        return (double[]) remove((Object) array, index);",2,1,0,4,8,1,10,2,0,16,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4646,"        int index = indexOf(array, element);",0,0,0,1,2,0,0,0,0,3,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4647,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4648,            return clone(array);,12,1,0,1,2,1,8,2,0,24,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4650,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4682,"        return (float[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4711,"        int index = indexOf(array, element);",4,1,1,1,2,0,6,0,0,15,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4712,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4713,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4715,"        return remove(array, index);",8,1,0,1,2,1,6,0,0,16,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4747,"        return (int[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4776,"        int index = indexOf(array, element);",2,0,0,1,2,0,18,0,0,21,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4777,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,6,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4778,            return clone(array);,2,1,0,1,2,1,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4780,"        return remove(array, index);",0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4812,"        return (long[]) remove((Object) array, index);",0,0,0,4,8,1,0,0,0,13,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4841,"        int index = indexOf(array, element);",2,0,0,1,2,0,6,0,0,8,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4842,        if (index == INDEX_NOT_FOUND) {,0,0,0,1,3,0,0,0,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4843,            return clone(array);,0,0,0,1,2,1,4,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4845,"        return remove(array, index);",2,0,0,1,2,1,16,0,0,19,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4877,"        return (short[]) remove((Object) array, index);",2,0,0,4,8,1,4,2,0,8,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4906,"        int index = indexOf(array, element);",6,1,0,1,2,0,6,0,0,13,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4907,        if (index == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4908,            return clone(array);,10,1,0,1,2,1,0,0,0,12,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4910,"        return remove(array, index);",2,0,0,1,2,1,6,0,0,8,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4935,        int length = getLength(array);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4936,        if (index < 0 || index >= length) {,6,3,0,1,3,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4937,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",4,1,0,1,2,0,0,2,0,9,79,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4940,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);",6,1,0,3,6,0,10,2,0,20,83,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4941,"        System.arraycopy(array, 0, result, 0, index);",0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4942,        if (index < length - 1) {,4,2,0,1,3,0,0,0,0,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4943,"            System.arraycopy(array, index + 1, result, index, length - index - 1);",6,2,0,1,2,0,10,0,0,18,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,4946,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1821,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1822,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1324,        return new File(System.getProperty(JAVA_HOME_KEY));,0,0,0,2,4,1,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1340,        return new File(System.getProperty(JAVA_IO_TMPDIR_KEY));,0,0,0,2,4,1,0,0,0,7,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1418,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1463,        } catch (SecurityException ex) {,4,1,0,1,4,0,0,2,0,7,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1465,"            System.err.println(""Caught a SecurityException reading the system property '"" + property",6,1,0,0,1,0,2,0,0,10,88,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1467,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1484,        return new File(System.getProperty(USER_DIR_KEY));,0,0,0,2,4,1,6,2,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1500,        return new File(System.getProperty(USER_HOME_KEY));,0,0,0,2,4,1,6,2,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1513,        return JAVA_AWT_HEADLESS != null ? JAVA_AWT_HEADLESS.equals(Boolean.TRUE.toString()) : false;,6,1,0,2,4,1,6,0,0,14,93,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1534,        return JAVA_VERSION_FLOAT >= requiredVersion;,14,1,0,0,0,1,6,2,0,24,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1556,        return JAVA_VERSION_INT >= requiredVersion;,4,1,0,0,0,1,0,0,0,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1575,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1598,            return false;,2,0,0,0,0,1,10,0,0,14,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1617,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1646,"        return toVersionFloat(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));",2,0,0,2,4,1,0,0,0,2,78,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1673,"        return toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));",0,0,0,2,4,1,0,0,0,7,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1696,"        return toJavaVersionIntArray(version, Integer.MAX_VALUE);",4,0,0,1,2,1,4,0,0,8,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1753,            return 0f;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1756,            return javaVersions[0];,0,0,1,1,2,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1766,        } catch (Exception ex) {,2,0,0,1,4,0,0,2,0,5,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1767,            return 0f;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1793,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,        if (cs == null || searchChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,        int csLen = cs.length();,2,1,0,1,2,0,0,0,0,3,24,5,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,        for (int i = 0; i < csLen; i++) {,0,0,0,1,3,0,0,0,0,4,33,4,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,            char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,            for (int j = 0; j < searchLen; j++) {,8,1,0,1,3,0,0,0,0,10,37,6,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,1.6,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,                        return false;,4,0,0,0,0,1,10,0,0,15,13,3,1.6,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3279,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,1.25,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3282,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,1.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1715,        if (cs == null || invalidChars == null) {,2,0,0,1,3,0,0,0,0,2,41,4,0.44444,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1718,"        return containsNone(cs, invalidChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,52,4,0.44444,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1372,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,53,4,0.4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1375,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1376,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,0.4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1377,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,0.4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1378,            char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1379,            for (int j = 0; j < searchLen; j++) {,14,2,0,1,3,0,0,0,0,18,37,3,0.4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1380,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1382,                        return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.4,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,30,194,        return cs == null || cs.length() == 0;,2,3,0,1,2,1,4,0,0,9,38,4,0.37113,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1441,		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,14,0,0,17,53,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1444,		int csLength = cs.length();,0,0,0,1,2,0,0,0,0,3,27,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1445,		int searchLength = searchChars.length;,0,0,0,0,0,0,4,0,0,4,38,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1446,		for (int i = 0; i < csLength; i++) {,0,0,0,1,3,0,0,0,0,4,36,4,1.0,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1447,			char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1448,			for (int j = 0; j < searchLength; j++) {,0,0,0,1,3,0,0,0,0,4,40,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1449,				if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1452,						return true;,0,0,0,0,0,1,0,0,0,1,12,10,1.0,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1487,        if (searchChars == null) {,0,0,0,1,3,0,0,0,0,4,26,4,0.5,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1490,"        return containsAny(cs, searchChars.toCharArray());",4,0,0,2,4,1,14,4,0,22,50,1,0.5,1,1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3279,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.30769,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3282,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.30769,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,31,194,        return cs == null || cs.length() == 0;,2,3,0,1,2,1,12,0,0,18,38,4,0.04396,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,4,1,0,2,4,3,0,4,0,12,64,1,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,4,0,0,2,4,3,0,0,0,7,61,1,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,0,0,2,4,3,2,0,0,9,58,1,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,0,0,2,4,0,0,0,0,2,58,5,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.01762,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,400,"        return reflectionHashCode(17, 37, object, false, null, null);",0,0,0,1,2,1,0,0,0,4,61,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,107,            return new HashSet<IDKey>();,0,0,0,1,2,1,0,0,0,4,28,4,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,137,        return REGISTRY.get();,0,0,0,1,2,1,0,0,0,4,22,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,152,        return getRegistry().contains(new IDKey(value));,2,0,0,3,6,1,4,2,0,8,48,5,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,173,        if (isRegistered(object)) {,2,0,0,2,5,0,10,0,0,13,27,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,177,            register(object);,0,0,0,1,2,0,4,0,0,4,17,7,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,178,            Field[] fields = clazz.getDeclaredFields();,0,0,0,2,4,0,0,0,0,6,43,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,179,"            AccessibleObject.setAccessible(fields, true);",0,0,0,1,2,0,6,0,0,7,45,7,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,180,            for (Field field : fields) {,4,0,0,1,3,0,0,2,0,6,28,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,181,"                if (!ArrayUtils.contains(excludeFields, field.getName())",0,0,0,2,5,0,10,0,0,11,56,11,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,186,                        Object fieldValue = field.get(object);,0,0,0,1,2,0,0,0,0,3,38,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,187,                        builder.append(fieldValue);,0,0,0,1,2,0,0,0,0,3,27,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,192,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,196,            unregister(object);,6,2,0,1,2,0,4,0,0,12,19,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,197,        },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,198,    },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,360,        Class<?> clazz = object.getClass();,4,0,0,1,2,3,8,4,0,19,35,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,361,"        reflectionAppend(object, clazz, builder, testTransients, excludeFields);",0,0,0,1,2,0,12,0,0,12,72,5,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,362,        while (clazz.getSuperclass() != null && clazz != reflectUpToClass) {,4,3,0,2,5,0,4,0,0,11,68,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,363,            clazz = clazz.getSuperclass();,0,0,0,1,2,0,0,0,0,3,30,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,364,"            reflectionAppend(object, clazz, builder, testTransients, excludeFields);",0,0,0,1,2,0,12,0,0,12,72,7,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,366,        return builder.toHashCode();,2,0,1,1,2,1,8,0,0,14,28,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,522,        getRegistry().add(new IDKey(value));,6,0,0,3,6,0,8,4,0,18,36,1,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,523,    },2,1,0,0,1,0,0,0,0,3,1,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,538,        getRegistry().remove(new IDKey(value));,2,0,0,3,6,0,4,2,0,8,39,5,0.14286,1,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,539,    },4,0,0,0,1,1,0,2,0,7,1,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,40,        public IDKey(Object _value) {,4,0,0,1,3,1,0,2,0,7,29,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,42,            id = System.identityHashCode(_value);  ,0,0,0,1,2,0,0,0,0,3,37,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,46,            value = _value;,8,0,0,0,0,0,10,0,0,21,15,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,47,        },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,55,           return id;,2,0,0,0,0,1,0,0,0,2,10,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,65,            if (!(other instanceof IDKey)) {,4,2,0,2,5,1,4,4,0,15,32,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,68,            IDKey idKey = (IDKey) other;,4,0,0,1,2,0,0,4,0,8,28,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,69,            if (id != idKey.id) {,6,1,0,1,3,0,0,0,0,7,21,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,73,            return value == idKey.value;,6,1,0,0,0,1,0,0,0,7,28,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,4,0,0,2,4,4,4,4,0,17,65,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,2,0,2,4,0,10,0,0,16,58,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,0,0,0,0,3,65,8,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,6,0,0,12,64,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1627,"        return indexOf(array, objectToFind, 0);",0,0,0,1,2,1,0,0,0,4,39,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1645,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1646,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1730,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",6,5,0,1,2,1,16,0,0,28,55,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,359,"        HashCodeBuilder builder = new HashCodeBuilder(initialNonZeroOddNumber, multiplierNonZeroOddNumber);",6,0,0,1,2,0,0,4,0,10,99,4,0.09091,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,356,        if (object == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,883,                iTotal = iTotal * iConstant + object.hashCode();,6,2,0,1,2,0,4,0,0,13,48,8,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,855,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.04762,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,859,            if(object.getClass().isArray()) {,2,0,0,3,7,0,0,2,0,4,33,6,0.04762,0,0
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,886,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.04762,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,4,0,0,2,4,0,6,0,0,10,68,5,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,2,0,0,2,4,3,0,4,0,9,71,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,4,0,0,2,4,6,0,0,0,10,67,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,1,0,2,4,0,0,0,0,3,58,4,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.025,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,4,0,0,1,2,6,6,2,0,18,86,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,2,0,0,1,2,3,6,2,0,13,94,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",4,0,0,1,2,0,4,2,0,10,53,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",6,0,0,1,2,3,6,4,0,20,47,1,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",4,0,0,1,2,0,4,2,0,10,57,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",0,0,0,1,2,0,0,0,0,3,53,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",6,0,0,1,2,3,6,4,0,20,47,1,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",4,0,0,1,2,0,4,2,0,10,51,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",10,0,0,1,2,3,8,2,0,24,46,1,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",6,0,0,1,2,3,6,12,0,27,101,1,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,91,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,2,2,0,2,5,0,6,0,0,12,62,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,92,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,2,0,0,1,2,0,6,2,0,10,64,6,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,93,            if (!primitiveClass.equals(wrapperClass)) {,0,0,0,2,5,0,0,0,0,7,43,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,94,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,1,2,0,8,0,0,8,54,9,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,96,        },2,0,0,0,1,0,0,2,0,4,1,6,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,102,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",4,0,0,1,2,6,2,12,0,25,89,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,107,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",2,0,0,1,2,3,0,12,0,17,96,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,124,"        addAbbreviation(""int"", ""I"");",0,0,0,1,2,0,0,0,0,3,28,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,125,"        addAbbreviation(""boolean"", ""Z"");",0,0,0,1,2,0,2,0,0,4,32,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,126,"        addAbbreviation(""float"", ""F"");",0,0,0,1,2,0,2,0,0,4,30,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,127,"        addAbbreviation(""long"", ""J"");",0,0,0,1,2,0,0,0,0,3,29,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,128,"        addAbbreviation(""short"", ""S"");",0,0,0,1,2,0,0,0,0,3,30,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,129,"        addAbbreviation(""byte"", ""B"");",0,0,0,1,2,0,2,0,0,4,29,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,130,"        addAbbreviation(""double"", ""D"");",0,0,0,1,2,0,2,0,0,4,31,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,131,"        addAbbreviation(""char"", ""C"");",0,0,0,1,2,0,2,0,0,4,29,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,132,    },2,0,0,0,1,3,4,2,0,12,1,2,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,116,"        abbreviationMap.put(primitive, abbreviation);",0,0,0,1,2,0,8,0,0,8,45,5,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,117,"        reverseAbbreviationMap.put(abbreviation, primitive);",0,0,0,1,2,0,0,0,0,3,52,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,118,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0122,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,143,      super();,2,1,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,144,    },2,0,0,0,1,3,0,4,0,10,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,156,        if (object == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,157,            return valueIfNull;,4,0,0,0,0,4,2,0,0,10,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,159,        return getShortClassName(object.getClass());,6,2,0,2,4,4,4,4,0,20,44,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,169,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,170,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,172,        return getShortClassName(cls.getName());,6,3,0,2,4,3,20,0,0,33,40,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,184,        if (className == null) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,185,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,187,        if (className.length() == 0) {,2,1,0,2,5,3,6,0,0,13,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,188,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,5,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,191,        StringBuilder arrayPrefix = new StringBuilder();,2,0,0,1,2,0,4,4,0,10,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,194,"        if (className.startsWith(""["")) {",0,0,0,2,6,0,4,0,0,5,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,195,            while (className.charAt(0) == '[') {,0,1,0,2,6,0,4,0,0,6,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,196,                className = className.substring(1);,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,197,"                arrayPrefix.append(""[]"");",0,0,0,2,4,0,0,0,0,6,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,200,            if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {,0,0,0,4,9,0,0,0,0,13,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,201,"                className = className.substring(1, className.length() - 1);",0,0,0,2,4,0,0,0,0,6,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,205,        if (reverseAbbreviationMap.containsKey(className)) {,0,0,0,2,5,0,0,0,0,7,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,206,            className = reverseAbbreviationMap.get(className);,6,1,0,1,2,0,10,0,0,19,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,209,        int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,210,        int innerIdx = className.indexOf(,2,1,0,0,1,0,0,0,0,3,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,212,        String out = className.substring(lastDotIdx + 1);,0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,213,        if (innerIdx != -1) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,214,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,216,        return out + arrayPrefix;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,229,        if (object == null) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,230,            return valueIfNull;,2,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,232,        return getPackageName(object.getClass());,0,0,0,2,4,1,6,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,242,        if (cls == null) {,8,1,1,1,3,0,0,6,0,20,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,243,            return StringUtils.EMPTY;,0,0,0,0,0,1,0,2,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,245,        return getPackageName(cls.getName());,0,0,0,2,4,1,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,258,        if (className == null || className.length() == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,259,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,263,        while (className.charAt(0) == '[') {,0,0,0,2,6,0,0,0,0,8,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,264,            className = className.substring(1);,2,0,0,1,2,0,4,0,0,7,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,267,        if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {,0,0,0,4,9,0,0,0,0,13,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,268,            className = className.substring(1);,2,0,0,1,2,0,0,0,0,3,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,271,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,272,        if (i == -1) {,2,1,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,273,            return StringUtils.EMPTY;,4,1,0,0,0,1,0,2,0,10,25,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,275,"        return className.substring(0, i);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,288,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,289,            return null;,2,0,0,0,0,1,8,0,0,11,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,291,        List<Class<?>> classes = new ArrayList<Class<?>>();,0,0,0,1,2,0,0,0,0,3,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,292,        Class<?> superclass = cls.getSuperclass();,0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,293,        while (superclass != null) {,2,1,0,1,3,0,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,294,            classes.add(superclass);,0,0,0,1,2,0,6,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,295,            superclass = superclass.getSuperclass();,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,297,        return classes;,2,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,314,        if (cls == null) {,4,1,0,1,3,0,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,315,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,318,        LinkedHashSet<Class<?>> interfacesFound = new LinkedHashSet<Class<?>>();,2,0,0,1,2,0,0,0,0,2,72,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,319,"        getAllInterfaces(cls, interfacesFound);",0,0,0,1,2,0,6,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,321,        return new ArrayList<Class<?>>(interfacesFound);,4,0,0,1,2,1,0,4,0,8,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,331,        while (cls != null) {,6,2,0,1,3,0,0,0,0,8,21,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,332,            Class<?>[] interfaces = cls.getInterfaces();,0,0,0,2,4,0,0,0,0,6,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,334,            for (Class<?> i : interfaces) {,2,0,0,1,3,3,2,2,0,10,31,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,335,                if (interfacesFound.add(i)) {,0,0,0,2,5,0,6,0,0,6,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,336,"                    getAllInterfaces(i, interfacesFound);",0,0,0,1,2,0,6,0,0,6,37,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,340,            cls = cls.getSuperclass();,2,0,0,1,2,0,8,0,0,12,26,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,341,         },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,342,     },0,0,0,0,1,0,4,0,0,5,1,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,359,        if (classNames == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,360,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,362,        List<Class<?>> classes = new ArrayList<Class<?>>(classNames.size());,4,2,0,2,4,0,8,0,0,15,68,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,363,        for (String className : classNames) {,0,0,0,1,3,0,0,0,0,4,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,365,                classes.add(Class.forName(className));,0,0,0,2,4,0,10,0,0,10,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,368,            },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,366,            } catch (Exception ex) {,2,0,0,1,4,0,0,2,0,4,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,367,                classes.add(null);,2,1,0,1,2,0,4,0,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,369,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,370,        return classes;,6,5,0,0,0,1,0,0,0,11,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,386,        if (classes == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,387,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,389,        List<String> classNames = new ArrayList<String>(classes.size());,0,0,0,2,4,0,10,0,0,10,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,390,        for (Class<?> cls : classes) {,4,0,0,1,3,0,0,2,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,391,            if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,392,                classNames.add(null);,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,394,                classNames.add(cls.getName());,0,0,0,2,4,0,0,0,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,396,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,397,        return classNames;,4,1,0,0,0,1,0,0,0,6,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,439,"        return isAssignable(classArray, toClassArray, SystemUtils.isJavaVersionAtLeast(1.5f));",0,0,0,2,4,1,4,0,0,5,86,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,475,"        if (ArrayUtils.isSameLength(classArray, toClassArray) == false) {",0,1,0,2,5,0,4,0,0,6,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,476,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,478,        if (classArray == null) {,0,0,0,1,3,0,12,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,479,            classArray = ArrayUtils.EMPTY_CLASS_ARRAY;,6,0,0,0,0,0,0,0,0,7,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,481,        if (toClassArray == null) {,8,1,0,1,3,0,4,0,0,14,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,482,            toClassArray = ArrayUtils.EMPTY_CLASS_ARRAY;,0,0,0,0,0,0,0,0,0,0,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,484,        for (int i = 0; i < classArray.length; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,485,"            if (isAssignable(classArray[i], toClassArray[i], autoboxing) == false) {",2,0,0,4,9,3,2,0,0,8,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,486,                return false;,2,2,0,0,0,2,8,0,0,13,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,489,        return true;,2,4,0,0,0,1,12,0,0,18,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,524,"        return isAssignable(cls, toClass, SystemUtils.isJavaVersionAtLeast(1.5f));",2,0,0,2,4,4,14,2,0,21,74,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,555,        if (toClass == null) {,12,0,0,1,3,0,0,0,0,12,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,556,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,559,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,560,            return !(toClass.isPrimitive());,0,0,0,2,4,1,4,0,0,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,563,        if (autoboxing) {,4,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,564,            if (cls.isPrimitive() && !toClass.isPrimitive()) {,2,0,1,3,7,0,0,0,0,4,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,565,                cls = primitiveToWrapper(cls);,0,0,0,1,2,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,566,                if (cls == null) {,2,0,1,1,3,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,567,                    return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,570,            if (toClass.isPrimitive() && !cls.isPrimitive()) {,2,1,0,3,7,0,10,0,0,14,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,571,                cls = wrapperToPrimitive(cls);,6,1,0,1,2,0,0,0,0,7,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,572,                if (cls == null) {,2,0,0,1,3,0,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,573,                    return false;,0,0,0,0,0,1,6,0,0,7,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,577,        if (cls.equals(toClass)) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,578,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,580,        if (cls.isPrimitive()) {,2,2,0,2,5,0,0,0,0,4,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,581,            if (toClass.isPrimitive() == false) {,0,2,0,2,5,0,14,0,0,17,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,582,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,584,            if (Integer.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,585,                return Long.TYPE.equals(toClass),0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,589,            if (Long.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,590,                return Float.TYPE.equals(toClass),4,2,0,1,2,1,8,0,0,15,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,593,            if (Boolean.TYPE.equals(cls)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,594,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,596,            if (Double.TYPE.equals(cls)) {,2,0,0,2,5,0,4,0,0,6,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,597,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,599,            if (Float.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,600,                return Double.TYPE.equals(toClass);,4,0,0,1,2,1,4,0,0,8,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,602,            if (Character.TYPE.equals(cls)) {,0,0,0,2,5,0,0,0,0,7,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,603,                return Integer.TYPE.equals(toClass),4,0,0,1,2,1,4,0,0,8,35,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,608,            if (Short.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,609,                return Integer.TYPE.equals(toClass),4,0,0,1,2,1,4,0,0,9,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,614,            if (Byte.TYPE.equals(cls)) {,4,0,0,2,5,0,4,0,0,8,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,615,                return Short.TYPE.equals(toClass),4,0,0,1,2,1,4,0,0,8,33,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,622,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,624,        return toClass.isAssignableFrom(cls);,0,0,0,1,2,1,6,0,0,6,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,640,        Class<?> convertedClass = cls;,4,0,0,0,0,0,0,2,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,641,        if (cls != null && cls.isPrimitive()) {,2,2,0,2,5,0,4,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,642,            convertedClass = primitiveWrapperMap.get(cls);,0,0,0,1,2,0,0,0,0,3,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,644,        return convertedClass;,4,0,0,0,0,1,0,2,0,6,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,658,        if (classes == null) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,659,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,662,        if (classes.length == 0) {,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,663,            return classes;,4,0,0,0,0,1,22,0,0,26,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,666,        Class<?>[] convertedClasses = new Class[classes.length];,6,0,0,2,4,0,0,4,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,667,        for (int i = 0; i < classes.length; i++) {,10,1,0,1,3,0,10,0,0,23,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,668,            convertedClasses[i] = primitiveToWrapper(classes[i]);,8,3,1,3,6,0,2,0,0,23,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,670,        return convertedClasses;,2,0,0,0,0,1,0,0,0,2,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,690,        return wrapperPrimitiveMap.get(cls);,4,0,0,1,2,4,14,0,0,26,36,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,708,        if (classes == null) {,2,1,0,1,3,0,2,0,0,7,22,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,709,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,712,        if (classes.length == 0) {,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,713,            return classes;,2,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,716,        Class<?>[] convertedClasses = new Class[classes.length];,6,0,0,2,4,0,0,4,0,10,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,717,        for (int i = 0; i < classes.length; i++) {,8,1,0,1,3,0,0,0,0,10,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,718,            convertedClasses[i] = wrapperToPrimitive(classes[i]);,0,0,1,3,6,0,2,0,0,11,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,720,        return convertedClasses;,6,3,0,0,0,1,0,0,0,9,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,733,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,734,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,736,        return cls.getName().indexOf(INNER_CLASS_SEPARATOR_CHAR) >= 0;,6,3,0,2,4,1,16,0,0,26,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,755,        if (abbreviationMap.containsKey(className)) {,0,0,0,2,5,0,6,0,0,6,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,756,"            String clsName = ""["" + abbreviationMap.get(className);",2,1,0,1,3,0,6,2,0,12,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,757,"            clazz = Class.forName(clsName, initialize, classLoader).getComponentType();",6,3,0,2,4,0,12,0,0,22,75,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,758,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,759,"            clazz = Class.forName(toCanonicalName(className), initialize, classLoader);",2,0,0,2,4,0,12,0,0,15,75,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,761,        return clazz;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,776,"        return getClass(classLoader, className, true);",0,0,0,1,2,1,6,0,0,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,790,"        return getClass(className, true);",0,0,0,1,2,1,8,0,0,10,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,805,        ClassLoader contextCL = Thread.currentThread().getContextClassLoader();,2,0,0,2,4,0,6,2,0,10,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,806,        ClassLoader loader = contextCL == null ? ClassUtils.class.getClassLoader() : contextCL;,0,0,0,1,2,0,0,0,0,3,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,807,"        return getClass(loader, className, initialize );",0,0,0,1,2,1,8,0,0,8,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,836,"        Method declaredMethod = cls.getMethod(methodName, parameterTypes);",2,0,0,1,2,0,8,2,0,12,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,837,        if (Modifier.isPublic(declaredMethod.getDeclaringClass().getModifiers())) {,0,0,0,4,9,0,10,0,0,10,75,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,838,            return declaredMethod;,2,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,841,        List<Class<?>> candidateClasses = new ArrayList<Class<?>>();,2,0,0,1,2,0,0,8,0,10,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,842,        candidateClasses.addAll(getAllInterfaces(cls));,0,0,0,2,4,0,8,0,0,8,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,843,        candidateClasses.addAll(getAllSuperclasses(cls));,4,1,0,2,4,0,18,0,0,23,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,845,        for (Class<?> candidateClass : candidateClasses) {,4,0,0,1,3,0,0,2,0,6,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,846,            if (!Modifier.isPublic(candidateClass.getModifiers())) {,0,0,0,3,7,0,8,0,0,9,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,847,                continue;,4,1,0,0,0,0,0,0,0,5,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,851,"                candidateMethod = candidateClass.getMethod(methodName, parameterTypes);",2,0,0,1,2,0,8,0,0,11,71,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,854,            },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,852,            } catch (NoSuchMethodException ex) {,2,0,0,1,4,0,0,2,0,4,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,853,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,855,            if (Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())) {,0,0,0,4,9,0,10,0,0,10,76,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,856,                return candidateMethod;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,858,        },2,0,0,0,1,0,0,0,0,2,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,860,"        throw new NoSuchMethodException(""Can't find a public method for "" +",0,1,0,0,1,0,0,2,0,4,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,872,        className = StringUtils.deleteWhitespace(className);,2,0,0,1,2,0,6,0,0,9,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,873,        if (className == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,874,"            throw new NullPointerException(""className must not be null."");",0,0,0,1,2,0,0,2,0,4,62,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,875,"        } else if (className.endsWith(""[]"")) {",0,0,0,3,8,0,4,0,0,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,876,            StringBuilder classNameBuffer = new StringBuilder();,2,0,0,1,2,0,0,4,0,6,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,877,"            while (className.endsWith(""[]"")) {",4,1,0,3,7,0,4,0,0,11,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,878,"                className = className.substring(0, className.length() - 2);",2,1,1,2,4,0,12,0,0,25,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,879,"                classNameBuffer.append(""["");",0,0,0,1,3,0,4,0,0,5,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,881,            String abbreviation = abbreviationMap.get(className);,6,1,0,1,2,0,6,2,0,15,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,882,            if (abbreviation != null) {,10,1,0,1,3,0,2,0,0,14,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,883,                classNameBuffer.append(abbreviation);,0,0,0,1,2,0,6,0,0,6,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,885,"                classNameBuffer.append(""L"").append(className).append("";"");",0,0,0,3,6,0,10,0,0,12,58,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,887,            className = classNameBuffer.toString();,0,0,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,889,        return className;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,903,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,904,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,905,        } else if (array.length == 0) {,10,3,0,1,4,0,4,0,0,17,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,906,            return ArrayUtils.EMPTY_CLASS_ARRAY;,6,0,0,0,0,1,8,0,0,14,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,908,        Class<?>[] classes = new Class[array.length];,0,0,0,2,4,0,0,0,0,6,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,909,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,910,            classes[i] = array[i].getClass();,4,0,1,3,6,0,2,2,0,17,33,1,0.0,1,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,912,        return classes;,0,0,0,0,0,1,0,0,0,1,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,926,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,927,            return valueIfNull;,0,0,0,0,0,1,0,0,0,1,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,929,        return getShortCanonicalName(object.getClass().getName());,8,4,0,3,6,2,20,2,0,35,58,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,940,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,941,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,943,        return getShortCanonicalName(cls.getName());,0,0,0,2,4,1,10,0,0,11,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,956,        return ClassUtils.getShortClassName(getCanonicalName(canonicalName));,0,0,0,2,4,1,8,0,0,8,69,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,970,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,971,            return valueIfNull;,4,1,0,0,0,1,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,973,        return getPackageCanonicalName(object.getClass().getName());,0,0,0,3,6,1,0,0,0,10,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,984,        if (cls == null) {,4,1,0,1,3,0,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,985,            return StringUtils.EMPTY;,0,0,0,0,0,1,8,0,0,8,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,987,        return getPackageCanonicalName(cls.getName());,0,0,0,2,4,1,6,0,0,6,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1001,        return ClassUtils.getPackageName(getCanonicalName(canonicalName));,0,0,0,2,4,1,8,0,0,8,66,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1021,        className = StringUtils.deleteWhitespace(className);,2,0,0,1,2,0,6,0,0,9,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1022,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1023,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1025,            int dim = 0;,2,0,0,0,0,0,0,0,0,3,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1026,"            while (className.startsWith(""["")) {",0,0,0,2,6,0,4,0,0,5,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1027,                dim++;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1028,                className = className.substring(1);,6,1,0,1,2,0,4,0,0,12,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1030,            if (dim < 1) {,2,1,0,1,3,0,14,0,0,18,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1031,                return className;,6,0,0,0,0,1,0,0,0,6,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1033,"                if (className.startsWith(""L"")) {",0,0,0,2,5,0,0,0,0,7,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1034,                    className = className.substring(,4,1,0,0,1,0,4,0,0,10,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1040,                    if (className.length() > 0) {,0,0,0,2,5,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1041,"                        className = reverseAbbreviationMap.get(className.substring(0, 1));",2,0,0,2,4,0,8,0,0,11,66,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1044,                StringBuilder canonicalClassNameBuffer = new StringBuilder(className);,0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1045,                for (int i = 0; i < dim; i++) {,8,1,0,1,3,0,0,0,0,10,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1046,"                    canonicalClassNameBuffer.append(""[]"");",0,0,0,2,4,0,4,0,0,5,38,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,1048,                return canonicalClassNameBuffer.toString();,0,0,0,1,2,1,4,0,0,4,43,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,144,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,145,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,161,"        return toString(array, ""{}"");",4,1,0,2,4,1,4,0,0,10,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,177,        if (array == null) {,4,2,0,1,3,0,10,0,0,16,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,178,            return stringIfNull;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,180,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",0,0,0,3,6,1,0,0,0,10,87,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,194,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,3,6,1,8,2,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,225,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,226,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,228,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",6,1,0,3,6,1,0,12,0,20,88,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,229,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,230,            Object object = array[i];,2,0,1,1,2,0,0,2,0,8,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,231,"            if (object instanceof Map.Entry<?, ?>) {",6,0,0,1,3,0,0,0,0,6,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,232,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",12,0,0,1,2,0,0,0,0,12,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,233,"                map.put(entry.getKey(), entry.getValue());",0,0,0,3,6,0,12,0,0,12,42,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,234,            } else if (object instanceof Object[]) {,6,1,0,2,6,0,8,2,0,17,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,235,                Object[] entry = (Object[]) object;,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,236,                if (entry.length < 2) {,4,1,0,1,3,0,0,0,0,5,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,237,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",4,2,1,0,1,0,0,2,0,14,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,241,"                map.put(entry[0], entry[1]);",0,0,0,3,6,0,0,0,0,9,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,242,            } else {,2,0,0,0,2,0,0,0,0,2,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,243,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",0,0,0,0,1,0,0,0,0,1,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,248,        return map;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,293,        return items;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,311,        if (array == null) {,6,2,0,1,3,0,0,0,0,8,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,312,            return null;,4,0,0,0,0,1,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,314,        return array.clone();,4,1,0,1,2,1,4,0,0,9,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,327,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,328,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,330,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,343,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,344,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,346,        return array.clone();,0,0,0,1,2,1,6,0,0,8,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,359,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,360,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,362,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,375,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,376,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,378,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,391,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,392,            return null;,6,1,0,0,0,1,0,0,0,7,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,394,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,407,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,408,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,410,        return array.clone();,2,0,0,1,2,1,4,0,0,6,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,423,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,424,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,426,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,439,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,440,            return null;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,442,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,460,        if (array == null) {,2,0,1,1,3,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,461,            return EMPTY_OBJECT_ARRAY;,6,0,0,0,0,1,0,0,0,7,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,462,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,463,            return EMPTY_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,465,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,481,        if (array == null) {,6,1,0,1,3,0,8,0,0,16,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,482,            return EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,483,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,484,            return EMPTY_STRING_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,486,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,502,        if (array == null) {,12,3,0,1,3,0,14,0,0,30,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,503,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,2,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,505,        if (array.length == 0) {,12,3,0,1,3,0,0,0,0,15,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,506,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,508,        return array;,6,0,0,0,0,1,0,0,0,7,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,524,        if (array == null) {,6,3,0,1,3,0,0,0,0,11,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,525,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,526,        } else if (array.length == 0) {,10,2,0,1,4,0,0,0,0,12,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,527,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,529,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,545,        if (array == null) {,2,0,0,1,3,0,0,0,0,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,546,            return EMPTY_SHORT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,547,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,548,            return EMPTY_SHORT_ARRAY;,8,1,0,0,0,1,0,0,0,10,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,550,        return array;,4,1,1,0,0,1,0,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,566,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,567,            return EMPTY_CHAR_ARRAY;,0,0,0,0,0,1,6,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,568,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,569,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,6,2,0,12,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,571,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,587,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,588,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,589,        } else if (array.length == 0) {,8,2,0,1,4,0,0,0,0,10,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,590,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,592,        return array;,4,0,1,0,0,1,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,608,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,609,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,610,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,611,            return EMPTY_DOUBLE_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,613,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,629,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,630,            return EMPTY_FLOAT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,631,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,632,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,634,        return array;,4,0,0,0,0,1,0,2,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,650,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,651,            return EMPTY_BOOLEAN_ARRAY;,0,0,0,0,0,1,0,0,0,1,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,652,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,653,            return EMPTY_BOOLEAN_ARRAY;,6,4,0,0,0,1,8,0,0,20,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,655,        return array;,10,2,1,0,0,1,0,0,0,16,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,671,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,672,            return EMPTY_LONG_OBJECT_ARRAY;,4,0,1,0,0,1,0,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,673,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,674,            return EMPTY_LONG_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,676,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,692,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,693,            return EMPTY_INTEGER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,694,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,695,            return EMPTY_INTEGER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,697,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,713,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,714,            return EMPTY_SHORT_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,715,        }else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,716,            return EMPTY_SHORT_OBJECT_ARRAY;,4,0,0,0,0,1,26,2,0,32,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,718,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,734,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,735,            return EMPTY_CHARACTER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,736,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,737,            return EMPTY_CHARACTER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,739,        return array;,4,3,0,0,0,1,4,0,0,12,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,755,        if (array == null) {,2,0,1,1,3,0,0,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,756,            return EMPTY_BYTE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,3,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,757,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,758,            return EMPTY_BYTE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,760,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,776,        if (array == null) {,4,1,0,1,3,0,6,0,0,14,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,777,            return EMPTY_DOUBLE_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,778,        } else if (array.length == 0) {,8,6,0,1,4,0,0,0,0,14,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,779,            return EMPTY_DOUBLE_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,781,        return array;,6,1,0,0,0,1,10,0,0,18,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,797,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,798,            return EMPTY_FLOAT_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,799,        } else if (array.length == 0) {,6,1,0,1,4,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,800,            return EMPTY_FLOAT_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,802,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,818,        if (array == null) {,4,2,0,1,3,0,10,0,0,16,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,819,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,8,1,0,0,0,1,0,0,0,11,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,820,        } else if (array.length == 0) {,0,0,0,1,4,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,821,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,823,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,856,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,857,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,859,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,860,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,862,        if (endIndexExclusive > array.length) {,8,1,0,1,3,0,0,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,863,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,865,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,866,        Class<?> type = array.getClass().getComponentType();,0,0,0,2,4,0,0,0,0,6,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,867,        if (newSize <= 0) {,4,0,0,1,3,0,0,2,0,6,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,869,"            final T[] emptyArray = (T[]) Array.newInstance(type, 0);",2,0,0,4,8,1,6,4,0,13,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,870,            return emptyArray;,4,0,0,0,0,1,0,4,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,873,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",0,0,0,4,8,0,0,0,0,12,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,874,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,875,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,898,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,899,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,901,        if (startIndexInclusive < 0) {,6,1,0,1,3,1,0,0,0,8,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,902,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,904,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,905,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,2,0,10,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,907,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,908,        if (newSize <= 0) {,4,1,0,1,3,0,0,0,0,5,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,909,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,912,        long[] subarray = new long[newSize];,0,0,0,2,4,0,0,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,913,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",6,1,0,1,2,0,12,0,0,19,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,914,        return subarray;,2,0,0,0,0,1,4,0,0,6,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,937,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,938,            return null;,6,1,0,0,0,1,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,940,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,941,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,943,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,944,            endIndexExclusive = array.length;,8,1,0,0,0,0,2,0,0,12,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,946,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,947,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,948,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,951,        int[] subarray = new int[newSize];,0,0,0,2,4,0,0,0,0,6,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,952,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,953,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,976,        if (array == null) {,4,1,0,1,3,0,10,0,0,15,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,977,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,979,        if (startIndexInclusive < 0) {,6,4,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,980,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,982,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,983,            endIndexExclusive = array.length;,8,0,0,0,0,0,0,0,0,9,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,985,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,986,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,987,            return EMPTY_SHORT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,990,        short[] subarray = new short[newSize];,2,0,1,2,4,0,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,991,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",6,1,0,1,2,0,12,0,0,19,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,992,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1015,        if (array == null) {,4,1,0,1,3,0,4,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1016,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1018,        if (startIndexInclusive < 0) {,0,0,0,1,3,0,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1019,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1021,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1022,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1024,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1025,        if (newSize <= 0) {,4,1,0,1,3,0,0,0,0,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1026,            return EMPTY_CHAR_ARRAY;,4,0,0,0,0,1,8,0,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1029,        char[] subarray = new char[newSize];,0,0,0,2,4,0,0,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1030,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,24,0,0,24,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1031,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1054,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1055,            return null;,2,0,0,0,0,1,4,0,0,6,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1057,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1058,            startIndexInclusive = 0;,10,0,1,0,0,0,0,0,0,16,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1060,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1061,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1063,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1064,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1065,            return EMPTY_BYTE_ARRAY;,4,2,0,0,0,1,8,0,0,14,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1068,        byte[] subarray = new byte[newSize];,0,0,0,2,4,0,0,0,0,6,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1069,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1070,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1093,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1094,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1096,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1097,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1099,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1100,            endIndexExclusive = array.length;,12,0,0,0,0,0,4,0,0,18,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1102,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1103,        if (newSize <= 0) {,6,0,0,1,3,0,0,0,0,7,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1104,            return EMPTY_DOUBLE_ARRAY;,6,0,0,0,0,1,4,10,0,21,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1107,        double[] subarray = new double[newSize];,2,0,1,2,4,0,0,0,0,4,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1108,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1109,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1132,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1133,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1135,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1136,            startIndexInclusive = 0;,6,1,0,0,0,0,0,0,0,8,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1138,        if (endIndexExclusive > array.length) {,8,1,1,1,3,0,0,0,0,14,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1139,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1141,        int newSize = endIndexExclusive - startIndexInclusive;,8,1,0,0,0,0,0,0,0,9,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1142,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1143,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,1,0,0,0,2,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1146,        float[] subarray = new float[newSize];,2,0,1,2,4,0,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1147,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1148,        return subarray;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1171,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1172,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1174,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1175,            startIndexInclusive = 0;,4,1,0,0,0,0,0,0,0,6,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1177,        if (endIndexExclusive > array.length) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1178,            endIndexExclusive = array.length;,6,0,0,0,0,0,10,0,0,17,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1180,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1181,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1182,            return EMPTY_BOOLEAN_ARRAY;,0,0,0,0,0,1,0,0,0,1,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1185,        boolean[] subarray = new boolean[newSize];,2,0,1,2,4,0,0,0,0,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1186,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1187,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1204,        if ((array1 == null && array2 != null && array2.length > 0) ||,14,6,0,1,3,0,0,4,0,24,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1207,                return false;,4,1,1,0,0,1,10,0,0,20,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1209,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1222,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1225,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1227,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1240,        if ((array1 == null && array2 != null && array2.length > 0) ||,18,7,0,1,3,0,4,2,0,32,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1243,                return false;,4,1,0,0,0,1,6,0,0,13,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1245,        return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1258,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1261,                return false;,4,0,0,0,0,2,4,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1263,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1276,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1279,                return false;,4,1,1,0,0,1,14,0,0,24,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1281,        return true;,4,1,0,0,0,1,0,0,0,6,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1294,        if ((array1 == null && array2 != null && array2.length > 0) ||,20,8,0,1,3,0,0,0,0,29,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1297,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1299,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1312,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1315,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1317,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1330,        if ((array1 == null && array2 != null && array2.length > 0) ||,0,0,0,1,3,0,0,0,0,4,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1333,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1335,        return true;,4,2,0,0,0,1,0,0,0,7,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1348,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1351,                return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1353,        return true;,0,0,0,0,0,1,6,0,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1378,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1379,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1381,        return Array.getLength(array);,0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1394,        if (array1 == null || array2 == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1395,"            throw new IllegalArgumentException(""The Array must not be null"");",16,2,0,1,2,0,0,2,0,24,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1397,        return array1.getClass().getName().equals(array2.getClass().getName());,0,0,0,5,10,1,14,0,0,14,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1412,        if (array == null) {,4,1,0,1,3,1,0,8,0,14,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1413,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1415,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1416,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1418,        while (j > i) {,6,1,0,1,3,0,0,0,0,7,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1419,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1420,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1421,            array[i] = tmp;,10,2,0,1,2,0,0,0,0,13,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1422,            j--;,2,0,0,0,0,0,0,0,0,2,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1423,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1425,    },6,1,0,0,1,0,2,0,0,9,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1435,        if (array == null) {,10,1,0,1,3,0,0,0,0,12,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1436,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1438,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1439,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1441,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1442,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1443,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1444,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1445,            j--;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1446,            i++;,4,0,0,0,0,0,0,0,0,5,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1448,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1458,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1459,            return;,4,0,0,0,0,1,0,0,0,5,7,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1461,        int i = 0;,2,0,0,0,0,0,0,0,0,3,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1462,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1464,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1465,            tmp = array[j];,2,0,1,1,2,0,2,0,0,18,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1466,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1467,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1468,            j--;,4,0,0,0,0,0,2,2,0,9,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1469,            i++;,0,0,0,0,0,0,0,0,0,0,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1471,    },8,1,0,0,1,0,0,0,0,10,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1481,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1482,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1484,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1485,        int j = array.length - 1;,0,0,0,0,0,0,0,0,0,0,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1487,        while (j > i) {,6,1,0,1,3,0,0,0,0,8,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1488,            tmp = array[j];,6,3,1,1,2,0,0,0,0,14,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1489,            array[j] = array[i];,0,0,0,2,4,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1490,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1491,            j--;,6,1,0,0,0,0,0,0,0,9,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1492,            i++;,6,0,0,0,0,0,10,2,0,19,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1494,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1504,        if (array == null) {,0,1,0,1,3,0,4,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1505,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1507,        int i = 0;,0,0,0,0,0,0,0,0,0,0,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1508,        int j = array.length - 1;,6,1,0,0,0,0,0,0,0,8,25,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1510,        while (j > i) {,0,0,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1511,            tmp = array[j];,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1512,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1513,            array[i] = tmp;,0,0,0,1,2,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1514,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1515,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,1517,    },6,1,0,0,1,0,0,0,0,9,1,4,0.0,0,0
