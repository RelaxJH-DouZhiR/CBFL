dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,462,                pfxLen += pfx.length();,2,0,0,1,2,0,4,0,0,7,23,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,463,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,467,            final int hexDigits = str.length() - pfxLen;,6,2,0,1,2,1,4,0,0,13,44,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,468,            if (hexDigits > 16) { // too many for Long,2,1,0,1,3,0,0,0,0,3,42,6,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,471,            if (hexDigits > 8) { // too many for an int,4,2,0,1,3,0,0,0,0,6,43,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,474,            return createInteger(str);,2,0,0,1,2,1,4,0,0,7,26,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,680,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,684,        return Integer.decode(str);,0,0,0,1,2,1,6,0,0,6,27,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,451,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,454,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,458,"        final String[] hex_prefixes = {""0x"", ""0X"", ""-0x"", ""-0X"", ""#"", ""-#""};",2,0,0,2,4,1,0,2,0,11,68,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,459,        int pfxLen = 0;,2,0,0,0,0,0,0,0,0,2,15,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,460,        for(final String pfx : hex_prefixes) {,4,0,0,1,3,1,0,2,0,7,38,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,461,            if (str.startsWith(pfx)) {,0,0,0,2,5,0,6,0,0,6,26,7,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,466,        if (pfxLen > 0) { // we have a hex number,2,1,0,1,3,0,0,0,0,3,41,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,257,        if (cs == null || (strLen = cs.length()) == 0) {,6,2,0,3,7,0,4,0,0,13,48,4,0.1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,260,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,261,            if (Character.isWhitespace(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,52,6,0.1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,262,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.1,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,1,181,"    private static final Pattern WHITESPACE_PATTERN = Pattern.compile(""(?: \\s|[\\s&&[^ ]])\\s*"");",8,0,0,4,8,6,8,8,0,32,94,1,0.09091,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,494,                dec = str.substring(decPos + 1);,6,2,0,1,2,0,4,2,0,16,32,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,594,                if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,65,4,0.33333,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,595,                    return f;,2,0,0,0,0,1,0,0,0,2,9,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,492,"                dec = str.substring(decPos + 1, expPos);",0,0,0,1,2,0,0,0,0,3,40,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,570,        if (expPos > -1 && expPos < str.length() - 1) {,6,4,0,2,5,3,4,4,0,22,47,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,571,"            exp = str.substring(expPos + 1, str.length());",4,1,0,2,4,0,8,0,0,14,46,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,575,        if (dec == null && exp == null) { // no decimal point and no exponent,4,3,0,1,3,0,0,0,0,7,69,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,591,        final boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,1,8,0,0,12,61,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,593,                final Float f = createFloat(str);,4,0,0,1,2,0,0,0,0,5,33,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,488,            if (expPos > -1) { // there is an exponent,2,1,0,1,3,0,0,0,0,4,42,6,0.2,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,509,        if (!Character.isDigit(lastChar) && lastChar != '.') {,2,2,0,2,5,0,6,0,0,12,54,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,621,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.16667,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,625,            if (str.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,27,6,0.16667,1,1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,626,                return false;,2,1,0,0,0,1,0,0,0,4,13,6,0.16667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,76,"            final CharSequence subSeq = input.subSequence(index, index + i);",6,1,0,1,2,1,6,2,0,16,64,6,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,77,            final CharSequence result = lookupMap.get(subSeq);,2,0,0,1,2,1,6,2,0,11,50,6,0.04167,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,78,            if (result != null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,83,        return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,70,        int max = longest;,4,0,0,0,0,0,0,0,0,4,18,5,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,71,        if (index + longest > input.length()) {,4,2,0,2,5,0,4,0,0,10,39,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,75,        for (int i = max; i >= shortest; i--) {,10,1,0,1,3,0,0,0,0,12,39,4,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,32,public abstract class CharSequenceTranslator {,2,0,0,0,1,2,0,0,0,4,46,1,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,45,    public LookupTranslator(final CharSequence[]... lookup) {,4,0,0,2,5,2,0,2,0,8,57,2,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,46,"        lookupMap = new HashMap<CharSequence, CharSequence>();",6,0,0,1,2,0,0,6,0,15,54,3,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,47,        int _shortest = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,34,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,48,        int _longest = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,51,"                this.lookupMap.put(seq[0], seq[1]);",2,0,1,3,6,0,2,0,0,8,35,9,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,52,                final int sz = seq[0].length();,4,0,1,2,4,1,2,0,0,9,31,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,53,                if (sz < _shortest) {,4,1,0,1,3,0,0,0,0,5,21,8,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,54,                    _shortest = sz;,4,0,0,0,0,0,0,0,0,5,15,10,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,56,                if (sz > _longest) {,4,1,0,1,3,0,0,0,0,5,20,8,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,57,                    _longest = sz;,4,0,0,0,0,0,0,0,0,5,14,10,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,61,        shortest = _shortest;,4,0,0,0,0,0,0,0,0,5,21,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,63,    },0,0,0,0,1,0,0,0,0,1,1,4,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,41,        this.translators = ArrayUtils.clone(translators);,2,0,0,1,2,0,6,0,0,9,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,51,        for (final CharSequenceTranslator translator : translators) {,4,0,0,1,3,1,0,2,0,7,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,52,"            final int consumed = translator.translate(input, index, out);",2,0,0,1,2,1,10,0,0,13,61,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,53,            if(consumed != 0) {,2,1,0,1,3,0,0,0,0,3,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,54,                return consumed;,2,0,0,0,0,1,0,0,0,2,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,4,57,        return 0;,2,0,0,0,0,4,0,2,0,7,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,54,        if (input == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,58,            final StringWriter writer = new StringWriter(input.length() * 2);,0,0,0,2,4,0,0,0,0,6,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,60,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,61,        } catch (final IOException ioe) {,2,0,0,1,4,1,0,2,0,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,63,            throw new RuntimeException(ioe);,2,0,0,1,2,0,0,2,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,76,        if (out == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,79,        if (input == null) {,6,0,0,1,3,0,8,0,0,15,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,82,        int pos = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,83,        final int len = input.length();,2,0,0,1,2,1,4,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,84,        while (pos < len) {,4,1,0,1,3,0,0,2,0,9,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,85,"            final int consumed = translate(input, pos, out);",4,0,0,1,2,1,8,2,0,15,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,86,            if (consumed == 0) {,2,1,0,1,3,0,0,0,0,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,87,"                final char[] c = Character.toChars(Character.codePointAt(input, pos));",0,0,0,3,6,0,0,0,0,9,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,89,                pos+= c.length;,6,0,0,0,0,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,90,                continue;,4,0,0,0,0,3,2,6,0,16,9,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,95,"                pos += Character.charCount(Character.codePointAt(input, pt));",2,0,0,2,4,0,12,0,0,15,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,108,        final CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];,6,1,0,2,4,1,0,4,0,12,93,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,109,        newArray[0] = this;,0,0,1,1,2,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,110,"        System.arraycopy(translators, 0, newArray, 1, translators.length);",4,0,0,1,2,0,8,0,0,12,66,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,111,        return new AggregateTranslator(newArray);,2,0,0,1,2,1,0,2,0,4,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,4,122,        return Integer.toHexString(codepoint).toUpperCase(Locale.ENGLISH);,6,1,0,2,4,1,8,0,0,15,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,72,            max = input.length() - index;,4,1,0,1,2,0,8,0,0,14,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,79,                out.write(result.toString());,2,0,0,2,4,0,10,2,0,14,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,89,        if (str == null) {,0,0,0,1,3,0,0,4,0,4,18,11,0.25,1,1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,92,        final int len = str.length();,2,0,0,1,2,1,4,0,0,7,29,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,93,        if (len < 2) {,2,1,0,1,3,0,0,0,0,3,14,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,96,        final char ch0 = str.charAt(0);,2,0,0,1,2,1,4,0,0,7,31,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,97,            final char ch1 = str.charAt(1);,4,2,0,1,2,1,14,0,0,22,31,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,98,            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {,0,1,0,3,7,0,12,0,0,15,65,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,288,    static class SyncAvoid {,2,0,0,0,1,1,0,0,0,3,24,2,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,295,            List<Locale> list = new ArrayList<Locale>(Arrays.asList(Locale.getAvailableLocales()));  // extra safe,2,0,0,3,6,0,8,8,0,18,102,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,296,            AVAILABLE_LOCALE_LIST = Collections.unmodifiableList(list);,2,0,0,1,2,0,6,0,0,9,59,5,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,42,"    private static final ConcurrentMap<String, List<Locale>> cLanguagesByCountry = ",2,0,0,0,0,3,0,8,0,13,78,2,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,46,"    private static final ConcurrentMap<String, List<Locale>> cCountriesByLanguage = ",2,0,0,0,0,3,0,8,0,13,79,2,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,193,        return SyncAvoid.AVAILABLE_LOCALE_LIST;,2,0,0,0,0,4,2,2,0,10,39,2,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,218,        return availableLocaleList().contains(locale);,2,0,0,2,4,4,6,4,0,15,46,1,0.08333,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,94,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,101,            if (len == 2) {,2,1,0,1,3,0,6,0,0,9,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,102,                return new Locale(str);,2,0,0,1,2,1,0,2,0,4,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,104,            if (len < 5) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,105,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",4,1,0,1,2,3,2,4,0,17,68,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,107,            if (str.charAt(2) != '_') {,2,1,0,2,5,0,4,2,0,10,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,108,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,110,            final char ch3 = str.charAt(3);,4,0,0,1,2,1,8,2,0,15,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,111,            if (ch3 == '_') {,2,1,0,1,3,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,112,"                return new Locale(str.substring(0, 2), """", str.substring(4));",4,3,0,3,6,1,12,2,0,23,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,115,            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {,0,1,0,3,7,0,20,0,0,23,65,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,118,            if (len == 5) {,2,0,0,1,3,3,2,2,0,10,15,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,119,"                return new Locale(str.substring(0, 2), str.substring(3, 5));",0,0,0,3,6,1,8,2,0,10,60,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,122,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,124,            if (str.charAt(5) != '_') {,0,1,0,2,5,0,12,0,0,15,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,125,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,127,"            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));",0,0,0,4,8,1,12,2,0,14,78,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,168,            list.add(locale);,0,0,0,1,2,0,6,0,0,6,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,169,            if (locale.getVariant().length() > 0) {,0,0,0,3,7,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,170,"                list.add(new Locale(locale.getLanguage(), locale.getCountry()));",0,0,0,4,8,0,12,2,0,14,64,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,173,"                list.add(new Locale(locale.getLanguage(), """"));",0,0,0,3,6,0,8,2,0,11,47,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,175,            if (list.contains(defaultLocale) == false) {,0,1,0,2,5,0,16,0,0,18,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,176,                list.add(defaultLocale);,0,0,0,1,2,0,6,0,0,6,24,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,207,        return SyncAvoid.AVAILABLE_LOCALE_SET;,4,0,0,0,0,1,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,232,        if (countryCode == null) {,0,0,0,1,3,0,14,0,0,14,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,233,            return Collections.emptyList();,4,0,0,1,2,1,12,0,0,17,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,236,        if (langs == null) {,6,0,0,1,3,0,0,2,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,238,            List<Locale> locales = availableLocaleList();,6,0,0,1,2,0,8,4,0,18,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,240,                Locale locale = locales.get(i);,4,0,0,1,2,0,6,0,0,10,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,241,                if (countryCode.equals(locale.getCountry()) &&,2,0,0,2,5,0,0,0,0,3,46,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,243,                    langs.add(locale);,4,0,0,1,2,0,6,0,0,10,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,246,            langs = Collections.unmodifiableList(langs);,2,0,0,1,2,0,6,0,0,9,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,247,"            cLanguagesByCountry.putIfAbsent(countryCode, langs);",0,0,0,1,2,0,8,0,0,8,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,248,            langs = cLanguagesByCountry.get(countryCode);,2,0,0,1,2,0,6,0,0,9,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,250,        return langs;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,264,        if (languageCode == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,265,            return Collections.emptyList();,8,0,0,1,2,7,10,4,0,30,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,267,        List<Locale> countries = cCountriesByLanguage.get(languageCode);,2,0,0,1,2,0,6,4,0,12,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,268,        if (countries == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,269,            countries = new ArrayList<Locale>();,2,0,0,1,2,0,4,4,0,12,36,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,270,            List<Locale> locales = availableLocaleList();,4,0,0,1,2,0,6,4,0,16,45,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,276,                    countries.add(locale);,0,0,0,1,2,0,4,0,0,5,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,279,            countries = Collections.unmodifiableList(countries);,2,0,0,1,2,0,6,0,0,9,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,281,            countries = cCountriesByLanguage.get(languageCode);,2,0,0,1,2,0,12,0,0,15,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,283,        return countries;,4,0,0,0,0,1,0,8,0,12,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,156,            if(index != 0) {,2,1,0,1,3,0,0,0,0,3,16,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,160,"            if (StringUtils.containsNone(input.toString(), CSV_SEARCH_CHARS)) {",0,0,0,3,7,0,10,0,0,10,67,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,161,                out.write(input.toString());,0,0,0,2,4,0,8,0,0,8,28,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,167,            return input.length();,0,0,0,1,2,1,4,0,0,4,22,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1737,        if (cs == null || searchChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1740,        int csLen = cs.length();,14,1,0,1,2,3,4,4,0,27,24,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1741,        int csLast = csLen - 1;,4,1,0,0,0,0,0,0,0,5,23,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1742,        int searchLen = searchChars.length;,12,0,0,0,0,0,0,0,0,12,35,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1743,        int searchLast = searchLen - 1;,4,1,0,0,0,0,0,0,0,5,31,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1744,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1763,        return true;,2,1,0,0,0,1,0,0,0,4,12,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,268,    static class CsvUnescaper extends CharSequenceTranslator {,2,0,0,0,1,1,0,2,0,5,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,272,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,2,0,0,1,2,3,6,2,0,13,70,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,273,        private static final char[] CSV_SEARCH_CHARS = ,8,3,0,1,2,3,4,0,0,18,46,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,108,        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];,6,1,0,2,4,0,0,4,0,11,87,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,111,        return new AggregateTranslator(newArray);,0,0,0,1,2,1,0,0,0,4,41,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,52,    public static final CharSequenceTranslator ESCAPE_JAVA = ,2,0,0,0,0,3,0,2,0,7,56,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,72,    public static final CharSequenceTranslator ESCAPE_ECMASCRIPT = ,2,0,0,0,0,3,0,2,0,7,62,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,109,    public static final CharSequenceTranslator ESCAPE_HTML3 = ,4,0,0,0,0,3,0,2,0,9,57,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,124,    public static final CharSequenceTranslator ESCAPE_HTML4 = ,2,0,0,0,0,3,0,2,0,7,57,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,140,    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();,2,0,0,1,2,3,0,4,0,9,73,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,206,    public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;,4,0,0,0,0,3,0,2,0,9,79,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,233,    public static final CharSequenceTranslator UNESCAPE_HTML4 = ,2,0,0,0,0,3,0,2,0,7,59,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,250,    public static final CharSequenceTranslator UNESCAPE_XML = ,2,0,0,0,0,3,0,2,0,7,57,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,266,    public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();,2,0,0,1,2,3,0,4,0,9,77,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,40,    public AggregateTranslator(CharSequenceTranslator... translators) {,4,0,0,1,3,1,0,2,0,7,67,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,41,        this.translators = ArrayUtils.clone(translators);,2,0,0,1,2,0,6,0,0,9,49,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,145,    static class CsvEscaper extends CharSequenceTranslator {,4,0,0,0,1,4,0,6,0,15,56,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,150,        private static final char[] CSV_SEARCH_CHARS = ,6,0,0,1,2,6,2,2,0,16,46,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,320,        if (array == null) {,6,1,0,1,3,6,0,4,0,17,20,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,35,    private static final String[][] ISO8859_1_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,52,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,139,    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);,2,0,0,3,6,3,4,2,0,11,78,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,148,    private static final String[][] HTML40_EXTENDED_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,359,    private static final String[][] BASIC_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,48,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,371,    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);,2,0,0,3,6,3,4,2,0,11,70,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,378,    private static final String[][] APOS_ESCAPE = {,4,0,0,2,5,3,0,4,0,11,47,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,387,    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);,2,0,0,3,6,3,4,2,0,11,68,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,396,    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,409,    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);,4,0,0,3,6,3,4,4,0,16,90,1,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,34,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },0,0,0,5,10,1,0,0,0,16,80,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,138,    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); },8,3,0,5,10,3,4,2,0,19,84,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,147,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,92,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,349,    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,96,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,358,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,72,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,370,    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,76,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,377,    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,70,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,386,    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,74,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,395,    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,92,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,408,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,96,2,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,417,        String[][] newarray = new String[array.length][2];,18,3,0,4,8,0,6,8,0,36,50,3,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,419,            newarray[i][0] = array[i][1];,0,0,1,4,8,0,0,0,0,9,29,6,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,420,            newarray[i][1] = array[i][0];,0,0,0,4,8,0,6,0,0,6,29,5,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,422,        return newarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.04167,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,40,    public LookupTranslator(CharSequence[]... lookup) {,2,0,0,2,5,0,20,0,0,23,51,1,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,41,"        lookupMap = new HashMap<CharSequence, CharSequence>();",2,0,0,1,2,0,0,0,0,2,54,5,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,42,        int _shortest = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,34,5,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,43,        int _longest = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,44,        if (lookup != null) {,2,1,0,1,3,0,4,0,0,8,21,3,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,45,            for (CharSequence[] seq : lookup) {,8,0,0,2,5,0,6,2,0,16,35,3,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,48,                if (sz < _shortest) {,8,1,0,1,3,0,0,2,0,11,21,3,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,51,                if (sz > _longest) {,4,1,0,1,3,0,0,0,0,5,20,8,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,52,                    _longest = sz;,4,0,0,0,0,0,0,0,0,5,14,10,0.04,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,57,        longest = _longest;,6,0,0,0,0,0,14,4,0,25,19,3,0.04,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,8,2,0,16,78,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,313,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,331,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,2,0,0,1,2,3,4,2,0,11,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",2,0,0,1,2,3,2,2,0,10,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",2,0,0,1,2,3,2,2,0,10,92,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",2,0,0,1,2,3,2,2,0,10,98,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",2,0,0,1,2,3,2,2,0,10,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,442,    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);,2,0,0,1,2,3,6,2,0,13,114,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,0,1,2,3,2,2,0,10,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",4,1,0,1,2,3,2,2,0,13,82,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",2,0,0,1,2,3,2,2,0,10,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,2,0,10,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",4,0,0,1,2,3,8,4,0,20,76,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,697,"    public static final String OS_NAME = getSystemProperty(""os.name"");",2,0,0,1,2,3,2,4,0,14,66,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,715,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",2,0,0,1,2,3,2,2,0,10,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,733,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",0,0,0,1,2,0,4,0,0,5,80,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,753,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ?",2,1,0,1,2,3,2,2,0,12,85,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,790,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,845,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",8,1,0,1,2,3,2,6,0,21,78,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,870,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,890,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,900,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,910,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,942,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",4,1,0,1,2,3,2,0,0,11,64,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,978,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",6,2,0,2,4,3,8,0,0,21,97,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,990,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",2,0,0,1,2,3,2,0,0,8,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1002,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",2,0,0,1,2,3,2,0,0,8,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1014,"    public static final boolean IS_OS_FREE_BSD = getOSMatchesName(""FreeBSD"");",2,0,0,1,2,3,2,0,0,8,73,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1026,"    public static final boolean IS_OS_OPEN_BSD = getOSMatchesName(""OpenBSD"");",2,0,0,1,2,3,8,0,0,14,73,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1038,"    public static final boolean IS_OS_NET_BSD = getOSMatchesName(""NetBSD"");",4,1,0,1,2,3,2,0,0,11,71,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1086,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX,4,2,0,0,0,0,6,0,0,12,111,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1099,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,2,0,0,1,2,3,4,0,0,9,85,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1123,"    public static final boolean IS_OS_WINDOWS_2003 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.2"");",2,0,0,1,2,3,4,0,0,10,93,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1135,"    public static final boolean IS_OS_WINDOWS_2008 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" Server 2008"", ""6.1"");",4,1,0,1,2,3,2,0,0,12,110,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1147,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",6,3,0,1,2,3,6,0,0,21,98,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1186,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",4,1,0,1,2,3,2,0,0,11,96,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1199,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",0,0,0,1,2,0,18,0,0,18,91,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1212,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",2,0,0,1,2,3,4,0,0,11,94,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1224,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",14,4,0,1,2,0,0,0,0,19,90,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1236,"    public static final boolean IS_OS_WINDOWS_8 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.2"");",8,2,0,1,2,0,6,0,0,16,90,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1277,"        return isJavaVersionMatch(JAVA_SPECIFICATION_VERSION, versionPrefix);",6,0,0,1,2,2,0,12,0,19,69,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1288,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);",2,0,0,1,2,1,0,0,0,3,69,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1298,"        return isOSNameMatch(OS_NAME, osNamePrefix);",8,1,0,1,2,1,0,0,0,10,44,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1316,            return System.getProperty(property);,4,1,0,1,2,4,8,0,0,17,36,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1383,        return JAVA_SPECIFICATION_VERSION_AS_ENUM.atLeast(requiredVersion);,2,1,0,1,2,1,10,0,0,14,67,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1418,        if (osName == null || osVersion == null) {,0,1,0,1,3,0,10,0,0,12,42,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1421,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,0,1,0,2,4,1,12,0,0,13,80,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1435,        if (osName == null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1438,        return osName.startsWith(osNamePrefix);,2,0,0,1,2,2,10,2,0,15,39,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,89,"    JavaVersion(final float value, final String name) {",6,0,0,1,3,2,0,2,0,10,51,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,90,        this.value = value;,0,0,0,0,0,0,4,0,0,5,19,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,91,        this.name = name;,4,0,0,0,0,0,0,0,0,5,17,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,37,"    JAVA_1_1(1.1f, ""1.1""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,47,"    JAVA_1_3(1.3f, ""1.3""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,57,"    JAVA_1_5(1.5f, ""1.5""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,67,"    JAVA_1_7(1.7f, ""1.7""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,72,"    JAVA_1_8(1.8f, ""1.8"");",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,27,public enum JavaVersion {,6,0,0,0,1,1,4,0,0,11,25,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,132,"        if (""0.9"".equals(nom)) {",4,0,0,2,5,0,4,2,0,11,24,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,134,"        } else if (""1.1"".equals(nom)) {",0,0,0,2,6,0,0,0,0,8,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,136,"        } else if (""1.2"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,140,"        } else if (""1.4"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,142,"        } else if (""1.5"".equals(nom)) {",4,0,0,2,6,0,4,0,0,8,31,17,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,457,"            if (str.startsWith(""-"")) { // drop -",4,1,0,2,5,0,4,0,0,10,36,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,460,            if (hexDigits > 8) { // too many for an int,2,1,0,1,3,0,0,0,0,3,43,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,463,            return createInteger(str);,2,0,0,1,2,4,6,4,0,16,26,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,474,            if (expPos > -1) {,14,8,0,1,3,0,14,2,0,39,18,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,475,                if (expPos < decPos || expPos > str.length()) {,6,3,0,2,5,0,4,0,0,13,47,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,478,"                dec = str.substring(decPos + 1, expPos);",10,1,0,1,2,0,4,0,0,18,40,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,480,                dec = str.substring(decPos + 1);,10,1,0,1,2,0,0,0,0,12,32,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,496,"                exp = str.substring(expPos + 1, str.length() - 1);",2,0,0,2,4,3,4,2,0,12,50,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,521,                        Float f = NumberUtils.createFloat(numeric);,2,0,0,1,2,0,6,2,0,10,43,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,535,                        Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,0,6,2,0,10,45,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,536,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,0,0,5,11,0,0,0,0,2,65,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,537,                            return d;,4,1,0,0,0,1,4,0,0,9,9,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,543,                        return createBigDecimal(numeric);,16,2,0,1,2,1,14,10,0,46,33,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,555,            if (expPos > -1 && expPos < str.length() - 1) {,8,5,0,2,5,0,4,0,0,18,47,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,556,"                exp = str.substring(expPos + 1, str.length());",4,1,0,2,4,0,8,0,0,14,46,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,560,            if (dec == null && exp == null) {,6,3,1,1,3,0,0,0,0,12,33,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,564,                } catch (NumberFormatException nfe) { // NOPMD,0,0,0,1,4,0,0,0,0,5,46,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,568,                    return createLong(str);,0,0,0,1,2,1,4,0,0,5,23,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,576,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,14,1,0,2,4,0,24,2,0,45,55,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,579,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,6,3,0,5,11,0,12,0,0,24,65,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,580,                        return f;,8,2,0,0,0,1,0,0,0,11,9,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,446,        if (str == null) {,2,0,0,1,3,0,0,0,0,2,18,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,452,"        if (str.startsWith(""--"")) {",2,0,0,2,5,0,4,0,0,7,27,4,0.5,1,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,465,        char lastChar = str.charAt(str.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,470,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,8,1,0,2,4,0,16,2,0,31,53,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,472,        if (decPos > -1) {,2,0,0,1,3,0,0,0,0,2,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,484,            if (expPos > -1) {,10,4,0,1,3,0,0,0,0,15,18,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,494,        if (!Character.isDigit(lastChar) && lastChar != '.') {,0,0,0,2,5,0,6,0,0,6,54,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,495,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,8,0,0,17,47,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,498,                exp = null;,6,0,0,0,0,0,0,0,0,8,11,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,501,"            String numeric = str.substring(0, str.length() - 1);",2,1,0,2,4,0,8,2,0,13,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,503,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,510,                            return createLong(numeric);,2,0,0,1,2,1,8,2,0,13,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,612,        for (int i = str.length() - 1; i >= 0; i--) {,8,1,0,2,5,0,4,0,0,14,45,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,613,            if (str.charAt(i) != '0') {,0,1,1,2,5,0,10,0,0,21,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,614,                return false;,6,3,0,0,0,1,0,0,0,9,13,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,647,        if (str == null) {,2,1,0,1,3,0,8,0,0,11,18,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,701,        return new BigInteger(str);,8,0,0,1,2,1,4,0,0,13,27,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,714,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,725,        return new BigDecimal(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.5,1,1
defect4j,lang,org/apache/commons/lang3/StringUtils,7,239,            if (Character.isWhitespace(cs.charAt(i)) == false) {,8,3,0,3,7,0,10,0,0,22,52,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,240,                return false;,0,0,0,0,0,1,4,0,0,5,13,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,682,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,685,        return Long.decode(str);,4,0,0,1,2,1,6,0,0,11,24,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1300,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,11,40,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,1304,        return true;,2,0,0,0,0,1,0,2,0,4,12,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,7,159,"    private static final Pattern WHITESPACE_PATTERN = Pattern.compile(""(?: \\s|[\\s&&[^ ]])\\s*"");",0,0,0,4,8,0,0,0,0,12,94,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,33,    public static final Long LONG_ZERO = Long.valueOf(0L);,2,0,0,1,2,3,4,2,0,11,54,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,39,    public static final Integer INTEGER_ZERO = Integer.valueOf(0);,2,0,0,1,2,3,4,2,0,11,62,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,49,    public static final Short SHORT_MINUS_ONE = Short.valueOf((short) -1);,2,0,0,2,4,0,0,0,0,2,70,6,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,51,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,2,0,0,2,4,3,4,2,0,11,60,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,55,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,4,0,1,2,4,3,4,2,0,17,66,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,57,    public static final Double DOUBLE_ZERO = Double.valueOf(0.0d);,12,9,0,1,2,0,0,0,0,21,62,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,59,    public static final Double DOUBLE_ONE = Double.valueOf(1.0d);,2,2,0,1,2,0,4,0,0,9,61,8,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,61,    public static final Double DOUBLE_MINUS_ONE = Double.valueOf(-1.0d);,2,0,0,1,2,3,4,2,0,12,68,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,63,    public static final Float FLOAT_ZERO = Float.valueOf(0.0f);,2,0,0,1,2,3,4,2,0,11,59,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,65,    public static final Float FLOAT_ONE = Float.valueOf(1.0f);,8,0,0,1,2,6,4,6,0,24,58,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1134,            if (zone.useDaylightTime(),0,0,0,1,3,0,4,0,0,4,26,7,2.0,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1138,"                buffer.append(getTimeZoneDisplay(zone, false, mStyle, mLocale));",2,0,0,2,4,0,4,0,0,6,64,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1241,            if (obj instanceof TimeZoneDisplayKey) {,2,0,0,1,3,0,0,2,0,4,40,6,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1242,                TimeZoneDisplayKey other = (TimeZoneDisplayKey)obj;,10,0,0,1,2,0,0,4,0,14,51,1,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,734,            } else if (value < 100) {,2,1,0,1,4,0,0,0,0,3,25,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,735,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,736,                buffer.append((char)(value % 10 + '0'));,6,3,0,3,6,0,10,0,0,20,40,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1216,"                           boolean daylight, int style, Locale locale) {",6,0,0,0,2,0,0,2,0,8,45,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1218,            if (daylight) {,2,0,0,1,3,0,0,0,0,2,15,5,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1219,                style |= 0x80000000;,4,1,0,0,0,0,0,2,0,9,20,1,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1221,            mStyle = style;,4,0,0,0,0,0,0,0,0,5,15,5,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1230,            return (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();,2,4,0,3,6,1,8,0,0,14,71,5,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,259,                if (tokenLen >= 4) {,2,1,0,1,3,0,0,2,0,8,20,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1079,"        TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);",2,0,0,1,2,3,0,4,0,9,77,2,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1080,        String value = cTimeZoneDisplayCache.get(key);,2,0,0,1,2,0,6,2,0,10,46,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1081,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1089,        return value;,6,0,0,0,0,1,0,0,0,8,13,3,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,692,            buffer.append(mValues[calendar.get(mField)]);,2,0,0,3,6,0,0,0,0,2,45,6,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,693,        },2,0,0,0,1,0,0,0,0,3,1,6,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1109,"        TimeZoneNameRule(TimeZone timeZone, Locale locale, int style) {",8,0,0,1,3,0,0,4,0,12,63,3,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1110,            mLocale = locale;,4,0,0,0,0,0,6,0,0,11,17,1,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1111,            mStyle = style;,4,0,0,0,0,0,0,0,0,5,15,5,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1115,"            mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);",2,0,0,1,2,0,8,0,0,12,62,5,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1126,"            return Math.max(mStandard.length(), mDaylight.length());",0,0,0,3,6,1,12,0,0,12,56,6,0.8,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,732,            if (value < 10) {,2,1,0,1,3,0,0,0,0,3,17,5,0.66667,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,180,        return parsePattern;,2,0,0,0,0,1,0,0,0,2,20,4,1.0,1,1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,260,        return date;,4,0,0,0,0,1,0,0,0,5,12,3,0.10526,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,732,"            cal.set(field, modify(Integer.parseInt(value)));",0,0,0,3,6,0,14,0,0,14,48,6,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,741,            return iValue;,2,0,0,0,0,1,0,0,0,2,14,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,282,"        Calendar cal= Calendar.getInstance(timeZone, locale);",2,0,0,1,2,0,8,2,0,12,53,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,283,        cal.clear();,0,0,0,1,2,0,4,0,0,4,12,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,285,        for(int i=0; i<strategies.length;) {,10,1,0,1,3,0,4,2,0,17,36,3,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,287,"            strategy.setCalendar(this, cal, matcher.group(i));",0,0,0,2,4,0,12,0,0,12,50,7,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,289,        pos.setIndex(offset+matcher.end());,2,1,0,2,4,0,8,0,0,11,35,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,290,        return cal.getTime();,0,0,0,1,2,1,4,0,0,4,21,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,250,"        Date date= parse(source, new ParsePosition(0));",2,0,0,2,4,0,4,4,0,10,47,4,0.1,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,277,        Matcher matcher= parsePattern.matcher(source.substring(offset));,12,1,0,2,4,0,10,2,0,26,64,3,0.09756,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,278,        if(!matcher.lookingAt()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.09756,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,180,        return parsePattern;,2,0,0,0,0,1,0,0,0,2,20,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,685,            KeyValue[] textKeyValues= parser.getDisplayNames(field);,4,0,0,2,4,0,12,6,0,22,56,1,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,686,"            int idx= Arrays.binarySearch(textKeyValues, new KeyValue(value, -1), IGNORE_CASE_COMPARATOR);",10,1,1,2,4,0,8,2,0,25,93,1,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,687,            if(idx<0) {,2,1,0,1,3,0,0,0,0,3,11,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,696,"            cal.set(field, textKeyValues[idx].value);",4,0,1,2,4,0,12,0,0,21,41,1,0.2,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,850,            return iValue-1;,2,1,0,0,0,1,0,0,0,3,16,8,0.13793,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,251,        if(date==null) {,2,1,0,1,3,0,0,0,0,3,16,4,0.10526,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,277,        Matcher matcher= parsePattern.matcher(source.substring(offset));,2,0,0,2,4,0,10,2,0,14,64,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,278,        if(!matcher.lookingAt()) {,2,0,0,2,5,3,4,4,0,14,26,1,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,282,"        Calendar cal= Calendar.getInstance(timeZone, locale);",2,0,0,1,2,0,8,2,0,12,53,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,285,        for(int i=0; i<strategies.length;) {,8,1,0,1,3,0,0,0,0,9,36,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,288,        },10,0,0,0,1,0,0,4,0,14,1,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,289,        pos.setIndex(offset+matcher.end());,2,1,0,2,4,0,8,0,0,11,35,5,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,290,        return cal.getTime();,6,0,0,1,2,1,0,2,0,8,21,4,0.10256,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,253,                ch = (char) (random.nextInt(gap) + start);,4,1,0,3,6,0,6,0,0,12,42,8,0.5,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,234,        if (start == 0 && end == 0) {,4,3,0,1,3,0,0,0,0,7,29,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,247,        char[] buffer = new char[count];,2,0,0,2,4,0,6,0,0,8,32,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,248,        int gap = end - start;,6,1,0,0,0,0,0,0,0,7,22,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,250,        while (count-- != 0) {,2,1,0,1,3,0,0,0,0,4,22,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,252,            if (chars == null) {,2,1,0,1,3,0,0,0,0,3,20,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,225,        if (count == 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,227,        } else if (count < 0) {,2,1,0,1,4,0,0,0,0,3,23,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,230,        if (chars != null && chars.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,43,    private static final Random RANDOM = new Random();,2,0,0,1,2,3,0,4,0,9,50,2,0.2,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,54,      super();,2,0,0,1,2,1,0,0,0,4,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,69,"        return random(count, false, false);",0,0,0,1,2,1,6,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,83,"        return random(count, 32, 127, false, false);",0,0,0,1,2,1,4,0,0,6,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,97,"        return random(count, true, false);",2,0,0,1,2,1,0,0,0,2,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,125,"        return random(count, false, true);",2,0,0,1,2,4,4,0,0,11,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,143,"        return random(count, 0, 0, letters, numbers);",0,0,0,1,2,1,8,0,0,8,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,187,"        return random(count, start, end, letters, numbers, chars, RANDOM);",0,0,0,1,2,1,16,0,0,16,66,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,228,"            throw new IllegalArgumentException(""Requested random string length "" + count + "" is less than 0."");",2,1,0,1,2,0,0,2,0,7,99,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,231,"            throw new IllegalArgumentException(""The chars array must not be empty"");",0,0,0,1,2,0,0,2,0,3,72,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,236,                end = chars.length;,6,0,0,0,0,0,0,0,0,7,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,238,                if (!letters && !numbers) {,4,1,0,1,3,0,0,0,0,7,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,239,                    end = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,7,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,241,                    end = 'z' + 1;,2,1,0,0,0,0,0,0,0,5,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,242,                    start = ' ';                ,2,0,0,0,0,0,0,0,0,4,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,255,                ch = chars[random.nextInt(gap) + start];,8,2,1,2,4,3,6,4,0,26,40,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,257,            if (letters && Character.isLetter(ch),2,1,0,1,3,0,6,0,0,9,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,261,                    if(count == 0) {,2,1,0,1,3,0,0,2,0,7,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,262,                        count++;,4,0,0,0,0,0,4,0,0,11,8,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,265,                        buffer[count] = ch;,2,0,1,1,2,0,0,0,0,7,19,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,266,                        count--;,0,0,0,0,0,0,12,0,0,12,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,269,                } else if(ch >= 55296 && ch <= 56191) {,4,3,0,1,4,0,0,0,0,7,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,270,                    if(count == 0) {,12,2,0,1,3,0,0,0,0,15,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,271,                        count++;,2,0,0,0,0,0,0,0,0,3,8,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,274,                        buffer[count] = (char) (56320 + random.nextInt(128));,0,1,1,4,8,0,4,0,0,10,53,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,275,                        count--;,4,0,0,0,0,1,0,0,0,7,8,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,276,                        buffer[count] = ch;,2,0,1,1,2,0,0,0,0,7,19,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,278,                } else if(ch >= 56192 && ch <= 56319) {,8,5,0,1,4,0,6,2,0,23,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,285,                count++;,4,0,0,0,0,3,0,4,0,12,8,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,288,        return new String(buffer);,2,0,0,1,2,1,0,2,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,306,        if (chars == null) {,2,0,0,1,3,0,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,309,"        return random(count, chars.toCharArray());",0,0,0,2,4,1,8,0,0,8,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,325,        if (chars == null) {,4,1,0,1,3,0,4,0,0,9,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,328,"        return random(count, 0, chars.length, false, false, chars, RANDOM);",12,0,0,1,2,1,6,2,0,20,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,248,                ch = chars[random.nextInt(gap) + start];,4,1,1,2,4,0,6,0,0,14,40,8,4.0,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,227,        } else if (count < 0) {,2,1,0,1,4,0,0,0,0,3,23,5,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,231,        if (start == 0 && end == 0) {,4,3,0,1,3,0,0,0,0,7,29,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,232,                if (!letters && !numbers) {,4,1,0,1,3,0,0,0,0,7,27,6,2.0,1,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,233,                    end = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,7,24,8,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,240,        char[] buffer = new char[count];,2,0,1,2,4,0,0,0,0,4,32,5,2.0,1,1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,241,        int gap = end - start;,8,1,0,0,0,0,0,2,0,11,22,1,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,243,        while (count-- != 0) {,2,1,0,1,3,0,0,0,0,4,22,4,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,245,            if (chars == null) {,4,2,0,1,3,0,0,0,0,6,20,3,2.0,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,43,    private static final Random RANDOM = new Random();,2,0,0,1,2,3,0,4,0,9,50,2,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,318,        if (chars == null) {,0,0,0,1,3,0,4,0,0,4,20,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,321,"        return random(count, 0, chars.length, false, false, chars, RANDOM);",4,0,0,1,2,1,8,0,0,14,67,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/SerializationException,13,75,"        super(msg, cause);",4,0,0,1,2,0,0,0,0,4,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,83,        ByteArrayInputStream bais = new ByteArrayInputStream(objectData);,4,0,0,1,2,0,0,4,0,8,65,4,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,85,        ClassLoaderAwareObjectInputStream in = null;,2,0,0,0,0,0,0,2,0,4,44,4,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,88,"            in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());",4,0,0,3,6,0,6,2,0,13,85,6,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,95,            T readObject = (T) in.readObject();,4,0,0,2,4,0,0,0,0,5,35,5,0.2,1,1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,249,            super(in);,2,0,0,1,2,0,0,0,0,2,10,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,250,            this.classLoader = classLoader;,4,0,0,0,0,0,0,0,0,5,31,5,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,266,"                return Class.forName(name, false, classLoader);",2,0,0,1,2,4,8,0,0,14,47,1,0.2,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,82,        byte[] objectData = serialize(object);,4,0,0,2,4,3,4,4,0,15,38,1,0.16667,0,0
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,79,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,782,        if (cs1 == cs2) {,6,1,0,1,3,0,0,0,0,7,17,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,785,        if (cs1 == null || cs2 == null) {,8,3,0,1,3,3,6,4,0,24,33,1,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,716,        private static final Pattern java6Pattern = sunPattern;,4,0,0,0,0,3,0,2,0,9,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,721,            Method _java6NormalizeMethod = null;,2,0,0,0,0,3,0,4,0,9,36,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,728,                Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,77,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,731,                Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,73,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,733,"                _java6NormalizeMethod = normalizerClass.getMethod(""normalize"",//$NON-NLS-1$",2,0,0,0,1,0,4,0,0,8,75,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,735,            } catch (Exception e1) {,2,0,0,1,4,0,0,2,0,4,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,737,                _java6Exception = e1;,4,0,0,0,0,0,0,0,0,5,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,740,                    Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,73,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,742,"                    _sunDecomposeMethod = normalizerClass.getMethod(""decompose"",//$NON-NLS-1$",2,0,0,0,1,0,4,0,0,8,73,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,750,            java6Exception = _java6Exception;,10,0,0,0,0,0,6,2,0,19,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,751,            java6NormalizerFormNFD = _java6NormalizerFormNFD;,4,0,0,0,0,0,0,0,0,5,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,752,            java6NormalizeMethod = _java6NormalizeMethod;,4,0,0,0,0,0,0,0,0,5,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,753,            sunException = _sunException;,4,0,0,0,0,0,0,0,0,5,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,754,            sunDecomposeMethod = _sunDecomposeMethod;,4,0,0,0,0,0,0,0,0,5,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,755,        },2,0,0,0,1,3,2,2,0,10,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,56,"        return cs == null ? null : cs.subSequence(start, cs.length());",2,1,0,2,4,1,10,0,0,13,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,70,        if (cs instanceof String) {,2,0,0,1,3,0,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,71,"            return ((String) cs).indexOf(searchChar, start);",0,0,0,3,6,1,0,0,0,10,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,74,            if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,75,                start = 0;,4,0,0,0,0,3,0,4,0,13,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,77,            for (int i = start; i < sz; i++) {,2,1,0,1,3,0,0,0,0,3,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,78,                if (cs.charAt(i) == searchChar) {,2,1,0,2,5,0,6,0,0,9,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,79,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,82,            return -1;,0,0,0,0,0,1,2,0,0,5,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,95,"        return cs.toString().indexOf(searchChar.toString(), start);",0,0,0,3,6,1,12,0,0,12,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,117,        if (cs instanceof String) {,2,0,0,1,3,0,0,2,0,4,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,121,            if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,124,            if (start >= sz) {,4,1,0,1,3,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,125,                start = sz - 1;,4,1,0,0,0,0,6,0,0,15,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,128,                if (cs.charAt(i) == searchChar) {,4,2,0,2,5,0,6,0,0,12,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,132,            return -1;,12,1,0,0,0,4,0,0,0,17,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,145,"        return cs.toString().lastIndexOf(searchChar.toString(), start);",2,0,0,3,6,1,0,0,0,2,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,164,        if (cs instanceof String) {,2,0,0,1,3,0,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,167,            int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,168,            char[] array = new char[cs.length()];,0,0,0,3,6,0,0,0,0,1,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,169,            for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,170,                array[i] = cs.charAt(i);,2,0,1,2,4,2,6,4,0,19,24,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,172,            return array;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,189,        if (cs instanceof String && substring instanceof String) {,4,1,0,1,3,0,0,4,0,9,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,190,"            return ((String) cs).regionMatches(ignoreCase, thisStart, (String) substring, start, length);",0,0,0,4,8,1,0,0,0,13,93,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,184,        return cs == null || cs.length() == 0;,4,4,1,1,2,4,2,0,0,23,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,203,        return !StringUtils.isEmpty(cs);,4,1,0,1,2,1,8,2,0,17,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,228,            if (Character.isWhitespace(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,282,        return str == null ? null : str.trim();,10,1,0,1,2,4,14,2,0,31,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,308,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,309,        return isEmpty(ts) ? null : ts;,0,0,0,1,2,1,6,0,0,6,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,334,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,389,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,390,            return null;,6,3,0,0,0,1,10,0,0,20,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,449,        if (isEmpty(str)) {,2,0,0,2,5,0,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,482,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,483,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,485,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,486,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,487,            while (start != strLen && Character.isWhitespace(str.charAt(start))) {,2,0,0,3,7,0,0,0,0,2,70,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,488,                start++;,4,0,0,0,0,0,0,4,0,9,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,490,        } else if (stripChars.length() == 0) {,2,1,0,2,6,0,10,2,0,15,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,497,        return str.substring(start);,2,1,0,1,2,1,0,0,0,3,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,536,            return str;,16,5,0,0,0,1,4,2,0,29,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,538,            while (end != 0 && stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND) {,2,0,0,3,7,0,6,0,0,9,80,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,539,                end--;,0,0,0,0,0,0,6,0,0,6,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,567,"        return stripAll(strs, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,598,            return strs;,26,4,0,0,0,1,28,0,0,59,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,600,        String[] newArr = new String[strsLen];,2,0,0,2,4,0,0,0,0,2,38,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,602,"            newArr[i] = strip(strs[i], stripChars);",10,3,0,3,6,0,12,2,0,29,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,604,        return newArr;,2,0,0,0,0,4,2,2,0,10,14,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,633,            String result = null;,12,2,0,0,0,0,4,0,0,20,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,634,            if (InitStripAccents.java6NormalizeMethod != null) {,2,1,0,1,3,0,0,0,0,3,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,635,                result = removeAccentsJava6(input);,4,0,0,1,2,0,4,0,0,10,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,637,                result = removeAccentsSUN(input);,2,0,0,1,2,0,4,0,0,7,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,646,        } catch(IllegalArgumentException iae) {,4,3,0,1,4,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,647,"            throw new RuntimeException(""IllegalArgumentException occurred"", iae);",6,2,0,1,2,0,0,2,0,12,69,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,650,        } catch(InvocationTargetException ite) {,4,1,0,1,4,0,0,2,0,7,40,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,652,        } catch(SecurityException se) {,6,1,0,1,4,0,0,0,0,7,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,653,"            throw new RuntimeException(""SecurityException occurred"", se);",2,0,0,1,2,0,0,2,0,5,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,673,        if (InitStripAccents.java6NormalizeMethod == null || InitStripAccents.java6NormalizerFormNFD == null) {,8,3,0,1,3,0,0,0,0,11,103,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,679,        return result;,4,0,0,0,0,3,0,6,0,12,14,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,697,        if (InitStripAccents.sunDecomposeMethod == null) {,8,0,0,1,3,1,0,6,0,15,50,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,701,"        result = (String) InitStripAccents.sunDecomposeMethod.invoke(null, new Object[] {text, Boolean.FALSE, Integer.valueOf(0)});",2,1,0,5,10,0,0,0,0,3,123,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,702,"        result = InitStripAccents.sunPattern.matcher(result).replaceAll("""");//$NON-NLS-1$",2,0,0,2,4,0,0,0,0,2,81,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,703,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,844,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,8,0,0,8,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,907,        if (seq == null || searchSeq == null) {,18,5,1,1,3,3,4,4,0,41,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,947,        if (seq == null || searchSeq == null) {,2,0,0,1,3,0,0,0,0,2,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,988,"        return ordinalIndexOf(str, searchStr, ordinal, false);",0,0,0,1,2,1,8,0,0,9,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1006,        if (str == null || searchStr == null || ordinal <= 0) {,6,5,0,1,3,0,0,0,0,11,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1009,        if (searchStr.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1010,            return lastIndex ? str.length() : 0;,2,0,0,1,2,1,4,0,0,6,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1013,        int index = lastIndex ? str.length() : INDEX_NOT_FOUND;,6,0,0,1,2,0,4,0,0,10,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1016,"                index = CharSequenceUtils.lastIndexOf(str, searchStr, index - 1);",4,1,0,1,2,0,8,0,0,14,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1020,            if (index < 0) {,2,1,0,1,3,0,0,0,0,4,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1021,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1023,            found++;,2,0,0,0,0,0,6,0,0,9,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1024,        } while (found < ordinal);,6,2,0,1,3,0,10,0,0,18,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1025,        return index;,6,1,0,0,0,1,0,0,0,7,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1090,        if (str == null || searchStr == null) {,6,3,0,1,3,0,0,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1093,        if (startPos < 0) {,2,1,0,1,3,0,24,0,0,28,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1094,            startPos = 0;,2,0,0,0,0,0,4,2,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1096,        int endLimit = str.length() - searchStr.length() + 1;,2,2,0,2,4,0,8,0,0,12,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1097,        if (startPos > endLimit) {,4,3,0,1,3,0,0,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1098,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,4,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1100,        if (searchStr.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1104,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {",4,0,0,3,7,0,14,0,0,20,86,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1105,                return i;,8,4,0,0,0,1,8,0,0,20,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1108,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,2,0,2,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1134,        if (isEmpty(seq)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1135,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1137,"        return CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length());",0,0,0,2,4,1,12,0,0,12,68,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1170,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,4,0,0,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1172,"        return CharSequenceUtils.lastIndexOf(seq, searchChar, startPos);",0,0,0,1,2,1,10,0,0,10,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1199,        if (seq == null || searchSeq == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1200,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1202,"        return CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length());",0,0,0,2,4,1,0,0,0,7,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1273,        if (seq == null || searchSeq == null) {,6,3,0,1,3,1,0,0,0,10,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1274,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1303,        if (str == null || searchStr == null) {,2,1,0,1,3,0,0,0,0,3,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1304,            return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1339,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1340,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1342,        if (startPos > str.length() - searchStr.length()) {,2,2,0,3,7,0,8,0,0,12,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1343,            startPos = str.length() - searchStr.length();,2,1,0,2,4,0,8,0,0,12,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1346,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1348,        if (searchStr.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1349,            return startPos;,0,0,0,0,0,1,0,0,0,1,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1352,        for (int i = startPos; i >= 0; i--) {,4,0,0,1,3,0,4,0,0,8,37,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1354,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1384,            return false;,0,0,0,0,0,1,0,0,0,2,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1386,"        return CharSequenceUtils.indexOf(seq, searchChar, 0) >= 0;",0,1,0,1,2,1,8,0,0,9,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1443,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,1,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1446,        int len = searchStr.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1449,"            if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, len)) {",0,0,0,2,5,0,12,0,0,13,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1467,            return false;,2,1,0,0,0,1,0,0,0,4,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1469,        int strLen = seq.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1471,            if (Character.isWhitespace(seq.charAt(i))) {,6,0,0,3,7,0,16,0,0,23,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1507,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1508,        int csLast = csLen - 1;,2,0,0,0,0,0,6,0,0,8,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1511,        for (int i = 0; i < csLen; i++) {,2,0,0,1,3,0,0,0,0,2,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1512,            char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1515,                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {,12,4,0,2,5,0,12,0,0,30,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1518,                            return i;,2,1,0,0,0,1,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1526,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1553,        if (isEmpty(cs) || isEmpty(searchChars)) {,6,2,0,3,7,0,8,0,0,16,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1554,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,6,0,0,9,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1556,"        return indexOfAny(cs, searchChars.toCharArray());",2,0,0,2,4,1,16,0,0,20,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1586,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1594,            char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1596,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1597,                    if (Character.isHighSurrogate(ch)) {,6,0,0,2,5,0,10,0,0,17,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1600,                            return true;,0,0,0,0,0,1,0,0,0,1,12,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1644,        if (searchChars == null) {,6,2,0,1,3,0,10,0,0,18,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1645,            return false;,4,1,1,0,0,1,0,0,0,11,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1677,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,6,2,0,3,7,0,10,0,0,18,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1682,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1685,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1687,            for (int j = 0; j < searchLen; j++) {,2,1,0,1,3,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1689,                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {,10,5,0,2,5,0,6,0,0,21,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1690,                        if (searchChars[j + 1] == cs.charAt(i + 1)) {,6,4,1,3,7,0,4,0,0,16,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1691,                            continue outer;,8,2,0,0,0,0,0,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1700,        return INDEX_NOT_FOUND;,4,1,1,0,0,1,0,0,0,9,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1728,            return INDEX_NOT_FOUND;,6,1,0,0,0,1,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1730,        int strLen = seq.length();,6,0,0,1,2,0,4,0,0,10,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1731,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1734,            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {,8,1,0,2,5,0,4,0,0,14,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1735,                char ch2 = seq.charAt(i + 1);,4,1,0,1,2,0,4,0,0,9,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1736,"                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {",4,2,0,2,5,0,12,0,0,18,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1737,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1739,            } else {,4,1,0,0,2,0,0,0,0,5,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1741,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1777,        if (cs.length() == 0) {,2,3,0,2,5,0,12,0,0,17,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1778,            return true;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1780,        if (valid.length == 0) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1783,"        return indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND;",4,1,0,1,2,1,6,0,0,11,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1842,        if (cs == null || searchChars == null) {,6,3,0,1,3,0,4,0,0,13,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1843,            return true;,0,0,0,0,0,1,10,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1845,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1846,        int csLast = csLen - 1;,4,1,0,0,0,0,0,0,0,6,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1847,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1849,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1850,            char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1851,            for (int j = 0; j < searchLen; j++) {,8,1,0,1,3,0,0,0,0,10,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1852,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1854,                        if (j == searchLast) {,4,1,0,1,3,0,0,0,0,5,22,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1859,                            return false;,2,0,0,0,0,1,0,0,0,3,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1895,        if (cs == null || invalidChars == null) {,4,3,0,1,3,0,0,0,0,7,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1896,            return true;,2,0,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1898,"        return containsNone(cs, invalidChars.toCharArray());",2,0,1,2,4,1,14,0,0,22,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1931,        if (str == null || searchStrs == null) {,4,3,0,1,3,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1932,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1934,        int sz = searchStrs.length;,2,0,0,0,0,0,0,0,0,2,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1937,        int ret = Integer.MAX_VALUE;,2,1,0,0,0,0,0,0,0,3,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1939,        int tmp = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1941,            CharSequence search = searchStrs[i];,4,0,1,1,2,0,0,2,0,10,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1942,            if (search == null) {,6,1,0,1,3,0,0,0,0,7,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1946,            if (tmp == INDEX_NOT_FOUND) {,2,0,0,1,3,0,2,0,0,4,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1950,            if (tmp < ret) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1955,        return ret == Integer.MAX_VALUE ? INDEX_NOT_FOUND : ret;,12,2,0,0,0,1,12,0,0,26,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1986,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1991,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1992,            CharSequence search = searchStrs[i];,4,0,1,1,2,0,0,2,0,11,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1996,"            tmp = CharSequenceUtils.lastIndexOf(str, search, str.length());",4,0,0,2,4,0,12,0,0,17,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,1998,                ret = tmp;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2032,            return null;,0,0,0,0,0,1,0,2,0,3,12,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2036,        if (start < 0) {,6,2,0,1,3,0,4,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2043,        if (start > str.length()) {,2,1,0,2,5,0,4,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2091,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2094,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2100,            end = str.length();,0,0,0,1,2,0,0,0,0,1,19,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2105,            return EMPTY;,8,3,0,0,0,1,8,2,0,21,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2108,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2109,            start = 0;,6,3,0,0,0,0,2,0,0,12,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2112,            end = 0;,2,0,0,0,0,0,0,0,0,3,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2141,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2144,        if (len < 0) {,6,2,0,1,3,0,0,0,0,8,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2148,            return str;,2,0,0,0,0,1,10,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2174,        if (str == null) {,2,0,0,1,3,0,8,0,0,11,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2175,            return null;,0,0,0,0,0,1,4,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2212,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2215,        if (len < 0 || pos > str.length()) {,4,3,0,2,5,0,4,0,0,11,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2222,            return str.substring(pos);,4,1,1,1,2,1,6,0,0,16,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2224,"        return str.substring(pos, pos + len);",4,1,0,1,2,1,6,0,0,11,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2258,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2260,        if (separator.length() == 0) {,8,2,0,2,5,0,4,0,0,15,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2263,        int pos = str.indexOf(separator);,2,0,0,1,2,0,6,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2302,        if (separator == null) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2303,            return EMPTY;,6,0,0,0,0,1,0,0,0,7,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2305,        int pos = str.indexOf(separator);,4,0,0,1,2,0,6,8,0,18,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2306,        if (pos == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2307,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2340,        if (isEmpty(str) || isEmpty(separator)) {,6,1,0,3,7,0,8,2,0,17,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2341,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2343,        int pos = str.lastIndexOf(separator);,2,0,0,1,2,0,12,0,0,14,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2383,        if (isEmpty(separator)) {,0,0,0,2,5,0,16,0,0,16,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2384,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2387,        if (pos == INDEX_NOT_FOUND || pos == str.length() - separator.length()) {,6,4,0,3,7,0,8,0,0,18,73,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2390,        return str.substring(pos + separator.length());,6,2,0,2,4,1,12,0,0,22,47,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2452,        if (start != INDEX_NOT_FOUND) {,8,2,0,1,3,0,0,0,0,10,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2454,            if (end != INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2455,"                return str.substring(start + open.length(), end);",2,1,0,2,4,1,10,0,0,13,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2487,        int strLen = str.length();,4,0,0,1,2,0,4,0,0,9,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2488,        if (strLen == 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2489,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2491,        int closeLen = close.length();,2,0,0,1,2,0,4,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2495,        while (pos < strLen - closeLen) {,6,2,0,1,3,0,0,0,0,8,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2497,            if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2500,            start += openLen;,0,0,0,0,0,0,4,0,0,4,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2501,"            int end = str.indexOf(close, start);",12,1,0,1,2,0,8,0,0,23,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2502,            if (end < 0) {,6,1,0,1,3,0,12,0,0,20,14,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2506,            pos = end + closeLen;,0,0,0,0,0,0,4,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2507,        },4,0,0,0,1,0,6,0,0,10,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2508,        if (list.isEmpty()) {,6,1,0,2,5,0,4,0,0,12,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2511,        return list.toArray(new String [list.size()]);,0,1,0,3,6,1,12,2,0,15,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2542,"        return split(str, null, -1);",0,0,0,1,2,1,4,0,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2570,"        return splitWorker(str, separatorChar, false);",0,0,0,1,2,1,6,0,0,7,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2633,"        return splitWorker(str, separatorChars, max, false);",10,4,0,1,2,1,0,0,0,15,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2660,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0,0,0,1,2,1,14,0,0,16,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2691,"        return splitByWholeSeparatorWorker(str, separator, max, false);",2,0,0,1,2,1,8,0,0,13,63,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2720,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",4,0,0,1,2,1,0,0,0,6,61,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2753,"        return splitByWholeSeparatorWorker(str, separator, max, true);",2,1,0,1,2,1,8,0,0,12,62,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2776,        int len = str.length();,4,0,0,1,2,0,8,2,0,14,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2782,        if (separator == null || EMPTY.equals(separator)) {,2,2,0,2,5,0,6,0,0,10,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2787,        int separatorLength = separator.length();,2,0,0,1,2,0,4,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2790,        int numberOfSubstrings = 0;,2,0,0,0,0,0,0,0,0,2,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2793,        while (end < len) {,4,1,0,1,3,0,12,0,0,18,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2794,"            end = str.indexOf(separator, beg);",2,0,0,1,2,0,8,0,0,11,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2797,                if (end > beg) {,2,0,0,1,3,0,0,0,0,3,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2798,                    numberOfSubstrings += 1;,2,0,1,0,0,0,0,0,0,7,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2800,                    if (numberOfSubstrings == max) {,8,3,0,1,3,0,0,0,0,11,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2801,                        end = len;,6,0,0,0,0,0,0,0,0,7,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2802,                        substrings.add(str.substring(beg));,8,2,0,2,4,0,10,0,0,21,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2806,"                        substrings.add(str.substring(beg, end));",0,0,0,2,4,0,12,0,0,12,40,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2815,                    if (preserveAllTokens) {,2,0,0,1,3,0,0,0,0,2,24,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2816,                        numberOfSubstrings += 1;,4,0,0,0,0,0,14,0,0,19,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2817,                        if (numberOfSubstrings == max) {,6,1,0,1,3,0,0,0,0,7,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2818,                            end = len;,4,0,0,0,0,0,0,0,0,5,10,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2824,                    beg = end + separatorLength;,6,1,0,0,0,0,0,0,0,8,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2829,                end = len;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2833,        return substrings.toArray(new String[substrings.size()]);,4,1,0,3,6,2,8,2,0,16,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2917,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2919,        int len = str.length();,4,1,0,1,2,0,0,0,0,5,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2920,        if (len == 0) {,4,2,0,1,3,0,0,0,0,6,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2921,            return ArrayUtils.EMPTY_STRING_ARRAY;,8,0,0,0,0,1,6,0,0,14,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2923,        List<String> list = new ArrayList<String>();,2,1,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2924,"        int i = 0, start = 0;",6,0,0,0,0,0,0,0,0,6,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2925,        boolean match = false;,8,6,0,0,0,0,0,0,0,14,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2937,            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2938,            match = true;,8,3,0,0,0,0,0,0,0,13,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2944,        return list.toArray(new String[list.size()]);,2,0,0,3,6,1,8,2,0,12,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,2981,"        return splitWorker(str, separatorChars, -1, true);",6,2,1,1,2,1,6,0,0,21,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3043,        if (str == null) {,18,0,0,1,3,0,14,0,0,33,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3046,        int len = str.length();,4,0,0,1,2,0,4,0,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3047,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3048,            return ArrayUtils.EMPTY_STRING_ARRAY;,2,0,0,0,0,1,0,2,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3050,        List<String> list = new ArrayList<String>();,4,1,0,1,2,0,2,0,0,7,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3051,        int sizePlus1 = 1;,10,1,0,0,0,0,6,0,0,17,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3054,        boolean lastMatch = false;,10,0,0,0,0,1,6,0,0,18,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3055,        if (separatorChars == null) {,4,2,0,1,3,0,0,0,0,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3057,            while (i < len) {,8,0,0,1,3,0,4,0,0,12,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3058,                if (Character.isWhitespace(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,10,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3059,                    if (match || preserveAllTokens) {,12,2,0,1,3,0,0,0,0,15,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3060,                        lastMatch = true;,6,0,0,0,0,1,0,4,0,11,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3061,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,0,0,0,6,25,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3062,                            i = len;,2,1,0,0,0,0,0,0,0,3,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3063,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3068,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3072,                match = true;,2,0,0,0,0,0,0,0,0,4,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3073,                i++;,2,0,0,0,0,0,0,0,0,3,4,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3075,        } else if (separatorChars.length() == 1) {,0,1,0,2,6,0,4,0,0,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3079,                if (str.charAt(i) == sep) {,6,1,0,2,5,0,0,0,0,7,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3080,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3081,                        lastMatch = true;,4,0,0,0,0,0,0,0,0,7,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3082,                        if (sizePlus1++ == max) {,18,2,0,1,3,0,0,0,0,22,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3084,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3086,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,18,0,0,19,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3087,                        match = false;,2,1,0,0,0,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3089,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3092,                lastMatch = false;,2,0,0,0,0,0,6,0,0,12,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3093,                match = true;,2,0,0,0,0,0,0,0,0,4,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3096,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3099,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,0,1,0,3,7,0,10,0,0,11,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3101,                        lastMatch = true;,4,1,0,0,0,0,0,0,0,7,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3102,                        if (sizePlus1++ == max) {,6,1,0,1,3,0,0,0,0,8,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3103,                            i = len;,4,0,0,0,0,0,0,0,0,5,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3104,                            lastMatch = false;,0,0,0,0,0,0,0,0,0,1,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3106,"                        list.add(str.substring(start, i));",2,2,0,2,4,0,18,0,0,22,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3107,                        match = false;,2,0,0,0,0,0,4,0,0,6,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3109,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3112,                lastMatch = false;,8,1,0,0,0,0,0,0,0,12,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3113,                match = true;,2,0,0,0,0,0,0,0,0,4,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3114,                i++;,2,1,0,0,0,0,0,0,0,3,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3117,        if (match || preserveAllTokens && lastMatch) {,6,2,0,1,3,0,0,0,0,9,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3171,"        return splitByCharacterType(str, true);",6,0,0,1,2,2,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3193,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,10,0,0,14,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3198,        int currentType = Character.getType(c[tokenStart]);,2,0,1,2,4,0,4,0,0,10,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3200,            int type = Character.getType(c[pos]);,2,0,1,2,4,0,4,0,0,10,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3201,            if (type == currentType) {,4,1,0,1,3,0,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3204,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,16,6,0,1,3,0,18,2,0,43,99,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3205,                int newTokenStart = pos - 1;,4,1,0,0,0,0,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3206,                if (newTokenStart != tokenStart) {,4,1,0,1,3,0,0,0,0,5,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3207,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",4,0,0,2,4,0,6,0,0,10,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3208,                    tokenStart = newTokenStart;,2,0,1,0,0,0,0,0,0,7,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3210,            } else {,2,0,0,0,2,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3212,                tokenStart = pos;,6,1,0,0,0,0,0,0,0,9,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3214,            currentType = type;,6,0,0,0,0,0,0,0,0,7,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3216,"        list.add(new String(c, tokenStart, c.length - tokenStart));",8,3,0,2,4,0,0,0,0,12,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3217,        return list.toArray(new String[list.size()]);,8,5,0,3,6,1,12,0,0,26,45,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3245,"        return join(elements, null);",0,1,0,1,2,1,8,0,0,10,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3271,        if (array == null) {,4,2,0,1,3,0,6,0,0,12,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3272,            return null;,4,1,0,0,0,1,0,0,0,6,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3275,"        return join(array, separator, 0, array.length);",4,3,0,1,2,1,0,0,0,7,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3308,        int noOfItems = endIndex - startIndex;,4,1,0,0,0,1,0,4,0,10,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3310,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3313,        StringBuilder buf = new StringBuilder(noOfItems * 16);,4,1,0,1,2,0,0,4,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3315,        for (int i = startIndex; i < endIndex; i++) {,12,1,0,1,3,0,6,0,0,20,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3316,            if (i > startIndex) {,6,2,0,1,3,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3320,                buf.append(array[i]);,0,0,1,2,4,0,4,0,0,8,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3323,        return buf.toString();,8,1,0,1,2,1,8,0,0,17,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3350,        if (array == null) {,4,1,0,1,3,0,4,0,0,10,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3387,        if (separator == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3388,            separator = EMPTY;,2,0,0,0,0,0,4,0,0,7,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3393,        int noOfItems = endIndex - startIndex;,2,0,0,0,0,0,0,0,0,2,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3394,        if (noOfItems <= 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3398,        StringBuilder buf = new StringBuilder(noOfItems * 16);,2,0,0,1,2,0,0,0,0,2,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3401,            if (i > startIndex) {,6,2,0,1,3,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3402,                buf.append(separator);,2,0,0,1,2,0,0,0,0,2,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3404,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3428,        if (iterator == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3429,            return null;,2,1,1,0,0,1,0,0,0,7,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3432,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3434,        Object first = iterator.next();,2,0,0,1,2,0,4,2,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3440,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",2,0,0,1,2,0,0,4,0,6,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3442,            buf.append(first);,2,0,0,1,2,0,6,0,0,8,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3445,        while (iterator.hasNext()) {,2,0,1,2,5,0,4,0,0,14,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3448,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3472,        if (iterator == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3473,            return null;,6,1,0,0,0,1,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3484,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",2,0,0,1,2,0,0,4,0,6,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3490,            if (separator != null) {,6,2,0,1,3,0,4,0,0,12,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3491,                buf.append(separator);,2,0,0,1,2,0,6,0,0,8,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3493,            Object obj = iterator.next();,6,1,0,1,2,0,0,0,0,7,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3516,        if (iterable == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3517,            return null;,2,0,0,0,0,1,0,0,0,3,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3519,"        return join(iterable.iterator(), separator);",2,1,0,2,4,1,8,0,0,11,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3537,        if (iterable == null) {,2,0,0,1,3,0,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3538,            return null;,8,3,0,0,0,1,12,0,0,23,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3564,        char[] chs = new char[sz];,2,0,1,2,4,0,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3565,        int count = 0;,4,0,1,0,0,0,0,0,0,6,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3571,        if (count == sz) {,8,1,0,1,3,0,0,4,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3574,"        return new String(chs, 0, count);",0,0,0,1,2,1,0,0,0,1,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3604,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3605,            return str;,4,0,0,0,0,1,0,0,0,4,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3608,            return str.substring(remove.length());,6,0,0,2,4,2,8,4,0,19,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3610,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3639,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3643,            return str.substring(remove.length());,0,0,0,2,4,1,8,0,0,8,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3645,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3674,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3679,        return str;,4,0,0,0,0,1,6,0,0,10,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3709,        if (isEmpty(str) || isEmpty(remove)) {,2,0,0,3,7,0,0,0,0,2,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3710,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3712,"        if (endsWithIgnoreCase(str, remove)) {",2,1,0,2,5,0,10,0,0,13,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3713,"            return str.substring(0, str.length() - remove.length());",0,1,0,3,6,1,12,0,0,13,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3743,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3745,"        return replace(str, remove, EMPTY, -1);",2,1,0,1,2,1,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3773,        for (int i = 0; i < chars.length; i++) {,0,0,0,1,3,0,0,0,0,1,40,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3834,"        return replace(text, searchString, replacement, -1);",0,0,0,1,2,1,14,0,0,17,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3867,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3869,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3870,"        int end = text.indexOf(searchString, start);",2,0,0,1,2,0,8,0,0,10,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3872,            return text;,10,1,0,0,0,1,0,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3874,        int replLength = searchString.length();,0,0,0,1,2,0,4,0,0,4,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3876,        increase = increase < 0 ? 0 : increase;,6,1,0,0,0,0,8,0,0,16,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3877,        increase *= max < 0 ? 16 : max > 64 ? 64 : max;,10,3,0,0,0,0,10,0,0,24,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3878,        StringBuilder buf = new StringBuilder(text.length() + increase);,4,1,1,2,4,0,4,4,0,22,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3879,        while (end != INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3880,"            buf.append(text.substring(start, end)).append(replacement);",2,0,0,3,6,0,0,0,0,2,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3881,            start = end + replLength;,6,1,0,0,0,0,0,0,0,8,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3885,"            end = text.indexOf(searchString, start);",4,1,0,1,2,0,8,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,3981,        int timeToLive = searchList == null ? 0 : searchList.length;,2,1,1,0,0,0,0,0,0,7,60,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4039,        if (text == null || text.length() == 0 || searchList == null ||,8,9,0,1,3,0,4,0,0,21,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4041,            return text;,6,0,0,0,0,1,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4051,        int replacementLength = replacementList.length;,6,0,0,0,0,0,0,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4054,        if (searchLength != replacementLength) {,4,1,0,1,3,0,0,0,0,5,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4055,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,8,5,0,0,1,0,4,4,0,22,83,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4062,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,2,0,1,2,4,0,0,0,0,4,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4065,        int textIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4067,        int tempIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4071,        for (int i = 0; i < searchLength; i++) {,8,1,0,1,3,0,0,0,0,10,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4074,                continue;,4,1,0,0,0,0,0,0,0,5,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4079,            if (tempIndex == -1) {,6,1,0,1,3,0,2,0,0,11,22,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4082,                if (textIndex == -1 || tempIndex < textIndex) {,10,4,0,1,3,0,4,0,0,20,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4084,                    replaceIndex = i;,4,0,0,0,0,0,8,0,0,14,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4091,        if (textIndex == -1) {,6,1,0,1,3,0,2,0,0,10,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4092,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4095,        int start = 0;,4,1,0,0,0,0,0,0,0,6,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4105,            int greater = replacementList[i].length() - searchList[i].length();,6,2,1,4,8,0,4,0,0,20,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4113,        StringBuilder buf = new StringBuilder(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4115,        while (textIndex != -1) {,2,1,0,1,3,0,4,0,0,8,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4117,            for (int i = start; i < textIndex; i++) {,10,1,0,1,3,0,0,0,0,12,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4118,                buf.append(text.charAt(i));,0,0,0,2,4,0,10,0,0,10,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4120,            buf.append(replacementList[replaceIndex]);,0,0,1,2,4,0,4,0,0,8,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4122,            start = textIndex + searchList[replaceIndex].length();,4,1,0,2,4,0,4,0,0,9,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4124,            textIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4125,            replaceIndex = -1;,2,0,0,0,0,0,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4126,            tempIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4129,            for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,1,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4130,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||,0,4,1,2,5,0,6,0,0,18,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4132,                    continue;,2,1,0,0,0,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4137,                if (tempIndex == -1) {,4,2,0,1,3,0,0,0,0,7,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4140,                    if (textIndex == -1 || tempIndex < textIndex) {,6,3,0,1,3,0,0,0,0,10,47,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4141,                        textIndex = tempIndex;,2,0,1,0,0,0,6,0,0,10,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4142,                        replaceIndex = i;,6,0,0,0,0,0,8,0,0,16,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4149,        int textLength = text.length();,2,0,0,1,2,0,0,0,0,3,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4150,        for (int i = start; i < textLength; i++) {,16,2,0,1,3,0,0,0,0,19,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4153,        String result = buf.toString();,8,0,0,1,2,1,4,6,0,19,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4158,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",2,1,0,1,2,1,16,0,0,19,80,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4184,        if (str == null) {,4,1,0,1,3,0,10,0,0,15,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4230,        if (replaceChars == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4233,        boolean modified = false;,4,0,0,0,0,0,0,0,0,5,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4234,        int replaceCharsLength = replaceChars.length();,2,0,0,1,2,0,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4235,        int strLength = str.length();,0,0,1,1,2,0,4,0,0,13,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4237,        for (int i = 0; i < strLength; i++) {,8,1,0,1,3,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4238,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4240,            if (index >= 0) {,8,2,0,1,3,0,0,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4249,        if (modified) {,2,0,0,1,3,0,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4252,        return str;,6,1,0,0,0,1,4,0,0,11,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4287,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4288,            return null;,4,1,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4291,            overlay = EMPTY;,4,0,0,0,0,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4293,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4294,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4295,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4297,        if (start > len) {,6,2,0,1,3,0,0,0,0,8,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4298,            start = len;,2,0,0,0,0,0,0,0,0,4,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4300,        if (end < 0) {,6,1,0,1,3,0,8,0,0,17,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4301,            end = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4303,        if (end > len) {,2,0,0,1,3,0,0,0,0,4,16,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4304,            end = len;,4,0,0,0,0,0,0,0,0,5,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4306,        if (start > end) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4307,            int temp = start;,4,0,0,0,0,0,0,0,0,4,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4308,            start = end;,2,0,0,0,0,0,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4311,        return new StringBuilder(len + start - end + overlay.length() + 1),6,4,0,2,4,1,4,2,0,16,66,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4350,        if (str.length() == 1) {,0,1,0,2,5,0,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4351,            char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4352,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,12,3,0,1,3,0,4,0,0,20,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4353,                return EMPTY;,2,0,0,0,0,1,0,0,0,3,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4355,            return str;,6,1,0,0,0,1,4,2,0,13,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4358,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4359,        char last = str.charAt(lastIdx);,6,1,0,1,2,0,6,2,0,17,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4362,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4363,                lastIdx--;,2,0,0,0,0,0,0,0,0,3,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4365,        } else if (last != CharUtils.CR) {,10,1,0,1,4,0,12,0,0,23,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4368,"        return str.substring(0, lastIdx);",4,0,0,1,2,1,18,0,0,22,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4400,"        return removeEnd(str,separator);",8,1,0,1,2,1,6,0,0,16,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4429,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4430,            return null;,2,0,0,0,0,1,6,2,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4436,        int lastIdx = strLen - 1;,2,0,0,0,0,1,4,0,0,8,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4437,"        String ret = str.substring(0, lastIdx);",6,1,0,1,2,0,0,0,0,7,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4438,        char last = str.charAt(lastIdx);,6,0,0,1,2,0,6,0,0,13,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4439,        if (last == CharUtils.LF && ret.charAt(lastIdx - 1) == CharUtils.CR) {,14,5,0,2,5,0,8,0,0,27,70,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4440,"            return ret.substring(0, lastIdx - 1);",2,1,0,1,2,1,4,0,0,8,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4442,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4471,        if (str == null) {,4,1,0,1,3,0,0,8,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4475,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4477,        int inputLength = str.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4479,            return str;,4,3,0,0,0,1,18,0,0,26,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4485,        int outputLength = inputLength * repeat;,6,1,0,0,0,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4486,        switch (inputLength) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4488,"                return repeat(str.charAt(0), repeat);",0,0,0,2,4,1,8,0,0,8,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4490,                char ch0 = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4492,                char[] output2 = new char[outputLength];,4,0,1,2,4,0,0,0,0,7,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4493,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",4,1,0,1,3,0,0,0,0,5,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4495,                    output2[i + 1] = ch1;,4,1,1,1,2,0,0,0,0,8,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4497,                return new String(output2);,2,0,0,1,2,1,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4499,                StringBuilder buf = new StringBuilder(outputLength);,2,0,1,1,2,0,0,0,0,6,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4500,                for (int i = 0; i < repeat; i++) {,0,0,0,1,3,0,0,2,0,3,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4501,                    buf.append(str);,2,0,0,1,2,0,10,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4532,"            String result = repeat(str + separator, repeat);",6,1,0,1,2,0,4,2,0,13,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4533,"            return removeEnd(result, separator);",10,1,0,1,2,1,0,0,0,12,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4561,        for (int i = repeat - 1; i >= 0; i--) {,4,1,0,1,3,0,0,0,0,5,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4562,            buf[i] = ch;,2,0,0,1,2,0,6,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4564,        return new String(buf);,2,0,0,1,2,1,0,2,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4615,        int pads = size - str.length();,4,1,0,1,2,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4616,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4617,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4619,        if (pads > PAD_LIMIT) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4620,"            return rightPad(str, size, String.valueOf(padChar));",0,0,0,2,4,1,12,0,0,12,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4622,"        return str.concat(repeat(padChar, pads));",0,0,0,2,4,1,8,2,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4650,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4656,        int strLen = str.length();,4,1,0,1,2,0,4,0,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4657,        int pads = size - strLen;,2,0,0,0,0,0,0,0,0,2,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4659,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4662,"            return rightPad(str, size, padStr.charAt(0));",8,1,0,2,4,1,10,0,0,20,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4667,        } else if (pads < padLen) {,8,2,0,1,4,0,0,0,0,10,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4670,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4671,            char[] padChars = padStr.toCharArray();,0,0,0,2,4,0,4,0,0,4,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4673,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4724,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4725,            return null;,2,0,0,0,0,1,6,0,0,9,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4727,        int pads = size - str.length();,6,2,0,1,2,0,8,0,0,16,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4729,            return str; // returns original String when possible,4,1,0,0,0,1,0,0,0,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4734,"        return repeat(padChar, pads).concat(str);",0,0,0,2,4,1,10,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4765,"            padStr = "" "";",10,2,0,0,0,0,2,0,0,17,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4768,        int strLen = str.length();,0,3,0,1,2,0,16,0,0,21,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4771,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4774,"            return leftPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,16,0,0,16,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4777,        if (pads == padLen) {,4,0,0,1,3,0,0,0,0,5,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4779,        } else if (pads < padLen) {,6,1,0,1,4,0,4,0,0,12,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4780,"            return padStr.substring(0, pads).concat(str);",0,0,0,2,4,1,10,0,0,10,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4782,            char[] padding = new char[pads];,2,1,0,2,4,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4785,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4860,        if (str == null || size <= 0) {,2,1,0,1,3,0,0,0,0,3,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4861,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4868,"        str = leftPad(str, strLen + pads / 2, padChar);",6,2,1,1,2,0,6,0,0,24,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4870,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4900,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4901,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4904,"            padStr = "" "";",2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4907,        int pads = size - strLen;,8,2,0,0,0,0,0,0,0,10,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4911,"        str = leftPad(str, strLen + pads / 2, padStr);",6,2,0,1,2,0,6,0,0,15,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4913,        return str;,12,1,0,0,0,1,0,0,0,14,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4961,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4964,        return str.toUpperCase(locale);,2,0,1,1,2,1,10,0,0,19,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4987,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,4990,        return str.toLowerCase();,0,1,0,1,2,1,8,0,0,9,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5038,        if (str == null || (strLen = str.length()) == 0) {,8,4,0,3,7,0,4,0,0,17,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5039,            return str;,4,0,0,0,0,1,0,0,0,5,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5041,        return new StringBuilder(strLen),2,0,0,1,2,1,0,2,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5070,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5106,        if (StringUtils.isEmpty(str)) {,4,0,0,2,5,0,4,0,0,8,31,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5107,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5110,        char[] buffer = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5112,        for (int i = 0; i < buffer.length; i++) {,14,4,0,1,3,0,0,0,0,19,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5113,            char ch = buffer[i];,4,0,1,1,2,0,0,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5115,                buffer[i] = Character.toLowerCase(ch);,0,0,1,2,4,0,6,0,0,11,38,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5116,            } else if (Character.isTitleCase(ch)) {,2,0,0,2,6,0,6,0,0,8,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5117,                buffer[i] = Character.toLowerCase(ch);,4,1,1,2,4,0,6,2,0,20,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5118,            } else if (Character.isLowerCase(ch)) {,8,1,0,2,6,0,6,0,0,16,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5119,                buffer[i] = Character.toUpperCase(ch);,0,0,1,2,4,0,6,0,0,11,38,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5148,        if (isEmpty(str) || isEmpty(sub)) {,0,0,0,3,7,0,0,0,0,1,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5151,        int count = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5155,            idx += sub.length();,2,0,0,1,2,0,4,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5157,        return count;,4,1,0,0,0,1,4,0,0,9,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5183,        if (cs == null || cs.length() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5184,            return false;,0,0,0,0,0,1,6,0,0,6,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5187,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5188,            if (Character.isLetter(cs.charAt(i)) == false) {,18,7,1,3,7,0,14,0,0,47,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5218,        if (cs == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5221,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5222,        for (int i = 0; i < sz; i++) {,12,2,0,1,3,0,6,0,0,21,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5223,            if (Character.isLetter(cs.charAt(i)) == false && cs.charAt(i) != ' ') {,0,0,0,4,9,0,0,0,0,13,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5253,        if (cs == null || cs.length() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5254,            return false;,4,0,0,0,0,1,0,2,0,7,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5256,        int sz = cs.length();,2,0,1,1,2,0,8,2,0,17,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5257,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5288,        if (cs == null) {,0,0,0,1,3,0,6,0,0,6,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5289,            return false;,2,0,0,0,0,2,10,4,0,18,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5292,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5293,            if (Character.isLetterOrDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ') {,10,5,0,4,9,0,26,0,0,44,78,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5328,            return false;,0,0,0,0,0,1,0,0,0,1,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5330,        int sz = cs.length();,14,2,0,1,2,0,4,0,0,21,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5336,        return true;,4,8,0,0,0,1,4,0,0,17,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5363,        if (cs == null || cs.length() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5366,        int sz = cs.length();,6,1,0,1,2,0,4,0,0,11,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5367,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5400,        if (cs == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5403,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5404,        for (int i = 0; i < sz; i++) {,10,2,0,1,3,0,10,0,0,23,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5405,            if (Character.isDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ') {,0,3,0,4,9,0,16,0,0,21,70,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5433,        if (cs == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5434,            return false;,6,3,0,0,0,1,0,0,0,11,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5436,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5438,            if (Character.isWhitespace(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5442,        return true;,2,0,0,0,0,1,0,0,0,3,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5465,        if (cs == null || isEmpty(cs)) {,2,2,0,2,5,0,4,0,0,9,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5466,            return false;,2,0,1,0,0,1,0,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5469,        for (int i = 0; i < sz; i++) {,14,4,0,1,3,0,6,0,0,25,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5470,            if (Character.isLowerCase(cs.charAt(i)) == false) {,2,2,0,3,7,0,4,0,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5471,                return false;,2,0,0,0,0,1,4,0,0,7,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5498,            return false;,2,0,0,0,0,1,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5501,        for (int i = 0; i < sz; i++) {,2,0,0,1,3,0,8,0,0,11,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5502,            if (Character.isUpperCase(cs.charAt(i)) == false) {,4,1,1,3,7,0,18,0,0,26,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5528,        return str == null ? EMPTY : str;,6,1,0,0,0,1,0,0,0,7,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5571,        return StringUtils.isBlank(str) ? defaultStr : str;,4,1,0,1,2,1,16,0,0,22,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5613,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5639,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5640,            return null;,2,0,0,0,0,1,6,4,0,12,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5644,"        String[] strs = split(str, separatorChar);",2,0,1,2,4,0,6,2,0,12,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5646,"        return join(strs, separatorChar);",2,2,0,1,2,1,4,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5723,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5724,            return null;,4,1,0,0,0,1,0,2,0,9,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5726,        if (maxWidth < 4) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5727,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,0,6,2,0,9,70,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5730,            return str;,6,1,0,0,0,1,0,0,0,7,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5732,        if (offset > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5733,            offset = str.length();,2,0,0,1,2,0,4,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5738,"        final String abrevMarker = ""..."";",2,0,0,0,0,1,0,2,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5742,        if (maxWidth < 7) {,2,1,0,1,3,0,0,0,0,3,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5746,"            return abrevMarker + abbreviate(str.substring(offset), maxWidth - 3);",0,0,0,2,4,1,0,2,0,3,69,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5748,        return abrevMarker + str.substring(str.length() - (maxWidth - 3));,6,3,0,3,6,1,8,0,0,17,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5781,        if (isEmpty(str) || isEmpty(middle)) {,0,1,0,3,7,0,14,0,0,15,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5785,        if (length >= str.length() || length < middle.length()+2) {,8,5,1,3,7,0,10,0,0,28,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5786,            return str;,6,1,0,0,0,1,0,0,0,7,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5789,        int targetSting = length-middle.length();,4,1,0,1,2,0,4,0,0,10,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5793,        StringBuilder builder = new StringBuilder(length);,4,0,0,1,2,0,0,4,0,8,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5794,"        builder.append(str.substring(0,startOffset));",0,0,0,2,4,0,10,0,0,10,45,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5795,        builder.append(middle);,8,0,0,1,2,0,14,0,0,22,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5796,        builder.append(str.substring(endOffset));,4,1,0,2,4,0,10,2,0,19,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5798,        return builder.toString();,2,1,0,1,2,1,4,0,0,7,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5830,            return str2;,6,1,1,0,0,1,0,0,0,14,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5833,            return str1;,8,1,0,0,0,1,6,0,0,15,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5835,"        int at = indexOfDifference(str1, str2);",2,0,0,1,2,0,6,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5868,        if (cs1 == cs2) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5869,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5875,        for (i = 0; i < cs1.length() && i < cs2.length(); ++i) {,8,3,0,3,7,0,8,0,0,21,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5876,            if (cs1.charAt(i) != cs2.charAt(i)) {,2,0,0,3,7,0,4,0,0,7,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5880,        if (i < cs2.length() || i < cs1.length()) {,10,3,0,3,7,0,0,0,0,15,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5881,            return i;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5883,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,5,23,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5919,        if (css == null || css.length <= 1) {,6,3,0,1,3,0,0,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5922,        boolean anyStringNull = false;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5923,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5925,        int shortestStrLen = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5926,        int longestStrLen = 0;,2,0,0,0,0,0,0,0,0,2,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5931,        for (int i = 0; i < arrayLen; i++) {,2,0,0,1,3,0,0,0,0,2,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5933,                anyStringNull = true;,2,0,0,0,0,0,0,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5934,                shortestStrLen = 0;,2,0,0,0,0,0,0,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5937,"                shortestStrLen = Math.min(css[i].length(), shortestStrLen);",2,0,1,3,6,0,8,0,0,15,59,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5938,"                longestStrLen = Math.max(css[i].length(), longestStrLen);",2,0,1,3,6,0,8,0,0,15,57,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5943,        if (allStringsNull || longestStrLen == 0 && !anyStringNull) {,6,3,0,1,3,0,0,0,0,10,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5944,            return INDEX_NOT_FOUND;,10,1,0,0,0,1,0,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5949,            return 0;,4,1,0,0,0,1,0,0,0,5,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5953,        int firstDiff = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5958,                    firstDiff = stringPos;,4,0,0,0,0,0,0,0,0,5,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,5967,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,6,3,0,1,3,0,6,0,0,16,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6010,        if (strs == null || strs.length == 0) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6011,            return EMPTY;,2,0,0,0,0,1,0,0,0,3,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6013,        int smallestIndexOfDiff = indexOfDifference(strs);,2,0,0,1,2,0,0,0,0,2,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6014,        if (smallestIndexOfDiff == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6016,            if (strs[0] == null) {,4,4,1,2,5,0,0,0,0,10,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6025,"            return strs[0].substring(0, smallestIndexOfDiff);",4,0,1,2,4,1,4,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6069,"            throw new IllegalArgumentException(""Strings must not be null"");",2,0,0,1,2,0,4,2,0,10,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6089,        int n = s.length(); // length of s,2,0,0,1,2,0,10,0,0,12,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6092,        if (n == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6093,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6094,        } else if (m == 0) {,4,1,0,1,4,0,0,0,0,5,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6095,            return n;,2,0,1,0,0,2,0,0,0,5,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6100,            CharSequence tmp = s;,4,0,0,0,0,0,0,2,0,6,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6102,            t = tmp;,4,0,0,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6103,            n = m;,4,1,0,0,0,0,20,0,0,27,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6104,            m = t.length();,2,0,0,1,2,0,4,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6107,"        int p[] = new int[n + 1]; //'previous' cost array, horizontally",4,1,0,2,4,0,0,0,0,5,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6108,"        int d[] = new int[n + 1]; // cost array, horizontally",2,0,0,2,4,0,0,0,0,2,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6119,        for (i = 0; i <= n; i++) {,10,2,0,1,3,0,0,0,0,14,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6123,        for (j = 1; j <= m; j++) {,8,1,0,1,3,0,0,0,0,11,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6124,            t_j = t.charAt(j - 1);,4,1,0,1,2,0,4,0,0,10,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6127,            for (i = 1; i <= n; i++) {,8,1,0,1,3,0,0,0,0,11,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6128,                cost = s.charAt(i - 1) == t_j ? 0 : 1;,6,2,0,1,2,0,4,0,0,13,38,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6130,"                d[i] = Math.min(Math.min(d[i - 1] + 1, p[i] + 1), p[i - 1] + cost);",2,0,0,6,12,0,4,0,0,6,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6134,            _d = p;,6,0,0,0,0,1,0,4,0,11,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6135,            p = d;,8,4,0,0,0,0,8,0,0,21,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6136,            d = _d;,6,0,0,0,0,0,0,0,0,7,7,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6141,        return p[n];,0,0,1,1,2,1,0,0,0,4,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6177,        if (s == null || t == null) {,6,3,0,1,3,0,0,0,0,9,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6180,        if (threshold < 0) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6232,        if (n == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6233,            return m <= threshold ? m : -1;,6,1,0,0,0,1,0,0,0,8,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6234,        } else if (m == 0) {,2,1,0,1,4,0,0,0,0,3,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6235,            return n <= threshold ? n : -1;,6,1,0,0,0,1,0,0,0,8,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6238,        if (n > m) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6242,            t = tmp;,4,0,0,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6243,            n = m;,6,0,0,0,0,1,4,0,0,12,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6244,            m = t.length();,2,0,0,1,2,0,4,0,0,6,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6247,"        int p[] = new int[n + 1]; // 'previous' cost array, horizontally",8,1,0,2,4,0,12,0,0,21,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6248,"        int d[] = new int[n + 1]; // cost array, horizontally",4,1,0,2,4,0,0,0,0,5,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6253,        for (int i = 0; i < boundary; i++) {,8,1,0,1,3,0,0,0,0,10,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6258,"        Arrays.fill(p, boundary, p.length, Integer.MAX_VALUE);",12,0,0,1,2,1,8,4,0,25,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6259,"        Arrays.fill(d, Integer.MAX_VALUE);",4,0,0,1,2,0,6,0,0,10,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6263,            char t_j = t.charAt(j - 1); // jth character of t,4,1,0,1,2,0,4,0,0,9,49,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6267,"            int min = Math.max(1, j - threshold);",6,1,0,1,2,0,10,0,0,17,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6268,"            int max = Math.min(n, j + threshold);",6,1,0,1,2,0,6,0,0,13,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6271,            if (min > max) {,8,2,0,1,3,0,0,0,0,10,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6277,                d[min - 1] = Integer.MAX_VALUE;,6,1,1,1,2,0,0,0,0,10,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6281,            for (int i = min; i <= max; i++) {,12,1,0,1,3,0,0,0,0,14,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6282,                if (s.charAt(i - 1) == t_j) {,8,3,0,2,5,0,4,0,0,15,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6284,                    d[i] = p[i - 1];,12,4,1,2,4,0,0,0,0,23,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6287,"                    d[i] = 1 + Math.min(Math.min(d[i - 1], p[i]), p[i - 1]);",0,0,0,6,12,0,0,0,0,18,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6292,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6294,            d = _d;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6299,        if (p[n] <= threshold) {,2,1,1,2,5,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6300,            return p[n];,0,0,1,1,2,1,0,0,0,4,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6332,"        return startsWith(str, prefix, false);",2,1,0,1,2,1,10,0,0,14,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6374,            return str == null && prefix == null;,14,6,0,0,0,1,6,0,0,26,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6376,        if (prefix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6379,"        return CharSequenceUtils.regionMatches(str, ignoreCase, 0, prefix, 0, prefix.length());",0,0,0,2,4,1,14,0,0,14,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6402,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,2,1,0,3,7,0,10,0,0,13,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6403,            return false;,4,3,0,0,0,1,0,0,0,7,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6405,        for (CharSequence searchString : searchStrings) {,4,0,0,1,3,0,0,2,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6406,"            if (StringUtils.startsWith(string, searchString)) {",0,0,0,2,5,0,8,0,0,8,51,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6440,"        return endsWith(str, suffix, false);",2,0,0,1,2,1,10,0,0,13,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6482,        if (str == null || suffix == null) {,4,3,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6485,        if (suffix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6488,        int strOffset = str.length() - suffix.length();,4,2,0,2,4,0,8,0,0,14,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6489,"        return CharSequenceUtils.regionMatches(str, ignoreCase, strOffset, suffix, 0, suffix.length());",4,0,0,2,4,1,16,2,0,22,95,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6534,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6562,        for (CharSequence searchString : searchStrings) {,4,0,0,1,3,0,0,2,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,14,6564,                return true;,2,0,0,0,0,1,0,0,0,3,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,551,        if (type instanceof ParameterizedType) {,2,0,0,1,3,0,0,2,0,4,40,5,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,552,"            return getTypeArguments((ParameterizedType) type, toClass, subtypeVarAssigns);",2,0,0,2,4,1,6,2,0,10,78,7,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,653,"        if (!isAssignable(cls, toClass)) {",4,1,0,2,5,0,12,0,0,19,34,4,1.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,675,        if (cls.getTypeParameters().length > 0 || toClass.equals(cls)) {,6,2,0,3,7,0,10,0,0,18,64,1,1.33333,1,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,0,4,0,9,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,111,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",2,0,0,1,2,3,6,2,0,15,80,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",2,0,0,1,2,3,2,2,0,10,92,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",8,2,0,1,2,3,6,2,0,22,86,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",2,1,0,1,2,0,0,0,0,3,88,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,313,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,8,0,0,1,2,3,8,2,0,22,72,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,331,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,8,0,0,1,2,3,4,4,0,20,82,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",2,0,0,1,2,3,2,2,0,10,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",4,0,0,1,2,3,2,2,0,12,86,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",2,0,0,1,2,3,2,2,0,10,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,442,    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);,2,0,0,1,2,3,6,2,0,13,114,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,461,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =,2,0,0,0,0,3,0,2,0,7,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,0,1,2,3,2,2,0,10,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,2,0,10,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",4,0,0,1,2,5,2,4,0,16,76,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,108,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,715,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",6,3,0,1,2,3,4,2,0,18,72,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,733,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,753,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ?",4,2,0,1,2,3,2,2,0,15,85,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,772,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,2,0,0,1,2,3,4,2,0,11,70,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,790,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,809,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,827,"    public static final String USER_NAME = getSystemProperty(""user.name"");",2,0,0,1,2,3,2,2,0,10,70,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,860,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,870,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",4,0,0,1,2,6,4,4,0,20,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,880,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,890,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",4,0,0,1,2,3,6,0,0,15,71,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,900,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",4,1,0,1,2,3,2,0,0,11,71,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,910,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,2,0,11,71,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,922,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,942,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",2,0,0,1,2,3,2,0,0,8,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,954,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",4,0,0,1,2,3,2,0,0,12,68,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,990,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",2,0,0,1,2,0,0,0,0,2,64,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1002,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",4,0,0,1,2,0,0,0,0,5,73,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1026,"    public static final boolean IS_OS_OPEN_BSD = getOSMatchesName(""OpenBSD"");",10,2,0,1,2,9,6,0,0,29,73,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1050,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",6,0,0,1,2,3,2,0,0,12,65,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1062,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",0,0,0,1,2,0,0,2,0,4,72,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1074,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",2,0,0,1,2,3,2,0,0,8,69,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1099,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,2,0,0,1,2,3,4,0,0,9,85,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1135,"    public static final boolean IS_OS_WINDOWS_2008 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" Server 2008"", ""6.1"");",2,0,0,1,2,0,6,2,0,10,110,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1147,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",2,1,1,1,2,0,0,2,0,10,98,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1160,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",2,0,0,1,2,0,0,0,0,2,98,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1173,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",4,0,0,1,2,3,12,2,0,23,91,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1199,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",2,0,0,1,2,3,4,0,0,10,91,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1212,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",2,0,0,1,2,0,0,0,0,2,94,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1286,"        return isOSNameMatch(OS_NAME, osNamePrefix);",4,1,0,1,2,4,8,0,0,18,44,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1387,        if (version == null) {,2,1,0,1,3,0,0,0,0,3,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1406,        if (osName == null || osVersion == null) {,4,3,0,1,3,0,0,0,0,7,42,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1409,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,0,1,0,2,4,1,12,0,0,13,80,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1423,        if (osName == null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,89,"    JavaVersion(final float value, final String name) {",6,0,0,1,3,2,0,2,0,10,51,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,90,        this.value = value;,4,3,1,0,0,0,0,0,0,18,19,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,91,        this.name = name;,4,0,0,0,0,0,0,0,0,5,17,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,92,    },0,0,0,0,1,0,4,0,0,5,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,32,"    JAVA_0_9(1.5f, ""0.9""),",2,1,0,1,2,0,0,0,0,3,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,37,"    JAVA_1_1(1.1f, ""1.1""),",4,2,0,1,2,0,6,0,0,12,22,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,42,"    JAVA_1_2(1.2f, ""1.2""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,47,"    JAVA_1_3(1.3f, ""1.3""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,52,"    JAVA_1_4(1.4f, ""1.4""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,57,"    JAVA_1_5(1.5f, ""1.5""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,62,"    JAVA_1_6(1.6f, ""1.6""),",2,0,0,1,2,3,2,2,0,10,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,67,"    JAVA_1_7(1.7f, ""1.7""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,105,        return this.value >= requiredVersion.value;,6,2,0,0,0,1,0,0,0,8,43,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,132,"        if (""0.9"".equals(nom)) {",2,0,0,2,5,0,6,2,0,11,24,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,134,"        } else if (""1.1"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,140,"        } else if (""1.4"".equals(nom)) {",4,0,0,2,6,6,22,4,0,37,31,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,142,"        } else if (""1.5"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,146,"        } else if (""1.7"".equals(nom)) {",2,0,0,2,6,3,6,2,0,15,31,0,1.0,0,0
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,147,            return JAVA_1_7;,2,0,0,0,0,1,0,0,0,2,16,13,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,52,    public static final CharSequenceTranslator ESCAPE_JAVA = ,12,2,0,0,0,6,12,6,0,41,56,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,72,    public static final CharSequenceTranslator ESCAPE_ECMASCRIPT = ,2,1,0,0,0,0,0,0,0,3,62,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,109,    public static final CharSequenceTranslator ESCAPE_HTML3 = ,2,0,0,0,0,3,0,2,0,7,57,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,124,    public static final CharSequenceTranslator ESCAPE_HTML4 = ,6,1,0,0,0,3,6,6,0,23,57,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,140,    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();,4,0,0,1,2,3,0,4,0,11,73,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,183,    public static final CharSequenceTranslator UNESCAPE_JAVA = ,4,0,0,0,0,3,0,2,0,9,58,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,250,    public static final CharSequenceTranslator UNESCAPE_XML = ,8,7,0,0,0,0,4,0,0,19,57,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,433,        return ESCAPE_HTML4.translate(input);,2,0,0,1,2,1,0,2,0,4,37,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,58,            StringWriter writer = new StringWriter(input.length() * 2);,2,1,0,2,4,0,0,0,0,3,59,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,82,        int pos = 0;,8,0,0,0,0,0,0,2,0,10,12,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,84,        while (pos < len) {,0,0,0,1,3,0,0,2,0,3,19,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,85,"            int consumed = translate(input, pos, out);",4,2,0,1,2,0,14,0,0,22,42,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,89,                pos+= c.length;,8,0,0,0,0,0,0,0,0,9,15,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,95,"                pos += Character.charCount(Character.codePointAt(input, pos));",0,0,0,2,4,0,14,0,0,14,62,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,97,        },2,0,0,0,1,0,0,0,0,2,1,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,108,        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];,0,0,0,2,4,0,0,0,0,1,87,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,110,"        System.arraycopy(translators, 0, newArray, 1, translators.length);",0,0,0,1,2,0,8,0,0,8,66,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,111,        return new AggregateTranslator(newArray);,6,0,0,1,2,1,8,0,0,15,41,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,40,    public AggregateTranslator(CharSequenceTranslator... translators) {,2,0,0,1,3,0,6,4,0,12,67,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,41,        this.translators = ArrayUtils.clone(translators);,2,1,0,1,2,0,0,0,0,3,49,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,42,    },2,1,0,0,1,0,4,0,0,7,1,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,51,        for (CharSequenceTranslator translator : translators) {,14,2,0,1,3,0,0,0,0,17,55,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,54,                return consumed;,8,1,0,0,0,1,0,0,0,9,16,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,145,    static class CsvEscaper extends CharSequenceTranslator {,2,0,0,0,1,3,12,0,0,17,56,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,150,        private static final char[] CSV_SEARCH_CHARS = ,2,0,0,1,2,3,0,0,0,5,46,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,268,    static class CsvUnescaper extends CharSequenceTranslator {,4,0,0,0,1,0,0,2,0,6,58,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,272,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,4,0,0,1,2,3,6,2,0,15,70,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,53,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,4,1,0,1,2,0,8,0,0,13,86,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,68,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,70,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",4,3,0,1,2,0,2,0,0,9,53,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,71,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",4,0,0,1,2,0,4,2,0,10,47,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,73,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",4,0,0,1,2,0,4,2,0,10,49,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,75,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",4,0,0,1,2,0,4,2,0,10,47,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,76,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",1,0,0,1,2,0,0,2,0,3,51,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,86,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,4,1,0,2,5,0,4,2,0,11,62,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,88,            if (!primitiveClass.equals(wrapperClass)) {,12,2,0,2,5,0,6,0,0,22,43,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,89,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",2,0,0,1,2,0,14,0,0,16,54,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,97,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",2,0,0,1,2,3,0,12,0,17,89,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,102,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",4,0,1,1,2,3,4,12,0,27,96,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,121,"        addAbbreviation(""float"", ""F"");",0,0,0,1,2,0,4,0,0,5,30,13,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,122,"        addAbbreviation(""long"", ""J"");",2,0,0,1,2,0,10,4,0,18,29,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,123,"        addAbbreviation(""short"", ""S"");",0,0,0,1,2,0,2,0,0,4,30,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,127,    },2,0,1,0,1,0,0,2,0,7,1,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,589,"        return isAssignable(cls, toClass, SystemUtils.isJavaVersionAtLeast(JavaVersion.JAVA_1_5));",4,0,0,2,4,1,10,0,0,14,90,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,624,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,628,        if (autoboxing) {,2,0,0,1,3,0,0,0,0,2,17,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,629,            if (cls.isPrimitive() && !toClass.isPrimitive()) {,20,10,0,3,7,0,14,0,0,45,50,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,631,                if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,642,        if (cls.equals(toClass)) {,4,1,0,2,5,0,6,0,0,11,26,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,645,        if (cls.isPrimitive()) {,6,3,0,2,5,0,4,0,0,13,24,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,689,        return toClass.isAssignableFrom(cls);,6,1,0,1,2,1,8,4,0,19,37,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,705,        Class<?> convertedClass = cls;,4,0,0,0,0,0,0,2,0,6,30,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,706,        if (cls != null && cls.isPrimitive()) {,2,2,0,2,5,0,4,0,0,8,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,707,            convertedClass = primitiveWrapperMap.get(cls);,6,1,0,1,2,0,10,0,0,19,46,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,709,        return convertedClass;,2,0,0,0,0,1,0,0,0,2,22,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,49,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,9,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,53,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,57,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,65,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,6,3,0,2,4,3,0,4,0,18,65,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,69,    public static final int[] EMPTY_INT_ARRAY = new int[0];,4,0,0,2,4,4,0,0,0,8,55,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,89,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,93,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,0,0,5,64,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,105,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,12,6,0,2,4,0,4,2,0,25,68,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,109,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,15,320,        if (array == null) {,2,0,0,1,3,0,0,0,0,2,20,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,65,"        return isAssignable(type, toType, null);",2,0,0,1,2,2,0,0,0,4,40,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,79,        if (toType == null || toType instanceof Class<?>) {,6,2,1,1,3,0,0,2,0,13,51,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,80,"            return isAssignable(type, (Class<?>) toType);",2,0,0,2,4,1,4,2,0,8,45,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,88,"            return isAssignable(type, (GenericArrayType) toType, typeVarAssigns);",2,0,0,2,4,1,16,2,0,22,69,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,113,        if (type == null) {,2,1,0,1,3,0,10,0,0,13,19,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,115,            return toClass == null || !toClass.isPrimitive();,2,2,0,1,2,1,4,0,0,9,49,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,120,        if (toClass == null) {,4,1,0,1,3,0,0,2,0,8,22,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,126,            return true;,2,0,0,0,0,1,4,2,0,9,12,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,131,"            return ClassUtils.isAssignable((Class<?>) type, toClass);",2,0,0,2,4,1,6,2,0,10,57,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,134,        if (type instanceof ParameterizedType) {,2,0,0,1,3,0,0,2,0,4,40,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,136,"            return isAssignable(getRawType((ParameterizedType) type), toClass);",2,0,0,3,6,1,6,2,0,10,67,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,140,        if (type instanceof TypeVariable<?>) {,4,0,0,1,3,0,4,4,0,12,38,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,154,        if (type instanceof GenericArrayType) {,6,0,0,1,3,0,0,0,0,7,39,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,155,            return toClass.equals(Object.class),0,0,0,1,2,1,4,2,0,6,35,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,193,            return true;,2,1,0,0,0,1,0,0,0,4,12,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,262,        if (type == null) {,2,1,0,1,3,0,0,0,0,3,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,268,        if (toGenericArrayType == null) {,0,0,0,1,3,0,10,0,0,10,33,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,279,        if (type instanceof Class<?>) {,8,1,0,1,3,0,0,4,0,13,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,280,            Class<?> cls = (Class<?>) type;,0,1,0,1,2,0,10,0,0,11,31,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,283,            return cls.isArray(),2,0,0,1,2,3,4,6,0,14,20,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,287,        if (type instanceof GenericArrayType) {,2,0,0,1,3,0,0,2,0,4,39,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,289,"            return isAssignable(((GenericArrayType) type).getGenericComponentType(),",2,0,0,3,7,1,4,2,0,8,72,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,357,            WildcardType wildcardType = (WildcardType) type;,4,0,0,1,2,0,0,4,0,8,48,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,359,            Type[] lowerBounds = getImplicitLowerBounds(wildcardType);,2,0,0,2,4,0,4,2,0,8,58,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,361,            for (Type toBound : toUpperBounds) {,4,0,0,1,3,0,0,2,0,6,36,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,364,"                toBound = substituteTypeVariables(toBound, typeVarAssigns);",2,0,0,1,2,0,0,0,0,4,59,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,369,                for (Type bound : upperBounds) {,10,0,0,1,3,0,0,2,0,13,32,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,370,"                    if (!isAssignable(bound, toBound, typeVarAssigns)) {",0,0,0,2,5,0,8,0,0,9,52,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,376,            for (Type toBound : toLowerBounds) {,4,0,0,1,3,0,0,2,0,6,36,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,379,"                toBound = substituteTypeVariables(toBound, typeVarAssigns);",2,0,0,1,2,0,6,0,0,9,59,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,384,                for (Type bound : lowerBounds) {,4,0,0,1,3,0,0,2,0,6,32,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,399,                return false;,2,0,0,0,0,1,0,0,0,3,13,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,607,        Type ownerType = parameterizedType.getOwnerType();,2,0,0,1,2,0,12,2,0,17,50,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,610,        if (ownerType instanceof ParameterizedType) {,4,2,0,1,3,0,0,0,0,7,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,622,        Type[] typeArgs = parameterizedType.getActualTypeArguments();,0,0,0,2,4,0,1,0,0,1,61,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,624,        TypeVariable<?>[] typeParams = cls.getTypeParameters();,2,0,0,2,4,0,4,2,0,8,55,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,627,        for (int i = 0; i < typeParams.length; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,628,            Type typeArg = typeArgs[i];,6,0,1,1,2,0,0,6,0,16,27,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,629,"            typeVarAssigns.put(typeParams[i], typeVarAssigns.containsKey(typeArg) ? typeVarAssigns",4,1,1,2,5,0,26,0,0,35,86,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,635,            return typeVarAssigns;,2,0,0,0,0,1,0,0,0,2,22,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,806,            for (Type midType : interfaceTypes) {,4,0,0,1,3,0,0,2,0,6,37,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,807,                Class<?> midClass = null;,4,1,0,0,0,0,0,2,0,7,25,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,809,                if (midType instanceof ParameterizedType) {,2,0,0,1,3,0,0,2,0,4,43,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,810,                    midClass = getRawType((ParameterizedType) midType);,8,1,0,2,4,0,2,2,0,14,51,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,827,            if (genericInterface != null) {,2,1,0,1,3,0,0,0,0,3,31,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,828,                return genericInterface;,2,0,0,0,0,1,0,0,0,2,24,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,993,        if (!(rawType instanceof Class<?>)) {,4,0,0,2,5,0,6,4,0,15,37,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,42,        int _shortest = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,34,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,43,        int _longest = 0;,6,1,0,0,0,0,0,4,0,11,17,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,44,        if (lookup != null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,45,            for (CharSequence[] seq : lookup) {,4,0,0,2,5,0,0,2,0,6,35,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,46,"                this.lookupMap.put(seq[0], seq[1]);",2,0,1,3,6,0,2,0,0,8,35,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,49,                    _shortest = sz;,4,0,0,0,0,0,0,0,0,5,15,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,51,                if (sz > _longest) {,4,1,0,1,3,0,0,0,0,5,20,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,52,                    _longest = sz;,4,0,0,0,0,0,0,0,0,5,14,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,56,        shortest = _shortest;,4,0,0,0,0,0,0,0,0,5,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,57,        longest = _longest;,6,0,0,0,0,0,8,4,0,19,19,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,65,        int max = longest;,4,0,0,0,0,0,0,0,0,4,18,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,66,        if (index + longest > input.length()) {,4,2,0,2,5,0,4,0,0,10,39,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,70,        for (int i = max; i >= shortest; i--) {,12,1,0,1,3,0,0,0,0,14,39,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,71,"            CharSequence subSeq = input.subSequence(index, index + i);",6,1,0,1,2,0,10,2,0,20,58,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,73,            if (result != null) {,2,1,0,1,3,0,0,0,0,3,21,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,74,                out.write(result.toString());,0,0,0,2,4,0,8,0,0,8,29,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,15,75,                return i;,4,1,0,0,0,1,0,0,0,5,9,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CodePointTranslator,15,29,public abstract class CodePointTranslator extends CharSequenceTranslator {,2,0,0,0,1,2,0,2,0,6,74,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,56,    public NumericEntityUnescaper(OPTION... options) {,6,2,0,1,3,1,6,2,0,17,50,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,15,35,"    public static enum OPTION { semiColonRequired, semiColonOptional, errorIfNoSemiColon }",8,0,0,1,2,2,0,0,0,10,86,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,51,"    private UnicodeEscaper(int below, int above, boolean between) {",8,0,0,1,3,1,0,0,0,9,63,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,52,        this.below = below;,4,0,0,0,0,0,0,0,0,5,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,53,        this.above = above;,4,0,0,0,0,0,0,0,0,5,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,15,54,        this.between = between;,4,0,0,0,0,0,0,0,0,5,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,34,public class OctalUnescaper extends CharSequenceTranslator {,6,1,0,0,1,1,6,2,0,17,60,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,15,36,    private static int OCTAL_MAX = 377;,2,0,0,0,0,2,0,0,0,4,35,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,139,    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);,2,0,0,3,6,3,4,2,0,11,78,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,148,    private static final String[][] HTML40_EXTENDED_ESCAPE = {,0,0,0,2,5,0,0,2,0,3,58,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,359,    private static final String[][] BASIC_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,48,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,371,    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);,2,0,0,3,6,3,12,2,0,20,70,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,378,    private static final String[][] APOS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,47,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,387,    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);,2,0,0,3,6,3,4,2,0,11,68,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,34,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,80,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,138,    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,84,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,147,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },2,1,1,5,10,1,0,0,0,7,92,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,349,    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); },4,0,0,5,10,3,4,2,0,13,96,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,358,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,72,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,377,    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,70,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,386,    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,74,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,408,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,96,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,417,        String[][] newarray = new String[array.length][2];,6,0,0,4,8,0,0,4,0,10,50,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,15,418,        for(int i = 0; i<array.length; i++) {,10,1,0,1,3,0,0,0,0,12,37,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,15,30,public class UnicodeUnescaper extends CharSequenceTranslator {,6,1,0,0,1,0,4,0,0,12,62,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,87,        if (toType instanceof GenericArrayType) {,2,0,0,1,3,0,8,2,0,12,41,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,92,"            return isAssignable(type, (WildcardType) toType, typeVarAssigns);",2,0,0,2,4,1,6,2,0,10,65,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,230,                return false;,4,0,0,0,0,1,0,0,0,6,13,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,338,        if (type == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,353,        Type[] toUpperBounds = getImplicitUpperBounds(toWildcardType);,2,0,0,2,4,0,4,2,0,8,62,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,354,        Type[] toLowerBounds = getImplicitLowerBounds(toWildcardType);,8,2,0,2,4,0,8,2,0,20,62,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,394,        for (Type toBound : toUpperBounds) {,4,0,0,1,3,0,0,2,0,6,36,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,397,"            if (!isAssignable(type, substituteTypeVariables(toBound, typeVarAssigns),",2,2,0,1,4,0,14,0,0,20,73,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,403,        for (Type toBound : toLowerBounds) {,4,0,0,1,3,0,0,2,0,6,36,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,406,"            if (!isAssignable(substituteTypeVariables(toBound, typeVarAssigns), type,",0,0,0,1,4,0,10,0,0,11,73,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,472,        if (type instanceof TypeVariable<?> && typeVarAssigns != null) {,4,2,0,1,3,0,0,2,0,8,64,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,877,        if (bounds.length < 2) {,6,1,0,1,3,0,6,2,0,15,24,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,878,            return bounds;,2,0,0,0,0,1,0,0,0,2,14,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,942,        Type[] bounds = wildcardType.getLowerBounds();,4,0,0,2,4,0,0,0,0,5,46,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,944,        return bounds.length == 0 ? new Type[] { null } : bounds;,6,1,0,2,4,1,0,2,0,9,57,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,84,"            return isAssignable(type, (ParameterizedType) toType, typeVarAssigns);",2,0,0,2,4,1,6,2,0,10,70,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,181,        if (type == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,187,        if (toParameterizedType == null) {,2,1,0,1,3,0,0,0,0,3,34,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,197,        Class<?> toClass = getRawType(toParameterizedType);,4,1,0,1,2,0,6,2,0,13,51,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,203,        if (fromTypeVarAssigns == null) {,2,1,0,1,3,0,0,0,0,3,33,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,215,"        Map<TypeVariable<?>, Type> toTypeVarAssigns = getTypeArguments(toParameterizedType,",6,0,0,0,1,0,4,10,0,20,83,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,219,"        for (Map.Entry<TypeVariable<?>, Type> entry : toTypeVarAssigns.entrySet()) {",6,0,0,2,5,0,4,4,0,14,76,4,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,220,            Type toTypeArg = entry.getValue();,4,1,0,1,2,0,8,2,0,15,34,3,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,221,            Type fromTypeArg = fromTypeVarAssigns.get(entry.getKey());,2,0,0,2,4,0,8,2,0,12,58,6,0.33333,1,0
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,226,            if (fromTypeArg != null,2,1,0,0,1,0,0,0,0,3,23,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,470,            if (expPos > -1) {,8,2,0,1,3,0,0,0,0,13,18,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,476,                dec = str.substring(decPos + 1);,4,1,0,1,2,0,4,0,0,10,32,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,478,"            mant = str.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,481,                if (expPos > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,517,                        Float f = NumberUtils.createFloat(numeric);,2,0,0,1,2,0,6,2,0,10,43,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,518,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,531,                        Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,0,6,2,0,10,45,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,532,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,533,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,551,            if (expPos > -1 && expPos < str.length() - 1) {,8,4,0,2,5,0,4,0,0,17,47,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,554,                exp = null;,4,1,0,0,0,0,0,0,0,6,11,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,556,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,559,                    return createInteger(str);,0,0,0,1,2,1,4,0,0,4,26,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,575,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,576,                        return f;,2,0,0,0,0,1,0,0,0,2,9,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,448,        if (StringUtils.isBlank(str)) {,2,0,0,2,5,3,6,4,0,16,31,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,451,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,4,0,0,5,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,461,        char lastChar = str.charAt(str.length() - 1);,4,1,0,2,4,0,8,2,0,16,45,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,465,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,466,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,468,        if (decPos > -1) {,4,1,0,1,3,0,4,0,0,10,18,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,486,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,491,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,494,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,497,"            String numeric = str.substring(0, str.length() - 1);",4,0,0,2,4,0,0,0,0,5,52,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,498,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,499,            switch (lastChar) {,2,0,0,1,3,3,16,4,0,25,19,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,502,                    if (dec == null,2,1,0,0,1,0,0,0,0,3,15,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,506,                            return createLong(numeric);,0,0,0,1,2,1,4,0,0,4,27,12,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,605,        if (str == null) {,2,0,0,1,3,3,0,4,0,9,18,2,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,608,        for (int i = str.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,609,            if (str.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,610,                return false;,2,0,0,0,0,1,0,8,0,11,13,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,627,        if (str == null) {,8,1,0,1,3,0,4,0,0,14,18,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,660,        if (str == null) {,2,1,0,1,3,0,8,0,0,11,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,664,        return Integer.decode(str);,0,0,0,1,2,1,6,2,0,10,27,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,677,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1290,        for (int i = 0; i < str.length(); i++) {,8,1,0,2,5,3,6,0,0,20,40,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1295,        return true;,2,0,0,0,0,1,4,2,0,9,12,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,183,        return cs == null || cs.length() == 0;,4,3,1,1,2,4,8,4,0,31,38,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,223,        if (cs == null || (strLen = cs.length()) == 0) {,6,3,0,3,7,0,10,4,0,24,48,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,147,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");",2,0,0,1,2,3,4,2,0,12,72,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,704,    private static boolean sunAvailable = false;,0,0,0,0,0,0,0,2,0,3,44,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,705,    private static Method  sunDecomposeMethod = null;,10,1,0,0,0,0,6,0,0,18,49,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,706,"    private static final Pattern sunPattern = Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");//$NON-NLS-1$",2,0,0,2,4,3,4,2,0,12,108,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,708,    private static boolean java6Available = false;,2,0,0,0,0,2,0,0,0,5,46,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,711,    private static final Pattern java6Pattern = sunPattern;,4,0,0,0,0,3,8,2,0,17,55,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,719,"            java6NormalizerFormNFD = normalizerFormClass.getField(""NFD"").get(null);//$NON-NLS-1$",4,0,0,2,4,0,10,0,0,16,84,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,724,            java6Available = true;,0,1,0,0,0,0,4,0,0,5,22,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,16,737,            Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,3,6,2,0,13,73,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,33,    public static final Long LONG_ZERO = Long.valueOf(0L);,4,0,0,1,2,3,4,2,0,14,54,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,37,    public static final Long LONG_MINUS_ONE = Long.valueOf(-1L);,0,1,1,1,2,0,0,0,0,5,60,6,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,39,    public static final Integer INTEGER_ZERO = Integer.valueOf(0);,2,0,0,1,2,3,4,2,0,11,62,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,41,    public static final Integer INTEGER_ONE = Integer.valueOf(1);,2,0,0,1,2,3,8,2,0,16,61,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,43,    public static final Integer INTEGER_MINUS_ONE = Integer.valueOf(-1);,2,0,0,1,2,3,4,2,0,12,68,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,45,    public static final Short SHORT_ZERO = Short.valueOf((short) 0);,2,0,0,2,4,3,4,2,0,11,64,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,47,    public static final Short SHORT_ONE = Short.valueOf((short) 1);,2,0,0,2,4,3,4,2,0,11,63,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,49,    public static final Short SHORT_MINUS_ONE = Short.valueOf((short) -1);,2,0,0,2,4,3,4,2,0,12,70,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,51,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,4,0,0,2,4,6,4,4,0,20,60,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,53,    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);,2,0,0,2,4,3,4,2,0,11,59,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,55,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,4,0,0,2,4,3,4,2,0,16,66,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,57,    public static final Double DOUBLE_ZERO = Double.valueOf(0.0d);,6,0,0,1,2,3,4,2,0,16,62,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,59,    public static final Double DOUBLE_ONE = Double.valueOf(1.0d);,4,0,0,1,2,0,0,2,0,6,61,4,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,61,    public static final Double DOUBLE_MINUS_ONE = Double.valueOf(-1.0d);,8,1,0,1,2,3,4,2,0,20,68,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,63,    public static final Float FLOAT_ZERO = Float.valueOf(0.0f);,4,0,0,1,2,3,4,2,0,14,59,1,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,65,    public static final Float FLOAT_ONE = Float.valueOf(1.0f);,2,0,0,1,2,3,4,2,0,11,58,2,0.0125,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,57,        return 0;,2,1,0,0,0,1,0,0,0,3,9,4,0.07692,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,51,        for (CharSequenceTranslator translator : translators) {,4,0,0,1,3,0,0,2,0,6,55,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,52,"            int consumed = translator.translate(input, index, out);",2,0,0,1,2,0,10,0,0,12,55,7,0.06667,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,65,        int max = longest;,4,0,0,0,0,0,0,0,0,4,18,5,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,66,        if (index + longest > input.length()) {,10,3,0,2,5,0,4,0,0,17,39,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,70,        for (int i = max; i >= shortest; i--) {,10,1,0,1,3,0,0,0,0,12,39,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,71,"            CharSequence subSeq = input.subSequence(index, index + i);",6,1,0,1,2,0,6,2,0,15,58,6,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,72,            CharSequence result = lookupMap.get(subSeq);,2,0,0,1,2,0,6,2,0,10,44,6,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,73,            if (result != null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,46,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,50,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,54,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,58,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,62,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,66,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,78,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,4,1,0,2,4,3,0,4,0,12,68,1,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,94,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,2,1,0,2,4,3,14,2,0,22,71,1,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,106,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,4,1,0,2,4,3,0,0,0,8,67,1,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,110,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,4,0,0,2,4,3,0,4,0,12,74,1,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,114,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,118,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,4,1,0,2,4,3,0,4,0,12,80,1,0.05,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,317,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,268,    static class CsvUnescaper extends CharSequenceTranslator {,2,0,0,0,1,1,0,2,0,5,58,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,272,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,2,0,0,1,2,3,6,2,0,13,70,3,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,114,        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];,6,1,0,2,4,0,0,4,0,11,87,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,116,"        System.arraycopy(translators, 0, newArray, 1, translators.length);",4,0,0,1,2,0,8,0,0,12,66,5,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,117,        return new AggregateTranslator(newArray);,2,0,0,1,2,1,0,2,0,4,41,5,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,52,    public static final CharSequenceTranslator ESCAPE_JAVA = ,2,0,0,0,0,3,0,2,0,7,56,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,94,    public static final CharSequenceTranslator ESCAPE_XML = ,2,1,0,0,0,0,0,0,0,3,55,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,109,    public static final CharSequenceTranslator ESCAPE_HTML3 = ,2,0,0,0,0,3,0,2,0,7,57,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,124,    public static final CharSequenceTranslator ESCAPE_HTML4 = ,2,0,0,0,0,3,0,2,0,7,57,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,140,    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();,2,0,0,1,2,3,0,4,0,9,73,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,183,    public static final CharSequenceTranslator UNESCAPE_JAVA = ,4,1,0,0,0,3,0,2,0,10,58,1,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,217,    public static final CharSequenceTranslator UNESCAPE_HTML3 = ,2,0,0,0,0,3,0,2,0,7,59,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,250,    public static final CharSequenceTranslator UNESCAPE_XML = ,2,0,0,0,0,3,0,2,0,7,57,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,266,    public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();,2,1,0,1,2,3,6,4,0,17,77,1,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,40,    public AggregateTranslator(CharSequenceTranslator... translators) {,8,1,0,1,3,1,0,2,0,12,67,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,41,        this.translators = ArrayUtils.clone(translators);,2,0,0,1,2,0,6,0,0,9,49,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,145,    static class CsvEscaper extends CharSequenceTranslator {,2,0,0,0,1,1,0,2,0,5,56,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,150,        private static final char[] CSV_SEARCH_CHARS = ,2,0,0,1,2,3,0,0,0,5,46,3,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,35,    private static final String[][] ISO8859_1_ESCAPE = {,2,0,0,2,5,3,6,2,0,13,52,1,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,148,    private static final String[][] HTML40_EXTENDED_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,359,    private static final String[][] BASIC_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,48,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,371,    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);,2,0,0,3,6,0,12,2,0,16,70,3,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,396,    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,409,    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);,2,0,0,3,6,3,4,2,0,11,90,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,34,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },12,1,0,5,10,4,8,0,0,24,80,1,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,138,    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); },2,1,0,5,10,3,18,2,0,25,84,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,147,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },0,1,0,5,10,1,8,0,0,11,92,3,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,358,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },4,1,0,5,10,3,8,4,0,21,72,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,370,    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); },8,1,0,5,10,1,0,0,0,10,76,5,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,377,    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,70,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,386,    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,74,2,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,395,    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); },4,3,0,5,10,1,0,0,0,7,92,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,408,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },2,1,0,5,10,1,6,0,0,9,96,3,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,417,        String[][] newarray = new String[array.length][2];,8,0,0,4,8,0,0,8,0,16,50,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,418,        for(int i = 0; i<array.length; i++) {,2,0,0,1,3,0,4,2,0,8,37,4,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,419,            newarray[i][0] = array[i][1];,0,0,1,4,8,0,6,0,0,15,29,3,0.05,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,422,        return newarray;,2,0,0,0,0,1,0,2,0,5,16,3,0.05,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,409,"        TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);",10,0,0,1,2,0,0,4,0,14,77,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,410,        String value = cTimeZoneDisplayCache.get(key);,2,1,0,1,2,0,0,0,0,3,46,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,411,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,413,"            value = tz.getDisplayName(daylight, style, locale);",4,0,0,1,2,0,10,0,0,15,51,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,414,"            String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);",2,0,0,1,2,0,8,2,0,12,61,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,419,        return value;,6,0,0,0,0,1,0,0,0,7,13,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,558,"                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);",10,0,0,1,2,0,0,2,0,13,64,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,560,                break;,4,3,0,0,0,0,0,0,0,7,6,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1240,"            appendTo(buffer, calendar.get(Calendar.YEAR) % 100);",4,1,0,2,4,0,8,0,0,13,52,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1247,            buffer.append((char)(value / 10 + '0'));,4,2,0,3,6,0,4,0,0,11,40,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1484,"                           boolean daylight, int style, Locale locale) {",2,1,0,0,2,0,0,0,0,3,45,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1485,            mTimeZone = timeZone;,2,0,0,0,0,3,0,2,0,7,21,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1487,                style |= 0x80000000;,0,0,0,0,0,0,4,0,0,5,20,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1489,            mStyle = style;,4,0,0,0,0,0,0,0,0,5,15,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1490,            mLocale = locale;,2,0,0,0,0,3,0,4,0,9,17,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1498,            return (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();,4,5,0,3,6,1,8,0,0,17,71,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1387,"        TimeZoneNameRule(TimeZone timeZone, Locale locale, int style) {",8,0,0,1,3,0,0,4,0,12,63,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1390,"            mStandard = getTimeZoneDisplay(timeZone, false, style, locale);",4,1,0,1,2,0,12,4,0,23,63,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1391,"            mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);",4,0,0,1,2,0,0,0,0,5,62,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1392,        },2,0,0,0,1,0,0,0,0,2,1,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,498,                    rule = TwoDigitYearField.INSTANCE;,2,0,0,0,0,3,0,0,0,5,34,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,500,                break;,2,0,0,0,0,3,2,2,0,10,6,2,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,546,"                rule = new TextField(Calendar.AM_PM, AmPmStrings);",8,0,0,1,2,0,0,2,0,11,50,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1023,            buffer.append(mValues[calendar.get(mField)]);,2,0,0,3,6,0,0,0,0,3,45,12,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1062,            } else if (value < 100) {,4,1,0,1,4,0,0,4,0,9,25,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1220,        static final TwoDigitYearField INSTANCE = new TwoDigitYearField();,2,0,0,1,2,2,0,4,0,8,66,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1153,                for (int i = mSize; --i >= 2; ) {,8,1,0,1,3,3,2,2,0,18,33,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1154,                    buffer.append('0');,0,0,0,1,2,0,4,0,0,5,19,10,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1156,                buffer.append((char)(value / 10 + '0'));,2,1,0,3,6,0,0,0,0,3,40,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1157,                buffer.append((char)(value % 10 + '0'));,4,2,0,3,6,3,4,4,0,18,40,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1053,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,10,0,0,10,39,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1060,            if (value < 10) {,0,0,0,1,3,0,6,0,0,6,17,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1068,        },8,2,0,0,1,0,4,0,0,15,1,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1096,"            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",6,2,0,2,4,0,8,0,0,16,51,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1097,        },2,0,0,0,1,3,4,2,0,12,1,2,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1104,                buffer.append((char)(value + '0'));,8,5,0,3,6,3,8,4,0,30,35,1,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1089,            return 2;,2,0,1,0,0,1,0,4,0,8,9,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,41,            int start = index + 2;,4,1,0,0,0,0,0,0,0,5,22,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,42,            boolean isHex = false;,2,0,0,0,0,0,0,0,0,3,22,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,44,            char firstChar = input.charAt(start);,2,0,0,1,2,0,6,0,0,8,37,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,46,                start++;,2,0,0,0,0,0,0,0,0,3,8,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,47,                isHex = true;,2,0,0,0,0,0,0,0,0,4,13,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,38,        int seqEnd = input.length();,2,0,0,1,2,0,4,0,0,6,28,5,0.44444,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,40,        if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {,6,7,0,3,7,0,10,0,0,25,88,4,0.44444,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,19,89,"                out.write(Character.toChars(Character.codePointAt(input, i)));",0,0,0,3,6,0,16,0,0,16,62,9,0.30769,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3257,            return null;,2,0,0,0,0,4,4,2,0,12,12,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3256,        if (array == null) {,2,0,0,1,3,0,16,0,0,19,20,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3260,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3290,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3293,        int noOfItems = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,7,40,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3294,        if (noOfItems <= 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3301,            if (i > startIndex) {,6,2,0,1,3,0,0,0,0,8,21,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3302,                buf.append(separator);,2,0,0,1,2,3,6,4,0,15,22,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3304,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3308,        return buf.toString();,0,0,1,1,2,1,0,0,0,9,22,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3336,            return null;,2,0,0,0,0,1,6,0,0,8,12,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3335,        if (array == null) {,4,0,0,1,3,0,0,0,0,5,20,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3338,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3369,        if (array == null) {,4,2,0,1,3,0,8,0,0,16,20,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3373,            separator = EMPTY;,2,1,0,0,0,0,0,0,0,3,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3378,        int noOfItems = (endIndex - startIndex);,8,1,0,1,2,0,0,0,0,9,40,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3383,        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());,8,2,1,7,14,0,8,6,0,33,133,1,0.25,1,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3386,            if (i > startIndex) {,4,1,0,1,3,0,0,0,0,5,21,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3389,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,147,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");",2,0,0,1,2,3,4,2,0,12,72,2,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,704,    private static boolean sunAvailable = false;,2,1,0,0,0,0,0,0,0,4,44,4,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,705,    private static Method  sunDecomposeMethod = null;,2,0,0,0,0,2,0,2,0,6,49,2,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,706,"    private static final Pattern sunPattern = Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");//$NON-NLS-1$",2,0,0,2,4,3,4,2,0,12,108,2,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,708,    private static boolean java6Available = false;,2,0,0,0,0,2,0,0,0,5,46,2,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,709,    private static Method  java6NormalizeMethod = null;,2,0,0,0,0,2,0,2,0,6,51,2,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,710,    private static Object  java6NormalizerFormNFD = null;,2,0,0,0,0,2,0,2,0,6,53,2,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,711,    private static final Pattern java6Pattern = sunPattern;,6,0,0,0,0,6,0,6,0,18,55,2,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,719,"            java6NormalizerFormNFD = normalizerFormClass.getField(""NFD"").get(null);//$NON-NLS-1$",8,0,0,2,4,0,0,2,0,11,84,9,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,720,            Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,73,6,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,724,            java6Available = true;,2,0,0,0,0,0,0,0,0,4,22,6,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,20,745,            sunAvailable = false;,2,0,0,0,0,0,0,0,0,4,21,7,0.01717,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1832,            super();,2,0,0,1,2,3,6,4,0,15,8,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1833,            this.endFinal = endFinal;,4,0,0,0,0,0,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1834,            spot = startFinal;,4,0,0,0,0,0,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1835,"            spot.add(Calendar.DATE, -1);",4,0,0,1,2,0,4,0,0,9,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1836,        },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1844,            return spot.before(endFinal);,0,0,0,1,2,1,6,0,0,6,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1854,                throw new NoSuchElementException();,4,0,0,1,2,0,0,2,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1856,"            spot.add(Calendar.DATE, 1);",0,0,0,1,2,0,6,0,0,6,27,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1857,            return (Calendar) spot.clone();,0,0,0,2,4,1,4,2,0,6,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,176,        if (date1 == null || date2 == null) {,2,0,0,1,3,0,6,0,0,8,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,179,        Calendar cal1 = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,180,        cal1.setTime(date1);,0,0,0,1,2,0,6,0,0,6,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,181,        Calendar cal2 = Calendar.getInstance();,12,1,0,1,2,0,12,2,0,27,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,200,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,201,"            throw new IllegalArgumentException(""The date must not be null"");",10,1,0,1,2,0,0,2,0,16,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,203,        return (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&,8,3,0,2,5,1,8,0,0,19,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,221,        if (date1 == null || date2 == null) {,8,3,0,1,3,0,0,0,0,12,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,239,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,240,"            throw new IllegalArgumentException(""The date must not be null"");",2,0,0,1,2,0,8,2,0,16,64,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,259,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,262,        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&,10,9,0,2,5,1,8,0,0,27,75,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,328,        if (str == null || parsePatterns == null) {,4,3,0,1,3,0,0,0,0,7,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,332,        SimpleDateFormat parser = new SimpleDateFormat();,2,0,0,1,2,0,0,4,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,337,            String pattern = parsePatterns[i];,2,0,1,1,2,0,0,2,0,8,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,340,"            if (parsePatterns[i].endsWith(""ZZ"")) {",0,0,1,3,7,0,2,0,0,7,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,347,            String str2 = str;,4,0,0,0,0,0,0,2,0,6,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,349,"            if (parsePatterns[i].endsWith(""ZZ"")) {",2,0,0,3,7,1,0,2,0,5,38,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,350,"                str2 = str.replaceAll(""([-+][0-9][0-9]):([0-9][0-9])$"", ""$1$2""); ",0,0,0,8,16,0,0,0,0,24,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,353,"            Date date = parser.parse(str2, pos);",2,0,0,1,2,0,8,2,0,12,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,354,            if (date != null && pos.getIndex() == str2.length()) {,12,4,0,3,7,0,18,4,0,45,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,355,                return date;,2,0,0,0,0,1,0,0,0,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,358,"        throw new ParseException(""Unable to parse the date: "" + str, -1);",4,1,0,1,2,0,0,2,0,9,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,372,"        return add(date, Calendar.YEAR, amount);",4,0,0,1,2,1,12,0,0,16,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,400,"        return add(date, Calendar.WEEK_OF_YEAR, amount);",4,0,0,1,2,1,6,0,0,10,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,428,"        return add(date, Calendar.HOUR_OF_DAY, amount);",2,1,0,1,2,1,0,0,0,3,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,456,"        return add(date, Calendar.SECOND, amount);",4,0,0,1,2,1,0,0,0,5,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,470,"        return add(date, Calendar.MILLISECOND, amount);",4,0,0,1,2,1,6,0,0,10,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,486,"            throw new IllegalArgumentException(""The date must not be null"");",4,0,0,1,2,6,6,4,0,22,64,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,488,        Calendar c = Calendar.getInstance();,2,0,0,1,2,0,0,0,0,2,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,506,"        return set(date, Calendar.YEAR, amount);",4,0,0,1,2,1,6,0,0,10,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,521,"        return set(date, Calendar.MONTH, amount);",4,0,0,1,2,2,4,4,0,13,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,536,"        return set(date, Calendar.DAY_OF_MONTH, amount);",2,0,0,1,2,1,0,0,0,2,48,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,597,"        return set(date, Calendar.MILLISECOND, amount);",6,0,0,1,2,2,6,2,0,15,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,614,        if (date == null) {,6,1,0,1,3,0,14,0,0,22,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,637,        return c;,8,0,0,0,0,4,4,4,0,20,9,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,670,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,671,"            throw new IllegalArgumentException(""The date must not be null"");",4,0,1,1,2,0,0,0,0,9,64,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,673,        Calendar gval = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,711,        Calendar rounded = (Calendar) date.clone();,2,0,0,2,4,0,4,4,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,747,        if (date == null) {,2,1,0,1,3,0,10,0,0,13,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,750,        if (date instanceof Date) {,4,0,0,1,3,0,0,4,0,8,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,751,"            return round((Date) date, field);",4,0,0,2,4,1,0,0,0,4,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,752,        } else if (date instanceof Calendar) {,2,0,0,1,4,0,0,2,0,4,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,753,"            return round((Calendar) date, field).getTime();",2,0,0,3,6,1,6,2,0,10,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,755,"            throw new ClassCastException(""Could not round "" + date);",2,1,0,1,2,0,0,2,0,6,56,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,777,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,780,        Calendar gval = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,782,"        modify(gval, field, MODIFY_TRUNCATE);",2,0,0,1,2,0,12,2,0,16,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,808,        return truncated;,8,1,0,0,0,1,4,0,0,13,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,832,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,835,        if (date instanceof Date) {,2,0,0,1,3,0,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,837,        } else if (date instanceof Calendar) {,2,0,0,1,4,3,2,2,0,10,38,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,838,"            return truncate((Calendar) date, field).getTime();",6,1,0,3,6,1,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,866,        Calendar gval = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,868,"        modify(gval, field, MODIFY_CEILING);",2,0,0,1,2,0,0,4,0,8,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,869,        return gval.getTime();,2,3,0,1,2,1,8,0,0,15,22,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,890,        if (date == null) {,4,1,0,1,3,0,4,0,0,9,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,891,"            throw new IllegalArgumentException(""The date must not be null"");",2,0,0,1,2,0,0,0,0,2,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,895,        return ceiled;,0,0,0,0,0,1,12,0,0,12,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,926,"            return ceiling((Calendar) date, field).getTime();",4,0,0,3,6,1,6,4,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,943,"            throw new ArithmeticException(""Calendar value too large for accurate calculations"");",2,1,0,1,2,0,0,2,0,6,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,947,            return;,2,0,1,0,0,1,0,0,0,4,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,958,        boolean done = false;,14,4,0,0,0,0,0,0,0,19,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,961,        int millisecs = val.get(Calendar.MILLISECOND);,6,0,0,1,2,0,4,0,0,10,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,963,            time = time - millisecs;,0,0,0,0,0,0,6,0,0,6,24,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,966,            done = true;,4,0,0,0,0,0,0,2,0,6,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,970,        int seconds = val.get(Calendar.SECOND);,6,0,0,1,2,0,4,0,0,10,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,979,        int minutes = val.get(Calendar.MINUTE);,4,0,0,1,2,0,0,4,0,8,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,985,        if (date.getTime() != time) {,2,0,0,2,5,0,4,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,986,            date.setTime(time);,0,0,0,1,2,0,0,0,0,1,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,987,            val.setTime(date);,10,1,0,1,2,0,0,0,0,12,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,991,        boolean roundUp = false;,4,3,0,0,0,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,992,        for (int i = 0; i < fields.length; i++) {,2,0,0,1,3,3,2,2,0,10,41,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,993,            for (int j = 0; j < fields[i].length; j++) {,4,3,0,2,5,0,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,996,                    if (modType == MODIFY_CEILING || (modType == MODIFY_ROUND && roundUp)) {,10,4,0,2,5,0,0,0,0,14,72,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,997,                        if (field == DateUtils.SEMI_MONTH) {,10,2,1,1,3,0,2,0,0,18,36,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1001,                            if (val.get(Calendar.DATE) == 1) {,4,1,0,2,5,0,14,0,0,19,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1002,"                                val.add(Calendar.DATE, 15);",12,1,0,1,2,0,4,0,0,18,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1004,"                                val.add(Calendar.DATE, -15);",4,0,0,1,2,0,4,0,0,9,28,17,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1008,                        } else if (field == Calendar.AM_PM) {,2,0,0,1,4,3,2,2,0,11,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1016,"                                val.add(Calendar.DATE, 1);",2,0,0,1,2,0,6,4,0,12,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1029,            int offset = 0;,2,0,0,0,0,0,0,0,0,2,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1030,            boolean offsetSet = false;,2,0,0,0,0,0,0,0,0,3,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1038,                        offset = val.get(Calendar.DATE) - 1;,6,1,0,1,2,0,4,0,0,12,36,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1041,                        if (offset >= 15) {,14,6,0,1,3,0,4,0,0,24,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1042,                            offset -= 15;,8,3,0,0,0,0,0,0,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1046,                        offsetSet = true;,6,3,0,0,0,0,0,0,0,11,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1050,                    if (fields[i][0] == Calendar.HOUR_OF_DAY) {,4,1,1,3,7,0,0,0,0,9,43,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1053,                        offset = val.get(Calendar.HOUR_OF_DAY);,6,0,0,1,2,0,4,0,0,11,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1054,                        if (offset >= 12) {,2,1,0,1,3,0,0,0,0,3,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1057,                        roundUp = offset >= 6;,2,1,0,0,0,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1062,            if (!offsetSet) {,2,0,0,1,3,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1063,                int min = val.getActualMinimum(fields[i][0]);,6,1,1,3,6,0,8,0,0,19,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1066,                offset = val.get(fields[i][0]) - min;,2,1,0,3,6,0,0,0,0,3,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1068,                roundUp = offset > ((max - min) / 2);,2,0,0,2,4,0,0,0,0,2,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1072,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);",2,0,0,6,12,0,0,0,0,2,54,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1075,"        throw new IllegalArgumentException(""The field "" + field + "" is not supported"");",2,1,0,1,2,0,0,2,0,7,79,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1105,        if (focus == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1138,        if (focus == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1143,        int startCutoff = Calendar.SUNDAY;,10,1,0,0,0,0,0,0,0,13,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1145,        switch (rangeStyle) {,2,1,0,1,3,0,4,0,0,7,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1149,"                start = truncate(focus, Calendar.MONTH);",6,0,0,1,2,0,4,0,0,11,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1152,"                end.add(Calendar.MONTH, 1);",10,1,0,1,2,1,8,0,0,20,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1153,"                end.add(Calendar.DATE, -1);",4,0,0,1,2,0,4,0,0,9,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1155,                if (rangeStyle == RANGE_MONTH_MONDAY) {,4,1,0,1,3,0,0,0,0,5,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1157,                    endCutoff = Calendar.SUNDAY;,6,0,0,0,0,0,0,0,0,7,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1172,                        startCutoff = Calendar.MONDAY;,6,0,0,0,0,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1173,                        endCutoff = Calendar.SUNDAY;,6,0,0,0,0,0,0,0,0,7,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1176,                        startCutoff = focus.get(Calendar.DAY_OF_WEEK);,6,0,0,1,2,0,4,0,0,11,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1177,                        endCutoff = startCutoff - 1;,4,1,0,0,0,0,0,0,0,6,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1178,                        break;,2,0,0,0,0,0,0,0,0,2,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1180,                        startCutoff = focus.get(Calendar.DAY_OF_WEEK) - 3;,2,0,1,1,2,0,0,0,0,7,50,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1181,                        endCutoff = focus.get(Calendar.DAY_OF_WEEK) + 3;,2,0,0,1,2,2,0,4,0,8,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1184,                break;,4,3,0,0,0,0,0,0,0,7,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1186,"                throw new IllegalArgumentException(""The range style "" + rangeStyle + "" is not valid."");",2,1,0,1,2,0,6,2,0,13,87,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1188,        if (startCutoff < Calendar.SUNDAY) {,6,1,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1194,        if (endCutoff < Calendar.SUNDAY) {,6,1,0,1,3,0,0,0,0,7,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1195,            endCutoff += 7;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1198,            endCutoff -= 7;,2,0,0,0,0,0,0,0,0,4,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1200,        while (start.get(Calendar.DAY_OF_WEEK) != startCutoff) {,6,1,0,2,5,0,4,0,0,11,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1201,"            start.add(Calendar.DATE, -1);",4,0,0,1,2,0,4,0,0,9,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1203,        while (end.get(Calendar.DAY_OF_WEEK) != endCutoff) {,6,1,0,2,5,0,10,0,0,17,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1204,"            end.add(Calendar.DATE, 1);",6,0,0,1,2,0,4,0,0,10,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1206,"        return new DateIterator(start, end);",2,1,0,1,2,1,0,0,0,3,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1229,        if (focus == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1230,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,2,0,5,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1232,        if (focus instanceof Date) {,2,0,0,1,3,0,0,2,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1233,"            return iterator((Date) focus, rangeStyle);",8,0,0,2,4,1,4,2,0,14,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1234,        } else if (focus instanceof Calendar) {,2,0,0,1,4,0,6,2,0,10,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1235,"            return iterator((Calendar) focus, rangeStyle);",4,0,0,2,4,1,12,2,0,19,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1237,"            throw new ClassCastException(""Could not iterate based on "" + focus);",2,1,0,1,2,0,0,2,0,6,68,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1275,"        return getFragment(date, fragment, Calendar.MILLISECOND);    ",4,0,0,1,2,1,6,0,0,10,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1315,"        return getFragment(date, fragment, Calendar.SECOND);",4,0,0,1,2,1,6,0,0,10,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1435,"        return getFragment(date, fragment, Calendar.DAY_OF_YEAR);",4,0,0,1,2,1,6,0,0,10,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1475,"    return getFragment(calendar, fragment, Calendar.MILLISECOND);",6,0,0,1,2,1,6,0,0,12,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1514,"        return getFragment(calendar, fragment, Calendar.SECOND);",10,0,0,1,2,1,6,0,0,17,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1554,"        return getFragment(calendar, fragment, Calendar.MINUTE);",4,0,0,1,2,1,6,0,0,10,56,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1594,"        return getFragment(calendar, fragment, Calendar.HOUR_OF_DAY);",4,0,0,1,2,1,6,0,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1636,"        return getFragment(calendar, fragment, Calendar.DAY_OF_YEAR);",6,0,0,1,2,1,6,2,0,14,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1651,        if(date == null) {,2,1,0,1,3,0,0,2,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1654,        Calendar calendar = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1671,        if(calendar == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1674,        long millisPerUnit = getMillisPerUnit(unit);,4,1,0,1,2,0,4,0,0,9,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1675,        long result = 0;,2,0,0,0,0,0,0,0,0,2,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1678,        switch (fragment) {,8,1,0,1,3,0,0,0,0,9,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1680,                result += (calendar.get(Calendar.DAY_OF_YEAR) * MILLIS_PER_DAY) / millisPerUnit;,10,2,0,2,4,0,4,0,0,17,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1683,                result += (calendar.get(Calendar.DAY_OF_MONTH) * MILLIS_PER_DAY) / millisPerUnit;,10,2,0,2,4,0,4,0,0,17,81,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1687,        switch (fragment) {,2,0,0,1,3,0,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1695,                result += (calendar.get(Calendar.HOUR_OF_DAY) * MILLIS_PER_HOUR) / millisPerUnit;,10,2,0,2,4,0,4,0,0,17,81,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1698,                result += (calendar.get(Calendar.MINUTE) * MILLIS_PER_MINUTE) / millisPerUnit;,18,3,0,2,4,0,8,2,0,32,78,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1707,"                default: throw new IllegalArgumentException(""The fragment "" + fragment + "" is not supported"");",2,1,0,1,2,0,4,0,0,7,94,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1709,        return result;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1726,"        return truncatedCompareTo(cal1, cal2, field) == 0;",0,1,0,1,2,1,8,0,0,9,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1743,"        return truncatedCompareTo(date1, date2, field) == 0;",4,2,0,1,2,1,10,0,0,17,52,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1761,"        Calendar truncatedCal1 = truncate(cal1, field);",2,0,0,1,2,0,6,2,0,10,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1762,"        Calendar truncatedCal2 = truncate(cal2, field);",10,0,0,1,2,0,12,4,0,28,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1782,"        Date truncatedDate2 = truncate(date2, field);",2,0,0,1,2,0,6,2,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1795,        long result = Long.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1796,        switch (unit) {,8,1,0,1,3,0,0,0,0,9,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1799,                result = MILLIS_PER_DAY;,4,0,0,0,0,0,2,0,0,8,24,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1802,                result = MILLIS_PER_HOUR;,4,0,0,0,0,0,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1808,                result = MILLIS_PER_SECOND;,10,0,0,0,0,2,0,0,0,13,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1811,                result = 1;,2,0,0,0,0,0,0,0,0,3,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1813,"            default: throw new IllegalArgumentException(""The unit "" + unit + "" cannot be represented is milleseconds"");",2,1,0,1,2,0,0,2,0,7,107,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1815,        return result;,4,0,0,0,0,1,6,2,0,12,14,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,223,            numerator/=2; denominator/=2;,6,0,0,0,0,3,4,0,0,18,29,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,226,            if (numerator==Integer.MIN_VALUE ||,6,2,0,0,1,0,6,0,0,14,35,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,228,"                throw new ArithmeticException(""overflow: can't negate"");",0,0,0,1,2,0,0,2,0,3,56,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,230,            numerator = -numerator;,6,1,0,0,0,0,8,0,0,17,23,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,231,            denominator = -denominator;,4,0,0,0,0,0,0,0,0,6,27,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,475,        if (numerator == 0) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,476,            return equals(ZERO) ? this : ZERO;,2,0,0,1,2,1,4,0,0,6,34,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,478,"        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);",2,0,0,2,4,0,10,0,0,12,66,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,591,        if (u>0) { u=-u; } // make u negative,8,2,0,2,4,0,0,0,0,12,37,4,0.57143,1,1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,592,        if (v>0) { v=-v; } // make v negative,6,1,0,2,4,0,0,0,0,9,37,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,594,        int k=0;,2,0,0,0,0,0,0,0,0,2,8,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,595,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,6,7,0,3,7,0,0,0,0,13,72,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,603,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,8,3,0,3,6,0,0,0,0,12,38,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,609,            while ((t&1)==0) { // while t is even..,2,2,0,2,5,0,0,0,0,4,39,6,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,613,            if (t>0) {,6,1,0,1,3,0,0,0,0,8,10,3,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,616,                v = t;,4,0,0,0,0,0,0,0,0,5,6,8,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,619,            t = (v - u)/2;,2,1,0,1,2,0,0,0,0,3,14,6,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,622,        } while (t!=0);,2,1,0,1,3,0,0,0,0,3,15,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,623,        return -u*(1<<k); // gcd is u*2^k,6,2,0,1,2,4,0,2,0,14,33,1,0.57143,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,584,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,0,3,0,3,7,0,12,0,0,15,43,4,0.5,1,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,219,            return ZERO; // normalize zero.,2,0,0,0,0,1,0,0,0,2,31,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,844,        if (obj == this) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,847,        if (obj instanceof Fraction == false) {,2,1,0,1,3,0,0,2,0,6,39,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,850,        Fraction other = (Fraction) obj;,2,0,0,1,2,3,2,2,0,10,32,2,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,851,        return (getNumerator() == other.getNumerator() &&,0,0,0,2,5,1,0,0,0,8,49,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,151,            if (numerator==Integer.MIN_VALUE ||,6,2,0,0,1,0,0,0,0,8,35,6,0.2,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,155,            numerator = -numerator;,4,0,0,0,0,0,0,0,0,6,23,6,0.2,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,156,            denominator = -denominator;,12,1,0,0,0,0,2,2,0,19,27,3,0.2,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,373,        return numerator;,4,0,0,0,0,4,2,2,0,12,17,1,0.2,0,0
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,382,        return denominator;,4,1,0,0,0,1,8,2,0,15,19,3,0.2,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",2,0,0,1,2,3,0,4,0,10,69,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,2,0,0,1,2,3,0,4,0,10,68,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,4,0,0,1,2,3,0,4,0,14,69,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",2,0,0,2,4,3,2,4,0,12,94,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,2,0,0,1,2,3,0,4,0,9,65,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,2,0,0,1,2,3,0,4,0,10,77,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",2,0,0,2,4,3,2,4,0,12,88,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,285,            this.chars = chars.clone();,4,1,0,1,2,0,4,2,0,13,27,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,300,"            return Arrays.binarySearch(chars, buffer[pos]) >= 0 ? 1 : 0;",0,1,1,2,4,1,6,0,0,11,60,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,151,        ArrayList<Format> foundFormats = new ArrayList<Format>();,2,0,0,1,2,0,0,8,0,10,57,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,152,        ArrayList<String> foundDescriptions = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,62,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,153,        StringBuilder stripCustom = new StringBuilder(pattern.length());,4,0,0,2,4,3,6,6,0,20,64,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,156,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,157,        int fmtCount = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,164,                fmtCount++;,2,0,0,0,0,0,0,0,0,3,11,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,165,"                seekNonWs(pattern, pos);",6,0,0,1,2,0,6,0,0,15,24,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,166,                int start = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,168,                stripCustom.append(START_FE).append(index);,0,0,0,2,4,0,10,0,0,10,43,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,169,"                seekNonWs(pattern, pos);",0,0,0,1,2,0,6,0,0,6,24,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,170,                Format format = null;,2,0,0,0,0,0,2,2,0,8,21,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,171,                String formatDescription = null;,2,0,0,0,0,0,0,2,0,4,32,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,172,                if (c[pos.getIndex()] == START_FMT) {,2,1,1,3,7,0,4,0,0,9,37,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,176,                    if (format == null) {,2,1,0,1,3,0,0,0,0,3,21,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,180,                foundFormats.add(format);,2,0,0,1,2,0,6,2,0,10,25,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,181,                foundDescriptions.add(format == null ? null : formatDescription);,4,1,0,1,2,0,4,0,0,9,65,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,182,                Validate.isTrue(foundFormats.size() == fmtCount);,2,1,0,2,4,0,8,0,0,11,49,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,183,                Validate.isTrue(foundDescriptions.size() == fmtCount);,2,1,0,2,4,0,8,0,0,11,54,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,184,                if (c[pos.getIndex()] != END_FE) {,6,1,1,3,7,6,12,4,0,32,34,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,191,                next(pos);,2,0,1,1,2,3,12,0,0,26,10,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,195,"        toPattern = insertFormats(super.toPattern(), foundDescriptions);",8,0,0,2,4,0,4,0,0,14,64,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,196,        if (containsElements(foundFormats)) {,2,0,0,2,5,3,0,12,0,17,37,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,197,            Format[] origFormats = getFormats();,2,0,0,2,4,0,2,2,0,6,36,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,200,            int i = 0;,2,0,0,0,0,0,0,0,0,2,10,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,201,            for (Iterator<Format> it = foundFormats.iterator(); it.hasNext(); i++) {,4,0,0,3,7,3,16,2,0,25,72,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,202,                Format f = it.next();,2,1,0,1,2,0,0,0,0,3,21,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,203,                if (f != null) {,2,1,0,1,3,0,0,0,0,3,16,8,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,207,            super.setFormats(origFormats);,4,0,0,1,2,0,0,0,0,4,30,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,277,        if (registry != null) {,2,0,0,1,3,0,0,0,0,3,23,8,0.25,1,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,278,            String name = desc;,4,0,0,0,0,0,0,2,0,6,19,6,0.25,1,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,280,            int i = desc.indexOf(START_FMT);,6,0,0,1,2,0,6,2,0,14,32,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,285,            FormatFactory factory = registry.get(name);,6,1,0,1,2,0,12,4,0,24,43,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,287,"                return factory.getFormat(name, args, getLocale());",0,0,0,2,4,1,10,0,0,10,50,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,302,"        seekNonWs(pattern, pos);",6,1,0,1,2,3,10,0,0,22,24,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,304,        boolean error = false;,12,1,0,0,0,0,0,0,0,15,22,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,306,            char c = pattern.charAt(pos.getIndex());,2,0,0,2,4,0,8,0,0,10,40,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,315,            if ((c == START_FMT || c == END_FE) && result.length() > 0) {,8,5,0,3,7,0,4,0,0,17,61,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,323,            error = !Character.isDigit(c);,6,2,0,1,2,0,20,0,0,31,30,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,324,            result.append(c);,4,2,0,1,2,0,10,0,0,16,17,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,344,"        seekNonWs(pattern, pos);",4,1,0,1,2,3,2,0,0,12,24,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,345,        int text = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,26,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,348,            switch (pattern.charAt(pos.getIndex())) {,0,0,0,3,7,0,8,0,0,8,41,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,378,        StringBuilder sb = new StringBuilder(pattern.length() * 2);,4,2,0,2,4,0,12,4,0,23,59,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,379,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,380,        int fe = -1;,2,0,0,0,0,0,0,0,0,3,12,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,381,        int depth = 0;,2,0,0,0,0,0,0,2,0,4,14,5,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,382,        while (pos.getIndex() < pattern.length()) {,0,1,0,3,7,0,16,0,0,17,43,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,383,            char c = pattern.charAt(pos.getIndex());,8,1,0,2,4,0,16,2,0,29,40,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,384,            switch (c) {,2,0,0,1,3,0,0,0,0,2,12,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,389,                depth++;,2,0,0,0,0,0,0,0,0,3,8,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,391,                    fe++;,2,0,0,0,0,0,0,0,0,3,5,9,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,392,                    sb.append(START_FE).append(,0,0,0,1,3,0,8,0,0,8,27,10,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,395,                    if (customPattern != null) {,4,1,0,1,3,0,0,0,0,6,28,0,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,396,                        sb.append(START_FMT).append(customPattern);,10,1,0,2,4,0,4,0,0,16,43,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,401,                depth--;,2,0,0,0,0,0,0,0,0,3,8,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,405,                next(pos);,2,0,0,1,2,0,0,0,0,2,10,6,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,418,        int len = 0;,4,0,0,0,0,3,6,4,0,17,12,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,421,"            len = StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex());",6,0,0,3,6,0,4,0,0,11,64,7,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,422,            pos.setIndex(pos.getIndex() + len);,6,1,0,2,4,0,16,2,0,25,35,1,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,423,        } while (len > 0 && pos.getIndex() < pattern.length());,12,4,0,3,7,0,8,0,0,25,55,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,424,    },2,0,0,0,1,2,0,4,0,8,1,2,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,434,        return pos;,4,0,0,0,0,1,0,2,0,6,11,3,0.25,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,179,    },2,0,0,0,1,0,0,0,0,2,1,4,0.25,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,125,        super(DUMMY_PATTERN);,2,0,0,1,2,0,0,0,0,2,21,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,127,        this.registry = registry;,10,1,0,0,0,1,0,4,0,17,25,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,128,        applyPattern(pattern);,2,0,0,1,2,3,2,2,0,10,22,2,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,147,            super.applyPattern(pattern);,6,1,0,1,2,0,0,0,0,8,28,5,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,148,            toPattern = super.toPattern();,4,0,0,1,2,0,4,0,0,10,30,3,0.14286,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,351,            super();,2,0,0,1,2,0,4,0,0,6,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,353,        },4,0,0,0,1,0,10,0,0,16,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,366,            int len = chars.length;,6,0,0,0,0,0,0,0,0,6,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,370,"            for (int i = 0; i < chars.length; i++, pos++) {",12,1,0,1,3,0,0,0,0,15,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,80,        return COMMA_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,117,        return TRIM_MATCHER;,6,0,0,0,0,4,2,2,0,14,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,144,        return QUOTE_MATCHER;,8,0,0,0,0,1,8,0,0,16,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,174,            return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,176,        if (chars.length == 1) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,177,            return new CharMatcher(chars[0]);,0,0,1,2,4,1,0,2,0,4,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,179,        return new CharSetMatcher(chars);,2,0,0,1,2,1,0,2,0,4,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,192,        if (chars.length() == 1) {,2,1,0,2,5,0,10,0,0,13,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,193,            return new CharMatcher(chars.charAt(0));,0,0,0,2,4,1,4,2,0,6,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,205,        if (str == null || str.length() == 0) {,2,3,0,2,5,0,4,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,206,            return NONE_MATCHER;,4,0,0,0,0,1,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,208,        return new StringMatcher(str);,2,0,0,1,2,1,0,2,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,431,            return buffer[pos] <= 32 ? 1 : 0;,0,0,0,1,2,1,0,0,0,1,33,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,403,            return 0;,2,1,0,0,0,1,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,333,            return ch == buffer[pos] ? 1 : 0;,2,0,0,1,2,1,0,0,0,2,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,91,"        this(pattern, Locale.getDefault());",2,0,0,2,4,0,4,0,0,6,35,4,0.0,1,1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,92,    },0,0,0,0,1,0,4,0,0,4,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,102,"        this(pattern, locale, null);",0,0,0,1,2,0,0,0,0,1,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,136,        return toPattern;,2,0,0,0,0,1,0,0,0,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,161,"                appendQuotedString(pattern, pos, stripCustom, true);",0,0,0,1,2,0,8,0,0,9,52,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,185,                    throw new IllegalArgumentException(,0,0,0,0,1,0,0,2,0,2,35,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,220,        throw new UnsupportedOperationException();,0,0,0,1,2,0,0,2,0,2,42,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,282,"                name = desc.substring(0, i).trim();",6,0,0,2,4,3,16,2,0,29,35,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,283,                args = desc.substring(i + 1).trim();,4,1,0,2,4,0,6,0,0,12,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,318,                } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,5,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,327,            throw new IllegalArgumentException(,0,0,0,0,1,0,0,2,0,2,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,331,        throw new IllegalArgumentException(,14,1,0,0,1,0,8,0,0,24,35,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,350,                depth++;,4,0,0,0,0,3,4,2,0,15,8,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,363,        throw new IllegalArgumentException(,0,0,0,0,1,0,8,2,0,10,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,376,            return pattern;,2,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,387,                break;,2,0,0,0,0,0,0,2,0,4,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,450,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,451,        if (escapingOn && c[start] == QUOTE) {,4,1,0,2,5,0,8,0,0,13,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,452,            next(pos);,4,1,0,1,2,0,8,0,0,14,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,453,            return appendTo == null ? null : appendTo.append(QUOTE);,4,1,0,1,2,1,6,4,0,15,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,456,        for (int i = pos.getIndex(); i < pattern.length(); i++) {,6,1,0,3,7,0,8,0,0,16,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,457,            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {,2,1,0,3,7,0,10,0,0,13,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,460,                pos.setIndex(i + ESCAPED_QUOTE.length());,2,1,0,2,4,0,8,0,0,11,41,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,467,"                return appendTo == null ? null : appendTo.append(c, lastHold,",2,1,0,0,1,1,8,0,0,11,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,470,                next(pos);,2,0,1,1,2,0,4,0,0,11,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,473,        throw new IllegalArgumentException(,0,0,0,0,1,0,0,2,0,2,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,486,"        appendQuotedString(pattern, pos, null, escapingOn);",2,1,0,1,2,0,8,0,0,12,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,102,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,127,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,128,"            throw new IllegalArgumentException(String.format(message, new Double(value)));",2,0,0,3,6,0,6,4,0,12,78,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,152,"            throw new IllegalArgumentException(String.format(message, values));",0,0,0,2,4,0,0,0,0,1,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,154,    },2,0,0,0,1,0,0,0,0,2,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,219,"            throw new NullPointerException(String.format(message, values));",2,0,0,2,4,1,4,0,0,7,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,221,        return object;,2,0,1,0,0,1,4,0,0,10,14,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,243,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,244,"            throw new NullPointerException(String.format(message, values));",0,0,0,2,4,0,8,2,0,10,63,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,246,        if (array.length == 0) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,247,"            throw new IllegalArgumentException(String.format(message, values));",4,1,0,2,4,0,8,4,0,18,67,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,249,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,292,"            throw new NullPointerException(String.format(message, values));",2,0,0,2,4,0,0,0,0,2,63,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,294,        if (collection.size() == 0) {,2,1,0,2,5,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,297,        return collection;,8,5,0,0,0,1,0,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,339,        if (map == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,340,"            throw new NullPointerException(String.format(message, values));",4,3,1,2,4,0,12,2,0,23,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,387,        if (chars == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,393,        return chars;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,414,"        return notEmpty(chars, DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE);",2,1,0,1,2,1,6,0,0,9,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,437,        if (chars == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,438,"            throw new NullPointerException(String.format(message, values));",2,0,0,2,4,0,12,2,0,17,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,440,        if (StringUtils.isBlank(chars)) {,0,1,0,2,5,0,4,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,443,        return chars;,4,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,493,        for (int i = 0; i < array.length; i++) {,14,2,0,1,3,0,6,0,0,23,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,494,            if (array[i] == null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,495,"                Object[] values2 = ArrayUtils.add(values, Integer.valueOf(i));",2,0,0,3,6,0,12,2,0,16,62,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,555,            if (it.next() == null) {,0,1,0,2,5,0,4,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,556,"                Object[] values2 = ArrayUtils.addAll(values, Integer.valueOf(i));",2,0,0,3,6,0,12,2,0,16,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,557,"                throw new IllegalArgumentException(String.format(message, values2));",0,0,0,2,4,0,8,2,0,10,68,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,611,        if (index < 0 || index >= array.length) {,8,3,0,1,3,0,0,0,0,11,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,614,        return array;,6,3,1,0,0,1,4,0,0,15,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,639,"        return validIndex(array, index, DEFAULT_VALID_INDEX_ARRAY_EX_MESSAGE, Integer.valueOf(index));",2,1,0,2,4,1,0,0,0,3,94,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,666,"            throw new IndexOutOfBoundsException(String.format(message, values));",4,1,0,2,4,0,8,2,0,15,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,668,        return collection;,2,0,0,0,0,1,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,720,        return chars;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,767,        if (expression == false) {,4,1,0,1,3,0,4,0,0,11,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,768,            throw new IllegalStateException(DEFAULT_VALID_STATE_EX_MESSAGE);,2,0,0,1,2,0,0,2,0,4,64,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,787,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,811,    },2,1,0,0,1,0,4,0,0,7,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,830,"        if (Pattern.matches(pattern, input) == false)",0,1,0,2,4,0,8,0,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,850,        if (value.compareTo(start) < 0 || value.compareTo(end) > 0),0,3,0,3,6,0,12,0,0,15,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,852,"            throw new IllegalArgumentException(String.format(DEFAULT_INCLUSIVE_BETWEEN_EX_MESSAGE, value, start, end));",0,0,0,2,4,0,12,2,0,14,107,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,854,    },0,0,0,0,1,0,0,2,0,3,1,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,893,        if (value.compareTo(start) <= 0 || value.compareTo(end) >= 0),0,3,0,3,6,0,12,0,0,15,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,916,        if (value.compareTo(start) <= 0 || value.compareTo(end) >= 0),0,3,0,3,6,0,12,0,0,15,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,920,    },2,0,0,0,1,0,4,2,0,8,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,939,        if (type.isInstance(o) == false),2,0,0,2,4,0,0,0,0,3,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,941,"            throw new IllegalArgumentException(String.format(DEFAULT_IS_INSTANCE_OF_EX_MESSAGE, type.getName()));",0,0,0,3,6,0,10,2,0,12,101,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,961,        if (type.isInstance(o) == false),0,1,0,2,4,0,6,0,0,8,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,1009,        if (superType.isAssignableFrom(type) == false),10,7,0,2,4,0,12,2,0,32,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/Validate,23,1011,"            throw new IllegalArgumentException(String.format(message, values));",2,1,0,2,4,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/exception/CloneFailedException,23,40,        super(message);,2,0,0,1,2,0,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/exception/CloneFailedException,23,50,        super(cause);,10,0,0,1,2,0,0,2,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,75,    },2,0,0,0,1,0,0,8,0,10,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,63,    public static final Null NULL = new Null();,2,0,0,1,2,3,0,4,0,9,43,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,120,        if (values != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,122,                if (val != null) {,4,2,1,1,3,0,0,0,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,123,                    return val;,2,0,0,0,0,1,0,0,0,2,11,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,127,        return null;,4,2,0,0,0,1,0,0,0,6,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,152,        if (object1 == object2) {,4,1,0,1,3,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,153,            return true;,8,0,0,0,0,1,0,2,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,181,"        return ObjectUtils.equals(object1, object2) == false;",4,1,0,1,2,1,8,2,0,17,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,220,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,223,        StringBuffer buffer = new StringBuffer();,2,0,0,1,2,0,0,4,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,244,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,247,        buffer.append(object.getClass().getName()),0,0,0,3,6,0,10,0,0,10,42,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,272,"        return obj == null ? """" : obj.toString();",2,1,0,1,2,1,4,0,0,8,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,295,        return obj == null ? nullStr : obj.toString();,4,1,0,1,2,1,4,0,0,9,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,313,        T result = null;,2,0,0,0,0,0,0,2,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,314,        if (values != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,315,            for (T value : values) {,4,0,0,1,3,0,0,2,0,6,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,316,"                if (compare(value, result, true) < 0) {",0,1,0,2,5,0,6,0,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,317,                    result = value;,4,0,0,0,0,0,0,0,0,5,15,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,321,        return result;,4,1,0,0,0,1,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,337,        T result = null;,2,0,0,0,0,0,0,2,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,338,        if (values != null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,340,"                if (compare(value, result, false) > 0) {",0,1,0,2,5,0,6,0,0,8,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,341,                    result = value;,4,0,0,0,0,0,0,0,0,5,15,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,345,        return result;,2,0,0,0,0,1,2,0,0,4,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,374,        if (c1 == c2) {,4,1,0,1,3,0,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,376,        } else if (c1 == null) {,2,1,0,1,4,0,0,0,0,3,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,377,            return (nullGreater ? 1 : -1);,2,0,0,1,2,1,0,0,0,3,30,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,378,        } else if (c2 == null) {,2,1,0,1,4,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,379,            return (nullGreater ? -1 : 1);,2,0,0,1,2,1,0,0,0,3,30,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,394,        if (o instanceof Cloneable) {,2,0,0,1,3,0,0,2,0,4,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,396,            if (o.getClass().isArray()) {,6,0,0,3,7,0,6,0,0,13,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,398,                if (!componentType.isPrimitive()) {,0,0,0,2,5,0,12,0,0,13,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,399,                    result = ((Object[])o).clone();,14,1,0,4,8,0,2,2,0,21,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,401,                    int length = Array.getLength(o);,6,2,0,1,2,0,14,0,0,22,32,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,403,                    while (length-- > 0) {,4,1,0,1,3,0,0,0,0,6,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,404,"                        Array.set(result, length, Array.get(o, length));",0,0,0,2,4,0,16,0,0,16,48,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,410,                    result = clone.invoke(o);,2,0,0,1,2,0,6,0,0,9,25,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,411,                } catch (final NoSuchMethodException e) {,2,0,0,1,4,1,0,2,0,5,41,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,412,"                    throw new CloneFailedException(""Cloneable type """,2,1,0,0,1,0,0,0,0,3,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,415,                } catch (final IllegalAccessException e) {,2,0,0,1,4,1,0,2,0,5,42,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,418,                } catch (final InvocationTargetException e) {,6,1,0,1,4,1,4,2,0,15,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,424,            final T checked = (T)result;,4,0,0,1,2,1,0,4,0,9,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,425,            return checked;,2,0,0,0,0,1,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,446,        final T clone = clone(o);,2,0,0,1,2,1,4,2,0,9,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ObjectUtils,23,487,            return ObjectUtils.NULL;,4,0,0,0,0,1,0,0,0,4,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,454,            return null;,2,0,0,0,0,3,4,2,0,10,12,2,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,467,            return createInteger(str);,4,0,0,1,2,4,2,2,0,12,26,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,479,                if (expPos < decPos || expPos > str.length()) {,14,3,0,2,5,0,8,0,0,25,47,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,484,                dec = str.substring(decPos + 1);,6,1,1,1,2,0,4,0,0,14,32,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,486,"            mant = str.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,489,                if (expPos > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,500,"                exp = str.substring(expPos + 1, str.length() - 1);",12,3,0,2,4,0,8,0,0,25,50,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,525,                        Float f = NumberUtils.createFloat(numeric);,2,0,0,1,2,0,6,2,0,10,43,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,526,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,16,0,0,23,65,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,540,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,541,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,547,                        return createBigDecimal(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,559,            if (expPos > -1 && expPos < str.length() - 1) {,6,5,0,2,5,0,8,0,0,20,47,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,560,"                exp = str.substring(expPos + 1, str.length());",6,1,0,2,4,3,8,0,0,19,46,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,562,                exp = null;,2,0,0,0,0,0,6,0,0,9,11,5,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,564,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,567,                    return createInteger(str);,2,0,0,1,2,1,4,4,0,10,26,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,568,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,572,                    return createLong(str);,10,0,0,1,2,1,4,2,0,17,23,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,573,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,576,                return createBigInteger(str);,2,1,0,1,2,1,4,0,0,7,29,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,580,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,582,                    Float f = createFloat(str);,6,2,0,1,2,0,4,0,0,13,27,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,583,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,584,                        return f;,2,0,0,0,0,1,0,0,0,2,9,12,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,590,                    Double d = createDouble(str);,6,0,0,1,2,1,4,4,0,15,29,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,456,        if (StringUtils.isBlank(str)) {,2,1,0,2,5,0,6,0,0,9,31,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,466,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,473,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,474,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,476,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,488,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,494,                mant = str;,6,1,0,0,0,0,0,0,0,8,11,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,496,            dec = null;,2,0,0,0,0,0,0,0,0,3,11,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,499,            if (expPos > -1 && expPos < str.length() - 1) {,6,5,0,2,5,0,4,0,0,16,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,507,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,510,                    if (dec == null,2,1,0,0,1,0,0,0,0,3,15,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,617,            if (str.charAt(i) != '0') {,2,0,0,2,5,0,4,0,0,7,27,9,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,635,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,651,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,668,        if (str == null) {,8,1,0,1,3,3,6,4,0,22,18,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,701,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,717,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,724,        return new BigDecimal(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,685,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1295,        if (StringUtils.isEmpty(str)) {,4,0,0,2,5,0,2,0,0,6,31,9,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1298,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,242,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,0,0,0,0,5,34,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,24,244,                return false;,0,4,0,0,0,1,12,0,0,18,13,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,43,    public static final Long LONG_ONE = new Long(1L);,4,0,0,1,2,0,6,0,0,10,49,3,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,0,0,0,1,2,0,4,0,0,5,56,8,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,49,    public static final Integer INTEGER_ONE = new Integer(1);,2,0,0,1,2,3,0,4,0,9,57,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,2,0,0,2,4,3,0,4,0,10,66,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,59,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,2,0,0,2,4,3,4,2,0,11,60,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,63,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,2,0,0,2,4,0,0,0,0,2,66,4,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,4,4,0,1,2,0,8,0,0,17,57,7,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,8,3,0,1,2,0,0,0,0,12,55,4,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,75,    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);,2,0,0,1,2,3,0,4,0,10,61,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,31,    private static final String[][] ISO8859_1_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,52,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,131,    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);,2,0,0,3,6,3,4,2,0,11,78,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,135,    private static final String[][] HTML40_EXTENDED_ESCAPE = {,2,1,0,2,5,0,0,0,0,3,58,4,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,333,    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);,6,1,0,3,6,3,10,4,0,25,90,1,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,336,    private static final String[][] BASIC_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,48,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,344,    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);,2,0,0,3,6,3,4,2,0,11,70,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,347,    private static final String[][] APOS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,47,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,352,    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);,4,0,0,3,6,6,6,4,0,21,68,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,355,    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,364,    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);,2,0,0,3,6,3,4,2,0,11,90,2,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,372,        String[][] newarray = new String[array.length][2];,8,0,0,4,8,0,0,4,0,12,50,3,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,373,        for(int i = 0; i<array.length; i++) {,10,1,0,1,3,0,0,0,0,12,37,4,0.04545,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,28,public class EntityArrays {,2,0,0,0,1,1,0,0,0,3,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,134,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },4,0,0,5,10,3,10,2,0,19,92,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,332,    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); },4,1,0,5,10,1,6,0,0,11,96,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,335,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,343,    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,346,    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,70,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,351,    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,354,    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); },4,0,0,5,10,3,8,4,0,18,92,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,363,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,96,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1171,            buffer.append(mValues[calendar.get(mField)]);,0,0,1,3,6,0,10,0,0,12,45,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1130,            buffer.append(mValue);,0,0,0,1,2,0,6,0,0,6,22,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,820,        Calendar c = new GregorianCalendar(mTimeZone);,4,0,0,1,2,0,0,4,0,8,46,4,0.03333,1,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,822,"        return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();",2,0,0,3,6,1,6,2,0,10,70,5,0.03333,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1115,        StringLiteral(String value) {,6,0,0,1,3,3,2,4,0,16,29,1,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1116,            mValue = value;,10,0,0,0,0,0,4,0,0,15,15,1,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1117,        },2,2,1,0,1,0,4,4,0,21,1,4,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1348,"            appendTo(buffer, calendar.get(mField));",2,0,0,2,4,0,14,0,0,16,39,1,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1349,        },0,0,0,0,1,0,6,0,0,7,1,4,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1356,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,645,"                rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);",2,0,0,1,2,0,4,0,0,6,84,5,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,687,                    rule = new StringLiteral(sub);,4,0,0,1,2,0,0,2,0,7,30,9,0.02857,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1148,"        TextField(int field, String[] values) {",2,0,0,2,5,0,0,0,0,3,39,7,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1149,            mField = field;,4,0,0,0,0,0,0,0,0,5,15,5,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1150,            mValues = values;,6,1,0,0,0,0,0,0,0,8,17,1,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1157,            int max = 0;,2,0,0,0,0,0,0,0,0,2,12,6,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1158,            for (int i=mValues.length; --i >= 0; ) {,8,1,0,1,3,0,0,0,0,10,40,5,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1159,                int len = mValues[i].length();,2,0,1,2,4,0,12,0,0,19,30,1,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1160,                if (len > max) {,4,1,0,1,3,0,0,0,0,5,16,7,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1161,                    max = len;,6,0,0,0,0,3,0,4,0,14,10,1,0.02778,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,890,        for (int i = 0; i < len; i++) {,8,1,0,1,3,0,0,2,0,13,31,3,0.02703,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,891,"            rules[i].appendTo(buf, calendar);",0,0,1,2,4,0,6,0,0,10,33,7,0.02703,0,0
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,893,        return buf;,2,0,0,0,0,1,0,0,0,2,11,4,0.02703,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,478,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,484,                dec = str.substring(decPos + 1);,4,1,0,1,2,0,4,0,0,10,32,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,523,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,526,                            return f;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,537,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,538,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,557,"                exp = str.substring(expPos + 1, str.length());",2,1,0,2,4,0,0,0,0,3,46,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,559,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,561,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,565,                } catch (NumberFormatException nfe) {,4,0,0,1,4,0,4,2,0,12,37,3,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,573,                return createBigInteger(str);,0,0,0,1,2,1,4,0,0,4,29,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,577,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,579,                    Float f = createFloat(str);,2,0,0,1,2,0,4,2,0,8,27,10,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,580,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,4,3,0,5,11,2,8,4,0,23,65,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,581,                        return f;,4,0,0,0,0,3,0,4,0,10,9,1,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,587,                    Double d = createDouble(str);,8,0,0,1,2,0,0,4,0,12,29,4,1.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,459,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,2,0,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,466,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",6,0,0,3,7,0,0,4,0,10,52,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,469,        char lastChar = str.charAt(str.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,473,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,476,        if (decPos > -1) {,2,0,0,1,3,0,0,2,0,4,18,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,488,            if (expPos > -1) {,8,1,0,1,3,0,4,2,0,17,18,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,491,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,493,            dec = null;,4,0,0,0,0,0,0,0,0,5,11,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,499,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,502,"            String numeric = str.substring(0, str.length() - 1);",2,1,0,2,4,0,8,2,0,13,52,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,503,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,504,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,507,                    if (dec == null,2,2,0,0,1,0,8,0,0,12,15,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,613,        for (int i = str.length() - 1; i >= 0; i--) {,2,0,0,2,5,0,4,0,0,8,45,1,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,614,            if (str.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,27,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,632,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,635,        return Float.valueOf(str);,0,1,0,1,2,1,24,0,0,25,26,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,648,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,651,        return Double.valueOf(str);,6,0,0,1,2,1,6,0,0,13,27,3,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,665,        if (str == null) {,4,2,0,1,3,0,10,0,0,16,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,669,        return Integer.decode(str);,8,3,0,1,2,1,0,0,0,12,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,698,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,701,        return new BigInteger(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,718,        if (StringUtils.isBlank(str)) {,2,1,0,2,5,0,6,0,0,9,31,4,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,721,        return new BigDecimal(str);,2,0,0,1,2,2,0,0,0,3,27,2,0.5,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,682,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,685,        return Long.valueOf(str);,2,1,0,1,2,1,6,0,0,9,25,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1292,        if (StringUtils.isEmpty(str)) {,2,0,0,2,5,0,6,0,0,8,31,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1295,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1300,        return true;,0,0,0,0,0,1,0,2,0,4,12,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,237,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,2,1,0,4,9,0,8,2,0,14,54,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,41,    public static final Long LONG_ZERO = new Long(0L);,2,0,0,1,2,3,0,4,0,9,50,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,43,    public static final Long LONG_ONE = new Long(1L);,4,0,0,1,2,4,0,8,0,16,49,1,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,47,    public static final Integer INTEGER_ZERO = new Integer(0);,0,0,0,1,2,0,10,0,0,10,58,5,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,49,    public static final Integer INTEGER_ONE = new Integer(1);,10,1,0,1,2,3,6,4,0,25,57,1,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,51,    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);,4,0,0,1,2,6,0,16,0,27,64,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,53,    public static final Short SHORT_ZERO = new Short((short) 0);,4,0,0,2,4,0,0,0,0,5,60,6,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,55,    public static final Short SHORT_ONE = new Short((short) 1);,2,0,0,2,4,3,0,4,0,9,59,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,2,0,0,2,4,3,0,4,0,10,66,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,59,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,2,0,0,2,4,3,4,2,0,11,60,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,63,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,6,0,0,2,4,3,4,6,0,20,66,1,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,2,0,0,1,2,3,0,4,0,9,57,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,69,    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);,2,1,0,1,2,0,0,0,0,3,64,4,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,4,0,0,1,2,4,0,6,0,14,55,1,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,75,    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);,2,0,0,1,2,3,0,4,0,10,61,2,0.01786,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1821,        super();,10,3,0,1,2,0,10,0,0,23,8,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1822,    },0,0,0,0,1,0,6,0,0,6,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,104,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,184,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",4,0,0,1,2,3,6,6,0,20,92,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,206,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",4,0,0,1,2,3,2,2,0,12,86,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,225,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,1,0,1,2,0,8,0,0,11,90,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,321,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,0,4,0,0,7,78,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,398,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,3,2,2,0,10,86,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,514,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,1,1,2,3,2,2,0,14,74,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,533,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,1,0,1,2,0,2,0,0,5,82,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,572,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,1,0,1,2,0,4,0,0,7,76,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,591,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",6,1,0,1,2,3,2,2,0,15,76,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,610,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,629,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,108,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,667,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",2,0,0,1,2,1,4,2,0,9,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,781,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,802,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ? getSystemProperty(""user.region"")",2,1,0,2,4,3,4,2,0,16,118,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,822,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,6,1,0,1,2,0,0,0,0,7,70,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,899,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",4,0,0,1,2,3,8,2,0,19,78,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,991,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",12,3,0,1,2,6,4,2,0,29,71,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1002,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",8,2,0,1,2,0,0,0,0,11,71,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1013,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",4,1,0,1,2,3,2,2,0,15,71,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1024,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,1,0,1,2,3,4,0,0,12,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1048,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",4,0,0,1,2,3,2,0,0,10,71,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1069,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",8,1,0,1,2,3,2,0,0,15,64,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1082,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",4,0,0,1,2,3,8,0,0,16,68,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1095,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",2,0,0,1,2,0,6,0,0,9,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1121,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",4,0,0,1,2,3,2,0,0,11,64,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1147,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",2,0,0,1,2,3,2,0,0,8,65,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1160,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",6,1,0,1,2,6,4,2,0,21,72,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1268,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",4,1,0,1,2,3,12,0,0,21,96,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1282,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",8,0,0,1,2,3,14,0,0,26,91,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1296,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",6,3,0,1,2,0,6,0,0,15,94,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1324,        return new File(System.getProperty(JAVA_HOME_KEY));,0,0,0,2,4,1,6,2,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1340,        return new File(System.getProperty(JAVA_IO_TMPDIR_KEY));,0,0,0,2,4,1,0,0,0,1,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1388,"        return toVersionInt(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",4,0,0,2,4,1,6,0,0,10,93,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1401,"        return isJavaVersionMatch(JAVA_VERSION_TRIMMED, versionPrefix);",2,1,0,1,2,1,0,0,0,3,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1410,        if (JAVA_VERSION != null) {,0,1,0,1,3,0,4,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1411,            for (int i = 0; i < JAVA_VERSION.length(); i++) {,6,2,0,2,5,0,14,0,0,23,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1412,                char ch = JAVA_VERSION.charAt(i);,2,0,0,1,2,0,6,0,0,8,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1413,                if (ch >= '0' && ch <= '9') {,4,3,0,1,3,0,0,0,0,9,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1414,                    return JAVA_VERSION.substring(i);,2,0,0,1,2,1,6,0,0,9,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1442,"        return isOSNameMatch(OS_NAME, osNamePrefix);",0,0,0,1,2,1,2,0,0,2,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1463,        } catch (SecurityException ex) {,6,1,0,1,4,2,0,8,0,20,32,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1465,"            System.err.println(""Caught a SecurityException reading the system property '"" + property",6,1,0,0,1,0,2,0,0,10,88,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1513,        return JAVA_AWT_HEADLESS != null ? JAVA_AWT_HEADLESS.equals(Boolean.TRUE.toString()) : false;,2,0,0,2,4,1,0,0,0,2,93,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1534,        return JAVA_VERSION_FLOAT >= requiredVersion;,4,1,0,0,0,1,0,0,0,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1556,        return JAVA_VERSION_INT >= requiredVersion;,4,1,0,0,0,1,0,0,0,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1597,        if (osName == null || osVersion == null) {,4,3,0,1,3,0,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1600,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,8,3,0,2,4,3,12,0,0,25,80,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1616,        if (osName == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1646,"        return toVersionFloat(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));",2,1,0,2,4,1,0,0,0,3,78,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1717,            return ArrayUtils.EMPTY_INT_ARRAY;,4,0,0,0,0,1,0,0,0,4,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1719,"        String[] strings = Pattern.compile(""[^\\d]"").split(version);",2,0,0,4,8,0,8,2,0,13,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1722,        for (int i = 0; i < strings.length && j < limit; i++) {,4,0,0,1,3,0,16,0,0,23,55,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1723,            String s = strings[i];,2,0,1,1,2,0,0,2,0,8,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1724,            if (s.length() > 0) {,0,1,0,2,5,0,4,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1725,                ints[j++] = Integer.parseInt(s);,2,0,1,2,4,0,6,0,0,12,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1728,        return ints;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1752,        if (javaVersions == null || javaVersions.length == 0) {,2,0,0,1,3,0,6,0,0,9,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1755,        if (javaVersions.length == 1) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1756,            return javaVersions[0];,0,0,1,1,2,1,0,0,0,2,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1758,        StringBuilder builder = new StringBuilder();,2,0,0,1,2,0,0,4,0,6,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1759,        builder.append(javaVersions[0]);,8,6,1,2,4,0,4,0,0,20,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1760,        builder.append('.');,0,0,0,1,2,0,8,0,0,10,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1761,        for (int i = 1; i < javaVersions.length; i++) {,0,0,0,1,3,0,8,0,0,8,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1765,            return Float.parseFloat(builder.toString());,4,3,0,2,4,1,8,0,0,15,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1766,        } catch (Exception ex) {,2,0,0,1,4,0,0,2,0,4,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1767,            return 0f;,2,0,0,0,0,1,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1792,        if (javaVersions == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1795,        int intVersion = 0;,2,0,0,0,0,0,0,0,0,2,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1796,        int len = javaVersions.length;,10,0,0,0,0,3,0,4,0,17,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1797,        if (len >= 1) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1798,            intVersion = javaVersions[0] * 100;,2,1,1,1,2,0,0,0,0,6,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1800,        if (len >= 2) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1801,            intVersion += javaVersions[1] * 10;,2,1,1,1,2,0,0,0,0,6,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1803,        if (len >= 3) {,4,1,0,1,3,0,0,0,0,5,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1806,        return intVersion;,2,0,0,0,0,1,0,0,0,3,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,86,    },0,0,0,0,1,0,0,0,0,1,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,128,        if(str == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,133,        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,134,            return defaultValue;,2,0,0,0,0,1,4,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,177,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,181,            return Long.parseLong(str);,6,0,0,1,2,1,0,0,0,7,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,182,        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,183,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,230,          return defaultValue;,4,0,0,0,0,1,6,0,0,11,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,234,      } catch (NumberFormatException nfe) {,10,1,1,1,4,0,0,0,0,17,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,235,          return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,281,      if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,282,          return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,286,      } catch (NumberFormatException nfe) {,2,0,0,1,4,0,5,2,0,9,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,287,          return defaultValue;,4,1,1,0,0,1,0,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,310,"        return toByte(str, (byte) 0);",0,0,0,2,4,1,4,0,0,4,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,331,        if(str == null) {,2,1,0,1,3,0,0,2,0,7,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,332,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,336,        } catch (NumberFormatException nfe) {,6,1,0,1,4,0,0,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,337,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,380,        if(str == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,381,            return defaultValue;,2,0,1,0,0,1,0,0,0,11,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,384,            return Short.parseShort(str);,0,0,0,1,2,1,6,0,0,7,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,385,        } catch (NumberFormatException nfe) {,6,0,0,1,4,0,0,0,0,6,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,386,            return defaultValue;,2,0,0,0,0,1,6,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,480,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,512,                        } catch (NumberFormatException nfe) {,2,1,0,1,4,0,4,2,0,9,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,540,                    } catch (NumberFormatException nfe) {,10,0,0,1,4,0,10,4,0,25,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,550,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,583,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,588,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,66,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,649,            return null;,2,1,1,0,0,1,0,0,0,7,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,699,            return null;,0,0,0,0,0,1,6,0,0,6,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,736,        if (array == null) {,12,1,0,1,3,0,4,0,0,18,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,737,"            throw new IllegalArgumentException(""The Array must not be null"");",2,0,0,1,2,0,0,2,0,7,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,738,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,739,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,0,2,0,3,61,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,743,        long min = array[0];,2,0,1,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,744,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,746,                min = array[i];,10,6,1,1,2,0,0,0,0,21,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,750,        return min;,6,3,0,0,0,1,10,0,0,19,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,765,        } else if (array.length == 0) {,2,0,0,1,4,0,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,771,        for (int j = 1; j < array.length; j++) {,12,1,0,1,3,0,12,0,0,26,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,772,            if (array[j] < min) {,4,1,1,2,5,0,6,0,0,15,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,777,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,797,        short min = array[0];,2,0,1,1,2,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,798,        for (int i = 1; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,799,            if (array[i] < min) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,800,                min = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,804,        return min;,2,0,0,0,0,1,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,817,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,819,        } else if (array.length == 0) {,8,3,0,1,4,0,0,0,0,13,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,827,                min = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,831,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,845,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,853,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,855,                return Double.NaN;,6,1,0,0,0,1,0,0,0,7,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,857,            if (array[i] < min) {,4,2,1,2,5,0,0,0,0,10,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,858,                min = array[i];,0,1,0,1,2,0,4,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,862,        return min;,4,0,0,0,0,1,4,0,0,8,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,876,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,877,"            throw new IllegalArgumentException(""The Array must not be null"");",4,0,0,1,2,0,6,2,0,14,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,883,        float min = array[0];,2,0,1,1,2,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,884,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,885,            if (Float.isNaN(array[i])) {,2,0,1,3,7,2,8,2,0,18,28,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,888,            if (array[i] < min) {,2,1,1,2,5,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,889,                min = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,893,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,910,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,911,"            throw new IllegalArgumentException(""Array cannot be empty."");",2,0,0,1,2,0,4,2,0,9,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,915,        long max = array[0];,2,0,1,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,916,        for (int j = 1; j < array.length; j++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,917,            if (array[j] > max) {,6,2,1,2,5,0,0,0,0,17,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,918,                max = array[j];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,922,        return max;,4,0,0,0,0,1,0,0,0,4,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,935,        if (array == null) {,6,1,0,1,3,0,0,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,937,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,942,        int max = array[0];,4,0,1,1,2,0,0,0,0,7,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,943,        for (int j = 1; j < array.length; j++) {,10,1,0,1,3,0,6,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,944,            if (array[j] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,945,                max = array[j];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,949,        return max;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,962,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,964,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,965,"            throw new IllegalArgumentException(""Array cannot be empty."");",2,0,0,1,2,0,0,0,0,2,61,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,969,        short max = array[0];,2,0,1,1,2,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,970,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,971,            if (array[i] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,976,        return max;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,991,        } else if (array.length == 0) {,8,2,0,1,4,0,0,0,0,10,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,996,        byte max = array[0];,2,0,1,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,998,            if (array[i] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,999,                max = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1003,        return max;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1017,        if (array== null) {,8,3,1,1,3,0,12,0,0,29,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1019,        } else if (array.length == 0) {,8,2,0,1,4,0,0,0,0,11,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1024,        double max = array[0];,2,0,1,1,2,0,0,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1026,            if (Double.isNaN(array[j])) {,0,0,1,3,7,0,4,0,0,8,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1027,                return Double.NaN;,4,0,0,0,0,1,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1029,            if (array[j] > max) {,6,2,1,2,5,0,4,0,0,16,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1030,                max = array[j];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1048,        if (array == null) {,4,1,1,1,3,0,0,0,0,10,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1049,"            throw new IllegalArgumentException(""The Array must not be null"");",2,0,1,1,2,0,0,2,0,11,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1050,        } else if (array.length == 0) {,6,1,0,1,4,0,4,0,0,11,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1051,"            throw new IllegalArgumentException(""Array cannot be empty."");",4,1,0,1,2,0,0,2,0,8,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1056,        for (int j = 1; j < array.length; j++) {,10,1,0,1,3,0,4,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1061,                max = array[j];,8,1,1,1,2,0,4,0,0,18,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1079,        if (b < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1080,            a = b;,6,0,0,0,0,0,6,0,0,13,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1083,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1085,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1097,        if (b < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1098,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1101,            a = c;,2,0,0,0,0,0,0,0,0,2,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1103,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1115,        if (b < a) {,6,2,1,1,3,0,0,0,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1118,        if (c < a) {,10,1,0,1,3,0,4,0,0,15,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1119,            a = c;,10,4,0,0,0,0,0,0,0,15,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1134,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1136,        if (c < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1139,        return a;,6,3,0,0,0,1,0,0,0,9,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1155,"        return Math.min(Math.min(a, b), c);",2,0,0,2,4,1,26,2,0,30,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1185,        if (b > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1186,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1188,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1191,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1203,        if (b > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1204,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1206,        if (c > a) {,6,1,0,1,3,0,0,2,0,9,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1209,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1222,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1224,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1225,            a = c;,6,0,0,0,0,0,4,0,0,11,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1227,        return a;,4,0,0,0,0,1,0,0,0,4,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1239,        if (b > a) {,6,1,0,1,3,0,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1240,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1242,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1243,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1245,        return a;,0,0,0,0,0,1,12,0,0,12,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1293,            return false;,4,1,0,0,0,1,10,0,0,16,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1317,        if (StringUtils.isEmpty(str)) {,4,3,1,2,5,0,6,0,0,21,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1320,        char[] chars = str.toCharArray();,2,0,0,2,4,0,4,2,0,9,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1321,        int sz = chars.length;,6,0,0,0,0,0,0,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1323,        boolean hasDecPoint = false;,2,0,0,0,0,0,0,0,0,3,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1324,        boolean allowSigns = false;,2,0,0,0,0,0,0,0,0,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1325,        boolean foundDigit = false;,2,0,0,0,0,0,0,0,0,3,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1327,        int start = (chars[0] == '-') ? 1 : 0;,4,1,1,2,4,0,0,0,0,8,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1329,            if (chars[start] == '0' && chars[start + 1] == 'x') {,2,4,1,3,7,0,0,0,0,14,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1330,                int i = start + 2;,4,1,0,0,0,0,0,0,0,5,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1331,                if (i == sz) {,4,1,0,1,3,0,8,0,0,14,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1332,"                    return false; // str == ""0x""",0,0,0,0,0,1,0,0,0,1,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1335,                for (; i < chars.length; i++) {,8,1,0,1,3,0,0,0,0,10,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1336,                    if ((chars[i] < '0' || chars[i] > '9'),0,3,1,3,7,0,0,0,0,13,38,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1339,                        return false;,2,1,0,0,0,1,0,0,0,4,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1345,"        sz--; // don't want to loop to the last char, check it afterwords",2,0,0,0,0,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1347,        int i = start;,4,0,0,0,0,0,0,0,0,4,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1350,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,12,6,0,2,5,0,0,0,0,19,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1351,            if (chars[i] >= '0' && chars[i] <= '9') {,2,0,0,3,7,0,0,0,0,2,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1352,                foundDigit = true;,4,1,0,0,0,0,0,0,0,7,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1353,                allowSigns = false;,2,0,0,0,0,0,0,0,0,4,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1355,            } else if (chars[i] == '.') {,0,1,1,2,6,0,4,0,0,10,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1358,                    return false;,0,0,0,0,0,1,0,0,0,1,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1360,                hasDecPoint = true;,2,0,0,0,0,0,0,0,0,4,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1361,            } else if (chars[i] == 'e' || chars[i] == 'E') {,8,6,1,3,8,0,4,0,0,30,48,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1363,                if (hasExp) {,2,0,0,1,3,0,0,0,0,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1365,                    return false;,0,0,0,0,0,1,0,0,0,1,13,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1367,                if (!foundDigit) {,6,1,0,1,3,0,4,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1370,                hasExp = true;,2,0,0,0,0,0,0,0,0,4,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1371,                allowSigns = true;,4,0,0,0,0,0,2,0,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1372,            } else if (chars[i] == '+' || chars[i] == '-') {,0,3,1,3,8,0,0,0,0,13,48,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1373,                if (!allowSigns) {,2,0,0,1,3,0,0,0,0,3,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1374,                    return false;,4,1,0,0,0,1,10,0,0,16,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1376,                allowSigns = false;,4,0,0,0,0,0,0,0,0,8,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1377,                foundDigit = false; // we need a digit after the E,8,1,0,0,0,0,12,0,0,22,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1379,                return false;,4,1,0,0,0,1,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1383,        if (i < chars.length) {,6,1,0,1,3,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1384,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,13,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1388,            if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,7,0,0,0,0,13,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1392,            if (chars[i] == '.') {,4,1,1,2,5,0,0,0,0,10,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1393,                if (hasDecPoint || hasExp) {,4,1,0,1,3,0,0,0,0,5,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1395,                    return false;,6,0,0,0,0,1,10,0,0,18,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1398,                return foundDigit;,4,0,0,0,0,1,4,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1405,                return foundDigit;,2,0,0,0,0,1,0,0,0,2,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1410,                return foundDigit && !hasExp;,4,1,0,0,0,1,0,0,0,6,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1417,        return !allowSigns && foundDigit;,10,2,0,0,0,1,14,0,0,28,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,212,        return !StringUtils.isEmpty(cs);,18,0,0,1,2,1,2,0,0,21,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,234,            return true;,2,1,1,0,0,1,0,0,0,7,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,241,        return true;,4,3,0,0,0,1,0,0,0,7,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,291,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,317,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,343,        return str == null ? EMPTY : str.trim();,6,1,0,1,2,1,16,0,0,23,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,371,"        return strip(str, null);",4,0,0,1,2,1,0,2,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,402,        return str.length() == 0 ? null : str;,2,1,0,1,2,1,4,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,428,"        return str == null ? EMPTY : strip(str, null);",8,2,0,1,2,1,4,0,0,15,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,459,            return str;,4,1,1,0,0,1,0,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,461,"        str = stripStart(str, stripChars);",2,0,0,1,2,1,4,0,0,7,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,491,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,8,0,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,494,        int start = 0;,4,0,0,0,0,0,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,497,                start++;,4,0,0,0,0,0,0,0,0,4,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,500,            return str;,2,0,0,0,0,1,0,2,0,4,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,503,                start++;,8,0,0,0,0,0,4,0,0,14,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,535,        if (str == null || (end = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,540,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,4,3,0,4,9,0,8,0,0,15,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,543,        } else if (stripChars.length() == 0) {,14,4,0,2,6,0,0,0,0,18,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,547,                end--;,14,1,0,0,0,0,0,0,0,17,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,605,        if (strs == null || (strsLen = strs.length) == 0) {,8,4,0,2,5,0,8,0,0,21,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,608,        String[] newArr = new String[strsLen];,2,0,1,2,4,0,0,4,0,8,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,610,"            newArr[i] = strip(strs[i], stripChars);",0,1,1,3,6,0,14,0,0,24,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,632,        if(input == null) {,4,1,0,1,3,0,12,0,0,18,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,633,            return null;,0,0,1,0,0,1,2,0,0,6,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,642,"                Class<?> normalizerFormClass = ClassUtils.getClass(""java.text.Normalizer$Form"", false);",2,0,0,1,2,0,4,2,0,10,87,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,645,"                Class<?> normalizerClass = ClassUtils.getClass(""java.text.Normalizer"", false);",2,0,0,1,2,0,4,2,0,10,78,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,659,            } catch(ClassNotFoundException cnfe) {,2,0,0,1,4,0,0,2,0,4,38,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,661,            } catch(NoSuchMethodException nsme) {,2,0,0,1,4,0,6,2,0,10,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,663,            } catch(NoSuchFieldException nsfe) {,4,0,0,1,4,0,0,2,0,6,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,668,"                throw new RuntimeException(""IllegalArgumentException occurred during 1.6 backcompat code"", iae);",2,0,0,1,2,0,0,2,0,5,96,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,670,"                throw new RuntimeException(""InvocationTargetException occurred during 1.6 backcompat code"", ite);",2,0,0,1,2,0,4,2,0,9,97,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,671,            } catch(SecurityException se) {,2,0,0,1,4,0,0,2,0,4,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,703,        return cs1 == null ? cs2 == null : cs1.equals(cs2);,4,2,0,1,2,1,6,0,0,12,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,754,            return INDEX_NOT_FOUND;,2,3,0,0,0,1,8,0,0,15,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,756,        return str.indexOf(searchChar);,2,0,0,1,2,1,6,0,0,8,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,815,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,857,"        return str.indexOf(searchStr, startPos);",2,0,0,1,2,1,8,0,0,11,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,894,"        return ordinalIndexOf(str, searchStr, ordinal, false);",0,0,0,1,2,1,6,0,0,8,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,913,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,915,        if (searchStr.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,916,            return lastIndex ? str.length() : 0;,4,0,0,1,2,1,4,0,0,8,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,919,        int index = lastIndex ? str.length() : INDEX_NOT_FOUND;,6,0,0,1,2,0,4,0,0,10,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,921,            if(lastIndex) {,2,0,0,1,3,0,0,0,0,2,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,924,"                index = str.indexOf(searchStr, index + 1);",4,1,0,1,2,0,6,0,0,12,42,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,926,            if (index < 0) {,8,2,0,1,3,0,0,0,0,10,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,929,            found++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,930,        } while (found < ordinal);,4,0,0,1,3,0,6,0,0,10,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,931,        return index;,12,1,0,0,0,1,6,0,0,20,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,959,"        return indexOfIgnoreCase(str, searchStr, 0);",6,1,0,1,2,1,6,0,0,14,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,995,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,997,        if (startPos < 0) {,12,2,0,1,3,0,12,0,0,28,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,998,            startPos = 0;,4,0,0,0,0,0,0,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1000,        int endLimit = (str.length() - searchStr.length()) + 1;,2,2,0,3,6,0,8,0,0,12,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1001,        if (startPos > endLimit) {,2,0,0,1,3,0,0,0,0,2,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1002,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,6,0,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1007,        for (int i = startPos; i < endLimit; i++) {,10,1,0,1,3,0,8,0,0,21,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1008,"            if (str.regionMatches(true, i, searchStr, 0, searchStr.length())) {",0,0,0,3,7,0,12,0,0,13,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1012,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,3,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1037,        if (isEmpty(str)) {,4,1,0,2,5,0,4,0,0,9,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1038,            return INDEX_NOT_FOUND;,4,1,0,0,0,1,20,0,0,25,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1074,"        return str.lastIndexOf(searchChar, startPos);",4,1,0,1,2,1,0,0,0,5,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1101,            return INDEX_NOT_FOUND;,6,1,0,0,0,2,0,4,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1140,"        return ordinalIndexOf(str, searchStr, ordinal, true);",4,1,0,1,2,1,0,0,0,5,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1172,        if (str == null || searchStr == null) {,6,3,0,1,3,0,0,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1175,"        return str.lastIndexOf(searchStr, startPos);",6,0,0,1,2,2,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1201,        if (str == null || searchStr == null) {,10,1,0,1,3,0,0,0,0,12,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1202,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1204,"        return lastIndexOfIgnoreCase(str, searchStr, str.length());",2,0,0,2,4,1,0,0,0,2,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1236,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,8,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1237,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1239,        if (startPos > (str.length() - searchStr.length())) {,2,2,0,4,9,0,8,0,0,12,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1242,        if (startPos < 0) {,0,0,0,1,3,0,6,0,0,6,19,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1243,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,3,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1249,        for (int i = startPos; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1254,        return INDEX_NOT_FOUND;,8,0,0,0,0,1,0,0,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1279,        if (isEmpty(str)) {,2,1,0,2,5,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1282,        return str.indexOf(searchChar) >= 0;,0,1,0,1,2,1,6,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1310,        return str.indexOf(searchStr) >= 0;,0,1,0,1,2,1,12,0,0,13,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1341,        int max = str.length() - len;,4,1,0,1,2,0,4,0,0,9,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1342,        for (int i = 0; i <= max; i++) {,14,2,0,1,3,0,0,0,0,17,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1343,"            if (str.regionMatches(true, i, searchStr, 0, len)) {",2,1,0,2,5,0,10,0,0,14,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1344,                return true;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1347,        return false;,8,2,0,0,0,1,4,0,0,16,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1363,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1364,        for (int i = 0; i < strLen; i++) {,2,0,0,1,3,0,0,0,0,2,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1365,            if (Character.isWhitespace(str.charAt(i))) {,4,1,0,3,7,0,10,0,0,15,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1399,            return INDEX_NOT_FOUND;,12,2,0,0,0,1,0,0,0,15,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1401,        int csLen = cs.length();,2,1,0,1,2,0,16,0,0,19,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1402,        int csLast = csLen - 1;,6,1,0,0,0,0,0,0,0,7,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1404,        int searchLast = searchLen - 1;,4,1,0,0,0,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1405,        for (int i = 0; i < csLen; i++) {,10,2,0,1,3,0,0,0,0,13,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1408,                if (searchChars[j] == ch) {,8,1,0,2,5,0,0,0,0,10,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1412,                            return i;,2,0,0,0,0,1,0,0,0,2,9,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1420,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,4,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1448,            return INDEX_NOT_FOUND;,8,2,0,0,0,1,4,0,0,15,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1482,        int csLength = cs.length();,2,0,0,1,2,0,4,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1485,        int searchLast = searchLength - 1;,4,1,0,0,0,0,0,0,0,5,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1486,        for (int i = 0; i < csLength; i++) {,10,2,0,1,3,0,0,0,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1487,            char ch = cs.charAt(i);,12,3,0,1,2,0,6,0,0,22,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1490,                    if (Character.isHighSurrogate(ch)) {,0,0,0,2,5,0,6,0,0,6,36,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1491,                        if (j == searchLast) {,10,1,0,1,3,0,10,0,0,23,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1536,        if (searchChars == null) {,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1569,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1571,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1572,        int csLast = csLen - 1;,4,1,0,0,0,0,0,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1573,        int searchLen = searchChars.length;,14,0,0,0,0,1,0,4,0,20,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1574,        int searchLast = searchLen - 1;,6,1,0,0,0,0,6,0,0,14,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1577,            char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1578,            for (int j = 0; j < searchLen; j++) {,10,1,0,1,3,0,0,0,0,12,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1579,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1582,                            continue outer;,2,0,0,0,0,0,0,0,0,2,15,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1589,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1591,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1622,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1623,            boolean chFound = searchChars.indexOf(ch) >= 0;,6,2,1,1,2,0,10,0,0,23,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1625,                char ch2 = str.charAt(i + 1);,4,1,0,1,2,0,4,0,0,9,29,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1626,                if (chFound && searchChars.indexOf(ch2) < 0) {,2,2,0,2,5,0,6,0,0,10,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1627,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1629,            } else {,0,0,0,0,2,0,6,0,0,6,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1630,                if (!chFound) {,4,1,0,1,3,0,0,0,0,6,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1631,                    return i;,8,2,0,0,0,1,18,0,0,28,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1664,        if (valid == null || cs == null) {,2,0,0,1,3,0,0,0,0,2,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1668,            return true;,2,1,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1671,            return false;,6,2,0,0,0,1,6,0,0,16,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1736,        int csLast = csLen - 1;,4,1,0,0,0,0,0,0,0,5,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1738,        int searchLast = searchLen - 1;,0,0,0,0,0,0,6,0,0,6,31,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1739,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1742,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1743,                    if (Character.isHighSurrogate(ch)) {,12,1,0,2,5,0,0,0,0,14,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1785,        if (cs == null || invalidChars == null) {,4,3,0,1,3,0,0,0,0,7,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1821,            return INDEX_NOT_FOUND;,4,1,1,0,0,1,0,0,0,9,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1823,        int sz = searchStrs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1826,        int ret = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1829,        for (int i = 0; i < sz; i++) {,12,2,1,1,3,0,0,0,0,22,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1830,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1831,            if (search == null) {,8,2,0,1,3,1,4,0,0,15,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1832,                continue;,0,1,0,0,0,0,8,0,0,9,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1835,            if (tmp == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1839,            if (tmp < ret) {,4,1,1,1,3,0,2,0,0,16,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1840,                ret = tmp;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1844,        return (ret == Integer.MAX_VALUE) ? INDEX_NOT_FOUND : ret;,10,1,0,1,2,1,10,0,0,21,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1874,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1876,        int sz = searchStrs.length;,8,0,0,0,0,0,0,0,0,8,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1877,        int ret = INDEX_NOT_FOUND;,4,0,0,0,0,0,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1879,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1881,            if (search == null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1886,                ret = tmp;,4,0,0,0,0,0,0,0,0,5,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1919,        if (str == null) {,0,1,0,1,3,0,12,0,0,13,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1929,            start = 0;,8,1,0,0,0,0,0,0,0,10,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1931,        if (start > str.length()) {,2,1,0,2,5,0,4,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1932,            return EMPTY;,12,1,0,0,0,1,12,0,0,26,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1974,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1975,            return null;,2,0,0,0,0,1,0,0,0,3,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1980,            end = str.length() + end; // remember end is negative,6,2,0,1,2,0,10,0,0,19,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1982,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1987,        if (end > str.length()) {,2,1,0,2,5,0,4,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1988,            end = str.length();,2,0,0,1,2,0,4,0,0,7,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1993,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,1996,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2000,            end = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2029,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2035,        if (str.length() <= len) {,12,2,1,2,5,0,6,0,0,29,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2036,            return str;,2,1,0,0,0,1,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2063,            return null;,4,1,0,0,0,1,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2065,        if (len < 0) {,4,2,0,1,3,0,0,0,0,6,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2066,            return EMPTY;,6,0,0,0,0,1,8,0,0,16,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2068,        if (str.length() <= len) {,2,1,0,2,5,0,4,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2069,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2071,        return str.substring(str.length() - len);,6,3,0,2,4,1,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2099,        if (str == null) {,6,1,0,1,3,0,0,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2100,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2106,            pos = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2144,        if (isEmpty(str) || separator == null) {,4,3,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2151,        if (pos == INDEX_NOT_FOUND) {,14,2,1,1,3,0,4,0,0,24,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2152,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2187,            return str;,8,5,1,0,0,1,0,0,0,23,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2190,            return EMPTY;,4,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2193,        if (pos == INDEX_NOT_FOUND) {,0,0,0,1,3,0,10,0,0,10,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2196,        return str.substring(pos + separator.length());,2,1,0,2,4,1,8,0,0,11,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2227,        if (isEmpty(str) || isEmpty(separator)) {,0,1,0,3,7,0,18,0,0,20,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2228,            return str;,2,0,0,0,0,1,0,0,0,3,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2230,        int pos = str.lastIndexOf(separator);,6,1,0,1,2,0,0,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2232,            return str;,2,0,0,0,0,1,10,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2268,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2270,        if (isEmpty(separator)) {,2,0,0,2,5,0,4,0,0,8,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2271,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2273,        int pos = str.lastIndexOf(separator);,2,0,0,1,2,0,6,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2274,        if (pos == INDEX_NOT_FOUND || pos == (str.length() - separator.length())) {,8,5,0,4,9,0,16,0,0,29,75,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2277,        return str.substring(pos + separator.length());,2,1,0,2,4,1,12,0,0,16,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2335,        if (str == null || open == null || close == null) {,8,5,0,1,3,0,0,0,0,13,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2338,        int start = str.indexOf(open);,2,0,0,1,2,0,6,0,0,8,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2339,        if (start != INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2340,"            int end = str.indexOf(close, start + open.length());",4,1,0,2,4,0,10,0,0,15,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2371,        if (str == null || isEmpty(open) || isEmpty(close)) {,4,3,0,3,7,0,14,0,0,23,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2374,        int strLen = str.length();,6,1,0,1,2,0,8,0,0,15,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2375,        if (strLen == 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2376,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2379,        int openLen = open.length();,4,0,0,1,2,0,4,0,0,10,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2380,        List<String> list = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,11,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2382,        while (pos < (strLen - closeLen)) {,6,2,0,2,5,0,0,0,0,8,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2387,            start += openLen;,6,0,0,0,0,0,0,0,0,7,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2388,"            int end = str.indexOf(close, start);",2,0,0,1,2,0,8,0,0,10,36,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2389,            if (end < 0) {,0,0,0,1,3,0,4,0,0,5,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2392,"            list.add(str.substring(start, end));",4,0,0,2,4,0,12,0,0,16,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2395,        if (list.isEmpty()) {,4,1,1,2,5,0,8,0,0,18,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2398,        return list.toArray(new String [list.size()]);,6,2,1,3,6,1,8,2,0,25,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2547,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",2,1,0,1,2,1,6,0,0,11,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2660,        if (str == null) {,10,3,0,1,3,0,0,0,0,13,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2672,"            return splitWorker(str, null, max, preserveAllTokens);",0,0,0,1,2,1,8,0,0,9,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2675,        int separatorLength = separator.length();,6,0,0,1,2,0,16,0,0,26,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2679,        int beg = 0;,10,1,0,0,0,0,0,0,0,11,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2682,"            end = str.indexOf(separator, beg);",2,0,0,1,2,0,8,0,0,11,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2684,            if (end > -1) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2685,                if (end > beg) {,2,0,1,1,3,0,0,2,0,8,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2690,                        substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2694,"                        substrings.add(str.substring(beg, end));",4,1,0,2,4,0,12,0,0,19,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2699,                        beg = end + separatorLength;,18,2,0,0,0,0,0,0,0,23,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2703,                    if (preserveAllTokens) {,6,0,0,1,3,0,8,0,0,14,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2704,                        numberOfSubstrings += 1;,2,0,0,0,0,0,0,0,0,2,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2706,                            end = len;,4,0,0,0,0,0,0,0,0,5,10,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2707,                            substrings.add(str.substring(beg));,0,0,0,2,4,0,10,0,0,10,35,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2709,                            substrings.add(EMPTY);,0,0,0,1,2,0,6,0,0,6,22,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2712,                    beg = end + separatorLength;,2,2,0,0,0,0,4,0,0,9,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2717,                end = len;,0,0,0,0,0,0,12,0,0,12,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2721,        return substrings.toArray(new String[substrings.size()]);,0,0,0,3,6,1,0,0,0,1,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2786,"        return splitWorker(str, separatorChar, true);",0,0,0,1,2,1,0,0,0,1,45,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2804,        if (str == null) {,7,6,0,1,3,0,0,0,0,13,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2805,            return null;,2,0,0,0,0,1,6,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2807,        int len = str.length();,6,0,0,1,2,0,4,0,0,11,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2808,        if (len == 0) {,2,1,0,1,3,0,6,0,0,9,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2812,"        int i = 0, start = 0;",4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2813,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2814,        boolean lastMatch = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2815,        while (i < len) {,4,1,0,1,3,0,6,0,0,11,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2816,            if (str.charAt(i) == separatorChar) {,0,1,0,2,5,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2818,"                    list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2819,                    match = false;,6,1,0,0,0,0,0,0,0,8,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2820,                    lastMatch = true;,8,3,0,0,0,0,0,0,0,13,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2825,            lastMatch = false;,8,0,0,0,0,0,8,0,0,20,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2827,            i++;,4,0,0,0,0,0,0,0,0,5,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2829,        if (match || (preserveAllTokens && lastMatch)) {,6,2,0,2,5,0,0,0,0,8,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2832,        return list.toArray(new String[list.size()]);,2,0,0,3,6,2,14,0,0,17,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2932,            return null;,2,0,1,0,0,1,0,0,0,7,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2934,        int len = str.length();,0,0,0,1,2,0,0,0,0,1,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2938,        List<String> list = new ArrayList<String>();,8,2,0,1,2,1,4,12,0,28,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2939,        int sizePlus1 = 1;,2,0,0,0,0,0,0,0,0,3,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2940,"        int i = 0, start = 0;",2,1,0,0,0,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2941,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2942,        boolean lastMatch = false;,2,0,0,0,0,0,0,0,0,2,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2943,        if (separatorChars == null) {,4,1,0,1,3,0,0,0,0,5,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2945,            while (i < len) {,20,5,0,1,3,0,0,0,0,29,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2947,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2949,                        if (sizePlus1++ == max) {,6,1,0,1,3,0,4,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2950,                            i = len;,4,0,0,0,0,0,0,0,0,5,8,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2951,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2959,                lastMatch = false;,4,1,0,0,0,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2960,                match = true;,4,0,0,0,0,0,8,0,0,15,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2961,                i++;,4,0,0,0,0,0,4,2,0,11,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2963,        } else if (separatorChars.length() == 1) {,4,0,0,2,6,0,0,4,0,8,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2965,            char sep = separatorChars.charAt(0);,2,0,0,1,2,0,4,0,0,6,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2966,            while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2967,                if (str.charAt(i) == sep) {,2,0,0,2,5,0,0,8,0,10,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2969,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2970,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,0,0,0,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2972,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2977,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2980,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2981,                match = true;,10,0,0,0,0,0,4,0,0,17,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2986,            while (i < len) {,6,2,0,1,3,0,0,0,0,8,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2987,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,2,0,0,3,7,0,0,0,0,2,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2988,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2990,                        if (sizePlus1++ == max) {,14,1,0,1,3,0,4,0,0,20,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2991,                            i = len;,0,1,0,0,0,0,8,0,0,9,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2992,                            lastMatch = false;,2,0,0,0,0,0,8,0,0,12,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2994,"                        list.add(str.substring(start, i));",0,0,0,2,4,0,12,0,0,12,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2995,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,13,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,2997,                    start = ++i;,2,0,1,0,0,0,0,2,0,8,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3000,                lastMatch = false;,2,0,0,0,0,0,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3001,                match = true;,2,0,0,0,0,0,0,0,0,4,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3002,                i++;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3005,        if (match || (preserveAllTokens && lastMatch)) {,6,2,0,2,5,0,0,0,0,8,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3008,        return list.toArray(new String[list.size()]);,2,0,0,3,6,1,0,0,0,2,45,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3081,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,8,0,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3083,        char[] c = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3086,        int currentType = Character.getType(c[tokenStart]);,2,0,1,2,4,0,4,0,0,10,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3088,            int type = Character.getType(c[pos]);,2,0,1,2,4,0,4,0,0,10,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3089,            if (type == currentType) {,6,1,0,1,3,0,0,0,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3092,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,14,4,0,1,3,0,0,0,0,18,99,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3094,                if (newTokenStart != tokenStart) {,2,0,1,1,3,0,0,0,0,7,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3095,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",8,1,0,2,4,0,4,2,0,15,64,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3096,                    tokenStart = newTokenStart;,8,3,0,0,0,0,8,0,0,20,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3100,                tokenStart = pos;,8,0,0,0,0,0,0,0,0,9,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3102,            currentType = type;,8,1,1,0,0,0,4,0,0,19,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3104,"        list.add(new String(c, tokenStart, c.length - tokenStart));",10,1,0,2,4,0,4,2,0,17,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3199,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3233,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3236,        int bufSize = (endIndex - startIndex);,8,1,0,1,2,0,0,0,0,10,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3237,        if (bufSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3238,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3242,        StringBuilder buf = new StringBuilder(bufSize);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3244,        for (int i = startIndex; i < endIndex; i++) {,10,1,0,1,3,0,0,0,0,12,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3252,        return buf.toString();,2,1,0,1,2,1,4,0,0,8,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3280,        if (array == null) {,2,2,1,1,3,0,0,0,0,6,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3283,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,12,0,0,16,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3314,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3315,            return null;,2,0,0,0,0,1,6,0,0,8,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3318,            separator = EMPTY;,12,1,0,0,0,0,0,0,0,15,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3323,        int bufSize = (endIndex - startIndex);,10,2,0,1,2,0,0,0,0,12,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3324,        if (bufSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3325,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3328,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),0,0,0,5,11,0,0,0,0,1,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3333,        for (int i = startIndex; i < endIndex; i++) {,14,2,0,1,3,0,0,0,0,17,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3337,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,6,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3367,        Object first = iterator.next();,2,0,0,1,2,0,4,2,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3373,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",2,0,0,1,2,0,0,4,0,6,85,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3379,            buf.append(separator);,4,3,0,1,2,0,10,0,0,18,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3381,            if (obj != null) {,4,3,0,1,3,0,8,0,0,15,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3406,            return null;,2,0,0,0,0,1,10,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3411,        Object first = iterator.next();,0,0,0,1,2,0,8,0,0,8,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3419,            buf.append(first);,4,0,0,1,2,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3423,            if (separator != null) {,4,2,0,1,3,0,0,0,0,6,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3426,            Object obj = iterator.next();,4,0,0,1,2,0,4,2,0,10,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3427,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3431,        return buf.toString();,0,1,0,1,2,1,10,0,0,12,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3449,        if (iterable == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3470,        if (iterable == null) {,2,1,1,1,3,0,0,0,0,7,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3471,            return null;,2,0,0,0,0,1,4,0,0,6,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3493,        if (isEmpty(str)) {,4,1,1,2,5,0,10,0,0,22,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3494,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3497,        char[] chs = new char[sz];,2,0,1,2,4,0,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3498,        int count = 0;,8,0,0,0,0,0,0,0,0,10,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3501,                chs[count++] = str.charAt(i);,4,0,1,2,4,0,6,0,0,14,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3504,        if (count == sz) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3505,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3507,"        return new String(chs, 0, count);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3537,        if (isEmpty(str) || isEmpty(remove)) {,8,2,0,3,7,0,8,0,0,19,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3538,            return str;,2,0,0,0,0,1,0,0,0,3,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3543,        return str;,2,0,0,0,0,1,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3572,        if (isEmpty(str) || isEmpty(remove)) {,2,1,0,3,7,0,0,0,0,3,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3607,            return str;,10,1,0,0,0,2,0,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3609,        if (str.endsWith(remove)) {,4,1,0,2,5,0,6,0,0,11,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3612,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3642,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,8,0,0,9,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3643,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3646,"            return str.substring(0, str.length() - remove.length());",0,1,0,3,6,1,12,0,0,13,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3648,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3676,            return str;,10,0,0,0,0,1,4,0,0,15,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3702,            return str;,6,0,0,0,0,1,4,2,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3704,        char[] chars = str.toCharArray();,4,0,0,2,4,0,4,0,0,8,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3705,        int pos = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3708,                chars[pos++] = chars[i];,2,0,1,2,4,0,0,0,0,10,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3767,"        return replace(text, searchString, replacement, -1);",8,3,0,1,2,1,0,2,0,14,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3800,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3803,"        int end = text.indexOf(searchString, start);",4,0,0,1,2,0,8,0,0,12,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3804,        if (end == INDEX_NOT_FOUND) {,4,0,0,1,3,0,0,0,0,5,29,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3808,        int increase = replacement.length() - replLength;,2,0,0,1,2,0,4,0,0,6,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3809,        increase = (increase < 0 ? 0 : increase);,6,1,0,1,2,0,0,0,0,8,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3810,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,8,2,0,2,4,0,8,0,0,19,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3811,        StringBuilder buf = new StringBuilder(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3812,        while (end != INDEX_NOT_FOUND) {,2,1,0,1,3,0,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3813,"            buf.append(text.substring(start, end)).append(replacement);",14,1,0,3,6,0,16,0,0,32,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3818,"            end = text.indexOf(searchString, start);",4,0,0,1,2,0,8,0,0,13,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3821,        return buf.toString();,4,1,0,1,2,1,10,0,0,15,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3977,            return text;,2,0,0,0,0,1,16,0,0,18,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3982,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",12,4,0,1,2,0,4,2,0,24,92,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3985,        int searchLength = searchList.length;,6,0,0,0,0,0,0,0,0,6,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3990,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0,0,0,0,1,0,10,0,0,10,83,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,3997,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,2,0,1,2,4,0,0,0,0,4,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4000,        int textIndex = -1;,6,1,0,0,0,0,8,0,0,16,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4001,        int replaceIndex = -1;,2,1,0,0,0,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4007,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||,6,8,1,2,5,0,4,2,0,28,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4012,            tempIndex = text.indexOf(searchList[i]);,0,0,0,2,4,0,4,0,0,4,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4019,                    textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4020,                    replaceIndex = i;,8,3,0,0,0,0,4,0,0,16,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4028,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4034,        int increase = 0;,2,1,0,0,0,0,0,0,0,4,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4037,        for (int i = 0; i < searchList.length; i++) {,12,1,0,1,3,0,0,0,0,14,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4038,            if (searchList[i] == null || replacementList[i] == null) {,4,6,1,3,7,0,0,0,0,18,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4041,            int greater = replacementList[i].length() - searchList[i].length();,2,1,1,4,8,0,4,0,0,15,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4047,"        increase = Math.min(increase, text.length() / 5);",4,1,0,2,4,0,10,0,0,16,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4051,        while (textIndex != -1) {,2,1,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4058,            start = textIndex + searchList[replaceIndex].length();,4,1,1,2,4,0,2,0,0,12,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4065,            for (int i = 0; i < searchLength; i++) {,8,1,0,1,3,0,8,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4066,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||,0,4,1,2,5,0,6,0,0,18,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4071,"                tempIndex = text.indexOf(searchList[i], start);",4,0,1,2,4,0,6,2,0,17,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4074,                if (tempIndex == -1) {,6,1,0,1,3,0,8,0,0,16,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4077,                    if (textIndex == -1 || tempIndex < textIndex) {,6,3,0,1,3,0,0,0,0,10,47,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4078,                        textIndex = tempIndex;,10,3,0,0,0,0,0,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4079,                        replaceIndex = i;,6,0,0,0,0,1,6,0,0,14,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4086,        int textLength = text.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4087,        for (int i = start; i < textLength; i++) {,12,1,0,1,3,0,0,0,0,15,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4088,            buf.append(text.charAt(i));,0,0,0,2,4,0,10,0,0,10,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4090,        String result = buf.toString();,2,0,0,1,2,0,4,2,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4091,        if (!repeat) {,4,1,0,1,3,0,0,0,0,6,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4092,            return result;,2,0,0,0,0,1,0,0,0,2,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4095,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",2,1,0,1,2,1,14,0,0,17,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4164,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4165,            return str;,10,3,0,0,0,1,0,0,0,14,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4167,        if (replaceChars == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4168,            replaceChars = EMPTY;,2,0,0,0,0,0,6,4,0,12,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4170,        boolean modified = false;,2,0,0,0,0,0,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4172,        int strLength = str.length();,2,0,0,1,2,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4174,        for (int i = 0; i < strLength; i++) {,8,1,0,1,3,0,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4176,            int index = searchChars.indexOf(ch);,8,0,0,1,2,0,10,0,0,18,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4177,            if (index >= 0) {,4,1,0,1,3,0,0,0,0,5,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4179,                if (index < replaceCharsLength) {,4,1,0,1,3,0,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4186,        if (modified) {,2,0,0,1,3,0,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4225,            return null;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4227,        if (overlay == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4228,            overlay = EMPTY;,0,0,0,0,0,0,0,0,0,1,16,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4231,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4235,            start = len;,6,1,1,0,0,0,0,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4238,            end = 0;,6,3,0,0,0,0,0,0,0,10,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4243,        if (start > end) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4244,            int temp = start;,4,0,0,0,0,0,6,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4246,            end = temp;,4,0,0,0,0,0,0,0,0,5,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4248,        return new StringBuilder(len + start - end + overlay.length() + 1),6,4,0,2,4,1,4,2,0,16,66,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4284,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4288,            char ch = str.charAt(0);,4,0,0,1,2,0,4,0,0,10,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4290,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4292,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4295,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4299,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,8,2,0,2,5,0,4,0,0,15,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4303,            lastIdx++;,8,0,0,0,0,0,0,0,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4305,"        return str.substring(0, lastIdx);",2,0,0,1,2,1,0,0,0,2,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4339,"            return str.substring(0, str.length() - separator.length());",4,0,0,3,6,1,4,0,0,9,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4370,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4373,        int strLen = str.length();,12,4,1,1,2,1,4,0,0,23,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4374,        if (strLen < 2) {,6,3,0,1,3,0,0,0,0,9,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4375,            return EMPTY;,10,3,0,0,0,1,0,0,0,13,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4377,        int lastIdx = strLen - 1;,4,1,0,0,0,0,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4378,"        String ret = str.substring(0, lastIdx);",2,1,0,1,2,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4379,        char last = str.charAt(lastIdx);,2,0,0,1,2,0,6,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4381,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4385,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4415,            return null;,2,0,0,0,0,1,0,0,0,4,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4417,        if (repeat <= 0) {,0,0,0,1,3,0,12,0,0,12,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4420,        int inputLength = str.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4421,        if (repeat == 1 || inputLength == 0) {,4,3,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4422,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4424,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4425,"            return padding(repeat, str.charAt(0));",8,2,0,2,4,1,8,0,0,18,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4429,        switch (inputLength) {,4,0,0,1,3,0,6,2,0,12,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4431,                char ch = str.charAt(0);,4,1,0,1,2,0,4,0,0,9,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4432,                char[] output1 = new char[outputLength];,2,0,1,2,4,0,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4433,                for (int i = repeat - 1; i >= 0; i--) {,8,2,0,1,3,0,0,0,0,11,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4434,                    output1[i] = ch;,6,0,1,1,2,1,0,2,0,14,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4441,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",12,4,0,1,3,1,8,0,0,27,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4443,                    output2[i + 1] = ch1;,4,1,1,1,2,0,0,0,0,8,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4447,                StringBuilder buf = new StringBuilder(outputLength);,12,0,0,1,2,0,8,4,0,24,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4448,                for (int i = 0; i < repeat; i++) {,14,2,0,1,3,0,0,0,0,17,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4449,                    buf.append(str);,2,0,0,1,2,0,6,2,0,10,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4476,        if(str == null || separator == null) {,0,0,1,1,3,0,0,0,0,2,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4477,"            return repeat(str, repeat);",2,1,0,1,2,1,6,0,0,9,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4509,        if (repeat < 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4510,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",2,1,0,1,2,0,0,2,0,6,79,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4512,        final char[] buf = new char[repeat];,4,1,0,2,4,0,4,0,0,9,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4513,        for (int i = 0; i < buf.length; i++) {,10,1,0,1,3,0,0,0,0,12,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4514,            buf[i] = padChar;,2,0,1,1,2,0,0,0,0,7,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4516,        return new String(buf);,2,0,0,1,2,1,0,2,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4564,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4567,        int pads = size - str.length();,4,1,0,1,2,0,4,0,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4571,        if (pads > PAD_LIMIT) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4607,        int padLen = padStr.length();,4,0,0,1,2,0,4,0,0,8,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4613,        if (padLen == 1 && pads <= PAD_LIMIT) {,2,1,0,1,3,0,8,0,0,11,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4614,"            return rightPad(str, size, padStr.charAt(0));",0,0,0,2,4,1,10,0,0,10,45,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4622,            char[] padding = new char[pads];,4,1,0,2,4,0,10,0,0,15,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4624,            for (int i = 0; i < pads; i++) {,14,2,0,1,3,0,10,0,0,28,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4625,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4627,            return str.concat(new String(padding));,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4679,        int pads = size - str.length();,4,1,0,1,2,0,4,0,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4681,            return str; // returns original String when possible,4,1,0,0,0,1,0,0,0,5,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4686,"        return padding(pads, padChar).concat(str);",0,0,0,2,4,1,18,0,0,19,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4720,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4721,        int pads = size - strLen;,2,1,0,0,0,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4722,        if (pads <= 0) {,2,1,0,1,3,0,4,0,0,8,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4723,            return str; // returns original String when possible,4,0,0,0,0,1,0,0,0,4,52,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4726,"            return leftPad(str, size, padStr.charAt(0));",2,0,0,2,4,1,10,0,0,14,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4734,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4735,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4736,            for (int i = 0; i < pads; i++) {,2,0,0,1,3,0,0,0,0,2,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4737,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4739,            return new String(padding).concat(str);,8,3,1,2,4,1,12,2,0,38,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4814,        if (str == null || size <= 0) {,6,4,0,1,3,0,0,0,0,10,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4815,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4818,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4822,"        str = leftPad(str, strLen + pads / 2, padChar);",6,2,0,1,2,0,6,0,0,15,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4824,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4854,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4855,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4857,        if (isEmpty(padStr)) {,2,1,0,2,5,0,4,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4860,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4861,        int pads = size - strLen;,0,0,0,0,0,0,0,0,0,1,25,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4863,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4865,"        str = leftPad(str, strLen + pads / 2, padStr);",10,3,0,1,2,0,6,0,0,20,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4866,"        str = rightPad(str, size, padStr);",6,0,0,1,2,0,8,0,0,16,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4892,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4895,        return str.toUpperCase();,8,1,0,1,2,1,4,0,0,14,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4915,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4916,            return null;,0,1,0,0,0,1,10,0,0,12,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4941,        if (str == null) {,2,1,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4942,            return null;,2,1,0,0,0,1,0,2,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4964,        if (str == null) {,2,1,0,1,3,0,6,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4965,            return null;,0,0,1,0,0,1,6,0,0,11,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4967,        return str.toLowerCase(locale);,0,0,0,1,2,1,12,0,0,12,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4993,            return null;,4,1,0,0,0,1,4,0,0,10,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,4996,        if ((strLen = cs.length()) == 0) {,2,0,1,3,7,0,0,0,0,5,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5027,        if (cs == null ) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5034,        return new StringBuilder(strLen),4,0,0,1,2,1,0,2,0,8,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5070,            return str;,10,0,1,0,0,1,0,0,0,19,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5072,        StringBuilder buffer = new StringBuilder(strLen);,10,2,0,1,2,0,4,4,0,21,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5074,        char ch = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5075,        for (int i = 0; i < strLen; i++) {,14,4,0,1,3,0,0,0,0,19,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5076,            ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,9,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5078,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5079,            } else if (Character.isTitleCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5080,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,31,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5081,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,6,0,0,6,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5082,                ch = Character.toUpperCase(ch);,8,1,0,1,2,0,6,0,0,17,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5086,        return buffer.toString();,0,1,0,1,2,1,16,0,0,17,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5111,        if (isEmpty(str) || isEmpty(sub)) {,0,1,0,3,7,0,8,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5112,            return 0;,4,0,0,0,0,1,0,0,0,5,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5115,        int idx = 0;,2,1,0,0,0,0,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5116,"        while ((idx = str.indexOf(sub, idx)) != INDEX_NOT_FOUND) {",4,1,0,3,7,0,8,0,0,14,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5117,            count++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5118,            idx += sub.length();,6,3,0,1,2,0,0,0,0,9,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5120,        return count;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5149,        for (int i = 0; i < sz; i++) {,10,2,0,1,3,0,0,0,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5151,                return false;,0,0,0,0,0,1,12,0,0,13,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5180,        if (cs == null) {,2,1,0,1,3,0,4,0,0,7,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5181,            return false;,6,1,0,0,0,1,4,0,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5183,        int sz = cs.length();,4,1,0,1,2,0,4,0,0,9,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5185,            if ((Character.isLetter(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {,2,0,0,6,13,0,0,0,0,4,75,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5214,        if (cs == null) {,22,3,0,1,3,1,0,2,0,30,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5215,            return false;,2,0,0,0,0,2,4,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5218,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5219,            if (Character.isLetterOrDigit(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5250,            return false;,8,1,0,0,0,1,0,0,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5252,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5253,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5254,            if ((Character.isLetterOrDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {,4,3,0,6,13,0,16,0,0,28,82,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5255,                return false;,6,2,0,0,0,1,4,0,0,16,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5258,        return true;,8,2,0,0,0,1,0,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5288,        if (cs == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5291,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5293,            if (CharUtils.isAsciiPrintable(cs.charAt(i)) == false) {,2,0,0,3,7,0,0,0,0,2,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5323,        if (cs == null) {,4,1,0,1,3,0,0,0,0,5,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5326,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5327,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,4,0,0,14,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5329,                return false;,0,0,0,0,0,1,4,0,0,5,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5332,        return true;,10,1,0,0,0,1,0,0,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5363,        int sz = cs.length();,4,0,0,1,2,0,4,0,0,8,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5364,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5365,            if ((Character.isDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {,0,0,0,6,13,0,0,0,0,19,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5394,            return false;,6,3,0,0,0,1,0,0,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5396,        int sz = cs.length();,4,1,0,1,2,0,4,2,0,12,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5428,        int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5429,        for (int i = 0; i < sz; i++) {,14,4,0,1,3,0,0,0,0,19,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5430,            if (Character.isLowerCase(cs.charAt(i)) == false) {,2,1,0,3,7,0,10,0,0,14,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5466,        return true;,0,0,1,0,0,1,0,0,0,9,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5488,        return str == null ? EMPTY : str;,6,1,0,0,0,1,0,0,0,7,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5509,        return str == null ? defaultStr : str;,6,1,0,0,0,1,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5530,        return StringUtils.isEmpty(str) ? defaultStr : str;,6,0,0,1,2,1,6,0,0,12,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5550,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5553,        return new StringBuilder(str).reverse().toString();,6,0,0,3,6,1,4,2,0,13,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5582,        ArrayUtils.reverse(strs);,2,0,1,1,2,0,10,0,0,17,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5583,"        return join(strs, separatorChar);",0,0,0,1,2,1,16,0,0,16,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5660,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5661,            return null;,10,1,0,0,0,1,0,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5663,        if (maxWidth < 4) {,6,1,0,1,3,1,6,0,0,14,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5666,        if (str.length() <= maxWidth) {,2,0,0,2,5,0,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5669,        if (offset > str.length()) {,0,0,0,2,5,0,12,0,0,12,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5670,            offset = str.length();,2,0,0,1,2,0,4,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5673,            offset = str.length() - (maxWidth - 3);,6,3,0,2,4,0,4,0,0,14,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5676,        if (offset <= 4) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5677,"            return str.substring(0, maxWidth - 3) + abrevMarker;",4,2,0,1,2,1,4,0,0,10,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5682,        if ((offset + (maxWidth - 3)) < str.length()) {,4,3,0,4,9,0,4,0,0,11,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5685,        return abrevMarker + str.substring(str.length() - (maxWidth - 3));,2,0,0,3,6,1,0,0,0,2,66,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5718,        if (isEmpty(str) || isEmpty(middle)) {,0,1,1,3,7,0,12,0,0,17,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5719,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5723,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5727,        int startOffset = targetSting/2+targetSting%2;,6,3,0,0,0,0,6,0,0,15,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5733,        builder.append(str.substring(endOffset));,6,0,0,2,4,0,14,0,0,20,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5766,        if (str1 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5767,            return str2;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5769,        if (str2 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5770,            return str1;,4,0,0,0,0,1,0,0,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5772,"        int at = indexOfDifference(str1, str2);",2,0,0,1,2,0,6,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5773,        if (at == INDEX_NOT_FOUND) {,4,1,0,1,3,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5774,            return EMPTY;,4,0,0,0,0,1,0,4,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5804,        if (cs1 == cs2) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5807,        if (cs1 == null || cs2 == null) {,6,3,0,1,3,0,0,0,0,9,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5819,        return INDEX_NOT_FOUND;,6,1,0,0,0,1,0,0,0,7,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5855,        if (css == null || css.length <= 1) {,8,3,0,1,3,0,6,0,0,18,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5856,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5859,        boolean allStringsNull = true;,2,0,1,0,0,0,0,0,0,5,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5860,        int arrayLen = css.length;,6,0,0,0,0,0,0,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5861,        int shortestStrLen = Integer.MAX_VALUE;,8,1,0,0,0,0,0,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5862,        int longestStrLen = 0;,2,0,0,0,0,0,0,0,0,2,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5867,        for (int i = 0; i < arrayLen; i++) {,14,2,0,1,3,0,12,0,0,29,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5868,            if (css[i] == null) {,0,1,1,2,5,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5869,                anyStringNull = true;,6,0,0,0,0,0,4,2,0,15,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5870,                shortestStrLen = 0;,6,0,0,0,0,0,0,0,0,8,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5873,"                shortestStrLen = Math.min(css[i].length(), shortestStrLen);",6,0,1,3,6,0,20,0,0,31,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5879,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,6,3,0,2,5,0,6,0,0,16,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5880,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5884,        if (shortestStrLen == 0) {,2,1,0,1,3,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5891,            char comparisonChar = css[0].charAt(stringPos);,2,0,1,2,4,0,4,0,0,8,47,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5892,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,16,2,0,1,3,0,0,2,0,23,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5893,                if (css[arrayPos].charAt(stringPos) != comparisonChar) {,2,1,1,3,7,0,4,0,0,11,56,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5895,                    break;,6,1,0,0,0,0,0,0,0,7,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5898,            if (firstDiff != -1) {,2,1,0,1,3,0,0,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5899,                break;,2,1,0,0,0,0,0,0,0,3,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5903,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,10,4,0,1,3,0,0,0,0,15,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5907,            return shortestStrLen;,2,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5946,        if (strs == null || strs.length == 0) {,0,1,0,1,3,0,8,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5952,            if (strs[0] == null) {,0,1,1,2,5,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5956,        } else if (smallestIndexOfDiff == 0) {,6,0,0,1,4,0,0,0,0,7,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,5961,"            return strs[0].substring(0, smallestIndexOfDiff);",4,2,0,2,4,1,0,0,0,6,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6003,        if (s == null || t == null) {,4,3,0,1,3,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6024,        int n = s.length(); // length of s,6,0,1,1,2,0,4,0,0,13,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6027,        if (n == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6028,            return m;,4,1,1,0,0,2,0,0,0,9,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6029,        } else if (m == 0) {,2,0,1,1,4,0,0,0,0,7,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6030,            return n;,4,0,0,0,0,1,0,0,0,4,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6033,        if (n > m) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6035,            CharSequence tmp = s;,4,0,0,0,0,0,0,2,0,6,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6036,            s = t;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6037,            t = tmp;,14,1,0,0,0,0,0,0,0,18,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6039,            m = t.length();,6,5,1,1,2,0,8,0,0,32,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6042,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",4,1,0,2,4,0,0,0,0,5,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6043,"        int d[] = new int[n+1]; // cost array, horizontally",6,1,0,2,4,0,0,0,0,7,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6054,        for (i = 0; i<=n; i++) {,12,2,1,1,3,0,0,0,0,23,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6055,            p[i] = i;,2,0,1,1,2,0,0,0,0,7,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6058,        for (j = 1; j<=m; j++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6059,            t_j = t.charAt(j-1);,2,0,0,1,2,0,6,0,0,8,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6062,            for (i=1; i<=n; i++) {,8,1,0,1,3,0,0,0,0,11,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6063,                cost = s.charAt(i-1)==t_j ? 0 : 1;,6,2,0,1,2,0,4,0,0,13,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6065,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",6,5,1,6,12,0,8,0,0,32,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6069,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6070,            p = d;,4,0,0,0,0,0,0,0,0,6,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6071,            d = _d;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6076,        return p[n];,4,1,1,1,2,1,8,0,0,18,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6145,            return (str == null && prefix == null);,4,3,0,1,2,1,0,0,0,7,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6147,        if (prefix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6148,            return false;,4,1,0,0,0,1,0,0,0,6,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6150,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",4,1,0,2,4,1,12,0,0,17,68,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6173,            return false;,4,1,0,0,0,1,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6177,"            if (StringUtils.startsWith(string, searchString)) {",2,0,1,2,5,0,0,0,0,7,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6178,                return true;,0,0,1,0,0,1,0,0,0,4,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6236,"        return endsWith(str, suffix, true);",4,1,0,1,2,1,6,0,0,13,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6252,            return str == null && suffix == null;,6,1,0,0,0,1,6,0,0,13,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6254,        if (suffix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/StringUtils,27,6258,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",8,5,1,2,4,1,18,0,0,39,76,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,57,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);",2,0,0,3,6,0,14,0,0,17,77,10,0.5,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,            return 2 + (end - start) + (isHex ? 1 : 0) + 1;,6,2,0,2,4,1,0,0,0,8,47,6,0.5,1,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,38,            int start = index + 2;,4,1,0,0,0,0,0,0,0,5,22,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,39,            boolean isHex = false;,2,0,0,0,0,0,0,0,0,3,22,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,41,            char firstChar = input.charAt(start);,2,0,0,1,2,0,6,0,0,8,37,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,42,            if(firstChar == 'x' || firstChar == 'X') {,4,3,0,1,3,0,0,0,0,9,42,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,47,            int end = start;,4,0,0,0,0,0,0,0,0,4,16,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,48,            while(input.charAt(end) != ';') {,0,1,0,2,5,0,6,0,0,8,33,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,49,                end++;,2,0,0,0,0,0,0,0,0,3,6,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,54,                if(isHex) {,2,0,0,1,3,0,0,0,0,2,11,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,37,        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {,2,4,0,3,7,0,10,0,0,18,66,4,0.125,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,93,                for(int j=0; j<consumed; j++) {,8,1,0,1,3,0,0,0,0,10,31,8,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,95,"                        i += Character.charCount( Character.codePointAt(input, i) );",2,0,0,2,4,0,12,0,0,15,60,12,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,102,                i--;,2,0,0,0,0,0,0,0,0,3,4,8,0.07143,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,54,        if (input == null) {,6,2,0,1,3,0,6,0,0,15,20,4,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,28,58,            StringWriter writer = new StringWriter(input.length() * 2);  // TODO: Make the 2 part of the API???,2,1,0,2,4,0,4,4,0,11,99,6,0.0625,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1717,            return ArrayUtils.EMPTY_INT_ARRAY;,4,0,0,0,0,1,0,0,0,4,34,7,1.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,4,0,0,2,4,5,0,4,0,13,74,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,4,0,0,2,4,6,4,2,0,17,61,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,22,7,0,2,4,6,8,4,0,51,64,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,8,3,0,2,4,3,16,6,0,37,74,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,4,4,0,15,80,1,0.00485,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,104,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,127,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,0,4,0,9,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,146,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",4,0,0,1,2,3,6,4,0,18,80,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,165,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",6,0,0,1,2,3,2,2,0,15,80,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,184,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",4,1,0,1,2,3,2,2,0,13,92,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,206,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,225,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,244,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,263,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,283,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,302,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",2,0,0,1,2,3,2,2,0,10,88,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,321,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",4,0,0,1,2,6,2,2,0,15,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,340,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,4,0,0,1,2,3,8,4,0,19,72,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,359,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,2,0,0,1,2,3,4,2,0,11,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,378,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",10,3,0,1,2,6,8,6,0,34,86,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,398,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,0,0,0,0,2,86,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,437,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",2,0,0,1,2,3,2,2,0,10,98,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,456,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,102,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,475,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",2,0,0,1,2,3,2,2,0,10,104,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,495,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = getSystemProperty(""java.util.prefs.PreferencesFactory"");",10,1,0,1,2,3,2,2,0,20,121,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,514,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,0,1,2,3,2,2,0,10,74,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,533,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,0,0,1,2,3,2,2,0,10,82,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,552,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",4,0,0,1,2,3,2,4,0,14,76,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,572,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,2,0,10,76,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,591,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,610,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,629,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,108,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,648,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,724,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,743,"    public static final String OS_NAME = getSystemProperty(""os.name"");",6,3,0,1,2,0,8,0,0,17,66,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,781,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,802,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ? getSystemProperty(""user.region"")",0,0,0,2,4,0,6,0,0,6,118,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,880,"    public static final String USER_NAME = getSystemProperty(""user.name"");",2,0,0,1,2,3,2,2,0,10,70,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,899,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,917,    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();,2,0,0,1,2,3,2,2,0,9,74,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,964,    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();,2,0,0,1,2,3,2,0,0,7,65,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,980,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,991,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",2,1,0,1,2,0,0,0,0,3,71,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1013,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",2,0,0,1,2,0,0,2,0,4,71,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1024,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1035,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1069,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",2,0,0,1,2,3,2,0,0,8,64,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1082,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",6,1,0,1,2,6,4,0,0,20,68,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1095,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",4,1,0,1,2,3,2,0,0,11,66,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1134,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",4,0,0,1,2,3,6,2,0,17,73,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1147,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",6,0,0,1,2,3,2,0,0,13,65,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1160,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",2,0,0,1,2,3,2,0,0,8,72,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1186,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX || IS_OS_SOLARIS,14,2,0,0,0,3,4,0,0,23,128,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1200,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,6,0,0,1,2,3,0,4,0,13,85,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1226,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",2,0,0,1,2,0,4,4,0,10,98,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1254,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",4,0,0,1,2,3,4,0,0,12,91,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1268,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",10,4,0,1,2,3,12,0,0,30,96,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1282,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",2,0,0,1,2,3,4,0,0,10,91,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1296,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",2,0,0,1,2,3,4,0,0,10,94,2,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1364,"        return toVersionFloat(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",2,1,0,2,4,1,0,0,0,3,95,7,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1388,"        return toVersionInt(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",4,0,0,2,4,1,6,0,0,10,93,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1411,            for (int i = 0; i < JAVA_VERSION.length(); i++) {,6,1,0,2,5,0,8,0,0,16,49,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1412,                char ch = JAVA_VERSION.charAt(i);,2,0,0,1,2,0,14,0,0,17,33,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1574,        if (version == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1597,        if (osName == null || osVersion == null) {,4,3,0,1,3,0,0,0,0,7,42,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1600,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,0,1,0,2,4,1,12,0,0,13,80,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1616,        if (osName == null) {,2,0,0,1,3,0,0,0,0,2,21,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1619,        return osName.startsWith(osNamePrefix);,2,0,0,1,2,4,6,2,0,15,39,0,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1719,"        String[] strings = Pattern.compile(""[^\\d]"").split(version);",2,0,0,4,8,0,8,2,0,13,60,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1725,                ints[j++] = Integer.parseInt(s);,8,0,1,2,4,0,14,4,0,31,32,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1752,        if (javaVersions == null || javaVersions.length == 0) {,2,0,0,1,3,0,0,2,0,4,55,6,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1755,        if (javaVersions.length == 1) {,6,1,0,1,3,2,0,4,0,13,31,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1758,        StringBuilder builder = new StringBuilder();,2,0,0,1,2,0,0,4,0,6,44,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1759,        builder.append(javaVersions[0]);,0,0,1,2,4,0,4,0,0,6,32,5,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1765,            return Float.parseFloat(builder.toString());,2,1,0,2,4,1,8,0,0,11,44,3,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1792,        if (javaVersions == null) {,2,1,0,1,3,0,0,0,0,3,27,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1795,        int intVersion = 0;,2,0,0,0,0,0,0,2,0,5,19,8,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1796,        int len = javaVersions.length;,2,0,0,0,0,2,10,0,0,14,30,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1797,        if (len >= 1) {,2,1,0,1,3,0,0,0,0,3,15,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1798,            intVersion = javaVersions[0] * 100;,10,1,1,1,2,6,2,4,0,28,35,1,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1800,        if (len >= 2) {,2,0,0,1,3,0,0,2,0,4,15,8,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1806,        return intVersion;,2,0,0,0,0,1,0,0,0,2,18,4,0.00412,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,145,      super();,2,0,0,1,2,3,2,2,0,10,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,181,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",10,2,0,3,6,1,6,0,0,20,87,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,195,"        return new EqualsBuilder().append(array1, array2).isEquals();",6,1,0,3,6,1,6,0,0,15,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,226,        if (array == null) {,2,1,0,1,3,0,4,0,0,7,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,232,"            if (object instanceof Map.Entry<?, ?>) {",12,1,0,1,3,3,6,4,0,26,40,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,236,                Object[] entry = (Object[]) object;,2,0,0,3,6,3,2,2,0,10,35,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,242,"                map.put(entry[0], entry[1]);",6,4,0,3,6,0,4,0,0,14,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,244,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",6,1,0,0,1,0,4,2,0,13,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,249,        return map;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,328,        if (array == null) {,4,1,0,1,3,0,0,4,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,331,        return array.clone();,8,1,0,1,2,1,4,0,0,14,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,344,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,360,        if (array == null) {,6,0,0,1,3,0,0,0,0,7,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,361,            return null;,8,1,0,0,0,1,0,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,376,        if (array == null) {,14,2,0,1,3,0,0,2,0,20,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,377,            return null;,6,1,0,0,0,1,6,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,392,        if (array == null) {,4,0,0,1,3,0,4,0,0,8,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,408,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,424,        if (array == null) {,2,0,0,1,3,0,2,2,0,6,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,427,        return array.clone();,2,0,0,1,2,1,4,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,440,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,463,            return EMPTY_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,483,            return EMPTY_STRING_ARRAY;,6,1,0,0,0,1,2,4,0,13,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,503,            return EMPTY_LONG_ARRAY;,2,0,0,0,0,4,2,0,0,8,24,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,522,        if (array == null || array.length == 0) {,8,3,0,1,3,0,0,0,0,12,41,0,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,523,            return EMPTY_INT_ARRAY;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,525,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,542,        if (array == null || array.length == 0) {,10,4,0,1,3,0,0,0,0,14,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,543,            return EMPTY_SHORT_ARRAY;,4,0,0,0,0,1,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,545,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,562,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,563,            return EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,565,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,583,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,585,        return array;,10,7,0,0,0,1,4,0,0,21,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,602,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,603,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,622,        if (array == null || array.length == 0) {,2,0,0,1,3,0,6,0,0,8,41,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,623,            return EMPTY_FLOAT_ARRAY;,2,0,0,0,0,4,4,2,0,11,25,2,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,625,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,642,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,643,            return EMPTY_BOOLEAN_ARRAY;,4,0,0,0,0,1,0,0,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,662,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,663,            return EMPTY_LONG_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,665,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,682,        if (array == null || array.length == 0) {,6,3,0,1,3,0,4,0,0,13,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,683,            return EMPTY_INTEGER_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,3,34,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,685,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,703,            return EMPTY_SHORT_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,705,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,762,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,763,            return EMPTY_DOUBLE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,765,        return array;,0,0,0,0,0,1,6,0,0,7,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,783,            return EMPTY_FLOAT_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,803,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,14,2,0,0,0,2,0,4,0,21,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,805,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,838,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,839,            return null;,6,0,0,0,0,2,0,0,0,7,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,841,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,842,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,848,        Class<?> type = array.getClass().getComponentType();,4,0,0,2,4,0,8,2,0,14,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,852,            return emptyArray;,4,1,1,0,0,1,6,0,0,16,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,883,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,4,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,884,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,887,            endIndexExclusive = array.length;,6,0,0,0,0,0,8,2,0,19,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,890,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,895,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0,0,0,1,2,0,12,0,0,12,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,919,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,922,        if (startIndexInclusive < 0) {,4,1,0,1,3,0,0,0,0,5,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,923,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,925,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,926,            endIndexExclusive = array.length;,10,1,0,0,0,0,0,0,0,12,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,928,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,929,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,933,        int[] subarray = new int[newSize];,2,0,1,2,4,0,0,0,0,4,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,934,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,0,1,1,2,0,0,0,0,5,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,935,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,959,            return null;,2,0,0,0,0,1,3,2,0,7,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,961,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,964,        if (endIndexExclusive > array.length) {,10,2,0,1,3,0,0,0,0,12,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,965,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,967,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,8,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,968,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,969,            return EMPTY_SHORT_ARRAY;,6,3,0,0,0,1,4,0,0,13,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,972,        short[] subarray = new short[newSize];,4,0,1,2,4,0,0,0,0,6,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,974,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,997,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1001,            startIndexInclusive = 0;,4,0,0,0,0,0,6,2,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1003,        if (endIndexExclusive > array.length) {,8,1,0,1,3,0,6,2,0,17,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1004,            endIndexExclusive = array.length;,10,1,0,0,0,0,0,0,0,13,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1007,        if (newSize <= 0) {,2,1,0,1,3,0,0,2,0,6,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1008,            return EMPTY_CHAR_ARRAY;,4,1,0,0,0,1,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1013,        return subarray;,8,1,0,0,0,1,4,0,0,14,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1036,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1040,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1042,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1045,        int newSize = endIndexExclusive - startIndexInclusive;,12,6,0,0,0,0,0,0,0,18,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1046,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1047,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1051,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",2,1,0,1,2,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1076,            return null;,2,1,0,0,0,1,4,0,0,7,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1078,        if (startIndexInclusive < 0) {,4,1,0,1,3,0,12,4,0,21,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1079,            startIndexInclusive = 0;,10,1,0,0,0,0,4,0,0,17,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1081,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1082,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1084,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1085,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1086,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1118,            startIndexInclusive = 0;,2,0,0,0,0,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1120,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1123,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1125,            return EMPTY_FLOAT_ARRAY;,4,1,0,0,0,1,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1128,        float[] subarray = new float[newSize];,2,0,1,2,4,0,0,0,0,4,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1130,        return subarray;,4,0,0,0,0,1,2,2,0,9,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1153,        if (array == null) {,4,3,0,1,3,0,4,0,0,12,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1156,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1159,        if (endIndexExclusive > array.length) {,10,1,0,1,3,0,0,0,0,12,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1160,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1162,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1163,        if (newSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1167,        boolean[] subarray = new boolean[newSize];,2,0,1,2,4,0,0,0,0,4,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1168,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",6,1,0,1,2,0,0,0,0,8,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1186,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1189,                return false;,16,3,0,0,0,1,0,0,0,21,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1227,        return true;,6,0,0,0,0,1,0,2,0,9,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1258,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1263,        return true;,6,0,0,0,0,1,4,0,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1276,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,14,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1281,        return true;,2,1,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1294,        if ((array1 == null && array2 != null && array2.length > 0) ||,8,6,0,1,3,0,0,0,0,15,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1297,                return false;,2,1,0,0,0,1,6,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1312,        if ((array1 == null && array2 != null && array2.length > 0) ||,12,7,0,1,3,0,10,0,0,29,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1315,                return false;,0,0,0,0,0,1,0,2,0,5,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1333,                return false;,4,1,0,0,0,1,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1360,        if (array == null) {,6,1,0,1,3,0,0,0,0,7,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1361,            return 0;,2,1,0,0,0,1,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1376,        if (array1 == null || array2 == null) {,16,4,0,1,3,0,4,0,0,25,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1377,"            throw new IllegalArgumentException(""The Array must not be null"");",6,0,0,1,2,0,0,0,0,7,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1379,        return array1.getClass().getName().equals(array2.getClass().getName());,2,0,0,5,10,1,22,4,0,28,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1394,        if (array == null) {,2,1,0,1,3,0,0,2,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1395,            return;,2,0,0,0,0,1,8,0,0,12,7,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1397,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1400,        while (j > i) {,6,1,0,1,3,0,4,0,0,13,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1401,            tmp = array[j];,8,1,1,1,2,0,0,0,0,15,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1402,            array[j] = array[i];,8,0,1,2,4,0,4,0,0,17,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1403,            array[i] = tmp;,6,0,1,1,2,0,0,0,0,12,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1404,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1405,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1417,        if (array == null) {,4,2,0,1,3,0,14,0,0,21,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1418,            return;,4,2,0,0,0,1,4,0,0,10,7,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1420,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1423,        while (j > i) {,4,0,0,1,3,0,0,0,0,4,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1425,            array[j] = array[i];,0,1,0,2,4,0,4,0,0,5,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1426,            array[i] = tmp;,0,0,1,1,2,0,0,0,0,9,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1427,            j--;,10,1,0,0,0,0,0,0,0,12,4,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1441,            return;,2,0,0,0,0,1,0,0,0,2,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1443,        int i = 0;,4,1,0,0,0,0,0,0,0,5,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1444,        int j = array.length - 1;,6,1,0,0,0,0,12,0,0,19,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1446,        while (j > i) {,8,2,0,1,3,0,0,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1447,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1448,            array[j] = array[i];,0,0,1,2,4,0,0,0,0,9,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1449,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1450,            j--;,4,0,0,0,0,0,0,0,0,6,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1469,        while (j > i) {,22,2,0,1,3,0,0,4,0,30,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1470,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1472,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1473,            j--;,8,0,0,0,0,0,0,0,0,9,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1474,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1476,    },6,3,0,0,1,0,4,0,0,15,1,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1486,        if (array == null) {,2,1,0,1,3,0,8,0,0,12,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1489,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1490,        int j = array.length - 1;,10,4,0,0,0,0,2,0,0,16,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1493,            tmp = array[j];,10,2,0,1,2,0,0,0,0,14,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1495,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1497,            i++;,2,0,0,0,0,0,0,0,0,2,4,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1499,    },0,0,0,0,1,0,8,2,0,10,1,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1509,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1516,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1517,            array[j] = array[i];,2,1,1,2,4,0,0,0,0,12,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1519,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1520,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1532,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1535,        int i = 0;,4,0,0,0,0,0,0,0,0,4,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1538,        while (j > i) {,2,0,1,1,3,0,2,0,0,8,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1539,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1542,            j--;,4,0,0,0,0,0,6,0,0,10,4,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1555,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1562,            tmp = array[j];,2,1,0,1,2,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1564,            array[i] = tmp;,8,1,1,1,2,0,0,0,0,14,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1565,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1566,            i++;,2,0,0,0,0,0,0,0,0,4,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1568,    },2,1,0,0,1,0,6,0,0,9,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1578,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1581,        int i = 0;,4,0,0,0,0,0,0,0,0,4,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1585,            tmp = array[j];,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1587,            array[i] = tmp;,2,0,1,1,2,0,0,0,0,7,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1588,            j--;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1589,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1627,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1628,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,4,0,0,6,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1630,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1631,            startIndex = 0;,8,1,0,0,0,0,0,0,0,11,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1634,            for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1635,                if (array[i] == null) {,6,4,1,2,5,0,4,0,0,18,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1639,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0,0,0,4,10,0,0,0,0,14,74,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1640,            for (int i = startIndex; i < array.length; i++) {,2,1,0,1,3,0,0,0,0,3,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1642,                    return i;,2,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1646,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,6,0,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1660,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1679,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1681,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1684,            startIndex = array.length - 1;,6,1,0,0,0,0,6,0,0,14,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1686,        if (objectToFind == null) {,4,1,0,1,3,0,4,2,0,11,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1688,                if (array[i] == null) {,6,1,1,2,5,0,4,0,0,16,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1692,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,4,0,0,4,10,0,10,0,0,14,74,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1695,                    return i;,2,0,0,0,0,1,0,0,0,2,9,11,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1699,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1712,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,55,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1746,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1749,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1753,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1757,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1771,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,11,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1789,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1790,            return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1792,        if (startIndex < 0) {,8,1,0,1,3,0,0,0,0,10,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1793,            return INDEX_NOT_FOUND;,6,0,0,0,0,1,0,0,0,6,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1794,        } else if (startIndex >= array.length) {,0,0,0,1,4,0,0,0,0,1,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1795,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1797,        for (int i = startIndex; i >= 0; i--) {,0,1,0,1,3,0,0,2,0,4,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1798,            if (valueToFind == array[i]) {,4,2,1,2,5,0,0,0,0,10,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1799,                return i;,2,0,0,0,0,1,6,0,0,8,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1802,        return INDEX_NOT_FOUND;,10,1,0,0,0,1,0,0,0,11,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1831,"        return indexOf(array, valueToFind, 0);",4,1,0,1,2,1,6,0,0,11,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1849,        if (array == null) {,2,1,0,1,3,0,0,0,0,4,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1855,        for (int i = startIndex; i < array.length; i++) {,14,1,0,1,3,0,0,0,0,16,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1857,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1874,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1897,        } else if (startIndex >= array.length) {,12,2,0,1,4,0,0,0,0,16,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1900,        for (int i = startIndex; i >= 0; i--) {,14,2,0,1,3,0,0,0,0,18,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1901,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1902,                return i;,2,0,0,0,0,1,8,0,0,11,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1905,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1918,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,18,0,0,22,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1952,        if (array == null) {,6,2,0,1,3,0,0,0,0,8,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1955,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,4,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1956,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1959,            if (valueToFind == array[i]) {,2,0,0,2,5,0,0,2,0,5,30,10,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1963,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,5,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1977,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1995,        if (array == null) {,4,1,0,1,3,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,1996,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,6,0,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2001,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2005,                return i;,4,0,0,0,0,1,0,0,0,5,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2008,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2038,"        return indexOf(array, valueToFind, 0);",4,1,0,1,2,1,6,0,0,11,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2057,        if (array == null) {,2,1,1,1,3,0,4,0,0,16,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2058,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2061,            startIndex = 0;,0,0,1,0,0,0,4,0,0,8,15,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2068,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,4,23,14,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2083,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2103,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,4,23,12,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2105,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2106,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2107,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2108,            startIndex = array.length - 1;,14,2,0,0,0,0,4,2,0,23,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2111,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2112,                return i;,14,1,0,0,0,2,0,0,0,17,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2115,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2129,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,0,0,1,2,1,0,0,0,3,54,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2163,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2164,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2166,        if (startIndex < 0) {,14,2,0,1,3,0,0,0,0,17,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2207,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2210,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2214,        for (int i = startIndex; i >= 0; i--) {,4,1,0,1,3,0,0,0,0,5,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2215,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2216,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2219,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2232,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2265,"        return indexOf(array, valueToFind, 0, tolerance);",0,0,0,1,2,1,6,0,0,6,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2284,            return INDEX_NOT_FOUND;,10,1,0,0,0,1,0,0,0,11,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2290,            if (valueToFind == array[i]) {,8,2,1,2,5,0,0,0,0,14,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2291,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2294,        return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,6,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2315,        if (ArrayUtils.isEmpty(array)) {,2,0,0,2,5,0,6,0,0,8,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2318,        if (startIndex < 0) {,6,4,0,1,3,0,4,2,0,16,21,9,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2319,            startIndex = 0;,8,3,0,0,0,0,18,0,0,30,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2321,        double min = valueToFind - tolerance;,6,1,0,0,0,0,0,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2322,        double max = valueToFind + tolerance;,16,2,0,0,0,0,0,0,0,18,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2323,        for (int i = startIndex; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2324,            if (array[i] >= min && array[i] <= max) {,6,3,1,3,7,0,0,0,0,17,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2342,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",4,0,0,1,2,1,6,0,0,10,58,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2359,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",4,0,0,1,2,1,8,0,0,12,69,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2377,        if (ArrayUtils.isEmpty(array)) {,2,1,0,2,5,0,6,0,0,9,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2380,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2381,            return INDEX_NOT_FOUND;,6,1,0,0,0,1,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2383,            startIndex = array.length - 1;,8,1,0,0,0,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2385,        for (int i = startIndex; i >= 0; i--) {,12,2,0,1,3,0,0,0,0,15,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2386,            if (valueToFind == array[i]) {,2,1,1,2,5,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2411,        if (ArrayUtils.isEmpty(array)) {,0,0,0,2,5,0,10,0,0,10,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2412,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2416,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2417,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2420,        double max = valueToFind + tolerance;,6,1,0,0,0,0,0,0,0,7,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2421,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2423,                return i;,2,0,0,0,0,1,4,0,0,6,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2426,        return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,4,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2439,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2472,"        return indexOf(array, valueToFind, 0);",2,1,0,1,2,1,6,0,0,9,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2491,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2493,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2497,            if (valueToFind == array[i]) {,4,1,1,2,5,0,0,0,0,9,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2533,        if (ArrayUtils.isEmpty(array)) {,2,0,0,2,5,0,6,0,0,8,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2534,            return INDEX_NOT_FOUND;,10,1,0,0,0,1,0,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2536,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2538,        } else if (startIndex >= array.length) {,6,1,0,1,4,0,0,0,0,7,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2539,            startIndex = array.length - 1;,2,0,0,0,0,0,6,0,0,9,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2541,        for (int i = startIndex; i >= 0; i--) {,10,1,0,1,3,0,0,0,0,14,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2543,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2546,        return INDEX_NOT_FOUND;,2,1,0,0,0,1,8,0,0,11,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2559,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",2,1,0,1,2,1,6,0,0,9,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2594,        if (ArrayUtils.isEmpty(array)) {,8,1,0,2,5,0,6,0,0,16,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2598,            startIndex = 0;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2605,        return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2639,            return INDEX_NOT_FOUND;,4,0,0,0,0,1,0,0,0,4,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2641,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2644,            startIndex = array.length - 1;,6,1,0,0,0,0,0,0,0,8,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2646,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,6,0,0,16,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,2647,            if (valueToFind == array[i]) {,10,2,1,2,5,0,6,0,0,23,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4837,        int sz = str.length();,4,0,0,1,2,0,4,0,0,8,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4838,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4839,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4871,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4873,            if (Character.isDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4904,        if (str == null) {,4,1,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4909,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,76,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4913,        return true;,2,1,0,0,0,1,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4936,        if (str == null) {,8,4,0,1,3,0,0,0,0,12,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4939,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4945,        return true;,4,1,0,0,0,1,0,0,0,6,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4966,        if (str == null || isEmpty(str)) {,6,3,0,2,5,0,4,0,0,14,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4969,        int sz = str.length();,2,0,0,1,2,0,4,0,0,7,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4970,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4971,            if (Character.isLowerCase(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4972,                return false;,2,0,0,0,0,1,6,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4996,        if (str == null || isEmpty(str)) {,4,2,1,2,5,0,8,0,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,4997,            return false;,2,1,0,0,0,1,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5027,        return str == null ? EMPTY : str;,6,1,0,0,0,1,0,0,0,7,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5069,        return StringUtils.isEmpty(str) ? defaultStr : str;,12,2,0,1,2,1,6,0,0,21,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5089,        if (str == null) {,0,1,1,1,3,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5092,        return new StringBuilder(str).reverse().toString();,2,0,0,3,6,1,4,2,0,8,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5115,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5116,            return null;,6,5,1,0,0,1,0,0,0,19,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5199,        if (str == null) {,10,4,0,1,3,0,6,0,0,21,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5200,            return null;,4,0,0,0,0,1,8,0,0,12,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5203,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",4,1,1,1,2,0,4,0,0,13,70,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5205,        if (str.length() <= maxWidth) {,4,1,0,2,5,0,12,0,0,17,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5206,            return str;,8,0,0,0,0,2,0,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5211,        if ((str.length() - offset) < (maxWidth - 3)) {,6,3,0,4,9,0,4,0,0,15,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5212,            offset = str.length() - (maxWidth - 3);,4,2,0,2,4,0,4,0,0,11,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5214,        if (offset <= 4) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5215,"            return str.substring(0, maxWidth - 3) + ""..."";",8,3,0,1,2,2,4,0,0,17,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5217,        if (maxWidth < 7) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5220,        if ((offset + (maxWidth - 3)) < str.length()) {,4,3,0,4,9,0,4,0,0,11,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5221,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",6,3,0,2,4,1,8,0,0,18,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5254,        if (str1 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5257,        if (str2 == null) {,4,1,1,1,3,0,6,0,0,16,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5260,"        int at = indexOfDifference(str1, str2);",2,0,1,1,2,0,10,0,0,21,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5262,            return EMPTY;,4,0,0,0,0,1,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5291,        if (str1 == str2) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5292,            return -1;,8,0,0,0,0,1,8,0,0,17,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5294,        if (str1 == null || str2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5298,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,8,3,0,3,7,0,8,0,0,21,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5299,            if (str1.charAt(i) != str2.charAt(i)) {,0,1,0,3,7,0,12,0,0,13,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5300,                break;,8,1,0,0,0,0,12,0,0,23,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5304,            return i;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5341,        if (strs == null || strs.length <= 1) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5342,            return -1;,4,0,0,0,0,1,2,0,0,8,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5344,        boolean anyStringNull = false;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5345,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5346,        int arrayLen = strs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5353,        for (int i = 0; i < arrayLen; i++) {,10,1,0,1,3,0,0,0,0,14,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5354,            if (strs[i] == null) {,4,1,1,2,5,0,8,0,0,18,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5359,"                shortestStrLen = Math.min(strs[i].length(), shortestStrLen);",10,0,0,3,6,0,8,0,0,18,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5360,"                longestStrLen = Math.max(strs[i].length(), longestStrLen);",10,0,1,3,6,0,16,0,0,31,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5365,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,8,3,0,2,5,0,0,0,0,14,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5366,            return -1;,2,0,0,0,0,1,0,0,0,3,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5370,        if (shortestStrLen == 0) {,2,1,0,1,3,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5375,        int firstDiff = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5376,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,8,1,0,1,3,0,0,0,0,10,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5377,            char comparisonChar = strs[0].charAt(stringPos);,2,0,1,2,4,0,6,0,0,19,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5378,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,8,1,0,1,3,0,0,0,0,10,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5379,                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {,2,0,0,3,7,0,0,0,0,3,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5384,            if (firstDiff != -1) {,6,4,0,1,3,0,4,0,0,15,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5393,            return shortestStrLen;,2,0,0,0,0,1,0,0,0,2,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5432,        if (strs == null || strs.length == 0) {,8,4,0,1,3,0,0,0,0,12,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5433,            return EMPTY;,4,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5435,        int smallestIndexOfDiff = indexOfDifference(strs);,4,1,0,1,2,0,4,0,0,9,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5436,        if (smallestIndexOfDiff == -1) {,4,2,0,1,3,0,4,0,0,11,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5438,            if (strs[0] == null) {,0,1,1,2,5,0,0,0,0,3,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5439,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5442,        } else if (smallestIndexOfDiff == 0) {,8,2,1,1,4,0,4,0,0,21,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5444,            return EMPTY;,6,4,0,0,0,1,4,0,0,15,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5447,"            return strs[0].substring(0, smallestIndexOfDiff);",10,1,0,2,4,1,0,0,0,12,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5488,        if (s == null || t == null) {,4,3,0,1,3,0,0,0,0,7,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5509,        int n = s.length(); // length of s,4,0,0,1,2,0,4,0,0,10,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5512,        if (n == 0) {,4,2,0,1,3,0,12,0,0,18,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5513,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5514,        } else if (m == 0) {,2,1,0,1,4,0,0,0,0,3,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5515,            return n;,0,0,0,0,0,1,10,0,0,10,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5520,            String tmp = s;,4,0,0,0,0,0,0,2,0,6,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5521,            s = t;,6,0,0,0,0,0,0,0,0,7,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5522,            t = tmp;,0,1,1,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5523,            n = m;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5527,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",4,1,0,2,4,0,0,0,0,5,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5528,"        int d[] = new int[n+1]; // cost array, horizontally",4,1,0,2,4,0,0,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5539,        for (i = 0; i<=n; i++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5540,            p[i] = i;,4,0,1,1,2,0,0,0,0,10,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5543,        for (j = 1; j<=m; j++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5544,            t_j = t.charAt(j-1);,4,1,0,1,2,0,4,0,0,10,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5545,            d[0] = j;,4,0,1,1,2,0,0,0,0,7,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5548,                cost = s.charAt(i-1)==t_j ? 0 : 1;,6,2,0,1,2,0,4,0,0,13,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5550,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",6,5,1,6,12,0,8,0,0,32,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5554,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5555,            p = d;,6,0,1,0,0,1,0,0,0,10,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5556,            d = _d;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5651,            return (str == null && prefix == null);,6,5,0,1,2,1,4,0,0,16,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5678,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,8,1,0,3,7,0,12,2,0,24,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5679,            return false;,4,1,0,0,0,1,0,0,0,6,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5681,        for (int i = 0; i < searchStrings.length; i++) {,0,0,1,1,3,0,4,0,0,8,48,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5682,            String searchString = searchStrings[i];,2,0,1,1,2,0,0,2,0,8,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5757,        if (str == null || suffix == null) {,4,3,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5758,            return (str == null && suffix == null);,4,3,0,1,2,1,0,0,0,7,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5760,        if (suffix.length() > str.length()) {,0,1,0,3,7,0,14,0,0,15,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5761,            return false;,4,4,0,0,0,1,8,0,0,17,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,40,5763,        int strOffset = str.length() - suffix.length();,2,1,0,2,4,0,14,0,0,17,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,170,            return StringUtils.EMPTY;,6,1,0,0,0,1,0,0,0,7,25,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,230,            return StringUtils.EMPTY;,4,1,0,0,0,4,0,4,0,12,25,1,1.0,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,201,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,245,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.16667,1,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,253,        if (i == -1) {,2,1,0,1,3,0,0,0,0,4,14,4,0.16667,1,1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,2,0,0,1,2,3,12,2,0,19,94,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",4,0,0,1,2,0,4,2,0,10,53,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",4,0,0,1,2,0,4,2,0,10,47,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",4,0,0,1,2,0,4,2,0,10,57,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",8,1,0,1,2,0,10,2,0,21,53,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",4,0,0,1,2,0,4,2,0,10,51,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",4,1,0,1,2,0,0,0,0,5,49,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",8,0,0,1,2,0,4,0,0,12,46,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,93,            if (!primitiveClass.equals(wrapperClass)) {,0,0,0,2,5,0,6,0,0,7,43,6,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,102,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",14,1,0,1,2,3,6,14,0,39,89,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,107,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",2,0,0,1,2,3,6,12,0,23,96,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,125,"        addAbbreviation(""boolean"", ""Z"");",8,3,0,1,2,0,8,0,0,19,32,5,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,126,"        addAbbreviation(""float"", ""F"");",2,0,0,1,2,0,6,0,0,11,30,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,130,"        addAbbreviation(""double"", ""D"");",2,0,0,1,2,0,2,0,0,6,31,1,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,117,"        reverseAbbreviationMap.put(abbreviation, primitive);",4,3,0,1,2,0,8,0,0,15,52,3,0.05263,0,0
defect4j,lang,org/apache/commons/lang/ClassUtils,41,169,        if (cls == null) {,2,1,0,1,3,0,4,0,0,7,18,4,0.03846,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,498,        if (writer == null ) {,4,1,0,1,3,0,6,0,0,12,22,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,501,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,504,"        Entities.HTML40.escape(writer, string);",4,0,0,1,2,0,6,0,0,10,39,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,832,"                    writer.write(""&#"");",0,0,0,1,2,0,4,0,0,5,19,11,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,833,"                    writer.write(Integer.toString(c, 10));",6,3,0,2,4,0,10,0,0,19,38,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,961,"                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);",2,0,0,2,4,0,8,0,0,11,63,18,0.25,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,829,            String entityName = this.entityName(c);,4,2,1,1,2,0,8,0,0,21,39,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,954,                                switch (isHexChar) {,2,0,0,1,3,0,0,0,0,2,20,16,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,42,964,                                if (entityValue > 0xFFFF) {,2,1,0,1,3,0,0,0,0,3,27,16,0.2,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,525,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,557,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,560,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,563,"        Entities.HTML40.unescape(writer, string);",0,0,0,1,2,0,6,0,0,7,41,5,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,112,"        this(pattern, Locale.getDefault(), registry);",4,0,0,2,4,0,4,0,0,8,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,148,        ArrayList foundFormats = new ArrayList();,4,0,0,1,2,0,0,0,0,5,41,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,150,        StringBuffer stripCustom = new StringBuffer(pattern.length());,2,0,0,2,4,0,4,4,0,10,62,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,152,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,153,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,154,        int fmtCount = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,155,        while (pos.getIndex() < pattern.length()) {,4,2,0,3,7,0,8,12,0,27,43,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,156,            switch (c[pos.getIndex()]) {,2,0,1,3,7,0,10,4,0,18,28,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,187,                stripCustom.append(c[pos.getIndex()]);,0,0,1,3,6,0,8,0,0,10,38,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,188,                next(pos);,0,0,0,1,2,0,4,0,0,4,10,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,403,        pos.setIndex(pos.getIndex() + 1);,0,1,0,2,4,0,8,0,0,9,33,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,404,        return pos;,2,0,0,0,0,1,0,0,0,2,11,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,143,        if (registry == null) {,4,1,0,1,3,0,0,2,0,7,23,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,144,            super.applyPattern(pattern);,4,0,0,1,2,0,0,0,0,4,28,7,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,145,            toPattern = super.toPattern();,6,1,0,1,2,0,0,0,0,8,30,4,0.16667,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,350,            chars = str.toCharArray();,10,1,0,1,2,0,4,0,0,17,26,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,363,            int len = chars.length;,8,2,0,0,0,0,4,0,0,15,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,364,            if (pos + len > bufferEnd) {,10,3,0,1,3,0,0,0,0,13,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,365,                return 0;,2,0,0,0,0,4,0,0,0,5,9,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,368,                if (chars[i] != buffer[pos]) {,0,1,1,3,7,0,0,0,0,9,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,372,            return len;,2,0,0,0,0,1,0,0,0,2,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",8,1,0,1,2,0,0,0,0,10,69,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,2,0,0,1,2,3,0,4,0,10,68,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,8,0,0,1,2,3,0,4,0,17,69,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",4,0,0,2,4,3,2,4,0,15,94,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,2,0,0,1,2,3,0,4,0,9,65,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",2,0,0,2,4,3,2,4,0,12,88,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,89,        return TAB_MATCHER;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,98,        return SPACE_MATCHER;,4,0,0,0,0,1,8,0,0,12,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,108,        return SPLIT_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,117,        return TRIM_MATCHER;,4,1,0,0,0,1,0,0,0,5,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,126,        return SINGLE_QUOTE_MATCHER;,4,1,0,0,0,1,0,0,0,5,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,135,        return DOUBLE_QUOTE_MATCHER;,2,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,144,        return QUOTE_MATCHER;,2,1,0,0,0,1,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,153,        return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,163,        return new CharMatcher(ch);,2,0,0,1,2,1,2,2,0,8,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,174,            return NONE_MATCHER;,4,0,1,0,0,1,0,0,0,9,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,177,            return new CharMatcher(chars[0]);,2,0,1,2,4,1,0,2,0,8,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,179,        return new CharSetMatcher(chars);,2,0,0,1,2,1,0,2,0,4,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,189,        if (chars == null || chars.length() == 0) {,2,3,0,2,5,0,4,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,190,            return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,192,        if (chars.length() == 1) {,0,1,0,2,5,0,4,0,0,5,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,193,            return new CharMatcher(chars.charAt(0));,2,1,0,2,4,1,4,4,0,13,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,205,        if (str == null || str.length() == 0) {,6,0,0,2,5,3,2,0,0,13,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,208,        return new StringMatcher(str);,4,1,0,1,2,4,2,0,0,11,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,426,            return buffer[pos] <= 32 ? 1 : 0;,0,1,1,1,2,1,0,0,0,5,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,318,            this.ch = ch;,14,1,0,0,0,0,4,0,0,21,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,331,            return ch == buffer[pos] ? 1 : 0;,6,0,0,1,2,1,0,0,0,7,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,287,        },2,0,0,0,1,0,6,2,0,10,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,90,"        this(pattern, Locale.getDefault());",6,3,0,2,4,0,4,0,0,13,35,3,0.0,1,1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,101,"        this(pattern, locale, null);",4,0,0,1,2,0,0,0,0,4,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,128,    },2,0,0,0,1,0,4,0,0,7,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,134,        return toPattern;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,158,"                appendQuotedString(pattern, pos, stripCustom, true);",4,0,0,1,2,0,8,2,0,15,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,162,"                seekNonWs(pattern, pos);",4,0,0,1,2,0,6,2,0,12,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,163,                int start = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,165,                stripCustom.append(START_FE).append(index);,0,0,0,2,4,0,6,0,0,7,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,169,                if (c[pos.getIndex()] == START_FMT) {,4,1,0,3,7,0,0,0,0,5,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,170,"                    formatDescription = parseFormatDescription(pattern,",4,0,0,0,1,0,12,2,0,20,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,173,                    if (format == null) {,4,2,0,1,3,0,10,0,0,16,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,174,                        stripCustom.append(START_FMT).append(formatDescription);,0,0,0,2,4,0,10,0,0,10,56,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,180,                Validate.isTrue(foundDescriptions.size() == fmtCount);,6,2,0,2,4,0,14,2,0,24,54,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,181,                if (c[pos.getIndex()] != END_FE) {,2,0,0,3,7,0,4,0,0,7,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,182,                    throw new IllegalArgumentException(,8,1,0,0,1,0,0,0,0,10,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,192,"        toPattern = insertFormats(super.toPattern(), foundDescriptions);",6,0,0,2,4,0,12,0,0,20,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,194,            Format[] origFormats = getFormats();,2,0,0,2,4,0,2,2,0,6,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,197,            int i = 0;,4,1,0,0,0,0,0,0,0,5,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,198,            for (Iterator it = foundFormats.iterator(); it.hasNext(); i++) {,6,1,0,3,7,0,0,0,0,7,64,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,199,                Format f = (Format) it.next();,8,0,0,2,4,0,8,6,0,25,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,200,                if (f != null) {,2,1,0,1,3,0,0,0,0,3,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,206,    },2,0,0,0,1,0,8,2,0,14,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,221,        throw new UnsupportedOperationException();,10,1,0,1,2,0,0,2,0,14,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,229,        throw new UnsupportedOperationException();,4,1,0,1,2,0,2,0,0,7,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,237,        throw new UnsupportedOperationException();,6,5,0,1,2,0,0,2,0,13,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,249,            String args = null;,2,0,1,0,0,0,0,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,250,            int i = desc.indexOf(START_FMT);,2,0,0,1,2,0,6,0,0,8,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,251,            if (i > 0) {,2,1,0,1,3,0,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,253,                args = desc.substring(i + 1).trim();,4,1,0,2,4,0,6,0,0,12,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,256,            if (factory != null) {,10,0,0,1,3,0,8,0,0,20,22,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,257,"                return factory.getFormat(name, args, getLocale());",2,0,0,2,4,1,0,0,0,2,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,271,        int start = pos.getIndex();,2,0,0,1,2,0,0,2,0,4,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,272,"        seekNonWs(pattern, pos);",0,1,0,1,2,0,16,0,0,17,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,275,        for (; !error && pos.getIndex() < pattern.length(); next(pos)) {,12,3,0,4,9,0,12,0,0,29,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,276,            char c = pattern.charAt(pos.getIndex());,2,0,0,2,4,0,8,0,0,10,40,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,278,"                seekNonWs(pattern, pos);",4,0,0,1,2,0,0,2,0,7,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,281,                    error = true;,4,2,0,0,0,0,4,0,0,13,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,285,            if ((c == START_FMT || c == END_FE) && result.length() > 0) {,10,5,0,3,7,0,10,2,0,27,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,287,                    return Integer.parseInt(result.toString());,6,2,0,2,4,1,0,0,0,9,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,288,                } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,293,            error = !Character.isDigit(c);,4,0,0,1,2,1,0,2,0,7,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,296,        if (error) {,4,0,0,1,3,0,4,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,313,        int start = pos.getIndex();,4,1,0,1,2,0,0,0,0,5,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,315,        int text = pos.getIndex();,4,0,0,1,2,0,0,0,0,4,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,316,        int depth = 1;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,317,        for (; pos.getIndex() < pattern.length(); next(pos)) {,6,0,0,4,9,0,10,0,0,17,54,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,318,            switch (pattern.charAt(pos.getIndex())) {,0,0,0,3,7,0,34,0,0,35,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,320,                depth++;,2,0,0,0,0,1,0,2,0,5,8,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,321,                break;,6,1,1,0,0,3,2,0,0,15,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,323,                depth--;,2,0,0,0,0,0,0,0,0,3,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,333,        throw new IllegalArgumentException(,6,1,0,0,1,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,349,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,350,        int fe = -1;,2,0,0,0,0,0,0,0,0,4,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,351,        int depth = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,352,        while (pos.getIndex() < pattern.length()) {,2,1,0,3,7,0,8,0,0,12,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,354,            switch (c) {,4,0,1,1,3,0,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,359,                depth++;,2,0,0,0,0,0,0,0,0,3,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,361,                    fe++;,2,0,0,0,0,0,0,0,0,3,5,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,362,                    sb.append(START_FE).append(,2,1,0,1,3,0,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,364,                    String customPattern = (String) customPatterns.get(fe);,2,0,0,2,4,0,6,4,0,12,55,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,365,                    if (customPattern != null) {,2,1,0,1,3,0,0,0,0,3,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,366,                        sb.append(START_FMT).append(customPattern);,2,0,1,2,4,0,10,0,0,15,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,368,                },4,3,0,0,1,0,0,0,0,7,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,374,                sb.append(c);,2,0,0,1,2,0,6,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,377,        },6,0,0,0,1,0,0,2,0,8,1,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,388,        int len = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,391,"            len = StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex());",2,0,1,3,6,0,0,0,0,7,64,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,392,            pos.setIndex(pos.getIndex() + len);,2,1,0,2,4,0,12,0,0,16,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,419,        int start = pos.getIndex();,2,0,0,1,2,0,4,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,420,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,7,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,422,            return appendTo == null ? null : appendTo.append(QUOTE);,2,1,0,1,2,1,6,0,0,9,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,424,        int lastHold = start;,4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,425,        for (int i = pos.getIndex(); i < pattern.length(); i++) {,6,1,0,3,7,0,8,0,0,16,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,426,            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {,2,1,0,3,7,0,10,0,0,13,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,427,"                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(",2,1,0,2,5,0,14,0,0,17,63,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,430,                lastHold = pos.getIndex();,2,0,0,1,2,0,4,0,0,7,26,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,431,                continue;,2,1,0,0,0,0,4,0,0,8,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,433,            switch (c[pos.getIndex()]) {,0,0,1,3,7,0,4,0,0,6,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,436,"                return appendTo == null ? null : appendTo.append(c, lastHold,",2,2,0,0,1,1,18,0,0,22,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,455,"        appendQuotedString(pattern, pos, null, escapingOn);",0,0,0,1,2,0,8,0,0,9,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,464,        if (coll == null || coll.size() == 0) {,2,3,0,2,5,0,4,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,467,        for (Iterator iter = coll.iterator(); iter.hasNext();) {,2,0,0,3,7,0,8,2,0,12,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,468,            if (iter.next() != null) {,0,1,0,2,5,0,4,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,469,                return true;,4,1,0,0,0,1,2,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,77,            throw new IllegalArgumentException(message + value);,6,2,0,1,2,0,0,2,0,10,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,102,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,129,        if (expression == false) {,8,2,0,1,3,0,0,0,0,11,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,132,    },14,4,0,0,1,0,0,0,0,19,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,156,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,157,            throw new IllegalArgumentException(message);,2,0,0,1,2,1,6,0,0,9,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,180,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,181,"            throw new IllegalArgumentException(""The validated expression is false"");",6,1,0,1,2,0,4,2,0,15,72,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,202,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,205,    },4,1,0,0,1,0,0,0,0,5,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,221,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,243,            throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,245,    },6,0,1,0,1,0,12,2,0,27,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,264,    },0,0,1,0,1,0,0,0,0,4,1,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,282,        if (collection == null || collection.size() == 0) {,2,3,0,2,5,0,8,0,0,13,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,283,            throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,301,        if (collection == null || collection.size() == 0) {,2,3,0,2,5,0,4,0,0,9,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,322,        if (map == null || map.size() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,323,            throw new IllegalArgumentException(message);,4,1,0,1,2,0,0,2,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,341,        if (map == null || map.size() == 0) {,2,3,0,2,5,0,4,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,381,        if (string == null || string.length() == 0) {,2,3,0,2,5,0,4,0,0,9,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,384,    },2,0,0,0,1,0,0,0,0,2,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,407,        Validate.notNull(array);,2,0,1,1,2,0,6,0,0,10,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,408,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,409,            if (array[i] == null) {,10,0,1,2,5,0,10,0,0,22,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,410,                throw new IllegalArgumentException(message);,2,1,0,1,2,0,0,0,0,3,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,435,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,436,            if (array[i] == null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,437,"                throw new IllegalArgumentException(""The validated array contains null element at index: "" + i);",2,1,0,1,2,0,0,2,0,7,95,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,440,    },2,0,0,0,1,0,0,0,0,2,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,464,        for (Iterator it = collection.iterator(); it.hasNext();) {,2,0,0,3,7,0,8,2,0,12,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,465,            if (it.next() == null) {,0,1,0,2,5,0,4,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,466,                throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,489,        Validate.notNull(collection);,4,1,0,1,2,0,6,0,0,11,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,490,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,491,        for (Iterator it = collection.iterator(); it.hasNext(); i++) {,4,0,0,3,7,0,8,2,0,15,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,492,            if (it.next() == null) {,0,1,0,2,5,0,4,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,493,"                throw new IllegalArgumentException(""The validated collection contains null element at index: "" + i);",2,1,0,1,2,0,6,2,0,13,100,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,515,        for (Iterator it = collection.iterator(); it.hasNext(); ) {,2,0,0,3,7,0,8,2,0,12,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,516,            if (clazz.isInstance(it.next()) == false) {,0,1,0,3,7,0,8,0,0,10,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,517,                throw new IllegalArgumentException(message);,2,0,0,1,2,0,0,2,0,4,44,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,545,        int i = 0;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/Validate,43,548,"                throw new IllegalArgumentException(""The validated collection contains an element not of type """,0,0,0,0,1,0,0,2,0,3,94,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,139,        if (val == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,142,        if (val.length() == 0) {,2,1,0,2,5,0,4,4,0,11,24,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,152,"        if (val.startsWith(""0x"") || val.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,155,        char lastChar = val.charAt(val.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,159,        int decPos = val.indexOf('.');,4,1,0,1,2,0,4,0,0,10,30,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,162,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,174,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,177,                mant = val;,6,0,0,0,0,3,2,2,0,15,11,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,179,            dec = null;,2,0,0,0,0,0,0,0,0,3,11,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,182,            if (expPos > -1 && expPos < val.length() - 1) {,8,5,0,2,5,0,8,0,0,22,47,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,185,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,189,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,193,                    if (dec == null,2,1,0,0,1,0,0,0,0,3,15,9,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,297,        if (s == null) {,2,1,0,1,3,0,0,0,0,3,16,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,300,        for (int i = s.length() - 1; i >= 0; i--) {,6,3,0,2,5,0,10,0,0,21,43,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,301,            if (s.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,25,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,75,        } catch (NumberFormatException nfe) {,8,0,0,1,4,0,8,2,0,19,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,76,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,164,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,165,                if (expPos < decPos) {,6,1,0,1,3,0,0,0,0,7,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,166,"                    throw new NumberFormatException(val + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,168,"                dec = val.substring(decPos + 1, expPos);",4,1,0,1,2,0,6,0,0,12,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,170,                dec = val.substring(decPos + 1);,4,1,0,1,2,0,4,0,0,10,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,172,"            mant = val.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,175,"                mant = val.substring(0, expPos);",2,0,0,1,2,0,6,0,0,9,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,183,"                exp = val.substring(expPos + 1, val.length() - 1);",4,2,0,2,4,0,8,0,0,15,50,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,197,                            return createLong(numeric);,4,3,0,1,2,1,12,0,0,19,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,198,                        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,201,                        return createBigInteger(numeric);,2,0,0,1,2,1,4,2,0,8,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,204,"                    throw new NumberFormatException(val + "" is not a valid number."");",4,1,0,1,2,0,0,2,0,8,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,208,                        Float f = NumberUtils.createFloat(numeric);,2,0,0,1,2,0,6,2,0,10,43,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,209,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,212,                            return f;,4,0,0,0,0,4,4,2,0,13,9,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,215,                    } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,222,                        Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,0,6,2,0,10,45,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,223,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,4,4,0,5,11,0,8,0,0,18,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,224,                            return d;,6,0,0,0,0,1,0,0,0,6,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,231,                    } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,243,"                exp = val.substring(expPos + 1, val.length());",4,1,0,2,4,0,8,0,0,14,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,247,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,251,                } catch (NumberFormatException nfe) {,6,0,0,1,4,3,0,6,0,16,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,265,                    Float f = createFloat(val);,12,1,0,1,2,5,12,6,0,38,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,271,                },2,0,0,0,1,3,0,4,0,9,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,269,                } catch (NumberFormatException nfe) {,4,3,0,1,4,0,4,2,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,273,                    Double d = createDouble(val);,2,0,0,1,2,0,4,2,0,8,29,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,275,                        return d;,2,0,0,0,0,1,0,0,0,3,9,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,298,            return true;,0,0,0,0,0,1,4,0,0,5,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,305,        return s.length() > 0;,0,1,0,1,2,1,4,0,0,5,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,329,        return Double.valueOf(val);,4,1,0,1,2,1,6,0,0,12,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,376,        BigDecimal bd = new BigDecimal(val);,4,1,0,1,2,0,4,4,0,13,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,391,        if (b < a) {,4,1,0,1,3,0,6,2,0,13,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,392,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,395,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,397,        return a;,4,4,0,0,0,1,8,0,0,16,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,409,        if (b < a) {,6,1,0,1,3,0,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,410,            a = b;,2,0,0,0,0,0,6,0,0,9,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,412,        if (c < a) {,10,2,0,1,3,0,0,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,415,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,427,        if (b > a) {,4,0,0,1,3,0,2,0,0,7,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,428,            a = b;,4,0,0,0,0,0,4,0,0,9,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,430,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,431,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,433,        return a;,2,1,0,0,0,1,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,445,        if (b > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,446,            a = b;,18,1,0,0,0,0,8,0,0,30,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,449,            a = c;,2,0,0,0,0,2,8,2,0,15,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,451,        return a;,2,0,0,0,0,1,4,2,0,8,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,491,        if (lhs < rhs) {,4,1,0,1,3,0,4,0,0,9,16,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,492,            return -1;,0,0,1,0,0,1,10,2,0,24,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,494,        if (lhs > rhs) {,4,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,502,        long rhsBits = Double.doubleToLongBits(rhs);,6,1,0,1,2,0,18,0,0,26,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,504,            return 0;,4,1,1,0,0,1,0,0,0,10,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,512,        if (lhsBits < rhsBits) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,552,        if (lhs < rhs) {,12,1,0,1,3,1,0,6,0,20,16,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,556,            return +1;,0,0,0,0,0,1,8,0,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,562,        int lhsBits = Float.floatToIntBits(lhs);,2,0,0,1,2,0,6,0,0,8,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,564,        if (lhsBits == rhsBits) {,6,1,0,1,3,0,6,0,0,13,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,565,            return 0;,2,0,0,0,0,1,0,2,0,5,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,574,            return -1;,6,1,0,0,0,1,0,2,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,596,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,598,                return false;,2,0,0,0,0,2,0,2,0,5,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,618,        if (StringUtils.isEmpty(str)) {,2,1,0,2,5,1,18,2,0,25,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,621,        char[] chars = str.toCharArray();,2,0,0,2,4,0,4,0,0,8,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,622,        int sz = chars.length;,8,0,0,0,0,3,4,2,0,17,22,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,623,        boolean hasExp = false;,4,0,0,0,0,0,2,0,0,8,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,624,        boolean hasDecPoint = false;,2,0,0,0,0,0,0,0,0,2,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,628,        int start = (chars[0] == '-') ? 1 : 0;,2,1,1,2,4,0,0,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,629,        if (sz > start + 1) {,6,0,0,1,3,3,2,2,0,15,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,630,            if (chars[start] == '0' && chars[start + 1] == 'x') {,2,0,0,3,7,0,0,0,0,2,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,631,                int i = start + 2;,4,1,0,0,0,0,8,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,633,"                    return false; // str == ""0x""",2,1,0,0,0,1,0,0,0,4,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,637,                    if ((chars[i] < '0' || chars[i] > '9'),10,3,0,3,7,3,14,0,0,34,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,640,                        return false;,2,2,0,0,0,1,6,0,0,13,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,643,                return true;,2,0,1,0,0,1,8,2,0,17,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,646,"        sz--; // don't want to loop to the last char, check it afterwords",0,1,0,0,0,0,4,0,0,5,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,648,        int i = start;,4,0,0,0,0,0,0,0,0,4,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,651,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,16,6,0,2,5,3,2,0,0,29,61,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,652,            if (chars[i] >= '0' && chars[i] <= '9') {,2,4,1,3,7,0,0,0,0,16,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,653,                foundDigit = true;,2,0,0,0,0,0,0,0,0,4,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,654,                allowSigns = false;,4,1,0,0,0,0,12,4,0,21,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,656,            } else if (chars[i] == '.') {,0,1,1,2,6,0,0,0,0,6,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,661,                hasDecPoint = true;,2,0,0,0,0,0,0,0,0,4,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,662,            } else if (chars[i] == 'e' || chars[i] == 'E') {,0,0,0,3,8,0,0,0,0,11,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,664,                if (hasExp) {,2,0,0,1,3,0,0,0,0,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,668,                if (!foundDigit) {,6,1,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,672,                allowSigns = true;,4,0,0,0,0,3,2,0,0,11,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,674,                if (!allowSigns) {,16,2,0,1,3,0,8,0,0,28,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,677,                allowSigns = false;,8,1,0,0,0,0,4,0,0,15,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,680,                return false;,2,1,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,682,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,684,        if (i < chars.length) {,6,1,0,1,3,0,0,0,0,7,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,689,            if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,7,0,0,0,0,13,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,691,                return false;,2,0,0,0,0,1,6,0,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,693,            if (!allowSigns,0,0,0,0,1,0,10,0,0,10,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,698,                return foundDigit;,4,0,0,0,0,1,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,700,            if (chars[i] == 'l',0,1,1,1,3,0,0,0,0,6,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,703,                return foundDigit && !hasExp;,4,1,0,0,0,1,0,0,0,6,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/NumberUtils,44,710,        return !allowSigns && foundDigit;,4,1,0,0,0,1,0,0,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,167,        super();,0,0,0,1,2,0,14,0,0,15,8,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,191,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,229,        if (str == null || (strLen = str.length()) == 0) {,6,4,0,3,7,0,4,0,0,15,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,232,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,234,                return false;,4,0,0,0,0,1,0,0,0,6,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,237,        return true;,12,4,0,0,0,8,4,10,0,38,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,336,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,8,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,361,        return str == null ? EMPTY : str.trim();,2,0,0,1,2,1,4,0,0,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,416,        if (str == null) {,2,0,0,1,3,2,4,2,0,10,18,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,417,            return null;,4,0,0,0,0,4,2,2,0,12,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,420,        return str.length() == 0 ? null : str;,2,0,0,1,2,1,0,0,0,2,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,479,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,480,"        return stripEnd(str, stripChars);",2,0,0,1,2,1,6,2,0,11,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,510,            return str;,4,0,0,0,0,1,6,2,0,12,11,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,513,        if (stripChars == null) {,12,2,0,1,3,0,10,0,0,26,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,515,                start++;,2,0,0,0,0,0,0,0,0,3,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,517,        } else if (stripChars.length() == 0) {,2,1,0,2,6,0,10,2,0,15,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,518,            return str;,2,0,0,0,0,1,0,2,0,6,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,520,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,6,3,0,5,11,0,10,0,0,20,76,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,554,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,561,        } else if (stripChars.length() == 0) {,10,1,0,2,6,0,0,0,0,12,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,564,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,4,4,0,5,11,0,14,0,0,23,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,627,        for (int i = 0; i < strsLen; i++) {,12,1,0,1,3,3,0,4,0,22,35,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,630,        return newArr;,14,2,0,0,0,7,4,0,0,29,14,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,656,        return str1 == null ? str2 == null : str1.equals(str2);,4,2,0,1,2,1,6,0,0,12,55,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,706,        if (isEmpty(str)) {,6,4,0,2,5,0,4,0,0,15,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,739,            return -1;,0,0,0,0,0,1,4,0,0,5,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,741,"        return str.indexOf(searchChar, startPos);",6,0,0,1,2,1,8,0,0,16,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,767,        if (str == null || searchStr == null) {,10,4,0,1,3,0,0,0,0,15,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,768,            return -1;,2,0,0,0,0,1,0,0,0,3,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,802,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,3,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,812,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,814,            found++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,816,        return index;,2,0,0,0,0,1,4,2,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,851,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,855,        if (searchStr.length() == 0 && startPos >= str.length()) {,0,0,0,3,7,0,6,0,0,6,58,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,883,        if (isEmpty(str)) {,2,1,0,2,5,0,4,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,918,            return -1;,2,0,0,0,0,1,0,0,0,4,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,947,            return -1;,4,1,0,0,0,1,0,0,0,5,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,981,        if (str == null || searchStr == null) {,6,3,0,1,3,0,0,0,0,9,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,982,            return -1;,2,0,0,0,0,4,2,2,0,11,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,984,"        return str.lastIndexOf(searchStr, startPos);",4,1,0,1,2,1,8,2,0,15,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1037,        if (str == null || searchStr == null) {,6,1,0,1,3,0,6,0,0,14,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1070,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",6,0,1,3,6,1,10,0,0,20,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1101,        for (int i = 0; i < str.length(); i++) {,4,1,0,2,5,0,6,0,0,12,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1102,            char ch = str.charAt(i);,2,0,0,1,2,0,4,0,0,8,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1104,                if (searchChars[j] == ch) {,2,1,1,2,5,0,6,0,0,13,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1105,                    return i;,6,2,0,0,0,1,12,0,0,21,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1109,        return -1;,8,2,0,0,0,1,0,2,0,14,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1136,            return -1;,2,0,0,0,0,4,8,4,0,19,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1170,        for (int i = 0; i < str.length(); i++) {,8,2,1,2,5,0,4,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1241,            return -1;,2,0,0,0,0,1,0,2,0,4,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1243,        outer : for (int i = 0; i < str.length(); i++) {,4,0,0,2,5,0,4,0,0,8,48,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1244,            char ch = str.charAt(i);,4,1,0,1,2,0,0,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1252,        return -1;,2,0,0,0,0,1,0,0,0,4,10,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1281,        for (int i = 0; i < str.length(); i++) {,2,0,0,2,5,0,14,0,0,16,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1286,        return -1;,2,0,0,0,0,4,2,2,0,10,10,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1317,        if (str.length() == 0) {,0,0,0,2,5,0,2,0,0,2,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1318,            return true;,4,1,0,0,0,1,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1320,        if (valid.length == 0) {,10,1,0,1,3,0,0,0,0,13,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1321,            return false;,2,1,0,0,0,1,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1323,"        return indexOfAnyBut(str, valid) == -1;",0,1,0,1,2,1,6,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1349,        if (str == null || validChars == null) {,6,1,0,1,3,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1350,            return false;,2,0,0,0,0,4,14,2,0,23,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1352,"        return containsOnly(str, validChars.toCharArray());",2,0,0,2,4,1,4,0,0,6,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1380,        if (str == null || invalidChars == null) {,4,3,0,1,3,0,8,0,0,17,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1386,            char ch = str.charAt(i);,14,1,0,1,2,0,10,2,0,28,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1387,            for (int j = 0; j < validSize; j++) {,16,2,0,1,3,0,0,0,0,20,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1419,        if (str == null || invalidChars == null) {,4,3,0,1,3,0,0,0,0,7,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1457,        int sz = searchStrs.length;,8,0,0,0,0,3,2,0,0,13,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1462,        int tmp = 0;,2,1,0,0,0,0,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1464,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1465,            if (search == null) {,2,0,0,1,3,0,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1466,                continue;,12,4,0,0,0,0,4,0,0,21,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1468,            tmp = str.indexOf(search);,4,1,0,1,2,0,6,2,0,16,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1474,                ret = tmp;,2,1,0,0,0,0,6,0,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1510,        int sz = searchStrs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1511,        int ret = -1;,2,0,0,0,0,0,0,0,0,3,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1513,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,0,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1523,        return ret;,4,3,0,0,0,1,0,0,0,9,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1558,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1559,            start = str.length() + start; // remember start is negative,10,2,1,1,2,0,6,0,0,25,59,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1562,        if (start < 0) {,4,1,1,1,3,0,0,2,0,11,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1613,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1614,            end = str.length() + end; // remember end is negative,4,1,0,1,2,0,4,0,0,10,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1621,        if (end > str.length()) {,2,0,0,2,5,0,0,4,0,7,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1622,            end = str.length();,2,0,0,1,2,0,4,0,0,7,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1630,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1631,            start = 0;,4,0,0,0,0,0,6,0,0,12,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1663,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1666,        if (len < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1669,        if (str.length() <= len) {,2,1,0,2,5,0,4,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1670,            return str;,2,0,0,0,0,1,0,0,0,2,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1696,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1699,        if (len < 0) {,6,2,0,1,3,0,8,0,0,17,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1703,            return str;,6,0,0,0,0,1,0,0,0,6,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1733,        if (str == null) {,8,1,0,1,3,0,0,0,0,10,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1734,            return null;,2,1,1,0,0,1,0,0,0,7,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1736,        if (len < 0 || pos > str.length()) {,8,4,0,2,5,0,6,0,0,18,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1737,            return EMPTY;,4,0,0,0,0,1,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1740,            pos = 0;,6,0,0,0,0,0,0,4,0,11,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1742,        if (str.length() <= (pos + len)) {,2,0,0,3,7,0,0,0,0,2,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1777,            return str;,8,0,0,0,0,1,0,0,0,9,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1779,        if (separator.length() == 0) {,2,0,0,2,5,1,4,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1780,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1782,        int pos = str.indexOf(separator);,2,0,0,1,2,0,16,0,0,18,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1783,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1784,            return str;,2,0,0,0,0,1,10,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1817,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1822,        int pos = str.indexOf(separator);,2,0,0,1,2,0,6,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1824,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1855,        if (isEmpty(str) || isEmpty(separator)) {,2,1,0,3,7,0,14,2,0,19,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1856,            return str;,4,0,0,0,0,1,0,0,0,5,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1860,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1894,            return str;,0,4,0,0,0,1,12,0,0,16,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1899,        int pos = str.lastIndexOf(separator);,2,0,0,1,2,0,6,0,0,8,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1900,        if (pos == -1 || pos == (str.length() - separator.length())) {,4,4,0,4,9,0,8,0,0,17,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1901,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1903,        return str.substring(pos + separator.length());,4,2,0,2,4,1,8,0,0,14,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1961,        if (str == null || open == null || close == null) {,6,5,0,1,3,0,0,0,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1962,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1965,        if (start != -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1966,"            int end = str.indexOf(close, start + open.length());",4,1,0,2,4,0,10,0,0,15,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1967,            if (end != -1) {,2,1,0,1,3,0,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1968,"                return str.substring(start + open.length(), end);",2,1,0,2,4,1,14,0,0,17,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,1997,        if (str == null || isEmpty(open) || isEmpty(close)) {,8,5,1,3,7,0,4,0,0,19,53,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2000,        int strLen = str.length();,2,0,1,1,2,0,4,0,0,10,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2002,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,5,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2004,        int closeLen = close.length();,6,0,0,1,2,0,0,0,0,7,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2005,        int openLen = open.length();,2,0,0,1,2,0,4,0,0,6,28,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2006,        List list = new ArrayList();,2,0,0,1,2,0,0,4,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2007,        int pos = 0;,4,0,1,0,0,0,4,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2008,        while (pos < (strLen - closeLen)) {,10,2,0,2,5,1,0,2,0,15,35,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2010,            if (start < 0) {,4,1,0,1,3,0,0,0,0,6,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2015,            if (end < 0) {,4,1,0,1,3,0,6,0,0,11,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2016,                break;,4,1,0,0,0,0,6,0,0,11,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2019,            pos = end + closeLen;,6,1,0,0,0,0,0,0,0,8,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2021,        if (list.isEmpty()) {,4,3,0,2,5,0,4,0,0,11,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2024,        return (String[]) list.toArray(new String [list.size()]);,0,0,0,5,10,1,14,4,0,18,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2052,"        return substringBetween(str, tag, tag);",2,0,0,1,2,1,0,0,0,2,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2110,"        return split(str, null, -1);",0,0,0,1,2,1,12,0,0,15,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2341,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2345,        int len = str.length();,8,1,0,1,2,0,4,0,0,13,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2356,        int separatorLength = separator.length();,2,0,0,1,2,0,4,0,0,6,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2358,        ArrayList substrings = new ArrayList();,2,0,0,1,2,0,0,4,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2359,        int numberOfSubstrings = 0;,2,0,0,0,0,0,0,0,0,2,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2360,        int beg = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2361,        int end = 0;,2,1,0,0,0,0,0,0,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2365,            if (end > -1) {,2,1,0,1,3,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2366,                if (end > beg) {,8,4,0,1,3,0,4,0,0,16,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2367,                    numberOfSubstrings += 1;,2,0,1,0,0,0,0,0,0,7,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2369,                    if (numberOfSubstrings == max) {,4,1,0,1,3,0,0,0,0,5,32,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2375,"                        substrings.add(str.substring(beg, end));",4,3,1,2,4,0,16,0,0,25,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2380,                        beg = end + separatorLength;,10,2,0,0,0,0,0,0,0,13,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2384,                    if (preserveAllTokens) {,6,0,0,1,3,0,0,2,0,9,24,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2386,                        if (numberOfSubstrings == max) {,8,1,0,1,3,0,0,0,0,11,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2387,                            end = len;,2,0,0,0,0,0,0,0,0,2,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2398,                end = len;,2,0,0,0,0,0,6,0,0,8,10,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2485,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2488,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2489,        if (len == 0) {,10,7,0,1,3,0,18,4,0,39,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2490,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2492,        List list = new ArrayList();,8,0,0,1,2,0,0,4,0,12,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2494,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2496,        while (i < len) {,10,1,0,1,3,0,0,0,0,12,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2497,            if (str.charAt(i) == separatorChar) {,2,1,0,2,5,0,6,0,0,9,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2499,"                    list.add(str.substring(start, i));",4,1,0,2,4,0,0,0,0,6,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2500,                    match = false;,2,0,0,0,0,0,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2504,                continue;,0,0,0,0,0,0,0,0,0,1,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2506,            lastMatch = false;,2,0,0,0,0,0,2,0,0,4,18,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2507,            match = true;,4,1,0,0,0,0,0,0,0,6,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2508,            i++;,4,0,0,0,0,0,0,0,0,6,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2513,        return (String[]) list.toArray(new String[list.size()]);,2,0,0,5,10,1,14,4,0,20,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2612,        if (str == null) {,2,0,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2616,        if (len == 0) {,6,1,0,1,3,0,0,0,0,8,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2617,            return ArrayUtils.EMPTY_STRING_ARRAY;,8,1,0,0,0,1,0,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2620,        int sizePlus1 = 1;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2621,"        int i = 0, start = 0;",6,0,0,0,0,0,0,0,0,7,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2622,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2623,        boolean lastMatch = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2624,        if (separatorChars == null) {,10,3,0,1,3,0,0,0,0,13,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2628,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2630,                        if (sizePlus1++ == max) {,10,2,0,1,3,0,8,2,0,24,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2634,"                        list.add(str.substring(start, i));",2,1,0,2,4,0,12,0,0,15,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2635,                        match = false;,4,1,0,0,0,0,0,0,0,7,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2642,                i++;,10,4,0,0,0,0,10,0,0,25,4,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2646,            char sep = separatorChars.charAt(0);,2,0,0,1,2,0,4,0,0,6,36,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2650,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2651,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,0,0,0,6,25,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2653,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2656,                        match = false;,2,1,0,0,0,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2658,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2662,                match = true;,2,0,0,0,0,0,0,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2663,                i++;,2,0,0,0,0,0,0,0,0,2,4,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2668,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,2,0,0,3,7,0,0,0,0,2,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2670,                        lastMatch = true;,2,0,0,0,0,0,4,0,0,6,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2671,                        if (sizePlus1++ == max) {,6,2,0,1,3,0,4,0,0,14,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2672,                            i = len;,4,1,0,0,0,0,0,0,0,5,8,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2675,"                        list.add(str.substring(start, i));",2,0,1,2,4,0,16,0,0,32,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2676,                        match = false;,4,0,0,0,0,0,0,0,0,6,14,0,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2681,                lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2682,                match = true;,2,0,0,0,0,0,0,0,0,4,13,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2683,                i++;,6,1,0,0,0,0,0,0,0,7,4,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2686,        if (match || (preserveAllTokens && lastMatch)) {,10,3,0,2,5,0,4,2,0,19,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2689,        return (String[]) list.toArray(new String[list.size()]);,0,0,0,5,10,1,26,4,0,30,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2758,        if (str == null) {,8,2,0,1,3,0,0,0,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2759,            return null;,6,2,0,0,0,1,0,0,0,8,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2761,        if (str.length() == 0) {,0,1,0,2,5,0,4,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2762,            return ArrayUtils.EMPTY_STRING_ARRAY;,16,2,1,0,0,1,6,2,0,33,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2764,        char[] c = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2767,        int currentType = Character.getType(c[tokenStart]);,4,0,1,2,4,0,4,0,0,13,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2769,            int type = Character.getType(c[pos]);,2,0,1,2,4,0,4,0,0,10,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2771,                continue;,6,0,0,0,0,2,0,4,0,13,9,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2774,                int newTokenStart = pos - 1;,4,1,0,0,0,0,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2775,                if (newTokenStart != tokenStart) {,4,1,0,1,3,0,0,0,0,5,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2777,                    tokenStart = newTokenStart;,4,0,0,0,0,0,0,0,0,5,27,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2781,                tokenStart = pos;,6,1,0,0,0,0,6,0,0,14,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2783,            currentType = type;,4,0,0,0,0,0,0,0,0,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2785,"        list.add(new String(c, tokenStart, c.length - tokenStart));",10,1,0,2,4,0,4,2,0,17,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2860,        if (array == null) {,6,2,0,1,3,0,0,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2864,"        return join(array, separator, 0, array.length);",12,4,0,1,2,1,18,0,0,36,47,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2894,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2895,            return null;,6,0,0,0,0,1,4,0,0,10,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2897,        int bufSize = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2902,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,4,3,1,6,12,0,4,0,0,21,90,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2905,        for (int i = startIndex; i < endIndex; i++) {,12,1,0,1,3,0,8,2,0,24,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2906,            if (i > startIndex) {,4,1,0,1,3,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2907,                buf.append(separator);,12,1,0,1,2,0,0,0,0,14,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2909,            if (array[i] != null) {,2,1,0,2,5,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2941,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2975,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2979,            separator = EMPTY;,4,0,0,0,0,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2984,        int bufSize = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2985,        if (bufSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2986,            return EMPTY;,6,3,0,0,0,1,10,0,0,20,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2992,        StringBuffer buf = new StringBuffer(bufSize);,2,0,0,1,2,0,0,8,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2995,            if (i > startIndex) {,4,0,0,1,3,0,0,4,0,8,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,2998,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3026,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3028,        Object first = iterator.next();,4,0,0,1,2,0,4,2,0,10,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3034,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",4,0,0,1,2,0,0,4,0,8,83,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3035,        if (first != null) {,4,3,0,1,3,0,6,2,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3039,        while (iterator.hasNext()) {,2,0,0,2,5,0,4,0,0,6,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3042,            if (obj != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3066,        if (iterator == null) {,8,1,0,1,3,0,0,0,0,10,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3069,        if (!iterator.hasNext()) {,2,0,0,2,5,0,4,0,0,8,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3070,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3078,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",2,0,0,1,2,0,0,4,0,6,83,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3084,            if (separator != null) {,2,1,0,1,3,0,0,0,0,3,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3085,                buf.append(separator);,4,0,0,1,2,0,0,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3087,            Object obj = iterator.next();,2,0,0,1,2,0,16,2,0,20,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3110,        if (collection == null) {,0,0,0,1,3,0,6,0,0,6,25,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3111,            return null;,4,1,0,0,0,1,0,0,0,7,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3131,        if (collection == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3134,"        return join(collection.iterator(), separator);",0,0,0,2,4,1,6,0,0,8,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3167,            return null;,0,0,0,0,0,1,10,0,0,10,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3188,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3190,        int sz = str.length();,14,2,0,1,2,0,14,0,0,31,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3191,        char[] chs = new char[sz];,2,0,1,2,4,0,18,0,0,22,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3192,        int count = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3193,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,8,0,0,19,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3195,                chs[count++] = str.charAt(i);,4,0,1,2,4,0,12,0,0,21,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3198,        if (count == sz) {,4,0,0,1,3,0,0,0,0,6,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3199,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3231,        if (isEmpty(str) || isEmpty(remove)) {,4,0,0,3,7,0,0,0,0,5,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3267,            return str;,4,0,0,0,0,1,0,0,0,4,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3269,"        if (startsWithIgnoreCase(str, remove)) {",0,0,0,2,5,0,6,0,0,7,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3272,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3337,"        if (endsWithIgnoreCase(str, remove)) {",2,0,0,2,5,0,6,2,0,10,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3338,"            return str.substring(0, str.length() - remove.length());",0,1,0,3,6,1,12,0,0,13,56,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3340,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3367,        if (isEmpty(str) || isEmpty(remove)) {,2,0,0,3,7,0,0,0,0,2,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3368,            return str;,4,0,0,0,0,1,6,0,0,10,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3370,"        return replace(str, remove, EMPTY, -1);",4,4,0,1,2,1,16,0,0,27,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3394,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3397,        int pos = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3400,                chars[pos++] = chars[i];,8,1,1,2,4,0,4,0,0,21,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3403,"        return new String(chars, 0, pos);",8,0,0,1,2,1,8,4,0,21,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3432,"        return replace(text, searchString, replacement, 1);",0,1,0,1,2,1,20,0,0,21,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3492,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3494,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3496,        if (end == -1) {,4,2,0,1,3,0,0,0,0,7,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3497,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3499,        int replLength = searchString.length();,2,0,0,1,2,0,4,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3500,        int increase = replacement.length() - replLength;,4,1,0,1,2,1,6,0,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3503,        StringBuffer buf = new StringBuffer(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3504,        while (end != -1) {,2,1,0,1,3,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3505,"            buf.append(text.substring(start, end)).append(replacement);",0,0,0,3,6,0,16,0,0,16,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3507,            if (--max == 0) {,2,1,0,1,3,0,6,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3508,                break;,6,3,0,0,0,0,0,0,0,9,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3513,        return buf.toString();,2,1,1,1,2,1,4,0,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3556,"        return replaceEach(text, searchList, replacementList, false, 0);",2,1,0,1,2,1,8,0,0,12,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3607,        int timeToLive = searchList == null ? 0 : searchList.length;,8,1,0,0,0,0,6,0,0,15,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3666,        if (text == null || text.length() == 0 || searchList == null || ,4,8,0,1,3,0,4,0,0,16,63,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3673,        if (timeToLive < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3677,        int searchLength = searchList.length;,2,0,0,0,0,0,0,0,0,2,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3678,        int replacementLength = replacementList.length;,10,1,0,0,0,0,0,0,0,11,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3689,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,2,0,1,2,4,0,0,0,0,4,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3692,        int textIndex = -1;,2,0,0,0,0,0,6,0,0,9,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3694,        int tempIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3699,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,6,5,1,2,5,0,0,0,0,19,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3704,            tempIndex = text.indexOf(searchList[i]);,2,0,1,2,4,0,4,0,0,11,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3707,            if (tempIndex == -1) {,8,3,0,1,3,0,0,0,0,12,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3711,                    textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3712,                    replaceIndex = i;,4,0,0,0,0,0,0,0,0,5,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3719,        if (textIndex == -1) {,4,1,0,1,3,0,0,0,0,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3723,        int start = 0;,2,0,0,0,0,0,10,0,0,12,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3730,            int greater = replacementList[i].length() - searchList[i].length();,2,1,1,4,8,0,4,0,0,15,67,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3732,                increase += 3 * greater; // assume 3 matches,4,1,0,0,0,0,0,0,0,6,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3736,"        increase = Math.min(increase, text.length() / 5);",4,1,0,2,4,0,10,4,0,20,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3738,        StringBuffer buf = new StringBuffer(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,62,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3740,        while (textIndex != -1) {,2,1,0,1,3,0,0,0,0,4,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3742,            for (int i = start; i < textIndex; i++) {,12,1,0,1,3,0,4,0,0,18,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3743,                buf.append(text.charAt(i));,4,1,1,2,4,0,10,0,0,24,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3745,            buf.append(replacementList[replaceIndex]);,2,1,0,2,4,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3747,            start = textIndex + searchList[replaceIndex].length();,4,1,1,2,4,0,2,0,0,12,54,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3749,            textIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3750,            replaceIndex = -1;,2,0,0,0,0,0,0,0,0,4,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3751,            tempIndex = -1;,2,0,0,0,0,0,0,0,0,4,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3755,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3760,"                tempIndex = text.indexOf(searchList[i], start);",2,0,1,2,4,0,6,0,0,13,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3764,                    noMoreMatchesForReplIndex[i] = true;,8,2,1,1,2,0,0,0,0,17,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3768,                        replaceIndex = i;,4,0,0,0,0,0,0,0,0,5,17,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3775,        int textLength = text.length();,4,1,0,1,2,0,4,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3777,            buf.append(text.charAt(i));,0,1,0,2,4,0,22,0,0,23,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3781,            return result;,2,0,0,0,0,1,0,0,0,3,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3810,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3853,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3854,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3856,        if (replaceChars == null) {,4,1,0,1,3,0,4,0,0,9,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3857,            replaceChars = EMPTY;,4,0,0,0,0,0,0,0,0,5,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3859,        boolean modified = false;,10,1,0,0,0,0,0,0,0,13,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3860,        int replaceCharsLength = replaceChars.length();,4,1,0,1,2,0,4,0,0,9,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3861,        int strLength = str.length();,16,3,0,1,2,0,8,4,0,32,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3862,        StringBuffer buf = new StringBuffer(strLength);,6,0,1,1,2,0,0,4,0,15,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3864,            char ch = str.charAt(i);,2,0,0,1,2,0,10,0,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3866,            if (index >= 0) {,4,1,0,1,3,0,4,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3868,                if (index < replaceCharsLength) {,4,1,0,1,3,0,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3875,        if (modified) {,4,0,0,1,3,0,0,0,0,4,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3878,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3946,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3949,        if (overlay == null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3950,            overlay = EMPTY;,6,1,0,0,0,0,0,0,0,9,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3953,        if (start < 0) {,8,1,0,1,3,0,0,0,0,9,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3956,        if (start > len) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3957,            start = len;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3959,        if (end < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3960,            end = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3963,            end = len;,4,0,0,0,0,0,0,0,0,5,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3965,        if (start > end) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3966,            int temp = start;,2,1,0,0,0,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3967,            start = end;,4,0,0,0,0,0,0,0,0,5,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,3968,            end = temp;,2,1,0,0,0,0,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4009,        if (str.length() == 1) {,2,1,0,2,5,0,8,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4010,            char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4012,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4017,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4018,        char last = str.charAt(lastIdx);,4,1,1,1,2,0,6,0,0,15,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4020,        if (last == CharUtils.LF) {,8,1,0,1,3,0,0,0,0,9,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4022,                lastIdx--;,4,0,0,0,0,0,6,0,0,11,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4024,        } else if (last != CharUtils.CR) {,10,2,0,1,4,0,4,0,0,18,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4025,            lastIdx++;,8,1,0,0,0,0,4,0,0,15,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4058,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4077,"        return chompLast(str, ""\n"");",0,0,1,1,2,1,4,0,0,13,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4094,        String sub = str.substring(str.length() - sep.length());,8,3,0,3,6,0,16,2,0,29,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4098,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4116,            return sep;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4117,        } else if (idx != -1) {,2,1,0,1,4,0,0,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4120,            return EMPTY;,4,1,0,0,0,1,0,0,0,5,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4136,        int idx = str.indexOf(sep);,14,4,0,1,2,0,0,0,0,18,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4138,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4140,        return str.substring(idx + sep.length());,2,1,0,2,4,1,8,0,0,11,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4158,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4189,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4190,            return null;,2,2,0,0,0,1,4,0,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4192,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,7,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4193,        if (strLen < 2) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4197,"        String ret = str.substring(0, lastIdx);",2,0,0,1,2,0,6,2,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4199,        if (last == CharUtils.LF) {,6,1,0,1,3,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4201,"                return ret.substring(0, lastIdx - 1);",2,1,0,1,2,1,4,0,0,7,37,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4204,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4219,        if (lastIdx <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4220,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4223,        if (last == CharUtils.LF) {,8,2,0,1,3,0,0,0,0,10,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4224,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,0,0,0,2,5,0,0,0,0,1,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4225,                lastIdx--;,2,0,0,0,0,0,0,0,0,3,10,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4228,            lastIdx++;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4278,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4281,        if (repeat <= 0) {,8,2,0,1,3,0,10,0,0,20,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4282,            return EMPTY;,12,2,0,0,0,1,6,0,0,22,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4284,        int inputLength = str.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4285,        if (repeat == 1 || inputLength == 0) {,4,3,0,1,3,0,0,0,0,7,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4288,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4292,        int outputLength = inputLength * repeat;,8,2,0,0,0,0,0,0,0,10,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4295,                char ch = str.charAt(0);,8,5,0,1,2,0,4,0,0,17,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4296,                char[] output1 = new char[outputLength];,2,0,1,2,4,0,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4300,                return new String(output1);,2,0,0,1,2,1,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4303,                char ch1 = str.charAt(1);,2,0,0,1,2,0,4,0,0,6,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4304,                char[] output2 = new char[outputLength];,2,0,1,2,4,0,0,0,0,4,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4305,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",18,3,0,1,3,1,0,0,0,24,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4311,                StringBuffer buf = new StringBuffer(outputLength);,4,1,1,1,2,0,4,0,0,14,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4312,                for (int i = 0; i < repeat; i++) {,10,1,0,1,3,0,0,0,0,12,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4343,        if (repeat < 0) {,4,1,0,1,3,0,0,0,0,5,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4344,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",6,1,1,1,2,0,0,2,0,15,79,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4348,            buf[i] = padChar;,2,0,1,1,2,0,0,0,0,7,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4350,        return new String(buf);,10,1,0,1,2,1,0,2,0,14,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4373,"        return rightPad(str, size, ' ');",2,1,0,1,2,1,0,0,0,3,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4398,        if (str == null) {,6,2,0,1,3,0,0,0,0,8,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4401,        int pads = size - str.length();,4,1,1,1,2,0,8,0,0,22,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4402,        if (pads <= 0) {,2,1,0,1,3,0,6,0,0,9,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4403,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4435,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4439,"            padStr = "" "";",2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4442,        int strLen = str.length();,4,1,0,1,2,0,0,0,0,5,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4443,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4444,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4447,        if (padLen == 1 && pads <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4448,"            return rightPad(str, size, padStr.charAt(0));",2,0,0,2,4,1,0,0,0,3,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4451,        if (pads == padLen) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4453,        } else if (pads < padLen) {,2,0,0,1,4,0,0,0,0,2,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4456,            char[] padding = new char[pads];,2,0,0,2,4,0,4,0,0,6,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4458,            for (int i = 0; i < pads; i++) {,10,2,0,1,3,0,0,0,0,13,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4459,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4461,            return str.concat(new String(padding));,2,0,0,2,4,1,4,2,0,8,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4510,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4513,        int pads = size - str.length();,2,0,0,1,2,0,0,0,0,3,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4515,            return str; // returns original String when possible,8,1,1,0,0,1,0,0,0,12,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4547,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4548,            return null;,2,0,0,0,0,1,0,4,0,6,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4557,            return str; // returns original String when possible,8,0,0,0,0,2,0,4,0,13,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4559,        if (padLen == 1 && pads <= PAD_LIMIT) {,2,1,0,1,3,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4563,        if (pads == padLen) {,6,2,0,1,3,0,0,0,0,8,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4565,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4568,            char[] padding = new char[pads];,2,0,1,2,4,0,0,0,0,4,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4569,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4570,            for (int i = 0; i < pads; i++) {,14,1,0,1,3,0,4,0,0,20,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4573,            return new String(padding).concat(str);,8,1,0,2,4,1,4,2,0,17,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4615,"        return center(str, size, ' ');",0,0,1,1,2,1,8,0,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4643,        if (str == null || size <= 0) {,6,3,0,1,3,0,0,2,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4644,            return str;,4,0,0,0,0,1,4,0,0,8,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4646,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4647,        int pads = size - strLen;,4,1,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4648,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4649,            return str;,4,0,0,0,0,1,0,0,0,4,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4651,"        str = leftPad(str, strLen + pads / 2, padChar);",6,2,0,1,2,0,6,0,0,15,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4652,"        str = rightPad(str, size, padChar);",4,1,0,1,2,0,0,0,0,5,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4683,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4684,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4686,        if (isEmpty(padStr)) {,4,1,1,2,5,0,4,0,0,14,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4687,"            padStr = "" "";",4,0,0,0,0,0,0,0,0,6,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4691,        if (pads <= 0) {,4,2,0,1,3,0,0,0,0,6,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4692,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4694,"        str = leftPad(str, strLen + pads / 2, padStr);",6,2,0,1,2,0,6,0,0,15,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4695,"        str = rightPad(str, size, padStr);",4,1,0,1,2,0,8,0,0,14,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4721,        if (str == null) {,8,1,0,1,3,0,0,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4747,        return str.toUpperCase(locale);,2,0,0,1,2,1,0,0,0,4,31,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4770,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4821,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4824,        return new StringBuffer(strLen),2,0,0,1,2,1,0,2,0,4,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4868,        return new StringBuffer(strLen),2,0,0,1,2,1,8,2,0,13,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4916,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4917,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4919,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4922,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4923,            ch = str.charAt(i);,4,0,0,1,2,0,0,0,0,5,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4924,            if (Character.isUpperCase(ch)) {,10,1,0,2,5,1,6,4,0,23,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4926,            } else if (Character.isTitleCase(ch)) {,4,1,1,2,6,0,6,0,0,18,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4928,            } else if (Character.isLowerCase(ch)) {,0,0,0,2,6,0,4,0,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4977,        int count = 0;,2,1,0,0,0,0,8,0,0,13,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4978,        int idx = 0;,12,3,0,0,0,0,0,2,0,17,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4979,"        while ((idx = str.indexOf(sub, idx)) != -1) {",2,1,0,3,7,0,8,0,0,13,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4980,            count++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4981,            idx += sub.length();,2,0,0,1,2,0,4,0,0,7,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,4983,        return count;,8,3,0,0,0,1,0,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5007,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5010,        int sz = str.length();,2,0,0,1,2,0,4,0,0,7,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5011,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5012,            if (Character.isLetter(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5041,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5042,            return false;,6,1,0,0,0,1,0,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5045,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5047,                return false;,4,0,0,0,0,1,0,4,0,9,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5050,        return true;,4,0,0,0,0,1,0,0,0,5,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5075,            return false;,8,1,0,0,0,1,0,0,0,10,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5077,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5078,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5108,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5111,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5112,        for (int i = 0; i < sz; i++) {,10,2,0,1,3,0,6,0,0,19,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5113,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,4,3,0,6,13,0,16,0,0,25,84,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5117,        return true;,2,0,0,0,0,1,6,2,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5149,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5151,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,8,2,0,3,7,0,10,0,0,23,57,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5180,        if (str == null) {,10,1,0,1,3,0,0,0,0,12,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5183,        int sz = str.length();,4,1,0,1,2,0,4,0,0,9,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5185,            if (Character.isDigit(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5216,        if (str == null) {,8,4,0,1,3,0,0,0,0,12,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5219,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5220,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5225,        return true;,2,1,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5249,            return false;,4,0,0,0,0,1,0,4,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5251,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5252,        for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,10,0,0,10,30,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5254,                return false;,0,0,0,0,0,1,6,0,0,7,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5300,        return str == null ? defaultStr : str;,4,3,0,0,0,1,8,0,0,15,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5340,        if (str == null) {,4,2,0,1,3,0,0,0,0,6,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5341,            return null;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5343,        return new StringBuffer(str).reverse().toString();,2,0,0,3,6,1,4,2,0,8,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5371,"        String[] strs = split(str, separatorChar);",14,2,0,2,4,0,20,4,0,43,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5372,        ArrayUtils.reverse(strs);,4,1,0,1,2,0,6,0,0,11,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5400,            return null;,6,0,0,0,0,1,6,0,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5404,"        String[] strs = split(str, separatorChars);",2,0,0,2,4,0,6,2,0,10,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5406,        if (separatorChars == null) {,2,1,0,1,3,0,0,0,0,3,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5486,        if (str == null) {,8,2,0,1,3,0,0,0,0,10,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5489,        if (maxWidth < 4) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5492,        if (str.length() <= maxWidth) {,2,1,0,2,5,0,4,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5495,        if (offset > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5496,            offset = str.length();,2,0,0,1,2,0,4,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5499,            offset = str.length() - (maxWidth - 3);,4,2,0,2,4,0,4,0,0,11,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5501,        if (offset <= 4) {,4,2,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5505,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",6,1,0,1,2,0,4,2,0,15,82,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5508,"            return ""..."" + abbreviate(str.substring(offset), maxWidth - 3);",2,2,0,2,4,1,8,0,0,13,63,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5510,"        return ""..."" + str.substring(str.length() - (maxWidth - 3));",8,6,0,3,6,1,8,0,0,24,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5541,        if (str1 == null) {,8,4,0,1,3,0,0,0,0,13,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5544,        if (str2 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5545,            return str1;,8,1,0,0,0,1,0,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5547,"        int at = indexOfDifference(str1, str2);",4,0,0,1,2,0,6,0,0,10,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5548,        if (at == -1) {,2,1,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5549,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5551,        return str2.substring(at);,2,0,0,1,2,1,6,0,0,8,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5578,        if (str1 == str2) {,4,1,0,1,3,0,0,0,0,6,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5582,            return 0;,6,2,0,0,0,1,4,0,0,12,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5585,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,8,3,0,3,7,0,8,0,0,21,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5590,        if (i < str2.length() || i < str1.length()) {,4,3,0,3,7,0,8,0,0,15,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5591,            return i;,4,0,0,0,0,1,0,0,0,5,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5628,        if (strs == null || strs.length <= 1) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5632,        boolean allStringsNull = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5633,        int arrayLen = strs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5634,        int shortestStrLen = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5635,        int longestStrLen = 0;,4,0,0,0,0,0,0,0,0,5,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5641,            if (strs[i] == null) {,0,1,1,2,5,0,0,0,0,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5643,                shortestStrLen = 0;,2,0,0,0,0,0,0,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5645,                allStringsNull = false;,4,1,0,0,0,0,0,0,0,7,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5647,"                longestStrLen = Math.max(strs[i].length(), longestStrLen);",2,0,1,3,6,0,8,0,0,15,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5652,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,6,3,0,2,5,0,8,2,0,20,63,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5657,        if (shortestStrLen == 0) {,2,1,0,1,3,0,0,0,0,3,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5663,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,20,2,0,1,3,0,0,0,0,24,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5664,            char comparisonChar = strs[0].charAt(stringPos);,2,0,1,2,4,0,4,0,0,8,48,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5665,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,4,3,0,1,3,0,0,0,0,7,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5666,                if (strs[arrayPos].charAt(stringPos) != comparisonChar) {,2,1,1,3,7,0,4,0,0,11,57,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5667,                    firstDiff = stringPos;,10,0,0,0,0,0,4,0,0,15,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5671,            if (firstDiff != -1) {,2,1,0,1,3,0,0,0,0,4,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5672,                break;,2,1,0,0,0,0,0,0,0,3,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5676,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,6,3,0,1,3,0,6,0,0,16,57,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5719,        if (strs == null || strs.length == 0) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5720,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5726,                return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5728,            return strs[0];,2,1,1,1,2,1,0,0,0,5,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5729,        } else if (smallestIndexOfDiff == 0) {,4,1,1,1,4,0,0,0,0,7,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5775,        if (s == null || t == null) {,6,8,1,1,3,0,0,0,0,22,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5796,        int n = s.length(); // length of s,4,1,0,1,2,0,4,0,0,9,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5797,        int m = t.length(); // length of t,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5800,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5801,        } else if (m == 0) {,2,1,0,1,4,0,0,0,0,3,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5802,            return n;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5807,            String tmp = s;,8,1,0,0,0,0,6,4,0,19,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5808,            s = t;,6,1,0,0,0,0,0,0,0,8,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5809,            t = tmp;,4,0,0,0,0,0,0,0,0,5,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5810,            n = m;,6,1,0,0,0,0,0,0,0,8,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5811,            m = t.length();,4,0,0,1,2,0,4,0,0,9,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5815,"        int d[] = new int[n+1]; // cost array, horizontally",4,1,0,2,4,0,0,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5826,        for (i = 0; i<=n; i++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5830,        for (j = 1; j<=m; j++) {,10,1,1,1,3,0,2,0,0,24,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5834,            for (i=1; i<=n; i++) {,16,2,0,1,3,0,0,0,0,21,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5835,                cost = s.charAt(i-1)==t_j ? 0 : 1;,6,2,0,1,2,0,4,0,0,13,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5837,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",6,5,1,6,12,0,8,0,0,32,58,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5841,            _d = p;,4,0,0,0,0,0,0,0,0,5,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5843,            d = _d;,4,0,0,0,0,0,0,0,0,6,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5848,        return p[n];,0,0,1,1,2,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5937,        if (str == null || prefix == null) {,12,4,0,1,3,0,0,0,0,16,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5938,            return (str == null && prefix == null);,6,3,0,1,2,1,0,0,0,9,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,5940,        if (prefix.length() > str.length()) {,0,1,0,3,7,0,8,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6012,        if (str == null || suffix == null) {,4,3,0,1,3,0,0,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6013,            return (str == null && suffix == null);,4,3,0,1,2,1,0,0,0,7,39,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,45,6018,        int strOffset = str.length() - suffix.length();,0,0,0,2,4,0,0,2,0,4,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,164,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,167,        if (newLineStr == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,168,            newLineStr = SystemUtils.LINE_SEPARATOR;,6,0,0,0,0,0,0,0,0,7,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,170,        if (wrapLength < 1) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,171,            wrapLength = 1;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,173,        int inputLineLength = str.length();,2,0,0,1,2,0,4,0,0,6,35,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,177,        while ((inputLineLength - offset) > wrapLength) {,6,2,0,2,5,0,0,0,0,8,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,179,                offset++;,2,0,0,0,0,0,0,0,0,3,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,182,"            int spaceToWrapAt = str.lastIndexOf(' ', wrapLength + offset);",6,1,0,1,2,0,4,0,0,12,62,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,184,            if (spaceToWrapAt >= offset) {,4,1,0,1,3,0,0,0,0,5,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,186,"                wrappedLine.append(str.substring(offset, spaceToWrapAt));",0,0,0,2,4,0,12,0,0,12,57,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,188,                offset = spaceToWrapAt + 1;,4,1,0,0,0,0,0,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,192,                if (wrapLongWords) {,2,0,0,1,3,0,0,0,0,2,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,194,"                    wrappedLine.append(str.substring(offset, wrapLength + offset));",4,1,0,2,4,0,10,0,0,15,63,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,195,                    wrappedLine.append(newLineStr);,2,1,1,1,2,0,6,0,0,13,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,199,"                    spaceToWrapAt = str.indexOf(' ', wrapLength + offset);",6,1,0,1,2,0,4,0,0,13,54,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,200,                    if (spaceToWrapAt >= 0) {,2,1,0,1,3,0,0,0,0,3,25,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,201,"                        wrappedLine.append(str.substring(offset, spaceToWrapAt));",2,0,0,2,4,0,4,2,0,8,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,203,                        offset = spaceToWrapAt + 1;,4,1,0,0,0,0,0,0,0,6,27,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,206,                        offset = inputLineLength;,4,0,0,0,0,0,0,0,0,5,25,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,213,        wrappedLine.append(str.substring(offset));,2,0,0,2,4,0,14,0,0,16,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,276,        int delimLen = (delimiters == null ? -1 : delimiters.length);,8,1,0,1,2,0,0,0,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,277,        if (str == null || str.length() == 0 || delimLen == 0) {,4,5,0,2,5,0,14,0,0,24,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,278,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,280,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,281,        StringBuffer buffer = new StringBuffer(strLen);,6,0,0,1,2,0,0,4,0,12,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,282,        boolean capitalizeNext = true;,2,0,0,0,0,0,0,0,0,3,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,283,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,284,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,288,                capitalizeNext = true;,2,0,0,0,0,0,0,0,0,4,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,289,            } else if (capitalizeNext) {,2,0,0,1,4,0,0,0,0,2,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,290,                buffer.append(Character.toTitleCase(ch));,0,0,0,2,4,0,10,0,0,10,41,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,291,                capitalizeNext = false;,2,0,0,0,0,0,0,0,0,4,23,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,293,                buffer.append(ch);,2,1,0,1,2,0,12,0,0,15,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,296,        return buffer.toString();,0,0,0,1,2,1,0,0,0,1,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,350,        int delimLen = (delimiters == null ? -1 : delimiters.length);,10,1,0,1,2,0,0,0,0,12,61,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,352,            return str;,2,0,0,0,0,1,0,2,0,4,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,354,        str = str.toLowerCase();,2,0,0,1,2,0,4,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,406,        int delimLen = (delimiters == null ? -1 : delimiters.length);,8,1,0,1,2,0,0,0,0,10,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,407,        if (str == null || str.length() == 0 || delimLen == 0) {,4,5,0,2,5,0,4,0,0,13,56,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,408,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,410,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,411,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,412,        boolean uncapitalizeNext = true;,4,0,0,0,0,0,0,2,0,7,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,414,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,423,                buffer.append(ch);,2,0,0,1,2,0,6,0,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,454,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,455,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,457,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,459,        boolean whitespace = true;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,460,        char ch = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,461,        char tmp = 0;,2,0,0,0,0,0,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,463,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,464,            ch = str.charAt(i);,0,0,0,1,2,0,10,0,0,10,19,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,466,                tmp = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,468,                tmp = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,32,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,470,                if (whitespace) {,2,0,0,1,3,0,0,0,0,2,17,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,471,                    tmp = Character.toTitleCase(ch);,4,0,1,1,2,0,10,0,0,20,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,476,                tmp = ch;,4,0,0,0,0,0,0,0,0,5,9,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,479,            whitespace = Character.isWhitespace(ch);,2,0,0,1,2,0,6,0,0,9,40,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,539,        if (str == null || str.length() == 0) {,2,3,0,2,5,0,4,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,540,            return str;,4,1,0,0,0,1,0,0,0,5,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,542,        if (delimiters != null && delimiters.length == 0) {,6,3,0,1,3,0,6,0,0,16,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,545,        int strLen = str.length();,12,2,0,1,2,0,4,0,0,19,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,546,        char[] buf = new char[strLen / 2 + 1];,4,2,0,2,4,0,0,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,548,        boolean lastWasGap = true;,6,0,0,0,0,0,6,0,0,13,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,549,        for (int i = 0; i < strLen; i++) {,12,2,1,1,3,0,0,0,0,19,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,550,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,553,                lastWasGap = true;,2,0,0,0,0,0,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,554,            } else if (lastWasGap) {,2,0,0,1,4,0,0,0,0,2,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,555,                buf[count++] = ch;,4,0,1,1,2,0,0,0,0,8,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,556,                lastWasGap = false;,2,0,0,0,0,0,0,0,0,4,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,561,"        return new String(buf, 0, count);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,573,        if (delimiters == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,576,"        for (int i = 0, isize = delimiters.length; i < isize; i++) {",16,1,0,1,3,0,0,0,0,19,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,577,            if (ch == delimiters[i]) {,2,1,1,2,5,0,0,0,0,7,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,578,                return true;,0,0,1,0,0,1,0,0,0,6,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,607,        if (str == null) {,4,2,0,1,3,0,4,0,0,10,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,611,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,618,        if (upper == -1 || upper > str.length()) {,4,3,0,2,5,0,4,0,0,12,42,4,0.0,1,1
defect4j,lang,org/apache/commons/lang/WordUtils,45,623,            upper = lower;,4,0,0,0,0,0,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,626,        StringBuffer result = new StringBuffer();,2,0,0,1,2,0,0,4,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,627,"        int index = StringUtils.indexOf(str, "" "", lower);",2,0,0,1,2,0,8,0,0,11,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,628,        if (index == -1) {,4,1,0,1,3,0,0,0,0,6,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,632,                result.append(StringUtils.defaultString(appendToEnd));,2,1,0,2,4,0,10,0,0,13,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/WordUtils,45,634,        } else if (index > upper) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,244,                            out.write('\\');,6,1,0,1,2,0,4,0,0,12,16,3,1.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,245,                        out.write('/');,2,0,1,1,2,0,14,2,0,23,15,3,1.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,86,"        return escapeJavaStyleString(str, false);",2,0,0,1,2,4,8,2,0,17,41,1,0.33333,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,159,            StringWriter writer = new StringWriter(str.length() * 2);,2,1,0,2,4,0,4,4,0,11,57,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,161,            return writer.toString();,6,0,0,1,2,1,8,0,0,14,25,3,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,179,        if (out == null) {,6,1,0,1,3,3,2,2,0,16,18,1,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,182,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,186,        sz = str.length();,2,0,0,1,2,0,4,0,0,7,18,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,187,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,188,            char ch = str.charAt(i);,2,0,0,1,2,3,2,2,0,10,24,2,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,191,            if (ch > 0xfff) {,2,1,0,1,3,0,0,0,0,3,17,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,195,            } else if (ch > 0x7f) {,2,1,0,1,4,0,0,0,0,3,23,8,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,197,            } else if (ch < 32) {,6,2,0,1,4,3,2,2,0,16,21,1,0.25,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,45,    private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,2,0,0,1,2,3,6,2,0,13,70,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,46,"    private static final char[] CSV_SEARCH_CHARS = new char[] {CSV_DELIMITER, CSV_QUOTE, CharUtils.CR, CharUtils.LF};",14,0,0,3,6,3,0,0,0,17,113,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,47,    protected NestableDelegate delegate = new NestableDelegate(this);,4,1,0,1,2,1,0,4,0,12,65,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,53,    private Throwable cause = null;,6,0,0,0,0,1,0,2,0,10,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,70,        super(msg);,4,0,0,1,2,0,0,4,0,8,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,71,    },0,1,0,0,1,0,8,0,0,9,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,82,        this.cause = cause;,4,0,0,0,0,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,94,        super(msg);,4,1,0,1,2,0,4,0,0,10,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,95,        this.cause = cause;,4,1,0,0,0,0,6,0,0,12,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,96,    },2,0,0,0,1,0,4,0,0,6,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,102,        return cause;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,113,        if (super.getMessage() != null) {,2,0,0,2,5,3,0,4,0,9,33,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,116,            return cause.toString();,10,1,0,1,2,1,0,2,0,14,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,118,            return null;,2,0,0,0,0,4,4,2,0,12,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,126,        if (index == 0) {,12,0,0,1,3,0,0,0,0,12,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,127,            return super.getMessage();,2,0,0,1,2,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,157,        return delegate.getThrowables();,2,0,0,1,2,1,0,0,0,2,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,179,    },4,0,0,0,1,6,4,6,0,21,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,192,        delegate.printStackTrace(out);,0,0,0,1,2,0,16,0,0,17,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,199,        super.printStackTrace(out);,4,0,0,1,2,0,0,0,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,127,"        return escapeJavaStyleString(str, true);",10,0,0,1,2,1,10,0,0,22,40,1,0.0,1,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,144,    },4,0,0,0,1,0,6,0,0,10,1,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,156,            return null;,2,0,0,0,0,1,4,2,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,180,"            throw new IllegalArgumentException(""The Writer must not be null"");",10,5,0,1,2,0,8,0,0,23,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,183,            return;,20,1,0,0,0,4,4,2,0,30,7,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,194,"                out.write(""\\u0"" + hex(ch));",0,1,0,2,4,0,8,0,0,10,28,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,196,"                out.write(""\\u00"" + hex(ch));",0,1,0,2,4,0,8,0,0,10,29,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,198,                switch (ch) {,2,0,0,1,3,0,0,0,0,2,13,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,204,                        out.write('\\');,0,0,0,1,2,0,12,0,0,13,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,205,                        out.write('n');,0,1,0,1,2,0,8,0,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,208,                        out.write('\\');,2,0,0,1,2,0,4,0,0,8,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,210,                        break;,6,1,1,0,0,0,2,0,0,14,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,212,                        out.write('\\');,6,1,0,1,2,0,4,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,214,                        break;,4,2,0,0,0,0,8,0,0,15,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,216,                        out.write('\\');,2,0,0,1,2,3,4,4,0,15,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,221,"                            out.write(""\\u00"" + hex(ch));",2,2,0,2,4,0,8,0,0,13,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,230,                        if (escapeSingleQuote) {,2,0,0,1,3,0,0,0,0,2,24,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,233,                        out.write('\'');,2,0,0,1,2,3,4,4,0,14,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,234,                        break;,6,1,1,0,0,3,0,0,0,16,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,240,                        out.write('\\');,6,1,0,1,2,0,4,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,241,                        out.write('\\');,6,0,0,1,2,3,0,4,0,14,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,276,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,280,            StringWriter writer = new StringWriter(str.length());,2,0,0,2,4,0,4,4,0,10,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,281,"            unescapeJava(writer, str);",4,2,0,1,2,0,12,0,0,18,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,283,        } catch (IOException ioe) {,2,0,0,1,4,0,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,306,        if (out == null) {,0,0,0,1,3,0,4,0,0,5,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,310,            return;,4,0,0,0,0,1,0,2,0,6,7,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,312,        int sz = str.length();,12,7,0,1,2,0,8,0,0,27,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,314,        boolean hadSlash = false;,3,1,0,0,0,0,14,2,0,20,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,316,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,318,            if (inUnicode) {,2,0,0,1,3,0,0,0,0,2,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,321,                unicode.append(ch);,2,1,0,1,2,0,4,4,0,11,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,322,                if (unicode.length() == 4) {,8,1,0,2,5,0,4,2,0,17,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,326,"                        int value = Integer.parseInt(unicode.toString(), 16);",2,0,0,2,4,0,8,0,0,10,53,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,328,                        unicode.setLength(0);,6,0,0,1,2,3,0,4,0,13,21,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,331,                    } catch (NumberFormatException nfe) {,2,0,0,1,4,3,2,0,0,8,37,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,332,"                        throw new NestableRuntimeException(""Unable to parse unicode value: "" + unicode, nfe);",4,1,0,1,2,0,0,2,0,8,85,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,340,                switch (ch) {,6,0,0,1,3,3,0,4,0,13,13,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,342,                        out.write('\\');,2,1,0,1,2,0,4,0,0,8,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,345,                        out.write('\'');,6,3,0,1,2,0,0,0,0,9,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,352,                        break;,4,0,0,0,0,0,6,0,0,11,6,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,354,                        out.write('\f');,0,0,0,1,2,0,0,2,0,2,16,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,357,                        out.write('\t');,2,1,0,1,2,0,4,0,0,8,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,361,                        break;,2,0,0,0,0,0,8,2,0,14,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,368,                            inUnicode = true;,4,2,0,0,0,0,0,0,0,6,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,376,            } else if (ch == '\\') {,2,1,0,1,4,0,0,0,0,4,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,380,            out.write(ch);,0,0,0,1,2,0,2,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,382,        if (hadSlash) {,2,0,0,1,3,0,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,421,"        unescapeJava(out, str);",4,0,0,1,2,0,10,0,0,14,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,453,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,454,            return null;,6,1,0,0,0,1,4,2,0,13,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,457,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,2,1,0,4,8,0,4,4,0,11,67,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,460,        } catch (IOException e) {,6,0,0,1,4,0,0,2,0,10,25,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,463,            e.printStackTrace();,2,0,0,1,2,0,16,0,0,19,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,498,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,499,"            throw new IllegalArgumentException (""The Writer must not be null."");",2,0,0,1,2,0,8,0,0,10,68,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,501,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,502,            return;,6,1,0,0,0,1,4,0,0,12,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,504,"        Entities.HTML40.escape(writer, string);",4,0,0,1,2,0,6,0,0,10,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,505,    },4,1,0,0,1,0,0,0,0,5,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,525,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,529,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,2,0,0,4,8,0,0,0,0,3,67,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,532,        } catch (IOException e) {,2,0,0,1,4,0,0,2,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,535,            e.printStackTrace();,2,0,0,1,2,0,8,0,0,11,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,559,        if (writer == null ) {,6,1,0,1,3,0,0,4,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,562,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,565,"        Entities.HTML40.unescape(writer, string);",4,0,0,1,2,0,6,0,0,10,41,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,589,        if (writer == null ) {,2,1,0,1,3,0,2,0,0,5,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,593,            return;,6,1,0,0,0,1,8,2,0,17,7,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,595,"        Entities.XML.escape(writer, str);",4,0,0,1,2,0,6,0,0,10,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,616,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,619,        return Entities.XML.escape(str);,4,0,0,1,2,1,4,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,641,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,644,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,647,"        Entities.XML.unescape(writer, str);",6,0,0,1,2,0,6,0,0,12,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,666,        if (str == null) {,6,2,0,1,3,0,0,0,0,8,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,669,        return Entities.XML.unescape(str);,10,0,0,1,2,4,4,4,0,21,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,692,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,723,"        if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {",0,0,0,2,5,0,8,0,0,8,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,727,            StringWriter writer = new StringWriter();,8,1,0,1,2,0,4,0,0,14,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,730,        } catch (IOException ioe) {,2,0,0,1,4,0,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,732,            ioe.printStackTrace();,10,2,0,1,2,0,6,2,0,20,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,762,            if (str != null) {,2,1,0,1,3,0,0,0,0,3,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,768,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,769,            char c = str.charAt(i);,10,1,0,1,2,0,6,0,0,18,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,801,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,805,            StringWriter writer = new StringWriter();,2,0,0,1,2,0,0,4,0,6,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,808,        } catch (IOException ioe) {,2,0,0,1,4,0,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,842,        if (str.length() < 2) {,2,1,0,2,5,0,12,4,0,19,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,854,"        if ( StringUtils.containsAny(quoteless, CSV_SEARCH_CHARS) ) {",4,1,0,2,5,0,0,0,0,5,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,856,"            str = StringUtils.replace(quoteless, CSV_QUOTE_STR + CSV_QUOTE_STR, CSV_QUOTE_STR);",6,1,0,1,2,0,8,0,0,16,83,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,158,        return nullText;,2,0,0,0,0,1,0,0,0,2,16,4,1.33333,1,1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1184,            ensureCapacity(size + width);,4,1,0,1,2,0,2,0,0,7,29,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1186,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1227,        if (width > 0) {,6,3,0,1,3,0,8,0,0,18,16,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1228,            ensureCapacity(size + width);,6,1,0,1,2,0,8,2,0,17,29,5,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1229,            String str = (obj == null ? getNullText() : obj.toString());,4,1,0,3,6,0,6,2,0,14,60,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1230,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.25,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,98,        this(CAPACITY);,2,0,0,1,2,0,0,0,0,2,15,4,0.02837,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,111,        buffer = new char[initialCapacity];,2,0,1,1,2,0,0,0,0,5,35,4,0.02778,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,112,    },2,0,0,0,1,0,6,0,0,9,1,3,0.02778,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,381,                isEquals = lhs.equals(rhs);,4,0,0,1,2,0,6,2,0,13,27,4,0.05263,1,1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,368,        if (isEquals == false) {,2,1,0,1,3,0,0,0,0,4,24,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,371,        if (lhs == rhs) {,6,1,0,1,3,0,6,0,0,15,17,3,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,374,        if (lhs == null || rhs == null) {,4,3,0,1,3,0,0,0,0,7,33,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,378,        Class lhsClass = lhs.getClass();,2,0,0,1,2,0,4,2,0,8,32,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,379,        if (!lhsClass.isArray()) {,6,1,0,2,5,0,4,0,0,12,26,4,0.02222,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,831,        return this.isEquals;,4,1,0,0,0,1,0,0,0,6,21,6,0.01639,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,100,    public EqualsBuilder() {,2,0,0,1,3,1,0,0,0,3,24,2,0.01613,0,0
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,92,    private boolean isEquals = true;,6,0,0,0,0,1,4,0,0,12,32,1,0.01613,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,146,            if (numerator==Integer.MIN_VALUE ||,6,2,0,0,1,0,0,0,0,8,35,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,150,            numerator = -numerator;,2,0,0,0,0,0,0,4,0,6,23,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,151,            denominator = -denominator;,4,0,0,0,0,0,0,0,0,6,27,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,582,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,6,7,0,3,7,0,0,0,0,13,72,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,585,        if (k==31) {,2,1,0,1,3,0,0,0,0,3,12,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,590,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,8,3,0,3,6,0,0,0,0,12,38,5,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,596,            while ((t&1)==0) { // while t is even..,4,2,0,2,5,3,6,2,0,17,39,1,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,600,            if (t>0) {,2,1,0,1,3,0,0,0,0,3,10,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,603,                v = t;,4,0,0,0,0,0,0,0,0,5,6,8,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,606,            t = (v - u)/2;,6,2,0,1,2,0,0,0,0,9,14,6,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,609,        } while (t!=0);,2,1,0,1,3,0,0,0,0,3,15,4,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,610,        return -u*(1<<k); // gcd is u*2^k,2,0,0,1,2,4,0,0,0,5,33,2,0.125,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,571,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,2,1,0,3,7,0,0,0,0,3,43,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,572,            return 1;,6,0,0,0,0,1,8,0,0,14,9,3,0.11111,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,142,        if (denominator == 0) {,4,1,0,1,3,1,0,2,0,8,23,1,0.06667,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,145,        if (denominator < 0) {,2,1,0,1,3,0,0,0,0,3,22,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,368,        return numerator;,4,0,0,0,0,1,0,0,0,4,17,3,0.04762,0,0
defect4j,lang,org/apache/commons/lang/math/Fraction,49,377,        return denominator;,2,0,0,0,0,1,0,0,0,2,19,4,0.04762,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1708,"        public Pair(Object obj1, Object obj2) {",6,0,0,1,3,1,0,4,0,11,39,3,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1709,            mObj1 = obj1;,4,2,0,0,0,0,0,0,0,6,13,10,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1711,        },4,1,0,0,1,0,0,0,0,5,1,8,4.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,772,            return new UnpaddedNumberField(field);,2,0,0,1,2,1,0,2,0,4,38,6,1.33333,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,954,        return mLocale;,4,0,0,0,0,1,4,0,0,9,15,3,1.33333,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1186,            mField = field;,2,0,0,0,0,3,0,4,0,9,15,2,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1176,        static final UnpaddedNumberField INSTANCE_YEAR = new UnpaddedNumberField(Calendar.YEAR);,6,0,0,1,2,2,0,4,0,12,88,3,1.33333,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,425,"        return getDateTimeInstance(dateStyle, timeStyle, null, locale);",4,0,0,1,2,1,8,0,0,13,63,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,461,"        Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));",12,2,0,3,6,0,0,8,0,22,70,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,462,        if (timeZone != null) {,2,1,0,1,3,0,0,0,0,3,23,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,465,        if (locale != null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,469,        FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);,8,5,0,2,4,0,10,4,0,28,73,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,470,        if (format == null) {,4,2,0,1,3,0,10,0,0,16,21,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,471,            if (locale == null) {,4,1,0,1,3,2,4,2,0,13,21,2,1.0,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,475,"                SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,",2,0,0,1,3,0,8,4,0,14,100,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,477,                String pattern = formatter.toPattern();,6,0,0,1,2,3,4,4,0,18,39,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,478,"                format = getInstance(pattern, timeZone, locale);",2,0,0,1,2,0,8,0,0,11,48,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,479,"                cDateTimeInstanceCache.put(key, format);",2,0,0,1,2,2,8,4,0,16,40,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,485,        return format;,4,1,0,0,0,1,8,0,0,13,14,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,672,                if (tokenLen >= 4) {,2,1,0,1,3,0,0,0,0,3,20,7,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,675,"                    rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);",12,0,0,1,2,0,0,2,0,15,81,9,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1725,            Pair key = (Pair)obj;,2,1,0,1,2,0,0,0,0,4,21,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1727,            return,2,0,0,0,0,3,0,4,0,9,6,2,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1538,"        TimeZoneNameRule(TimeZone timeZone, boolean timeZoneForced, Locale locale, int style) {",10,0,1,1,3,0,10,4,0,26,87,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1539,            mTimeZone = timeZone;,6,0,0,0,0,3,2,0,0,13,21,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1540,            mTimeZoneForced = timeZoneForced;,4,0,0,0,0,0,0,0,0,5,33,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1541,            mLocale = locale;,4,0,0,0,0,0,0,0,0,5,17,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1542,            mStyle = style;,4,0,0,0,0,0,0,0,0,5,15,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1544,            if (timeZoneForced) {,2,0,0,1,3,0,0,0,0,2,21,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1548,                mStandard = null;,4,0,0,0,0,1,12,0,0,18,17,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1549,                mDaylight = null;,6,1,0,0,0,1,0,2,0,13,17,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1447,        TwelveHourField(NumberRule rule) {,4,0,0,1,3,0,0,2,0,6,34,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1448,            mRule = rule;,4,0,0,0,0,0,4,2,0,13,13,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,280,        Object key = new Integer(style);,4,0,0,1,2,0,0,4,0,8,32,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,281,        if (timeZone != null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,286,"            key = new Pair(key, locale);",6,0,0,1,2,0,0,2,0,9,28,6,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,290,        FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);,0,1,0,2,4,0,4,0,0,5,69,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,297,                String pattern = formatter.toPattern();,2,0,0,1,2,0,4,2,0,8,39,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,299,"                cDateInstanceCache.put(key, format);",6,0,0,1,2,0,0,0,0,6,36,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,303,            },2,0,0,0,1,0,6,0,0,8,1,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,633,"                rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));",6,0,0,2,4,0,4,2,0,13,70,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1113,            mValue = value;,10,1,0,0,0,0,4,2,0,19,15,3,0.44444,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,45,    },4,0,0,0,1,0,0,0,0,4,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,87,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,1,1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,108,        return !isTrue(bool);,2,0,0,1,2,1,8,0,0,11,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,165,        return bool ? Boolean.TRUE : Boolean.FALSE;,10,0,0,0,0,1,0,0,0,10,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,203,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,204,            return valueIfNull;,4,0,0,0,0,4,0,4,0,11,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,226,        return value == 0 ? false : true;,2,1,0,0,0,1,0,0,0,5,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,244,        return value == 0 ? Boolean.FALSE : Boolean.TRUE;,10,1,0,0,0,1,0,0,0,11,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,264,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,265,            return null;,4,1,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,267,        return value.intValue() == 0 ? Boolean.FALSE : Boolean.TRUE;,8,1,0,1,2,1,4,0,0,13,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,289,        } else if (value == falseValue) {,6,1,0,1,4,0,10,0,0,18,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,290,            return false;,2,0,0,0,0,1,8,2,0,13,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,316,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,317,            if (trueValue == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,318,                return true;,4,0,0,0,0,1,0,0,0,6,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,319,            } else if (falseValue == null) {,4,1,0,1,4,2,0,4,0,11,32,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,322,        } else if (value.equals(trueValue)) {,4,0,0,2,6,0,6,0,0,11,37,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,323,            return true;,0,0,0,0,0,1,0,0,0,1,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,324,        } else if (value.equals(falseValue)) {,0,0,0,2,6,0,6,0,0,6,38,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,325,            return false;,2,1,0,0,0,1,0,0,0,4,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,328,"        throw new IllegalArgumentException(""The Integer did not match either specified value"");",2,0,0,1,2,0,4,0,0,6,87,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,348,        if (value == trueValue) {,4,2,0,1,3,0,12,0,0,20,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,349,            return Boolean.TRUE;,6,0,0,0,0,4,0,4,0,13,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,351,            return Boolean.FALSE;,8,0,0,0,0,1,0,0,0,9,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,352,        } else if (value == nullValue) {,4,1,0,1,4,0,0,0,0,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,379,        if (value == null) {,4,2,0,1,3,0,8,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,380,            if (trueValue == null) {,2,0,0,1,3,3,0,0,0,5,24,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,381,                return Boolean.TRUE;,8,0,0,0,0,4,0,2,0,13,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,382,            } else if (falseValue == null) {,2,1,0,1,4,0,0,0,0,3,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,383,                return Boolean.FALSE;,4,0,0,0,0,1,4,0,0,8,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,384,            } else if (nullValue == null) {,2,1,0,1,4,0,0,0,0,3,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,388,            return Boolean.TRUE;,4,0,0,0,0,1,0,0,0,4,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,390,            return Boolean.FALSE;,6,1,0,0,0,1,0,0,0,7,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,395,"        throw new IllegalArgumentException(""The Integer did not match any specified value"");",0,0,0,1,2,0,4,0,0,5,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,413,        return bool ? 1 : 0;,2,0,0,0,0,1,0,0,0,2,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,429,        return bool ? NumberUtils.INTEGER_ONE : NumberUtils.INTEGER_ZERO;,8,1,0,0,0,1,0,0,0,10,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,447,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,448,            return null;,10,0,0,0,0,1,6,8,0,26,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,467,        return bool ? trueValue : falseValue;,2,0,0,0,0,1,4,0,0,6,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,486,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,489,        return bool.booleanValue() ? trueValue : falseValue;,6,0,0,1,2,1,10,2,0,18,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,508,        return bool ? trueValue : falseValue;,6,0,0,0,0,1,0,0,0,6,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,531,            return nullValue;,2,0,0,0,0,1,0,2,0,4,17,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,533,        return bool.booleanValue() ? trueValue : falseValue;,10,1,0,1,2,4,20,0,0,37,52,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,564,            return Boolean.TRUE;,12,1,0,0,0,1,0,2,0,16,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,565,"        } else if (""false"".equalsIgnoreCase(str)) {",2,0,0,2,6,0,0,0,0,2,43,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,566,            return Boolean.FALSE;,4,0,0,0,0,1,0,0,0,4,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,568,            return Boolean.TRUE;,0,1,0,0,0,1,8,0,0,10,20,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,569,"        } else if (""off"".equalsIgnoreCase(str)) {",0,0,0,2,6,0,4,0,0,5,41,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,570,            return Boolean.FALSE;,6,0,0,0,0,1,2,2,0,10,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,572,            return Boolean.TRUE;,8,1,0,0,0,6,8,6,0,33,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,573,"        } else if (""no"".equalsIgnoreCase(str)) {",0,0,0,2,6,0,12,0,0,13,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,577,        return null;,4,3,0,0,0,1,4,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,603,        if (str == null) {,4,3,0,1,3,0,12,0,0,20,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,604,            if (trueString == null) {,2,1,0,1,3,0,0,0,0,3,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,605,                return Boolean.TRUE;,4,0,0,0,0,1,0,0,0,4,20,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,607,                return Boolean.FALSE;,4,0,0,0,0,1,0,0,0,4,21,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,611,        } else if (str.equals(trueString)) {,4,6,0,2,6,0,12,0,0,22,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,614,            return Boolean.FALSE;,14,1,1,0,0,1,0,2,0,22,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,615,        } else if (str.equals(nullString)) {,6,1,0,2,6,0,6,0,0,14,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,619,"        throw new IllegalArgumentException(""The String did not match any specified value"");",8,1,0,1,2,0,0,2,0,13,83,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,656,"        if (str == ""true"") {",2,1,0,1,3,0,0,0,0,4,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,657,            return true;,0,1,0,0,0,1,4,0,0,6,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,659,        if (str == null) {,6,0,0,1,3,3,4,2,0,16,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,660,            return false;,8,0,0,0,0,4,0,4,0,16,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,662,        switch (str.length()) {,2,0,0,2,5,0,0,0,0,2,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,666,                return ,2,0,0,0,0,1,0,0,0,3,6,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,672,                if (ch == 'y') {,2,1,0,1,3,0,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,684,                char ch = str.charAt(0);,2,1,0,1,2,0,0,0,0,3,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,686,                    return ,4,1,0,0,0,1,4,0,0,11,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,691,                if (ch == 'T') {,2,1,0,1,3,0,0,0,0,4,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,692,                    return ,0,0,0,0,0,1,6,2,0,8,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,699,        return false;,4,0,0,0,0,1,0,0,0,6,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,732,        if (str == null) {,6,1,0,1,3,0,0,0,0,8,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,738,        } else if (str.equals(trueString)) {,0,0,0,2,6,0,6,0,0,6,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,764,"        return toString(bool, ""true"", ""false"", null);",4,0,0,1,2,1,4,0,0,12,45,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,782,"        return toString(bool, ""on"", ""off"", null);",6,2,0,1,2,1,4,0,0,15,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,800,"        return toString(bool, ""yes"", ""no"", null);",6,0,0,1,2,4,6,4,0,23,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,822,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,823,            return nullString;,2,0,0,0,0,1,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,861,"        return toString(bool, ""on"", ""off"");",4,0,0,1,2,1,0,0,0,5,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,878,"        return toString(bool, ""yes"", ""no"");",2,0,0,1,2,2,0,0,0,4,35,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,919,"            throw new IllegalArgumentException(""The Array must not be null"");",6,1,0,1,2,0,6,0,0,13,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,926,        for (int i = 0; i < array.length; i++) {,2,0,0,1,3,0,0,0,0,3,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,929,            if (array[i]) {,0,0,1,2,5,0,0,0,0,4,15,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,931,                    trueCount++;,6,1,0,0,0,0,0,0,0,8,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,933,                    return false;,6,1,0,0,0,3,0,0,0,10,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,958,        if (array == null) {,2,0,0,1,3,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,960,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,963,        boolean[] primitive = null;,4,0,0,1,2,0,4,0,0,9,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,965,            primitive = ArrayUtils.toPrimitive(array);,2,0,0,1,2,3,2,0,0,8,42,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,968,        },4,2,0,0,1,0,0,0,0,7,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,966,        } catch (NullPointerException ex) {,4,1,0,1,4,0,6,0,0,11,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,969,        return xor(primitive) ? Boolean.TRUE : Boolean.FALSE;,8,0,0,1,2,1,4,0,0,12,53,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,173,"            throw new IllegalArgumentException(""The Writer must not be null"");",0,0,0,1,2,0,4,2,0,8,66,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,229,                        out.write('\\');,2,0,0,1,2,3,4,2,0,12,16,1,1.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,226,                        out.write('\'');,2,0,0,1,2,0,4,0,0,8,16,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,149,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,153,            StringWriter writer = new StringWriter(str.length() * 2);,4,1,0,2,4,0,4,4,0,13,57,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,172,        if (out == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,175,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,179,        sz = str.length();,2,0,0,1,2,0,4,0,0,7,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,180,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,181,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,184,            if (ch > 0xfff) {,4,2,0,1,3,0,8,2,0,16,17,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,186,            } else if (ch > 0xff) {,2,1,0,1,4,0,0,0,0,3,23,7,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,188,            } else if (ch > 0x7f) {,2,1,0,1,4,0,0,0,0,3,23,8,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,237,                        out.write(ch);,4,0,0,1,2,0,0,0,0,6,14,12,0.33333,1,1
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,47,    protected NestableDelegate delegate = new NestableDelegate(this);,2,0,0,1,2,1,0,4,0,7,65,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,53,    private Throwable cause = null;,2,0,0,0,0,1,0,2,0,5,31,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,70,        super(msg);,2,0,0,1,2,0,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,82,        this.cause = cause;,10,1,0,0,0,3,4,2,0,22,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,83,    },2,0,1,0,1,0,0,0,0,7,1,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,94,        super(msg);,4,0,0,1,2,0,0,2,0,6,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,95,        this.cause = cause;,4,0,0,0,0,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,102,        return cause;,2,0,0,0,0,1,6,0,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,114,            return super.getMessage();,2,0,0,1,2,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,118,            return null;,8,1,1,0,0,4,4,2,0,23,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,126,        if (index == 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,127,            return super.getMessage();,2,0,0,1,2,1,0,0,0,2,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,129,        return delegate.getMessage(index);,2,2,0,1,2,1,10,0,0,15,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,186,    },10,3,1,0,1,0,12,2,0,37,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,192,        delegate.printStackTrace(out);,8,5,0,1,2,3,8,4,0,30,30,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,193,    },2,0,0,0,1,0,2,2,0,6,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,52,199,        super.printStackTrace(out);,4,0,0,1,2,0,6,0,0,10,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,54,      super();,2,0,0,1,2,0,6,0,0,8,8,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,55,    },2,0,0,0,1,0,0,0,0,2,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,81,"        return escapeJavaStyleString(str, false);",2,1,0,1,2,1,0,0,0,3,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,98,    },4,0,0,0,1,0,4,0,0,9,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,138,"        escapeJavaStyleString(out, str, true);",4,1,0,1,2,3,8,0,0,18,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,139,    },4,3,0,0,1,0,4,0,0,12,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,185,"                out.write(""\\u"" + hex(ch));",4,1,0,2,4,0,4,0,0,10,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,189,"                out.write(""\\u00"" + hex(ch));",6,4,0,2,4,0,8,0,0,20,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,191,                switch (ch) {,10,1,0,1,3,0,0,0,0,11,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,194,                        out.write('b');,4,1,0,1,2,0,8,0,0,15,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,197,                        out.write('\\');,2,1,0,1,2,0,4,0,0,9,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,201,                        out.write('\\');,2,4,1,1,2,0,0,0,0,16,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,203,                        break;,8,0,0,0,0,0,0,0,0,8,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,205,                        out.write('\\');,2,0,0,1,2,0,0,0,0,2,16,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,207,                        break;,2,0,0,0,0,0,4,0,0,8,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,213,                        if (ch > 0xf) {,2,1,0,1,3,0,0,0,0,3,15,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,216,"                            out.write(""\\u000"" + hex(ch));",0,1,0,2,4,0,16,2,0,21,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,224,                          out.write('\\');,0,0,0,1,2,0,4,0,0,5,16,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,234,                        out.write('\\');,4,3,0,1,2,0,0,0,0,7,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,272,        } catch (IOException ioe) {,2,0,0,1,4,0,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,275,            return null;,8,3,0,0,0,1,8,0,0,20,12,0,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,295,        if (out == null) {,10,3,0,1,3,0,6,0,0,20,18,0,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,298,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,301,        int sz = str.length();,4,3,0,1,2,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,302,        StringBuffer unicode = new StringBuffer(4);,2,0,0,1,2,0,0,4,0,6,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,305,        for (int i = 0; i < sz; i++) {,10,2,0,1,3,0,0,0,0,14,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,306,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,311,                if (unicode.length() == 4) {,0,1,0,2,5,0,4,0,0,5,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,315,"                        int value = Integer.parseInt(unicode.toString(), 16);",2,0,0,2,4,0,8,0,0,11,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,318,                        inUnicode = false;,2,0,0,0,0,0,0,0,0,4,18,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,322,                    },0,1,0,0,1,0,4,0,0,5,1,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,321,"                        throw new NestableRuntimeException(""Unable to parse unicode value: "" + unicode, nfe);",2,0,0,1,2,0,6,0,0,8,85,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,328,                hadSlash = false;,8,0,0,0,0,0,16,0,0,26,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,329,                switch (ch) {,2,0,0,1,3,3,6,2,0,14,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,332,                        break;,2,0,0,0,0,0,4,0,0,6,6,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,335,                        break;,2,0,0,0,0,0,4,0,0,6,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,337,"                        out.write('""');",2,0,0,1,2,3,6,2,0,15,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,338,                        break;,4,0,0,0,0,0,12,4,0,22,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,340,                        out.write('\r');,6,1,0,1,2,3,22,2,0,37,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,341,                        break;,0,1,0,0,0,0,12,4,0,20,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,343,                        out.write('\f');,2,0,0,1,2,3,8,2,0,16,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,366,                hadSlash = true;,4,0,0,0,0,0,6,0,0,13,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,371,        if (hadSlash) {,4,3,0,1,3,0,8,0,0,17,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,374,            out.write('\\');,2,0,0,1,2,0,8,2,0,13,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,376,    },6,1,0,0,1,0,0,2,0,10,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,442,        if (str == null) {,2,0,0,1,3,3,2,2,0,10,18,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,446,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,6,1,0,4,8,3,16,6,0,33,67,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,449,        } catch (IOException e) {,2,0,0,1,4,0,0,2,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,452,            e.printStackTrace();,2,0,0,1,2,0,6,2,0,10,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,487,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,488,"            throw new IllegalArgumentException (""The Writer must not be null."");",6,1,0,1,2,0,0,2,0,11,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,490,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,493,"        Entities.HTML40.escape(writer, string);",4,0,0,1,2,0,6,2,0,13,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,494,    },6,1,0,0,1,0,0,0,0,7,1,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,514,        if (str == null) {,2,0,0,1,3,0,4,0,0,6,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,518,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,0,0,0,4,8,0,8,0,0,8,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,520,            return writer.toString();,2,0,0,1,2,1,0,0,0,2,25,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,521,        } catch (IOException e) {,2,0,0,1,4,0,0,2,0,4,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,548,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,551,        if (string == null) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,554,"        Entities.HTML40.unescape(writer, string);",8,3,0,1,2,0,18,0,0,29,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,578,        if (writer == null ) {,4,4,0,1,3,0,4,0,0,12,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,581,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,584,"        Entities.XML.escape(writer, str);",4,0,0,1,2,0,6,0,0,10,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,608,        return Entities.XML.escape(str);,4,0,0,1,2,1,4,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,630,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,633,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,681,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,676,                        if (field == DateUtils.SEMI_MONTH) {,6,1,0,1,3,0,0,0,0,7,36,12,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,440,        Calendar gval = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,621,        if (val.get(Calendar.YEAR) > 280000000) {,4,1,0,2,5,0,4,0,0,9,41,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,635,        Date date = val.getTime();,2,0,0,1,2,0,4,2,0,8,26,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,637,        boolean done = false;,2,0,0,0,0,0,0,0,0,3,21,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,641,        if (!round || millisecs < 500) {,4,2,0,1,3,0,0,0,0,7,32,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,650,        if (!done && (!round || seconds < 30)) {,8,3,0,2,5,0,4,0,0,18,40,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,658,        int minutes = val.get(Calendar.MINUTE);,6,0,0,1,2,0,4,0,0,10,39,5,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,660,            time = time - (minutes * 60000L);,8,2,0,1,2,0,0,2,0,13,33,1,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,664,        if (date.getTime() != time) {,4,0,0,2,5,2,0,2,0,8,29,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,665,            date.setTime(time);,2,0,0,1,2,3,6,4,0,15,19,1,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,672,            for (int j = 0; j < fields[i].length; j++) {,8,1,1,2,5,0,0,0,0,14,44,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,692,                    return;,0,0,0,0,0,1,6,0,0,6,7,13,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,697,            boolean offsetSet = false;,2,0,0,0,0,3,0,4,0,9,26,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,699,            switch (field) {,2,0,0,1,3,0,0,2,0,4,16,10,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,729,            if (!offsetSet) {,2,0,0,1,3,0,6,0,0,9,17,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,730,                int min = val.getActualMinimum(fields[i][0]);,2,0,1,3,6,0,4,0,0,10,45,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,731,                int max = val.getActualMaximum(fields[i][0]);,2,0,1,3,6,0,4,0,0,10,45,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,733,                offset = val.get(fields[i][0]) - min;,4,1,1,3,6,0,4,0,0,14,37,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,735,                roundUp = offset > ((max - min) / 2);,10,4,0,2,4,0,8,2,0,25,37,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,738,            if (offset != 0) {,2,1,0,1,3,0,0,0,0,3,18,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,45,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");",8,0,1,1,2,3,16,2,0,34,73,1,0.04762,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,73,    private static final int[][] fields = {,12,0,0,2,5,0,10,2,0,25,39,3,0.04762,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,142,        if (date1 == null || date2 == null) {,4,3,0,1,3,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,145,        Calendar cal1 = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,146,        cal1.setTime(date1);,2,0,0,1,2,0,6,0,0,8,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,147,        Calendar cal2 = Calendar.getInstance();,4,2,0,1,2,0,8,2,0,17,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,169,        return (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&,14,6,0,2,5,1,18,0,0,39,59,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,187,        if (date1 == null || date2 == null) {,10,5,0,1,3,0,4,0,0,20,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,188,"            throw new IllegalArgumentException(""The date must not be null"");",4,0,0,1,2,0,0,0,0,4,64,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,190,        return date1.getTime() == date2.getTime();,0,1,0,2,4,1,8,0,0,9,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,205,        if (cal1 == null || cal2 == null) {,6,3,0,1,3,3,2,2,0,17,35,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,208,        return cal1.getTime().getTime() == cal2.getTime().getTime();,0,1,0,4,8,1,12,0,0,13,60,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,225,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,4,0,0,11,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,226,"            throw new IllegalArgumentException(""The date must not be null"");",10,3,0,1,2,3,4,4,0,27,64,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,228,        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&,18,8,1,2,5,7,12,4,0,52,75,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,257,        SimpleDateFormat parser = null;,2,0,0,0,0,0,0,2,0,4,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,258,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,260,            if (i == 0) {,0,0,0,1,3,0,2,0,0,3,13,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,261,                parser = new SimpleDateFormat(parsePatterns[0]);,2,0,0,2,4,3,0,12,0,17,48,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,267,            if (date != null && pos.getIndex() == str.length()) {,2,3,0,3,7,0,14,0,0,19,53,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,268,                return date;,2,0,0,0,0,1,0,0,0,2,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,271,"        throw new ParseException(""Unable to parse the date: "" + str, -1);",2,1,0,1,2,0,0,2,0,7,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,285,"        return add(date, Calendar.YEAR, amount);",6,0,0,1,2,1,12,2,0,20,40,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,299,"        return add(date, Calendar.MONTH, amount);",4,1,0,1,2,1,0,0,0,5,41,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,313,"        return add(date, Calendar.WEEK_OF_YEAR, amount);",4,0,0,1,2,1,6,0,0,10,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,341,"        return add(date, Calendar.HOUR_OF_DAY, amount);",6,1,0,1,2,1,14,0,0,22,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,398,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,399,"            throw new IllegalArgumentException(""The date must not be null"");",14,2,1,1,2,1,20,6,0,52,64,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,401,        Calendar c = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,475,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,476,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,8,2,0,10,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,478,        Calendar rounded = (Calendar) date.clone();,2,1,0,2,4,0,0,0,0,3,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,480,        return rounded;,4,0,0,0,0,1,0,2,0,6,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,514,        if (date == null) {,4,1,0,1,3,1,0,0,0,7,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,517,        if (date instanceof Date) {,2,0,0,1,3,0,0,0,0,2,27,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,518,"            return round((Date) date, field);",2,0,0,2,4,1,4,2,0,8,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,519,        } else if (date instanceof Calendar) {,2,4,0,1,4,0,12,2,0,22,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,520,"            return round((Calendar) date, field).getTime();",4,1,0,3,6,1,6,2,0,13,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,522,"            throw new ClassCastException(""Could not round "" + date);",2,1,0,1,2,0,0,2,0,6,56,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,544,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,547,        Calendar gval = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,573,        Calendar truncated = (Calendar) date.clone();,2,0,0,2,4,0,4,4,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,574,"        modify(truncated, field, false);",2,0,0,1,2,0,12,2,0,17,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,575,        return truncated;,6,0,1,0,0,4,2,4,0,20,17,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,599,        if (date == null) {,6,1,0,1,3,0,0,0,0,7,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,602,        if (date instanceof Date) {,2,0,0,1,3,0,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,604,        } else if (date instanceof Calendar) {,8,1,0,1,4,0,10,4,0,23,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,605,"            return truncate((Calendar) date, field).getTime();",2,0,0,3,6,1,0,0,0,2,50,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,622,"            throw new ArithmeticException(""Calendar value too large for accurate calculations"");",2,0,0,1,2,0,6,2,0,10,84,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,642,            time = time - millisecs;,20,6,0,0,0,3,0,4,0,35,24,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,643,        if (field == Calendar.SECOND) {,2,0,0,1,3,0,20,2,0,25,31,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,652,        if (field == Calendar.MINUTE) {,4,3,0,1,3,0,8,0,0,15,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,653,            done = true;,2,0,1,0,0,0,2,0,0,8,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,681,"                                val.add(Calendar.DATE, 15);",4,0,0,1,2,0,4,0,0,8,27,17,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,683,"                                val.add(Calendar.DATE, -15);",2,0,1,1,2,0,0,0,0,5,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,701,                    if (fields[i][0] == Calendar.DATE) {,8,1,0,3,7,0,0,0,0,9,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,705,                        offset = val.get(Calendar.DATE) - 1;,6,1,0,1,2,0,4,0,0,12,36,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,708,                        if (offset >= 15) {,2,1,0,1,3,0,0,0,0,3,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,712,                        roundUp = offset > 7;,6,1,0,0,0,0,0,0,0,10,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,713,                        offsetSet = true;,8,5,0,0,0,0,0,0,0,13,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,721,                        if (offset >= 12) {,2,1,0,1,3,0,0,0,0,3,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,724,                        roundUp = offset > 6;,4,0,0,0,0,3,2,2,0,12,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,772,        if (focus == null) {,4,1,0,1,3,0,0,2,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,773,"            throw new IllegalArgumentException(""The date must not be null"");",2,0,0,1,2,0,0,2,0,7,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,805,        if (focus == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,808,        Calendar start = null;,2,0,0,0,0,0,0,2,0,5,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,809,        Calendar end = null;,4,0,0,0,0,0,12,2,0,18,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,810,        int startCutoff = Calendar.SUNDAY;,10,0,0,0,0,0,8,0,0,21,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,811,        int endCutoff = Calendar.SATURDAY;,8,2,0,0,0,0,4,0,0,14,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,812,        switch (rangeStyle) {,0,0,0,1,3,0,16,0,0,17,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,816,"                start = truncate(focus, Calendar.MONTH);",6,0,0,1,2,0,4,0,0,11,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,818,                end = (Calendar) start.clone();,2,0,0,2,4,0,10,2,0,15,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,820,"                end.add(Calendar.DATE, -1);",18,2,0,1,2,6,16,6,0,50,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,823,                    startCutoff = Calendar.MONDAY;,6,0,0,0,0,0,0,0,0,7,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,832,"                start = truncate(focus, Calendar.DATE);",10,6,1,1,2,0,0,2,0,27,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,833,"                end = truncate(focus, Calendar.DATE);",6,0,0,1,2,0,4,0,0,11,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,839,                        startCutoff = Calendar.MONDAY;,8,0,0,0,0,0,0,0,0,10,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,848,                        endCutoff = focus.get(Calendar.DAY_OF_WEEK) + 3;,6,1,0,1,2,0,4,0,0,12,48,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,858,        if (startCutoff > Calendar.SATURDAY) {,6,1,0,1,3,0,0,0,0,8,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,861,        if (endCutoff < Calendar.SUNDAY) {,0,0,0,1,3,0,16,2,0,18,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,862,            endCutoff += 7;,4,1,1,0,0,0,0,0,0,10,15,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,871,"            end.add(Calendar.DATE, 1);",16,4,0,1,2,0,0,0,0,21,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,873,"        return new DateIterator(start, end);",4,0,0,1,2,1,0,2,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,896,        if (focus == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,900,"            return iterator((Date) focus, rangeStyle);",4,1,0,2,4,1,0,0,0,6,42,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,901,        } else if (focus instanceof Calendar) {,2,0,0,1,4,0,0,2,0,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,904,"            throw new ClassCastException(""Could not iterate based on "" + focus);",2,1,0,1,2,0,0,2,0,6,68,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,922,            super();,2,0,1,1,2,0,0,0,0,7,8,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,923,            this.endFinal = endFinal;,4,0,0,0,0,0,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,924,            spot = startFinal;,4,0,0,0,0,0,0,0,0,5,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,925,"            spot.add(Calendar.DATE, -1);",4,0,0,1,2,0,10,0,0,15,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,943,            if (spot.equals(endFinal)) {,0,0,0,2,5,0,6,0,0,6,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,946,"            spot.add(Calendar.DATE, 1);",4,0,0,1,2,0,4,0,0,8,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,9,1.0,1,1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,110,            if (str.charAt(2) != '_') {,8,5,0,2,5,0,4,0,0,18,27,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,113,            char ch3 = str.charAt(3);,2,0,0,1,2,0,4,0,0,6,25,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,114,            char ch4 = str.charAt(4);,2,0,0,1,2,0,4,0,0,6,25,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,115,            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {,8,7,0,1,3,0,0,0,0,19,55,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,98,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,99,        if (len != 2 && len != 5 && len < 7) {,8,6,0,1,3,0,8,0,0,24,38,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,102,        char ch0 = str.charAt(0);,4,1,0,1,2,0,4,0,0,10,25,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,103,        char ch1 = str.charAt(1);,2,0,0,1,2,0,4,0,0,6,25,5,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,104,        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {,8,7,0,1,3,0,0,0,0,19,55,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,47,    private static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());,2,0,0,2,4,3,4,4,0,13,90,2,0.09091,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,51,        List list = Arrays.asList(Locale.getAvailableLocales());,2,0,0,2,4,0,8,2,0,12,56,4,0.09091,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,52,        cAvailableLocaleList = Collections.unmodifiableList(list);,2,0,0,1,2,0,6,0,0,9,58,4,0.09091,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,96,            return null;,12,1,0,0,0,4,8,0,0,24,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,100,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,105,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,121,                if (str.charAt(5) != '_') {,0,1,0,2,5,0,4,0,0,6,27,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,122,"                    throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,165,        List list = new ArrayList(4);,2,0,0,1,2,0,0,4,0,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,171,            if (locale.getCountry().length() > 0) {,0,1,0,3,7,0,6,0,0,7,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,174,            if (list.contains(defaultLocale) == false) {,4,4,0,2,5,0,10,0,0,20,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,206,        Set set = cAvailableLocaleSet;,4,0,0,0,0,0,8,2,0,14,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,207,        if (set == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,208,            set = new HashSet(availableLocaleList());,2,0,0,2,4,0,2,2,0,7,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,209,            set = Collections.unmodifiableSet(set);,2,0,0,1,2,0,6,0,0,9,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,210,            cAvailableLocaleSet = set;,4,0,0,0,0,0,0,0,0,5,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,212,        return set;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,237,        List langs = (List) cLanguagesByCountry.get(countryCode);  //syncd,2,0,0,2,4,0,6,4,0,12,66,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,238,        if (langs == null) {,2,0,0,1,3,0,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,240,                langs = new ArrayList();,2,0,0,1,2,0,0,2,0,5,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,241,                List locales = availableLocaleList();,2,0,0,1,2,0,2,2,0,6,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,242,                for (int i = 0; i < locales.size(); i++) {,6,1,0,2,5,0,4,0,0,12,42,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,243,                    Locale locale = (Locale) locales.get(i);,2,0,0,2,4,0,6,4,0,12,40,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,249,                langs = Collections.unmodifiableList(langs);,6,1,0,1,2,0,10,2,0,22,44,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,253,"            cLanguagesByCountry.put(countryCode, langs);  //syncd",4,1,0,1,2,0,0,2,0,7,53,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,255,        return langs;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,270,        if (countries == null) {,2,1,0,1,3,0,4,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,271,            if (languageCode != null) {,2,0,0,1,3,0,0,0,0,2,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,272,                countries = new ArrayList();,2,0,0,1,2,0,0,2,0,5,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,274,                for (int i = 0; i < locales.size(); i++) {,8,4,0,2,5,0,8,0,0,21,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,276,                    if (languageCode.equals(locale.getLanguage()) &&,0,2,0,2,5,0,8,0,0,10,48,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,282,                countries = Collections.unmodifiableList(countries);,2,0,0,1,2,0,6,0,0,9,52,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,284,                countries = Collections.EMPTY_LIST;,6,0,0,0,0,0,4,0,0,11,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,286,"            cCountriesByLanguage.put(languageCode, countries);  //syncd",28,13,0,1,2,0,40,0,0,84,59,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,179,        stopTime = System.currentTimeMillis();,2,0,0,1,2,0,4,0,0,7,38,4,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,180,        this.runningState = STATE_SUSPENDED;,4,0,0,0,0,0,0,0,0,5,36,4,1.0,1,1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,176,        if(this.runningState != STATE_RUNNING) {,4,1,0,1,3,0,0,0,0,5,40,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,210,            return this.stopTime - this.startTime;,4,1,0,0,0,1,0,0,0,5,38,6,0.33333,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,115,        if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {,8,3,0,1,3,0,0,0,0,11,80,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,118,            stopTime = System.currentTimeMillis();,2,0,0,1,2,0,4,0,0,7,38,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,119,        this.runningState = STATE_STOPPED;,4,0,0,0,0,0,0,0,0,5,34,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,209,        if(this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED) {,8,3,0,1,3,0,0,0,0,11,80,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,65,    private int runningState = STATE_UNSTARTED;,4,0,0,0,0,1,0,0,0,5,43,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,70,    private int splitState   = STATE_UNSPLIT;,4,0,0,0,0,1,0,0,0,5,41,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,75,    private long startTime = -1;,2,0,0,0,0,1,0,0,0,4,28,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,79,    private long stopTime = -1;,2,0,0,0,0,1,0,0,0,4,27,2,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,96,        if(this.runningState == STATE_STOPPED) {,4,1,0,1,3,0,0,0,0,5,40,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,99,        if(this.runningState != STATE_UNSTARTED) {,4,1,0,1,3,0,0,0,0,5,42,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,102,        stopTime = -1;,2,0,0,0,0,0,0,0,0,4,14,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,103,        startTime = System.currentTimeMillis();,2,0,0,1,2,0,4,0,0,7,39,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,104,        this.runningState = STATE_RUNNING;,4,0,0,0,0,0,0,0,0,5,34,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,631,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",6,0,0,1,2,0,4,0,0,11,57,7,0.07692,1,1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,553,            locale = Locale.getDefault();,4,0,0,1,2,3,6,2,0,17,29,1,0.0625,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,614,"                    rule = selectNumberRule(Calendar.YEAR, tokenLen);",12,0,0,1,2,0,4,0,0,17,49,3,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,625,                    rule = TwoDigitMonthField.INSTANCE;,10,1,0,0,0,0,4,0,0,16,35,3,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,777,"            return new PaddedNumberField(field, padding);",4,0,0,1,2,1,0,2,0,6,45,6,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1262,            if (size < 3) {,2,1,0,1,3,0,0,0,0,3,15,5,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1398,            super();,10,1,0,1,2,0,0,0,0,12,8,4,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1392,        static final TwoDigitMonthField INSTANCE = new TwoDigitMonthField();,6,0,0,1,2,2,0,4,0,13,68,1,0.05882,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,540,        if (pattern == null) {,2,0,0,1,3,0,4,0,0,6,22,5,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,543,        mPattern = pattern;,4,0,0,0,0,0,0,0,0,5,19,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,547,            timeZone = TimeZone.getDefault();,6,1,0,1,2,0,8,0,0,16,33,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,552,        if (locale == null) {,2,0,0,1,3,3,0,0,0,5,21,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,111,    private static Map cInstanceCache = new HashMap(7);,6,0,0,1,2,2,0,4,0,14,51,1,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,112,    private static Map cDateInstanceCache = new HashMap(7);,6,2,0,1,2,0,4,0,0,14,55,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,115,    private static Map cTimeZoneDisplayCache = new HashMap(7);,2,0,0,1,2,3,0,4,0,9,58,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,215,        if (format == null) {,4,2,0,1,3,1,8,0,0,17,21,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,217,            format.init();  // convert shell format into usable one,2,0,0,1,2,0,6,0,0,10,55,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,218,"            cInstanceCache.put(format, format);  // this is OK!",2,0,0,1,2,3,10,2,0,18,51,1,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,562,        List rulesList = parsePattern();,2,0,0,1,2,3,4,2,0,11,32,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,563,        mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]);,0,0,0,5,10,0,0,0,0,15,64,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,567,            len += mRules[i].estimateLength();,2,0,1,2,4,0,2,0,0,9,34,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,570,        mMaxLengthEstimate = len;,4,0,0,0,0,0,0,0,0,5,25,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,585,        String[] ERAs = symbols.getEras();,2,0,0,2,4,0,4,2,0,8,34,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,586,        String[] months = symbols.getMonths();,2,0,0,2,4,0,4,2,0,8,38,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,587,        String[] shortMonths = symbols.getShortMonths();,2,0,0,2,4,0,4,2,0,8,48,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,588,        String[] weekdays = symbols.getWeekdays();,2,0,0,2,4,0,4,2,0,8,42,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,592,        int length = mPattern.length();,4,1,0,1,2,0,4,0,0,9,31,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,593,        int[] indexRef = new int[1];,2,0,0,2,4,0,0,0,0,2,28,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,595,        for (int i = 0; i < length; i++) {,2,0,0,1,3,0,0,0,0,2,34,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,596,            indexRef[0] = i;,2,0,1,1,2,0,0,0,0,5,16,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,597,"            String token = parseToken(mPattern, indexRef);",2,0,0,1,2,3,2,0,0,7,46,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,598,            i = indexRef[0];,4,1,1,1,2,0,0,0,0,8,16,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,601,            if (tokenLen == 0) {,2,1,0,1,3,0,0,0,0,3,20,6,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,606,            char c = token.charAt(0);,8,3,0,1,2,0,8,0,0,20,25,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,613,                if (tokenLen >= 4) {,4,0,0,1,3,0,0,2,0,6,20,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,687,                String sub = token.substring(1);,4,0,0,1,2,0,4,2,0,10,32,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,688,                if (sub.length() == 1) {,4,3,0,2,5,0,8,0,0,16,24,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,714,        int i = indexRef[0];,2,0,1,1,2,0,0,0,0,4,20,5,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,723,            while (i + 1 < length) {,18,4,0,1,3,3,4,2,0,33,24,1,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,724,                char peek = pattern.charAt(i + 1);,2,0,0,1,2,0,0,0,0,2,34,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,734,            buf.append('\'');,0,0,0,1,2,0,4,0,0,5,17,7,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,736,            boolean inLiteral = false;,2,0,0,0,0,0,0,0,0,3,26,7,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,739,                c = pattern.charAt(i);,2,0,0,1,2,0,6,0,0,9,22,8,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,749,                } else if (!inLiteral &&,6,1,0,0,2,0,0,0,0,9,24,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,754,                    buf.append(c);,2,0,0,1,2,0,12,0,0,14,14,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,759,        indexRef[0] = i;,2,0,1,1,2,0,0,0,0,5,16,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,771,        switch (padding) {,2,0,0,1,3,0,0,0,0,2,18,4,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,775,            return new TwoDigitNumberField(field);,4,1,0,1,2,1,0,2,0,7,38,3,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1002,        int total = 0;,2,0,0,0,0,0,4,0,0,6,14,5,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1003,        total += mPattern.hashCode();,2,0,0,1,2,2,0,2,0,7,29,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1004,        total += mTimeZone.hashCode();,4,1,0,1,2,3,0,0,0,8,30,1,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1070,        CharacterLiteral(char value) {,2,0,0,1,3,0,6,0,0,8,30,7,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1071,            mValue = value;,4,0,0,0,0,0,0,0,0,5,15,5,0.05556,0,0
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1323,        },2,0,0,0,1,3,2,2,0,10,1,2,0.05556,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1084,    },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,87,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,105,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,138,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,154,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",2,1,0,1,2,0,0,0,0,3,92,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,175,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,191,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,207,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,224,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,241,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,275,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,307,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,4,0,0,1,2,6,4,6,0,20,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,342,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,3,6,2,0,16,86,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,360,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",4,0,0,1,2,6,2,6,0,19,92,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,377,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",6,0,0,1,2,3,2,2,0,15,98,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,394,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,102,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,428,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = ,2,0,0,0,0,3,0,2,0,7,64,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,445,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",4,0,0,1,2,6,2,2,0,15,74,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,461,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,0,0,1,2,3,2,2,0,10,82,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,477,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",2,0,0,1,2,3,2,2,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,512,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,529,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,546,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",6,0,0,1,2,3,6,4,0,20,108,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,580,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,614,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,630,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,8,2,0,17,66,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,646,"    public static final String OS_NAME = getSystemProperty(""os.name"");",2,0,0,1,2,3,2,2,0,10,66,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,679,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,698,    public static final String USER_COUNTRY = ,2,0,0,0,0,3,0,2,0,7,41,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,733,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,751,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,784,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,818,    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();,2,0,0,1,2,3,2,0,0,7,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,833,    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();,2,0,0,1,2,3,2,0,0,7,65,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,846,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",2,1,0,1,2,0,0,0,0,3,71,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,854,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,862,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,870,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,878,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,886,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,904,"    public static final boolean IS_OS_AIX = getOSMatches(""AIX"");",8,1,0,1,2,3,6,0,0,20,60,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,914,"    public static final boolean IS_OS_HP_UX = getOSMatches(""HP-UX"");",2,0,0,1,2,3,2,0,0,8,64,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,924,"    public static final boolean IS_OS_IRIX = getOSMatches(""Irix"");",2,1,0,1,2,0,0,0,0,3,62,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,934,"    public static final boolean IS_OS_LINUX = getOSMatches(""Linux"") || getOSMatches(""LINUX"");",2,0,0,2,4,0,6,4,0,12,89,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,944,"    public static final boolean IS_OS_MAC = getOSMatches(""Mac"");",2,0,0,1,2,0,4,0,0,7,60,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,954,"    public static final boolean IS_OS_MAC_OSX = getOSMatches(""Mac OS X"");",4,0,0,1,2,6,6,2,0,19,69,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,984,"    public static final boolean IS_OS_SUN_OS = getOSMatches(""SunOS"");",2,0,0,1,2,0,0,0,0,2,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1007,    public static final boolean IS_OS_WINDOWS = getOSMatches(OS_NAME_WINDOWS_PREFIX);,2,0,0,1,2,3,4,0,0,9,81,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1017,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",2,0,0,1,2,3,4,0,0,10,93,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1027,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",4,1,0,1,2,3,2,0,0,12,98,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1049,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",2,0,0,1,2,3,4,0,0,10,91,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1071,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",2,0,0,1,2,3,4,0,0,10,91,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1101,        return JAVA_VERSION_FLOAT;,2,0,0,0,0,1,0,0,0,2,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1119,        if (JAVA_VERSION_TRIMMED == null) {,8,0,0,1,3,2,8,4,0,22,35,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1122,"        String str = JAVA_VERSION_TRIMMED.substring(0, 3);",2,0,0,1,2,0,4,2,0,8,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1124,"            str = str + JAVA_VERSION_TRIMMED.substring(4, 5);",4,0,0,1,2,0,6,0,0,10,49,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1128,        } catch (Exception ex) {,2,0,0,1,4,0,0,2,0,4,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1151,"        String str = JAVA_VERSION_TRIMMED.substring(0, 1);",2,0,0,1,2,0,4,2,0,8,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1152,"        str = str + JAVA_VERSION_TRIMMED.substring(2, 3);",4,1,0,1,2,0,4,0,0,10,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1153,        if (JAVA_VERSION_TRIMMED.length() >= 5) {,0,1,0,2,5,0,4,0,0,5,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1156,"            str = str + ""0"";",6,1,0,0,0,0,0,0,0,11,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1160,        } catch (Exception ex) {,4,0,0,1,4,1,0,4,0,9,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1171,        if (JAVA_VERSION != null) {,2,1,0,1,3,0,6,0,0,9,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1172,            for (int i = 0; i < JAVA_VERSION.length(); i++) {,6,1,0,2,5,0,4,0,0,12,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1173,                char ch = JAVA_VERSION.charAt(i);,2,0,0,1,2,0,6,0,0,8,33,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1174,                if (ch >= '0' && ch <= '9') {,0,1,0,1,3,0,4,0,0,6,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1175,                    return JAVA_VERSION.substring(i);,2,0,0,1,2,4,6,4,0,15,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1189,        if (JAVA_VERSION_TRIMMED == null) {,2,1,0,1,3,0,0,0,0,3,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1202,        if (OS_NAME == null) {,2,1,0,1,3,0,0,2,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1235,            return System.getProperty(property);,2,1,0,1,2,1,6,0,0,9,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1236,        } catch (SecurityException ex) {,2,0,0,1,4,0,0,2,0,4,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1238,            System.err.println(,8,1,0,0,1,0,2,0,0,11,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1278,        return JAVA_VERSION_INT >= requiredVersion;,4,1,0,0,0,1,0,0,0,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1319,        return new File(System.getProperty(JAVA_IO_TMPDIR_KEY));,8,1,0,2,4,1,0,0,0,10,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1333,        return new File(System.getProperty(USER_DIR_KEY));,6,1,0,2,4,1,8,0,0,15,50,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1347,        return new File(System.getProperty(USER_HOME_KEY));,4,1,0,2,4,4,4,2,0,14,51,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,47,    private static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());,2,0,0,2,4,3,4,4,0,13,90,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,49,    private static final Map cCountriesByLanguage = Collections.synchronizedMap(new HashMap());,2,0,0,2,4,3,4,4,0,13,91,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,51,        List list = Arrays.asList(Locale.getAvailableLocales());,8,2,0,2,4,0,0,0,0,11,56,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,95,        if (str == null) {,4,1,0,1,3,3,2,2,0,13,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,98,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,99,        if (len != 2 && len != 5 && len < 7) {,4,0,0,1,3,0,0,2,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,105,"            throw new IllegalArgumentException(""Invalid locale format: "" + str);",10,3,0,1,2,0,10,4,0,29,68,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,107,        if (len == 2) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,108,"            return new Locale(str, """");",2,1,0,1,2,1,0,0,0,3,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,110,            if (str.charAt(2) != '_') {,6,2,0,2,5,0,12,4,0,26,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,111,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",10,2,0,1,2,0,0,2,0,15,68,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,114,            char ch4 = str.charAt(4);,4,0,0,1,2,0,4,2,0,11,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,115,            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {,8,7,0,1,3,0,0,0,0,19,55,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,122,"                    throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,165,        List list = new ArrayList(4);,10,2,0,1,2,3,6,4,0,26,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,167,            list.add(locale);,2,0,0,1,2,0,26,0,0,28,17,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,171,            if (locale.getCountry().length() > 0) {,2,0,0,3,7,0,0,2,0,4,39,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,174,            if (list.contains(defaultLocale) == false) {,0,1,0,2,5,0,6,0,0,8,44,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,178,        return Collections.unmodifiableList(list);,8,4,0,1,2,1,6,0,0,19,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,206,        Set set = cAvailableLocaleSet;,4,0,0,0,0,0,0,2,0,6,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,207,        if (set == null) {,2,1,0,1,3,0,0,0,0,4,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,209,            set = Collections.unmodifiableSet(set);,2,0,0,1,2,0,6,0,0,9,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,212,        return set;,2,0,0,0,0,1,0,0,0,3,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,239,            if (countryCode != null) {,2,1,0,1,3,3,4,0,0,12,26,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,240,                langs = new ArrayList();,2,0,0,1,2,0,0,2,0,5,24,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,241,                List locales = availableLocaleList();,10,2,0,1,2,0,2,2,0,16,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,243,                    Locale locale = (Locale) locales.get(i);,2,0,0,2,4,0,6,4,0,12,40,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,251,                langs = Collections.EMPTY_LIST;,24,3,0,0,0,0,16,0,0,44,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,253,"            cLanguagesByCountry.put(countryCode, langs);  //syncd",2,0,0,1,2,0,0,0,0,2,53,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,255,        return langs;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,269,        List countries = (List) cCountriesByLanguage.get(languageCode);  //syncd,4,0,0,2,4,0,4,2,0,10,72,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,270,        if (countries == null) {,2,1,0,1,3,0,6,0,0,9,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,272,                countries = new ArrayList();,2,0,0,1,2,0,8,2,0,12,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,273,                List locales = availableLocaleList();,6,1,0,1,2,0,2,2,0,11,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,274,                for (int i = 0; i < locales.size(); i++) {,8,2,0,2,5,0,4,0,0,15,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,275,                    Locale locale = (Locale) locales.get(i);,2,0,0,2,4,0,6,4,0,12,40,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,276,                    if (languageCode.equals(locale.getLanguage()) &&,0,2,0,2,5,0,18,0,0,20,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,282,                countries = Collections.unmodifiableList(countries);,2,0,0,1,2,0,6,0,0,9,52,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,284,                countries = Collections.EMPTY_LIST;,6,0,0,0,0,0,0,0,0,7,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/LocaleUtils,57,288,        return countries;,2,0,0,0,0,1,0,0,0,2,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,464,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1508,            return false;,4,1,0,0,0,1,8,6,0,20,13,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,411,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,419,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,12,0,0,19,53,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,433,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,436,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,438,            dec = null;,6,0,0,0,0,0,0,0,0,8,11,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,440,        if (!Character.isDigit(lastChar)) {,2,1,1,2,5,0,6,0,0,14,35,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,444,                exp = null;,4,1,0,0,0,1,4,2,0,12,11,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,447,"            String numeric = str.substring(0, str.length() - 1);",8,4,0,2,4,0,8,2,0,22,52,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,448,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,452,                    if (dec == null,4,1,0,0,1,3,0,0,0,8,15,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,556,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,559,        for (int i = str.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,45,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,560,            if (str.charAt(i) != '0') {,6,2,0,2,5,0,6,0,0,16,27,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,561,                return false;,4,1,0,0,0,1,0,0,0,7,13,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,226,        for (int i = 0; i < strLen; i++) {,10,2,0,1,3,0,4,0,0,17,34,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,227,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,26,0,0,28,55,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,628,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1510,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1515,        return true;,4,3,0,0,0,1,0,0,0,8,12,3,0.33333,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,41,    public static final Long LONG_ZERO = new Long(0L);,4,1,1,1,2,3,8,4,0,28,50,1,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,2,0,0,1,2,0,0,0,0,2,56,5,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,51,    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);,2,0,0,1,2,0,6,2,0,12,64,1,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,53,    public static final Short SHORT_ZERO = new Short((short) 0);,2,0,0,2,4,3,0,4,0,9,60,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,55,    public static final Short SHORT_ONE = new Short((short) 1);,4,2,0,2,4,3,4,4,0,18,59,1,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,2,0,0,2,4,3,0,4,0,10,66,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,59,    public static final Byte BYTE_ZERO = new Byte((byte) 0);,2,0,0,2,4,3,0,4,0,9,56,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,61,    public static final Byte BYTE_ONE = new Byte((byte) 1);,2,0,0,2,4,3,0,4,0,9,55,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,63,    public static final Byte BYTE_MINUS_ONE = new Byte((byte) -1);,2,0,0,2,4,3,0,4,0,10,62,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,65,    public static final Double DOUBLE_ZERO = new Double(0.0d);,2,0,0,1,2,3,2,0,0,8,58,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,2,0,0,1,2,3,0,4,0,9,57,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,69,    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);,2,0,0,1,2,3,0,4,0,10,64,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,2,0,0,1,2,3,0,4,0,9,55,2,0.0137,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,73,    public static final Float FLOAT_ONE = new Float(1.0f);,2,0,0,1,2,3,6,4,0,15,54,1,0.0137,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,231,        return true;,2,0,0,0,0,4,0,12,0,17,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,303,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,329,        String ts = trim(str);,12,3,0,1,2,0,16,2,0,33,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,330,        return isEmpty(ts) ? null : ts;,10,0,0,1,2,1,20,4,0,35,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,383,"        return strip(str, null);",2,1,0,1,2,1,4,0,0,8,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,410,        if (str == null) {,2,0,0,1,3,0,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,440,"        return str == null ? EMPTY : strip(str, null);",2,0,0,1,2,1,0,0,0,2,46,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,473,"        str = stripStart(str, stripChars);",2,0,0,1,2,1,0,2,0,5,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,503,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,504,            return str;,6,1,0,0,0,1,4,0,0,12,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,506,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,509,                start++;,12,3,1,0,0,3,18,4,0,47,8,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,511,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,6,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,518,        return str.substring(start);,2,0,0,1,2,1,0,2,0,6,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,551,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,553,                end--;,10,0,0,0,0,1,0,6,0,18,6,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,617,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,4,0,0,5,51,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,618,            return strs;,4,0,0,0,0,3,8,2,0,17,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,621,        for (int i = 0; i < strsLen; i++) {,12,0,0,1,3,3,0,6,0,21,35,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,624,        return newArr;,6,0,0,0,0,1,0,0,0,7,14,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,732,        if (isEmpty(str)) {,2,0,0,2,5,0,12,0,0,15,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,761,        if (str == null || searchStr == null) {,2,0,0,1,3,3,2,2,0,10,39,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,802,        int index = INDEX_NOT_FOUND;,2,0,0,0,0,0,0,2,0,5,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,804,"            index = str.indexOf(searchStr, index + 1);",2,0,0,1,2,0,0,0,0,2,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,806,                return index;,4,0,0,0,0,1,6,2,0,13,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,808,            found++;,2,0,0,0,0,0,0,0,0,3,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,809,        } while (found < ordinal);,8,2,0,1,3,0,0,0,0,10,26,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,810,        return index;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,845,        if (str == null || searchStr == null) {,10,4,0,1,3,1,0,12,0,27,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,850,            return str.length();,2,0,0,1,2,4,2,2,0,10,20,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,878,            return -1;,2,0,0,0,0,1,4,2,0,8,10,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,941,            return -1;,4,1,0,0,0,1,0,0,0,5,10,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1004,            return false;,16,0,0,0,0,4,0,4,0,26,13,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1006,        return str.indexOf(searchChar) >= 0;,0,1,0,1,2,1,6,0,0,7,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1095,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1097,            for (int j = 0; j < searchChars.length; j++) {,10,1,0,1,3,0,0,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1098,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,2,0,12,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1103,        return -1;,4,0,0,0,0,1,0,0,0,6,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1129,        if (isEmpty(str) || isEmpty(searchChars)) {,2,0,0,3,7,0,4,0,0,6,43,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1161,            return -1;,4,0,0,0,0,1,0,8,0,13,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1163,        outer : for (int i = 0; i < str.length(); i++) {,8,1,0,2,5,0,4,0,0,14,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1165,            for (int j = 0; j < searchChars.length; j++) {,4,0,0,1,3,0,8,0,0,12,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1166,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1167,                    continue outer;,6,0,0,0,0,0,0,4,0,10,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1172,        return -1;,4,0,0,0,0,1,0,0,0,6,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1198,        if (isEmpty(str) || isEmpty(searchChars)) {,0,2,0,3,7,0,14,0,0,16,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1237,        if (str.length() == 0) {,2,1,0,2,5,0,0,0,0,3,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1240,        if (valid.length == 0) {,2,0,0,1,3,0,0,0,0,2,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1243,"        return indexOfAnyBut(str, valid) == -1;",0,1,0,1,2,1,6,0,0,8,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1269,        if (str == null || validChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1272,"        return containsOnly(str, validChars.toCharArray());",2,1,0,2,4,1,10,0,0,13,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1300,        if (str == null || invalidChars == null) {,2,1,0,1,3,0,0,0,0,3,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1303,        int strSize = str.length();,2,0,0,1,2,0,4,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1304,        int validSize = invalidChars.length;,6,0,0,0,0,0,0,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1305,        for (int i = 0; i < strSize; i++) {,8,1,0,1,3,0,0,0,0,10,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1306,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1307,            for (int j = 0; j < validSize; j++) {,16,5,0,1,3,0,6,0,0,28,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1308,                if (invalidChars[j] == ch) {,12,2,1,2,5,0,8,0,0,26,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1374,        if ((str == null) || (searchStrs == null)) {,6,3,0,3,7,0,0,0,0,10,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1377,        int sz = searchStrs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1380,        int ret = Integer.MAX_VALUE;,8,0,0,0,0,1,4,0,0,13,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1382,        int tmp = 0;,8,0,0,0,0,1,0,0,0,9,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1383,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1385,            if (search == null) {,6,2,0,1,3,0,0,0,0,8,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1386,                continue;,4,0,0,0,0,0,0,0,0,5,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1388,            tmp = str.indexOf(search);,6,4,0,1,2,3,10,0,0,25,26,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1393,            if (tmp < ret) {,4,1,0,1,3,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1394,                ret = tmp;,4,0,0,0,0,0,2,0,0,7,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1427,        if ((str == null) || (searchStrs == null)) {,4,3,0,3,7,0,0,0,0,7,44,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1428,            return -1;,0,0,0,0,0,1,2,0,0,3,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1430,        int sz = searchStrs.length;,6,0,0,0,0,0,0,0,0,6,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1431,        int ret = -1;,2,0,0,0,0,0,0,0,0,3,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1432,        int tmp = 0;,6,0,0,0,0,0,0,0,0,6,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1434,            String search = searchStrs[i];,2,0,1,1,2,0,0,2,0,8,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1438,            tmp = str.lastIndexOf(search);,2,0,0,1,2,0,4,0,0,6,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1439,            if (tmp > ret) {,6,2,0,1,3,0,4,0,0,12,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1440,                ret = tmp;,4,0,0,0,0,0,10,0,0,15,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1443,        return ret;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1473,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1474,            return null;,2,0,0,0,0,1,8,0,0,11,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1479,            start = str.length() + start; // remember start is negative,4,1,0,1,2,0,4,0,0,10,59,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1482,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1486,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1489,        return str.substring(start);,2,0,0,1,2,1,0,0,0,2,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1528,        if (str == null) {,2,0,0,1,3,0,0,0,0,2,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1529,            return null;,6,2,0,0,0,1,0,0,0,9,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1533,        if (end < 0) {,2,1,0,1,3,0,0,0,0,4,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1536,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1542,            end = str.length();,2,0,0,1,2,0,4,0,0,7,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1547,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1550,        if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1551,            start = 0;,4,0,0,0,0,0,0,0,0,6,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1554,            end = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1557,"        return str.substring(start, end);",2,1,0,1,2,1,8,0,0,11,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1584,            return null;,4,1,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1586,        if (len < 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1587,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1589,        if (str.length() <= len) {,4,1,0,2,5,0,12,0,0,18,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1590,            return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1620,        if (len < 0) {,4,1,0,1,3,0,0,0,0,5,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1621,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1623,        if (str.length() <= len) {,10,5,0,2,5,0,4,0,0,19,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1624,            return str;,4,0,1,0,0,1,0,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1626,            return str.substring(str.length() - len);,2,1,0,2,4,1,8,0,0,11,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1659,            return EMPTY;,2,0,0,0,0,1,0,2,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1662,            pos = 0;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1664,        if (str.length() <= (pos + len)) {,8,3,0,3,7,0,8,0,0,19,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1700,            return str;,6,2,1,0,0,1,0,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1703,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1705,        int pos = str.indexOf(separator);,2,0,0,1,2,0,6,0,0,8,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1706,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1739,        if (isEmpty(str)) {,2,0,0,2,5,0,0,6,0,9,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1742,        if (separator == null) {,4,1,0,1,3,0,8,0,0,13,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1746,        if (pos == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1779,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1781,        int pos = str.lastIndexOf(separator);,6,1,0,1,2,0,4,0,0,12,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1783,            return str;,8,2,0,0,0,1,0,0,0,10,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1817,            return str;,2,0,0,0,0,1,10,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1822,        int pos = str.lastIndexOf(separator);,6,1,0,1,2,0,16,0,0,24,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1824,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1826,        return str.substring(pos + separator.length());,4,2,0,2,4,1,8,0,0,14,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1885,        int start = str.indexOf(open);,2,4,1,1,2,0,0,0,0,14,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1889,"                return str.substring(start + open.length(), end);",2,1,0,2,4,1,10,0,0,13,49,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,1892,        return null;,2,0,0,0,0,1,4,0,0,6,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2037,"        return splitWorker(str, separatorChars, -1, false);",2,0,0,1,2,1,0,0,0,2,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2098,"        return splitByWholeSeparator( str, separator, -1 ) ;",0,0,1,1,2,1,10,0,0,15,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2129,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2135,        if (len == 0) {,4,2,0,1,3,0,0,0,0,6,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2136,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2139,"        if ( ( separator == null ) || ( """".equals( separator ) ) ) {",2,1,0,4,9,0,8,0,0,11,60,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2141,"            return split( str, null, max ) ;",2,0,1,1,2,1,6,0,0,11,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2149,        int beg = 0 ;,4,0,0,0,0,0,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2150,        int end = 0 ;,2,0,0,0,0,0,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2155,                if ( end > beg ) {,4,1,0,1,3,0,0,0,0,5,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2156,                    numberOfSubstrings += 1 ;,4,0,0,0,0,0,2,2,0,10,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2159,                        end = len ;,6,0,0,0,0,0,0,0,0,7,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2169,                        beg = end + separatorLength ;,10,2,0,0,0,0,2,0,0,15,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2173,                    beg = end + separatorLength ;,6,1,0,0,0,0,0,0,0,8,29,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2177,                substrings.add( str.substring( beg ) ) ;,2,1,0,2,4,0,10,0,0,13,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2178,                end = len ;,6,0,0,0,0,0,6,0,0,13,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2182,        return (String[]) substrings.toArray( new String[substrings.size()] ) ;,0,0,0,5,10,1,8,4,0,12,71,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2266,        if (str == null) {,2,0,1,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2269,        int len = str.length();,8,5,0,1,2,0,4,0,0,17,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2270,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2271,            return ArrayUtils.EMPTY_STRING_ARRAY;,4,0,0,0,0,1,0,0,0,4,37,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2274,"        int i = 0, start = 0;",8,1,0,0,0,0,0,0,0,9,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2275,        boolean match = false;,2,0,0,0,0,0,0,0,0,3,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2276,        boolean lastMatch = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2277,        while (i < len) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2278,            if (str.charAt(i) == separatorChar) {,2,1,0,2,5,0,6,0,0,9,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2279,                if (match || preserveAllTokens) {,6,3,0,1,3,0,8,0,0,17,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2282,                    lastMatch = true;,4,0,0,0,0,0,0,0,0,8,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2284,                start = ++i;,4,0,0,0,0,0,0,0,0,6,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2292,        if (match || (preserveAllTokens && lastMatch)) {,6,2,0,2,5,0,0,0,0,8,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2394,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2395,            return null;,2,0,0,0,0,1,2,0,0,4,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2397,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2398,        if (len == 0) {,2,1,0,1,3,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2399,            return ArrayUtils.EMPTY_STRING_ARRAY;,8,1,0,0,0,1,0,0,0,10,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2401,        List list = new ArrayList();,2,0,0,1,2,0,0,4,0,6,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2402,        int sizePlus1 = 1;,2,0,0,0,0,0,0,0,0,2,18,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2403,"        int i = 0, start = 0;",4,0,0,0,0,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2409,                if (Character.isWhitespace(str.charAt(i))) {,2,0,0,3,7,0,10,0,0,13,44,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2410,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2411,                        lastMatch = true;,2,0,0,0,0,0,0,0,0,4,17,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2414,                            lastMatch = false;,4,0,0,0,0,0,0,0,0,7,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2416,"                        list.add(str.substring(start, i));",2,1,0,2,4,0,12,0,0,15,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2417,                        match = false;,2,0,0,0,0,0,0,0,0,4,14,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2419,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2420,                    continue;,0,0,0,0,0,0,10,0,0,10,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2422,                    lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2427,        } else if (separatorChars.length() == 1) {,0,1,0,2,6,0,4,0,0,5,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2429,            char sep = separatorChars.charAt(0);,4,1,0,1,2,0,10,0,0,16,36,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2430,            while (i < len) {,10,5,0,1,3,0,0,0,0,15,17,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2433,                        lastMatch = true;,4,1,0,0,0,0,0,0,0,7,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2435,                            i = len;,4,0,0,0,0,0,0,0,0,5,8,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2436,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2438,"                        list.add(str.substring(start, i));",2,1,0,2,4,0,8,0,0,11,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2439,                        match = false;,8,0,0,0,0,0,0,0,0,8,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2441,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2442,                    continue;,0,0,0,0,0,0,18,0,0,20,9,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2446,                match = true;,6,1,0,0,0,0,4,0,0,14,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2447,                i++;,2,0,0,0,0,0,0,0,0,3,4,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2453,                    if (match || preserveAllTokens) {,4,1,0,1,3,0,0,0,0,5,33,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2455,                        if (sizePlus1++ == max) {,4,1,0,1,3,0,8,0,0,15,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2457,                            lastMatch = false;,2,0,0,0,0,0,0,0,0,4,18,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2462,                    start = ++i;,4,0,0,0,0,0,0,0,0,6,12,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2471,        if (match || (preserveAllTokens && lastMatch)) {,6,2,0,2,5,0,0,0,0,9,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2474,        return (String[]) list.toArray(new String[list.size()]);,14,4,0,5,10,1,8,4,0,30,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2548,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2582,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2586,        if (bufSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2587,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2593,        for (int i = startIndex; i < endIndex; i++) {,12,3,0,1,3,0,4,0,0,21,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2594,            if (i > startIndex) {,16,3,0,1,3,0,6,2,0,28,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2595,                buf.append(separator);,0,0,0,1,2,0,8,0,0,8,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2597,            if (array[i] != null) {,0,4,1,2,5,0,0,0,0,18,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2629,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2632,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,0,0,0,4,47,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2663,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2666,        if (separator == null) {,4,1,0,1,3,0,0,0,0,6,24,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2672,        int bufSize = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,7,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2673,        if (bufSize <= 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2674,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2677,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),2,1,1,5,11,0,4,0,0,16,84,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2680,        StringBuffer buf = new StringBuffer(bufSize);,8,3,0,1,2,0,0,4,0,15,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2682,        for (int i = startIndex; i < endIndex; i++) {,12,1,0,1,3,0,0,0,0,14,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2683,            if (i > startIndex) {,16,2,0,1,3,0,0,0,0,19,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2686,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2687,                buf.append(array[i]);,4,0,1,2,4,0,4,0,0,14,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2690,        return buf.toString();,4,0,0,1,2,1,0,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2710,        if (iterator == null) {,2,1,0,1,3,0,0,0,0,3,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2716,        Object first = iterator.next();,4,1,0,1,2,0,0,0,0,5,31,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2722,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",6,0,0,1,2,0,0,4,0,11,83,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2723,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2724,            buf.append(first);,4,3,0,1,2,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2728,            buf.append(separator);,2,1,0,1,2,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2733,        },0,0,0,0,1,0,12,0,0,12,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2754,        if (iterator == null) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2757,        if (!iterator.hasNext()) {,2,0,0,2,5,0,4,0,0,7,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2758,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2760,        Object first = iterator.next();,4,1,0,1,2,0,4,2,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2762,            return ObjectUtils.toString(first);,4,3,1,1,2,1,6,0,0,21,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2766,"        StringBuffer buf = new StringBuffer(256); // Java default is 16, probably too small",6,1,1,1,2,0,8,4,0,24,83,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2767,        if (first != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2772,            if (separator != null) {,2,0,0,1,3,0,4,2,0,8,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2775,            Object obj = iterator.next();,6,1,0,1,2,0,4,2,0,13,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2776,            if (obj != null) {,4,2,0,1,3,0,0,2,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2780,        return buf.toString();,2,1,0,1,2,1,4,0,0,7,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2798,        if (collection == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2819,        if (collection == null) {,4,2,0,1,3,0,6,0,0,12,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2820,            return null;,4,0,1,0,0,1,0,0,0,9,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2854,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2855,            return null;,2,0,0,0,0,1,8,0,0,11,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2876,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2878,        int sz = str.length();,2,1,0,1,2,0,8,0,0,11,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2879,        char[] chs = new char[sz];,12,1,1,2,4,0,2,2,0,20,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2881,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2883,                chs[count++] = str.charAt(i);,2,0,1,2,4,0,6,0,0,12,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2886,        if (count == sz) {,10,4,0,1,3,0,6,0,0,20,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2887,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2889,"        return new String(chs, 0, count);",4,0,0,1,2,1,0,2,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2919,        if (isEmpty(str) || isEmpty(remove)) {,0,1,0,3,7,0,14,0,0,15,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2922,        if (str.startsWith(remove)){,2,1,0,2,5,0,6,0,0,9,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2925,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2953,        if (isEmpty(str) || isEmpty(remove)) {,8,1,0,3,7,0,4,0,0,15,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2954,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2956,        if (str.endsWith(remove)) {,2,0,0,2,5,0,6,0,0,8,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2957,"            return str.substring(0, str.length() - remove.length());",2,1,0,3,6,1,12,0,0,15,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2986,        if (isEmpty(str) || isEmpty(remove)) {,0,1,1,3,7,0,14,0,0,24,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,2987,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3012,        if (isEmpty(str) || str.indexOf(remove) == -1) {,0,0,1,3,7,0,2,0,0,6,48,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3013,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3015,        char[] chars = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3016,        int pos = 0;,0,0,0,0,0,0,4,0,0,4,12,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3019,                chars[pos++] = chars[i];,2,0,1,2,4,0,0,0,0,11,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3078,"        return replace(text, repl, with, -1);",12,3,0,1,2,1,26,0,0,44,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3115,        if (end == -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3116,            return text;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3118,        int replLength = repl.length();,2,0,0,1,2,0,4,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3119,        int increase = with.length() - replLength;,6,2,0,1,2,0,4,0,0,12,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3121,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,8,2,0,2,4,0,0,0,0,11,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3124,"            buf.append(text.substring(start, end)).append(with);",6,3,0,3,6,0,0,0,0,9,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3125,            start = end + replLength;,6,1,0,0,0,0,0,0,0,8,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3126,            if (--max == 0) {,2,0,0,1,3,0,0,0,0,2,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3129,"            end = text.indexOf(repl, start);",14,1,0,1,2,0,8,0,0,25,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3131,        buf.append(text.substring(start));,4,2,1,2,4,0,10,0,0,20,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3158,        if (str == null) {,2,1,0,1,3,0,8,0,0,11,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3201,        if (isEmpty(str) || isEmpty(searchChars)) {,4,2,0,3,7,0,12,0,0,18,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3202,            return str;,8,1,0,0,0,1,0,0,0,10,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3204,        if (replaceChars == null) {,2,1,0,1,3,0,8,2,0,13,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3208,        int replaceCharsLength = replaceChars.length();,2,0,0,1,2,0,4,0,0,6,47,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3209,        int strLength = str.length();,16,2,0,1,2,0,8,0,0,27,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3210,        StringBuffer buf = new StringBuffer(strLength);,10,3,0,1,2,0,0,4,0,17,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3214,            if (index >= 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3215,                modified = true;,6,1,0,0,0,0,16,0,0,26,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3216,                if (index < replaceCharsLength) {,4,1,0,1,3,0,0,0,0,5,33,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3217,                    buf.append(replaceChars.charAt(index));,2,1,0,2,4,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3223,        if (modified) {,2,0,0,1,3,0,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3226,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3258,        return new StringBuffer(start + overlay.length() + text.length() - end + 1),6,3,0,3,6,1,8,0,0,17,75,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3298,        if (overlay == null) {,6,3,0,1,3,0,0,0,0,9,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3299,            overlay = EMPTY;,4,0,0,0,0,0,0,0,0,5,16,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3301,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3302,        if (start < 0) {,2,1,0,1,3,0,8,0,0,11,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3303,            start = 0;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3306,            start = len;,4,0,0,0,0,0,6,0,0,11,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3308,        if (end < 0) {,4,1,0,1,3,0,12,0,0,17,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3309,            end = 0;,10,1,1,0,0,0,10,2,0,30,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3312,            end = len;,4,0,0,0,0,0,0,0,0,5,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3314,        if (start > end) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3315,            int temp = start;,4,0,0,0,0,0,0,0,0,4,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3317,            end = temp;,6,0,0,0,0,0,0,0,0,7,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3319,        return new StringBuffer(len + start - end + overlay.length() + 1),4,0,0,2,4,1,0,0,0,5,65,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3354,        if (isEmpty(str)) {,2,2,0,2,5,0,8,0,0,13,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3355,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3360,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,12,3,0,1,3,0,6,0,0,21,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3361,                return EMPTY;,4,0,0,0,0,1,0,8,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3363,                return str;,10,2,0,0,0,1,0,0,0,12,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3367,        int lastIdx = str.length() - 1;,2,1,0,1,2,0,4,0,0,7,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3370,        if (last == CharUtils.LF) {,6,1,0,1,3,0,6,0,0,13,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3371,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,24,4,1,2,5,1,12,0,0,45,46,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3374,        } else if (last != CharUtils.CR) {,6,1,0,1,4,0,0,0,0,7,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3408,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3410,        if (str.endsWith(separator)) {,8,1,0,2,5,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3411,"            return str.substring(0, str.length() - separator.length());",0,1,0,3,6,1,12,0,0,13,59,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3413,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3444,        String sub = str.substring(str.length() - sep.length());,4,2,0,3,6,0,12,2,0,20,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3445,        if (sep.equals(sub)) {,12,1,0,2,5,0,0,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3448,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3465,        int idx = str.lastIndexOf(sep);,2,0,0,1,2,0,6,0,0,8,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3466,        if (idx == str.length() - sep.length()) {,10,1,0,3,7,0,0,0,0,12,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3467,            return sep;,2,0,0,0,0,1,0,0,0,2,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3468,        } else if (idx != -1) {,2,1,1,1,4,0,0,0,0,7,23,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3469,            return str.substring(idx);,2,0,0,1,2,1,6,0,0,9,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3487,        int idx = str.indexOf(sep);,4,0,1,1,2,0,6,0,0,15,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3488,        if (idx != -1) {,4,2,0,1,3,0,0,0,0,7,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3489,            return str.substring(idx + sep.length());,2,1,0,2,4,1,8,0,0,11,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3491,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3508,        int idx = str.indexOf(sep);,2,0,0,1,2,0,6,0,0,8,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3509,        if (idx != -1) {,2,1,0,1,3,0,0,0,0,4,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3510,"            return str.substring(0, idx + sep.length());",4,1,0,2,4,1,8,0,0,14,44,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3512,            return EMPTY;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3542,        if (str == null) {,2,1,0,1,3,0,0,0,0,4,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3545,        int strLen = str.length();,2,0,0,1,2,0,0,0,0,2,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3547,            return EMPTY;,6,1,0,0,0,1,4,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3549,        int lastIdx = strLen - 1;,14,3,1,0,0,0,0,2,0,23,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3552,        if (last == CharUtils.LF) {,6,1,0,1,3,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3557,        return ret;,2,0,0,0,0,1,8,0,0,10,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3572,        if (lastIdx <= 0) {,2,0,0,1,3,0,6,0,0,8,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3573,            return EMPTY;,2,0,0,0,0,1,10,0,0,12,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3575,        char last = str.charAt(lastIdx);,2,0,0,1,2,0,6,0,0,8,32,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3576,        if (last == CharUtils.LF) {,6,1,0,1,3,0,6,0,0,13,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3577,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,6,2,0,2,5,0,4,0,0,12,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3581,            lastIdx++;,8,1,0,0,0,0,0,0,0,11,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3631,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3632,            return null;,2,0,1,0,0,1,0,2,0,8,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3634,        if (repeat <= 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3637,        int inputLength = str.length();,6,0,0,1,2,0,4,0,0,11,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3638,        if (repeat == 1 || inputLength == 0) {,8,4,0,1,3,0,0,0,0,12,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3639,            return str;,4,1,1,0,0,1,0,0,0,9,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3641,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,8,4,0,1,3,0,0,0,0,12,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3646,        switch (inputLength) {,10,1,0,1,3,0,8,0,0,19,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3648,                char ch = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3650,                for (int i = repeat - 1; i >= 0; i--) {,12,2,0,1,3,0,4,2,0,22,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3653,                return new String(output1);,2,0,0,1,2,1,0,2,0,4,27,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3655,                char ch0 = str.charAt(0);,2,0,0,1,2,0,4,0,0,6,25,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3658,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",10,3,0,1,3,0,0,0,0,15,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3659,                    output2[i] = ch0;,4,1,1,1,2,0,0,0,0,10,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3662,                return new String(output2);,2,1,0,1,2,1,8,2,0,13,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3696,        if (repeat < 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3697,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",4,2,0,1,2,0,0,2,0,9,79,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3699,        final char[] buf = new char[repeat];,2,0,1,2,4,1,0,0,0,5,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3700,        for (int i = 0; i < buf.length; i++) {,10,1,0,1,3,0,0,0,0,12,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3751,        if (str == null) {,8,1,0,1,3,1,0,4,0,14,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3754,        int pads = size - str.length();,4,1,0,1,2,0,4,0,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3756,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3788,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3789,            return null;,6,2,0,0,0,1,6,0,0,15,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3792,"            padStr = "" "";",8,3,0,0,0,0,0,0,0,14,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3795,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3796,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3797,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3798,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,2,52,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3804,        if (pads == padLen) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3806,        } else if (pads < padLen) {,6,1,0,1,4,0,0,0,0,7,27,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3810,            char[] padChars = padStr.toCharArray();,4,0,0,2,4,1,8,2,0,15,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3811,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,0,0,0,10,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3812,                padding[i] = padChars[i % padLen];,6,2,1,2,4,0,0,0,0,19,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3814,            return str.concat(new String(padding));,4,0,0,2,4,1,4,2,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3838,"        return leftPad(str, size, ' ');",2,0,0,1,2,1,6,2,0,11,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3863,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3864,            return null;,12,2,0,0,0,1,0,0,0,15,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3866,        int pads = size - str.length();,4,1,0,1,2,0,4,0,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3867,        if (pads <= 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3868,            return str; // returns original String when possible,4,1,0,0,0,1,0,0,0,5,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3870,        if (pads > PAD_LIMIT) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3871,"            return leftPad(str, size, String.valueOf(padChar));",4,1,0,2,4,1,12,0,0,17,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3906,        int padLen = padStr.length();,18,1,0,1,2,0,16,0,0,36,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3908,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3909,        if (pads <= 0) {,4,1,0,1,3,0,0,0,0,5,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3910,            return str; // returns original String when possible,2,0,0,0,0,1,0,0,0,3,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3912,        if (padLen == 1 && pads <= PAD_LIMIT) {,6,3,0,1,3,0,0,0,0,9,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3916,        if (pads == padLen) {,4,1,0,1,3,0,0,0,0,5,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3918,        } else if (pads < padLen) {,4,1,0,1,4,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3922,            char[] padChars = padStr.toCharArray();,2,0,0,2,4,0,4,0,0,6,39,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3923,            for (int i = 0; i < pads; i++) {,8,1,0,1,3,0,0,0,0,10,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3924,                padding[i] = padChars[i % padLen];,4,1,1,2,4,0,0,0,0,12,34,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3984,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3985,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3987,        int strLen = str.length();,4,2,0,1,2,0,10,0,0,16,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3988,        int pads = size - strLen;,6,1,0,0,0,0,0,0,0,7,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3989,        if (pads <= 0) {,6,4,0,1,3,0,0,0,0,10,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3990,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,3993,"        str = rightPad(str, size, padChar);",2,1,0,1,2,0,18,0,0,23,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4024,        if (str == null || size <= 0) {,4,3,0,1,3,0,0,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4027,        if (isEmpty(padStr)) {,2,0,0,2,5,0,4,0,0,6,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4028,"            padStr = "" "";",2,0,0,0,0,0,0,0,0,4,13,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4030,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4031,        int pads = size - strLen;,8,1,0,0,0,0,0,0,0,9,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4032,        if (pads <= 0) {,10,6,0,1,3,0,4,2,0,22,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4033,            return str;,2,0,1,0,0,1,0,0,0,4,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4035,"        str = leftPad(str, strLen + pads / 2, padStr);",6,2,0,1,2,0,16,0,0,25,46,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4036,"        str = rightPad(str, size, padStr);",2,0,1,1,2,0,10,0,0,22,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4037,        return str;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4057,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4078,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4079,            return null;,4,1,0,0,0,1,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4107,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4109,        return new StringBuffer(strLen),12,1,0,1,2,1,0,2,0,16,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4153,        return new StringBuffer(strLen),4,1,0,1,2,1,0,2,0,7,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4201,        if (str == null || (strLen = str.length()) == 0) {,4,0,0,3,7,0,0,0,0,4,50,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4202,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4204,        StringBuffer buffer = new StringBuffer(strLen);,4,0,0,1,2,0,0,4,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4206,        char ch = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4207,        for (int i = 0; i < strLen; i++) {,10,2,0,1,3,0,0,0,0,13,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4208,            ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,9,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4211,            } else if (Character.isTitleCase(ch)) {,4,0,0,2,6,0,6,0,0,10,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4212,                ch = Character.toLowerCase(ch);,2,0,0,1,2,0,6,0,0,9,31,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4214,                ch = Character.toUpperCase(ch);,8,0,0,1,2,0,8,0,0,16,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4216,            buffer.append(ch);,2,1,0,1,2,0,10,0,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4218,        return buffer.toString();,6,2,0,1,2,1,4,0,0,12,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4259,        if (isEmpty(str) || isEmpty(sub)) {,10,1,0,3,7,0,0,0,0,12,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4263,        int idx = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4264,"        while ((idx = str.indexOf(sub, idx)) != -1) {",4,2,0,3,7,0,16,0,0,25,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4265,            count++;,4,1,0,0,0,0,8,0,0,14,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4292,        if (str == null) {,2,1,0,1,3,0,12,0,0,15,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4295,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4296,        for (int i = 0; i < sz; i++) {,10,1,0,1,3,0,4,0,0,16,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4326,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4329,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4331,            if ((Character.isLetter(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,77,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4359,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4363,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4364,            if (Character.isLetterOrDigit(str.charAt(i)) == false) {,4,1,0,3,7,0,10,0,0,18,56,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4368,        return true;,2,0,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4393,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4396,        int sz = str.length();,2,0,0,1,2,0,16,0,0,18,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4397,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4398,            if ((Character.isLetterOrDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,84,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4402,        return true;,6,0,0,0,0,1,4,0,0,11,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4431,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4434,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4435,        for (int i = 0; i < sz; i++) {,12,2,0,1,3,0,0,0,0,15,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4436,            if (CharUtils.isAsciiPrintable(str.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,57,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4465,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4468,        int sz = str.length();,2,0,0,1,2,0,12,0,0,14,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4469,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4470,            if (Character.isDigit(str.charAt(i)) == false) {,6,0,0,3,7,0,4,0,0,10,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4501,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4502,            return false;,6,3,0,0,0,1,8,0,0,19,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4504,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4506,            if ((Character.isDigit(str.charAt(i)) == false) && (str.charAt(i) != ' ')) {,0,3,0,6,13,0,16,0,0,21,76,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4507,                return false;,6,3,0,0,0,1,0,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4533,        if (str == null) {,8,4,0,1,3,0,0,0,0,12,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4536,        int sz = str.length();,2,0,0,1,2,0,4,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4537,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4538,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,14,0,0,17,55,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4564,        return str == null ? EMPTY : str;,8,2,0,0,0,1,0,0,0,10,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4585,        return str == null ? defaultStr : str;,10,2,0,0,0,1,8,0,0,20,38,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4605,        return StringUtils.isEmpty(str) ? defaultStr : str;,4,0,0,1,2,1,6,0,0,11,51,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4651,        if (str == null) {,2,1,0,1,3,0,4,0,0,8,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4684,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4691,        if (separatorChars == null) {,6,1,0,1,3,0,8,0,0,15,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4692,"            return join(strs, ' ');",0,0,0,1,2,1,4,0,0,5,23,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4732,"        return abbreviate(str, 0, maxWidth);",2,0,1,1,2,1,10,0,0,17,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4771,        if (str == null) {,2,1,0,1,3,0,8,2,0,13,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4775,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0,0,0,1,2,0,20,4,0,25,70,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4777,        if (str.length() <= maxWidth) {,0,1,0,2,5,0,4,2,0,9,31,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4778,            return str;,2,0,0,0,0,1,6,0,0,8,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4781,            offset = str.length();,4,1,0,1,2,0,0,0,0,5,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4783,        if ((str.length() - offset) < (maxWidth - 3)) {,12,3,0,4,9,0,10,0,0,25,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4784,            offset = str.length() - (maxWidth - 3);,2,0,0,2,4,0,0,0,0,2,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4786,        if (offset <= 4) {,6,1,0,1,3,1,6,2,0,16,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4789,        if (maxWidth < 7) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4790,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0,0,0,1,2,0,0,2,0,4,82,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4826,        if (str1 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4829,        if (str2 == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4830,            return str1;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4832,"        int at = indexOfDifference(str1, str2);",2,0,0,1,2,0,6,0,0,8,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4833,        if (at == -1) {,2,1,0,1,3,0,0,0,0,4,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4836,        return str2.substring(at);,8,1,0,1,2,1,0,0,0,10,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4866,        if (str1 == null || str2 == null) {,6,5,1,1,3,0,4,0,0,24,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4870,        for (i = 0; i < str1.length() && i < str2.length(); ++i) {,8,3,0,3,7,0,8,0,0,21,58,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4871,            if (str1.charAt(i) != str2.charAt(i)) {,0,1,0,3,7,0,12,0,0,13,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4875,        if (i < str2.length() || i < str1.length()) {,8,3,0,3,7,0,16,0,0,27,45,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4876,            return i;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4878,        return -1;,0,0,0,0,0,1,6,0,0,9,10,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4939,        int n = s.length(); // length of s,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4940,        int m = t.length(); // length of t,2,0,0,1,2,0,4,0,0,6,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4942,        if (n == 0) {,2,1,0,1,3,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4943,            return m;,2,0,0,0,0,1,0,0,0,2,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4945,            return n;,4,1,0,0,0,1,0,0,0,5,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4949,"        int d[] = new int[n+1]; // cost array, horizontally",4,1,0,2,4,0,0,0,0,5,51,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4961,            p[i] = i;,2,0,1,1,2,0,0,0,0,7,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4964,        for (j = 1; j<=m; j++) {,8,1,0,1,3,0,0,0,0,11,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4966,            d[0] = j;,2,0,1,1,2,0,0,0,0,5,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4969,                cost = s.charAt(i-1)==t_j ? 0 : 1;,8,2,0,1,2,0,8,2,0,21,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4971,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",8,6,1,6,12,0,8,0,0,35,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4975,            _d = p;,4,0,0,0,0,0,0,0,0,6,7,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4976,            p = d;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,58,4977,            d = _d;,2,0,1,0,0,0,0,0,0,7,7,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,86,    },4,2,0,0,1,0,0,0,0,6,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,151,"        return toInt(str, defaultValue);",4,4,1,1,2,1,6,0,0,22,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,173,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,177,        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,178,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,221,        if (str == null) {,4,2,0,1,3,0,0,0,0,7,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,222,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,226,        } catch (NumberFormatException nfe) {,10,1,0,1,4,0,0,2,0,15,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,278,      } catch (NumberFormatException nfe) {,8,1,0,1,4,1,0,2,0,12,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,331,          return defaultValue;,8,1,0,0,0,2,8,0,0,18,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,409,            return null;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,423,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,424,                if (expPos < decPos) {,4,1,0,1,3,0,0,0,0,5,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,425,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,427,"                dec = str.substring(decPos + 1, expPos);",4,1,0,1,2,0,6,0,0,12,40,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,429,                dec = str.substring(decPos + 1);,4,1,0,1,2,0,4,0,0,10,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,431,"            mant = str.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,434,"                mant = str.substring(0, expPos);",2,0,0,1,2,0,6,0,0,9,32,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,458,                        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,461,                        return createBigInteger(numeric);,0,0,0,1,2,1,10,0,0,10,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,468,                        Float f = NumberUtils.createFloat(numeric);,2,0,0,1,2,0,6,2,0,10,43,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,482,                        Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,0,6,2,0,10,45,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,483,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,486,                    } catch (NumberFormatException nfe) {,4,0,0,1,4,0,0,2,0,6,37,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,491,                    } catch (NumberFormatException e) {,4,1,0,1,4,0,0,2,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,496,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,503,"                exp = str.substring(expPos + 1, str.length());",4,1,0,2,4,0,8,0,0,14,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,507,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,510,                    return createInteger(str);,2,0,0,1,2,1,8,0,0,11,26,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,511,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,516,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,526,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,0,0,5,11,0,6,0,0,11,65,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,529,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,533,                    Double d = createDouble(str);,10,3,0,1,2,0,16,2,0,32,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,534,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,66,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,537,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,557,            return true;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,578,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,597,        return Double.valueOf(str);,2,0,0,1,2,1,6,0,0,9,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,644,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,647,        return new BigInteger(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,660,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,680,        if (array1 == array2) {,0,0,0,1,3,0,0,0,0,1,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,683,        if (array1 == null || array2 == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,686,        if (array1.length != array2.length) {,8,1,0,1,3,0,0,0,0,10,37,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,691,            if (array1[i] != array2[i]) {,2,1,1,3,7,0,0,0,0,11,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,707,        if (array1 == array2) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,710,        if (array1 == null || array2 == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,713,        if (array1.length != array2.length) {,8,1,0,1,3,0,0,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,714,            return false;,2,0,0,0,0,1,0,0,0,2,13,16,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,717,        for (int i=0; i<array1.length; i++) {,4,0,0,1,3,0,0,4,0,8,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,718,            if (array1[i] != array2[i]) {,2,1,1,3,7,0,4,0,0,15,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,734,        if (array1 == array2) {,6,1,0,1,3,0,4,0,0,11,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,738,            return false;,4,0,0,0,0,1,0,0,0,6,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,740,        if (array1.length != array2.length) {,8,1,0,1,3,0,0,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,761,        if (array1 == array2) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,764,        if (array1 == null || array2 == null) {,4,3,0,1,3,0,10,0,0,17,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,767,        if (array1.length != array2.length) {,14,3,0,1,3,0,0,0,0,17,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,768,            return false;,8,2,1,0,0,1,0,2,0,17,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,772,            if (array1[i] != array2[i]) {,10,7,1,3,7,0,12,2,0,39,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,788,        if (array1 == array2) {,4,1,0,1,3,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,791,        if (array1 == null || array2 == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,798,        for (int i=0; i<array1.length; i++) {,12,2,0,1,3,0,0,0,0,15,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,799,"            if (compare(array1[i], array2[i]) != 0) {",4,2,1,4,9,0,6,4,0,24,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,804,        return true;,10,1,0,0,0,1,4,0,0,18,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,815,        if (array1 == array2) {,8,5,0,1,3,0,12,0,0,25,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,818,        if (array1 == null || array2 == null) {,6,4,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,821,        if (array1.length != array2.length) {,8,1,0,1,3,0,4,0,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,826,"            if (compare(array1[i], array2[i]) != 0) {",6,2,1,4,9,0,2,0,0,18,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,846,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,854,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,855,            if (array[i] < min) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,856,                min = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,860,        return min;,4,1,0,0,0,1,0,0,0,5,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,873,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,874,"            throw new IllegalArgumentException(""The Array must not be null"");",6,3,0,1,2,0,0,0,0,9,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,875,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,880,        int min = array[0];,2,0,1,1,2,0,0,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,883,                min = array[j];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,887,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,900,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,902,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,903,"            throw new IllegalArgumentException(""Array cannot be empty."");",2,0,1,1,2,0,0,0,0,4,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,908,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,910,                min = array[i];,2,0,1,1,2,0,4,0,0,11,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,914,        return min;,2,0,0,0,0,1,8,0,0,11,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,927,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,929,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,934,        byte min = array[0];,2,0,1,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,935,        for (int i = 1; i < array.length; i++) {,12,1,0,1,3,0,0,0,0,14,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,937,                min = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,941,        return min;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,954,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,961,        double min = array[0];,2,0,1,1,2,0,0,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,963,            if (array[i] < min) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,968,        return min;,4,3,0,0,0,1,0,0,0,7,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,981,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,983,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,984,"            throw new IllegalArgumentException(""Array cannot be empty."");",2,1,0,1,2,0,0,2,0,6,61,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,989,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,995,        return min;,6,0,0,0,0,1,6,0,0,12,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1010,        if (array == null) {,2,1,0,1,3,0,4,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1012,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1017,        long max = array[0];,2,0,1,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1018,        for (int j = 1; j < array.length; j++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1019,            if (array[j] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1024,        return max;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1037,        if (array == null) {,4,1,0,1,3,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1044,        int max = array[0];,2,0,1,1,2,0,0,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1045,        for (int j = 1; j < array.length; j++) {,14,2,0,1,3,0,0,0,0,17,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1046,            if (array[j] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1047,                max = array[j];,4,0,1,1,2,0,0,0,0,11,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1051,        return max;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1065,"            throw new IllegalArgumentException(""The Array must not be null"");",6,1,0,1,2,0,8,2,0,20,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1066,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1071,        short max = array[0];,12,2,1,1,2,0,6,0,0,23,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1072,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1073,            if (array[i] > max) {,2,1,1,2,5,0,8,0,0,16,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1074,                max = array[i];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1091,        if (array == null) {,2,2,0,1,3,0,8,0,0,13,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1093,        } else if (array.length == 0) {,4,1,0,1,4,0,0,0,0,5,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1098,        byte max = array[0];,4,0,1,1,2,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1099,        for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1100,            if (array[i] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1101,                max = array[i];,4,0,0,1,2,0,4,0,0,8,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1105,        return max;,4,0,0,0,0,1,6,0,0,11,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1118,        if (array== null) {,6,2,0,1,3,0,0,0,0,8,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1120,        } else if (array.length == 0) {,6,1,0,1,4,0,0,0,0,9,31,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1125,        double max = array[0];,2,0,1,1,2,0,0,0,0,4,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1126,        for (int j = 1; j < array.length; j++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1128,                max = array[j];,2,0,1,1,2,0,0,0,0,7,15,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1145,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1147,        } else if (array.length == 0) {,8,1,0,1,4,0,0,0,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1148,"            throw new IllegalArgumentException(""Array cannot be empty."");",0,0,0,1,2,0,10,0,0,11,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1152,        float max = array[0];,2,0,1,1,2,0,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1153,        for (int j = 1; j < array.length; j++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1154,            if (array[j] > max) {,2,1,1,2,5,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1155,                max = array[j];,8,1,1,1,2,0,6,0,0,21,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1159,        return max;,2,1,0,0,0,1,10,0,0,14,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1173,        if (b < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1174,            a = b;,4,0,0,0,0,0,0,0,0,6,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1176,        if (c < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1177,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1191,        if (b < a) {,2,0,0,1,3,0,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1192,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1194,        if (c < a) {,16,4,0,1,3,0,0,0,0,20,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1195,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1209,        if (b < a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1210,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1213,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1228,            a = b;,10,1,0,0,0,0,0,0,0,12,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1233,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1248,"        return Math.min(Math.min(a, b), c);",0,0,0,2,4,1,14,0,0,15,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1278,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1280,        if (c > a) {,4,1,0,1,3,0,10,0,0,15,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1295,        if (b > a) {,4,1,0,1,3,0,0,0,0,6,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1296,            a = b;,8,0,0,0,0,0,18,2,0,29,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1298,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1299,            a = c;,4,0,0,0,0,0,8,0,0,13,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1301,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1314,            a = b;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1316,        if (c > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1317,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1319,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1331,        if (b > a) {,4,1,0,1,3,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1335,            a = c;,4,0,0,0,0,0,0,0,0,5,6,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1337,        return a;,2,0,0,0,0,1,0,0,0,2,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1352,"        return Math.max(Math.max(a, b), c);",4,3,0,2,4,1,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1406,        if (lhs < rhs) {,6,1,0,1,3,0,4,0,0,11,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1407,            return -1;,2,1,0,0,0,1,0,0,0,4,10,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1409,        if (lhs > rhs) {,6,2,0,1,3,0,0,0,0,8,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1427,        if (lhsBits < rhsBits) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1467,        if (lhs < rhs) {,4,1,0,1,3,0,0,0,0,5,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1477,        int lhsBits = Float.floatToIntBits(lhs);,2,0,0,1,2,0,6,0,0,8,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1479,        if (lhsBits == rhsBits) {,4,1,0,1,3,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1488,        if (lhsBits < rhsBits) {,6,1,0,1,3,0,0,0,0,7,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1535,        char[] chars = str.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1536,        int sz = chars.length;,6,0,0,0,0,0,0,0,0,6,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1537,        boolean hasExp = false;,2,0,0,0,0,0,0,0,0,3,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1542,        int start = (chars[0] == '-') ? 1 : 0;,2,1,1,2,4,0,0,0,0,6,38,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1543,        if (sz > start + 1) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1544,            if (chars[start] == '0' && chars[start + 1] == 'x') {,2,4,1,3,7,0,0,0,0,14,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1546,                if (i == sz) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1550,                for (; i < chars.length; i++) {,8,1,0,1,3,0,0,0,0,10,31,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1551,                    if ((chars[i] < '0' || chars[i] > '9'),4,1,0,3,7,0,0,0,0,5,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1560,"        sz--; // don't want to loop to the last char, check it afterwords",4,0,0,0,0,0,0,0,0,5,65,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1562,        int i = start;,6,1,0,0,0,0,0,0,0,7,14,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1566,            if (chars[i] >= '0' && chars[i] <= '9') {,4,0,0,3,7,0,0,0,0,5,41,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1567,                foundDigit = true;,10,0,0,0,0,0,4,0,0,16,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1568,                allowSigns = false;,2,0,0,0,0,0,0,0,0,4,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1571,                if (hasDecPoint || hasExp) {,4,1,0,1,3,0,0,0,0,5,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1573,                    return false;,2,1,0,0,0,1,0,0,0,4,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1575,                hasDecPoint = true;,2,0,0,0,0,0,0,0,0,4,19,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1578,                if (hasExp) {,2,0,0,1,3,0,0,0,0,2,13,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1582,                if (!foundDigit) {,2,0,0,1,3,0,0,0,0,3,18,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1583,                    return false;,6,0,0,0,0,1,4,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1585,                hasExp = true;,2,0,0,0,0,0,0,0,0,4,14,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1587,            } else if (chars[i] == '+' || chars[i] == '-') {,12,6,1,3,8,0,0,0,0,28,48,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1588,                if (!allowSigns) {,4,0,0,1,3,0,4,0,0,9,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1589,                    return false;,2,0,0,0,0,1,0,0,0,3,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1592,                foundDigit = false; // we need a digit after the E,4,0,0,0,0,0,0,0,0,6,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1596,            i++;,2,0,0,0,0,0,0,0,0,3,4,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1598,        if (i < chars.length) {,12,2,0,1,3,0,0,0,0,14,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1599,            if (chars[i] >= '0' && chars[i] <= '9') {,2,4,1,3,7,0,8,0,0,24,41,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1603,            if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,7,0,0,0,0,13,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1612,                return foundDigit;,2,0,0,0,0,1,0,0,0,2,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1614,            if (chars[i] == 'l',0,1,1,1,3,0,0,0,0,6,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1617,                return foundDigit && !hasExp;,4,1,0,0,0,1,0,0,0,6,29,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1620,            return false;,2,1,0,0,0,1,0,0,0,5,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1624,        return !allowSigns && foundDigit;,6,1,0,0,0,1,0,0,0,8,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,879,        if (width > 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,880,            ensureCapacity(size + width);,4,1,0,1,2,0,2,0,0,7,29,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,881,            String str = (obj == null ? getNullText() : obj.toString());,4,1,0,3,6,0,6,2,0,14,60,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,882,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,883,            if (strLen >= width) {,4,1,0,1,3,0,0,0,0,5,22,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);",4,0,0,1,2,1,10,2,0,17,38,5,0.5,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,108,        if (initialCapacity <= 0) {,2,1,0,1,3,0,0,0,0,3,27,4,0.008,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,111,        buffer = new char[initialCapacity];,2,0,1,1,2,0,0,0,0,5,35,4,0.008,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,233,        return this;,4,0,0,0,0,1,0,2,0,6,12,1,0.00581,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,118,    private StrMatcher delimMatcher = StrMatcher.splitMatcher();,4,1,0,1,2,1,4,2,0,12,60,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,122,    private StrMatcher ignoredMatcher = StrMatcher.noneMatcher();,2,0,0,1,2,1,4,2,0,9,61,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,124,    private StrMatcher trimmerMatcher = StrMatcher.noneMatcher();,2,0,0,1,2,1,4,2,0,9,61,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,129,    private boolean ignoreEmptyTokens = true;,4,0,0,0,0,1,0,0,0,6,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,242,        this.chars = null;,2,0,0,0,0,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,243,    },12,1,0,0,1,0,0,2,0,16,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,253,        if (input != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,254,            chars = input.toCharArray();,6,0,1,1,2,0,4,2,0,16,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,256,            chars = null;,2,1,0,0,0,0,0,0,0,3,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,268,        setDelimiterChar(delim);,2,1,0,1,2,0,4,0,0,7,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,278,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,280,    },2,0,0,0,1,3,4,2,0,12,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,302,"        this(input, delim);",4,0,0,1,2,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,303,        setQuoteChar(quote);,0,0,0,1,2,0,14,0,0,14,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,304,    },0,0,0,0,1,0,12,2,0,14,1,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,315,"        this(input, delim);",4,0,0,1,2,0,0,0,0,4,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,316,        setQuoteMatcher(quote);,4,0,0,1,2,6,2,6,0,19,23,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,330,        this.chars = input;,4,0,0,0,0,0,0,0,0,5,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,357,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,358,        setDelimiterString(delim);,4,1,0,1,2,0,4,0,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,371,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,404,        setQuoteMatcher(quote);,0,0,0,1,2,0,12,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,405,    },4,1,0,0,1,6,8,2,0,23,1,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,99,        CSV_TOKENIZER_PROTOTYPE.setIgnoreEmptyTokens(false);,2,3,0,1,2,0,4,0,0,9,52,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,101,        TSV_TOKENIZER_PROTOTYPE = new StrTokenizer();,2,0,0,1,2,0,0,2,0,5,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,105,        TSV_TOKENIZER_PROTOTYPE.setTrimmerMatcher(StrMatcher.trimMatcher());,0,0,0,2,4,0,16,0,0,16,68,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,106,        TSV_TOKENIZER_PROTOTYPE.setEmptyTokenAsNull(false);,2,1,0,1,2,0,4,0,0,8,51,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,107,        TSV_TOKENIZER_PROTOTYPE.setIgnoreEmptyTokens(false);,4,1,0,1,2,3,12,0,0,23,52,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,108,    },18,4,0,0,1,0,8,0,0,31,1,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,139,        return (StrTokenizer) CSV_TOKENIZER_PROTOTYPE.clone();,4,0,0,2,4,1,0,0,0,5,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,152,        return getCSVClone();,14,6,0,1,2,1,10,0,0,32,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,166,        tok.reset(input);,6,1,1,1,2,0,14,0,0,25,17,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,167,        return tok;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,180,        StrTokenizer tok = getCSVClone();,2,0,0,1,2,0,2,2,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,182,        return tok;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,191,        return (StrTokenizer) TSV_TOKENIZER_PROTOTYPE.clone();,0,0,0,2,4,1,4,2,0,6,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,204,        return getTSVClone();,6,1,0,1,2,1,0,0,0,7,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,215,        StrTokenizer tok = getTSVClone();,2,0,0,1,2,0,2,2,0,6,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,217,        return tok;,4,0,0,0,0,1,4,2,0,10,11,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,228,        StrTokenizer tok = getTSVClone();,6,0,0,1,2,3,0,4,0,13,33,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,229,        tok.reset(input);,2,0,0,1,2,0,0,0,0,3,17,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,416,        return tokens.length;,6,0,0,0,0,1,0,0,0,6,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,426,            return tokens[tokenPos++];,4,0,1,1,2,4,4,0,0,15,26,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,450,        return (String[]) tokens.clone();,6,0,0,3,6,4,4,6,0,19,33,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,459,        checkTokenized();,0,1,0,1,2,0,6,0,0,7,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,462,            list.add(tokens[i]);,4,4,0,2,4,0,8,0,0,17,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,475,        tokenPos = 0;,6,1,0,0,0,0,0,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,476,        tokens = null;,4,1,0,0,0,0,0,2,0,9,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,489,        reset();,0,0,0,1,2,0,2,2,0,4,8,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,490,        if (input != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,523,        checkTokenized();,2,0,0,1,2,0,2,0,0,5,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,524,        return tokenPos < tokens.length;,6,1,0,0,0,1,14,0,0,22,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,533,        if (hasNext()) {,8,0,0,2,5,6,20,4,0,39,16,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,555,        return tokenPos > 0;,2,1,0,0,0,1,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,565,            return tokens[--tokenPos];,2,0,1,1,2,1,0,0,0,5,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,576,        return tokenPos - 1;,2,0,0,0,0,1,10,0,0,12,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,585,"        throw new UnsupportedOperationException(""remove() is unsupported"");",0,0,0,2,4,0,0,2,0,3,67,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,612,        if (tokens == null) {,2,0,0,1,3,0,0,0,0,2,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,616,                tokens = (String[]) split.toArray(new String[split.size()]);,2,0,0,5,10,0,8,4,0,15,60,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,618,"                List split = tokenize(chars, 0, chars.length);",6,0,0,1,2,0,4,2,0,12,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,622,    },2,0,0,0,1,0,0,0,0,2,1,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,646,            return Collections.EMPTY_LIST;,12,1,0,0,0,1,16,4,0,35,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,648,        StrBuilder buf = new StrBuilder();,4,1,0,1,2,0,0,6,0,12,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,649,        List tokens = new ArrayList();,6,0,0,1,2,3,0,4,0,13,30,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,650,        int pos = offset;,18,1,1,0,0,1,0,4,0,29,17,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,653,        while (pos >= 0 && pos < count) {,6,3,0,1,3,0,0,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,658,            if (pos >= count) {,6,1,0,1,3,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,662,        return tokens;,6,0,0,0,0,1,0,0,0,7,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,672,        if (tok == null || tok.length() == 0) {,2,1,0,2,5,0,0,0,0,3,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,673,            if (isIgnoreEmptyTokens()) {,0,0,0,2,5,0,2,0,0,2,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,677,                tok = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,701,            if (removeLen == 0 ||,2,0,0,0,1,0,0,0,0,2,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,706,            start += removeLen;,10,1,0,0,0,0,0,2,0,17,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,711,"            addToken(tokens, """");",6,1,0,1,2,0,8,0,0,17,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,717,        if (delimLen > 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,719,            return start + delimLen;,4,1,0,0,0,1,0,0,0,5,24,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,724,        if (quoteLen > 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,727,"        return readWithQuotes(chars, start, len, workArea, tokens, 0, 0);",0,0,0,1,2,1,12,0,0,12,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,749,        workArea.clear();,2,0,0,1,2,3,4,2,0,11,17,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,750,        int pos = start;,18,0,0,0,0,0,18,2,0,39,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,766,"                    if (isQuote(chars, pos + quoteLen, len, quoteStart, quoteLen)) {",4,1,0,2,5,0,16,0,0,21,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,769,                        pos += (quoteLen * 2);,4,1,0,1,2,0,0,0,0,6,22,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,770,                        trimStart = workArea.size();,2,0,0,1,2,0,4,0,0,7,28,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,775,                    quoting = false;,2,0,0,0,0,0,0,0,0,4,16,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,776,                    pos += quoteLen;,4,0,0,0,0,0,0,0,0,5,16,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,781,                workArea.append(chars[pos++]);,2,0,1,2,4,0,4,0,0,9,30,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,788,"                int delimLen = getDelimiterMatcher().isMatch(chars, pos, start, len);",2,0,0,2,4,0,12,0,0,14,69,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,789,                if (delimLen > 0) {,2,1,0,1,3,0,0,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,792,                    return pos + delimLen;,2,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,796,                if (quoteLen > 0) {,2,1,0,1,3,0,0,0,0,3,19,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,797,"                    if (isQuote(chars, pos, len, quoteStart, quoteLen)) {",0,0,0,2,5,0,12,0,0,12,53,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,798,                        quoting = true;,6,3,0,0,0,0,4,0,0,16,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,799,                        pos += quoteLen;,4,0,0,0,0,0,0,0,0,5,16,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,805,"                int ignoredLen = getIgnoredMatcher().isMatch(chars, pos, start, len);",2,0,0,2,4,0,12,0,0,14,69,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,814,"                int trimmedLen = getTrimmerMatcher().isMatch(chars, pos, start, len);",4,0,0,2,4,3,16,2,0,25,69,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,815,                if (trimmedLen > 0) {,2,1,0,1,3,0,0,0,0,3,21,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,822,                workArea.append(chars[pos++]);,4,0,1,2,4,0,4,0,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,829,        return -1;,2,0,0,0,0,1,4,2,0,9,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,860,        return this.delimMatcher;,2,0,0,0,0,1,0,0,0,2,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,877,        return this;,2,0,0,0,0,3,0,4,0,11,12,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,912,        return quoteMatcher;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,925,        if (quote != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,926,            this.quoteMatcher = quote;,4,0,0,0,0,0,12,0,0,17,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,928,        return this;,6,1,0,0,0,1,4,0,0,12,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,956,        return ignoredMatcher;,2,0,0,0,0,1,0,0,0,2,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,969,        if (ignored != null) {,2,1,0,1,3,0,0,0,0,3,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,970,            this.ignoredMatcher = ignored;,4,0,0,0,0,0,0,0,0,5,30,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,985,        return setIgnoredMatcher(StrMatcher.charMatcher(ignored));,4,2,0,2,4,1,8,0,0,14,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1000,        return trimmerMatcher;,10,6,0,0,0,1,0,0,0,16,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1014,            this.trimmerMatcher = trimmer;,12,1,0,0,0,0,4,0,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1027,        return this.emptyAsNull;,2,0,0,0,0,1,0,0,0,2,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1038,        this.emptyAsNull = emptyAsNull;,4,0,0,0,0,0,0,0,0,5,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1039,        return this;,4,1,0,0,0,2,0,0,0,6,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1050,        return ignoreEmptyTokens;,4,0,1,0,0,1,0,2,0,10,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1061,        this.ignoreEmptyTokens = ignoreEmptyTokens;,4,0,0,0,0,0,0,0,0,5,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1072,        if (chars == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1075,        return new String(chars);,12,1,0,1,2,1,0,2,0,16,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1088,            return cloneReset();,0,0,0,1,2,1,2,0,0,2,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1089,        } catch (CloneNotSupportedException ex) {,2,0,0,1,4,0,0,2,0,4,41,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1102,        StrTokenizer cloned = (StrTokenizer) super.clone();,4,0,0,2,4,0,0,4,0,8,51,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1103,        if (cloned.chars != null) {,14,2,0,1,3,0,0,0,0,17,27,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1107,        return cloned;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1117,        if (tokens == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,1120,"            return ""StrTokenizer"" + getTokenList();",0,1,0,1,2,1,2,0,0,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2212,        StrBuilderTokenizer() {,4,1,0,1,3,0,0,0,0,5,23,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2219,"                return super.tokenize(StrBuilder.this.buffer, 0, StrBuilder.this.size());",8,0,0,2,4,1,2,0,0,10,73,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2221,"                return super.tokenize(chars, offset, count);",8,0,0,1,2,1,0,0,0,8,44,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2229,                return StrBuilder.this.toString();,6,0,0,1,2,1,12,0,0,18,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2231,                return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,98,        this(CAPACITY);,2,0,0,1,2,0,0,2,0,5,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,123,            buffer = new char[CAPACITY];,10,5,1,1,2,0,14,0,0,32,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,125,            buffer = new char[str.length() + CAPACITY];,8,2,0,2,4,0,4,0,0,15,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,137,        return newLine;,2,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,147,        this.newLine = newLine;,4,0,0,0,0,0,0,0,0,5,23,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,158,        return nullText;,4,0,0,0,0,1,6,4,0,14,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,168,        if (nullText != null && nullText.length() == 0) {,4,3,0,2,5,0,4,0,0,12,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,169,            nullText = null;,12,3,1,0,0,1,4,0,0,25,16,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,171,        this.nullText = nullText;,4,0,0,0,0,0,0,0,0,5,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,172,        return this;,4,3,0,0,0,1,0,0,0,7,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,182,        return size;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,194,        if (length < 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,195,            throw new StringIndexOutOfBoundsException(length);,6,1,0,1,2,0,0,0,0,7,50,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,197,        if (length < size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,198,            size = length;,10,4,0,0,0,0,8,0,0,23,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,201,            int oldEnd = size;,4,0,0,0,0,0,0,0,0,4,18,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,202,            int newEnd = length;,4,0,0,0,0,0,0,0,0,4,20,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,205,                buffer[i] = '\0';,0,0,1,1,2,0,4,0,0,11,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,208,        return this;,2,0,0,0,0,1,12,0,0,14,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,218,        return buffer.length;,4,0,0,0,0,1,0,0,0,4,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,229,            char[] old = buffer;,4,0,0,1,2,0,0,0,0,4,20,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,230,            buffer = new char[capacity];,2,0,1,1,2,0,0,0,0,5,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,242,        if (buffer.length > length()) {,4,1,0,2,5,0,2,0,0,7,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,243,            char[] old = buffer;,6,0,0,1,2,0,0,0,0,6,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,244,            buffer = new char[length()];,4,1,0,2,4,0,2,0,0,8,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,260,        return size;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,287,        size = 0;,2,0,0,0,0,0,0,0,0,3,9,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,302,        if (index < 0 || index >= length()) {,4,3,0,2,5,0,2,0,0,9,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,303,            throw new StringIndexOutOfBoundsException(index);,2,0,0,1,2,0,0,2,0,4,49,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,305,        return buffer[index];,8,1,0,1,2,1,0,0,0,10,21,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,320,            throw new StringIndexOutOfBoundsException(index);,10,1,0,1,2,0,4,2,0,18,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,322,        buffer[index] = ch;,2,0,1,1,2,0,0,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,336,        if (index < 0 || index >= size) {,6,3,0,1,3,0,0,0,0,9,33,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,351,            return ArrayUtils.EMPTY_CHAR_ARRAY;,2,0,0,0,0,1,0,0,0,2,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,353,        char chars[] = new char[size];,2,0,1,2,4,0,0,0,0,4,30,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,355,        return chars;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,370,        int len = endIndex - startIndex;,2,0,0,0,0,0,6,0,0,10,32,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,374,        char chars[] = new char[len];,2,0,1,2,4,0,0,0,0,4,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,375,"        System.arraycopy(buffer, startIndex, chars, 0, len);",0,0,0,1,2,0,20,2,0,22,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,376,        return chars;,2,1,0,0,0,1,6,0,0,10,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,387,        if (destination == null || destination.length < len) {,8,3,0,1,3,0,0,0,0,11,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,388,            destination = new char[len];,2,0,1,1,2,0,0,0,0,5,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,405,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,409,            throw new StringIndexOutOfBoundsException(endIndex);,2,0,0,1,2,0,0,2,0,4,52,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,411,        if (startIndex > endIndex) {,4,1,0,1,3,0,0,0,0,5,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,429,            append(SystemUtils.LINE_SEPARATOR);,4,0,0,1,2,0,2,0,0,6,35,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,430,            return this;,4,0,0,0,0,1,0,0,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,432,        return append(newLine);,2,0,0,1,2,1,10,0,0,12,23,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,441,        if (nullText == null)  {,4,1,0,1,3,0,0,0,0,5,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,444,        return append(nullText);,2,0,0,1,2,1,4,0,0,7,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,455,        if (obj == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,469,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,473,        if (strLen > 0) {,2,0,0,1,3,0,0,0,0,2,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,475,            ensureCapacity(len + strLen);,4,1,0,1,2,0,10,0,0,15,29,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,477,            size += strLen;,4,0,0,0,0,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,492,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,495,        if (startIndex < 0 || startIndex > str.length()) {,2,0,0,2,5,0,0,0,0,2,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,498,        if (length < 0 || (startIndex + length) > str.length()) {,6,4,0,3,7,0,4,0,0,14,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,501,        if (length > 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,502,            int len = length();,2,0,0,1,2,0,2,0,0,4,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,504,"            str.getChars(startIndex, startIndex + length, buffer, len);",4,1,0,1,2,0,0,0,0,5,59,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,505,            size += length;,0,0,0,0,0,0,8,4,0,12,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,518,        if (str == null) {,4,2,1,1,3,0,6,0,0,16,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,522,        if (strLen > 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,523,            int len = length();,2,0,0,1,2,0,0,0,0,2,19,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,524,            ensureCapacity(len + strLen);,4,1,0,1,2,0,2,0,0,7,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,526,            size += strLen;,4,0,0,0,0,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,541,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,544,        if (startIndex < 0 || startIndex > str.length()) {,4,3,0,2,5,0,4,0,0,11,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,547,        if (length < 0 || (startIndex + length) > str.length()) {,6,4,0,3,7,0,4,0,0,14,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,554,            size += length;,4,0,0,0,0,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,570,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,571,        if (strLen > 0) {,14,4,0,1,3,0,10,0,0,29,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,574,"            System.arraycopy(str.buffer, 0, buffer, len, strLen);",4,0,0,1,2,0,10,0,0,14,53,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,590,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,591,            return appendNull();,2,1,0,1,2,1,2,0,0,5,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,593,        if (startIndex < 0 || startIndex > str.length()) {,6,3,0,2,5,0,4,0,0,13,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,597,"            throw new StringIndexOutOfBoundsException(""length must be valid"");",2,0,0,1,2,0,0,2,0,5,66,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,599,        if (length > 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,600,            int len = length();,2,0,0,1,2,0,2,0,0,4,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,601,            ensureCapacity(len + length);,2,1,0,1,2,0,0,0,0,3,29,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,602,"            str.getChars(startIndex, startIndex + length, buffer, len);",6,1,0,1,2,0,10,0,0,17,59,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,603,            size += length;,2,0,0,0,0,0,0,0,0,3,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,605,        return this;,2,0,0,0,0,1,4,2,0,8,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,619,        int strLen = chars.length;,6,0,0,0,0,0,0,2,0,9,26,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,620,        if (strLen > 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,622,            ensureCapacity(len + strLen);,4,1,0,1,2,0,2,0,0,7,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,624,            size += strLen;,4,0,0,0,0,0,8,0,0,13,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,642,        if (startIndex < 0 || startIndex > chars.length) {,8,3,0,1,3,0,0,0,0,11,50,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,643,"            throw new StringIndexOutOfBoundsException(""Invalid startIndex: "" + length);",2,0,0,1,2,0,4,0,0,6,75,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,645,        if (length < 0 || (startIndex + length) > chars.length) {,10,4,0,2,5,0,0,0,0,14,57,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,646,"            throw new StringIndexOutOfBoundsException(""Invalid length: "" + length);",2,1,0,1,2,0,0,2,0,6,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,648,        if (length > 0) {,6,2,0,1,3,0,0,0,0,8,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,649,            int len = length();,4,0,0,1,2,0,12,0,0,16,19,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,651,"            System.arraycopy(chars, startIndex, buffer, len, length);",0,0,0,1,2,0,14,0,0,14,57,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,652,            size += length;,4,0,0,0,0,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,664,        if (value) {,2,0,0,1,3,0,0,0,0,2,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,668,            buffer[size++] = 'u';,2,0,1,1,2,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,671,            ensureCapacity(size + 5);,4,1,0,1,2,0,2,0,0,7,25,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,672,            buffer[size++] = 'f';,12,4,0,1,2,0,0,0,0,16,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,673,            buffer[size++] = 'a';,2,0,1,1,2,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,675,            buffer[size++] = 's';,2,0,1,1,2,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,676,            buffer[size++] = 'e';,2,0,1,1,2,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,688,        int len = length();,2,0,0,1,2,0,2,0,0,4,19,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,690,        buffer[size++] = ch;,4,0,1,1,2,0,8,4,0,20,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,701,        return append(String.valueOf(value));,4,1,0,2,4,1,0,0,0,5,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,721,        return append(String.valueOf(value));,4,0,0,2,4,1,8,0,0,12,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,731,        return append(String.valueOf(value));,2,0,1,2,4,1,0,0,0,6,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,746,        if (array != null && array.length > 0) {,6,3,0,1,3,0,0,0,0,9,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,748,            append(array[0]);,0,0,1,2,4,0,2,0,0,4,17,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,749,            for (int i = 1; i < array.length; i++) {,10,1,0,1,3,0,6,0,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,750,                append(separator);,2,0,0,1,2,1,8,0,0,11,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,751,                append(array[i]);,0,0,1,2,4,0,2,0,0,6,17,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,771,            while (it.hasNext()) {,4,1,1,2,5,0,4,0,0,15,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,772,                append(it.next());,2,1,0,2,4,0,6,0,0,9,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,792,        if (it != null) {,4,1,0,1,3,0,0,0,0,5,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,794,            while (it.hasNext()) {,0,0,0,2,5,0,4,0,0,4,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,795,                append(it.next());,0,0,0,2,4,0,6,0,0,6,18,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,796,                if (it.hasNext()) {,2,1,0,2,5,0,4,0,0,7,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,813,        if (length >= 0) {,4,1,0,1,3,0,0,0,0,6,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,814,            ensureCapacity(size + length);,4,1,0,1,2,0,2,0,0,7,30,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,815,            for (int i = 0; i < length; i++) {,8,1,0,1,3,0,2,0,0,12,34,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,816,                buffer[size++] = padChar;,4,0,1,1,2,0,0,0,0,8,25,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,819,        return this;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,835,        if (width > 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,836,            ensureCapacity(size + width);,4,1,0,1,2,0,2,0,0,7,29,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,838,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,839,            if (strLen >= width) {,6,2,0,1,3,0,16,0,0,24,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,842,                int padLen = width - strLen;,6,1,0,0,0,0,0,0,0,7,28,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,843,                for (int i = 0; i < padLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,844,                    buffer[size + i] = padChar;,6,1,1,1,2,0,0,0,0,10,27,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,848,            size += width;,6,0,0,0,0,0,12,2,0,22,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,864,"        return appendFixedWidthPadLeft(String.valueOf(value), width, padChar);",2,1,1,2,4,1,0,0,0,7,70,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,886,                int padLen = width - strLen;,8,1,0,0,0,0,0,0,0,10,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,887,"                str.getChars(0, strLen, buffer, size);",0,0,1,1,2,0,10,0,0,14,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,888,                for (int i = 0; i < padLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,889,                    buffer[size + strLen + i] = padChar;,8,1,1,1,2,0,0,0,0,12,36,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,892,            size += width;,4,0,0,0,0,0,0,0,0,5,14,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,908,"        return appendFixedWidthPadRight(String.valueOf(value), width, padChar);",8,1,0,2,4,1,12,0,0,23,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,922,        if (obj == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,923,"            return insert(index, nullText);",0,0,0,1,2,1,6,0,0,7,31,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,925,"        return insert(index, obj.toString());",2,0,0,2,4,1,14,0,0,17,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,939,        if (str == null) {,2,0,0,1,3,0,0,0,0,4,18,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,944,            int newSize = size + strLen;,6,1,0,0,0,0,10,0,0,17,28,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,945,            ensureCapacity(newSize);,6,1,0,1,2,0,4,0,0,11,24,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,946,"            System.arraycopy(buffer, index, buffer, index + strLen, size - index);",14,3,0,1,2,0,10,0,0,27,70,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,947,            size = newSize;,4,0,0,0,0,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,950,        return this;,0,0,0,0,0,1,12,0,0,13,12,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,964,        if (chars == null) {,8,4,1,1,3,0,0,0,0,20,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,965,"            return insert(index, nullText);",0,0,0,1,2,1,16,2,0,19,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,967,        int len = chars.length;,6,0,0,0,0,0,0,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,969,            ensureCapacity(size + len);,6,1,0,1,2,0,2,0,0,11,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,970,"            System.arraycopy(buffer, index, buffer, index + len, size - index);",10,2,0,1,2,0,16,0,0,28,67,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,972,            size += len;,10,1,0,0,0,0,0,0,0,13,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,974,        return this;,2,0,0,0,0,1,0,0,0,4,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,990,        if (chars == null) {,16,5,0,1,3,0,0,0,0,22,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,993,        if (offset < 0 || offset > chars.length) {,8,3,0,1,3,0,0,0,0,11,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,994,"            throw new StringIndexOutOfBoundsException(""Invalid offset: "" + offset);",2,1,0,1,2,0,0,2,0,6,71,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,997,"            throw new StringIndexOutOfBoundsException(""Invalid length: "" + length);",8,1,0,1,2,0,0,6,0,16,71,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1000,            ensureCapacity(size + length);,10,1,0,1,2,0,6,0,0,18,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1003,            size += length;,4,0,0,0,0,0,0,0,0,5,15,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1005,        return this;,8,4,0,0,0,1,8,0,0,22,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1018,        if (value) {,6,0,0,1,3,0,0,0,0,7,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1020,"            System.arraycopy(buffer, index, buffer, index + 4, size - index);",2,1,0,1,2,0,0,0,0,3,65,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1021,            buffer[index++] = 't';,2,0,1,1,2,0,0,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1024,            buffer[index] = 'e';,0,0,1,1,2,0,0,0,0,6,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1025,            size += 4;,2,0,0,0,0,0,0,0,0,3,10,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1027,            ensureCapacity(size + 5);,2,1,0,1,2,0,2,0,0,5,25,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1029,            buffer[index++] = 'f';,4,0,1,1,2,0,0,0,0,9,22,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1030,            buffer[index++] = 'a';,2,0,1,1,2,0,0,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1031,            buffer[index++] = 'l';,2,0,1,1,2,0,0,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1032,            buffer[index++] = 's';,4,0,1,1,2,0,0,0,0,9,22,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1033,            buffer[index] = 'e';,2,0,1,1,2,0,0,0,0,8,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1049,        ensureCapacity(size + 1);,2,1,0,1,2,0,8,0,0,11,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1051,        buffer[index] = value;,2,0,1,1,2,0,0,0,0,7,22,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1052,        size++;,2,0,0,0,0,0,0,0,0,3,7,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1053,        return this;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",6,1,0,1,2,1,18,0,0,26,72,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1115,        size -= len;,4,0,0,0,0,0,0,0,0,5,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1130,        if (len > 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1144,        for (int i = 0; i < size; i++) {,8,1,0,1,3,0,0,0,0,10,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1146,                int start = i;,4,2,1,0,0,0,6,0,0,16,14,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1149,                        break;,0,0,0,0,0,0,8,2,0,10,6,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1157,        return this;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1167,        for (int i = 0; i < size; i++) {,8,1,0,1,3,0,0,0,0,10,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1169,"                deleteImpl(i, i + 1, 1);",2,1,0,1,2,0,4,0,0,7,24,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1173,        return this;,2,0,0,0,0,1,0,0,0,2,12,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1184,        int len = (str == null ? 0 : str.length());,4,1,0,2,4,0,4,0,0,9,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1185,        if (len > 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1186,"            int index = indexOf(str, 0);",2,0,0,1,2,0,4,0,0,6,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1188,"                deleteImpl(index, index + len, len);",4,1,0,1,2,0,6,0,0,11,36,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1189,"                index = indexOf(str, index);",2,0,0,1,2,0,6,0,0,9,28,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1192,        return this;,2,1,0,0,0,1,0,0,0,3,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1202,        int len = (str == null ? 0 : str.length());,8,1,0,2,4,0,8,0,0,18,43,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1204,"            int index = indexOf(str, 0);",2,0,0,1,2,0,4,0,0,6,28,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1206,"                deleteImpl(index, index + len, len);",20,3,0,1,2,0,6,0,0,31,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1238,"        return replace(matcher, null, 0, size, 1);",2,0,0,1,2,1,0,0,0,4,42,15,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1256,"            System.arraycopy(buffer, endIndex, buffer, startIndex + insertLen, size - endIndex);",8,2,0,1,2,0,10,0,0,20,84,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1259,        if (insertLen > 0) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1260,"            insertStr.getChars(0, insertLen, buffer, startIndex);",2,0,0,1,2,0,10,0,0,13,53,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1276,"        endIndex = validateRange(startIndex, endIndex);",2,0,0,1,2,0,6,0,0,9,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1277,        int insertLen = (replaceStr == null ? 0 : replaceStr.length());,4,1,0,2,4,0,4,0,0,9,63,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1278,"        replaceImpl(startIndex, endIndex, endIndex - startIndex, replaceStr, insertLen);",2,0,0,1,2,0,0,0,0,2,80,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1293,            for (int i = 0; i < size; i++) {,8,1,0,1,3,0,0,0,0,10,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1295,                    buffer[i] = replace;,2,0,1,1,2,0,0,0,0,7,20,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1299,        return this;,10,2,0,0,0,1,14,0,0,26,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1311,        if (search != replace) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1313,                if (buffer[i] == search) {,2,1,1,2,5,0,0,0,0,7,26,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1314,                    buffer[i] = replace;,2,0,1,1,2,0,0,0,0,7,20,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1315,                    break;,4,3,0,0,0,0,0,0,0,7,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1331,        int searchLen = (searchStr == null ? 0 : searchStr.length());,4,1,0,2,4,0,4,0,0,9,61,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1332,        if (searchLen > 0) {,16,4,0,1,3,0,4,0,0,25,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1335,            while (index >= 0) {,2,1,0,1,3,0,0,0,0,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1336,"                replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",4,1,0,1,2,0,10,0,0,15,73,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1337,"                index = indexOf(searchStr, index + replaceLen);",6,1,0,1,2,0,4,0,0,12,47,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1353,"            int index = indexOf(searchStr, 0);",2,0,0,1,2,0,4,0,0,6,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1355,                int replaceLen = (replaceStr == null ? 0 : replaceStr.length());,6,1,0,2,4,0,4,0,0,11,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1356,"                replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",14,2,0,1,2,1,10,0,0,27,73,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1390,"        return replace(matcher, replaceStr, 0, size, 1);",4,1,0,1,2,1,0,0,0,5,48,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1413,"        endIndex = validateRange(startIndex, endIndex);",2,0,0,1,2,0,6,0,0,9,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1414,"        return replaceImpl(matcher, replaceStr, startIndex, endIndex, replaceCount);",14,1,0,1,2,1,12,0,0,28,76,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1435,        if (matcher == null || size == 0) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1436,            return this;,8,1,0,0,0,1,0,0,0,10,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1439,        char[] buf = buffer;,4,0,0,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1440,        for (int i = from; i < to && replaceCount != 0; i++) {,12,3,0,1,3,0,0,0,0,16,54,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1441,"            int removeLen = matcher.isMatch(buf, i, from, to);",2,0,0,1,2,0,12,0,0,14,50,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1442,            if (removeLen > 0) {,2,1,0,1,3,0,0,0,0,3,20,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1443,"                replaceImpl(i, i + removeLen, removeLen, replaceStr, replaceLen);",4,1,0,1,2,0,10,0,0,15,65,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1444,                to = to - removeLen + replaceLen;,12,3,0,0,0,0,2,0,0,18,33,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1446,                if (replaceCount > 0) {,2,1,0,1,3,0,0,0,0,3,23,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1447,                    replaceCount--;,2,0,0,0,0,0,0,0,0,3,15,10,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1465,        int half = size / 2;,4,3,0,0,0,0,0,0,0,7,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1470,            buf[rightIdx] = swap;,2,0,1,1,2,0,0,0,0,7,21,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1483,        if (size == 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1486,        int len = size;,4,0,0,0,0,0,0,0,0,4,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1487,        char[] buf = buffer;,4,0,0,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1490,            pos++;,6,0,0,0,0,0,0,0,0,8,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1492,        while (pos < len && buf[len - 1] <= ' ') {,6,4,1,2,5,0,0,0,0,13,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1495,        if (len < size) {,4,1,0,1,3,0,0,0,0,5,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1498,        if (pos > 0) {,2,1,0,1,3,0,0,0,0,3,14,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1499,"            delete(0, pos);",8,1,0,1,2,0,4,0,0,14,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1514,        if (str == null) {,6,3,1,1,3,0,0,0,0,13,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1515,            return false;,16,6,0,0,0,1,8,2,0,33,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1517,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1524,        for (int i = 0; i < len; i++) {,8,1,0,1,3,0,0,0,0,10,31,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1529,        return true;,2,2,0,0,0,1,8,0,0,12,12,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1541,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1544,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1545,        if (len == 0) {,6,1,0,1,3,0,0,0,0,8,15,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1548,        if (len > size) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1551,        int pos = size - len;,6,1,0,0,0,0,0,0,0,7,21,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1552,"        for (int i = 0; i < len; i++,pos++) {",10,1,0,1,3,0,0,0,0,13,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1554,                return false;,4,0,0,0,0,1,6,0,0,11,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1569,"        return substring(start, size);",2,0,0,1,2,1,6,0,0,9,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1604,"            return """";",2,0,0,0,0,1,0,0,0,4,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1606,"            return new String(buffer, 0, size);",4,0,0,1,2,1,0,2,0,6,35,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1608,"            return new String(buffer, 0, length);",4,0,0,1,2,1,0,2,0,6,37,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1625,        if (length <= 0) {,4,1,0,1,3,0,0,0,0,5,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1630,"            return new String(buffer, size - length, length);",10,2,0,1,2,1,4,2,0,18,49,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1651,        if (index < 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1654,        if (length <= 0 || index >= size) {,6,3,0,1,3,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1657,        if (size <= index + length) {,6,2,0,1,3,0,0,0,0,8,29,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1658,"            return new String(buffer, index, size - index);",8,1,0,1,2,1,0,2,0,11,47,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1660,"            return new String(buffer, index, length);",6,0,0,1,2,1,0,2,0,8,41,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1678,        return false;,10,1,0,0,0,1,0,0,0,12,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1688,"        return indexOf(str, 0) >= 0;",6,1,0,1,2,1,10,2,0,19,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1703,"        return indexOf(matcher, 0) >= 0;",2,1,0,1,2,1,4,0,0,7,32,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1725,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1727,            return -1;,2,0,0,0,0,1,0,0,0,3,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1729,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1730,        for (int i = startIndex; i < size; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1732,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,2,0,0,1,2,0,0,0,0,3,47,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1766,        if (strLen == 1) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1767,"            return indexOf(str.charAt(0), startIndex);",2,1,0,2,4,1,8,0,0,11,42,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1770,            return startIndex;,2,0,0,0,0,1,0,0,0,2,18,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1772,        if (strLen > size) {,8,1,0,1,3,0,6,0,0,15,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1778,        for (int i = startIndex; i < len; i++) {,12,1,0,1,3,0,0,0,0,15,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1779,            for (int j = 0; j < strLen; j++) {,18,2,0,1,3,0,0,0,0,22,34,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1781,                    continue outer;,2,1,0,0,0,0,0,0,0,3,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1784,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1816,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1820,        int len = size;,4,0,0,0,0,0,0,0,0,4,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1821,        char[] buf = buffer;,4,0,0,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1822,        for (int i = startIndex; i < len; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1823,"            if (matcher.isMatch(buf, i, startIndex, len) > 0) {",0,1,0,2,5,0,12,0,0,13,51,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1838,"        return lastIndexOf(ch, size - 1);",2,1,0,1,2,1,4,0,0,7,33,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1850,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1851,            return -1;,2,0,0,0,0,2,6,0,0,10,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1853,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1854,            if (buffer[i] == ch) {,2,1,1,2,5,0,0,0,0,7,22,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1855,                return i;,2,0,0,0,0,1,0,0,0,2,9,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1870,"        return lastIndexOf(str, size - 1);",4,2,0,1,2,1,4,0,0,10,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1884,        startIndex = (startIndex >= size ? size - 1 : startIndex);,14,3,0,1,2,0,0,0,0,19,58,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1885,        if (str == null || startIndex < 0) {,6,3,1,1,3,0,6,0,0,19,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1886,            return -1;,0,4,1,0,0,1,0,0,0,13,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1889,        if (strLen > 0 && strLen <= size) {,6,3,0,1,3,0,0,0,0,9,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1890,            if (strLen == 1) {,8,1,0,1,3,0,0,0,0,10,18,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1891,"                return lastIndexOf(str.charAt(0), startIndex);",0,0,0,2,4,1,8,0,0,8,46,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1896,                for (int j = 0; j < strLen; j++) {,14,1,0,1,3,1,0,0,0,17,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1897,                    if (str.charAt(j) != buffer[i + j]) {,4,2,1,3,7,0,6,0,0,14,37,11,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1898,                        continue outer;,2,0,0,0,0,0,0,0,0,2,15,13,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1901,                return i;,2,0,0,0,0,1,0,0,0,2,9,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1904,        } else if (strLen == 0) {,2,1,0,1,4,0,0,0,0,3,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1905,            return startIndex;,4,0,0,0,0,1,0,0,0,4,18,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1938,        if (matcher == null || startIndex < 0) {,10,3,0,1,3,1,0,4,0,18,40,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1941,        char[] buf = buffer;,4,0,0,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1942,        int endIndex = startIndex + 1;,6,1,1,0,0,0,0,2,0,13,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1943,        for (int i = startIndex; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1944,"            if (matcher.isMatch(buf, i, 0, endIndex) > 0) {",4,1,0,2,5,0,16,0,0,21,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1945,                return i;,2,1,0,0,0,1,12,0,0,15,9,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,1948,        return -1;,2,1,0,0,0,1,0,0,0,4,10,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2009,        return new StrBuilderReader();,0,1,0,1,2,1,8,2,0,11,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2034,        return new StrBuilderWriter();,4,0,0,1,2,1,6,2,0,12,30,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2076,        if (this == other) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2079,        if (this.size != other.size) {,6,1,0,1,3,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2083,        char otherBuf[] = other.buffer;,6,0,0,1,2,0,0,0,0,6,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2085,            char c1 = thisBuf[i];,12,1,1,1,2,0,6,0,0,26,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2086,            char c2 = otherBuf[i];,2,0,1,1,2,0,0,0,0,6,22,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2102,        if (this == other) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2105,        if (this.size != other.size) {,6,1,0,1,3,0,0,0,0,7,30,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2108,        char thisBuf[] = this.buffer;,4,0,0,1,2,0,0,0,0,4,29,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2110,        for (int i = size - 1; i >= 0; i--) {,10,2,0,1,3,0,0,0,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2115,        return true;,2,0,0,0,0,1,6,0,0,10,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2127,            return equals((StrBuilder) obj);,4,1,0,2,4,1,2,2,0,9,32,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2129,        return false;,2,0,0,0,0,1,0,0,0,2,13,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2138,        char buf[] = buffer;,4,0,0,1,2,0,0,0,0,4,20,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2139,        int hash = 0;,6,1,0,0,0,0,0,0,0,8,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2141,            hash = 31 * hash + buf[i];,4,2,1,1,2,0,0,0,0,11,26,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2143,        return hash;,4,1,0,0,0,1,0,0,0,5,12,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2157,"        return new String(buffer, 0, size);",8,1,0,1,2,1,0,2,0,11,35,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2167,"        return new StringBuffer(size).append(buffer, 0, size);",2,0,0,2,4,1,6,2,0,10,54,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2181,        if (startIndex < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2182,            throw new StringIndexOutOfBoundsException(startIndex);,2,0,0,1,2,0,0,2,0,4,54,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2190,        return endIndex;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2200,        if (index < 0 || index > size) {,4,1,0,1,3,0,0,0,0,5,32,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2201,            throw new StringIndexOutOfBoundsException(index);,2,0,1,1,2,0,4,2,0,12,49,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2331,        },0,1,0,0,1,0,0,2,0,4,1,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2340,            StrBuilder.this.append((char) c);,4,0,0,2,4,0,2,0,0,6,33,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2345,            StrBuilder.this.append(cbuf);,6,1,0,1,2,0,4,0,0,11,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2346,        },2,0,0,0,1,0,0,0,0,3,1,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2350,"            StrBuilder.this.append(cbuf, off, len);",2,0,0,1,2,0,8,0,0,10,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2247,        StrBuilderReader() {,2,0,0,1,3,0,0,0,0,2,20,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2258,            if (ready() == false) {,0,1,0,2,5,0,2,0,0,4,23,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2266,            if (off < 0 || len < 0 || off > b.length ||,10,7,0,0,1,0,0,0,0,17,43,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2268,                throw new IndexOutOfBoundsException();,0,0,0,1,2,0,0,2,0,2,38,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2270,            if (len == 0) {,10,1,0,1,3,0,0,0,0,11,15,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2273,            if (pos >= StrBuilder.this.size()) {,2,0,0,2,5,0,4,0,0,6,36,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2279,"            StrBuilder.this.getChars(pos, pos + len, b, off);",6,1,0,1,2,0,8,0,0,15,49,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2280,            pos += len;,4,0,0,0,0,0,0,0,0,5,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2286,            if (pos + n > StrBuilder.this.size()) {,6,2,0,2,5,0,2,0,0,10,39,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2287,                n = StrBuilder.this.size() - pos;,6,1,0,1,2,0,2,0,0,10,33,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2289,            if (n < 0) {,4,1,0,1,3,0,0,0,0,5,12,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2292,            pos += n;,4,0,0,0,0,0,0,0,0,5,9,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2293,            return n;,4,1,1,0,0,1,2,0,0,12,9,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2303,            return true;,2,0,0,0,0,1,0,2,0,4,12,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,2308,            mark = pos;,4,0,0,0,0,0,0,0,0,5,11,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1672,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1674,            if (thisBuf[i] == ch) {,2,1,1,2,5,0,0,0,0,7,23,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1675,                return true;,2,0,0,0,0,1,4,4,0,11,12,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1205,            if (index >= 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1765,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1769,        if (strLen == 0) {,4,1,0,1,3,3,2,2,0,13,18,1,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1772,        if (strLen > size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1775,        char[] thisBuf = buffer;,2,0,0,1,2,3,0,0,0,5,24,2,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1778,        for (int i = startIndex; i < len; i++) {,10,1,0,1,3,0,0,0,0,12,40,5,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1779,            for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,0,0,0,10,34,7,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1780,                if (str.charAt(j) != thisBuf[i + j]) {,4,2,1,3,7,0,6,0,0,14,38,9,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1784,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.11111,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",4,1,0,1,2,0,12,0,0,17,72,5,0.06667,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1115,        size -= len;,4,0,0,0,0,0,0,0,0,5,12,4,0.06667,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1116,    },4,0,0,0,1,0,0,2,0,6,1,5,0.06667,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,125,            buffer = new char[str.length() + CAPACITY];,0,0,0,2,4,0,0,0,0,1,43,8,0.01429,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1765,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1766,        if (strLen == 1) {,8,2,0,1,3,0,0,0,0,12,18,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1769,        if (strLen == 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1772,        if (strLen > size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1775,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,8,1,0,0,0,0,0,0,0,9,34,5,0.57143,1,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1778,        for (int i = startIndex; i < len; i++) {,10,1,0,1,3,0,0,0,0,12,40,5,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1779,            for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,0,0,0,10,34,7,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1780,                if (str.charAt(j) != thisBuf[i + j]) {,4,2,1,3,7,0,6,0,0,14,38,9,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1781,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1784,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.57143,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1184,        int len = (str == null ? 0 : str.length());,4,1,0,2,4,0,4,0,0,9,43,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1185,        if (len > 0) {,12,2,0,1,3,3,0,4,0,22,14,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1186,"            int index = indexOf(str, 0);",2,0,0,1,2,0,4,0,0,6,28,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1189,"                index = indexOf(str, index);",2,0,0,1,2,0,6,0,0,9,28,8,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1747,"        return indexOf(str, 0);",4,1,0,1,2,1,8,0,0,14,23,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",4,1,0,1,2,0,12,0,0,17,72,5,0.30769,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,122,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.05882,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,125,            buffer = new char[str.length() + CAPACITY];,4,1,0,2,4,0,4,0,0,10,43,6,0.05882,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,474,            int len = length();,2,0,0,1,2,0,2,0,0,4,19,7,0.03571,0,0
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,476,"            str.getChars(0, strLen, buffer, len);",8,1,0,1,2,0,10,0,0,19,37,3,0.03571,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,840,                    if (entityName.length() == 1) {,0,1,0,2,5,0,4,0,0,5,31,11,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,843,                        char charAt1 = entityName.charAt(1);,2,0,0,1,2,0,14,0,0,16,36,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,845,                            if (charAt1 == 'x' || charAt1=='X') {,4,3,0,1,3,0,0,0,0,9,37,15,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,848,                                entityValue = Integer.parseInt(entityName.substring(1));,4,1,0,2,4,0,8,0,0,14,56,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,852,                        },4,1,0,0,1,0,6,0,0,12,1,8,0.5,1,1
defect4j,lang,org/apache/commons/lang/Entities,62,862,                    buf.append((char) (entityValue));,2,0,0,3,6,0,4,0,0,6,33,11,0.25,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,819,        StringBuffer buf = new StringBuffer(str.length());,6,0,0,2,4,0,4,4,0,15,50,1,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,821,        for (int i = firstAmp; i < str.length(); ++i) {,8,1,0,2,5,0,4,0,0,14,47,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,822,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,823,            if (ch == '&') {,2,1,0,1,3,0,0,0,0,4,16,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,824,"                int semi = str.indexOf(';', i + 1);",4,1,0,1,2,0,4,0,0,10,35,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,825,                if (semi == -1) {,2,1,0,1,3,0,0,0,0,4,17,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,829,"                int amph = str.indexOf('&', i + 1);",8,3,0,1,2,0,4,0,0,17,35,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,830,                if( amph != -1 && amph < semi ) {,6,3,0,1,3,0,0,0,0,10,33,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,835,"                String entityName = str.substring(i + 1, semi);",2,0,0,1,2,0,0,0,0,2,47,4,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,837,                if (entityName.length() == 0) {,0,1,0,2,5,0,4,0,0,5,31,8,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,839,                } else if (entityName.charAt(0) == '#') {,0,1,0,2,6,0,4,0,0,6,41,9,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,857,                if (entityValue == -1) {,2,1,0,1,3,0,4,0,0,10,24,3,0.2,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,814,        int firstAmp = str.indexOf('&');,2,0,0,1,2,0,4,0,0,7,32,5,0.03704,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,83,"        protected Entry(int hash, int key, Object value, Entry next) {",10,0,0,1,3,1,0,4,0,15,62,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,84,            this.hash = hash;,6,0,0,0,0,0,6,2,0,15,17,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,85,            this.key = key;,8,2,0,0,0,0,0,2,0,13,15,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,87,            this.next = next;,4,0,0,0,0,0,0,0,0,5,17,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,502,    static class LookupEntityMap extends PrimitiveEntityMap {,2,0,0,0,1,1,0,2,0,5,57,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,504,        private int LOOKUP_TABLE_SIZE = 256;,2,0,0,0,0,1,0,0,0,3,36,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,419,    static class PrimitiveEntityMap implements EntityMap {,4,0,0,0,1,3,0,2,0,10,54,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,420,        private Map mapNameToValue = new HashMap();,2,0,0,1,2,1,0,4,0,7,43,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,421,        private IntHashMap mapValueToName = new IntHashMap();,4,0,0,1,2,4,2,6,0,17,53,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,693,    EntityMap map = new Entities.LookupEntityMap();,6,0,0,1,2,0,0,2,0,8,47,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,41,    private static final String[][] BASIC_ARRAY = {,8,3,0,2,5,3,4,4,0,22,47,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,48,    private static final String[][] APOS_ARRAY = {,2,0,0,2,5,3,0,2,0,7,46,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,53,    static final String[][] ISO8859_1_ARRAY = {,2,0,0,2,5,2,0,2,0,6,43,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,154,    static final String[][] HTML40_ARRAY = {,2,0,0,2,5,2,0,2,0,6,40,2,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,366,        XML = new Entities();,4,0,0,1,2,3,0,6,0,14,21,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,372,        HTML32 = new Entities();,2,0,0,1,2,0,0,2,0,5,24,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,391,    },2,0,0,0,1,0,0,0,0,2,1,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,701,        for (int i = 0; i < entityArray.length; ++i) {,12,2,0,1,3,0,0,0,0,15,46,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/Entities,62,714,    },2,0,0,0,1,0,0,2,0,4,1,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,122,        if (initialCapacity < 0) {,2,1,0,1,3,0,0,0,0,3,26,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,128,        if (initialCapacity == 0) {,2,1,0,1,3,0,0,0,0,3,27,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,132,        this.loadFactor = loadFactor;,4,0,0,0,0,0,0,0,0,5,29,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,133,        table = new Entry[initialCapacity];,2,0,1,1,2,0,0,2,0,7,35,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,258,        int oldCapacity = table.length;,6,0,0,0,0,0,0,0,0,6,31,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,262,        Entry newMap[] = new Entry[newCapacity];,2,0,1,2,4,0,0,4,0,8,40,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,264,        threshold = (int) (newCapacity * loadFactor);,14,2,0,2,4,0,0,0,0,18,45,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,265,        table = newMap;,4,0,0,0,0,0,6,0,0,11,15,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,267,        for (int i = oldCapacity; i-- > 0;) {,8,1,0,1,3,0,0,0,0,10,37,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,269,                Entry e = old;,4,0,0,0,0,0,0,2,0,6,14,8,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,270,                old = old.next;,8,0,0,0,0,3,2,0,0,15,15,1,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,272,                int index = (e.hash & 0x7FFFFFFF) % newCapacity;,8,2,0,1,2,0,0,0,0,10,48,9,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,274,                newMap[index] = e;,2,0,1,1,2,0,0,0,0,7,18,8,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,277,    },2,1,0,0,1,0,0,0,0,3,1,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,296,        Entry tab[] = table;,8,2,0,1,2,0,0,0,0,11,20,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,297,        int hash = key;,4,0,0,0,0,0,0,0,0,4,15,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,298,        int index = (hash & 0x7FFFFFFF) % tab.length;,8,2,0,1,2,0,0,0,0,10,45,5,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,300,            if (e.hash == hash) {,6,1,0,1,3,0,0,0,0,7,21,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,309,            rehash();,0,0,0,1,2,0,2,0,0,2,9,7,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,311,            tab = table;,4,0,0,0,0,0,0,0,0,5,12,6,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,316,"        Entry e = new Entry(hash, key, value, tab[index]);",12,0,1,2,4,0,0,4,0,21,50,3,0.02439,0,0
defect4j,lang,org/apache/commons/lang/IntHashMap,62,317,        tab[index] = e;,2,0,1,1,2,0,0,0,0,7,15,4,0.02439,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,247,"        return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());",0,0,0,2,4,1,12,0,0,13,81,5,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,331,                months += 12 * years;,6,4,0,0,0,0,8,0,0,21,21,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,332,                years = 0;,2,0,0,0,0,0,0,0,0,3,10,8,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,344,            hours += 24 * days;,4,1,0,0,0,0,0,0,0,6,19,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,345,            days = 0;,4,0,0,0,0,0,0,0,0,5,9,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,348,            minutes += 60 * hours;,4,1,0,0,0,0,0,0,0,6,22,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,349,            hours = 0;,4,0,0,0,0,0,4,4,0,13,10,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,352,            seconds += 60 * minutes;,4,1,0,0,0,0,0,0,0,6,24,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,353,            minutes = 0;,2,0,0,0,0,0,0,0,0,3,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,357,            seconds = 0;,2,0,0,0,0,0,0,0,0,3,12,6,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,265,        long millis = endMillis - startMillis;,10,1,0,0,0,0,4,4,0,20,38,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,266,        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {,0,0,0,1,3,0,0,2,0,2,45,7,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,270,        Token[] tokens = lexx(format);,2,0,0,2,4,0,4,2,0,8,30,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,274,        Calendar start = Calendar.getInstance(timezone);,2,0,0,1,2,0,6,2,0,10,48,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,275,        start.setTime(new Date(startMillis));,4,0,0,2,4,0,10,2,0,18,37,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,276,        Calendar end = Calendar.getInstance(timezone);,2,0,0,1,2,0,6,2,0,10,46,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,277,        end.setTime(new Date(endMillis));,2,0,0,2,4,0,4,2,0,8,33,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,282,        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);,14,2,0,2,4,0,8,0,0,24,68,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,284,        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);,10,1,0,2,4,0,8,0,0,19,77,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,285,        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);,10,1,0,2,4,0,8,0,0,19,65,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,286,        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);,14,4,0,2,4,0,12,0,0,31,62,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,289,        while (milliseconds < 0) {,2,1,0,1,3,0,0,0,0,3,26,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,293,        while (seconds < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,297,        while (minutes < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,301,        while (hours < 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,314,        while (months < 0) {,2,1,0,1,3,0,0,0,0,3,20,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,318,"        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);",6,0,0,1,2,0,8,0,0,15,81,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,320,"        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);",6,0,0,1,2,0,8,0,0,15,66,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,321,"        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);",6,0,0,1,2,0,8,0,0,15,67,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,322,"        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);",6,0,0,1,2,0,8,0,0,15,66,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,324,"        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);",2,0,1,1,2,0,4,2,0,10,60,3,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,339,"        if (!Token.containsTokenWithValue(tokens, M)) {",2,0,0,2,5,3,16,2,0,25,47,1,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,347,"        if (!Token.containsTokenWithValue(tokens, H)) {",2,0,0,2,5,0,8,0,0,11,47,3,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,351,"        if (!Token.containsTokenWithValue(tokens, m)) {",0,0,0,2,5,0,8,0,0,9,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,355,"        if (!Token.containsTokenWithValue(tokens, s)) {",2,1,0,2,5,0,8,0,0,12,47,4,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,360,"        return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);",0,0,0,1,2,1,20,0,0,20,96,5,0.5,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,433,"        end.add( field, -1 * difference );",8,1,0,1,2,3,12,4,0,30,34,1,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,434,        int endValue = end.get(field);,4,0,0,1,2,0,10,0,0,14,30,1,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,435,        int startValue = start.get(field);,2,0,0,1,2,3,2,2,0,10,34,2,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,436,        if (endValue < startValue) {,4,1,0,1,3,0,0,0,0,5,28,4,0.5,1,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,395,"                    buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(months), count, '0') : Integer",2,0,0,2,5,0,18,0,0,21,96,12,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,487,                case 'M'  : value = M; break;,4,0,0,0,0,0,0,0,0,6,29,6,0.2,0,0
defect4j,lang,org/apache/commons/lang/StringUtils,63,3865,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.14286,0,0
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,534,            return false;,4,1,0,0,0,1,0,0,0,6,13,1,0.14286,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,        return iValue - ((ValuedEnum) other).iValue;,6,1,0,2,4,1,0,2,0,9,44,4,0.25,1,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,126,        super(name);,2,0,0,1,2,0,0,0,0,2,12,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,127,        iValue = value;,4,0,0,0,0,0,0,0,0,5,15,4,0.05263,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,314,        iName = name;,4,0,0,0,0,0,0,0,0,5,13,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,315,        iHashCode = 7 + getEnumClass().hashCode() + 3 * name.hashCode();,2,2,0,3,6,0,8,0,0,13,64,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,317,    },2,1,0,0,1,0,0,0,0,3,1,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,339,                ok = true;,6,1,0,0,0,0,0,0,0,9,10,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,350,        if (entry == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,351,            entry = createEntry(enumClass);,2,0,0,1,2,0,6,2,0,10,31,12,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,354,        if (entry.map.containsKey(name)) {,4,0,0,2,5,0,4,0,0,8,34,5,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,357,"        entry.map.put(name, this);",4,0,0,1,2,0,4,0,0,8,26,5,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,358,        entry.list.add(this);,8,0,0,1,2,0,2,0,0,11,21,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,484,        Entry entry = new Entry();,6,1,0,1,2,3,10,2,0,24,26,1,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,485,        Class cls = enumClass.getSuperclass();,2,0,0,1,2,0,4,2,0,8,38,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,486,        while (cls != null && cls != Enum.class && cls != ValuedEnum.class) {,6,5,0,1,3,0,0,4,0,15,69,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,495,        return entry;,2,0,0,0,0,1,0,0,0,2,13,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,297,          super();,4,2,0,1,2,0,8,2,0,16,8,4,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,279,        final Map map = new HashMap();,2,0,0,1,2,1,0,4,0,7,30,3,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,283,        final Map unmodifiableMap = Collections.unmodifiableMap(map);,2,0,0,1,2,1,6,2,0,11,61,3,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,287,        final List list = new ArrayList(25);,2,0,0,1,2,1,0,4,0,7,36,3,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,291,        final List unmodifiableList = Collections.unmodifiableList(list);,2,0,0,1,2,1,6,2,0,11,65,3,0.01587,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,335,        Class cls = getClass();,4,0,0,1,2,0,2,4,0,10,23,3,0.01515,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,338,            if (cls == enumClass) {,4,1,0,1,3,0,0,0,0,5,23,6,0.01515,0,0
defect4j,lang,org/apache/commons/lang/enums/Enum,64,344,        if (ok == false) {,6,1,0,1,3,3,0,2,0,13,18,1,0.01515,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,543,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,549,        return gval.getTime();,2,1,0,1,2,1,4,0,0,7,22,3,1.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,620,        if (val.get(Calendar.YEAR) > 280000000) {,4,1,0,2,5,0,4,0,0,9,41,4,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,642,        for (int i = 0; i < fields.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,644,                if (fields[i][j] == field) {,2,1,1,3,7,0,0,0,0,9,28,8,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,646,                    if (round && roundUp) {,4,1,0,1,3,0,0,0,0,5,23,10,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,663,                    return;,0,0,0,0,0,1,4,0,0,5,7,11,0.25,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,668,            boolean offsetSet = false;,2,0,0,0,0,0,0,0,0,4,26,3,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,670,            switch (field) {,2,0,0,1,3,0,0,0,0,2,16,6,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,700,            if (!offsetSet) {,10,2,0,1,3,0,4,0,0,17,17,3,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,701,                int min = val.getActualMinimum(fields[i][0]);,6,3,1,3,6,0,8,0,0,22,45,3,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,704,                offset = val.get(fields[i][0]) - min;,4,1,1,3,6,0,4,0,0,14,37,8,0.25,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,709,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);",2,1,1,6,12,0,8,0,0,19,54,7,0.25,1,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,44,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");",4,3,0,1,2,3,8,2,0,21,73,1,0.05,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,72,    private static final int[][] fields = {,4,0,0,2,5,3,10,0,0,18,39,1,0.05,1,1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,123,        super();,4,1,0,1,2,2,0,4,0,11,8,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,141,        if (date1 == null || date2 == null) {,4,3,0,1,3,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,144,        Calendar cal1 = Calendar.getInstance();,4,1,0,1,2,0,14,2,0,22,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,165,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,168,        return (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&,2,0,0,2,5,4,0,4,0,10,59,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,186,        if (date1 == null || date2 == null) {,4,3,0,1,3,0,0,0,0,7,37,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,189,        return date1.getTime() == date2.getTime();,2,1,0,2,4,4,8,4,0,18,42,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,204,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,205,"            throw new IllegalArgumentException(""The date must not be null"");",2,0,0,1,2,3,4,6,0,17,64,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,224,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,227,        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&,8,8,0,2,5,1,8,0,0,24,75,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,252,        if (str == null || parsePatterns == null) {,6,3,0,1,3,3,0,4,0,16,43,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,259,            if (i == 0) {,4,2,0,1,3,0,0,0,0,6,13,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,260,                parser = new SimpleDateFormat(parsePatterns[0]);,2,0,0,2,4,0,4,0,0,6,48,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,265,"            Date date = parser.parse(str, pos);",2,0,0,1,2,0,8,2,0,12,35,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,267,                return date;,2,0,0,0,0,1,0,2,0,4,12,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,270,"        throw new ParseException(""Unable to parse the date: "" + str, -1);",2,1,0,1,2,0,0,2,0,7,65,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,284,"        return add(date, Calendar.YEAR, amount);",4,0,0,1,2,1,6,0,0,10,40,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,298,"        return add(date, Calendar.MONTH, amount);",6,1,0,1,2,4,18,2,0,34,41,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,326,"        return add(date, Calendar.DAY_OF_MONTH, amount);",4,0,0,1,2,1,6,0,0,10,48,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,340,"        return add(date, Calendar.HOUR_OF_DAY, amount);",4,0,0,1,2,1,0,0,0,4,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,354,"        return add(date, Calendar.MINUTE, amount);",4,0,0,1,2,1,12,0,0,16,42,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,368,"        return add(date, Calendar.SECOND, amount);",2,0,0,1,2,1,1,0,0,3,42,9,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,382,"        return add(date, Calendar.MILLISECOND, amount);",8,0,0,1,2,1,6,0,0,16,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,400,        Calendar c = Calendar.getInstance();,2,0,0,1,2,0,0,2,0,4,36,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,402,"        c.add(calendarField, amount);",2,0,0,1,2,3,12,0,0,18,29,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,436,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,440,        gval.setTime(date);,10,3,0,1,2,0,22,4,0,40,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,442,        return gval.getTime();,2,0,0,1,2,1,0,0,0,3,22,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,474,        if (date == null) {,6,1,0,1,3,0,0,0,0,9,19,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,479,        return rounded;,2,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,513,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,514,"            throw new IllegalArgumentException(""The date must not be null"");",4,0,0,1,2,1,0,4,0,11,64,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,516,        if (date instanceof Date) {,6,0,0,1,3,3,0,4,0,13,27,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,518,        } else if (date instanceof Calendar) {,4,3,0,1,4,0,4,0,0,12,38,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,519,"            return round((Calendar) date, field).getTime();",2,0,0,3,6,1,14,2,0,18,47,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,521,"            throw new ClassCastException(""Could not round "" + date);",2,1,0,1,2,0,0,2,0,6,56,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,569,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,570,"            throw new IllegalArgumentException(""The date must not be null"");",12,1,0,1,2,0,0,0,0,15,64,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,572,        Calendar truncated = (Calendar) date.clone();,2,0,0,2,4,0,4,4,0,10,45,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,574,        return truncated;,4,1,0,0,0,1,0,0,0,5,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,598,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,602,"            return truncate((Date) date, field);",2,0,0,2,4,1,0,0,0,3,36,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,603,        } else if (date instanceof Calendar) {,2,0,0,1,4,0,0,2,0,4,38,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,647,                        if (field == DateUtils.SEMI_MONTH) {,6,1,0,1,3,0,0,0,0,7,36,12,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,651,                            if (val.get(Calendar.DATE) == 1) {,4,1,0,2,5,0,4,0,0,9,34,14,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,652,"                                val.add(Calendar.DATE, 15);",4,0,0,1,2,0,4,0,0,8,27,17,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,654,"                                val.add(Calendar.DATE, -15);",6,0,0,1,2,3,4,0,0,14,28,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,655,"                                val.add(Calendar.MONTH, 1);",4,1,0,1,2,0,0,0,0,5,27,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,660,"                            val.add(fields[i][0], 1);",0,1,0,3,6,0,6,0,0,7,25,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,676,                        offset = val.get(Calendar.DATE) - 1;,8,3,0,1,2,0,0,0,0,12,36,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,680,                            offset -= 15;,2,0,1,0,0,0,0,4,0,8,13,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,683,                        roundUp = offset > 7;,10,1,1,0,0,3,0,6,0,27,21,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,688,                    if (fields[i][0] == Calendar.HOUR_OF_DAY) {,2,0,0,3,7,0,0,0,0,2,43,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,691,                        offset = val.get(Calendar.HOUR_OF_DAY);,8,0,0,1,2,0,4,0,0,13,39,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,692,                        if (offset >= 12) {,2,0,0,1,3,3,0,4,0,9,19,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,696,                        offsetSet = true;,2,1,0,0,0,0,0,0,0,3,17,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,711,"        throw new IllegalArgumentException(""The field "" + field + "" is not supported"");",2,1,0,1,2,0,4,0,0,7,79,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,744,        Calendar gval = Calendar.getInstance();,8,0,0,1,2,6,6,6,0,27,39,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,746,"        return iterator(gval, rangeStyle);",0,0,1,1,2,1,16,0,0,21,34,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,774,        if (focus == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,775,"            throw new IllegalArgumentException(""The date must not be null"");",8,1,0,1,2,0,8,0,0,17,64,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,779,        int startCutoff = Calendar.SUNDAY;,8,0,0,0,0,1,4,2,0,15,34,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,780,        int endCutoff = Calendar.SATURDAY;,2,0,0,0,0,0,6,0,0,8,34,7,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,787,                end = (Calendar) start.clone();,2,0,0,2,4,0,4,2,0,9,31,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,801,"                start = truncate(focus, Calendar.DATE);",2,1,0,1,2,0,0,2,0,6,39,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,802,"                end = truncate(focus, Calendar.DATE);",8,0,0,1,2,0,4,0,0,13,37,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,803,                switch (rangeStyle) {,2,0,0,1,3,0,4,0,0,6,21,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,809,                        endCutoff = Calendar.SUNDAY;,6,0,0,0,0,0,0,0,0,7,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,810,                        break;,6,1,0,0,0,0,0,0,0,8,6,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,812,                        startCutoff = focus.get(Calendar.DAY_OF_WEEK);,6,0,0,1,2,0,4,0,0,11,46,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,813,                        endCutoff = startCutoff - 1;,4,1,0,0,0,0,0,0,0,6,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,814,                        break;,6,0,0,0,0,0,8,0,0,15,6,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,816,                        startCutoff = focus.get(Calendar.DAY_OF_WEEK) - 3;,12,0,0,1,2,0,14,4,0,31,50,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,822,"                throw new IllegalArgumentException(""The range style "" + rangeStyle + "" is not valid."");",2,1,0,1,2,0,0,2,0,7,87,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,827,        if (startCutoff > Calendar.SATURDAY) {,14,1,0,1,3,3,6,8,0,34,38,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,828,            startCutoff -= 7;,10,0,0,0,0,0,0,4,0,15,17,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,833,        if (endCutoff > Calendar.SATURDAY) {,8,2,1,1,3,0,0,0,0,16,36,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,837,"            start.add(Calendar.DATE, -1);",2,0,0,1,2,3,2,2,0,10,29,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,839,        while (end.get(Calendar.DAY_OF_WEEK) != endCutoff) {,6,1,0,2,5,0,4,0,0,12,52,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,840,"            end.add(Calendar.DATE, 1);",2,0,0,1,2,3,4,0,0,10,26,2,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,868,        if (focus instanceof Date) {,2,0,0,1,3,0,6,2,0,10,28,4,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,869,"            return iterator((Date) focus, rangeStyle);",8,3,1,2,4,1,6,2,0,24,42,3,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,870,        } else if (focus instanceof Calendar) {,2,0,0,1,4,0,0,2,0,4,39,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,871,"            return iterator((Calendar) focus, rangeStyle);",2,0,0,2,4,1,4,2,0,8,46,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,873,"            throw new ClassCastException(""Could not iterate based on "" + focus);",2,1,0,1,2,0,0,2,0,6,68,8,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,892,            this.endFinal = endFinal;,4,0,0,0,0,0,0,0,0,5,25,5,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,893,            spot = startFinal;,4,0,0,0,0,0,6,0,0,11,18,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,894,"            spot.add(Calendar.DATE, -1);",4,0,0,1,2,0,4,0,0,9,28,6,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,915,"            spot.add(Calendar.DATE, 1);",8,1,0,1,2,0,10,0,0,20,27,1,0.0,0,0
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,916,            return spot.clone();,2,1,0,1,2,1,4,0,0,8,20,1,0.0,0,0
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,467,            final int hexDigits = str.length() - pfxLen;,6,2,0,1,2,1,4,0,0,13,44,4,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,468,            if (hexDigits > 16) { // too many for Long,2,1,0,1,3,0,0,0,0,3,42,6,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,471,            if (hexDigits > 8) { // too many for an int,4,2,0,1,3,0,0,0,0,6,43,4,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,625,            if (str.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,27,6,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,77,            final CharSequence result = lookupMap.get(subSeq);,2,0,0,1,2,1,6,2,0,11,50,6,0.04167,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,46,"        lookupMap = new HashMap<CharSequence, CharSequence>();",6,0,0,1,2,0,0,6,0,15,54,3,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,51,"                this.lookupMap.put(seq[0], seq[1]);",2,0,1,3,6,0,2,0,0,8,35,9,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,95,"                pos += Character.charCount(Character.codePointAt(input, pos));",2,0,0,2,4,0,12,0,0,15,62,8,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,452,"        if (str.startsWith(""--"")) {",2,0,0,2,5,0,4,0,0,7,27,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,725,        return new BigDecimal(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,180,        return parsePattern;,2,0,0,0,0,1,0,0,0,2,20,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,309,                    wasWhite= true;,2,0,0,0,0,0,0,0,0,4,15,10,0.05263,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,314,            wasWhite= false;,2,0,0,0,0,0,0,0,0,4,16,6,0.0381,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,304,        boolean wasWhite= false;,2,0,0,0,0,0,0,0,0,3,24,5,0.03738,1,0,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,253,                ch = (char) (random.nextInt(gap) + start);,4,1,0,3,6,0,6,0,0,12,42,8,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,248,                ch = chars[random.nextInt(gap) + start];,4,1,1,2,4,0,6,0,0,14,40,8,4.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,232,                if (!letters && !numbers) {,4,1,0,1,3,0,0,0,0,7,27,6,2.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,240,        char[] buffer = new char[count];,2,0,1,2,4,0,0,0,0,4,32,5,2.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,83,        ByteArrayInputStream bais = new ByteArrayInputStream(objectData);,4,0,0,1,2,0,0,4,0,8,65,4,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,85,        ClassLoaderAwareObjectInputStream in = null;,2,0,0,0,0,0,0,2,0,4,44,4,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,88,"            in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());",4,0,0,3,6,0,6,2,0,13,85,6,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,95,            T readObject = (T) in.readObject();,4,0,0,2,4,0,0,0,0,5,35,5,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,675,        if (cls.getTypeParameters().length > 0 || toClass.equals(cls)) {,6,2,0,3,7,0,10,0,0,18,64,1,1.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,219,"        for (Map.Entry<TypeVariable<?>, Type> entry : toTypeVarAssigns.entrySet()) {",6,0,0,2,5,0,4,4,0,14,76,4,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,220,            Type toTypeArg = entry.getValue();,4,1,0,1,2,0,8,2,0,15,34,3,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,221,            Type fromTypeArg = fromTypeVarAssigns.get(entry.getKey());,2,0,0,2,4,0,8,2,0,12,58,6,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,89,            },0,0,0,0,1,0,0,0,0,1,1,6,0.04348,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,83,"        int len = Character.codePointCount(input, 0, input.length());",2,0,0,2,4,0,10,0,0,12,61,5,0.0303,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,94,                    if (pos < len - 2) {,4,2,0,1,3,0,0,0,0,6,20,10,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,97,                        pos++;,2,0,0,0,0,0,0,0,0,3,6,12,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,100,                pos--;,2,0,0,0,0,0,0,0,0,3,6,8,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,496,"                    rule = selectNumberRule(Calendar.YEAR, tokenLen);",6,0,0,1,2,0,4,2,0,14,49,3,0.02222,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,495,                if (tokenLen >= 4) {,6,0,0,1,3,0,10,2,0,18,20,3,0.02174,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,40,        if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {,6,7,0,3,7,0,10,0,0,25,88,4,0.44444,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,54,            while(input.charAt(end) != ';') ,4,1,0,2,4,0,6,0,0,13,31,3,0.2,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3383,        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());,8,2,1,7,14,0,8,6,0,33,133,1,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,591,        if (u>0) { u=-u; } // make u negative,8,2,0,2,4,0,0,0,0,12,37,4,0.57143,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,584,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,0,3,0,3,7,0,12,0,0,15,43,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,277,        if (registry != null) {,2,0,0,1,3,0,0,0,0,3,23,8,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,278,            String name = desc;,4,0,0,0,0,0,0,2,0,6,19,6,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,91,"        this(pattern, Locale.getDefault());",2,0,0,2,4,0,4,0,0,6,35,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,820,        Calendar c = new GregorianCalendar(mTimeZone);,4,0,0,1,2,0,0,4,0,8,46,4,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,            return 2 + (end - start) + (isHex ? 1 : 0) + 1;,6,2,0,2,4,1,0,0,0,8,47,6,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1455,                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {,2,1,0,1,3,0,0,0,0,3,111,4,0.28571,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1576,            if (searchChars.indexOf(ch) < 0) {,4,2,0,2,5,0,10,0,0,16,34,3,0.1,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,171,    },2,0,0,0,1,0,0,0,0,3,1,7,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,212,        return !StringUtils.isEmpty(cs);,2,1,0,1,2,1,0,0,0,3,32,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,104,    private static final ThreadLocal<Set<IDKey>> REGISTRY = new ThreadLocal<Set<IDKey>>() {,2,0,0,1,3,3,0,12,0,17,87,2,0.02273,1,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,230,            return StringUtils.EMPTY;,4,1,0,0,0,4,0,4,0,12,25,1,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,201,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,245,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.16667,1,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,253,        if (i == -1) {,2,1,0,1,3,0,0,0,0,4,14,4,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,203,        return out;,2,0,0,0,0,1,0,0,0,2,11,4,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,90,"        this(pattern, Locale.getDefault());",6,3,0,2,4,0,4,0,0,13,35,3,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/WordUtils,45,618,        if (upper == -1 || upper > str.length()) {,4,3,0,2,5,0,4,0,0,12,42,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,244,                            out.write('\\');,6,1,0,1,2,0,4,0,0,12,16,3,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,245,                        out.write('/');,2,0,1,1,2,0,14,2,0,23,15,3,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,86,"        return escapeJavaStyleString(str, false);",2,0,0,1,2,4,8,2,0,17,41,1,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,127,"        return escapeJavaStyleString(str, true);",10,0,0,1,2,1,10,0,0,22,40,1,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,158,        return nullText;,2,0,0,0,0,1,0,0,0,2,16,4,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1230,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,381,                isEquals = lhs.equals(rhs);,4,0,0,1,2,0,6,2,0,13,27,4,0.05263,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,772,            return new UnpaddedNumberField(field);,2,0,0,1,2,1,0,2,0,4,38,6,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,954,        return mLocale;,4,0,0,0,0,1,4,0,0,9,15,3,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,465,        if (locale != null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,471,            if (locale == null) {,4,1,0,1,3,2,4,2,0,13,21,2,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,286,"            key = new Pair(key, locale);",6,0,0,1,2,0,0,2,0,9,28,6,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,87,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,237,                        out.write(ch);,4,0,0,1,2,0,0,0,0,6,14,12,0.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,676,                        if (field == DateUtils.SEMI_MONTH) {,6,1,0,1,3,0,0,0,0,7,36,12,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,9,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,179,        stopTime = System.currentTimeMillis();,2,0,0,1,2,0,4,0,0,7,38,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,180,        this.runningState = STATE_SUSPENDED;,4,0,0,0,0,0,0,0,0,5,36,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,631,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",6,0,0,1,2,0,4,0,0,11,57,7,0.07692,1,1,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);",4,0,0,1,2,1,10,2,0,17,38,5,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1730,        for (int i = startIndex; i < thisBuf.length; i++) {,12,1,0,1,3,0,0,0,0,14,51,4,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,8,1,0,0,0,0,0,0,0,9,34,5,0.57143,1,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,852,                        },4,1,0,0,1,0,6,0,0,12,1,8,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang/Entities,62,922,"                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);",2,0,0,2,4,0,8,0,0,11,63,18,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/Entities,62,926,                            },4,3,0,0,1,0,6,0,0,15,1,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,318,"        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);",6,0,0,1,2,0,8,0,0,15,81,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,320,"        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);",6,0,0,1,2,0,8,0,0,15,66,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,321,"        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);",6,0,0,1,2,0,8,0,0,15,67,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,322,"        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);",6,0,0,1,2,0,8,0,0,15,66,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,324,"        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);",2,0,1,1,2,0,4,2,0,10,60,3,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,433,"        end.add( field, -1 * difference );",8,1,0,1,2,3,12,4,0,30,34,1,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,434,        int endValue = end.get(field);,4,0,0,1,2,0,10,0,0,14,30,1,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,435,        int startValue = start.get(field);,2,0,0,1,2,3,2,2,0,10,34,2,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,436,        if (endValue < startValue) {,4,1,0,1,3,0,0,0,0,5,28,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,306,            days += 31;,2,0,0,0,0,0,0,0,0,3,11,6,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,439,            return newdiff;,2,0,0,0,0,1,0,0,0,2,15,6,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,        return iValue - ((ValuedEnum) other).iValue;,6,1,0,2,4,1,0,2,0,9,44,4,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,204,        if (iToString == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,205,            String shortName = ClassUtils.getShortClassName(getEnumClass());,2,0,0,2,4,0,6,2,0,10,64,6,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,206,"            iToString = shortName + ""["" + getName() + ""="" + getValue() + ""]"";",6,1,0,3,6,0,4,2,0,17,65,3,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,208,        return iToString;,10,3,0,0,0,1,4,0,0,17,17,3,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,642,        for (int i = 0; i < fields.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,644,                if (fields[i][j] == field) {,2,1,1,3,7,0,0,0,0,9,28,8,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,646,                    if (round && roundUp) {,4,1,0,1,3,0,0,0,0,5,23,10,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,709,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);",2,1,1,6,12,0,8,0,0,19,54,7,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,72,    private static final int[][] fields = {,4,0,0,2,5,3,10,0,0,18,39,1,0.05,1,1,-1
