dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1387,"        TimeZoneNameRule(TimeZone timeZone, Locale locale, int style) {",8,0,0,1,3,0,0,4,0,12,63,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1388,            mTimeZone = timeZone;,0,0,0,0,0,0,0,0,0,0,21,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1390,"            mStandard = getTimeZoneDisplay(timeZone, false, style, locale);",4,1,0,1,2,0,12,4,0,23,63,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,41,            int start = index + 2;,4,1,0,0,0,0,0,0,0,5,22,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,42,            boolean isHex = false;,2,0,0,0,0,0,0,0,0,3,22,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,44,            char firstChar = input.charAt(start);,2,0,0,1,2,0,6,0,0,8,37,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,82,        return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.57143,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3257,            return null;,2,0,0,0,0,4,4,2,0,12,12,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3256,        if (array == null) {,2,0,0,1,3,0,16,0,0,19,20,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3260,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3290,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3293,        int noOfItems = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,7,40,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3294,        if (noOfItems <= 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3295,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3298,        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,0,0,0,6,12,0,0,0,0,18,116,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3300,        for (int i = startIndex; i < endIndex; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3301,            if (i > startIndex) {,6,2,0,1,3,0,0,0,0,8,21,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3302,                buf.append(separator);,2,0,0,1,2,3,6,4,0,15,22,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3304,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3305,                buf.append(array[i]);,0,0,1,2,4,0,4,0,0,8,21,9,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3308,        return buf.toString();,0,0,1,1,2,1,0,0,0,9,22,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3230,"        return join(elements, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3336,            return null;,2,0,0,0,0,1,6,0,0,8,12,7,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3380,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3335,        if (array == null) {,4,0,0,1,3,0,0,0,0,5,20,8,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3338,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3369,        if (array == null) {,4,2,0,1,3,0,8,0,0,16,20,3,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3372,        if (separator == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3373,            separator = EMPTY;,2,1,0,0,0,0,0,0,0,3,18,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3378,        int noOfItems = (endIndex - startIndex);,8,1,0,1,2,0,0,0,0,9,40,3,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3379,        if (noOfItems <= 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3383,        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());,8,2,1,7,14,0,8,6,0,33,133,1,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3385,        for (int i = startIndex; i < endIndex; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3386,            if (i > startIndex) {,4,1,0,1,3,0,0,0,0,5,21,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3389,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3393,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,147,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");",2,0,0,1,2,3,4,2,0,12,72,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,704,    private static boolean sunAvailable = false;,2,1,0,0,0,0,0,0,0,4,44,4,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,705,    private static Method  sunDecomposeMethod = null;,2,0,0,0,0,2,0,2,0,6,49,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,706,"    private static final Pattern sunPattern = Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");//$NON-NLS-1$",2,0,0,2,4,3,4,2,0,12,108,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,708,    private static boolean java6Available = false;,2,0,0,0,0,2,0,0,0,5,46,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,709,    private static Method  java6NormalizeMethod = null;,2,0,0,0,0,2,0,2,0,6,51,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,710,    private static Object  java6NormalizerFormNFD = null;,2,0,0,0,0,2,0,2,0,6,53,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,711,    private static final Pattern java6Pattern = sunPattern;,6,0,0,0,0,6,0,6,0,18,55,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,717,            Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader(),0,0,0,2,4,0,0,0,0,6,77,4,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,719,"            java6NormalizerFormNFD = normalizerFormClass.getField(""NFD"").get(null);//$NON-NLS-1$",8,0,0,2,4,0,0,2,0,11,84,9,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,720,            Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,73,6,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,722,"            java6NormalizeMethod = normalizerClass.getMethod(""normalize"",",0,0,0,0,1,0,0,0,0,1,61,4,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,724,            java6Available = true;,2,0,0,0,0,0,0,0,0,4,22,6,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,733,        },0,0,0,0,1,0,0,0,0,1,1,4,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,737,            Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),0,0,0,2,4,0,0,0,0,6,73,4,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,739,"            sunDecomposeMethod = normalizerClass.getMethod(""decompose"",",0,0,0,0,1,0,0,0,0,1,59,4,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,744,        } catch (NoSuchMethodException e) {,0,0,0,1,4,0,0,0,0,5,35,4,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,745,            sunAvailable = false;,2,0,0,0,0,0,0,0,0,4,21,7,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,747,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,158,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,159,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,725,        } catch (ClassNotFoundException e) {,0,0,0,1,4,0,0,0,0,5,36,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,726,            java6Available = false;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,727,        } catch (NoSuchFieldException e) {,2,0,1,1,4,0,0,2,0,7,34,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,728,            java6Available = false;,2,0,0,0,0,0,0,0,0,4,23,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,729,        } catch (IllegalAccessException e) {,2,0,0,1,4,0,0,2,0,4,36,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,730,            java6Available = false;,2,0,1,0,0,0,0,2,0,8,23,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,731,        } catch (NoSuchMethodException e) {,2,0,0,1,4,0,0,2,0,4,35,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,732,            java6Available = false;,2,0,0,0,0,0,0,0,0,4,23,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,741,            sunAvailable = true;,2,0,0,0,0,0,0,0,0,4,20,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,746,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,742,        } catch (ClassNotFoundException e) {,0,0,0,1,4,0,0,0,0,5,36,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,743,            sunAvailable = false;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,183,        return cs == null || cs.length() == 0;,2,0,0,1,2,1,0,0,0,2,38,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,202,        return !StringUtils.isEmpty(cs);,0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,223,        if (cs == null || (strLen = cs.length()) == 0) {,2,1,0,3,7,0,0,0,0,3,48,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,60,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");",0,0,0,1,2,0,0,0,0,3,73,4,0.00926,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,88,    private static final int[][] fields = {,0,0,0,2,5,0,0,0,0,7,39,4,0.00926,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1832,            super();,2,0,0,1,2,3,6,4,0,15,8,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1833,            this.endFinal = endFinal;,4,0,0,0,0,0,0,0,0,5,25,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1834,            spot = startFinal;,4,0,0,0,0,0,0,0,0,5,18,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1835,"            spot.add(Calendar.DATE, -1);",4,0,0,1,2,0,4,0,0,9,28,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1836,        },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1844,            return spot.before(endFinal);,0,0,0,1,2,1,6,0,0,6,29,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1853,            if (spot.equals(endFinal)) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1854,                throw new NoSuchElementException();,4,0,0,1,2,0,0,2,0,7,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1856,"            spot.add(Calendar.DATE, 1);",0,0,0,1,2,0,6,0,0,6,27,13,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1857,            return (Calendar) spot.clone();,0,0,0,2,4,1,4,2,0,6,31,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1867,            throw new UnsupportedOperationException();,0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1821,    static class DateIterator implements Iterator<Calendar> {,0,0,0,0,1,0,0,0,0,1,57,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,158,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,159,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,216,"            throw new ArithmeticException(""The denominator must not be zero"");",0,0,0,1,2,0,0,2,0,3,66,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,223,            numerator/=2; denominator/=2;,6,0,0,0,0,3,4,0,0,18,29,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,226,            if (numerator==Integer.MIN_VALUE ||,6,2,0,0,1,0,6,0,0,14,35,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,228,"                throw new ArithmeticException(""overflow: can't negate"");",0,0,0,1,2,0,0,2,0,3,56,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,230,            numerator = -numerator;,6,1,0,0,0,0,8,0,0,17,23,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,231,            denominator = -denominator;,4,0,0,0,0,0,0,0,0,6,27,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,475,        if (numerator == 0) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,476,            return equals(ZERO) ? this : ZERO;,2,0,0,1,2,1,4,0,0,6,34,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,478,"        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);",2,0,0,2,4,0,10,0,0,12,66,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,479,        if (gcd == 1) {,0,0,0,1,3,0,0,0,0,4,15,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,480,            return this;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,482,"        return Fraction.getFraction(numerator / gcd, denominator / gcd);",0,0,0,1,2,1,0,0,0,4,64,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,591,        if (u>0) { u=-u; } // make u negative,8,2,0,2,4,0,0,0,0,12,37,4,0.57143,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,592,        if (v>0) { v=-v; } // make v negative,6,1,0,2,4,0,0,0,0,9,37,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,216,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,217,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",2,0,0,1,2,3,0,4,0,10,69,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,2,0,0,1,2,3,0,4,0,10,68,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,4,0,0,1,2,3,0,4,0,14,69,1,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",2,0,0,2,4,3,2,4,0,12,94,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,2,0,0,1,2,3,0,4,0,9,65,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,2,0,0,1,2,3,0,4,0,10,77,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",2,0,0,2,4,3,2,4,0,12,88,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,0,0,0,1,2,0,0,0,0,3,63,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,108,        return SPLIT_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,267,"        return isMatch(buffer, pos, 0, buffer.length);",0,0,0,1,2,1,4,0,0,4,46,5,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,417,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,418,        },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,389,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,390,        },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,318,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,319,            this.ch = ch;,0,0,0,0,0,0,0,0,0,0,13,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,320,        },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,284,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,454,            return null;,2,0,0,0,0,3,4,2,0,10,12,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,467,            return createInteger(str);,4,0,0,1,2,4,2,2,0,12,26,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,478,            if (expPos > -1) {,0,0,0,1,3,0,0,0,0,4,18,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,479,                if (expPos < decPos || expPos > str.length()) {,14,3,0,2,5,0,8,0,0,25,47,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,482,"                dec = str.substring(decPos + 1, expPos);",0,0,0,1,2,0,0,0,0,3,40,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,484,                dec = str.substring(decPos + 1);,6,1,1,1,2,0,4,0,0,14,32,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,486,"            mant = str.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,489,                if (expPos > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,500,"                exp = str.substring(expPos + 1, str.length() - 1);",12,3,0,2,4,0,8,0,0,25,50,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,525,                        Float f = NumberUtils.createFloat(numeric);,2,0,0,1,2,0,6,2,0,10,43,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,526,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,16,0,0,23,65,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,529,                            return f;,0,0,0,0,0,1,0,0,0,1,9,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,539,                        Double d = NumberUtils.createDouble(numeric);,0,0,0,1,2,0,0,0,0,3,45,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,540,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,541,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,547,                        return createBigDecimal(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,559,            if (expPos > -1 && expPos < str.length() - 1) {,6,5,0,2,5,0,8,0,0,20,47,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,560,"                exp = str.substring(expPos + 1, str.length());",6,1,0,2,4,3,8,0,0,19,46,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,562,                exp = null;,2,0,0,0,0,0,6,0,0,9,11,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,564,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,567,                    return createInteger(str);,2,0,0,1,2,1,4,4,0,10,26,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,568,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,572,                    return createLong(str);,10,0,0,1,2,1,4,2,0,17,23,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,573,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,576,                return createBigInteger(str);,2,1,0,1,2,1,4,0,0,7,29,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,580,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,582,                    Float f = createFloat(str);,6,2,0,1,2,0,4,0,0,13,27,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,583,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,584,                        return f;,2,0,0,0,0,1,0,0,0,2,9,12,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,590,                    Double d = createDouble(str);,6,0,0,1,2,1,4,4,0,15,29,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,24,240,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,453,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,456,        if (StringUtils.isBlank(str)) {,2,1,0,2,5,0,6,0,0,9,31,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,459,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,4,0,0,5,27,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,466,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,469,        char lastChar = str.charAt(str.length() - 1);,0,0,0,2,4,0,0,0,0,6,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,473,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,474,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,476,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,488,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,494,                mant = str;,6,1,0,0,0,0,0,0,0,8,11,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,496,            dec = null;,2,0,0,0,0,0,0,0,0,3,11,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,498,        if (!Character.isDigit(lastChar) && lastChar != '.') {,0,0,0,2,5,0,0,0,0,7,54,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,499,            if (expPos > -1 && expPos < str.length() - 1) {,6,5,0,2,5,0,4,0,0,16,47,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,502,                exp = null;,0,0,0,0,0,0,0,0,0,0,11,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,505,"            String numeric = str.substring(0, str.length() - 1);",0,0,0,2,4,0,0,0,0,6,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,506,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,0,0,0,2,4,0,0,0,0,6,55,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,507,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,510,                    if (dec == null,2,1,0,0,1,0,0,0,0,3,15,9,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,514,                            return createLong(numeric);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,613,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,616,        for (int i = str.length() - 1; i >= 0; i--) {,0,0,0,2,5,0,0,0,0,7,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,617,            if (str.charAt(i) != '0') {,2,0,0,2,5,0,4,0,0,7,27,9,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,618,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,635,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,638,        return Float.valueOf(str);,0,0,0,1,2,1,6,0,0,6,26,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,651,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,654,        return Double.valueOf(str);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,668,        if (str == null) {,8,1,0,1,3,3,6,4,0,22,18,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,672,        return Integer.decode(str);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,701,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,704,        return new BigInteger(str);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,717,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,721,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,724,        return new BigDecimal(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,685,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,688,        return Long.valueOf(str);,0,0,0,1,2,1,0,0,0,4,25,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1295,        if (StringUtils.isEmpty(str)) {,4,0,0,2,5,0,2,0,0,6,31,9,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1298,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1299,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,11,40,6,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1303,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,24,199,        return cs == null || cs.length() == 0;,0,0,0,1,2,1,0,0,0,4,38,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,24,239,        if (cs == null || (strLen = cs.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,48,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,24,242,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,0,0,0,0,5,34,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,24,243,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,54,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,24,244,                return false;,0,4,0,0,0,1,12,0,0,18,13,6,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,24,163,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");",0,0,0,1,2,0,0,0,0,3,72,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,41,    public static final Long LONG_ZERO = new Long(0L);,0,0,0,1,2,0,0,0,0,3,50,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,43,    public static final Long LONG_ONE = new Long(1L);,4,0,0,1,2,0,6,0,0,10,49,3,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,0,0,0,1,2,0,4,0,0,5,56,8,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,30,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },0,0,0,5,10,1,0,0,0,16,80,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,31,    private static final String[][] ISO8859_1_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,52,2,0.04545,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1171,            buffer.append(mValues[calendar.get(mField)]);,0,0,1,3,6,0,10,0,0,12,45,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1172,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1130,            buffer.append(mValue);,0,0,0,1,2,0,6,0,0,6,22,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1131,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,820,        Calendar c = new GregorianCalendar(mTimeZone);,4,0,0,1,2,0,0,4,0,8,46,4,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,821,        c.setTime(date);,0,0,0,1,2,0,6,0,0,6,16,5,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,822,"        return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();",2,0,0,3,6,1,6,2,0,10,70,5,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1115,        StringLiteral(String value) {,6,0,0,1,3,3,2,4,0,16,29,1,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1116,            mValue = value;,10,0,0,0,0,0,4,0,0,15,15,1,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1117,        },2,2,1,0,1,0,4,4,0,21,1,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1123,            return mValue.length();,0,0,0,1,2,1,4,0,0,4,23,6,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1348,"            appendTo(buffer, calendar.get(mField));",2,0,0,2,4,0,14,0,0,16,39,1,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1349,        },0,0,0,0,1,0,6,0,0,7,1,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1355,            if (value < 100) {,0,0,0,1,3,0,0,0,0,4,18,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1356,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1357,                buffer.append((char)(value % 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1361,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,196,"        return getInstance(pattern, null, locale);",0,0,0,1,2,1,0,0,0,4,42,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,645,"                rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);",2,0,0,1,2,0,4,0,0,6,84,5,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,646,                break;,0,0,0,0,0,0,4,0,0,5,6,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,687,                    rule = new StringLiteral(sub);,4,0,0,1,2,0,0,2,0,7,30,9,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,689,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,738,                    if (i + 1 < length && pattern.charAt(i + 1) == '\'') {,0,0,0,2,5,0,0,0,0,7,54,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,454,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,467,            return createInteger(str);,0,0,0,1,2,1,4,0,0,4,26,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,478,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,479,                if (expPos < decPos) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,482,"                dec = str.substring(decPos + 1, expPos);",0,0,0,1,2,0,0,0,0,3,40,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,484,                dec = str.substring(decPos + 1);,4,1,0,1,2,0,4,0,0,10,32,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,486,"            mant = str.substring(0, decPos);",0,0,0,1,2,0,0,0,0,3,32,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,489,"                mant = str.substring(0, expPos);",0,0,0,1,2,0,0,0,0,3,32,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,497,"                exp = str.substring(expPos + 1, str.length() - 1);",0,0,0,2,4,0,0,0,0,6,50,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,522,                        Float f = NumberUtils.createFloat(numeric);,0,0,0,1,2,0,0,0,0,3,43,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,523,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,526,                            return f;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,536,                        Double d = NumberUtils.createDouble(numeric);,0,0,0,1,2,0,8,0,0,8,45,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,537,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,538,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,544,                        return createBigDecimal(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,556,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,557,"                exp = str.substring(expPos + 1, str.length());",2,1,0,2,4,0,0,0,0,3,46,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,559,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,561,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,564,                    return createInteger(str);,0,0,0,1,2,1,4,0,0,4,26,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,565,                } catch (NumberFormatException nfe) {,4,0,0,1,4,0,4,2,0,12,37,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,569,                    return createLong(str);,0,0,0,1,2,1,4,0,0,4,23,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,570,                } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,573,                return createBigInteger(str);,0,0,0,1,2,1,4,0,0,4,29,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,577,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,579,                    Float f = createFloat(str);,2,0,0,1,2,0,4,2,0,8,27,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,580,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,4,3,0,5,11,2,8,4,0,23,65,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,581,                        return f;,4,0,0,0,0,3,0,4,0,10,9,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,587,                    Double d = createDouble(str);,8,0,0,1,2,0,0,4,0,12,29,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,453,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,456,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,459,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,2,0,0,4,27,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,466,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",6,0,0,3,7,0,0,4,0,10,52,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,469,        char lastChar = str.charAt(str.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,473,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,474,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,0,0,0,2,4,0,0,0,0,6,53,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,476,        if (decPos > -1) {,2,0,0,1,3,0,0,2,0,4,18,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,488,            if (expPos > -1) {,8,1,0,1,3,0,4,2,0,17,18,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,491,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,493,            dec = null;,4,0,0,0,0,0,0,0,0,5,11,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,495,        if (!Character.isDigit(lastChar) && lastChar != '.') {,0,0,0,2,5,0,0,0,0,7,54,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,496,            if (expPos > -1 && expPos < str.length() - 1) {,0,0,0,2,5,0,0,0,0,7,47,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,499,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,502,"            String numeric = str.substring(0, str.length() - 1);",2,1,0,2,4,0,8,2,0,13,52,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,503,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,504,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,507,                    if (dec == null,2,2,0,0,1,0,8,0,0,12,15,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,511,                            return createLong(numeric);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,610,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,613,        for (int i = str.length() - 1; i >= 0; i--) {,2,0,0,2,5,0,4,0,0,8,45,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,614,            if (str.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,27,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,615,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,632,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,635,        return Float.valueOf(str);,0,1,0,1,2,1,24,0,0,25,26,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,648,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,651,        return Double.valueOf(str);,6,0,0,1,2,1,6,0,0,13,27,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,665,        if (str == null) {,4,2,0,1,3,0,10,0,0,16,18,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,669,        return Integer.decode(str);,8,3,0,1,2,1,0,0,0,12,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,698,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,701,        return new BigInteger(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,714,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,718,        if (StringUtils.isBlank(str)) {,2,1,0,2,5,0,6,0,0,9,31,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,721,        return new BigDecimal(str);,2,0,0,1,2,2,0,0,0,3,27,2,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,682,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,685,        return Long.valueOf(str);,2,1,0,1,2,1,6,0,0,9,25,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1292,        if (StringUtils.isEmpty(str)) {,2,0,0,2,5,0,6,0,0,8,31,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1295,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1296,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,11,40,6,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1300,        return true;,0,0,0,0,0,1,0,2,0,4,12,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,27,193,        return cs == null || cs.length() == 0;,0,0,0,1,2,1,0,0,0,4,38,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,27,233,        if (cs == null || (strLen = cs.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,48,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,27,236,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,27,237,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,2,1,0,4,9,0,8,2,0,14,54,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,27,238,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,41,    public static final Long LONG_ZERO = new Long(0L);,2,0,0,1,2,3,0,4,0,9,50,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,43,    public static final Long LONG_ONE = new Long(1L);,4,0,0,1,2,4,0,8,0,16,49,1,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,0,0,0,1,2,0,0,0,0,3,56,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,47,    public static final Integer INTEGER_ZERO = new Integer(0);,0,0,0,1,2,0,10,0,0,10,58,5,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,49,    public static final Integer INTEGER_ONE = new Integer(1);,10,1,0,1,2,3,6,4,0,25,57,1,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,51,    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);,4,0,0,1,2,6,0,16,0,27,64,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,53,    public static final Short SHORT_ZERO = new Short((short) 0);,4,0,0,2,4,0,0,0,0,5,60,6,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,55,    public static final Short SHORT_ONE = new Short((short) 1);,2,0,0,2,4,3,0,4,0,9,59,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,2,0,0,2,4,3,0,4,0,10,66,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,59,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,2,0,0,2,4,3,4,2,0,11,60,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,61,    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);,0,0,0,2,4,0,0,0,0,6,59,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,63,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,6,0,0,2,4,3,4,6,0,20,66,1,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,57,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);",2,0,0,3,6,0,14,0,0,17,77,10,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,61,            },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,63,                out.write(entityValue);,0,0,0,1,2,0,6,0,0,6,23,7,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1717,            return ArrayUtils.EMPTY_INT_ARRAY;,4,0,0,0,0,1,0,0,0,4,34,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,4,0,0,2,4,5,0,4,0,13,74,1,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,4,0,0,2,4,6,4,2,0,17,61,1,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,22,7,0,2,4,6,8,4,0,51,64,1,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,8,3,0,2,4,3,16,6,0,37,74,1,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,4,4,0,15,80,1,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,104,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,127,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,0,4,0,9,78,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,146,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",4,0,0,1,2,3,6,4,0,18,80,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,165,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",6,0,0,1,2,3,2,2,0,15,80,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,184,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",4,1,0,1,2,3,2,2,0,13,92,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,206,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,225,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,244,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,263,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,283,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,302,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",2,0,0,1,2,3,2,2,0,10,88,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,321,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",4,0,0,1,2,6,2,2,0,15,78,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,340,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,4,0,0,1,2,3,8,4,0,19,72,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,359,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,2,0,0,1,2,3,4,2,0,11,82,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,378,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",10,3,0,1,2,6,8,6,0,34,86,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,398,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,0,0,0,0,2,86,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,418,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",0,0,0,1,2,0,0,0,0,3,92,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,437,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",2,0,0,1,2,3,2,2,0,10,98,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,456,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,102,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,475,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",2,0,0,1,2,3,2,2,0,10,104,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,495,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = getSystemProperty(""java.util.prefs.PreferencesFactory"");",10,1,0,1,2,3,2,2,0,20,121,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,514,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,0,1,2,3,2,2,0,10,74,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,533,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,0,0,1,2,3,2,2,0,10,82,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,552,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",4,0,0,1,2,3,2,4,0,14,76,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,572,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,2,0,10,76,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,591,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,610,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,629,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,108,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,648,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,667,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",0,0,0,1,2,0,0,0,0,3,80,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,686,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",0,0,0,1,2,0,0,0,0,3,82,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,705,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",0,0,0,1,2,0,0,0,0,3,80,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,724,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,743,"    public static final String OS_NAME = getSystemProperty(""os.name"");",6,3,0,1,2,0,8,0,0,17,66,3,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,762,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",0,0,0,1,2,0,0,0,0,3,72,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,781,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,802,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ? getSystemProperty(""user.region"")",0,0,0,2,4,0,6,0,0,6,118,5,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,822,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,0,0,0,1,2,0,0,0,0,3,70,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,841,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,0,0,0,1,2,0,0,0,0,3,72,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,        if (cs == null || searchChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,        int csLen = cs.length();,2,1,0,1,2,0,0,0,0,3,24,5,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,        for (int i = 0; i < csLen; i++) {,0,0,0,1,3,0,0,0,0,4,33,4,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,            char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,            for (int j = 0; j < searchLen; j++) {,8,1,0,1,3,0,0,0,0,10,37,6,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,                        return false;,4,0,0,0,0,1,10,0,0,15,13,3,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3279,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,1.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3282,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,1.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1715,        if (cs == null || invalidChars == null) {,2,0,0,1,3,0,0,0,0,2,41,4,0.44444,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1718,"        return containsNone(cs, invalidChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,52,4,0.44444,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1372,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,53,4,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1375,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1376,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1377,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1378,            char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1379,            for (int j = 0; j < searchLen; j++) {,14,2,0,1,3,0,0,0,0,18,37,3,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1380,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1382,                        return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,194,        return cs == null || cs.length() == 0;,2,3,0,1,2,1,4,0,0,9,38,4,0.37113,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1689,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.33333,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1462,                        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.30769,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1444,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,53,4,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1447,        int csLength = cs.length();,2,0,0,1,2,0,4,0,0,6,27,5,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1448,        int searchLength = searchChars.length;,0,0,0,0,0,0,0,0,0,0,38,4,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1449,        int csLast = csLength - 1;,4,1,0,0,0,0,0,0,0,5,26,5,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1450,        int searchLast = searchLength - 1;,4,1,0,0,0,0,0,0,0,5,34,5,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1451,        for (int i = 0; i < csLength; i++) {,8,1,0,1,3,0,0,0,0,10,36,4,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1452,            char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1453,            for (int j = 0; j < searchLength; j++) {,8,1,0,1,3,0,0,0,0,10,40,6,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1454,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1455,                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {,2,1,0,1,3,0,0,0,0,3,111,4,0.28571,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1467,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,10,64,2,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,4,0,0,2,4,3,8,8,0,24,64,1,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,6,0,0,11,55,1,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,2,0,1,2,4,0,2,0,0,11,61,1,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,0,0,0,0,3,68,12,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,0,0,2,4,3,0,4,0,9,58,2,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,0,0,0,2,4,0,0,0,0,6,80,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1412,        if (isEmpty(cs) || isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,42,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1415,"        return indexOfAny(cs, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,49,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1570,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1573,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1574,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1575,            char ch = str.charAt(i);,4,2,0,1,2,0,10,0,0,16,24,6,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1576,            if (searchChars.indexOf(ch) < 0) {,4,2,0,2,5,0,10,0,0,16,34,3,0.1,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1577,                    return i;,2,0,0,0,0,4,2,0,0,8,9,2,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1498,        if (searchChars == null) {,2,1,0,1,3,0,0,0,0,3,26,4,0.09091,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1501,"        return containsAny(cs, searchChars.toCharArray());",2,0,0,2,4,1,4,0,0,6,50,7,0.09091,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1542,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.08333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1529,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,53,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1532,        int csLen = cs.length();,0,0,0,1,2,0,0,0,0,3,24,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1533,        int searchLen = searchChars.length;,0,0,0,0,0,0,0,0,0,0,35,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1535,        for (int i = 0; i < csLen; i++) {,0,0,0,1,3,0,0,0,0,4,33,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1536,            char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1537,            for (int j = 0; j < searchLen; j++) {,8,0,0,1,3,0,2,0,0,10,37,8,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1538,                if (searchChars[j] == ch) {,2,1,0,2,5,0,0,0,0,3,27,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1539,                        continue outer;,0,0,0,0,0,0,0,0,0,0,15,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,145,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,146,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,162,"        return toString(array, ""{}"");",0,0,0,2,4,1,4,0,0,5,29,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,178,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,179,            return stringIfNull;,2,1,0,0,0,1,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,181,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",0,0,0,3,6,1,0,0,0,10,87,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,195,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,3,6,1,0,0,0,10,61,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,226,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,227,            return null;,4,0,0,0,0,1,4,4,0,12,12,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,229,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",6,1,0,3,6,1,0,12,0,20,88,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,230,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,231,            Object object = array[i];,4,1,1,1,2,0,0,2,0,11,25,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,232,"            if (object instanceof Map.Entry<?, ?>) {",0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,233,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,234,"                map.put(entry.getKey(), entry.getValue());",2,1,1,3,6,0,12,2,0,19,42,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,235,            } else if (object instanceof Object[]) {,0,0,0,2,6,0,0,0,0,8,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,236,                Object[] entry = (Object[]) object;,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,237,                if (entry.length < 2) {,8,2,0,1,3,0,4,0,0,15,23,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,238,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",0,0,0,0,1,0,0,0,0,1,63,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,242,"                map.put(entry[0], entry[1]);",0,0,0,3,6,0,0,0,0,9,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,243,            } else {,2,0,0,0,2,0,0,0,0,2,8,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,244,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,10,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,249,        return map;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,294,        return items;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,312,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,313,            return null;,2,0,1,0,0,1,10,2,0,22,12,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,315,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,328,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,329,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,331,        return array.clone();,0,1,0,1,2,1,12,0,0,14,21,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,344,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,345,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,347,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,360,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,361,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,363,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,376,        if (array == null) {,6,1,0,1,3,0,0,0,0,8,20,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,377,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,379,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1441,		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,14,0,0,17,53,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1444,		int csLength = cs.length();,0,0,0,1,2,0,0,0,0,3,27,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1445,		int searchLength = searchChars.length;,0,0,0,0,0,0,4,0,0,4,38,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1446,		for (int i = 0; i < csLength; i++) {,0,0,0,1,3,0,0,0,0,4,36,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1447,			char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1448,			for (int j = 0; j < searchLength; j++) {,0,0,0,1,3,0,0,0,0,4,40,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1449,				if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1452,						return true;,0,0,0,0,0,1,0,0,0,1,12,10,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1487,        if (searchChars == null) {,0,0,0,1,3,0,0,0,0,4,26,4,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1490,"        return containsAny(cs, searchChars.toCharArray());",4,0,0,2,4,1,14,4,0,22,50,1,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3279,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.30769,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3282,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.30769,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,194,        return cs == null || cs.length() == 0;,2,3,0,1,2,1,12,0,0,18,38,4,0.04396,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,4,1,0,2,4,3,0,4,0,12,64,1,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,4,0,0,2,4,3,0,0,0,7,61,1,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,0,0,2,4,3,2,0,0,9,58,1,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,0,0,2,4,0,0,0,0,2,58,5,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,170,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,171,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,212,        return !StringUtils.isEmpty(cs);,0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,232,        if (cs == null || (strLen = cs.length()) == 0) {,2,0,0,3,7,0,2,2,0,6,48,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,233,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,235,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,236,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,54,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,237,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,240,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,260,        return !StringUtils.isBlank(cs);,0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,289,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,315,        String ts = trim(str);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,316,        return isEmpty(ts) ? null : ts;,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,341,        return str == null ? EMPTY : str.trim();,2,0,0,1,2,4,0,0,0,5,40,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,369,"        return strip(str, null);",2,0,0,1,2,4,0,4,0,9,24,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,396,        if (str == null) {,4,1,0,1,3,3,0,0,0,8,18,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,397,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,399,"        str = strip(str, null);",2,0,0,1,2,0,4,0,0,8,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,400,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,426,"        return str == null ? EMPTY : strip(str, null);",4,1,0,1,2,4,2,0,0,11,46,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,456,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,457,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,459,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,460,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,489,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,490,            return str;,4,1,0,0,0,1,0,0,0,5,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,492,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,493,        if (stripChars == null) {,6,1,0,1,3,0,10,0,0,19,25,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,494,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,495,                start++;,2,0,0,0,0,0,0,0,0,3,8,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,497,        } else if (stripChars.length() == 0) {,0,1,0,2,6,0,4,0,0,5,38,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,498,            return str;,0,0,0,0,0,1,0,0,0,1,11,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,500,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND)) {,8,3,0,5,11,3,12,0,0,27,89,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,501,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,504,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,533,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,534,            return str;,6,1,0,0,0,1,0,0,0,7,11,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,537,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,538,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,4,9,0,0,0,0,13,67,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,539,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,541,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,542,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,544,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND)) {,0,0,0,5,11,0,0,0,0,16,84,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,545,                end--;,4,0,0,0,0,3,0,4,0,13,6,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,548,"        return str.substring(0, end);",2,1,0,1,2,1,4,0,0,7,29,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,573,"        return stripAll(strs, null);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,603,        if (strs == null || (strsLen = strs.length) == 0) {,8,3,0,2,5,0,0,0,0,12,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,604,            return strs;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,606,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,607,        for (int i = 0; i < strsLen; i++) {,10,1,0,1,3,0,4,2,0,18,35,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,608,"            newArr[i] = strip(strs[i], stripChars);",6,0,0,3,6,0,6,0,0,14,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,610,        return newArr;,4,0,0,0,0,1,4,0,0,8,14,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,630,        if(input == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,631,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,633,        if(SystemUtils.isJavaVersionAtLeast(1.6f)) {,2,0,0,2,5,0,0,0,0,2,44,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,640,"                Class<?> normalizerFormClass = ClassUtils.getClass(""java.text.Normalizer$Form"", false);",2,0,0,1,2,0,4,2,0,10,87,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,643,"                Class<?> normalizerClass = ClassUtils.getClass(""java.text.Normalizer"", false);",0,0,0,1,2,0,6,0,0,7,78,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,646,"                java.lang.reflect.Method method = normalizerClass.getMethod(""normalize"", CharSequence.class, normalizerFormClass );",6,3,0,1,2,0,4,0,0,14,115,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,649,"                java.lang.reflect.Field nfd = normalizerFormClass.getField(""NFD"");",10,0,0,1,2,0,4,0,0,15,66,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,652,"                String decomposed = (String) method.invoke( null, input, nfd.get(null) );",0,0,0,3,6,0,4,0,0,4,73,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,655,"                java.util.regex.Pattern accentPattern = java.util.regex.Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");",18,0,0,2,4,0,2,0,0,21,109,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,656,"                return accentPattern.matcher(decomposed).replaceAll("""");",0,0,0,2,4,1,0,0,0,7,56,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,657,            } catch(ClassNotFoundException cnfe) {,6,0,0,1,4,0,0,2,0,9,38,0,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,658,"                throw new RuntimeException(""ClassNotFoundException occurred during 1.6 backcompat code"", cnfe);",0,0,0,1,2,0,0,0,0,3,95,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,659,            } catch(NoSuchMethodException nsme) {,2,1,0,1,4,0,0,0,0,3,37,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,660,"                throw new RuntimeException(""NoSuchMethodException occurred during 1.6 backcompat code"", nsme);",6,0,0,1,2,1,0,4,0,12,94,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,661,            } catch(NoSuchFieldException nsfe) {,2,0,0,1,4,0,0,2,0,4,36,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,662,"                throw new RuntimeException(""NoSuchFieldException occurred during 1.6 backcompat code"", nsfe);",0,0,0,1,2,0,0,0,0,3,93,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,663,            } catch(IllegalAccessException iae) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,664,"                throw new RuntimeException(""IllegalAccessException occurred during 1.6 backcompat code"", iae);",0,0,0,1,2,0,0,0,0,3,94,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,665,            } catch(IllegalArgumentException iae) {,6,0,0,1,4,0,6,0,0,12,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,666,"                throw new RuntimeException(""IllegalArgumentException occurred during 1.6 backcompat code"", iae);",0,0,0,1,2,0,0,0,0,3,96,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,667,            } catch(java.lang.reflect.InvocationTargetException ite) {,4,2,0,1,4,0,6,0,0,12,58,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,668,"                throw new RuntimeException(""InvocationTargetException occurred during 1.6 backcompat code"", ite);",4,0,1,1,2,0,6,2,0,17,97,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,669,            } catch(SecurityException se) {,6,1,0,1,4,0,4,0,0,13,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,670,"                throw new RuntimeException(""SecurityException occurred during 1.6 backcompat code"", se);",0,0,0,1,2,0,0,0,0,3,88,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,673,"            throw new UnsupportedOperationException(""The stripAccents(String) method is not supported until Java 1.6"");",0,0,0,2,4,0,6,2,0,9,107,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,700,        return cs1 == null ? cs2 == null : cs1.equals(cs2);,8,3,0,1,2,1,12,2,0,25,51,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,400,"        return reflectionHashCode(17, 37, object, false, null, null);",0,0,0,1,2,1,0,0,0,4,61,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,107,            return new HashSet<IDKey>();,0,0,0,1,2,1,0,0,0,4,28,4,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,137,        return REGISTRY.get();,0,0,0,1,2,1,0,0,0,4,22,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,152,        return getRegistry().contains(new IDKey(value));,2,0,0,3,6,1,4,2,0,8,48,5,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,173,        if (isRegistered(object)) {,2,0,0,2,5,0,10,0,0,13,27,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,177,            register(object);,0,0,0,1,2,0,4,0,0,4,17,7,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,178,            Field[] fields = clazz.getDeclaredFields();,0,0,0,2,4,0,0,0,0,6,43,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,179,"            AccessibleObject.setAccessible(fields, true);",0,0,0,1,2,0,6,0,0,7,45,7,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,180,            for (Field field : fields) {,4,0,0,1,3,0,0,2,0,6,28,6,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,181,"                if (!ArrayUtils.contains(excludeFields, field.getName())",0,0,0,2,5,0,10,0,0,11,56,11,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,186,                        Object fieldValue = field.get(object);,0,0,0,1,2,0,0,0,0,3,38,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,187,                        builder.append(fieldValue);,0,0,0,1,2,0,0,0,0,3,27,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,192,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,196,            unregister(object);,6,2,0,1,2,0,4,0,0,12,19,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,197,        },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,198,    },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,360,        Class<?> clazz = object.getClass();,4,0,0,1,2,3,8,4,0,19,35,1,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,361,"        reflectionAppend(object, clazz, builder, testTransients, excludeFields);",0,0,0,1,2,0,12,0,0,12,72,5,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,362,        while (clazz.getSuperclass() != null && clazz != reflectUpToClass) {,4,3,0,2,5,0,4,0,0,11,68,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,363,            clazz = clazz.getSuperclass();,0,0,0,1,2,0,0,0,0,3,30,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,364,"            reflectionAppend(object, clazz, builder, testTransients, excludeFields);",0,0,0,1,2,0,12,0,0,12,72,7,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,366,        return builder.toHashCode();,2,0,1,1,2,1,8,0,0,14,28,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,522,        getRegistry().add(new IDKey(value));,6,0,0,3,6,0,8,4,0,18,36,1,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,523,    },2,1,0,0,1,0,0,0,0,3,1,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,538,        getRegistry().remove(new IDKey(value));,2,0,0,3,6,0,4,2,0,8,39,5,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,539,    },4,0,0,0,1,1,0,2,0,7,1,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,40,        public IDKey(Object _value) {,4,0,0,1,3,1,0,2,0,7,29,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,42,            id = System.identityHashCode(_value);  ,0,0,0,1,2,0,0,0,0,3,37,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,46,            value = _value;,8,0,0,0,0,0,10,0,0,21,15,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,47,        },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,55,           return id;,2,0,0,0,0,1,0,0,0,2,10,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,65,            if (!(other instanceof IDKey)) {,4,2,0,2,5,1,4,4,0,15,32,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,68,            IDKey idKey = (IDKey) other;,4,0,0,1,2,0,0,4,0,8,28,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,69,            if (id != idKey.id) {,6,1,0,1,3,0,0,0,0,7,21,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,73,            return value == idKey.value;,6,1,0,0,0,1,0,0,0,7,28,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,4,0,0,2,4,4,4,4,0,17,65,1,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,2,0,2,4,0,10,0,0,16,58,6,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,0,0,0,0,3,65,8,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,6,0,0,12,64,1,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1627,"        return indexOf(array, objectToFind, 0);",0,0,0,1,2,1,0,0,0,4,39,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1645,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1646,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1730,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",6,5,0,1,2,1,16,0,0,28,55,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,359,"        HashCodeBuilder builder = new HashCodeBuilder(initialNonZeroOddNumber, multiplierNonZeroOddNumber);",6,0,0,1,2,0,0,4,0,10,99,4,0.09091,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,356,        if (object == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.08333,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,883,                iTotal = iTotal * iConstant + object.hashCode();,6,2,0,1,2,0,4,0,0,13,48,8,0.08333,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,4,0,0,2,4,0,6,0,0,10,68,5,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,2,0,0,2,4,3,0,4,0,9,71,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,4,0,0,2,4,6,0,0,0,10,67,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,1,0,2,4,0,0,0,0,3,58,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,4,0,0,1,2,6,6,2,0,18,86,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,2,0,0,1,2,3,6,2,0,13,94,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",4,0,0,1,2,0,4,2,0,10,53,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",6,0,0,1,2,3,6,4,0,20,47,1,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",4,0,0,1,2,0,4,2,0,10,57,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",0,0,0,1,2,0,0,0,0,3,53,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",6,0,0,1,2,3,6,4,0,20,47,1,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",4,0,0,1,2,0,4,2,0,10,51,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",10,0,0,1,2,3,8,2,0,24,46,1,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",6,0,0,1,2,3,6,12,0,27,101,1,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,91,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,2,2,0,2,5,0,6,0,0,12,62,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,92,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,2,0,0,1,2,0,6,2,0,10,64,6,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,93,            if (!primitiveClass.equals(wrapperClass)) {,0,0,0,2,5,0,0,0,0,7,43,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,94,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,1,2,0,8,0,0,8,54,9,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,96,        },2,0,0,0,1,0,0,2,0,4,1,6,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,102,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",4,0,0,1,2,6,2,12,0,25,89,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,107,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",2,0,0,1,2,3,0,12,0,17,96,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,124,"        addAbbreviation(""int"", ""I"");",0,0,0,1,2,0,0,0,0,3,28,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,125,"        addAbbreviation(""boolean"", ""Z"");",0,0,0,1,2,0,2,0,0,4,32,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,126,"        addAbbreviation(""float"", ""F"");",0,0,0,1,2,0,2,0,0,4,30,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,127,"        addAbbreviation(""long"", ""J"");",0,0,0,1,2,0,0,0,0,3,29,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,128,"        addAbbreviation(""short"", ""S"");",0,0,0,1,2,0,0,0,0,3,30,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,129,"        addAbbreviation(""byte"", ""B"");",0,0,0,1,2,0,2,0,0,4,29,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,130,"        addAbbreviation(""double"", ""D"");",0,0,0,1,2,0,2,0,0,4,31,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,131,"        addAbbreviation(""char"", ""C"");",0,0,0,1,2,0,2,0,0,4,29,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,132,    },2,0,0,0,1,3,4,2,0,12,1,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,116,"        abbreviationMap.put(primitive, abbreviation);",0,0,0,1,2,0,8,0,0,8,45,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,117,"        reverseAbbreviationMap.put(abbreviation, primitive);",0,0,0,1,2,0,0,0,0,3,52,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,118,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,143,      super();,2,1,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,144,    },2,0,0,0,1,3,0,4,0,10,1,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,156,        if (object == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,157,            return valueIfNull;,4,0,0,0,0,4,2,0,0,10,19,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,159,        return getShortClassName(object.getClass());,6,2,0,2,4,4,4,4,0,20,44,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,169,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,170,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,172,        return getShortClassName(cls.getName());,6,3,0,2,4,3,20,0,0,33,40,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,184,        if (className == null) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,185,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,187,        if (className.length() == 0) {,2,1,0,2,5,3,6,0,0,13,30,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,188,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,5,25,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,191,        StringBuilder arrayPrefix = new StringBuilder();,2,0,0,1,2,0,4,4,0,10,48,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,194,"        if (className.startsWith(""["")) {",0,0,0,2,6,0,4,0,0,5,32,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,195,            while (className.charAt(0) == '[') {,0,1,0,2,6,0,4,0,0,6,36,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,196,                className = className.substring(1);,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,155,        return ReflectionToStringBuilder.toString(object);,2,0,0,1,2,4,6,4,0,15,50,1,135.2,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,123,"        return toString(object, null, false, false, null);",0,0,0,1,2,1,0,0,0,4,50,4,112.66667,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,473,"        super(object, style, buffer);",6,0,0,1,2,0,0,0,0,6,29,4,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,474,        this.setUpToClass(reflectUpToClass);,0,0,0,1,2,0,4,0,0,4,36,5,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,475,        this.setAppendTransients(outputTransients);,0,0,0,1,2,0,4,0,0,4,43,5,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,476,        this.setAppendStatics(outputStatics);,0,0,0,1,2,0,4,0,0,4,37,5,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,477,    },8,1,1,0,1,0,0,0,0,14,1,6,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,290,"        return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)",12,0,0,1,2,1,4,4,0,21,108,1,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,636,        this.appendStatics = appendStatics;,0,0,0,0,0,0,0,0,0,0,35,4,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,637,    },0,0,0,0,1,0,0,0,0,1,1,4,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,648,        this.appendTransients = appendTransients;,0,0,0,0,0,0,0,0,0,0,41,4,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,649,    },0,0,0,0,1,0,0,0,0,1,1,4,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,923,        buffer.append(arrayStart);,0,0,0,1,2,0,0,0,0,3,26,4,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,924,        int length = Array.getLength(array);,2,0,0,1,2,0,6,0,0,8,36,5,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,925,        for (int i = 0; i < length; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,926,"            Object item = Array.get(array, i);",4,0,0,1,2,0,14,2,0,20,34,6,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,927,            if (i > 0) {,2,1,0,1,3,0,0,0,0,3,12,6,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,930,            if (item == null) {,0,0,0,1,3,0,0,0,0,4,19,4,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,934,"                appendInternal(buffer, fieldName, item, arrayContentDetail);",0,0,0,1,2,0,0,0,0,3,60,4,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,937,        buffer.append(arrayEnd);,0,0,0,1,2,0,0,0,0,3,24,4,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,938,    },2,0,0,0,1,3,0,4,0,9,1,2,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,527,            this.reflectionAppendArray(this.getObject());,0,0,0,2,4,0,4,0,0,4,45,7,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,528,            return;,2,0,0,0,0,4,2,2,0,10,7,2,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,622,"        this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);",2,0,0,3,6,3,8,4,0,17,81,1,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,623,        return this;,2,0,0,0,0,1,4,2,0,8,12,4,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,683,        this.upToClass = clazz;,4,0,0,0,0,0,0,0,0,5,23,4,67.6,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,684,    },0,0,0,0,1,0,0,0,0,1,1,4,67.6,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,677,        if (clazz != null) {,2,1,0,1,3,0,0,0,0,3,20,4,61.45455,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,1045,        return style;,2,0,0,0,0,1,0,0,0,2,13,4,44.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,701,            clazz = clazz.getSuperclass();,2,0,0,1,2,0,4,0,0,7,30,6,39.76471,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,702,            this.appendFieldsIn(clazz);,0,0,0,1,2,0,6,0,0,8,27,1,39.76471,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,928,                buffer.append(arraySeparator);,0,0,0,1,2,0,4,0,0,5,30,5,36.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,526,        if (clazz.isArray()) {,2,1,1,2,5,0,0,0,0,7,22,8,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,530,        Field[] fields = clazz.getDeclaredFields();,2,0,0,2,4,0,4,2,0,8,43,4,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,531,"        AccessibleObject.setAccessible(fields, true);",2,1,0,1,2,0,6,0,0,10,45,3,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,532,        for (Field field : fields) {,4,0,0,1,3,0,0,2,0,6,28,4,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,549,    },0,0,0,0,1,0,0,0,0,1,1,4,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,566,        return this.upToClass;,0,0,0,0,0,1,0,0,0,1,22,4,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,698,        Class<?> clazz = this.getObject().getClass();,0,0,0,2,4,0,0,0,0,6,45,4,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,699,        this.appendFieldsIn(clazz);,0,0,0,1,2,0,4,0,0,4,27,5,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,700,        while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {,2,3,0,3,7,0,6,0,0,11,71,4,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,704,        return super.toString();,2,0,0,1,2,1,0,0,0,2,24,5,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,695,        if (this.getObject() == null) {,0,1,0,2,5,0,2,0,0,3,31,4,33.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,372,    private boolean appendStatics = false;,0,0,0,0,0,0,0,0,0,0,38,4,30.72727,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,377,    private boolean appendTransients = false;,0,0,0,0,0,0,0,0,0,0,41,4,30.72727,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3290,        if (array != null){,2,1,0,1,3,0,0,0,0,3,19,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3298,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",0,0,0,4,8,0,0,0,0,12,49,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3299,        newArray[newArray.length - 1] = element;,2,1,0,1,2,0,0,0,0,3,40,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3300,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3535,"        return Array.newInstance(newArrayComponentType, 1);",2,1,0,1,2,1,6,0,0,10,51,3,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3529,        if (array != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,58,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,62,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,4,0,0,2,4,3,6,6,0,19,64,1,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,66,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,70,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,74,    public static final int[] EMPTY_INT_ARRAY = new int[0];,0,0,0,2,4,0,0,0,0,6,55,4,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,78,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,6,2,0,2,4,3,4,4,0,19,74,1,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,82,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,86,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,90,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,0,0,2,4,0,0,0,0,5,58,10,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,94,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,6,0,0,2,4,3,0,4,0,14,65,1,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,98,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,0,0,5,64,2,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,102,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,4,0,0,2,4,3,4,2,0,13,71,1,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,106,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,110,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,114,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,118,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,122,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,126,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,0,0,0,2,4,0,0,0,0,6,80,4,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,143,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,144,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,160,"        return toString(array, ""{}"");",0,0,0,2,4,1,0,0,0,7,29,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,176,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,177,            return stringIfNull;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,179,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",2,0,0,3,6,4,8,2,0,17,87,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,193,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,3,6,1,0,0,0,10,61,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,224,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,225,            return null;,0,1,0,0,0,1,12,0,0,13,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,227,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",8,2,0,3,6,1,0,12,0,23,88,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,228,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,229,            Object object = array[i];,4,0,0,1,2,0,0,4,0,8,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,230,"            if (object instanceof Map.Entry<?, ?>) {",6,0,0,1,3,0,0,0,0,6,40,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,231,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",2,0,0,1,2,0,0,0,0,4,47,10,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,232,"                map.put(entry.getKey(), entry.getValue());",0,0,0,3,6,0,0,0,0,9,42,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,233,            } else if (object instanceof Object[]) {,0,0,0,2,6,0,4,0,0,4,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,234,                Object[] entry = (Object[]) object;,4,0,0,3,6,0,0,4,0,8,35,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,235,                if (entry.length < 2) {,4,1,0,1,3,0,0,0,0,5,23,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,236,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,12,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,240,"                map.put(entry[0], entry[1]);",0,0,1,3,6,0,10,0,0,14,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,241,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,242,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",0,0,0,0,1,0,0,0,0,1,63,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,247,        return map;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,292,        return items;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,449,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,452,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,455,"        if (str.startsWith(""--"")) {",8,1,0,2,5,0,4,0,0,15,27,3,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,462,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,465,        char lastChar = str.charAt(str.length() - 1);,12,2,0,2,4,3,8,0,0,26,45,1,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,469,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,470,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,472,        if (decPos > -1) {,10,2,0,1,3,0,0,0,0,14,18,3,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,484,            if (expPos > -1) {,4,2,0,1,3,0,0,0,0,7,18,6,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,487,                mant = str;,0,0,0,0,0,0,0,0,0,0,11,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,489,            dec = null;,4,0,0,0,0,0,4,0,0,10,11,5,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,491,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,0,6,0,0,7,35,4,4.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,492,            if (expPos > -1 && expPos < str.length() - 1) {,6,4,0,2,5,1,4,4,0,20,47,1,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,495,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,498,"            String numeric = str.substring(0, str.length() - 1);",0,0,0,2,4,0,0,0,0,6,52,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,499,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,500,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,503,                    if (dec == null,12,2,0,0,1,0,8,0,0,22,15,3,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,507,                            return createLong(numeric);,0,0,0,1,2,1,4,0,0,4,27,12,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,606,        if (str == null) {,4,1,0,1,3,3,0,4,0,12,18,1,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,609,        for (int i = str.length() - 1; i >= 0; i--) {,0,0,0,2,5,0,0,0,0,1,45,6,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,610,            if (str.charAt(i) != '0') {,0,0,0,2,5,0,0,0,0,7,27,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,611,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,628,        if (str == null) {,0,0,1,1,3,0,10,0,0,12,18,6,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,631,        return Float.valueOf(str);,0,0,0,1,2,1,0,0,0,4,26,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,644,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,647,        return Double.valueOf(str);,0,0,0,1,2,1,6,0,0,6,27,5,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,661,        if (str == null) {,6,1,0,1,3,0,0,0,0,8,18,3,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,665,        return Integer.decode(str);,0,0,0,1,2,1,6,0,0,6,27,5,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,694,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,697,        return new BigInteger(str);,4,0,0,1,2,4,0,2,0,9,27,1,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,710,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,714,        if (StringUtils.isBlank(str)) {,2,0,0,2,5,3,10,2,0,17,31,1,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,717,        return new BigDecimal(str);,0,0,0,1,2,1,0,0,0,4,27,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,678,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,681,        return Long.valueOf(str);,0,0,0,1,2,1,6,0,0,6,25,5,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1288,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,31,5,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1291,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1292,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,40,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1296,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,36,191,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,36,229,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,36,232,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,36,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,36,234,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,453,"            throw new NumberFormatException(""A blank string is not a valid number"");",0,0,0,1,2,0,0,2,0,3,72,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,460,            return null;,0,0,0,0,0,1,0,0,0,1,12,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,476,"                    throw new NumberFormatException(str + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,485,"                mant = str.substring(0, expPos);",0,0,0,1,2,0,0,0,0,3,32,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,508,                        } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,511,                        return createBigInteger(numeric);,0,0,0,1,2,1,0,0,0,4,33,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,514,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,527,                    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,525,                    } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,538,                    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,536,                    } catch (NumberFormatException nfe) {,6,0,0,1,4,0,6,2,0,14,37,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,541,                    } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,581,                },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,579,                } catch (NumberFormatException nfe) {,4,0,0,1,4,0,0,2,0,6,37,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,584,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,2,0,0,5,11,0,0,2,0,4,66,9,1.0,0,0,-1
