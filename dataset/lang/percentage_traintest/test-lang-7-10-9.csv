dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,269,    },0,0,0,0,1,0,4,0,0,4,1,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,278,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,279,        setDelimiterString(delim);,0,0,0,1,2,0,4,0,0,4,26,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,280,    },2,0,0,0,1,3,4,2,0,12,1,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,289,        this(input);,0,0,0,1,2,0,0,0,0,3,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,290,        setDelimiterMatcher(delim);,0,0,0,1,2,0,4,0,0,4,27,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,291,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,302,"        this(input, delim);",4,0,0,1,2,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,303,        setQuoteChar(quote);,0,0,0,1,2,0,14,0,0,14,20,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,304,    },0,0,0,0,1,0,12,2,0,14,1,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,315,"        this(input, delim);",4,0,0,1,2,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,316,        setQuoteMatcher(quote);,4,0,0,1,2,6,2,6,0,19,23,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,317,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,329,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,330,        this.chars = input;,4,0,0,0,0,0,0,0,0,5,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,331,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,343,        this(input);,0,0,0,1,2,0,0,0,0,3,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,344,        setDelimiterChar(delim);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,345,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,357,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,358,        setDelimiterString(delim);,4,1,0,1,2,0,4,0,0,9,26,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,359,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,371,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,372,        setDelimiterMatcher(delim);,0,0,0,1,2,0,0,2,0,4,27,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,373,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,387,"        this(input, delim);",0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,388,        setQuoteChar(quote);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,389,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,403,"        this(input, delim);",0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,404,        setQuoteMatcher(quote);,0,0,0,1,2,0,12,0,0,12,23,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,405,    },4,1,0,0,1,6,8,2,0,23,1,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,93,        CSV_TOKENIZER_PROTOTYPE = new StrTokenizer();,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,94,        CSV_TOKENIZER_PROTOTYPE.setDelimiterMatcher(StrMatcher.commaMatcher());,0,0,0,2,4,0,0,0,0,6,71,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,95,        CSV_TOKENIZER_PROTOTYPE.setQuoteMatcher(StrMatcher.doubleQuoteMatcher());,0,0,0,2,4,0,8,0,0,8,73,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,96,        CSV_TOKENIZER_PROTOTYPE.setIgnoredMatcher(StrMatcher.noneMatcher());,0,0,0,2,4,0,0,0,0,6,68,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,97,        CSV_TOKENIZER_PROTOTYPE.setTrimmerMatcher(StrMatcher.trimMatcher());,0,0,0,2,4,0,8,0,0,8,68,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1672,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1673,        for (int i = 0; i < thisBuf.length; i++) {,0,0,0,1,3,0,0,0,0,4,42,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1674,            if (thisBuf[i] == ch) {,2,1,1,2,5,0,0,0,0,7,23,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1675,                return true;,2,0,0,0,0,1,4,4,0,11,12,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1202,        int len = (str == null ? 0 : str.length());,0,0,0,2,4,0,6,0,0,6,43,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1203,        if (len > 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1204,"            int index = indexOf(str, 0);",0,0,0,1,2,0,0,0,0,3,28,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1205,            if (index >= 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1206,"                deleteImpl(index, index + len, len);",0,0,0,1,2,0,0,0,0,3,36,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1209,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1762,        if (str == null || startIndex >= size) {,0,0,0,1,3,0,0,0,0,4,40,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1765,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1766,        if (strLen == 1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1769,        if (strLen == 0) {,4,1,0,1,3,3,2,2,0,13,18,1,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1772,        if (strLen > size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1775,        char[] thisBuf = buffer;,2,0,0,1,2,3,0,0,0,5,24,2,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1776,        int len = size - strLen + 1;,0,0,0,0,0,0,0,0,0,0,28,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1778,        for (int i = startIndex; i < len; i++) {,10,1,0,1,3,0,0,0,0,12,40,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1779,            for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,0,0,0,10,34,7,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1780,                if (str.charAt(j) != thisBuf[i + j]) {,4,2,1,3,7,0,6,0,0,14,38,9,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1781,                    continue outer;,0,0,0,0,0,0,0,0,0,0,15,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1784,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",4,1,0,1,2,0,12,0,0,17,72,5,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1115,        size -= len;,4,0,0,0,0,0,0,0,0,5,12,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1116,    },4,0,0,0,1,0,0,2,0,6,1,5,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,121,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.01429,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,122,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.01429,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,125,            buffer = new char[str.length() + CAPACITY];,0,0,0,2,4,0,0,0,0,1,43,8,0.01429,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,126,            append(str);,0,0,0,1,2,0,4,0,0,4,12,7,0.01429,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,128,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01429,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,474,            int len = length();,0,0,0,1,2,0,0,0,0,3,19,4,0.00877,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,475,            ensureCapacity(len + strLen);,4,1,0,1,2,0,2,0,0,7,29,7,0.00877,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,476,"            str.getChars(0, strLen, buffer, len);",0,0,0,1,2,0,0,0,0,3,37,4,0.00877,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,477,            size += strLen;,0,0,0,0,0,0,0,0,0,0,15,4,0.00877,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,469,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0087,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,472,        int strLen = str.length();,2,0,0,1,2,0,0,2,0,5,26,5,0.0087,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,473,        if (strLen > 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0087,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,479,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0087,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,293,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,294,            this.ch = ch;,6,0,0,0,0,3,0,4,0,14,13,1,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,295,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,216,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,217,    },0,0,0,0,1,0,6,0,0,7,1,6,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",2,0,0,1,2,3,0,4,0,10,69,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,4,0,0,1,2,3,0,4,0,13,68,1,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,2,0,0,1,2,3,0,4,0,10,69,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",2,0,0,2,4,3,2,4,0,12,94,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,2,0,0,1,2,3,0,4,0,9,65,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,4,0,0,1,2,3,6,4,0,19,77,1,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",0,0,0,2,4,0,0,0,0,6,88,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,4,0,0,1,2,3,10,6,0,23,63,1,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,389,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,390,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,362,            super();,4,1,0,1,2,0,4,0,0,9,8,5,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,363,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,260,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,261,            this.chars = (char[]) chars.clone();,2,0,0,3,6,0,4,0,0,7,36,5,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,262,            Arrays.sort(this.chars);,0,0,0,1,2,0,0,0,0,3,24,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,263,        },4,3,0,0,1,0,0,0,0,7,1,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,182,        return size;,2,0,0,0,0,1,0,0,0,2,12,4,0.00585,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,228,        if (capacity > buffer.length) {,8,4,0,1,3,0,4,0,0,16,31,3,0.00585,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,233,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.00585,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,307,            return ch == buffer[pos] ? 1 : 0;,6,1,0,1,2,4,0,6,0,16,33,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,80,        return COMMA_MATCHER;,4,1,0,0,0,1,0,0,0,5,21,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,89,        return TAB_MATCHER;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,98,        return SPACE_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1762,        if (str == null || startIndex >= size) {,0,0,0,1,3,0,0,0,0,4,40,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1765,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1766,        if (strLen == 1) {,8,2,0,1,3,0,0,0,0,12,18,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1769,        if (strLen == 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1772,        if (strLen > size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1775,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,8,1,0,0,0,0,0,0,0,9,34,5,0.57143,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1778,        for (int i = startIndex; i < len; i++) {,10,1,0,1,3,0,0,0,0,12,40,5,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1779,            for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,0,0,0,10,34,7,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1780,                if (str.charAt(j) != thisBuf[i + j]) {,4,2,1,3,7,0,6,0,0,14,38,9,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1781,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1784,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1184,        int len = (str == null ? 0 : str.length());,4,1,0,2,4,0,4,0,0,9,43,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1185,        if (len > 0) {,12,2,0,1,3,3,0,4,0,22,14,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1186,"            int index = indexOf(str, 0);",2,0,0,1,2,0,4,0,0,6,28,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1187,            while (index >= 0) {,0,0,0,1,3,0,0,0,0,4,20,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1188,"                deleteImpl(index, index + len, len);",0,0,0,1,2,0,0,0,0,3,36,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1189,"                index = indexOf(str, index);",2,0,0,1,2,0,6,0,0,9,28,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1202,        int len = (str == null ? 0 : str.length());,0,0,0,2,4,0,0,0,0,6,43,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1203,        if (len > 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1204,"            int index = indexOf(str, 0);",0,0,0,1,2,0,0,0,0,3,28,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1205,            if (index >= 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1206,"                deleteImpl(index, index + len, len);",0,0,0,1,2,0,0,0,0,3,36,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1209,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1747,"        return indexOf(str, 0);",4,1,0,1,2,1,8,0,0,14,23,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",4,1,0,1,2,0,12,0,0,17,72,5,0.30769,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1115,        size -= len;,0,0,0,0,0,0,0,0,0,0,12,4,0.30769,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1116,    },0,0,0,0,1,0,0,0,0,1,1,4,0.30769,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,121,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,122,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,125,            buffer = new char[str.length() + CAPACITY];,4,1,0,2,4,0,4,0,0,10,43,6,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,126,            append(str);,0,0,0,1,2,0,4,0,0,4,12,7,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,128,    },0,0,0,0,1,0,4,0,0,4,1,5,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,474,            int len = length();,2,0,0,1,2,0,2,0,0,4,19,7,0.03571,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,475,            ensureCapacity(len + strLen);,0,0,0,1,2,0,0,0,0,3,29,4,0.03571,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,476,"            str.getChars(0, strLen, buffer, len);",8,1,0,1,2,0,10,0,0,19,37,3,0.03571,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,477,            size += strLen;,0,0,0,0,0,0,0,0,0,0,15,4,0.03571,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,469,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0354,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,472,        int strLen = str.length();,4,0,0,1,2,3,6,2,0,16,26,1,0.0354,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,473,        if (strLen > 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0354,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,479,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0354,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,260,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,261,            this.chars = (char[]) chars.clone();,0,1,0,3,6,0,4,0,0,5,36,5,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,262,            Arrays.sort(this.chars);,0,0,0,1,2,0,0,0,0,3,24,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,263,        },0,1,0,0,1,0,6,0,0,7,1,6,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,216,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,217,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",0,0,0,1,2,0,0,0,0,3,69,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,0,0,0,1,2,0,6,0,0,6,68,5,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,6,1,0,1,2,0,4,0,0,12,69,6,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",0,0,0,2,4,0,0,0,0,6,94,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,0,0,0,1,2,0,0,0,0,3,65,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,0,0,0,1,2,0,0,0,0,3,77,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",2,0,0,2,4,3,6,4,0,16,88,1,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,0,0,0,1,2,0,0,0,0,3,63,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,389,            super();,4,1,0,1,2,0,4,0,0,9,8,5,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,390,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,362,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,363,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,293,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,294,            this.ch = ch;,0,0,0,0,0,0,0,0,0,0,13,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,295,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,182,        return size;,0,0,0,0,0,1,0,0,0,1,12,4,0.02367,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,228,        if (capacity > buffer.length) {,0,0,0,1,3,0,0,0,0,4,31,4,0.02367,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,233,        return this;,2,0,0,0,0,4,2,0,0,8,12,2,0.02367,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,275,"            return Arrays.binarySearch(chars, buffer[pos]) >= 0 ? 1 : 0;",0,0,0,2,4,1,0,0,0,7,60,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,840,                    if (entityName.length() == 1) {,0,1,0,2,5,0,4,0,0,5,31,11,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,843,                        char charAt1 = entityName.charAt(1);,2,0,0,1,2,0,14,0,0,16,36,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,845,                            if (charAt1 == 'x' || charAt1=='X') {,4,3,0,1,3,0,0,0,0,9,37,15,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,848,                                entityValue = Integer.parseInt(entityName.substring(1));,4,1,0,2,4,0,8,0,0,14,56,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,852,                        },4,1,0,0,1,0,6,0,0,12,1,8,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang/Entities,62,853,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,862,                    buf.append((char) (entityValue));,2,0,0,3,6,0,4,0,0,6,33,11,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,819,        StringBuffer buf = new StringBuffer(str.length());,6,0,0,2,4,0,4,4,0,15,50,1,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,820,"        buf.append(str.substring(0, firstAmp));",0,0,0,2,4,0,0,0,0,6,39,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,821,        for (int i = firstAmp; i < str.length(); ++i) {,8,1,0,2,5,0,4,0,0,14,47,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,822,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,823,            if (ch == '&') {,2,1,0,1,3,0,0,0,0,4,16,6,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,824,"                int semi = str.indexOf(';', i + 1);",4,1,0,1,2,0,4,0,0,10,35,9,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,825,                if (semi == -1) {,2,1,0,1,3,0,0,0,0,4,17,8,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,829,"                int amph = str.indexOf('&', i + 1);",8,3,0,1,2,0,4,0,0,17,35,3,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,830,                if( amph != -1 && amph < semi ) {,6,3,0,1,3,0,0,0,0,10,33,8,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,835,"                String entityName = str.substring(i + 1, semi);",2,0,0,1,2,0,0,0,0,2,47,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,837,                if (entityName.length() == 0) {,0,1,0,2,5,0,4,0,0,5,31,8,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,839,                } else if (entityName.charAt(0) == '#') {,0,1,0,2,6,0,4,0,0,6,41,9,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,857,                if (entityValue == -1) {,2,1,0,1,3,0,4,0,0,10,24,3,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,864,                i = semi;,0,0,0,0,0,0,0,0,0,0,9,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,865,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,869,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,814,        int firstAmp = str.indexOf('&');,2,0,0,1,2,0,4,0,0,7,32,5,0.03704,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,247,"        return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());",0,0,0,2,4,1,12,0,0,13,81,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,330,"            if (Token.containsTokenWithValue(tokens, M)) {",0,0,0,2,5,0,8,0,0,8,46,7,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,331,                months += 12 * years;,6,4,0,0,0,0,8,0,0,21,21,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,332,                years = 0;,2,0,0,0,0,0,0,0,0,3,10,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,344,            hours += 24 * days;,4,1,0,0,0,0,0,0,0,6,19,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,345,            days = 0;,4,0,0,0,0,0,0,0,0,5,9,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,348,            minutes += 60 * hours;,4,1,0,0,0,0,0,0,0,6,22,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,349,            hours = 0;,4,0,0,0,0,0,4,4,0,13,10,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,352,            seconds += 60 * minutes;,4,1,0,0,0,0,0,0,0,6,24,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,353,            minutes = 0;,2,0,0,0,0,0,0,0,0,3,12,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,356,            milliseconds += 1000 * seconds;,0,0,0,0,0,0,0,0,0,0,31,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,357,            seconds = 0;,2,0,0,0,0,0,0,0,0,3,12,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,265,        long millis = endMillis - startMillis;,10,1,0,0,0,0,4,4,0,20,38,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,266,        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {,0,0,0,1,3,0,0,2,0,2,45,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,270,        Token[] tokens = lexx(format);,2,0,0,2,4,0,4,2,0,8,30,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,274,        Calendar start = Calendar.getInstance(timezone);,2,0,0,1,2,0,6,2,0,10,48,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,275,        start.setTime(new Date(startMillis));,4,0,0,2,4,0,10,2,0,18,37,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,276,        Calendar end = Calendar.getInstance(timezone);,2,0,0,1,2,0,6,2,0,10,46,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,277,        end.setTime(new Date(endMillis));,2,0,0,2,4,0,4,2,0,8,33,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,280,        int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);,0,0,0,2,4,0,0,0,0,6,83,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,281,        int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);,0,0,0,2,4,0,0,0,0,6,68,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,282,        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);,14,2,0,2,4,0,8,0,0,24,68,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,283,        int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);,0,0,0,2,4,0,0,0,0,6,76,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,284,        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);,10,1,0,2,4,0,8,0,0,19,77,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,285,        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);,10,1,0,2,4,0,8,0,0,19,65,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,286,        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);,14,4,0,2,4,0,12,0,0,31,62,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,289,        while (milliseconds < 0) {,2,1,0,1,3,0,0,0,0,3,26,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,293,        while (seconds < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,297,        while (minutes < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,301,        while (hours < 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,305,        while (days < 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,314,        while (months < 0) {,2,1,0,1,3,0,0,0,0,3,20,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,318,"        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);",6,0,0,1,2,0,8,0,0,15,81,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,319,"        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);",0,0,0,1,2,0,0,0,0,3,66,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,320,"        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);",6,0,0,1,2,0,8,0,0,15,66,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,321,"        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);",6,0,0,1,2,0,8,0,0,15,67,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,322,"        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);",6,0,0,1,2,0,8,0,0,15,66,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,323,"        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);",0,0,0,1,2,0,0,0,0,3,63,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,324,"        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);",2,0,1,1,2,0,4,2,0,10,60,3,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,329,"        if (!Token.containsTokenWithValue(tokens, y)) {",0,0,0,2,5,0,12,0,0,13,47,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,339,"        if (!Token.containsTokenWithValue(tokens, M)) {",2,0,0,2,5,3,16,2,0,25,47,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,343,"        if (!Token.containsTokenWithValue(tokens, d)) {",0,0,0,2,5,0,0,0,0,7,47,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,347,"        if (!Token.containsTokenWithValue(tokens, H)) {",2,0,0,2,5,0,8,0,0,11,47,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,351,"        if (!Token.containsTokenWithValue(tokens, m)) {",0,0,0,2,5,0,8,0,0,9,47,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,355,"        if (!Token.containsTokenWithValue(tokens, s)) {",2,1,0,2,5,0,8,0,0,12,47,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,360,"        return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);",0,0,0,1,2,1,20,0,0,20,96,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,433,"        end.add( field, -1 * difference );",8,1,0,1,2,3,12,4,0,30,34,1,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,434,        int endValue = end.get(field);,4,0,0,1,2,0,10,0,0,14,30,1,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,435,        int startValue = start.get(field);,2,0,0,1,2,3,2,2,0,10,34,2,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,436,        if (endValue < startValue) {,4,1,0,1,3,0,0,0,0,5,28,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,441,            return 0;,0,0,0,0,0,1,4,0,0,4,9,7,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,395,"                    buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(months), count, '0') : Integer",2,0,0,2,5,0,18,0,0,21,96,12,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,397,                    lastOutputSeconds = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,487,                case 'M'  : value = M; break;,4,0,0,0,0,0,0,0,0,6,29,6,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,63,3865,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,63,3868,        int pads = size - str.length();,0,0,0,1,2,0,0,0,0,3,31,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,63,3869,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,63,3870,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,534,            return false;,4,1,0,0,0,1,0,0,0,6,13,1,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,503,                    previous.increment();,2,0,0,1,2,0,8,0,0,13,21,3,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,566,            count++;,2,0,0,0,0,0,0,0,0,2,8,5,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,567,        },4,0,0,0,1,0,6,0,0,10,1,5,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,380,        StringBuffer buffer = new StringBuffer();,4,0,1,1,2,1,4,4,0,17,41,1,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,381,        boolean lastOutputSeconds = false;,10,0,0,0,0,0,4,0,0,15,34,3,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,382,        int sz = tokens.length;,0,0,0,0,0,0,0,0,0,0,23,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,383,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,384,            Token token = tokens[i];,2,0,1,1,2,0,0,2,0,8,24,6,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,385,            Object value = token.getValue();,2,0,0,1,2,0,4,2,0,8,32,6,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,386,            int count = token.getCount();,2,1,0,1,2,0,0,0,0,3,29,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,387,            if (value instanceof StringBuffer) {,2,0,0,1,3,0,0,2,0,4,36,7,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,390,                if (value == y) {,0,0,0,1,3,0,0,0,0,4,17,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,394,                } else if (value == M) {,0,0,0,1,4,0,0,0,0,5,24,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,430,        return buffer.toString();,0,0,0,1,2,1,4,0,0,4,25,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,528,            int sz = tokens.length;,10,1,0,0,0,0,4,0,0,16,23,1,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,529,            for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,530,                if (tokens[i].getValue() == value) {,0,0,0,3,7,0,0,0,0,10,36,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,531,                    return true;,0,0,0,0,0,1,4,0,0,4,12,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,575,            return count;,2,0,0,0,0,1,0,0,0,2,13,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,460,        char[] array = format.toCharArray();,0,0,0,2,4,0,0,0,0,6,36,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,461,        java.util.ArrayList list = new java.util.ArrayList(array.length);,18,0,0,1,2,0,0,0,0,18,65,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,463,        boolean inLiteral = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,        return iValue - ((ValuedEnum) other).iValue;,6,1,0,2,4,1,0,2,0,9,44,4,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,126,        super(name);,2,0,0,1,2,0,0,0,0,2,12,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,127,        iValue = value;,4,0,0,0,0,0,0,0,0,5,15,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,128,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,519,        return getClass();,0,0,0,1,2,1,2,0,0,2,18,5,0.01754,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,314,        iName = name;,4,0,0,0,0,0,0,0,0,5,13,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,315,        iHashCode = 7 + getEnumClass().hashCode() + 3 * name.hashCode();,2,2,0,3,6,0,8,0,0,13,64,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,317,    },2,1,0,0,1,0,0,0,0,3,1,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,339,                ok = true;,6,1,0,0,0,0,0,0,0,9,10,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,340,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,349,        Entry entry = (Entry) cEnumClasses.get(enumClass);,0,0,0,2,4,0,0,0,0,6,50,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,350,        if (entry == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,351,            entry = createEntry(enumClass);,2,0,0,1,2,0,6,2,0,10,31,12,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,352,"            cEnumClasses.put(enumClass, entry);",0,0,0,1,2,0,0,0,0,3,35,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,354,        if (entry.map.containsKey(name)) {,4,0,0,2,5,0,4,0,0,8,34,5,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,357,"        entry.map.put(name, this);",4,0,0,1,2,0,4,0,0,8,26,5,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,358,        entry.list.add(this);,8,0,0,1,2,0,2,0,0,11,21,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,359,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,484,        Entry entry = new Entry();,6,1,0,1,2,3,10,2,0,24,26,1,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,485,        Class cls = enumClass.getSuperclass();,2,0,0,1,2,0,4,2,0,8,38,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,486,        while (cls != null && cls != Enum.class && cls != ValuedEnum.class) {,6,5,0,1,3,0,0,4,0,15,69,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,495,        return entry;,2,0,0,0,0,1,0,0,0,2,13,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,297,          super();,4,2,0,1,2,0,8,2,0,16,8,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,279,        final Map map = new HashMap();,2,0,0,1,2,1,0,4,0,7,30,3,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,283,        final Map unmodifiableMap = Collections.unmodifiableMap(map);,2,0,0,1,2,1,6,2,0,11,61,3,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,287,        final List list = new ArrayList(25);,2,0,0,1,2,1,0,4,0,7,36,3,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,291,        final List unmodifiableList = Collections.unmodifiableList(list);,2,0,0,1,2,1,6,2,0,11,65,3,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,298,        },0,0,0,0,1,0,0,0,0,1,1,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,335,        Class cls = getClass();,4,0,0,1,2,0,2,4,0,10,23,3,0.01515,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,336,        boolean ok = false;,0,0,0,0,0,0,0,0,0,0,19,4,0.01515,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,338,            if (cls == enumClass) {,4,1,0,1,3,0,0,0,0,5,23,6,0.01515,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,344,        if (ok == false) {,6,1,0,1,3,3,0,2,0,13,18,1,0.01515,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,185,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,312,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,270,    protected transient String iToString = null;,0,0,0,0,0,0,0,0,0,0,44,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,313,        init(name);,0,0,0,1,2,0,4,0,0,4,11,5,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,327,        if (StringUtils.isEmpty(name)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,331,        Class enumClass = getEnumClass();,0,0,0,1,2,0,0,0,0,3,33,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,332,        if (enumClass == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,337,        while (cls != null && cls != Enum.class && cls != ValuedEnum.class) {,6,5,0,1,3,0,0,4,0,15,69,4,0.01408,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,249,    private static final Map EMPTY_MAP = Collections.unmodifiableMap(new HashMap(0));,0,0,0,2,4,0,0,0,0,6,81,4,0.01389,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,254,    private static final Map cEnumClasses = new HashMap();,2,0,0,1,2,3,0,4,0,9,54,2,0.01389,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,161,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,162,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,203,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,6,0,0,7,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,223,        if (str == null || (strLen = str.length()) == 0) {,4,4,0,3,7,0,14,0,0,24,50,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,224,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,226,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,227,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,2,1,0,4,9,0,10,0,0,15,55,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,228,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,231,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,251,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,276,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,303,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,329,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,330,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,7,31,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,355,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,383,"        return strip(str, null);",10,1,0,1,2,1,0,0,0,12,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,410,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,411,            return null;,2,1,1,0,0,1,0,0,0,7,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,413,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,414,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,440,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,470,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,471,            return str;,2,1,0,0,0,1,0,0,0,3,11,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,473,"        str = stripStart(str, stripChars);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,474,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,503,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,504,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,506,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,507,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,508,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,2,3,0,4,9,0,4,0,0,9,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,509,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,511,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,512,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,514,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,8,4,0,5,11,0,10,0,0,23,76,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,515,                start++;,2,0,0,0,0,0,0,0,0,3,8,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,518,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,547,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,6,0,0,6,47,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,548,            return str;,20,2,0,0,0,1,4,2,0,30,11,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,551,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,552,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,4,9,0,0,0,0,13,67,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,553,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,555,        } else if (stripChars.length() == 0) {,2,1,0,2,6,0,4,0,0,7,38,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,543,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,546,        Calendar gval = Calendar.getInstance();,0,0,0,1,2,0,0,0,0,3,39,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,547,        gval.setTime(date);,0,0,0,1,2,0,0,0,0,3,19,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,548,"        modify(gval, field, false);",0,0,0,1,2,0,6,0,0,7,27,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,549,        return gval.getTime();,2,1,0,1,2,1,4,0,0,7,22,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,620,        if (val.get(Calendar.YEAR) > 280000000) {,4,1,0,2,5,0,4,0,0,9,41,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,641,        boolean roundUp = false;,0,0,0,0,0,0,0,0,0,0,24,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,642,        for (int i = 0; i < fields.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,643,            for (int j = 0; j < fields[i].length; j++) {,0,0,0,2,5,0,0,0,0,7,44,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,644,                if (fields[i][j] == field) {,2,1,1,3,7,0,0,0,0,9,28,8,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,646,                    if (round && roundUp) {,4,1,0,1,3,0,0,0,0,5,23,10,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,663,                    return;,0,0,0,0,0,1,4,0,0,5,7,11,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,667,            int offset = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,668,            boolean offsetSet = false;,2,0,0,0,0,0,0,0,0,4,26,3,0.25,0,0,-1
