dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,498,                    rule = TwoDigitYearField.INSTANCE;,2,0,0,0,0,3,0,0,0,5,34,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,500,                break;,2,0,0,0,0,3,2,2,0,10,6,2,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,546,"                rule = new TextField(Calendar.AM_PM, AmPmStrings);",8,0,0,1,2,0,0,2,0,11,50,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1023,            buffer.append(mValues[calendar.get(mField)]);,2,0,0,3,6,0,0,0,0,3,45,12,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1062,            } else if (value < 100) {,4,1,0,1,4,0,0,4,0,9,25,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,41,            int start = index + 2;,4,1,0,0,0,0,0,0,0,5,22,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,42,            boolean isHex = false;,2,0,0,0,0,0,0,0,0,3,22,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,44,            char firstChar = input.charAt(start);,2,0,0,1,2,0,6,0,0,8,37,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,46,                start++;,2,0,0,0,0,0,0,0,0,3,8,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3257,            return null;,2,0,0,0,0,4,4,2,0,12,12,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3256,        if (array == null) {,2,0,0,1,3,0,16,0,0,19,20,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3260,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3290,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3293,        int noOfItems = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,7,40,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3294,        if (noOfItems <= 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3298,        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,0,0,0,6,12,0,0,0,0,18,116,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3301,            if (i > startIndex) {,6,2,0,1,3,0,0,0,0,8,21,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3302,                buf.append(separator);,2,0,0,1,2,3,6,4,0,15,22,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3304,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3305,                buf.append(array[i]);,0,0,1,2,4,0,4,0,0,8,21,9,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3308,        return buf.toString();,0,0,1,1,2,1,0,0,0,9,22,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3230,"        return join(elements, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3336,            return null;,2,0,0,0,0,1,6,0,0,8,12,7,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3335,        if (array == null) {,4,0,0,1,3,0,0,0,0,5,20,8,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3338,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3369,        if (array == null) {,4,2,0,1,3,0,8,0,0,16,20,3,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3373,            separator = EMPTY;,2,1,0,0,0,0,0,0,0,3,18,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3378,        int noOfItems = (endIndex - startIndex);,8,1,0,1,2,0,0,0,0,9,40,3,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3383,        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());,8,2,1,7,14,0,8,6,0,33,133,1,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3386,            if (i > startIndex) {,4,1,0,1,3,0,0,0,0,5,21,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3389,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,147,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");",2,0,0,1,2,3,4,2,0,12,72,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,704,    private static boolean sunAvailable = false;,2,1,0,0,0,0,0,0,0,4,44,4,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,705,    private static Method  sunDecomposeMethod = null;,2,0,0,0,0,2,0,2,0,6,49,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,706,"    private static final Pattern sunPattern = Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");//$NON-NLS-1$",2,0,0,2,4,3,4,2,0,12,108,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,708,    private static boolean java6Available = false;,2,0,0,0,0,2,0,0,0,5,46,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,709,    private static Method  java6NormalizeMethod = null;,2,0,0,0,0,2,0,2,0,6,51,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,710,    private static Object  java6NormalizerFormNFD = null;,2,0,0,0,0,2,0,2,0,6,53,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,711,    private static final Pattern java6Pattern = sunPattern;,6,0,0,0,0,6,0,6,0,18,55,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,719,"            java6NormalizerFormNFD = normalizerFormClass.getField(""NFD"").get(null);//$NON-NLS-1$",8,0,0,2,4,0,0,2,0,11,84,9,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,720,            Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,73,6,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,724,            java6Available = true;,2,0,0,0,0,0,0,0,0,4,22,6,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,745,            sunAvailable = false;,2,0,0,0,0,0,0,0,0,4,21,7,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,727,        } catch (NoSuchFieldException e) {,2,0,1,1,4,0,0,2,0,7,34,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,728,            java6Available = false;,2,0,0,0,0,0,0,0,0,4,23,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,729,        } catch (IllegalAccessException e) {,2,0,0,1,4,0,0,2,0,4,36,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,730,            java6Available = false;,2,0,1,0,0,0,0,2,0,8,23,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,731,        } catch (NoSuchMethodException e) {,2,0,0,1,4,0,0,2,0,4,35,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,732,            java6Available = false;,2,0,0,0,0,0,0,0,0,4,23,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,741,            sunAvailable = true;,2,0,0,0,0,0,0,0,0,4,20,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,183,        return cs == null || cs.length() == 0;,2,0,0,1,2,1,0,0,0,2,38,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,223,        if (cs == null || (strLen = cs.length()) == 0) {,2,1,0,3,7,0,0,0,0,3,48,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,224,            return true;,4,1,0,0,0,1,0,0,0,5,12,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,281,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,389,            return null;,0,0,0,0,0,1,4,0,0,5,12,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,451,"        str = stripStart(str, stripChars);",16,2,1,1,2,0,14,0,0,39,34,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,452,"        return stripEnd(str, stripChars);",6,0,0,1,2,1,0,4,0,10,33,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,482,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,484,        int start = 0;,2,1,0,0,0,0,0,0,0,3,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,485,        if (stripChars == null) {,4,1,1,1,3,0,4,0,0,18,25,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,486,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,2,2,0,4,9,0,4,0,0,9,72,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1832,            super();,2,0,0,1,2,3,6,4,0,15,8,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1833,            this.endFinal = endFinal;,4,0,0,0,0,0,0,0,0,5,25,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1834,            spot = startFinal;,4,0,0,0,0,0,0,0,0,5,18,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1835,"            spot.add(Calendar.DATE, -1);",4,0,0,1,2,0,4,0,0,9,28,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1836,        },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1844,            return spot.before(endFinal);,0,0,0,1,2,1,6,0,0,6,29,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1854,                throw new NoSuchElementException();,4,0,0,1,2,0,0,2,0,7,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1856,"            spot.add(Calendar.DATE, 1);",0,0,0,1,2,0,6,0,0,6,27,13,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1857,            return (Calendar) spot.clone();,0,0,0,2,4,1,4,2,0,6,31,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,176,        if (date1 == null || date2 == null) {,2,0,0,1,3,0,6,0,0,8,37,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,179,        Calendar cal1 = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,181,        Calendar cal2 = Calendar.getInstance();,12,1,0,1,2,0,12,2,0,27,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,216,"            throw new ArithmeticException(""The denominator must not be zero"");",0,0,0,1,2,0,0,2,0,3,66,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,223,            numerator/=2; denominator/=2;,6,0,0,0,0,3,4,0,0,18,29,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,226,            if (numerator==Integer.MIN_VALUE ||,6,2,0,0,1,0,6,0,0,14,35,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,228,"                throw new ArithmeticException(""overflow: can't negate"");",0,0,0,1,2,0,0,2,0,3,56,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,230,            numerator = -numerator;,6,1,0,0,0,0,8,0,0,17,23,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,231,            denominator = -denominator;,4,0,0,0,0,0,0,0,0,6,27,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,475,        if (numerator == 0) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,476,            return equals(ZERO) ? this : ZERO;,2,0,0,1,2,1,4,0,0,6,34,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,478,"        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);",2,0,0,2,4,0,10,0,0,12,66,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,591,        if (u>0) { u=-u; } // make u negative,8,2,0,2,4,0,0,0,0,12,37,4,0.57143,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,592,        if (v>0) { v=-v; } // make v negative,6,1,0,2,4,0,0,0,0,9,37,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,594,        int k=0;,2,0,0,0,0,0,0,0,0,2,8,5,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,595,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,6,7,0,3,7,0,0,0,0,13,72,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,603,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,8,3,0,3,6,0,0,0,0,12,38,5,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,609,            while ((t&1)==0) { // while t is even..,2,2,0,2,5,0,0,0,0,4,39,6,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",2,0,0,1,2,3,0,4,0,10,69,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,2,0,0,1,2,3,0,4,0,10,68,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,4,0,0,1,2,3,0,4,0,14,69,1,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",2,0,0,2,4,3,2,4,0,12,94,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,2,0,0,1,2,3,0,4,0,9,65,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,2,0,0,1,2,3,0,4,0,10,77,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",2,0,0,2,4,3,2,4,0,12,88,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,285,            this.chars = chars.clone();,4,1,0,1,2,0,4,2,0,13,27,1,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,300,"            return Arrays.binarySearch(chars, buffer[pos]) >= 0 ? 1 : 0;",0,1,1,2,4,1,6,0,0,11,60,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,151,        ArrayList<Format> foundFormats = new ArrayList<Format>();,2,0,0,1,2,0,0,8,0,10,57,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,152,        ArrayList<String> foundDescriptions = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,62,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,153,        StringBuilder stripCustom = new StringBuilder(pattern.length());,4,0,0,2,4,3,6,6,0,20,64,1,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,156,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,454,            return null;,2,0,0,0,0,3,4,2,0,10,12,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,467,            return createInteger(str);,4,0,0,1,2,4,2,2,0,12,26,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,479,                if (expPos < decPos || expPos > str.length()) {,14,3,0,2,5,0,8,0,0,25,47,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,484,                dec = str.substring(decPos + 1);,6,1,1,1,2,0,4,0,0,14,32,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,486,"            mant = str.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,489,                if (expPos > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,500,"                exp = str.substring(expPos + 1, str.length() - 1);",12,3,0,2,4,0,8,0,0,25,50,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,525,                        Float f = NumberUtils.createFloat(numeric);,2,0,0,1,2,0,6,2,0,10,43,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,526,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,16,0,0,23,65,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,540,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,541,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,559,            if (expPos > -1 && expPos < str.length() - 1) {,6,5,0,2,5,0,8,0,0,20,47,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,560,"                exp = str.substring(expPos + 1, str.length());",6,1,0,2,4,3,8,0,0,19,46,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,562,                exp = null;,2,0,0,0,0,0,6,0,0,9,11,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,564,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,567,                    return createInteger(str);,2,0,0,1,2,1,4,4,0,10,26,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,568,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,572,                    return createLong(str);,10,0,0,1,2,1,4,2,0,17,23,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,573,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,576,                return createBigInteger(str);,2,1,0,1,2,1,4,0,0,7,29,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,580,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,582,                    Float f = createFloat(str);,6,2,0,1,2,0,4,0,0,13,27,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,583,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,584,                        return f;,2,0,0,0,0,1,0,0,0,2,9,12,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,590,                    Double d = createDouble(str);,6,0,0,1,2,1,4,4,0,15,29,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,456,        if (StringUtils.isBlank(str)) {,2,1,0,2,5,0,6,0,0,9,31,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,466,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,473,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,474,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,476,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,488,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,494,                mant = str;,6,1,0,0,0,0,0,0,0,8,11,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,496,            dec = null;,2,0,0,0,0,0,0,0,0,3,11,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,499,            if (expPos > -1 && expPos < str.length() - 1) {,6,5,0,2,5,0,4,0,0,16,47,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,507,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,510,                    if (dec == null,2,1,0,0,1,0,0,0,0,3,15,9,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,617,            if (str.charAt(i) != '0') {,2,0,0,2,5,0,4,0,0,7,27,9,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,635,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,651,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,668,        if (str == null) {,8,1,0,1,3,3,6,4,0,22,18,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,701,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,717,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,724,        return new BigDecimal(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,685,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1295,        if (StringUtils.isEmpty(str)) {,4,0,0,2,5,0,2,0,0,6,31,9,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1298,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1299,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,11,40,6,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,24,242,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,0,0,0,0,5,34,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,24,244,                return false;,0,4,0,0,0,1,12,0,0,18,13,6,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,43,    public static final Long LONG_ONE = new Long(1L);,4,0,0,1,2,0,6,0,0,10,49,3,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,0,0,0,1,2,0,4,0,0,5,56,8,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,49,    public static final Integer INTEGER_ONE = new Integer(1);,2,0,0,1,2,3,0,4,0,9,57,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,2,0,0,2,4,3,0,4,0,10,66,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,59,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,2,0,0,2,4,3,4,2,0,11,60,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,63,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,2,0,0,2,4,0,0,0,0,2,66,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,4,4,0,1,2,0,8,0,0,17,57,7,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,8,3,0,1,2,0,0,0,0,12,55,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,75,    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);,2,0,0,1,2,3,0,4,0,10,61,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,128,        if(str == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,129,            return defaultValue;,4,0,1,0,0,1,4,0,0,13,20,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,156,"        return toLong(str, 0L);",2,0,0,1,2,1,4,0,0,8,23,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,178,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,182,        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,229,      if (str == null) {,6,1,0,1,3,0,0,2,0,9,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,31,    private static final String[][] ISO8859_1_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,52,2,0.04545,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1171,            buffer.append(mValues[calendar.get(mField)]);,0,0,1,3,6,0,10,0,0,12,45,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1130,            buffer.append(mValue);,0,0,0,1,2,0,6,0,0,6,22,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,820,        Calendar c = new GregorianCalendar(mTimeZone);,4,0,0,1,2,0,0,4,0,8,46,4,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,822,"        return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();",2,0,0,3,6,1,6,2,0,10,70,5,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1115,        StringLiteral(String value) {,6,0,0,1,3,3,2,4,0,16,29,1,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1116,            mValue = value;,10,0,0,0,0,0,4,0,0,15,15,1,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1117,        },2,2,1,0,1,0,4,4,0,21,1,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1348,"            appendTo(buffer, calendar.get(mField));",2,0,0,2,4,0,14,0,0,16,39,1,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1349,        },0,0,0,0,1,0,6,0,0,7,1,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1356,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,645,"                rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);",2,0,0,1,2,0,4,0,0,6,84,5,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,646,                break;,0,0,0,0,0,0,4,0,0,5,6,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,687,                    rule = new StringLiteral(sub);,4,0,0,1,2,0,0,2,0,7,30,9,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,743,                        inLiteral = !inLiteral;,0,0,0,0,0,0,6,0,0,6,23,5,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1148,"        TextField(int field, String[] values) {",2,0,0,2,5,0,0,0,0,3,39,7,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1149,            mField = field;,4,0,0,0,0,0,0,0,0,5,15,5,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1150,            mValues = values;,6,1,0,0,0,0,0,0,0,8,17,1,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1157,            int max = 0;,2,0,0,0,0,0,0,0,0,2,12,6,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1158,            for (int i=mValues.length; --i >= 0; ) {,8,1,0,1,3,0,0,0,0,10,40,5,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1159,                int len = mValues[i].length();,2,0,1,2,4,0,12,0,0,19,30,1,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1160,                if (len > max) {,4,1,0,1,3,0,0,0,0,5,16,7,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,478,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,484,                dec = str.substring(decPos + 1);,4,1,0,1,2,0,4,0,0,10,32,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,523,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,526,                            return f;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,536,                        Double d = NumberUtils.createDouble(numeric);,0,0,0,1,2,0,8,0,0,8,45,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,537,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,538,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,557,"                exp = str.substring(expPos + 1, str.length());",2,1,0,2,4,0,0,0,0,3,46,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,559,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,561,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,565,                } catch (NumberFormatException nfe) {,4,0,0,1,4,0,4,2,0,12,37,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,577,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,579,                    Float f = createFloat(str);,2,0,0,1,2,0,4,2,0,8,27,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,580,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,4,3,0,5,11,2,8,4,0,23,65,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,581,                        return f;,4,0,0,0,0,3,0,4,0,10,9,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,587,                    Double d = createDouble(str);,8,0,0,1,2,0,0,4,0,12,29,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,459,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,2,0,0,4,27,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,466,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",6,0,0,3,7,0,0,4,0,10,52,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,469,        char lastChar = str.charAt(str.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,473,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,476,        if (decPos > -1) {,2,0,0,1,3,0,0,2,0,4,18,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,488,            if (expPos > -1) {,8,1,0,1,3,0,4,2,0,17,18,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,491,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,493,            dec = null;,4,0,0,0,0,0,0,0,0,5,11,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,499,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,502,"            String numeric = str.substring(0, str.length() - 1);",2,1,0,2,4,0,8,2,0,13,52,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,503,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,504,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,507,                    if (dec == null,2,2,0,0,1,0,8,0,0,12,15,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,613,        for (int i = str.length() - 1; i >= 0; i--) {,2,0,0,2,5,0,4,0,0,8,45,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,614,            if (str.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,27,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,632,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,635,        return Float.valueOf(str);,0,1,0,1,2,1,24,0,0,25,26,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,648,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,651,        return Double.valueOf(str);,6,0,0,1,2,1,6,0,0,13,27,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,665,        if (str == null) {,4,2,0,1,3,0,10,0,0,16,18,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,669,        return Integer.decode(str);,8,3,0,1,2,1,0,0,0,12,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,698,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,701,        return new BigInteger(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,718,        if (StringUtils.isBlank(str)) {,2,1,0,2,5,0,6,0,0,9,31,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,721,        return new BigDecimal(str);,2,0,0,1,2,2,0,0,0,3,27,2,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,682,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,685,        return Long.valueOf(str);,2,1,0,1,2,1,6,0,0,9,25,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1292,        if (StringUtils.isEmpty(str)) {,2,0,0,2,5,0,6,0,0,8,31,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1295,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1300,        return true;,0,0,0,0,0,1,0,2,0,4,12,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,27,237,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,2,1,0,4,9,0,8,2,0,14,54,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,41,    public static final Long LONG_ZERO = new Long(0L);,2,0,0,1,2,3,0,4,0,9,50,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,43,    public static final Long LONG_ONE = new Long(1L);,4,0,0,1,2,4,0,8,0,16,49,1,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,47,    public static final Integer INTEGER_ZERO = new Integer(0);,0,0,0,1,2,0,10,0,0,10,58,5,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,49,    public static final Integer INTEGER_ONE = new Integer(1);,10,1,0,1,2,3,6,4,0,25,57,1,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,51,    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);,4,0,0,1,2,6,0,16,0,27,64,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,53,    public static final Short SHORT_ZERO = new Short((short) 0);,4,0,0,2,4,0,0,0,0,5,60,6,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,55,    public static final Short SHORT_ONE = new Short((short) 1);,2,0,0,2,4,3,0,4,0,9,59,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,2,0,0,2,4,3,0,4,0,10,66,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,59,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,2,0,0,2,4,3,4,2,0,11,60,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,63,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,6,0,0,2,4,3,4,6,0,20,66,1,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,2,0,0,1,2,3,0,4,0,9,57,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,69,    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);,2,1,0,1,2,0,0,0,0,3,64,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,4,0,0,1,2,4,0,6,0,14,55,1,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,75,    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);,2,0,0,1,2,3,0,4,0,10,61,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1821,        super();,10,3,0,1,2,0,10,0,0,23,8,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1822,    },0,0,0,0,1,0,6,0,0,6,1,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,104,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,184,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",4,0,0,1,2,3,6,6,0,20,92,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,206,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",4,0,0,1,2,3,2,2,0,12,86,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,225,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,1,0,1,2,0,8,0,0,11,90,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,321,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,0,4,0,0,7,78,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,398,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,3,2,2,0,10,86,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,514,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,1,1,2,3,2,2,0,14,74,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,533,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,1,0,1,2,0,2,0,0,5,82,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,572,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,1,0,1,2,0,4,0,0,7,76,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,591,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",6,1,0,1,2,3,2,2,0,15,76,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,57,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);",2,0,0,3,6,0,14,0,0,17,77,10,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,            return 2 + (end - start) + (isHex ? 1 : 0) + 1;,6,2,0,2,4,1,0,0,0,8,47,6,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1717,            return ArrayUtils.EMPTY_INT_ARRAY;,4,0,0,0,0,1,0,0,0,4,34,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,4,0,0,2,4,5,0,4,0,13,74,1,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,4,0,0,2,4,6,4,2,0,17,61,1,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,22,7,0,2,4,6,8,4,0,51,64,1,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,8,3,0,2,4,3,16,6,0,37,74,1,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,4,4,0,15,80,1,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,104,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,127,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,0,4,0,9,78,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,146,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",4,0,0,1,2,3,6,4,0,18,80,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,165,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",6,0,0,1,2,3,2,2,0,15,80,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,184,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",4,1,0,1,2,3,2,2,0,13,92,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,206,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,225,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,244,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,263,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,283,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,302,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",2,0,0,1,2,3,2,2,0,10,88,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,321,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",4,0,0,1,2,6,2,2,0,15,78,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,340,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,4,0,0,1,2,3,8,4,0,19,72,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,359,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,2,0,0,1,2,3,4,2,0,11,82,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,378,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",10,3,0,1,2,6,8,6,0,34,86,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,398,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,0,0,0,0,2,86,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,437,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",2,0,0,1,2,3,2,2,0,10,98,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,456,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,102,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,475,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",2,0,0,1,2,3,2,2,0,10,104,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,495,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = getSystemProperty(""java.util.prefs.PreferencesFactory"");",10,1,0,1,2,3,2,2,0,20,121,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,514,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,0,1,2,3,2,2,0,10,74,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,533,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,0,0,1,2,3,2,2,0,10,82,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,552,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",4,0,0,1,2,3,2,4,0,14,76,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,572,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,2,0,10,76,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,591,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,610,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,629,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,108,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,648,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,724,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,743,"    public static final String OS_NAME = getSystemProperty(""os.name"");",6,3,0,1,2,0,8,0,0,17,66,3,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,781,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,802,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ? getSystemProperty(""user.region"")",0,0,0,2,4,0,6,0,0,6,118,5,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,880,"    public static final String USER_NAME = getSystemProperty(""user.name"");",2,0,0,1,2,3,2,2,0,10,70,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,899,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,917,    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();,2,0,0,1,2,3,2,2,0,9,74,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,964,    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();,2,0,0,1,2,3,2,0,0,7,65,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,980,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,991,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",2,1,0,1,2,0,0,0,0,3,71,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1013,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",2,0,0,1,2,0,0,2,0,4,71,5,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1024,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1035,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1069,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",2,0,0,1,2,3,2,0,0,8,64,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1082,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",6,1,0,1,2,6,4,0,0,20,68,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1095,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",4,1,0,1,2,3,2,0,0,11,66,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1134,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",4,0,0,1,2,3,6,2,0,17,73,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1147,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",6,0,0,1,2,3,2,0,0,13,65,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1160,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",2,0,0,1,2,3,2,0,0,8,72,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1186,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX || IS_OS_SOLARIS,14,2,0,0,0,3,4,0,0,23,128,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,        if (cs == null || searchChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,        int csLen = cs.length();,2,1,0,1,2,0,0,0,0,3,24,5,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,            for (int j = 0; j < searchLen; j++) {,8,1,0,1,3,0,0,0,0,10,37,6,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,                        return false;,4,0,0,0,0,1,10,0,0,15,13,3,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3279,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,1.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1715,        if (cs == null || invalidChars == null) {,2,0,0,1,3,0,0,0,0,2,41,4,0.44444,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1372,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,53,4,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1375,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1376,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1377,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1379,            for (int j = 0; j < searchLen; j++) {,14,2,0,1,3,0,0,0,0,18,37,3,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1380,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,194,        return cs == null || cs.length() == 0;,2,3,0,1,2,1,4,0,0,9,38,4,0.37113,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1447,        int csLength = cs.length();,2,0,0,1,2,0,4,0,0,6,27,5,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1449,        int csLast = csLength - 1;,4,1,0,0,0,0,0,0,0,5,26,5,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1450,        int searchLast = searchLength - 1;,4,1,0,0,0,0,0,0,0,5,34,5,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1451,        for (int i = 0; i < csLength; i++) {,8,1,0,1,3,0,0,0,0,10,36,4,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1452,            char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1453,            for (int j = 0; j < searchLength; j++) {,8,1,0,1,3,0,0,0,0,10,40,6,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1455,                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {,2,1,0,1,3,0,0,0,0,3,111,4,0.28571,1,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,10,64,2,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,4,0,0,2,4,3,8,8,0,24,64,1,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,6,0,0,11,55,1,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,2,0,1,2,4,0,2,0,0,11,61,1,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,0,0,0,0,3,68,12,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,0,0,2,4,3,0,4,0,9,58,2,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1570,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1575,            char ch = str.charAt(i);,4,2,0,1,2,0,10,0,0,16,24,6,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1576,            if (searchChars.indexOf(ch) < 0) {,4,2,0,2,5,0,10,0,0,16,34,3,0.1,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1577,                    return i;,2,0,0,0,0,4,2,0,0,8,9,2,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1498,        if (searchChars == null) {,2,1,0,1,3,0,0,0,0,3,26,4,0.09091,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1501,"        return containsAny(cs, searchChars.toCharArray());",2,0,0,2,4,1,4,0,0,6,50,7,0.09091,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1542,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.08333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1537,            for (int j = 0; j < searchLen; j++) {,8,0,0,1,3,0,2,0,0,10,37,8,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1538,                if (searchChars[j] == ch) {,2,1,0,2,5,0,0,0,0,3,27,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,162,"        return toString(array, ""{}"");",0,0,0,2,4,1,4,0,0,5,29,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,179,            return stringIfNull;,2,1,0,0,0,1,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,227,            return null;,4,0,0,0,0,1,4,4,0,12,12,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,229,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",6,1,0,3,6,1,0,12,0,20,88,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,230,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,231,            Object object = array[i];,4,1,1,1,2,0,0,2,0,11,25,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,234,"                map.put(entry.getKey(), entry.getValue());",2,1,1,3,6,0,12,2,0,19,42,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,237,                if (entry.length < 2) {,8,2,0,1,3,0,4,0,0,15,23,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,243,            } else {,2,0,0,0,2,0,0,0,0,2,8,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,244,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,10,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,249,        return map;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,313,            return null;,2,0,1,0,0,1,10,2,0,22,12,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,331,        return array.clone();,0,1,0,1,2,1,12,0,0,14,21,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,344,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,376,        if (array == null) {,6,1,0,1,3,0,0,0,0,8,20,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,393,            return null;,2,1,0,0,0,1,8,0,0,11,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,408,        if (array == null) {,4,1,0,1,3,0,0,2,0,8,20,14,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,443,        return array.clone();,2,2,0,1,2,1,8,0,0,12,21,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,462,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,465,        return array;,2,0,0,0,0,1,0,0,0,3,13,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,482,        if (array == null || array.length == 0) {,12,4,0,1,3,0,0,0,0,17,41,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,483,            return EMPTY_STRING_ARRAY;,2,0,0,0,0,1,10,0,0,12,26,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,485,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,502,        if (array == null || array.length == 0) {,14,4,0,1,3,1,0,4,0,24,41,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,522,        if (array == null || array.length == 0) {,8,3,0,1,3,0,4,2,0,17,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,525,        return array;,2,0,0,0,0,1,0,0,0,3,13,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,542,        if (array == null || array.length == 0) {,6,3,0,1,3,0,10,0,0,19,41,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,543,            return EMPTY_SHORT_ARRAY;,2,1,0,0,0,1,16,0,0,24,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,565,        return array;,4,0,0,0,0,1,0,0,0,4,13,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,583,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,4,0,0,7,24,11,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,585,        return array;,2,0,0,0,0,1,4,0,0,6,13,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,603,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,622,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,625,        return array;,0,0,0,0,0,1,8,0,0,9,13,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,643,            return EMPTY_BOOLEAN_ARRAY;,20,2,0,0,0,1,6,0,0,32,27,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,645,        return array;,0,0,0,0,0,1,4,0,0,5,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,662,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1441,		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,14,0,0,17,53,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1445,		int searchLength = searchChars.length;,0,0,0,0,0,0,4,0,0,4,38,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1447,			char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1449,				if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1452,						return true;,0,0,0,0,0,1,0,0,0,1,12,10,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1490,"        return containsAny(cs, searchChars.toCharArray());",4,0,0,2,4,1,14,4,0,22,50,1,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,194,        return cs == null || cs.length() == 0;,2,3,0,1,2,1,12,0,0,18,38,4,0.04396,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,4,1,0,2,4,3,0,4,0,12,64,1,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,4,0,0,2,4,3,0,0,0,7,61,1,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,0,0,2,4,3,2,0,0,9,58,1,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,0,0,2,4,0,0,0,0,2,58,5,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,232,        if (cs == null || (strLen = cs.length()) == 0) {,2,0,0,3,7,0,2,2,0,6,48,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,235,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,289,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,341,        return str == null ? EMPTY : str.trim();,2,0,0,1,2,4,0,0,0,5,40,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,369,"        return strip(str, null);",2,0,0,1,2,4,0,4,0,9,24,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,396,        if (str == null) {,4,1,0,1,3,3,0,0,0,8,18,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,399,"        str = strip(str, null);",2,0,0,1,2,0,4,0,0,8,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,426,"        return str == null ? EMPTY : strip(str, null);",4,1,0,1,2,4,2,0,0,11,46,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,459,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,489,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,490,            return str;,4,1,0,0,0,1,0,0,0,5,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,493,        if (stripChars == null) {,6,1,0,1,3,0,10,0,0,19,25,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,495,                start++;,2,0,0,0,0,0,0,0,0,3,8,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,497,        } else if (stripChars.length() == 0) {,0,1,0,2,6,0,4,0,0,5,38,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,500,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND)) {,8,3,0,5,11,3,12,0,0,27,89,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,534,            return str;,6,1,0,0,0,1,0,0,0,7,11,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,545,                end--;,4,0,0,0,0,3,0,4,0,13,6,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,548,"        return str.substring(0, end);",2,1,0,1,2,1,4,0,0,7,29,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,603,        if (strs == null || (strsLen = strs.length) == 0) {,8,3,0,2,5,0,0,0,0,12,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,607,        for (int i = 0; i < strsLen; i++) {,10,1,0,1,3,0,4,2,0,18,35,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,608,"            newArr[i] = strip(strs[i], stripChars);",6,0,0,3,6,0,6,0,0,14,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,610,        return newArr;,4,0,0,0,0,1,4,0,0,8,14,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,633,        if(SystemUtils.isJavaVersionAtLeast(1.6f)) {,2,0,0,2,5,0,0,0,0,2,44,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,640,"                Class<?> normalizerFormClass = ClassUtils.getClass(""java.text.Normalizer$Form"", false);",2,0,0,1,2,0,4,2,0,10,87,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,643,"                Class<?> normalizerClass = ClassUtils.getClass(""java.text.Normalizer"", false);",0,0,0,1,2,0,6,0,0,7,78,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,646,"                java.lang.reflect.Method method = normalizerClass.getMethod(""normalize"", CharSequence.class, normalizerFormClass );",6,3,0,1,2,0,4,0,0,14,115,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,649,"                java.lang.reflect.Field nfd = normalizerFormClass.getField(""NFD"");",10,0,0,1,2,0,4,0,0,15,66,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,652,"                String decomposed = (String) method.invoke( null, input, nfd.get(null) );",0,0,0,3,6,0,4,0,0,4,73,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,655,"                java.util.regex.Pattern accentPattern = java.util.regex.Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");",18,0,0,2,4,0,2,0,0,21,109,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,657,            } catch(ClassNotFoundException cnfe) {,6,0,0,1,4,0,0,2,0,9,38,0,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,659,            } catch(NoSuchMethodException nsme) {,2,1,0,1,4,0,0,0,0,3,37,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,660,"                throw new RuntimeException(""NoSuchMethodException occurred during 1.6 backcompat code"", nsme);",6,0,0,1,2,1,0,4,0,12,94,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,661,            } catch(NoSuchFieldException nsfe) {,2,0,0,1,4,0,0,2,0,4,36,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,665,            } catch(IllegalArgumentException iae) {,6,0,0,1,4,0,6,0,0,12,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,667,            } catch(java.lang.reflect.InvocationTargetException ite) {,4,2,0,1,4,0,6,0,0,12,58,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,668,"                throw new RuntimeException(""InvocationTargetException occurred during 1.6 backcompat code"", ite);",4,0,1,1,2,0,6,2,0,17,97,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,669,            } catch(SecurityException se) {,6,1,0,1,4,0,4,0,0,13,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,673,"            throw new UnsupportedOperationException(""The stripAccents(String) method is not supported until Java 1.6"");",0,0,0,2,4,0,6,2,0,9,107,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,700,        return cs1 == null ? cs2 == null : cs1.equals(cs2);,8,3,0,1,2,1,12,2,0,25,51,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,725,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,6,2,0,1,2,1,0,0,0,9,65,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,750,        if (isEmpty(str)) {,4,0,0,2,5,0,0,0,0,4,19,11,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,753,        return str.indexOf(searchChar);,0,0,0,1,2,1,6,0,0,6,31,11,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,783,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,10,0,0,13,23,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,812,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,813,            return INDEX_NOT_FOUND;,8,3,0,0,0,1,12,0,0,24,23,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,909,        if (str == null || searchStr == null || ordinal <= 0) {,6,1,0,1,3,0,0,0,0,7,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,913,            return lastIndex ? str.length() : 0;,2,0,0,1,2,4,2,2,0,10,36,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,916,        int index = lastIndex ? str.length() : INDEX_NOT_FOUND;,0,0,0,1,2,0,8,0,0,8,55,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,918,            if(lastIndex) {,2,0,0,1,3,0,6,0,0,9,15,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,924,                return index;,8,1,0,0,0,4,2,0,0,16,13,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,926,            found++;,0,1,0,0,0,0,6,0,0,7,8,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,927,        } while (found < ordinal);,2,0,1,1,3,0,0,2,0,8,26,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,956,"        return indexOfIgnoreCase(str, searchStr, 0);",0,0,0,1,2,1,0,0,0,1,44,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,992,            return INDEX_NOT_FOUND;,2,0,0,0,0,4,2,2,0,10,23,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,998,        if (startPos > endLimit) {,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1006,                return i;,4,0,1,0,0,1,2,0,0,11,9,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1034,        if (isEmpty(str)) {,2,0,0,2,5,3,6,2,0,13,19,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,152,        return getRegistry().contains(new IDKey(value));,2,0,0,3,6,1,4,2,0,8,48,5,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,173,        if (isRegistered(object)) {,2,0,0,2,5,0,10,0,0,13,27,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,177,            register(object);,0,0,0,1,2,0,4,0,0,4,17,7,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,179,"            AccessibleObject.setAccessible(fields, true);",0,0,0,1,2,0,6,0,0,7,45,7,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,180,            for (Field field : fields) {,4,0,0,1,3,0,0,2,0,6,28,6,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,181,"                if (!ArrayUtils.contains(excludeFields, field.getName())",0,0,0,2,5,0,10,0,0,11,56,11,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,196,            unregister(object);,6,2,0,1,2,0,4,0,0,12,19,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,360,        Class<?> clazz = object.getClass();,4,0,0,1,2,3,8,4,0,19,35,1,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,361,"        reflectionAppend(object, clazz, builder, testTransients, excludeFields);",0,0,0,1,2,0,12,0,0,12,72,5,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,362,        while (clazz.getSuperclass() != null && clazz != reflectUpToClass) {,4,3,0,2,5,0,4,0,0,11,68,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,364,"            reflectionAppend(object, clazz, builder, testTransients, excludeFields);",0,0,0,1,2,0,12,0,0,12,72,7,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,366,        return builder.toHashCode();,2,0,1,1,2,1,8,0,0,14,28,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,522,        getRegistry().add(new IDKey(value));,6,0,0,3,6,0,8,4,0,18,36,1,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,523,    },2,1,0,0,1,0,0,0,0,3,1,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,538,        getRegistry().remove(new IDKey(value));,2,0,0,3,6,0,4,2,0,8,39,5,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,539,    },4,0,0,0,1,1,0,2,0,7,1,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,40,        public IDKey(Object _value) {,4,0,0,1,3,1,0,2,0,7,29,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,46,            value = _value;,8,0,0,0,0,0,10,0,0,21,15,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,55,           return id;,2,0,0,0,0,1,0,0,0,2,10,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,65,            if (!(other instanceof IDKey)) {,4,2,0,2,5,1,4,4,0,15,32,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,68,            IDKey idKey = (IDKey) other;,4,0,0,1,2,0,0,4,0,8,28,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,69,            if (id != idKey.id) {,6,1,0,1,3,0,0,0,0,7,21,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,73,            return value == idKey.value;,6,1,0,0,0,1,0,0,0,7,28,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,4,0,0,2,4,4,4,4,0,17,65,1,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,2,0,2,4,0,10,0,0,16,58,6,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,0,0,0,0,3,65,8,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,6,0,0,12,64,1,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1646,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1730,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",6,5,0,1,2,1,16,0,0,28,55,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,359,"        HashCodeBuilder builder = new HashCodeBuilder(initialNonZeroOddNumber, multiplierNonZeroOddNumber);",6,0,0,1,2,0,0,4,0,10,99,4,0.09091,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,883,                iTotal = iTotal * iConstant + object.hashCode();,6,2,0,1,2,0,4,0,0,13,48,8,0.08333,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,855,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,859,            if(object.getClass().isArray()) {,2,0,0,3,7,0,0,2,0,4,33,6,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,585,        if (multiplierNonZeroOddNumber == 0) {,2,1,0,1,3,0,0,0,0,3,38,4,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,588,        if (multiplierNonZeroOddNumber % 2 == 0) {,2,2,0,1,3,0,0,0,0,4,42,4,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,591,        iConstant = multiplierNonZeroOddNumber;,14,1,0,0,0,0,0,0,0,17,39,3,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,578,"    public HashCodeBuilder(int initialNonZeroOddNumber, int multiplierNonZeroOddNumber) {",12,1,0,1,3,4,4,2,0,24,85,1,0.02326,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,579,        if (initialNonZeroOddNumber == 0) {,2,1,0,1,3,0,0,0,0,3,35,4,0.02326,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,104,    private static final ThreadLocal<Set<IDKey>> REGISTRY = new ThreadLocal<Set<IDKey>>() {,2,0,0,1,3,3,0,12,0,17,87,2,0.02273,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,104,    private static final ThreadLocal<Set<IDKey>> REGISTRY = new ThreadLocal<Set<IDKey>>() {,2,0,0,1,3,3,0,12,0,17,87,2,0.02273,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,556,    public HashCodeBuilder() {,6,2,0,1,3,0,14,2,0,25,26,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,557,        iConstant = 37;,2,0,0,0,0,0,0,0,0,3,15,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,586,"            throw new IllegalArgumentException(""HashCodeBuilder requires a non zero multiplier"");",2,0,0,1,2,0,0,4,0,7,85,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,188,                    } catch (IllegalAccessException e) {,2,0,0,1,4,0,0,2,0,4,36,12,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,4,0,0,2,4,0,6,0,0,10,68,5,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,2,0,0,2,4,3,0,4,0,9,71,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,4,0,0,2,4,6,0,0,0,10,67,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,1,0,2,4,0,0,0,0,3,58,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,4,0,0,1,2,6,6,2,0,18,86,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,2,0,0,1,2,3,6,2,0,13,94,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",4,0,0,1,2,0,4,2,0,10,53,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",6,0,0,1,2,3,6,4,0,20,47,1,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",4,0,0,1,2,0,4,2,0,10,57,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",6,0,0,1,2,3,6,4,0,20,47,1,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",4,0,0,1,2,0,4,2,0,10,51,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",10,0,0,1,2,3,8,2,0,24,46,1,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",6,0,0,1,2,3,6,12,0,27,101,1,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,92,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,2,0,0,1,2,0,6,2,0,10,64,6,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,94,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,1,2,0,8,0,0,8,54,9,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,96,        },2,0,0,0,1,0,0,2,0,4,1,6,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,102,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",4,0,0,1,2,6,2,12,0,25,89,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,107,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",2,0,0,1,2,3,0,12,0,17,96,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,125,"        addAbbreviation(""boolean"", ""Z"");",0,0,0,1,2,0,2,0,0,4,32,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,132,    },2,0,0,0,1,3,4,2,0,12,1,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,143,      super();,2,1,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,144,    },2,0,0,0,1,3,0,4,0,10,1,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,157,            return valueIfNull;,4,0,0,0,0,4,2,0,0,10,19,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,159,        return getShortClassName(object.getClass());,6,2,0,2,4,4,4,4,0,20,44,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,169,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,170,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,172,        return getShortClassName(cls.getName());,6,3,0,2,4,3,20,0,0,33,40,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,184,        if (className == null) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,185,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,187,        if (className.length() == 0) {,2,1,0,2,5,3,6,0,0,13,30,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,188,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,5,25,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,191,        StringBuilder arrayPrefix = new StringBuilder();,2,0,0,1,2,0,4,4,0,10,48,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,194,"        if (className.startsWith(""["")) {",0,0,0,2,6,0,4,0,0,5,32,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,195,            while (className.charAt(0) == '[') {,0,1,0,2,6,0,4,0,0,6,36,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,206,            className = reverseAbbreviationMap.get(className);,6,1,0,1,2,0,10,0,0,19,50,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,210,        int innerIdx = className.indexOf(,2,1,0,0,1,0,0,0,0,3,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,214,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,229,        if (object == null) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,230,            return valueIfNull;,2,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,232,        return getPackageName(object.getClass());,0,0,0,2,4,1,6,0,0,6,41,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,242,        if (cls == null) {,8,1,1,1,3,0,0,6,0,20,18,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,259,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,264,            className = className.substring(1);,2,0,0,1,2,0,4,0,0,7,35,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,268,            className = className.substring(1);,2,0,0,1,2,0,0,0,0,3,35,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,272,        if (i == -1) {,2,1,0,1,3,0,0,0,0,4,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,273,            return StringUtils.EMPTY;,4,1,0,0,0,1,0,2,0,10,25,0,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,155,        return ReflectionToStringBuilder.toString(object);,2,0,0,1,2,4,6,4,0,15,50,1,135.2,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,473,"        super(object, style, buffer);",6,0,0,1,2,0,0,0,0,6,29,4,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,477,    },8,1,1,0,1,0,0,0,0,14,1,6,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,290,"        return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)",12,0,0,1,2,1,4,4,0,21,108,1,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,924,        int length = Array.getLength(array);,2,0,0,1,2,0,6,0,0,8,36,5,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,925,        for (int i = 0; i < length; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,926,"            Object item = Array.get(array, i);",4,0,0,1,2,0,14,2,0,20,34,6,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,927,            if (i > 0) {,2,1,0,1,3,0,0,0,0,3,12,6,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,938,    },2,0,0,0,1,3,0,4,0,9,1,2,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,527,            this.reflectionAppendArray(this.getObject());,0,0,0,2,4,0,4,0,0,4,45,7,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,528,            return;,2,0,0,0,0,4,2,2,0,10,7,2,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,622,"        this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);",2,0,0,3,6,3,8,4,0,17,81,1,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,623,        return this;,2,0,0,0,0,1,4,2,0,8,12,4,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,683,        this.upToClass = clazz;,4,0,0,0,0,0,0,0,0,5,23,4,67.6,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,677,        if (clazz != null) {,2,1,0,1,3,0,0,0,0,3,20,4,61.45455,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,1045,        return style;,2,0,0,0,0,1,0,0,0,2,13,4,44.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,701,            clazz = clazz.getSuperclass();,2,0,0,1,2,0,4,0,0,7,30,6,39.76471,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,702,            this.appendFieldsIn(clazz);,0,0,0,1,2,0,6,0,0,8,27,1,39.76471,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,526,        if (clazz.isArray()) {,2,1,1,2,5,0,0,0,0,7,22,8,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,530,        Field[] fields = clazz.getDeclaredFields();,2,0,0,2,4,0,4,2,0,8,43,4,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,531,"        AccessibleObject.setAccessible(fields, true);",2,1,0,1,2,0,6,0,0,10,45,3,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,532,        for (Field field : fields) {,4,0,0,1,3,0,0,2,0,6,28,4,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,700,        while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {,2,3,0,3,7,0,6,0,0,11,71,4,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,704,        return super.toString();,2,0,0,1,2,1,0,0,0,2,24,5,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,695,        if (this.getObject() == null) {,0,1,0,2,5,0,2,0,0,3,31,4,33.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,387,    private Class<?> upToClass = null;,2,0,0,0,0,0,0,0,0,2,34,7,30.72727,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1469,            buffer.append('@');,0,0,0,1,2,0,4,0,0,5,19,7,9.59211,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,163,"        Map<Object, Object> m = getRegistry();",2,0,0,1,2,0,2,6,0,10,38,4,8.67857,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,120,        return defaultStyle;,10,0,0,0,0,4,0,12,0,25,20,1,7.07767,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,209,                    if (m.isEmpty()) {,0,0,0,2,5,0,4,0,0,4,18,11,7.00962,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3290,        if (array != null){,2,1,0,1,3,0,0,0,0,3,19,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3299,        newArray[newArray.length - 1] = element;,2,1,0,1,2,0,0,0,0,3,40,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3300,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3535,"        return Array.newInstance(newArrayComponentType, 1);",2,1,0,1,2,1,6,0,0,10,51,3,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3529,        if (array != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,58,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,62,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,4,0,0,2,4,3,6,6,0,19,64,1,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,66,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,78,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,6,2,0,2,4,3,4,4,0,19,74,1,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,90,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,0,0,2,4,0,0,0,0,5,58,10,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,94,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,6,0,0,2,4,3,0,4,0,14,65,1,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,98,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,0,0,5,64,2,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,102,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,4,0,0,2,4,3,4,2,0,13,71,1,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,114,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,179,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",2,0,0,3,6,4,8,2,0,17,87,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,225,            return null;,0,1,0,0,0,1,12,0,0,13,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,227,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",8,2,0,3,6,1,0,12,0,23,88,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,229,            Object object = array[i];,4,0,0,1,2,0,0,4,0,8,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,230,"            if (object instanceof Map.Entry<?, ?>) {",6,0,0,1,3,0,0,0,0,6,40,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,231,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",2,0,0,1,2,0,0,0,0,4,47,10,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,233,            } else if (object instanceof Object[]) {,0,0,0,2,6,0,4,0,0,4,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,234,                Object[] entry = (Object[]) object;,4,0,0,3,6,0,0,4,0,8,35,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,235,                if (entry.length < 2) {,4,1,0,1,3,0,0,0,0,5,23,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,236,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,12,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,240,"                map.put(entry[0], entry[1]);",0,0,1,3,6,0,10,0,0,14,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,241,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,326,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,342,        if (array == null) {,10,4,0,1,3,0,0,0,0,15,20,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,343,            return null;,4,0,0,0,0,1,6,0,0,10,12,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,358,        if (array == null) {,8,1,0,1,3,3,0,4,0,16,20,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,361,        return array.clone();,4,0,0,1,2,4,4,2,0,14,21,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,374,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,406,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,449,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,455,"        if (str.startsWith(""--"")) {",8,1,0,2,5,0,4,0,0,15,27,3,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,462,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,465,        char lastChar = str.charAt(str.length() - 1);,12,2,0,2,4,3,8,0,0,26,45,1,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,469,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,470,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,472,        if (decPos > -1) {,10,2,0,1,3,0,0,0,0,14,18,3,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,484,            if (expPos > -1) {,4,2,0,1,3,0,0,0,0,7,18,6,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,489,            dec = null;,4,0,0,0,0,0,4,0,0,10,11,5,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,491,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,0,6,0,0,7,35,4,4.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,492,            if (expPos > -1 && expPos < str.length() - 1) {,6,4,0,2,5,1,4,4,0,20,47,1,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,495,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,499,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,500,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,503,                    if (dec == null,12,2,0,0,1,0,8,0,0,22,15,3,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,606,        if (str == null) {,4,1,0,1,3,3,0,4,0,12,18,1,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,609,        for (int i = str.length() - 1; i >= 0; i--) {,0,0,0,2,5,0,0,0,0,1,45,6,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,628,        if (str == null) {,0,0,1,1,3,0,10,0,0,12,18,6,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,661,        if (str == null) {,6,1,0,1,3,0,0,0,0,8,18,3,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,694,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,697,        return new BigInteger(str);,4,0,0,1,2,4,0,2,0,9,27,1,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,710,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,714,        if (StringUtils.isBlank(str)) {,2,0,0,2,5,3,10,2,0,17,31,1,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,678,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1291,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,36,191,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,36,229,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,36,232,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,36,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,514,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,525,                    } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,536,                    } catch (NumberFormatException nfe) {,6,0,0,1,4,0,6,2,0,14,37,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,541,                    } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,579,                } catch (NumberFormatException nfe) {,4,0,0,1,4,0,0,2,0,6,37,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,584,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,2,0,0,5,11,0,0,2,0,4,66,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,585,                        return d;,2,0,0,0,0,4,10,4,0,20,9,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,587,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,6,4,0,12,37,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,591,                return createBigDecimal(str);,2,0,0,1,2,4,6,0,0,12,29,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,614,        return str.length() > 0;,0,1,0,1,2,1,4,0,0,5,24,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1314,            return false;,4,1,0,0,0,1,4,0,0,11,13,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1316,        char[] chars = str.toCharArray();,16,0,0,2,4,0,35,6,0,62,33,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1318,        boolean hasExp = false;,4,1,0,0,0,0,0,0,0,6,23,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1319,        boolean hasDecPoint = false;,6,1,0,0,0,0,0,0,0,8,28,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1320,        boolean allowSigns = false;,2,0,0,0,0,0,4,0,0,8,27,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1323,        int start = (chars[0] == '-') ? 1 : 0;,4,1,1,2,4,0,0,2,0,10,38,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1326,                int i = start + 2;,4,3,0,0,0,0,8,0,0,15,18,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1327,                if (i == sz) {,4,1,0,1,3,0,0,0,0,5,14,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1331,                for (; i < chars.length; i++) {,6,1,0,1,3,0,4,0,0,12,31,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1332,                    if ((chars[i] < '0' || chars[i] > '9'),0,3,1,3,7,0,0,0,0,13,38,13,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1341,"        sz--; // don't want to loop to the last char, check it afterwords",2,0,0,0,0,0,0,0,0,3,65,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1343,        int i = start;,4,0,0,0,0,0,0,0,0,4,14,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1346,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,12,6,0,2,5,0,6,0,0,25,61,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1347,            if (chars[i] >= '0' && chars[i] <= '9') {,2,0,0,3,7,0,0,0,0,2,41,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1349,                allowSigns = false;,8,0,0,0,0,0,4,6,0,20,19,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1352,                if (hasDecPoint || hasExp) {,4,1,0,1,3,0,0,0,0,5,28,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1354,                    return false;,2,0,0,0,0,1,0,2,0,4,13,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1356,                hasDecPoint = true;,2,0,0,0,0,0,0,0,0,4,19,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1357,            } else if (chars[i] == 'e' || chars[i] == 'E') {,4,4,1,3,8,2,0,2,0,22,48,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1363,                if (!foundDigit) {,4,1,0,1,3,0,0,0,0,6,18,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1366,                hasExp = true;,2,0,0,0,0,0,0,0,0,4,14,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1367,                allowSigns = true;,10,2,0,0,0,0,0,0,0,15,18,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1368,            } else if (chars[i] == '+' || chars[i] == '-') {,6,1,0,3,8,0,4,0,0,12,48,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1369,                if (!allowSigns) {,4,1,0,1,3,0,0,0,0,7,18,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1370,                    return false;,0,0,0,0,0,1,0,0,0,1,13,13,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1372,                allowSigns = false;,2,1,0,0,0,0,2,0,0,7,19,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1373,                foundDigit = false; // we need a digit after the E,2,0,0,0,0,0,0,0,0,4,50,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1377,            i++;,2,0,0,0,0,3,2,2,0,10,4,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1379,        if (i < chars.length) {,6,1,0,1,3,0,0,0,0,7,23,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1380,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,13,41,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1384,            if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,7,0,0,0,0,13,41,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1395,            if (chars[i] == 'l',2,0,0,1,3,0,0,0,0,2,19,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1398,                return foundDigit && !hasExp;,10,2,1,0,0,4,2,2,0,25,29,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,41,    public static final Long LONG_ZERO = new Long(0L);,4,0,0,1,2,6,4,6,0,20,50,2,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2954,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2959,        final Class<?> type1 = array1.getClass().getComponentType();,2,0,0,2,4,1,6,2,0,11,60,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2960,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",10,1,0,4,8,0,6,4,0,21,80,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2961,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2962,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,14,0,0,23,71,3,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,4,0,0,2,4,3,6,4,0,18,64,1,0.00319,1,1,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,66,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,70,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,4,0,0,2,4,3,0,4,0,11,65,1,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,82,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,86,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,90,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,0,0,2,4,3,0,2,0,9,58,1,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,98,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,0,0,5,64,2,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,102,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,2,0,0,2,4,3,0,4,0,9,71,2,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,106,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,8,3,0,2,4,3,0,0,0,15,61,1,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,114,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,177,            return stringIfNull;,2,0,0,0,0,1,8,2,0,12,20,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,193,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,3,6,1,8,2,0,10,61,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,224,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,227,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",2,0,0,3,6,0,6,2,0,10,88,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,229,            Object object = array[i];,2,0,1,1,2,0,0,2,0,8,25,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,231,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",12,0,0,1,2,0,0,0,0,12,47,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,232,"                map.put(entry.getKey(), entry.getValue());",0,0,0,3,6,0,12,0,0,12,42,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,240,"                map.put(entry[0], entry[1]);",2,1,1,3,6,0,4,0,0,11,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,242,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,10,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,282,            return null;,4,0,0,0,0,1,6,0,0,10,12,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,298,            return null;,0,0,0,0,0,1,8,0,0,8,12,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,345,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,346,            return null;,12,0,0,0,0,1,0,2,0,16,12,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,348,        return array.clone();,2,0,0,1,2,1,0,2,0,4,21,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1301,                    buffer.append('0');,0,0,0,1,2,0,4,0,0,5,19,10,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1423,"            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",4,1,0,2,4,0,8,0,0,13,51,6,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1424,        },2,0,0,0,1,0,0,0,0,2,1,5,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1430,            buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,6,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1431,            buffer.append((char)(value % 10 + '0'));,4,2,0,3,6,3,6,2,0,19,40,1,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1310,"                    Validate.isTrue(value > -1, ""Negative values should not be possible"", value);",2,1,0,1,2,0,6,0,0,11,77,10,0.03125,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1311,                    digits = Integer.toString(value).length();,2,0,0,2,4,0,8,0,0,11,42,9,0.03125,0,0,-1
defect4j,lang,org/apache/commons/lang3/Validate,38,121,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.03125,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1347,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,10,0,0,10,39,6,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1348,        },2,0,0,0,1,3,2,2,0,10,1,2,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1354,            if (value < 100) {,2,1,0,1,3,0,0,0,0,3,18,5,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1356,                buffer.append((char)(value % 10 + '0'));,4,3,0,3,6,0,4,2,0,16,40,1,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1098,            buffer.append(mValue);,4,0,0,1,2,0,6,0,0,10,22,1,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1099,        },2,0,0,0,1,3,0,4,0,9,1,2,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,639,"                rule = selectNumberRule(Calendar.SECOND, tokenLen);",6,0,0,1,2,0,4,0,0,11,51,7,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,640,                break;,0,0,0,0,0,0,4,0,0,6,6,5,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,738,                    if (i + 1 < length && pattern.charAt(i + 1) == '\'') {,6,5,0,2,5,0,4,0,0,16,54,10,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,743,                        inLiteral = !inLiteral;,2,1,0,0,0,0,0,0,0,3,23,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,875,"        return applyRules(calendar, buf);",0,0,0,1,2,1,14,0,0,14,33,1,0.0303,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1299,            if (value < 100) {,4,1,0,1,3,3,2,2,0,13,18,1,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1307,                if (value < 1000) {,2,1,0,1,3,0,0,0,0,3,19,7,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1316,                buffer.append(Integer.toString(value));,0,0,0,2,4,0,10,0,0,10,39,8,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3612,        if (text == null || text.length() == 0 || searchList == null || ,4,8,0,1,3,0,4,0,0,16,63,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3619,        if (timeToLive < 0) {,4,1,0,1,3,0,6,2,0,13,21,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3627,        if (searchLength != replacementLength) {,10,1,0,1,3,0,0,0,0,11,40,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3635,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,2,0,1,2,4,0,0,0,0,5,64,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3638,        int textIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3639,        int replaceIndex = -1;,2,0,0,0,0,0,0,0,0,3,22,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3640,        int tempIndex = -1;,2,0,0,0,0,0,12,0,0,16,19,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3645,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3650,            tempIndex = text.indexOf(searchList[i]);,2,0,1,2,4,0,4,0,0,11,40,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3653,            if (tempIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3654,                noMoreMatchesForReplIndex[i] = true;,2,0,1,1,2,3,0,0,0,11,36,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3657,                    textIndex = tempIndex;,0,3,0,0,0,0,12,0,0,15,22,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3672,        int increase = 0;,2,0,0,0,0,0,0,0,0,2,17,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3676,            int greater = replacementList[i].length() - searchList[i].length();,4,1,1,4,8,0,8,0,0,22,67,3,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3677,            if (greater > 0) {,2,1,0,1,3,0,0,0,0,3,18,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3684,        StringBuilder buf = new StringBuilder(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,64,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3689,                buf.append(text.charAt(i));,0,0,0,2,4,0,10,0,0,10,27,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3691,            buf.append(replacementList[replaceIndex]);,4,0,0,2,4,0,0,4,0,8,42,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3693,            start = textIndex + searchList[replaceIndex].length();,2,1,0,2,4,0,0,0,0,3,54,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3695,            textIndex = -1;,4,0,0,0,0,3,0,0,0,9,15,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3696,            replaceIndex = -1;,2,0,0,0,0,0,0,0,0,4,18,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3697,            tempIndex = -1;,4,1,0,0,0,3,16,4,0,31,15,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3700,            for (int i = 0; i < searchLength; i++) {,8,2,1,1,3,0,4,0,0,20,40,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3701,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3706,"                tempIndex = text.indexOf(searchList[i], start);",2,0,1,2,4,0,6,0,0,13,47,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3709,                if (tempIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3710,                    noMoreMatchesForReplIndex[i] = true;,0,0,1,1,2,0,0,0,0,6,36,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3712,                    if (textIndex == -1 || tempIndex < textIndex) {,2,0,0,1,3,0,0,2,0,4,47,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3713,                        textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,12,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3714,                        replaceIndex = i;,10,0,0,0,0,6,14,4,0,39,17,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3721,        int textLength = text.length();,2,0,0,1,2,0,8,0,0,10,31,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3723,            buf.append(text.charAt(i));,0,0,0,2,4,0,4,2,0,6,27,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,168,    },0,0,0,0,1,0,4,0,0,5,1,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,229,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,230,            return true;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,286,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,312,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,338,        return str == null ? EMPTY : str.trim();,2,1,0,1,2,1,4,0,0,7,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,366,"        return strip(str, null);",4,1,0,1,2,1,4,0,0,10,24,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,393,        if (str == null) {,8,2,0,1,3,0,0,0,0,11,18,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,456,"        str = stripStart(str, stripChars);",6,0,0,1,2,0,0,2,0,8,34,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,457,"        return stripEnd(str, stripChars);",6,1,0,1,2,1,0,0,0,8,33,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,487,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,489,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,491,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,2,0,0,4,9,0,0,0,0,3,72,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1045,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1018,        return str.indexOf(searchStr) >= 0;,0,1,0,1,2,1,6,0,0,7,35,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1015,        if (str == null || searchStr == null) {,4,3,0,1,3,0,6,0,0,13,39,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,192,        return str == null || str.length() == 0;,4,3,0,1,2,1,4,0,0,11,40,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,210,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,16,0,0,17,33,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,234,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,2,1,0,4,9,0,24,0,0,27,55,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,235,                return false;,2,0,0,0,0,1,4,2,0,9,13,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,238,        return true;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,287,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,313,        String ts = trim(str);,8,0,0,1,2,0,4,2,0,14,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,314,        return isEmpty(ts) ? null : ts;,4,0,0,1,2,1,4,0,0,9,31,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,339,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,397,"        str = strip(str, null);",2,0,0,1,2,0,4,0,0,8,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,398,        return str.length() == 0 ? null : str;,6,1,0,1,2,1,10,2,0,19,38,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,455,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,457,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,487,        if (str == null || (strLen = str.length()) == 0) {,2,0,0,3,7,0,0,0,0,2,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,491,        if (stripChars == null) {,2,1,0,1,3,0,6,0,0,9,25,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,495,        } else if (stripChars.length() == 0) {,10,2,0,2,6,0,4,0,0,17,38,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,496,            return str;,0,1,0,0,0,1,6,0,0,7,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,498,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,2,0,0,5,11,0,4,0,0,9,76,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,502,        return str.substring(start);,2,0,0,1,2,1,10,0,0,13,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,531,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,12,0,0,12,47,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,532,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,536,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,4,1,1,4,9,3,12,12,0,35,67,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,539,        } else if (stripChars.length() == 0) {,2,0,0,2,6,0,0,2,0,5,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,540,            return str;,8,1,0,0,0,1,8,4,0,23,11,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,542,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,4,4,0,5,11,0,8,0,0,17,71,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,543,                end--;,2,0,0,0,0,3,2,0,0,8,6,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,546,"        return str.substring(0, end);",4,0,0,1,2,1,6,0,0,10,29,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,571,"        return stripAll(strs, null);",8,4,0,1,2,1,0,0,0,12,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,602,            return strs;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,608,        return newArr;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,634,        return str1 == null ? str2 == null : str1.equals(str2);,4,2,0,1,2,1,12,0,0,19,55,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,684,        if (isEmpty(str)) {,2,1,0,2,5,0,4,0,0,7,19,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,685,            return -1;,0,0,0,0,0,1,4,0,0,6,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,687,        return str.indexOf(searchChar);,2,0,0,1,2,1,0,0,0,2,31,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,717,            return -1;,2,1,0,0,0,4,4,0,0,13,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,779,        if (str == null || searchStr == null || ordinal <= 0) {,6,5,0,1,3,0,0,0,0,11,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,780,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,783,            return 0;,2,0,0,0,0,1,6,0,0,8,9,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,785,        int found = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,786,        int index = INDEX_NOT_FOUND;,6,1,0,0,0,0,6,0,0,14,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,788,"            index = str.indexOf(searchStr, index + 1);",6,1,0,1,2,0,10,2,0,20,42,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,789,            if (index < 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,170,            return StringUtils.EMPTY;,6,1,0,0,0,1,0,0,0,7,25,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,230,            return StringUtils.EMPTY;,4,1,0,0,0,4,0,4,0,12,25,1,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,201,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,245,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.16667,1,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,253,        if (i == -1) {,2,1,0,1,3,0,0,0,0,4,14,4,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,2,0,0,1,2,3,12,2,0,19,94,1,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",4,0,0,1,2,0,4,2,0,10,53,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",4,0,0,1,2,0,4,2,0,10,47,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",4,0,0,1,2,0,4,2,0,10,57,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",8,1,0,1,2,0,10,2,0,21,53,1,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,498,        if (writer == null ) {,4,1,0,1,3,0,6,0,0,12,22,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,501,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,504,"        Entities.HTML40.escape(writer, string);",4,0,0,1,2,0,6,0,0,10,39,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,832,"                    writer.write(""&#"");",0,0,0,1,2,0,4,0,0,5,19,11,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,833,"                    writer.write(Integer.toString(c, 10));",6,3,0,2,4,0,10,0,0,19,38,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,961,"                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);",2,0,0,2,4,0,8,0,0,11,63,18,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,829,            String entityName = this.entityName(c);,4,2,1,1,2,0,8,0,0,21,39,3,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,954,                                switch (isHexChar) {,2,0,0,1,3,0,0,0,0,2,20,16,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,964,                                if (entityValue > 0xFFFF) {,2,1,0,1,3,0,0,0,0,3,27,16,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,525,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,557,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,560,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,563,"        Entities.HTML40.unescape(writer, string);",0,0,0,1,2,0,6,0,0,7,41,5,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,981,                    writer.write(entityValue);,14,5,0,1,2,3,10,2,0,35,26,1,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,533,            if (value < LOOKUP_TABLE_SIZE) {,4,1,0,1,3,0,6,0,0,11,32,1,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,457,            return (String) mapValueToName.get(value);,0,0,0,2,4,1,6,2,0,8,42,6,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,112,"        this(pattern, Locale.getDefault(), registry);",4,0,0,2,4,0,4,0,0,8,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,148,        ArrayList foundFormats = new ArrayList();,4,0,0,1,2,0,0,0,0,5,41,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,150,        StringBuffer stripCustom = new StringBuffer(pattern.length());,2,0,0,2,4,0,4,4,0,10,62,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,152,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,153,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,154,        int fmtCount = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,155,        while (pos.getIndex() < pattern.length()) {,4,2,0,3,7,0,8,12,0,27,43,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,156,            switch (c[pos.getIndex()]) {,2,0,1,3,7,0,10,4,0,18,28,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,187,                stripCustom.append(c[pos.getIndex()]);,0,0,1,3,6,0,8,0,0,10,38,8,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,188,                next(pos);,0,0,0,1,2,0,4,0,0,4,10,8,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,403,        pos.setIndex(pos.getIndex() + 1);,0,1,0,2,4,0,8,0,0,9,33,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,404,        return pos;,2,0,0,0,0,1,0,0,0,2,11,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,143,        if (registry == null) {,4,1,0,1,3,0,0,2,0,7,23,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,144,            super.applyPattern(pattern);,4,0,0,1,2,0,0,0,0,4,28,7,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,145,            toPattern = super.toPattern();,6,1,0,1,2,0,0,0,0,8,30,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,139,        if (val == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,142,        if (val.length() == 0) {,2,1,0,2,5,0,4,4,0,11,24,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,152,"        if (val.startsWith(""0x"") || val.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,155,        char lastChar = val.charAt(val.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,159,        int decPos = val.indexOf('.');,4,1,0,1,2,0,4,0,0,10,30,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,162,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,174,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,177,                mant = val;,6,0,0,0,0,3,2,2,0,15,11,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,179,            dec = null;,2,0,0,0,0,0,0,0,0,3,11,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,182,            if (expPos > -1 && expPos < val.length() - 1) {,8,5,0,2,5,0,8,0,0,22,47,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,185,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,167,        super();,0,0,0,1,2,0,14,0,0,15,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,191,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,229,        if (str == null || (strLen = str.length()) == 0) {,6,4,0,3,7,0,4,0,0,15,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,232,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,234,                return false;,4,0,0,0,0,1,0,0,0,6,13,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,237,        return true;,12,4,0,0,0,8,4,10,0,38,12,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,336,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,8,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,361,        return str == null ? EMPTY : str.trim();,2,0,0,1,2,1,4,0,0,7,40,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,416,        if (str == null) {,2,0,0,1,3,2,4,2,0,10,18,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,417,            return null;,4,0,0,0,0,4,2,2,0,12,12,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,420,        return str.length() == 0 ? null : str;,2,0,0,1,2,1,0,0,0,2,38,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,479,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,480,"        return stripEnd(str, stripChars);",2,0,0,1,2,1,6,2,0,11,33,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,510,            return str;,4,0,0,0,0,1,6,2,0,12,11,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,513,        if (stripChars == null) {,12,2,0,1,3,0,10,0,0,26,25,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,515,                start++;,2,0,0,0,0,0,0,0,0,3,8,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,517,        } else if (stripChars.length() == 0) {,2,1,0,2,6,0,10,2,0,15,38,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,518,            return str;,2,0,0,0,0,1,0,2,0,6,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,520,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,6,3,0,5,11,0,10,0,0,20,76,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,554,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,561,        } else if (stripChars.length() == 0) {,10,1,0,2,6,0,0,0,0,12,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,564,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,4,4,0,5,11,0,14,0,0,23,71,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,626,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,8,0,0,8,38,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,627,        for (int i = 0; i < strsLen; i++) {,12,1,0,1,3,3,0,4,0,22,35,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,630,        return newArr;,14,2,0,0,0,7,4,0,0,29,14,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,656,        return str1 == null ? str2 == null : str1.equals(str2);,4,2,0,1,2,1,6,0,0,12,55,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,706,        if (isEmpty(str)) {,6,4,0,2,5,0,4,0,0,15,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,739,            return -1;,0,0,0,0,0,1,4,0,0,5,10,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,741,"        return str.indexOf(searchChar, startPos);",6,0,0,1,2,1,8,0,0,16,41,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,767,        if (str == null || searchStr == null) {,10,4,0,1,3,0,0,0,0,15,39,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,768,            return -1;,2,0,0,0,0,1,0,0,0,3,10,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,802,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,3,23,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,812,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,814,            found++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,816,        return index;,2,0,0,0,0,1,4,2,0,8,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,851,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,855,        if (searchStr.length() == 0 && startPos >= str.length()) {,0,0,0,3,7,0,6,0,0,6,58,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,856,            return str.length();,0,0,0,1,2,1,10,0,0,10,20,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,883,        if (isEmpty(str)) {,2,1,0,2,5,0,4,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,918,            return -1;,2,0,0,0,0,1,0,0,0,4,10,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,244,                            out.write('\\');,6,1,0,1,2,0,4,0,0,12,16,3,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,245,                        out.write('/');,2,0,1,1,2,0,14,2,0,23,15,3,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,86,"        return escapeJavaStyleString(str, false);",2,0,0,1,2,4,8,2,0,17,41,1,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,159,            StringWriter writer = new StringWriter(str.length() * 2);,2,1,0,2,4,0,4,4,0,11,57,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,161,            return writer.toString();,6,0,0,1,2,1,8,0,0,14,25,3,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,179,        if (out == null) {,6,1,0,1,3,3,2,2,0,16,18,1,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,182,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,186,        sz = str.length();,2,0,0,1,2,0,4,0,0,7,18,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,187,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,188,            char ch = str.charAt(i);,2,0,0,1,2,3,2,2,0,10,24,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,191,            if (ch > 0xfff) {,2,1,0,1,3,0,0,0,0,3,17,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,195,            } else if (ch > 0x7f) {,2,1,0,1,4,0,0,0,0,3,23,8,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,197,            } else if (ch < 32) {,6,2,0,1,4,3,2,2,0,16,21,1,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,158,        return nullText;,2,0,0,0,0,1,0,0,0,2,16,4,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1184,            ensureCapacity(size + width);,4,1,0,1,2,0,2,0,0,7,29,7,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1186,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1227,        if (width > 0) {,6,3,0,1,3,0,8,0,0,18,16,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1228,            ensureCapacity(size + width);,6,1,0,1,2,0,8,2,0,17,29,5,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1229,            String str = (obj == null ? getNullText() : obj.toString());,4,1,0,3,6,0,6,2,0,14,60,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1230,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,98,        this(CAPACITY);,2,0,0,1,2,0,0,0,0,2,15,4,0.02837,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,111,        buffer = new char[initialCapacity];,2,0,1,1,2,0,0,0,0,5,35,4,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,112,    },2,0,0,0,1,0,6,0,0,9,1,3,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,217,    },2,1,0,0,1,0,0,0,0,3,1,7,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,2,0,0,1,2,3,0,4,0,10,68,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,2,0,0,1,2,3,0,4,0,10,69,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",2,0,0,2,4,3,2,4,0,13,94,1,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,4,1,0,1,2,3,0,4,0,12,65,1,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,2,0,0,1,2,3,0,4,0,10,77,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",4,0,0,2,4,5,2,4,0,16,88,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,2,0,0,1,2,3,0,4,0,9,63,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,387,        },2,0,0,0,1,3,2,2,0,10,1,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,317,            super();,2,0,0,1,2,0,0,2,0,4,8,5,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,318,            this.ch = ch;,4,0,0,0,0,0,0,0,0,5,13,5,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,286,            Arrays.sort(this.chars);,2,0,0,1,2,0,4,0,0,6,24,6,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,228,        if (capacity > buffer.length) {,2,0,0,1,3,0,4,0,0,8,31,6,0.02094,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,233,        return this;,2,0,0,0,0,4,4,2,0,12,12,2,0.02094,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,89,        return TAB_MATCHER;,4,0,0,0,0,3,4,2,0,12,19,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,98,        return SPACE_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,117,        return TRIM_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,126,        return SINGLE_QUOTE_MATCHER;,2,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,153,        return NONE_MATCHER;,0,0,1,0,0,1,8,0,0,10,20,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,163,        return new CharMatcher(ch);,2,0,0,1,2,1,0,2,0,4,27,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,177,            return new CharMatcher(chars[0]);,0,0,1,2,4,1,0,2,0,4,33,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,179,        return new CharSetMatcher(chars);,2,0,0,1,2,1,0,2,0,4,33,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,193,            return new CharMatcher(chars.charAt(0));,0,0,0,2,4,1,4,2,0,6,40,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,205,        if (str == null || str.length() == 0) {,2,3,0,2,5,0,4,0,0,9,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,206,            return NONE_MATCHER;,2,1,0,0,0,1,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2575,            String str = super.getContent();,4,0,0,1,2,0,0,2,0,7,32,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2576,            if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,381,                isEquals = lhs.equals(rhs);,4,0,0,1,2,0,6,2,0,13,27,4,0.05263,1,1,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,368,        if (isEquals == false) {,2,1,0,1,3,0,0,0,0,4,24,4,0.02222,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,371,        if (lhs == rhs) {,6,1,0,1,3,0,6,0,0,15,17,3,0.02222,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,374,        if (lhs == null || rhs == null) {,4,3,0,1,3,0,0,0,0,7,33,4,0.02222,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,378,        Class lhsClass = lhs.getClass();,2,0,0,1,2,0,4,2,0,8,32,4,0.02222,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,379,        if (!lhsClass.isArray()) {,6,1,0,2,5,0,4,0,0,12,26,4,0.02222,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,831,        return this.isEquals;,4,1,0,0,0,1,0,0,0,6,21,6,0.01639,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,100,    public EqualsBuilder() {,2,0,0,1,3,1,0,0,0,3,24,2,0.01613,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,92,    private boolean isEquals = true;,6,0,0,0,0,1,4,0,0,12,32,1,0.01613,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,125,"        return reflectionEquals(lhs, rhs, false, null, null);",4,0,0,1,2,1,6,0,0,13,53,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,171,"        return reflectionEquals(lhs, rhs, false, null, excludeFields);",0,0,0,1,2,1,8,0,0,10,62,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,146,            if (numerator==Integer.MIN_VALUE ||,6,2,0,0,1,0,0,0,0,8,35,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,150,            numerator = -numerator;,2,0,0,0,0,0,0,4,0,6,23,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,151,            denominator = -denominator;,4,0,0,0,0,0,0,0,0,6,27,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,578,        if (u>0) { u=-u; } // make u negative,0,0,0,2,4,0,4,0,0,5,37,5,0.125,1,1,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,582,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,6,7,0,3,7,0,0,0,0,13,72,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,585,        if (k==31) {,2,1,0,1,3,0,0,0,0,3,12,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,590,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,8,3,0,3,6,0,0,0,0,12,38,5,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,596,            while ((t&1)==0) { // while t is even..,4,2,0,2,5,3,6,2,0,17,39,1,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,600,            if (t>0) {,2,1,0,1,3,0,0,0,0,3,10,6,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,603,                v = t;,4,0,0,0,0,0,0,0,0,5,6,8,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,606,            t = (v - u)/2;,6,2,0,1,2,0,0,0,0,9,14,6,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,609,        } while (t!=0);,2,1,0,1,3,0,0,0,0,3,15,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,610,        return -u*(1<<k); // gcd is u*2^k,2,0,0,1,2,4,0,0,0,5,33,2,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,571,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,2,1,0,3,7,0,0,0,0,3,43,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,572,            return 1;,6,0,0,0,0,1,8,0,0,14,9,3,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,142,        if (denominator == 0) {,4,1,0,1,3,1,0,2,0,8,23,1,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1708,"        public Pair(Object obj1, Object obj2) {",6,0,0,1,3,1,0,4,0,11,39,3,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1709,            mObj1 = obj1;,4,2,0,0,0,0,0,0,0,6,13,10,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1711,        },4,1,0,0,1,0,0,0,0,5,1,8,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,772,            return new UnpaddedNumberField(field);,2,0,0,1,2,1,0,2,0,4,38,6,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,954,        return mLocale;,4,0,0,0,0,1,4,0,0,9,15,3,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1186,            mField = field;,2,0,0,0,0,3,0,4,0,9,15,2,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1176,        static final UnpaddedNumberField INSTANCE_YEAR = new UnpaddedNumberField(Calendar.YEAR);,6,0,0,1,2,2,0,4,0,12,88,3,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,425,"        return getDateTimeInstance(dateStyle, timeStyle, null, locale);",4,0,0,1,2,1,8,0,0,13,63,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,461,"        Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));",12,2,0,3,6,0,0,8,0,22,70,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,462,        if (timeZone != null) {,2,1,0,1,3,0,0,0,0,3,23,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,465,        if (locale != null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,469,        FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);,8,5,0,2,4,0,10,4,0,28,73,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,470,        if (format == null) {,4,2,0,1,3,0,10,0,0,16,21,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,471,            if (locale == null) {,4,1,0,1,3,2,4,2,0,13,21,2,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,475,"                SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,",2,0,0,1,3,0,8,4,0,14,100,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,477,                String pattern = formatter.toPattern();,6,0,0,1,2,3,4,4,0,18,39,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,478,"                format = getInstance(pattern, timeZone, locale);",2,0,0,1,2,0,8,0,0,11,48,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,479,"                cDateTimeInstanceCache.put(key, format);",2,0,0,1,2,2,8,4,0,16,40,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,485,        return format;,4,1,0,0,0,1,8,0,0,13,14,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,672,                if (tokenLen >= 4) {,2,1,0,1,3,0,0,0,0,3,20,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,675,"                    rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);",12,0,0,1,2,0,0,2,0,15,81,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,45,    },4,0,0,0,1,0,0,0,0,4,1,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,87,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,88,            return false;,0,0,0,0,0,1,4,0,0,5,13,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,108,        return !isTrue(bool);,2,0,0,1,2,1,8,0,0,11,21,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,129,        return bool.booleanValue() ? false : true;,0,0,0,1,2,1,4,0,0,6,42,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,173,"            throw new IllegalArgumentException(""The Writer must not be null"");",0,0,0,1,2,0,4,2,0,8,66,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,229,                        out.write('\\');,2,0,0,1,2,3,4,2,0,12,16,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,230,"                        out.write('""');",0,0,0,1,2,0,4,0,0,5,15,13,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,226,                        out.write('\'');,2,0,0,1,2,0,4,0,0,8,16,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,149,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,153,            StringWriter writer = new StringWriter(str.length() * 2);,4,1,0,2,4,0,4,4,0,13,57,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,172,        if (out == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,175,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,179,        sz = str.length();,2,0,0,1,2,0,4,0,0,7,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,676,                        if (field == DateUtils.SEMI_MONTH) {,6,1,0,1,3,0,0,0,0,7,36,12,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,440,        Calendar gval = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,621,        if (val.get(Calendar.YEAR) > 280000000) {,4,1,0,2,5,0,4,0,0,9,41,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,635,        Date date = val.getTime();,2,0,0,1,2,0,4,2,0,8,26,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,637,        boolean done = false;,2,0,0,0,0,0,0,0,0,3,21,5,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,641,        if (!round || millisecs < 500) {,4,2,0,1,3,0,0,0,0,7,32,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,9,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,110,            if (str.charAt(2) != '_') {,8,5,0,2,5,0,4,0,0,18,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,113,            char ch3 = str.charAt(3);,2,0,0,1,2,0,4,0,0,6,25,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,114,            char ch4 = str.charAt(4);,2,0,0,1,2,0,4,0,0,6,25,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,115,            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {,8,7,0,1,3,0,0,0,0,19,55,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,179,        stopTime = System.currentTimeMillis();,2,0,0,1,2,0,4,0,0,7,38,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,180,        this.runningState = STATE_SUSPENDED;,4,0,0,0,0,0,0,0,0,5,36,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,176,        if(this.runningState != STATE_RUNNING) {,4,1,0,1,3,0,0,0,0,5,40,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,631,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",6,0,0,1,2,0,4,0,0,11,57,7,0.07692,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,553,            locale = Locale.getDefault();,4,0,0,1,2,3,6,2,0,17,29,1,0.0625,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,614,"                    rule = selectNumberRule(Calendar.YEAR, tokenLen);",12,0,0,1,2,0,4,0,0,17,49,3,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,625,                    rule = TwoDigitMonthField.INSTANCE;,10,1,0,0,0,0,4,0,0,16,35,3,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,777,"            return new PaddedNumberField(field, padding);",4,0,0,1,2,1,0,2,0,6,45,6,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1262,            if (size < 3) {,2,1,0,1,3,0,0,0,0,3,15,5,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1398,            super();,10,1,0,1,2,0,0,0,0,12,8,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1399,        },0,0,0,0,1,0,8,0,0,8,1,5,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1392,        static final TwoDigitMonthField INSTANCE = new TwoDigitMonthField();,6,0,0,1,2,2,0,4,0,13,68,1,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,540,        if (pattern == null) {,2,0,0,1,3,0,4,0,0,6,22,5,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,543,        mPattern = pattern;,4,0,0,0,0,0,0,0,0,5,19,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,547,            timeZone = TimeZone.getDefault();,6,1,0,1,2,0,8,0,0,16,33,3,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,552,        if (locale == null) {,2,0,0,1,3,3,0,0,0,5,21,2,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,111,    private static Map cInstanceCache = new HashMap(7);,6,0,0,1,2,2,0,4,0,14,51,1,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,112,    private static Map cDateInstanceCache = new HashMap(7);,6,2,0,1,2,0,4,0,0,14,55,3,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,115,    private static Map cTimeZoneDisplayCache = new HashMap(7);,2,0,0,1,2,3,0,4,0,9,58,2,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,215,        if (format == null) {,4,2,0,1,3,1,8,0,0,17,21,3,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,217,            format.init();  // convert shell format into usable one,2,0,0,1,2,0,6,0,0,10,55,6,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1084,    },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,87,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,105,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,138,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,154,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",2,1,0,1,2,0,0,0,0,3,92,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,175,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,191,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,207,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,224,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,241,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,275,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,464,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1508,            return false;,4,1,0,0,0,1,8,6,0,20,13,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,411,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,419,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,12,0,0,19,53,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,433,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,436,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,438,            dec = null;,6,0,0,0,0,0,0,0,0,8,11,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,440,        if (!Character.isDigit(lastChar)) {,2,1,1,2,5,0,6,0,0,14,35,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,444,                exp = null;,4,1,0,0,0,1,4,2,0,12,11,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,447,"            String numeric = str.substring(0, str.length() - 1);",8,4,0,2,4,0,8,2,0,22,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,448,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,452,                    if (dec == null,4,1,0,0,1,3,0,0,0,8,15,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,556,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,559,        for (int i = str.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,560,            if (str.charAt(i) != '0') {,6,2,0,2,5,0,6,0,0,16,27,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,561,                return false;,4,1,0,0,0,1,0,0,0,7,13,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,226,        for (int i = 0; i < strLen; i++) {,10,2,0,1,3,0,4,0,0,17,34,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,227,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,26,0,0,28,55,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,628,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1510,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1515,        return true;,4,3,0,0,0,1,0,0,0,8,12,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,41,    public static final Long LONG_ZERO = new Long(0L);,4,1,1,1,2,3,8,4,0,28,50,1,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,2,0,0,1,2,0,0,0,0,2,56,5,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,51,    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);,2,0,0,1,2,0,6,2,0,12,64,1,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,53,    public static final Short SHORT_ZERO = new Short((short) 0);,2,0,0,2,4,3,0,4,0,9,60,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,55,    public static final Short SHORT_ONE = new Short((short) 1);,4,2,0,2,4,3,4,4,0,18,59,1,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,2,0,0,2,4,3,0,4,0,10,66,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,59,    public static final Byte BYTE_ZERO = new Byte((byte) 0);,2,0,0,2,4,3,0,4,0,9,56,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,61,    public static final Byte BYTE_ONE = new Byte((byte) 1);,2,0,0,2,4,3,0,4,0,9,55,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,63,    public static final Byte BYTE_MINUS_ONE = new Byte((byte) -1);,2,0,0,2,4,3,0,4,0,10,62,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,65,    public static final Double DOUBLE_ZERO = new Double(0.0d);,2,0,0,1,2,3,2,0,0,8,58,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,2,0,0,1,2,3,0,4,0,9,57,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,69,    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);,2,0,0,1,2,3,0,4,0,10,64,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,2,0,0,1,2,3,0,4,0,9,55,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,73,    public static final Float FLOAT_ONE = new Float(1.0f);,2,0,0,1,2,3,6,4,0,15,54,1,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,231,        return true;,2,0,0,0,0,4,0,12,0,17,12,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,303,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,329,        String ts = trim(str);,12,3,0,1,2,0,16,2,0,33,22,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,330,        return isEmpty(ts) ? null : ts;,10,0,0,1,2,1,20,4,0,35,31,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,383,"        return strip(str, null);",2,1,0,1,2,1,4,0,0,8,24,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,410,        if (str == null) {,2,0,0,1,3,0,0,0,0,2,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,440,"        return str == null ? EMPTY : strip(str, null);",2,0,0,1,2,1,0,0,0,2,46,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,473,"        str = stripStart(str, stripChars);",2,0,0,1,2,1,0,2,0,5,34,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,503,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,504,            return str;,6,1,0,0,0,1,4,0,0,12,11,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,506,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,509,                start++;,12,3,1,0,0,3,18,4,0,47,8,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,511,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,6,0,0,6,38,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,518,        return str.substring(start);,2,0,0,1,2,1,0,2,0,6,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,551,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,553,                end--;,10,0,0,0,0,1,0,6,0,18,6,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,879,        if (width > 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,880,            ensureCapacity(size + width);,4,1,0,1,2,0,2,0,0,7,29,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,881,            String str = (obj == null ? getNullText() : obj.toString());,4,1,0,3,6,0,6,2,0,14,60,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,882,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,883,            if (strLen >= width) {,4,1,0,1,3,0,0,0,0,5,22,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);",4,0,0,1,2,1,10,2,0,17,38,5,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,108,        if (initialCapacity <= 0) {,2,1,0,1,3,0,0,0,0,3,27,4,0.008,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,111,        buffer = new char[initialCapacity];,2,0,1,1,2,0,0,0,0,5,35,4,0.008,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,233,        return this;,4,0,0,0,0,1,0,2,0,6,12,1,0.00581,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,118,    private StrMatcher delimMatcher = StrMatcher.splitMatcher();,4,1,0,1,2,1,4,2,0,12,60,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,122,    private StrMatcher ignoredMatcher = StrMatcher.noneMatcher();,2,0,0,1,2,1,4,2,0,9,61,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,124,    private StrMatcher trimmerMatcher = StrMatcher.noneMatcher();,2,0,0,1,2,1,4,2,0,9,61,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,129,    private boolean ignoreEmptyTokens = true;,4,0,0,0,0,1,0,0,0,6,41,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,242,        this.chars = null;,2,0,0,0,0,0,0,0,0,3,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,243,    },12,1,0,0,1,0,0,2,0,16,1,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,253,        if (input != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,254,            chars = input.toCharArray();,6,0,1,1,2,0,4,2,0,16,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,256,            chars = null;,2,1,0,0,0,0,0,0,0,3,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,268,        setDelimiterChar(delim);,2,1,0,1,2,0,4,0,0,7,24,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,269,    },0,0,0,0,1,0,4,0,0,4,1,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,278,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,280,    },2,0,0,0,1,3,4,2,0,12,1,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,302,"        this(input, delim);",4,0,0,1,2,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,303,        setQuoteChar(quote);,0,0,0,1,2,0,14,0,0,14,20,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,304,    },0,0,0,0,1,0,12,2,0,14,1,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,315,"        this(input, delim);",4,0,0,1,2,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,316,        setQuoteMatcher(quote);,4,0,0,1,2,6,2,6,0,19,23,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,330,        this.chars = input;,4,0,0,0,0,0,0,0,0,5,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,357,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,358,        setDelimiterString(delim);,4,1,0,1,2,0,4,0,0,9,26,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,371,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,404,        setQuoteMatcher(quote);,0,0,0,1,2,0,12,0,0,12,23,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,405,    },4,1,0,0,1,6,8,2,0,23,1,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,95,        CSV_TOKENIZER_PROTOTYPE.setQuoteMatcher(StrMatcher.doubleQuoteMatcher());,0,0,0,2,4,0,8,0,0,8,73,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1672,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1674,            if (thisBuf[i] == ch) {,2,1,1,2,5,0,0,0,0,7,23,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1675,                return true;,2,0,0,0,0,1,4,4,0,11,12,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1205,            if (index >= 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1765,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1769,        if (strLen == 0) {,4,1,0,1,3,3,2,2,0,13,18,1,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1772,        if (strLen > size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1775,        char[] thisBuf = buffer;,2,0,0,1,2,3,0,0,0,5,24,2,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1778,        for (int i = startIndex; i < len; i++) {,10,1,0,1,3,0,0,0,0,12,40,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1779,            for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,0,0,0,10,34,7,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1780,                if (str.charAt(j) != thisBuf[i + j]) {,4,2,1,3,7,0,6,0,0,14,38,9,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1784,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",4,1,0,1,2,0,12,0,0,17,72,5,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1115,        size -= len;,4,0,0,0,0,0,0,0,0,5,12,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1116,    },4,0,0,0,1,0,0,2,0,6,1,5,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,475,            ensureCapacity(len + strLen);,4,1,0,1,2,0,2,0,0,7,29,7,0.00877,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,472,        int strLen = str.length();,2,0,0,1,2,0,0,2,0,5,26,5,0.0087,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,473,        if (strLen > 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0087,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,294,            this.ch = ch;,6,0,0,0,0,3,0,4,0,14,13,1,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,217,    },0,0,0,0,1,0,6,0,0,7,1,6,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",2,0,0,1,2,3,0,4,0,10,69,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,4,0,0,1,2,3,0,4,0,13,68,1,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,2,0,0,1,2,3,0,4,0,10,69,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",2,0,0,2,4,3,2,4,0,12,94,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,2,0,0,1,2,3,0,4,0,9,65,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,4,0,0,1,2,3,6,4,0,19,77,1,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,4,0,0,1,2,3,10,6,0,23,63,1,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,362,            super();,4,1,0,1,2,0,4,0,0,9,8,5,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,261,            this.chars = (char[]) chars.clone();,2,0,0,3,6,0,4,0,0,7,36,5,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,263,        },4,3,0,0,1,0,0,0,0,7,1,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,182,        return size;,2,0,0,0,0,1,0,0,0,2,12,4,0.00585,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,228,        if (capacity > buffer.length) {,8,4,0,1,3,0,4,0,0,16,31,3,0.00585,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,307,            return ch == buffer[pos] ? 1 : 0;,6,1,0,1,2,4,0,6,0,16,33,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,80,        return COMMA_MATCHER;,4,1,0,0,0,1,0,0,0,5,21,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,89,        return TAB_MATCHER;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1765,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1766,        if (strLen == 1) {,8,2,0,1,3,0,0,0,0,12,18,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1769,        if (strLen == 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1772,        if (strLen > size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1775,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,8,1,0,0,0,0,0,0,0,9,34,5,0.57143,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1778,        for (int i = startIndex; i < len; i++) {,10,1,0,1,3,0,0,0,0,12,40,5,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1779,            for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,0,0,0,10,34,7,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1780,                if (str.charAt(j) != thisBuf[i + j]) {,4,2,1,3,7,0,6,0,0,14,38,9,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1781,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1784,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1184,        int len = (str == null ? 0 : str.length());,4,1,0,2,4,0,4,0,0,9,43,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1185,        if (len > 0) {,12,2,0,1,3,3,0,4,0,22,14,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1186,"            int index = indexOf(str, 0);",2,0,0,1,2,0,4,0,0,6,28,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1189,"                index = indexOf(str, index);",2,0,0,1,2,0,6,0,0,9,28,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1747,"        return indexOf(str, 0);",4,1,0,1,2,1,8,0,0,14,23,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",4,1,0,1,2,0,12,0,0,17,72,5,0.30769,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,122,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,125,            buffer = new char[str.length() + CAPACITY];,4,1,0,2,4,0,4,0,0,10,43,6,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,474,            int len = length();,2,0,0,1,2,0,2,0,0,4,19,7,0.03571,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,476,"            str.getChars(0, strLen, buffer, len);",8,1,0,1,2,0,10,0,0,19,37,3,0.03571,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,472,        int strLen = str.length();,4,0,0,1,2,3,6,2,0,16,26,1,0.0354,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,261,            this.chars = (char[]) chars.clone();,0,1,0,3,6,0,4,0,0,5,36,5,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,263,        },0,1,0,0,1,0,6,0,0,7,1,6,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,6,1,0,1,2,0,4,0,0,12,69,6,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",2,0,0,2,4,3,6,4,0,16,88,1,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,389,            super();,4,1,0,1,2,0,4,0,0,9,8,5,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,233,        return this;,2,0,0,0,0,4,2,0,0,8,12,2,0.02367,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,840,                    if (entityName.length() == 1) {,0,1,0,2,5,0,4,0,0,5,31,11,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,843,                        char charAt1 = entityName.charAt(1);,2,0,0,1,2,0,14,0,0,16,36,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,845,                            if (charAt1 == 'x' || charAt1=='X') {,4,3,0,1,3,0,0,0,0,9,37,15,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,848,                                entityValue = Integer.parseInt(entityName.substring(1));,4,1,0,2,4,0,8,0,0,14,56,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,852,                        },4,1,0,0,1,0,6,0,0,12,1,8,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang/Entities,62,862,                    buf.append((char) (entityValue));,2,0,0,3,6,0,4,0,0,6,33,11,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,819,        StringBuffer buf = new StringBuffer(str.length());,6,0,0,2,4,0,4,4,0,15,50,1,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,821,        for (int i = firstAmp; i < str.length(); ++i) {,8,1,0,2,5,0,4,0,0,14,47,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,822,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,823,            if (ch == '&') {,2,1,0,1,3,0,0,0,0,4,16,6,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,824,"                int semi = str.indexOf(';', i + 1);",4,1,0,1,2,0,4,0,0,10,35,9,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,825,                if (semi == -1) {,2,1,0,1,3,0,0,0,0,4,17,8,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,829,"                int amph = str.indexOf('&', i + 1);",8,3,0,1,2,0,4,0,0,17,35,3,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,830,                if( amph != -1 && amph < semi ) {,6,3,0,1,3,0,0,0,0,10,33,8,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,835,"                String entityName = str.substring(i + 1, semi);",2,0,0,1,2,0,0,0,0,2,47,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,837,                if (entityName.length() == 0) {,0,1,0,2,5,0,4,0,0,5,31,8,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,839,                } else if (entityName.charAt(0) == '#') {,0,1,0,2,6,0,4,0,0,6,41,9,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,857,                if (entityValue == -1) {,2,1,0,1,3,0,4,0,0,10,24,3,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,814,        int firstAmp = str.indexOf('&');,2,0,0,1,2,0,4,0,0,7,32,5,0.03704,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,247,"        return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());",0,0,0,2,4,1,12,0,0,13,81,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,330,"            if (Token.containsTokenWithValue(tokens, M)) {",0,0,0,2,5,0,8,0,0,8,46,7,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,331,                months += 12 * years;,6,4,0,0,0,0,8,0,0,21,21,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,332,                years = 0;,2,0,0,0,0,0,0,0,0,3,10,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,344,            hours += 24 * days;,4,1,0,0,0,0,0,0,0,6,19,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,345,            days = 0;,4,0,0,0,0,0,0,0,0,5,9,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,348,            minutes += 60 * hours;,4,1,0,0,0,0,0,0,0,6,22,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,349,            hours = 0;,4,0,0,0,0,0,4,4,0,13,10,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,352,            seconds += 60 * minutes;,4,1,0,0,0,0,0,0,0,6,24,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,353,            minutes = 0;,2,0,0,0,0,0,0,0,0,3,12,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,357,            seconds = 0;,2,0,0,0,0,0,0,0,0,3,12,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,265,        long millis = endMillis - startMillis;,10,1,0,0,0,0,4,4,0,20,38,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,266,        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {,0,0,0,1,3,0,0,2,0,2,45,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,270,        Token[] tokens = lexx(format);,2,0,0,2,4,0,4,2,0,8,30,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,274,        Calendar start = Calendar.getInstance(timezone);,2,0,0,1,2,0,6,2,0,10,48,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,275,        start.setTime(new Date(startMillis));,4,0,0,2,4,0,10,2,0,18,37,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,276,        Calendar end = Calendar.getInstance(timezone);,2,0,0,1,2,0,6,2,0,10,46,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,277,        end.setTime(new Date(endMillis));,2,0,0,2,4,0,4,2,0,8,33,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,282,        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);,14,2,0,2,4,0,8,0,0,24,68,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,284,        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);,10,1,0,2,4,0,8,0,0,19,77,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,285,        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);,10,1,0,2,4,0,8,0,0,19,65,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,286,        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);,14,4,0,2,4,0,12,0,0,31,62,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,289,        while (milliseconds < 0) {,2,1,0,1,3,0,0,0,0,3,26,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,293,        while (seconds < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,297,        while (minutes < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,301,        while (hours < 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,314,        while (months < 0) {,2,1,0,1,3,0,0,0,0,3,20,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,318,"        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);",6,0,0,1,2,0,8,0,0,15,81,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,320,"        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);",6,0,0,1,2,0,8,0,0,15,66,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,321,"        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);",6,0,0,1,2,0,8,0,0,15,67,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,322,"        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);",6,0,0,1,2,0,8,0,0,15,66,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,324,"        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);",2,0,1,1,2,0,4,2,0,10,60,3,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,329,"        if (!Token.containsTokenWithValue(tokens, y)) {",0,0,0,2,5,0,12,0,0,13,47,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,339,"        if (!Token.containsTokenWithValue(tokens, M)) {",2,0,0,2,5,3,16,2,0,25,47,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,347,"        if (!Token.containsTokenWithValue(tokens, H)) {",2,0,0,2,5,0,8,0,0,11,47,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,351,"        if (!Token.containsTokenWithValue(tokens, m)) {",0,0,0,2,5,0,8,0,0,9,47,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,355,"        if (!Token.containsTokenWithValue(tokens, s)) {",2,1,0,2,5,0,8,0,0,12,47,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,360,"        return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);",0,0,0,1,2,1,20,0,0,20,96,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,433,"        end.add( field, -1 * difference );",8,1,0,1,2,3,12,4,0,30,34,1,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,434,        int endValue = end.get(field);,4,0,0,1,2,0,10,0,0,14,30,1,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,435,        int startValue = start.get(field);,2,0,0,1,2,3,2,2,0,10,34,2,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,436,        if (endValue < startValue) {,4,1,0,1,3,0,0,0,0,5,28,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,441,            return 0;,0,0,0,0,0,1,4,0,0,4,9,7,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,395,"                    buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(months), count, '0') : Integer",2,0,0,2,5,0,18,0,0,21,96,12,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,487,                case 'M'  : value = M; break;,4,0,0,0,0,0,0,0,0,6,29,6,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,63,3865,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,534,            return false;,4,1,0,0,0,1,0,0,0,6,13,1,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,503,                    previous.increment();,2,0,0,1,2,0,8,0,0,13,21,3,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,566,            count++;,2,0,0,0,0,0,0,0,0,2,8,5,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,567,        },4,0,0,0,1,0,6,0,0,10,1,5,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,380,        StringBuffer buffer = new StringBuffer();,4,0,1,1,2,1,4,4,0,17,41,1,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,381,        boolean lastOutputSeconds = false;,10,0,0,0,0,0,4,0,0,15,34,3,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,383,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,384,            Token token = tokens[i];,2,0,1,1,2,0,0,2,0,8,24,6,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,385,            Object value = token.getValue();,2,0,0,1,2,0,4,2,0,8,32,6,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,386,            int count = token.getCount();,2,1,0,1,2,0,0,0,0,3,29,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,387,            if (value instanceof StringBuffer) {,2,0,0,1,3,0,0,2,0,4,36,7,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,528,            int sz = tokens.length;,10,1,0,0,0,0,4,0,0,16,23,1,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,575,            return count;,2,0,0,0,0,1,0,0,0,2,13,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,461,        java.util.ArrayList list = new java.util.ArrayList(array.length);,18,0,0,1,2,0,0,0,0,18,65,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,463,        boolean inLiteral = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,        return iValue - ((ValuedEnum) other).iValue;,6,1,0,2,4,1,0,2,0,9,44,4,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,126,        super(name);,2,0,0,1,2,0,0,0,0,2,12,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,127,        iValue = value;,4,0,0,0,0,0,0,0,0,5,15,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,519,        return getClass();,0,0,0,1,2,1,2,0,0,2,18,5,0.01754,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,314,        iName = name;,4,0,0,0,0,0,0,0,0,5,13,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,315,        iHashCode = 7 + getEnumClass().hashCode() + 3 * name.hashCode();,2,2,0,3,6,0,8,0,0,13,64,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,317,    },2,1,0,0,1,0,0,0,0,3,1,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,339,                ok = true;,6,1,0,0,0,0,0,0,0,9,10,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,350,        if (entry == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,351,            entry = createEntry(enumClass);,2,0,0,1,2,0,6,2,0,10,31,12,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,354,        if (entry.map.containsKey(name)) {,4,0,0,2,5,0,4,0,0,8,34,5,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,357,"        entry.map.put(name, this);",4,0,0,1,2,0,4,0,0,8,26,5,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,358,        entry.list.add(this);,8,0,0,1,2,0,2,0,0,11,21,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,484,        Entry entry = new Entry();,6,1,0,1,2,3,10,2,0,24,26,1,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,485,        Class cls = enumClass.getSuperclass();,2,0,0,1,2,0,4,2,0,8,38,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,486,        while (cls != null && cls != Enum.class && cls != ValuedEnum.class) {,6,5,0,1,3,0,0,4,0,15,69,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,495,        return entry;,2,0,0,0,0,1,0,0,0,2,13,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,297,          super();,4,2,0,1,2,0,8,2,0,16,8,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,279,        final Map map = new HashMap();,2,0,0,1,2,1,0,4,0,7,30,3,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,283,        final Map unmodifiableMap = Collections.unmodifiableMap(map);,2,0,0,1,2,1,6,2,0,11,61,3,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,287,        final List list = new ArrayList(25);,2,0,0,1,2,1,0,4,0,7,36,3,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,291,        final List unmodifiableList = Collections.unmodifiableList(list);,2,0,0,1,2,1,6,2,0,11,65,3,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,335,        Class cls = getClass();,4,0,0,1,2,0,2,4,0,10,23,3,0.01515,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,338,            if (cls == enumClass) {,4,1,0,1,3,0,0,0,0,5,23,6,0.01515,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,344,        if (ok == false) {,6,1,0,1,3,3,0,2,0,13,18,1,0.01515,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,185,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,337,        while (cls != null && cls != Enum.class && cls != ValuedEnum.class) {,6,5,0,1,3,0,0,4,0,15,69,4,0.01408,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,254,    private static final Map cEnumClasses = new HashMap();,2,0,0,1,2,3,0,4,0,9,54,2,0.01389,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,223,        if (str == null || (strLen = str.length()) == 0) {,4,4,0,3,7,0,14,0,0,24,50,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,226,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,227,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,2,1,0,4,9,0,10,0,0,15,55,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,276,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,303,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,329,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,330,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,7,31,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,355,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,383,"        return strip(str, null);",10,1,0,1,2,1,0,0,0,12,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,411,            return null;,2,1,1,0,0,1,0,0,0,7,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,471,            return str;,2,1,0,0,0,1,0,0,0,3,11,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,508,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,2,3,0,4,9,0,4,0,0,9,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,514,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,8,4,0,5,11,0,10,0,0,23,76,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,515,                start++;,2,0,0,0,0,0,0,0,0,3,8,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,547,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,6,0,0,6,47,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,548,            return str;,20,2,0,0,0,1,4,2,0,30,11,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,555,        } else if (stripChars.length() == 0) {,2,1,0,2,6,0,4,0,0,7,38,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,543,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,549,        return gval.getTime();,2,1,0,1,2,1,4,0,0,7,22,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,620,        if (val.get(Calendar.YEAR) > 280000000) {,4,1,0,2,5,0,4,0,0,9,41,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,642,        for (int i = 0; i < fields.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,644,                if (fields[i][j] == field) {,2,1,1,3,7,0,0,0,0,9,28,8,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,646,                    if (round && roundUp) {,4,1,0,1,3,0,0,0,0,5,23,10,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,663,                    return;,0,0,0,0,0,1,4,0,0,5,7,11,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,668,            boolean offsetSet = false;,2,0,0,0,0,0,0,0,0,4,26,3,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,46,"        lookupMap = new HashMap<CharSequence, CharSequence>();",6,0,0,1,2,0,0,6,0,15,54,3,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,51,"                this.lookupMap.put(seq[0], seq[1]);",2,0,1,3,6,0,2,0,0,8,35,9,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,452,"        if (str.startsWith(""--"")) {",2,0,0,2,5,0,4,0,0,7,27,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,725,        return new BigDecimal(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,309,                    wasWhite= true;,2,0,0,0,0,0,0,0,0,4,15,10,0.05263,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,314,            wasWhite= false;,2,0,0,0,0,0,0,0,0,4,16,6,0.0381,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,304,        boolean wasWhite= false;,2,0,0,0,0,0,0,0,0,3,24,5,0.03738,1,0,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,232,                if (!letters && !numbers) {,4,1,0,1,3,0,0,0,0,7,27,6,2.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,240,        char[] buffer = new char[count];,2,0,1,2,4,0,0,0,0,4,32,5,2.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,95,            T readObject = (T) in.readObject();,4,0,0,2,4,0,0,0,0,5,35,5,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,219,"        for (Map.Entry<TypeVariable<?>, Type> entry : toTypeVarAssigns.entrySet()) {",6,0,0,2,5,0,4,4,0,14,76,4,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,220,            Type toTypeArg = entry.getValue();,4,1,0,1,2,0,8,2,0,15,34,3,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,221,            Type fromTypeArg = fromTypeVarAssigns.get(entry.getKey());,2,0,0,2,4,0,8,2,0,12,58,6,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,83,"        int len = Character.codePointCount(input, 0, input.length());",2,0,0,2,4,0,10,0,0,12,61,5,0.0303,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,94,                    if (pos < len - 2) {,4,2,0,1,3,0,0,0,0,6,20,10,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,97,                        pos++;,2,0,0,0,0,0,0,0,0,3,6,12,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,100,                pos--;,2,0,0,0,0,0,0,0,0,3,6,8,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,496,"                    rule = selectNumberRule(Calendar.YEAR, tokenLen);",6,0,0,1,2,0,4,2,0,14,49,3,0.02222,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,495,                if (tokenLen >= 4) {,6,0,0,1,3,0,10,2,0,18,20,3,0.02174,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,40,        if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {,6,7,0,3,7,0,10,0,0,25,88,4,0.44444,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,54,            while(input.charAt(end) != ';') ,4,1,0,2,4,0,6,0,0,13,31,3,0.2,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3383,        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());,8,2,1,7,14,0,8,6,0,33,133,1,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,591,        if (u>0) { u=-u; } // make u negative,8,2,0,2,4,0,0,0,0,12,37,4,0.57143,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,584,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,0,3,0,3,7,0,12,0,0,15,43,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,277,        if (registry != null) {,2,0,0,1,3,0,0,0,0,3,23,8,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,278,            String name = desc;,4,0,0,0,0,0,0,2,0,6,19,6,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,91,"        this(pattern, Locale.getDefault());",2,0,0,2,4,0,4,0,0,6,35,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,820,        Calendar c = new GregorianCalendar(mTimeZone);,4,0,0,1,2,0,0,4,0,8,46,4,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,            return 2 + (end - start) + (isHex ? 1 : 0) + 1;,6,2,0,2,4,1,0,0,0,8,47,6,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,        if (cs == null || searchChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,        int csLen = cs.length();,2,1,0,1,2,0,0,0,0,3,24,5,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,            for (int j = 0; j < searchLen; j++) {,8,1,0,1,3,0,0,0,0,10,37,6,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,                        return false;,4,0,0,0,0,1,10,0,0,15,13,3,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1715,        if (cs == null || invalidChars == null) {,2,0,0,1,3,0,0,0,0,2,41,4,0.44444,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,194,        return cs == null || cs.length() == 0;,2,3,0,1,2,1,4,0,0,9,38,4,0.37113,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1455,                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {,2,1,0,1,3,0,0,0,0,3,111,4,0.28571,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1576,            if (searchChars.indexOf(ch) < 0) {,4,2,0,2,5,0,10,0,0,16,34,3,0.1,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,171,    },2,0,0,0,1,0,0,0,0,3,1,7,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,212,        return !StringUtils.isEmpty(cs);,2,1,0,1,2,1,0,0,0,3,32,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1490,"        return containsAny(cs, searchChars.toCharArray());",4,0,0,2,4,1,14,4,0,22,50,1,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,152,        return getRegistry().contains(new IDKey(value));,2,0,0,3,6,1,4,2,0,8,48,5,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,522,        getRegistry().add(new IDKey(value));,6,0,0,3,6,0,8,4,0,18,36,1,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,538,        getRegistry().remove(new IDKey(value));,2,0,0,3,6,0,4,2,0,8,39,5,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,104,    private static final ThreadLocal<Set<IDKey>> REGISTRY = new ThreadLocal<Set<IDKey>>() {,2,0,0,1,3,3,0,12,0,17,87,2,0.02273,1,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,910,            classes[i] = array[i].getClass();,4,0,1,3,6,0,2,2,0,17,33,1,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3295,            type = Object.class;,2,0,0,0,0,0,0,2,0,5,20,7,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3574,            return (T[]) new Object[] { null };,0,0,0,4,8,1,0,4,0,4,35,8,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,449,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2962,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,14,0,0,23,71,3,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,4,0,0,2,4,3,6,4,0,18,64,1,0.00319,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3676,            int greater = replacementList[i].length() - searchList[i].length();,4,1,1,4,8,0,8,0,0,22,67,3,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,230,            return StringUtils.EMPTY;,4,1,0,0,0,4,0,4,0,12,25,1,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,201,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,245,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.16667,1,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,253,        if (i == -1) {,2,1,0,1,3,0,0,0,0,4,14,4,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,203,        return out;,2,0,0,0,0,1,0,0,0,2,11,4,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,90,"        this(pattern, Locale.getDefault());",6,3,0,2,4,0,4,0,0,13,35,3,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/WordUtils,45,618,        if (upper == -1 || upper > str.length()) {,4,3,0,2,5,0,4,0,0,12,42,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,244,                            out.write('\\');,6,1,0,1,2,0,4,0,0,12,16,3,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,245,                        out.write('/');,2,0,1,1,2,0,14,2,0,23,15,3,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,86,"        return escapeJavaStyleString(str, false);",2,0,0,1,2,4,8,2,0,17,41,1,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,127,"        return escapeJavaStyleString(str, true);",10,0,0,1,2,1,10,0,0,22,40,1,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,158,        return nullText;,2,0,0,0,0,1,0,0,0,2,16,4,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1230,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,381,                isEquals = lhs.equals(rhs);,4,0,0,1,2,0,6,2,0,13,27,4,0.05263,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,772,            return new UnpaddedNumberField(field);,2,0,0,1,2,1,0,2,0,4,38,6,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,954,        return mLocale;,4,0,0,0,0,1,4,0,0,9,15,3,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,465,        if (locale != null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,471,            if (locale == null) {,4,1,0,1,3,2,4,2,0,13,21,2,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,286,"            key = new Pair(key, locale);",6,0,0,1,2,0,0,2,0,9,28,6,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,87,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,237,                        out.write(ch);,4,0,0,1,2,0,0,0,0,6,14,12,0.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,676,                        if (field == DateUtils.SEMI_MONTH) {,6,1,0,1,3,0,0,0,0,7,36,12,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,9,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,179,        stopTime = System.currentTimeMillis();,2,0,0,1,2,0,4,0,0,7,38,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,180,        this.runningState = STATE_SUSPENDED;,4,0,0,0,0,0,0,0,0,5,36,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,631,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",6,0,0,1,2,0,4,0,0,11,57,7,0.07692,1,1,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);",4,0,0,1,2,1,10,2,0,17,38,5,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1730,        for (int i = startIndex; i < thisBuf.length; i++) {,12,1,0,1,3,0,0,0,0,14,51,4,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,8,1,0,0,0,0,0,0,0,9,34,5,0.57143,1,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,852,                        },4,1,0,0,1,0,6,0,0,12,1,8,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang/Entities,62,922,"                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);",2,0,0,2,4,0,8,0,0,11,63,18,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/Entities,62,926,                            },4,3,0,0,1,0,6,0,0,15,1,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,318,"        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);",6,0,0,1,2,0,8,0,0,15,81,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,320,"        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);",6,0,0,1,2,0,8,0,0,15,66,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,321,"        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);",6,0,0,1,2,0,8,0,0,15,67,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,322,"        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);",6,0,0,1,2,0,8,0,0,15,66,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,324,"        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);",2,0,1,1,2,0,4,2,0,10,60,3,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,433,"        end.add( field, -1 * difference );",8,1,0,1,2,3,12,4,0,30,34,1,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,434,        int endValue = end.get(field);,4,0,0,1,2,0,10,0,0,14,30,1,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,435,        int startValue = start.get(field);,2,0,0,1,2,3,2,2,0,10,34,2,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,436,        if (endValue < startValue) {,4,1,0,1,3,0,0,0,0,5,28,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,306,            days += 31;,2,0,0,0,0,0,0,0,0,3,11,6,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,439,            return newdiff;,2,0,0,0,0,1,0,0,0,2,15,6,0.0,1,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,        return iValue - ((ValuedEnum) other).iValue;,6,1,0,2,4,1,0,2,0,9,44,4,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,204,        if (iToString == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,205,            String shortName = ClassUtils.getShortClassName(getEnumClass());,2,0,0,2,4,0,6,2,0,10,64,6,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,206,"            iToString = shortName + ""["" + getName() + ""="" + getValue() + ""]"";",6,1,0,3,6,0,4,2,0,17,65,3,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,208,        return iToString;,10,3,0,0,0,1,4,0,0,17,17,3,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,642,        for (int i = 0; i < fields.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,644,                if (fields[i][j] == field) {,2,1,1,3,7,0,0,0,0,9,28,8,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,646,                    if (round && roundUp) {,4,1,0,1,3,0,0,0,0,5,23,10,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,709,"                val.set(fields[i][0], val.get(fields[i][0]) - offset);",2,1,1,6,12,0,8,0,0,19,54,7,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,72,    private static final int[][] fields = {,4,0,0,2,5,3,10,0,0,18,39,1,0.05,1,1,-1
