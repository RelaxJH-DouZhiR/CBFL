dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1184,            ensureCapacity(size + width);,4,1,0,1,2,0,2,0,0,7,29,7,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1185,            String str = (obj == null ? getNullText() : obj.toString());,0,0,0,3,6,0,0,0,0,9,60,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1186,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1227,        if (width > 0) {,6,3,0,1,3,0,8,0,0,18,16,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1228,            ensureCapacity(size + width);,6,1,0,1,2,0,8,2,0,17,29,5,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1229,            String str = (obj == null ? getNullText() : obj.toString());,4,1,0,3,6,0,6,2,0,14,60,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1230,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,98,        this(CAPACITY);,2,0,0,1,2,0,0,0,0,2,15,4,0.02837,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,99,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02837,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,107,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,108,        if (initialCapacity <= 0) {,0,0,0,1,3,0,0,0,0,4,27,4,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,111,        buffer = new char[initialCapacity];,2,0,1,1,2,0,0,0,0,5,35,4,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,112,    },2,0,0,0,1,0,6,0,0,9,1,3,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,216,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,217,    },2,1,0,0,1,0,0,0,0,3,1,7,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",0,0,0,1,2,0,0,0,0,3,69,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,2,0,0,1,2,3,0,4,0,10,68,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,2,0,0,1,2,3,0,4,0,10,69,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",2,0,0,2,4,3,2,4,0,13,94,1,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,372,            return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,381,                isEquals = lhs.equals(rhs);,4,0,0,1,2,0,6,2,0,13,27,4,0.05263,1,1,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,368,        if (isEquals == false) {,2,1,0,1,3,0,0,0,0,4,24,4,0.02222,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,371,        if (lhs == rhs) {,6,1,0,1,3,0,6,0,0,15,17,3,0.02222,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,374,        if (lhs == null || rhs == null) {,4,3,0,1,3,0,0,0,0,7,33,4,0.02222,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,146,            if (numerator==Integer.MIN_VALUE ||,6,2,0,0,1,0,0,0,0,8,35,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,150,            numerator = -numerator;,2,0,0,0,0,0,0,4,0,6,23,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,151,            denominator = -denominator;,4,0,0,0,0,0,0,0,0,6,27,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,578,        if (u>0) { u=-u; } // make u negative,0,0,0,2,4,0,4,0,0,5,37,5,0.125,1,1,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,579,        if (v>0) { v=-v; } // make v negative,0,0,0,2,4,0,0,0,0,6,37,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,581,        int k=0;,0,0,0,0,0,0,0,0,0,0,8,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1708,"        public Pair(Object obj1, Object obj2) {",6,0,0,1,3,1,0,4,0,11,39,3,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1709,            mObj1 = obj1;,4,2,0,0,0,0,0,0,0,6,13,10,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1710,            mObj2 = obj2;,0,0,0,0,0,0,0,0,0,0,13,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1711,        },4,1,0,0,1,0,0,0,0,5,1,8,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1738,            return,0,0,0,0,0,0,0,0,0,0,6,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,772,            return new UnpaddedNumberField(field);,2,0,0,1,2,1,0,2,0,4,38,6,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,954,        return mLocale;,4,0,0,0,0,1,4,0,0,9,15,3,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1185,        UnpaddedNumberField(int field) {,0,0,0,1,3,0,0,0,0,4,32,4,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1186,            mField = field;,2,0,0,0,0,3,0,4,0,9,15,2,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1187,        },0,0,0,0,1,0,0,0,0,1,1,4,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,44,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,45,    },4,0,0,0,1,0,0,0,0,4,1,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,64,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,65,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,150,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,173,"            throw new IllegalArgumentException(""The Writer must not be null"");",0,0,0,1,2,0,4,2,0,8,66,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,229,                        out.write('\\');,2,0,0,1,2,3,4,2,0,12,16,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,230,"                        out.write('""');",0,0,0,1,2,0,4,0,0,5,15,13,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,231,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,676,                        if (field == DateUtils.SEMI_MONTH) {,6,1,0,1,3,0,0,0,0,7,36,12,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,689,"                            val.add(fields[i][0], 1);",0,0,0,3,6,0,0,0,0,9,25,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,437,        if (date == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,440,        Calendar gval = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,441,        gval.setTime(date);,0,0,0,1,2,0,6,0,0,6,19,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,9,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,110,            if (str.charAt(2) != '_') {,8,5,0,2,5,0,4,0,0,18,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,179,        stopTime = System.currentTimeMillis();,2,0,0,1,2,0,4,0,0,7,38,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,180,        this.runningState = STATE_SUSPENDED;,4,0,0,0,0,0,0,0,0,5,36,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,631,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",6,0,0,1,2,0,4,0,0,11,57,7,0.07692,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,632,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.07692,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,167,"        return getInstance(pattern, null, null);",0,0,0,1,2,1,4,0,0,5,40,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,553,            locale = Locale.getDefault();,4,0,0,1,2,3,6,2,0,17,29,1,0.0625,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,614,"                    rule = selectNumberRule(Calendar.YEAR, tokenLen);",12,0,0,1,2,0,4,0,0,17,49,3,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,625,                    rule = TwoDigitMonthField.INSTANCE;,10,1,0,0,0,0,4,0,0,16,35,3,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,777,"            return new PaddedNumberField(field, padding);",4,0,0,1,2,1,0,2,0,6,45,6,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1261,"        PaddedNumberField(int field, int size) {",0,0,0,1,3,0,0,0,0,4,40,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1262,            if (size < 3) {,2,1,0,1,3,0,0,0,0,3,15,5,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1266,            mField = field;,0,0,0,0,0,0,0,0,0,0,15,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1267,            mSize = size;,0,0,0,0,0,0,0,0,0,0,13,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1083,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1084,    },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,87,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,105,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,464,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1508,            return false;,4,1,0,0,0,1,8,6,0,20,13,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,398,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,401,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,404,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,0,0,0,7,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,411,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,414,        char lastChar = str.charAt(str.length() - 1);,0,0,0,2,4,0,0,0,0,6,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,418,        int decPos = str.indexOf('.');,0,0,0,1,2,0,0,0,0,3,30,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,419,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,12,0,0,19,53,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,421,        if (decPos > -1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,433,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,436,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,438,            dec = null;,6,0,0,0,0,0,0,0,0,8,11,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,440,        if (!Character.isDigit(lastChar)) {,2,1,1,2,5,0,6,0,0,14,35,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,441,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,444,                exp = null;,4,1,0,0,0,1,4,2,0,12,11,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,447,"            String numeric = str.substring(0, str.length() - 1);",8,4,0,2,4,0,8,2,0,22,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,448,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,449,            switch (lastChar) {,0,0,0,1,3,0,0,0,0,4,19,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,452,                    if (dec == null,4,1,0,0,1,3,0,0,0,8,15,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,457,                            return createLong(numeric);,0,0,0,1,2,1,4,0,0,4,27,12,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,556,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,559,        for (int i = str.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,560,            if (str.charAt(i) != '0') {,6,2,0,2,5,0,6,0,0,16,27,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,561,                return false;,4,1,0,0,0,1,0,0,0,7,13,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,185,        return str == null || str.length() == 0;,0,0,0,1,2,1,0,0,0,4,40,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,223,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,879,        if (width > 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,880,            ensureCapacity(size + width);,4,1,0,1,2,0,2,0,0,7,29,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,881,            String str = (obj == null ? getNullText() : obj.toString());,4,1,0,3,6,0,6,2,0,14,60,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,882,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,883,            if (strLen >= width) {,4,1,0,1,3,0,0,0,0,5,22,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);",4,0,0,1,2,1,10,2,0,17,38,5,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,107,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.008,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,108,        if (initialCapacity <= 0) {,2,1,0,1,3,0,0,0,0,3,27,4,0.008,0,0,-1
