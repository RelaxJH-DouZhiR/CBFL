dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1388,            if (!allowSigns,0,0,0,0,1,0,0,0,0,1,15,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1393,                return foundDigit;,0,0,0,0,0,1,0,0,0,1,18,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1395,            if (chars[i] == 'l',2,0,0,1,3,0,0,0,0,2,19,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1398,                return foundDigit && !hasExp;,10,2,1,0,0,4,2,2,0,25,29,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1401,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,36,230,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,41,    public static final Long LONG_ZERO = new Long(0L);,4,0,0,1,2,6,4,6,0,20,50,2,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,43,    public static final Long LONG_ONE = new Long(1L);,6,0,0,1,2,3,0,4,0,14,49,1,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,2,0,0,1,2,3,0,4,0,10,56,2,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,47,    public static final Integer INTEGER_ZERO = new Integer(0);,8,1,0,1,2,0,0,0,0,10,58,4,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,49,    public static final Integer INTEGER_ONE = new Integer(1);,2,0,0,1,2,0,6,0,0,8,57,3,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,51,    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);,2,0,0,1,2,3,0,4,0,10,64,2,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,53,    public static final Short SHORT_ZERO = new Short((short) 0);,0,0,0,2,4,0,0,0,0,6,60,4,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,55,    public static final Short SHORT_ONE = new Short((short) 1);,4,0,0,2,4,0,4,0,0,8,59,17,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,0,0,0,2,4,0,0,0,0,6,66,4,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,59,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,2,0,0,2,4,3,4,2,0,11,60,2,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,61,    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);,4,0,0,2,4,3,12,2,0,21,59,1,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,63,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,4,3,0,2,4,0,0,0,0,7,66,4,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,65,    public static final Double DOUBLE_ZERO = new Double(0.0d);,8,3,0,1,2,0,0,0,0,12,58,4,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,0,0,0,1,2,0,0,0,0,3,57,4,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,69,    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);,2,0,1,1,2,0,0,0,0,4,64,5,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,0,0,0,1,2,0,0,0,0,3,55,4,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,73,    public static final Float FLOAT_ONE = new Float(1.0f);,0,0,0,1,2,0,0,0,0,3,54,4,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,75,    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);,2,0,0,1,2,3,2,4,0,15,61,1,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,36,87,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,6,2,0,16,74,1,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,36,105,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",4,0,0,1,2,3,2,4,0,14,78,1,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,36,122,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",10,1,0,1,2,3,10,4,0,31,80,1,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,36,138,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",0,0,0,1,2,0,0,0,0,3,80,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,36,154,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",0,0,0,1,2,0,0,0,0,3,92,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,36,175,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",0,0,0,1,2,0,0,0,0,3,86,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,36,191,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",0,0,0,1,2,0,4,0,0,4,90,7,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,36,207,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",4,2,0,1,2,0,4,0,0,11,82,1,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,36,224,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",0,0,0,1,2,0,8,0,0,8,88,5,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,36,241,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",8,0,0,1,2,0,8,0,0,16,78,3,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,36,258,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",2,0,0,1,2,3,2,2,0,10,88,2,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,36,275,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,3,2,2,0,10,78,2,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,36,291,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,4,0,0,1,2,3,4,4,0,16,72,1,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,36,307,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,2,0,0,1,2,0,0,0,0,2,82,6,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,36,324,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",0,0,0,1,2,0,12,2,0,14,86,9,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,36,342,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",0,0,0,1,2,0,0,0,0,3,86,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2954,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2956,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2959,        final Class<?> type1 = array1.getClass().getComponentType();,2,0,0,2,4,1,6,2,0,11,60,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2960,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",10,1,0,4,8,0,6,4,0,21,80,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2961,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2962,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,14,0,0,23,71,3,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2964,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.33333,1,1,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,4,0,0,2,4,3,6,4,0,18,64,1,0.00319,1,1,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,58,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,62,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,66,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,70,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,4,0,0,2,4,3,0,4,0,11,65,1,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,74,    public static final int[] EMPTY_INT_ARRAY = new int[0];,0,0,0,2,4,0,0,0,0,6,55,4,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,78,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,82,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,86,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,90,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,0,0,2,4,3,0,2,0,9,58,1,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,94,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,98,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,0,0,5,64,2,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,102,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,2,0,0,2,4,3,0,4,0,9,71,2,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,106,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,8,3,0,2,4,3,0,0,0,15,61,1,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,110,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,114,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,118,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,122,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,12,0,0,12,58,7,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,126,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,0,0,0,2,4,0,0,0,0,6,80,4,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,143,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,144,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,160,"        return toString(array, ""{}"");",0,0,0,2,4,1,0,0,0,7,29,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,176,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,177,            return stringIfNull;,2,0,0,0,0,1,8,2,0,12,20,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,179,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",0,0,0,3,6,1,0,0,0,10,87,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,193,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,3,6,1,8,2,0,10,61,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,224,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,225,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,227,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",2,0,0,3,6,0,6,2,0,10,88,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,228,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,229,            Object object = array[i];,2,0,1,1,2,0,0,2,0,8,25,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,230,"            if (object instanceof Map.Entry<?, ?>) {",0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,231,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",12,0,0,1,2,0,0,0,0,12,47,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,232,"                map.put(entry.getKey(), entry.getValue());",0,0,0,3,6,0,12,0,0,12,42,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,233,            } else if (object instanceof Object[]) {,0,0,0,2,6,0,0,0,0,8,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,234,                Object[] entry = (Object[]) object;,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,235,                if (entry.length < 2) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,236,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",0,0,0,0,1,0,0,0,0,1,63,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,240,"                map.put(entry[0], entry[1]);",2,1,1,3,6,0,4,0,0,11,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,241,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,242,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,10,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,247,        return map;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,265,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,266,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,268,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,281,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,282,            return null;,4,0,0,0,0,1,6,0,0,10,12,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,284,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,297,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,298,            return null;,0,0,0,0,0,1,8,0,0,8,12,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,300,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,313,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,314,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,316,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,329,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,330,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,332,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,345,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,346,            return null;,12,0,0,0,0,1,0,2,0,16,12,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,348,        return array.clone();,2,0,0,1,2,1,0,2,0,4,21,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,361,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,362,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,364,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,377,        if (array == null) {,4,2,0,1,3,0,10,0,0,16,20,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,378,            return null;,2,0,0,0,0,1,4,0,0,6,12,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,380,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,393,        if (array == null) {,8,5,0,1,3,0,8,0,0,21,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,394,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,396,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,430,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,431,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,433,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,434,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,436,        if (endIndexExclusive > array.length) {,8,1,0,1,3,3,0,4,0,16,39,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,437,            endIndexExclusive = array.length;,2,0,0,0,0,0,0,2,0,4,33,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,439,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,440,        Class<?> type = array.getClass().getComponentType();,0,0,0,2,4,0,0,0,0,6,52,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,441,        if (newSize <= 0) {,2,0,0,1,3,2,0,2,0,6,19,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,442,"            return (T[]) Array.newInstance(type, 0);",0,0,0,3,6,1,0,0,0,10,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,182,"        return getInstance(pattern, timeZone, null);",0,0,0,1,2,1,6,0,0,7,44,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1300,                for (int i = mSize; --i >= 2; ) {,0,0,0,1,3,0,0,0,0,4,33,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1301,                    buffer.append('0');,0,0,0,1,2,0,4,0,0,5,19,10,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1303,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1304,                buffer.append((char)(value % 10 + '0'));,0,0,0,3,6,0,0,0,0,9,40,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1423,"            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",4,1,0,2,4,0,8,0,0,13,51,6,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1424,        },2,0,0,0,1,0,0,0,0,2,1,5,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1430,            buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,6,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1431,            buffer.append((char)(value % 10 + '0'));,4,2,0,3,6,3,6,2,0,19,40,1,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1432,        },0,0,0,0,1,0,0,0,0,1,1,4,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1310,"                    Validate.isTrue(value > -1, ""Negative values should not be possible"", value);",2,1,0,1,2,0,6,0,0,11,77,10,0.03125,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1311,                    digits = Integer.toString(value).length();,2,0,0,2,4,0,8,0,0,11,42,9,0.03125,0,0,-1
defect4j,lang,org/apache/commons/lang3/Validate,38,121,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.03125,0,0,-1
defect4j,lang,org/apache/commons/lang3/Validate,38,124,    },0,0,0,0,1,0,0,0,0,1,1,4,0.03125,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1347,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,10,0,0,10,39,6,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1348,        },2,0,0,0,1,3,2,2,0,10,1,2,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1354,            if (value < 100) {,2,1,0,1,3,0,0,0,0,3,18,5,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1355,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1356,                buffer.append((char)(value % 10 + '0'));,4,3,0,3,6,0,4,2,0,16,40,1,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1360,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1098,            buffer.append(mValue);,4,0,0,1,2,0,6,0,0,10,22,1,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1099,        },2,0,0,0,1,3,0,4,0,9,1,2,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,633,"                rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);",0,0,0,1,2,0,0,0,0,3,56,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,634,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,639,"                rule = selectNumberRule(Calendar.SECOND, tokenLen);",6,0,0,1,2,0,4,0,0,11,51,7,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,640,                break;,0,0,0,0,0,0,4,0,0,6,6,5,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,738,                    if (i + 1 < length && pattern.charAt(i + 1) == '\'') {,6,5,0,2,5,0,4,0,0,16,54,10,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,743,                        inLiteral = !inLiteral;,2,1,0,0,0,0,0,0,0,3,23,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,832,"        return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();",0,0,0,3,6,1,0,0,0,10,73,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,871,        if (mTimeZoneForced) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,875,"        return applyRules(calendar, buf);",0,0,0,1,2,1,14,0,0,14,33,1,0.0303,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1292,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,10,0,0,10,39,6,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1293,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1299,            if (value < 100) {,4,1,0,1,3,3,2,2,0,13,18,1,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1307,                if (value < 1000) {,2,1,0,1,3,0,0,0,0,3,19,7,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1313,                for (int i = mSize; --i >= digits; ) {,0,0,0,1,3,0,0,0,0,4,38,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1316,                buffer.append(Integer.toString(value));,0,0,0,2,4,0,10,0,0,10,39,8,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1318,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,636,"                rule = selectNumberRule(Calendar.MINUTE, tokenLen);",0,0,0,1,2,0,0,0,0,3,51,4,0.02941,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,637,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.02941,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,887,        Rule[] rules = mRules;,4,0,0,1,2,0,0,2,0,6,22,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,888,        int len = mRules.length;,6,0,0,0,0,0,0,0,0,6,24,5,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,889,        for (int i = 0; i < len; i++) {,8,1,0,1,3,0,0,0,0,10,31,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,890,"            rules[i].appendTo(buf, calendar);",0,0,0,2,4,0,0,0,0,6,33,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,892,        return buf;,2,0,0,0,0,1,0,0,0,2,11,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,627,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",0,0,0,1,2,0,0,0,0,3,57,4,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,628,                break;,0,0,0,0,0,0,12,0,0,13,6,3,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,549,            locale = Locale.getDefault();,2,0,0,1,2,0,4,0,0,7,29,6,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,621,                    rule = TwoDigitMonthField.INSTANCE;,14,1,0,0,0,0,0,0,0,17,35,1,0.02439,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3612,        if (text == null || text.length() == 0 || searchList == null || ,4,8,0,1,3,0,4,0,0,16,63,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3615,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3619,        if (timeToLive < 0) {,4,1,0,1,3,0,6,2,0,13,21,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3623,        int searchLength = searchList.length;,0,0,0,0,0,0,0,0,0,0,37,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3624,        int replacementLength = replacementList.length;,0,0,0,0,0,0,0,0,0,0,47,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3627,        if (searchLength != replacementLength) {,10,1,0,1,3,0,0,0,0,11,40,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3635,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,2,0,1,2,4,0,0,0,0,5,64,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3638,        int textIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3639,        int replaceIndex = -1;,2,0,0,0,0,0,0,0,0,3,22,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3640,        int tempIndex = -1;,2,0,0,0,0,0,12,0,0,16,19,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3644,        for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3645,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3650,            tempIndex = text.indexOf(searchList[i]);,2,0,1,2,4,0,4,0,0,11,40,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3653,            if (tempIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3654,                noMoreMatchesForReplIndex[i] = true;,2,0,1,1,2,3,0,0,0,11,36,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3656,                if (textIndex == -1 || tempIndex < textIndex) {,0,0,0,1,3,0,0,0,0,4,47,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3657,                    textIndex = tempIndex;,0,3,0,0,0,0,12,0,0,15,22,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3658,                    replaceIndex = i;,0,0,0,0,0,0,0,0,0,0,17,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3665,        if (textIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3666,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3669,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3672,        int increase = 0;,2,0,0,0,0,0,0,0,0,2,17,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3675,        for (int i = 0; i < searchList.length; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3676,            int greater = replacementList[i].length() - searchList[i].length();,4,1,1,4,8,0,8,0,0,22,67,3,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3677,            if (greater > 0) {,2,1,0,1,3,0,0,0,0,3,18,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3682,"        increase = Math.min(increase, text.length() / 5);",0,0,0,2,4,0,0,0,0,6,49,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3684,        StringBuilder buf = new StringBuilder(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,64,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3686,        while (textIndex != -1) {,0,0,0,1,3,0,0,0,0,4,25,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3688,            for (int i = start; i < textIndex; i++) {,0,0,0,1,3,0,0,0,0,4,41,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3689,                buf.append(text.charAt(i));,0,0,0,2,4,0,10,0,0,10,27,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3691,            buf.append(replacementList[replaceIndex]);,4,0,0,2,4,0,0,4,0,8,42,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3693,            start = textIndex + searchList[replaceIndex].length();,2,1,0,2,4,0,0,0,0,3,54,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3695,            textIndex = -1;,4,0,0,0,0,3,0,0,0,9,15,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3696,            replaceIndex = -1;,2,0,0,0,0,0,0,0,0,4,18,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3697,            tempIndex = -1;,4,1,0,0,0,3,16,4,0,31,15,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3700,            for (int i = 0; i < searchLength; i++) {,8,2,1,1,3,0,4,0,0,20,40,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3701,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3706,"                tempIndex = text.indexOf(searchList[i], start);",2,0,1,2,4,0,6,0,0,13,47,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3709,                if (tempIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3710,                    noMoreMatchesForReplIndex[i] = true;,0,0,1,1,2,0,0,0,0,6,36,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3712,                    if (textIndex == -1 || tempIndex < textIndex) {,2,0,0,1,3,0,0,2,0,4,47,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3713,                        textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,12,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3714,                        replaceIndex = i;,10,0,0,0,0,6,14,4,0,39,17,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3721,        int textLength = text.length();,2,0,0,1,2,0,8,0,0,10,31,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3722,        for (int i = start; i < textLength; i++) {,0,0,0,1,3,0,0,0,0,4,42,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3723,            buf.append(text.charAt(i));,0,0,0,2,4,0,4,2,0,6,27,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3725,        String result = buf.toString();,0,0,0,1,2,0,0,0,0,3,31,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3726,        if (!repeat) {,0,0,0,1,3,0,0,0,0,4,14,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,167,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,168,    },0,0,0,0,1,0,4,0,0,5,1,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,191,        return str == null || str.length() == 0;,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,209,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,6,0,0,7,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,229,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,230,            return true;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,232,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,234,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,237,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,257,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,286,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,312,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,313,        return isEmpty(ts) ? null : ts;,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,338,        return str == null ? EMPTY : str.trim();,2,1,0,1,2,1,4,0,0,7,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,366,"        return strip(str, null);",4,1,0,1,2,1,4,0,0,10,24,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,393,        if (str == null) {,8,2,0,1,3,0,0,0,0,11,18,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,394,            return null;,0,0,0,0,0,1,6,0,0,6,12,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,396,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,397,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,423,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,453,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,454,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,456,"        str = stripStart(str, stripChars);",6,0,0,1,2,0,0,2,0,8,34,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,457,"        return stripEnd(str, stripChars);",6,1,0,1,2,1,0,0,0,8,33,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,486,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,487,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,489,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,490,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,491,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,2,0,0,4,9,0,0,0,0,3,72,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,492,                start++;,2,0,0,0,0,0,6,0,0,8,8,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,494,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,495,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,497,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,0,0,0,5,11,0,0,0,0,16,76,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,498,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,501,        return str.substring(start);,0,0,0,1,2,1,0,2,0,4,28,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,530,        if (str == null || (end = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,531,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,534,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,535,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,4,3,0,4,9,0,8,0,0,15,67,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,536,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,538,        } else if (stripChars.length() == 0) {,4,2,0,2,6,0,4,6,0,18,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,539,            return str;,4,0,0,0,0,4,2,2,0,12,11,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,541,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,6,4,0,5,11,3,10,2,0,27,71,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,542,                end--;,2,0,0,0,0,0,0,0,0,3,6,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,545,"        return str.substring(0, end);",14,2,0,1,2,1,6,2,0,27,29,0,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,570,"        return stripAll(strs, null);",0,0,0,1,2,1,8,0,0,9,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,600,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,601,            return strs;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,603,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,4,0,0,4,38,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,604,        for (int i = 0; i < strsLen; i++) {,2,1,1,1,3,0,0,0,0,11,35,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,605,"            newArr[i] = strip(strs[i], stripChars);",2,0,0,3,6,0,0,0,0,4,39,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,607,        return newArr;,6,3,0,0,0,1,4,0,0,14,14,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1045,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",0,0,0,3,6,1,0,0,0,10,60,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1018,        return str.indexOf(searchStr) >= 0;,0,1,0,1,2,1,6,0,0,7,35,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1015,        if (str == null || searchStr == null) {,4,3,0,1,3,0,6,0,0,13,39,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,168,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,169,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,192,        return str == null || str.length() == 0;,4,3,0,1,2,1,4,0,0,11,40,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,210,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,16,0,0,17,33,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,230,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,231,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,233,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,234,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,2,1,0,4,9,0,24,0,0,27,55,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,235,                return false;,2,0,0,0,0,1,4,2,0,9,13,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,238,        return true;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,258,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,6,0,0,7,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,287,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,313,        String ts = trim(str);,8,0,0,1,2,0,4,2,0,14,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,314,        return isEmpty(ts) ? null : ts;,4,0,0,1,2,1,4,0,0,9,31,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,339,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,367,"        return strip(str, null);",0,0,0,1,2,1,4,0,0,5,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,394,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,395,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,397,"        str = strip(str, null);",2,0,0,1,2,0,4,0,0,8,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,398,        return str.length() == 0 ? null : str;,6,1,0,1,2,1,10,2,0,19,38,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,424,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,454,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,455,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,457,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,458,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,487,        if (str == null || (strLen = str.length()) == 0) {,2,0,0,3,7,0,0,0,0,2,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,488,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,490,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,491,        if (stripChars == null) {,2,1,0,1,3,0,6,0,0,9,25,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,492,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,493,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,495,        } else if (stripChars.length() == 0) {,10,2,0,2,6,0,4,0,0,17,38,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,496,            return str;,0,1,0,0,0,1,6,0,0,7,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,498,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,2,0,0,5,11,0,4,0,0,9,76,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,499,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,502,        return str.substring(start);,2,0,0,1,2,1,10,0,0,13,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,531,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,12,0,0,12,47,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,532,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,535,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,536,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,4,1,1,4,9,3,12,12,0,35,67,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,537,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,539,        } else if (stripChars.length() == 0) {,2,0,0,2,6,0,0,2,0,5,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,540,            return str;,8,1,0,0,0,1,8,4,0,23,11,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,542,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,4,4,0,5,11,0,8,0,0,17,71,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,543,                end--;,2,0,0,0,0,3,2,0,0,8,6,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,546,"        return str.substring(0, end);",4,0,0,1,2,1,6,0,0,10,29,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,571,"        return stripAll(strs, null);",8,4,0,1,2,1,0,0,0,12,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,601,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,602,            return strs;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,604,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,605,        for (int i = 0; i < strsLen; i++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,606,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,608,        return newArr;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,634,        return str1 == null ? str2 == null : str1.equals(str2);,4,2,0,1,2,1,12,0,0,19,55,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,659,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,684,        if (isEmpty(str)) {,2,1,0,2,5,0,4,0,0,7,19,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,685,            return -1;,0,0,0,0,0,1,4,0,0,6,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,687,        return str.indexOf(searchChar);,2,0,0,1,2,1,0,0,0,2,31,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,716,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,717,            return -1;,2,1,0,0,0,4,4,0,0,13,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,719,"        return str.indexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,745,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,746,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,748,        return str.indexOf(searchStr);,0,0,0,1,2,1,6,0,0,6,30,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,779,        if (str == null || searchStr == null || ordinal <= 0) {,6,5,0,1,3,0,0,0,0,11,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,780,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,782,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,783,            return 0;,2,0,0,0,0,1,6,0,0,8,9,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,785,        int found = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,786,        int index = INDEX_NOT_FOUND;,6,1,0,0,0,0,6,0,0,14,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,788,"            index = str.indexOf(searchStr, index + 1);",6,1,0,1,2,0,10,2,0,20,42,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,789,            if (index < 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,790,                return index;,4,0,0,0,0,1,0,2,0,6,13,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,792,            found++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,793,        } while (found < ordinal);,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,794,        return index;,2,0,0,0,0,1,0,0,0,3,13,10,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,829,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,830,            return -1;,10,0,1,0,0,1,2,4,0,20,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,833,        if (searchStr.length() == 0 && startPos >= str.length()) {,2,1,0,3,7,0,0,0,0,3,58,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,834,            return str.length();,0,1,0,1,2,1,12,0,0,14,20,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,836,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,861,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,862,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,864,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,6,0,0,6,35,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,895,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,896,            return -1;,10,1,0,0,0,1,0,0,0,12,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,898,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,924,        if (str == null || searchStr == null) {,4,3,0,1,3,0,6,0,0,13,39,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,925,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,927,        return str.lastIndexOf(searchStr);,2,0,0,1,2,1,6,2,0,10,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,959,        if (str == null || searchStr == null) {,2,0,0,1,3,0,0,0,0,2,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,960,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,962,"        return str.lastIndexOf(searchStr, startPos);",4,0,0,1,2,1,8,6,0,19,44,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,987,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,170,            return StringUtils.EMPTY;,6,1,0,0,0,1,0,0,0,7,25,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,230,            return StringUtils.EMPTY;,4,1,0,0,0,4,0,4,0,12,25,1,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,229,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,232,        return getPackageName(cls.getName());,0,0,0,2,4,1,0,0,0,7,37,4,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,201,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,245,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.16667,1,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,252,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,54,4,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,253,        if (i == -1) {,2,1,0,1,3,0,0,0,0,4,14,4,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,256,"        return className.substring(0, i);",0,0,0,1,2,1,6,0,0,6,33,5,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,86,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,2,0,0,1,2,3,12,2,0,19,94,1,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",4,0,0,1,2,0,4,2,0,10,53,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",4,0,0,1,2,0,4,2,0,10,47,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",4,0,0,1,2,0,4,2,0,10,57,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",8,1,0,1,2,0,10,2,0,21,53,1,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",0,0,0,1,2,0,0,0,0,3,47,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",4,0,0,1,2,0,4,2,0,10,51,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",4,1,0,1,2,0,0,0,0,5,49,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",8,0,0,1,2,0,4,0,0,12,46,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,91,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,0,0,0,2,5,0,0,0,0,7,62,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,455,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,459,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,0,0,0,4,8,0,0,0,0,12,67,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,460,"            escapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,24,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,461,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,498,        if (writer == null ) {,4,1,0,1,3,0,6,0,0,12,22,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,501,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,504,"        Entities.HTML40.escape(writer, string);",4,0,0,1,2,0,6,0,0,10,39,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,505,    },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,832,"                    writer.write(""&#"");",0,0,0,1,2,0,4,0,0,5,19,11,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,833,"                    writer.write(Integer.toString(c, 10));",6,3,0,2,4,0,10,0,0,19,38,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,834,                    writer.write(';');,0,0,0,1,2,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,536,            return super.name(value);,0,0,0,1,2,1,0,0,0,4,25,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,831,                if (c > 0x7F) {,0,0,0,1,3,0,0,0,0,4,15,4,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,961,"                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);",2,0,0,2,4,0,8,0,0,11,63,18,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,826,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,827,        for (int i = 0; i < len; i++) {,0,0,0,1,3,0,0,0,0,4,31,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,828,            char c = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.2,1,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,829,            String entityName = this.entityName(c);,4,2,1,1,2,0,8,0,0,21,39,3,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,830,            if (entityName == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,844,    },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,951,                        if (entityContentLen > 1) {,0,0,0,1,3,0,0,0,0,4,27,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,952,                            char isHexChar = entityContent.charAt(1);,0,0,0,1,2,0,0,0,0,3,41,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,954,                                switch (isHexChar) {,2,0,0,1,3,0,0,0,0,2,20,16,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,964,                                if (entityValue > 0xFFFF) {,2,1,0,1,3,0,0,0,0,3,27,16,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,969,                            },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,970,                        },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,525,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,529,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,0,0,0,4,8,0,0,0,0,12,67,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,530,"            unescapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,26,7,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,531,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,557,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,560,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,563,"        Entities.HTML40.unescape(writer, string);",0,0,0,1,2,0,6,0,0,7,41,5,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,564,    },0,0,0,0,1,0,0,0,0,1,1,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,42,245,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,981,                    writer.write(entityValue);,14,5,0,1,2,3,10,2,0,35,26,1,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,533,            if (value < LOOKUP_TABLE_SIZE) {,4,1,0,1,3,0,6,0,0,11,32,1,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,766,        return map.name(value);,0,0,0,1,2,1,6,0,0,6,23,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,457,            return (String) mapValueToName.get(value);,0,0,0,2,4,1,6,2,0,8,42,6,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,905,        int firstAmp = str.indexOf('&');,4,0,0,1,2,3,4,2,0,14,32,1,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,906,        if (firstAmp < 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,910,"            doUnescape(writer, str, firstAmp);",0,0,0,1,2,0,0,0,0,3,34,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,912,    },0,0,0,0,1,0,0,0,0,1,1,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,42,237,        Entry tab[] = table;,6,0,0,1,2,0,4,2,0,12,20,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,42,238,        int hash = key;,0,0,0,0,0,0,0,0,0,0,15,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,42,239,        int index = (hash & 0x7FFFFFFF) % tab.length;,8,2,0,1,2,0,0,0,0,10,45,5,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,42,240,        for (Entry e = tab[index]; e != null; e = e.next) {,10,1,1,2,5,0,0,2,0,18,51,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,42,241,            if (e.hash == hash) {,8,1,0,1,3,3,2,0,0,15,21,1,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,928,"        writer.write(str, 0, firstAmp);",0,0,0,1,2,0,0,0,0,3,31,4,0.09091,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,929,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.09091,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,930,        for (int i = firstAmp; i < len; i++) {,12,1,0,1,3,3,2,6,0,28,38,1,0.09091,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,112,"        this(pattern, Locale.getDefault(), registry);",4,0,0,2,4,0,4,0,0,8,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,148,        ArrayList foundFormats = new ArrayList();,4,0,0,1,2,0,0,0,0,5,41,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,149,        ArrayList foundDescriptions = new ArrayList();,0,0,0,1,2,0,0,0,0,3,46,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,150,        StringBuffer stripCustom = new StringBuffer(pattern.length());,2,0,0,2,4,0,4,4,0,10,62,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,152,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,153,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,154,        int fmtCount = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,155,        while (pos.getIndex() < pattern.length()) {,4,2,0,3,7,0,8,12,0,27,43,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,156,            switch (c[pos.getIndex()]) {,2,0,1,3,7,0,10,4,0,18,28,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,187,                stripCustom.append(c[pos.getIndex()]);,0,0,1,3,6,0,8,0,0,10,38,8,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,188,                next(pos);,0,0,0,1,2,0,4,0,0,4,10,8,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,403,        pos.setIndex(pos.getIndex() + 1);,0,1,0,2,4,0,8,0,0,9,33,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,404,        return pos;,2,0,0,0,0,1,0,0,0,2,11,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,124,        super(DUMMY_PATTERN);,0,0,0,1,2,0,0,0,0,3,21,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,125,        setLocale(locale);,0,0,0,1,2,0,4,0,0,4,18,5,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,126,        this.registry = registry;,0,0,0,0,0,0,0,0,0,0,25,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,127,        applyPattern(pattern);,0,0,0,1,2,0,4,0,0,4,22,5,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,143,        if (registry == null) {,4,1,0,1,3,0,0,2,0,7,23,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,144,            super.applyPattern(pattern);,4,0,0,1,2,0,0,0,0,4,28,7,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,145,            toPattern = super.toPattern();,6,1,0,1,2,0,0,0,0,8,30,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,146,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,349,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,350,            chars = str.toCharArray();,10,1,0,1,2,0,4,0,0,17,26,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,351,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,363,            int len = chars.length;,8,2,0,0,0,0,4,0,0,15,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,364,            if (pos + len > bufferEnd) {,10,3,0,1,3,0,0,0,0,13,28,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,365,                return 0;,2,0,0,0,0,4,0,0,0,5,9,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,367,"            for (int i = 0; i < chars.length; i++, pos++) {",0,0,0,1,3,0,0,0,0,4,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,139,        if (val == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,142,        if (val.length() == 0) {,2,1,0,2,5,0,4,4,0,11,24,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,145,"        if (val.startsWith(""--"")) {",0,0,0,2,5,0,4,0,0,5,27,5,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,152,"        if (val.startsWith(""0x"") || val.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,155,        char lastChar = val.charAt(val.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,159,        int decPos = val.indexOf('.');,4,1,0,1,2,0,4,0,0,10,30,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,160,        int expPos = val.indexOf('e') + val.indexOf('E') + 1;,0,0,0,2,4,0,0,0,0,6,53,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,162,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,174,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,177,                mant = val;,6,0,0,0,0,3,2,2,0,15,11,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,179,            dec = null;,2,0,0,0,0,0,0,0,0,3,11,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,181,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,0,6,0,0,7,35,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,182,            if (expPos > -1 && expPos < val.length() - 1) {,8,5,0,2,5,0,8,0,0,22,47,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,185,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,188,"            String numeric = val.substring(0, val.length() - 1);",0,0,0,2,4,0,0,0,0,6,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,189,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,190,            switch (lastChar) {,0,0,0,1,3,0,0,0,0,4,19,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,193,                    if (dec == null,2,1,0,0,1,0,0,0,0,3,15,9,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,5279,        return str == null ? EMPTY : str;,0,0,0,0,0,1,0,0,0,1,33,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,167,        super();,0,0,0,1,2,0,14,0,0,15,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,168,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,191,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,209,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,229,        if (str == null || (strLen = str.length()) == 0) {,6,4,0,3,7,0,4,0,0,15,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,230,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,232,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,234,                return false;,4,0,0,0,0,1,0,0,0,6,13,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,237,        return true;,12,4,0,0,0,8,4,10,0,38,12,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,257,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,282,        return str == null ? EMPTY : str.trim();,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,309,        return str == null ? null : str.trim();,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,335,        String ts = trim(str);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,336,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,8,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,361,        return str == null ? EMPTY : str.trim();,2,0,0,1,2,1,4,0,0,7,40,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,389,"        return strip(str, null);",0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,416,        if (str == null) {,2,0,0,1,3,2,4,2,0,10,18,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,417,            return null;,4,0,0,0,0,4,2,2,0,12,12,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,419,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,420,        return str.length() == 0 ? null : str;,2,0,0,1,2,1,0,0,0,2,38,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,446,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,476,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,477,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,479,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,480,"        return stripEnd(str, stripChars);",2,0,0,1,2,1,6,2,0,11,33,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,509,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,510,            return str;,4,0,0,0,0,1,6,2,0,12,11,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,512,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,513,        if (stripChars == null) {,12,2,0,1,3,0,10,0,0,26,25,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,514,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,515,                start++;,2,0,0,0,0,0,0,0,0,3,8,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,517,        } else if (stripChars.length() == 0) {,2,1,0,2,6,0,10,2,0,15,38,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,518,            return str;,2,0,0,0,0,1,0,2,0,6,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,520,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,6,3,0,5,11,0,10,0,0,20,76,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,521,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,524,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,553,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,554,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,557,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,558,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,4,9,0,0,0,0,13,67,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,559,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,561,        } else if (stripChars.length() == 0) {,10,1,0,2,6,0,0,0,0,12,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,562,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,564,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,4,4,0,5,11,0,14,0,0,23,71,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,565,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,568,"        return str.substring(0, end);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,593,"        return stripAll(strs, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,623,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,624,            return strs;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,626,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,8,0,0,8,38,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,627,        for (int i = 0; i < strsLen; i++) {,12,1,0,1,3,3,0,4,0,22,35,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,628,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,630,        return newArr;,14,2,0,0,0,7,4,0,0,29,14,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,656,        return str1 == null ? str2 == null : str1.equals(str2);,4,2,0,1,2,1,6,0,0,12,55,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,681,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,706,        if (isEmpty(str)) {,6,4,0,2,5,0,4,0,0,15,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,707,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,709,        return str.indexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,738,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,739,            return -1;,0,0,0,0,0,1,4,0,0,5,10,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,741,"        return str.indexOf(searchChar, startPos);",6,0,0,1,2,1,8,0,0,16,41,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,767,        if (str == null || searchStr == null) {,10,4,0,1,3,0,0,0,0,15,39,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,768,            return -1;,2,0,0,0,0,1,0,0,0,3,10,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,770,        return str.indexOf(searchStr);,0,0,0,1,2,1,6,0,0,6,30,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,801,        if (str == null || searchStr == null || ordinal <= 0) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,802,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,3,23,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,804,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,805,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,807,        int found = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,808,        int index = INDEX_NOT_FOUND;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,810,"            index = str.indexOf(searchStr, index + 1);",0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,811,            if (index < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,812,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,814,            found++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,815,        } while (found < ordinal);,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,816,        return index;,2,0,0,0,0,1,4,2,0,8,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,851,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,852,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,855,        if (searchStr.length() == 0 && startPos >= str.length()) {,0,0,0,3,7,0,6,0,0,6,58,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,856,            return str.length();,0,0,0,1,2,1,10,0,0,10,20,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,858,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,883,        if (isEmpty(str)) {,2,1,0,2,5,0,4,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,884,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,886,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,917,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,918,            return -1;,2,0,0,0,0,1,0,0,0,4,10,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,920,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,946,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,947,            return -1;,4,1,0,0,0,1,0,0,0,5,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,949,        return str.lastIndexOf(searchStr);,0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,981,        if (str == null || searchStr == null) {,6,3,0,1,3,0,0,0,0,9,39,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,982,            return -1;,2,0,0,0,0,4,2,2,0,11,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,984,"        return str.lastIndexOf(searchStr, startPos);",4,1,0,1,2,1,8,2,0,15,44,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1009,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1010,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1012,        return str.indexOf(searchChar) >= 0;,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1037,        if (str == null || searchStr == null) {,6,1,0,1,3,0,6,0,0,14,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1038,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1040,        return str.indexOf(searchStr) >= 0;,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1067,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1068,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1070,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",6,0,1,3,6,1,10,0,0,20,60,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1098,        if (isEmpty(str) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,54,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1099,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1101,        for (int i = 0; i < str.length(); i++) {,4,1,0,2,5,0,6,0,0,12,40,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1102,            char ch = str.charAt(i);,2,0,0,1,2,0,4,0,0,8,24,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1103,            for (int j = 0; j < searchChars.length; j++) {,0,0,0,1,3,0,0,0,0,4,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1104,                if (searchChars[j] == ch) {,2,1,1,2,5,0,6,0,0,13,27,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1105,                    return i;,6,2,0,0,0,1,12,0,0,21,9,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1109,        return -1;,8,2,0,0,0,1,0,2,0,14,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1135,        if (isEmpty(str) || isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,43,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,244,                            out.write('\\');,6,1,0,1,2,0,4,0,0,12,16,3,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,245,                        out.write('/');,2,0,1,1,2,0,14,2,0,23,15,3,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,246,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,86,"        return escapeJavaStyleString(str, false);",2,0,0,1,2,4,8,2,0,17,41,1,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,155,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,159,            StringWriter writer = new StringWriter(str.length() * 2);,2,1,0,2,4,0,4,4,0,11,57,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,160,"            escapeJavaStyleString(writer, str, escapeSingleQuotes);",0,0,0,1,2,0,0,0,0,3,55,4,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,161,            return writer.toString();,6,0,0,1,2,1,8,0,0,14,25,3,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,179,        if (out == null) {,6,1,0,1,3,3,2,2,0,16,18,1,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,182,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,186,        sz = str.length();,2,0,0,1,2,0,4,0,0,7,18,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,187,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,188,            char ch = str.charAt(i);,2,0,0,1,2,3,2,2,0,10,24,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,191,            if (ch > 0xfff) {,2,1,0,1,3,0,0,0,0,3,17,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,193,            } else if (ch > 0xff) {,0,0,0,1,4,0,0,0,0,5,23,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,195,            } else if (ch > 0x7f) {,2,1,0,1,4,0,0,0,0,3,23,8,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,197,            } else if (ch < 32) {,6,2,0,1,4,3,2,2,0,16,21,1,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,228,                switch (ch) {,0,0,0,1,3,0,0,0,0,4,13,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,248,                        out.write(ch);,0,0,0,1,2,0,0,0,0,3,14,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,253,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,45,    private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,2,0,0,1,2,3,6,2,0,13,70,2,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,46,"    private static final char[] CSV_SEARCH_CHARS = new char[] {CSV_DELIMITER, CSV_QUOTE, CharUtils.CR, CharUtils.LF};",14,0,0,3,6,3,0,0,0,17,113,2,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,60,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/exception/NestableRuntimeException,46,47,    protected NestableDelegate delegate = new NestableDelegate(this);,4,1,0,1,2,1,0,4,0,12,65,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,158,        return nullText;,2,0,0,0,0,1,0,0,0,2,16,4,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1183,        if (width > 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1184,            ensureCapacity(size + width);,4,1,0,1,2,0,2,0,0,7,29,7,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1185,            String str = (obj == null ? getNullText() : obj.toString());,0,0,0,3,6,0,0,0,0,9,60,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1186,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1227,        if (width > 0) {,6,3,0,1,3,0,8,0,0,18,16,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1228,            ensureCapacity(size + width);,6,1,0,1,2,0,8,2,0,17,29,5,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1229,            String str = (obj == null ? getNullText() : obj.toString());,4,1,0,3,6,0,6,2,0,14,60,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1230,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,98,        this(CAPACITY);,2,0,0,1,2,0,0,0,0,2,15,4,0.02837,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,99,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02837,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,107,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,108,        if (initialCapacity <= 0) {,0,0,0,1,3,0,0,0,0,4,27,4,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,111,        buffer = new char[initialCapacity];,2,0,1,1,2,0,0,0,0,5,35,4,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,112,    },2,0,0,0,1,0,6,0,0,9,1,3,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,216,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,217,    },2,1,0,0,1,0,0,0,0,3,1,7,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",0,0,0,1,2,0,0,0,0,3,69,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,2,0,0,1,2,3,0,4,0,10,68,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,2,0,0,1,2,3,0,4,0,10,69,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",2,0,0,2,4,3,2,4,0,13,94,1,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,4,1,0,1,2,3,0,4,0,12,65,1,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,2,0,0,1,2,3,0,4,0,10,77,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",4,0,0,2,4,5,2,4,0,16,88,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,2,0,0,1,2,3,0,4,0,9,63,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,386,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,387,        },2,0,0,0,1,3,2,2,0,10,1,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,413,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,414,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,317,            super();,2,0,0,1,2,0,0,2,0,4,8,5,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,318,            this.ch = ch;,4,0,0,0,0,0,0,0,0,5,13,5,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,319,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,284,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,285,            this.chars = (char[]) chars.clone();,0,0,0,3,6,0,0,0,0,9,36,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,286,            Arrays.sort(this.chars);,2,0,0,1,2,0,4,0,0,6,24,6,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,287,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,228,        if (capacity > buffer.length) {,2,0,0,1,3,0,4,0,0,8,31,6,0.02094,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,233,        return this;,2,0,0,0,0,4,4,2,0,12,12,2,0.02094,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,80,        return COMMA_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,89,        return TAB_MATCHER;,4,0,0,0,0,3,4,2,0,12,19,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,98,        return SPACE_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,108,        return SPLIT_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,117,        return TRIM_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,126,        return SINGLE_QUOTE_MATCHER;,2,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,135,        return DOUBLE_QUOTE_MATCHER;,0,0,0,0,0,1,0,0,0,1,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,144,        return QUOTE_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,153,        return NONE_MATCHER;,0,0,1,0,0,1,8,0,0,10,20,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,163,        return new CharMatcher(ch);,2,0,0,1,2,1,0,2,0,4,27,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,173,        if (chars == null || chars.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,174,            return NONE_MATCHER;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,176,        if (chars.length == 1) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,177,            return new CharMatcher(chars[0]);,0,0,1,2,4,1,0,2,0,4,33,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,179,        return new CharSetMatcher(chars);,2,0,0,1,2,1,0,2,0,4,33,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,189,        if (chars == null || chars.length() == 0) {,0,0,0,2,5,0,0,0,0,7,43,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,190,            return NONE_MATCHER;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,192,        if (chars.length() == 1) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,193,            return new CharMatcher(chars.charAt(0));,0,0,0,2,4,1,4,2,0,6,40,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,195,        return new CharSetMatcher(chars.toCharArray());,0,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,205,        if (str == null || str.length() == 0) {,2,3,0,2,5,0,4,0,0,9,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,206,            return NONE_MATCHER;,2,1,0,0,0,1,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,208,        return new StringMatcher(str);,0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,267,"        return isMatch(buffer, pos, 0, buffer.length);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2561,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2560,        StrBuilderTokenizer() {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2562,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2566,            if (chars == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2567,"                return super.tokenize(StrBuilder.this.buffer, 0, StrBuilder.this.size());",0,0,0,2,4,1,0,0,0,7,73,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2569,"                return super.tokenize(chars, offset, count);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2575,            String str = super.getContent();,4,0,0,1,2,0,0,2,0,7,32,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2576,            if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2577,                return StrBuilder.this.toString();,2,0,0,1,2,1,2,0,0,4,34,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2579,                return str;,2,0,0,0,0,1,6,0,0,8,11,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,241,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,118,    private StrMatcher delimMatcher = StrMatcher.splitMatcher();,2,0,0,1,2,1,4,2,0,9,60,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,120,    private StrMatcher quoteMatcher = StrMatcher.noneMatcher();,0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,122,    private StrMatcher ignoredMatcher = StrMatcher.noneMatcher();,10,7,0,1,2,1,4,2,0,28,61,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,124,    private StrMatcher trimmerMatcher = StrMatcher.noneMatcher();,0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,127,    private boolean emptyAsNull = false;,2,0,0,0,0,1,0,0,0,4,36,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,129,    private boolean ignoreEmptyTokens = true;,0,0,0,0,0,0,0,0,0,0,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,242,        this.chars = null;,4,0,0,0,0,0,0,0,0,5,18,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,243,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,252,        super();,6,0,0,1,2,3,0,4,0,13,8,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,253,        if (input != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,254,            chars = input.toCharArray();,2,0,0,1,2,0,4,0,0,7,28,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,256,            chars = null;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,258,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,267,        this(input);,2,0,0,1,2,0,4,0,0,6,12,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,268,        setDelimiterChar(delim);,0,0,0,1,2,0,8,0,0,9,24,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,269,    },0,0,0,0,1,0,14,0,0,14,1,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,278,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,372,            return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,381,                isEquals = lhs.equals(rhs);,4,0,0,1,2,0,6,2,0,13,27,4,0.05263,1,1,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,368,        if (isEquals == false) {,2,1,0,1,3,0,0,0,0,4,24,4,0.02222,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,371,        if (lhs == rhs) {,6,1,0,1,3,0,6,0,0,15,17,3,0.02222,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,374,        if (lhs == null || rhs == null) {,4,3,0,1,3,0,0,0,0,7,33,4,0.02222,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,378,        Class lhsClass = lhs.getClass();,2,0,0,1,2,0,4,2,0,8,32,4,0.02222,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,379,        if (!lhsClass.isArray()) {,6,1,0,2,5,0,4,0,0,12,26,4,0.02222,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,408,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.02222,1,1,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,831,        return this.isEquals;,4,1,0,0,0,1,0,0,0,6,21,6,0.01639,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,100,    public EqualsBuilder() {,2,0,0,1,3,1,0,0,0,3,24,2,0.01613,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,92,    private boolean isEquals = true;,6,0,0,0,0,1,4,0,0,12,32,1,0.01613,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,102,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01613,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,125,"        return reflectionEquals(lhs, rhs, false, null, null);",4,0,0,1,2,1,6,0,0,13,53,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,148,"        return reflectionEquals(lhs, rhs, ReflectionToStringBuilder.toNoNullStringArray(excludeFields));",0,0,0,2,4,1,0,0,0,7,96,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,171,"        return reflectionEquals(lhs, rhs, false, null, excludeFields);",0,0,0,1,2,1,8,0,0,10,62,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,195,"        return reflectionEquals(lhs, rhs, testTransients, null, null);",0,0,0,1,2,1,0,0,0,4,62,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,224,"        return reflectionEquals(lhs, rhs, testTransients, reflectUpToClass, null);",2,1,0,1,2,1,10,0,0,14,74,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,255,        if (lhs == rhs) {,4,0,0,1,3,0,8,2,0,14,17,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,256,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,258,        if (lhs == null || rhs == null) {,4,3,0,1,3,0,0,0,0,7,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,259,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,146,            if (numerator==Integer.MIN_VALUE ||,6,2,0,0,1,0,0,0,0,8,35,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,150,            numerator = -numerator;,2,0,0,0,0,0,0,4,0,6,23,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,151,            denominator = -denominator;,4,0,0,0,0,0,0,0,0,6,27,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,578,        if (u>0) { u=-u; } // make u negative,0,0,0,2,4,0,4,0,0,5,37,5,0.125,1,1,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,579,        if (v>0) { v=-v; } // make v negative,0,0,0,2,4,0,0,0,0,6,37,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,581,        int k=0;,0,0,0,0,0,0,0,0,0,0,8,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,582,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,6,7,0,3,7,0,0,0,0,13,72,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,585,        if (k==31) {,2,1,0,1,3,0,0,0,0,3,12,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,590,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,8,3,0,3,6,0,0,0,0,12,38,5,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,596,            while ((t&1)==0) { // while t is even..,4,2,0,2,5,3,6,2,0,17,39,1,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,600,            if (t>0) {,2,1,0,1,3,0,0,0,0,3,10,6,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,601,                u = -t;,0,0,0,0,0,0,0,0,0,0,7,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,603,                v = t;,4,0,0,0,0,0,0,0,0,5,6,8,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,606,            t = (v - u)/2;,6,2,0,1,2,0,0,0,0,9,14,6,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,609,        } while (t!=0);,2,1,0,1,3,0,0,0,0,3,15,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,610,        return -u*(1<<k); // gcd is u*2^k,2,0,0,1,2,4,0,0,0,5,33,2,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,571,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,2,1,0,3,7,0,0,0,0,3,43,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,572,            return 1;,6,0,0,0,0,1,8,0,0,14,9,3,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,142,        if (denominator == 0) {,4,1,0,1,3,1,0,2,0,8,23,1,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,145,        if (denominator < 0) {,2,1,0,1,3,0,0,0,0,3,22,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,153,"        return new Fraction(numerator, denominator);",0,0,0,1,2,1,0,0,0,4,44,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,368,        return numerator;,4,0,0,0,0,1,0,0,0,4,17,3,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,377,        return denominator;,2,0,0,0,0,1,0,0,0,2,19,4,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,125,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1708,"        public Pair(Object obj1, Object obj2) {",6,0,0,1,3,1,0,4,0,11,39,3,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1709,            mObj1 = obj1;,4,2,0,0,0,0,0,0,0,6,13,10,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1710,            mObj2 = obj2;,0,0,0,0,0,0,0,0,0,0,13,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1711,        },4,1,0,0,1,0,0,0,0,5,1,8,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1738,            return,0,0,0,0,0,0,0,0,0,0,6,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,772,            return new UnpaddedNumberField(field);,2,0,0,1,2,1,0,2,0,4,38,6,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,954,        return mLocale;,4,0,0,0,0,1,4,0,0,9,15,3,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1185,        UnpaddedNumberField(int field) {,0,0,0,1,3,0,0,0,0,4,32,4,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1186,            mField = field;,2,0,0,0,0,3,0,4,0,9,15,2,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1187,        },0,0,0,0,1,0,0,0,0,1,1,4,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1176,        static final UnpaddedNumberField INSTANCE_YEAR = new UnpaddedNumberField(Calendar.YEAR);,6,0,0,1,2,2,0,4,0,12,88,3,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1193,            return 4;,0,0,0,0,0,1,0,0,0,1,9,4,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,234,"        return getDateInstance(style, null, null);",0,0,0,1,2,1,0,0,0,4,42,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,293,                locale = Locale.getDefault();,0,0,0,1,2,0,0,0,0,3,29,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,408,"        return getDateTimeInstance(dateStyle, timeStyle, null, null);",0,0,0,1,2,1,6,0,0,7,61,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,425,"        return getDateTimeInstance(dateStyle, timeStyle, null, locale);",4,0,0,1,2,1,8,0,0,13,63,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,461,"        Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));",12,2,0,3,6,0,0,8,0,22,70,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,462,        if (timeZone != null) {,2,1,0,1,3,0,0,0,0,3,23,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,465,        if (locale != null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,466,"            key = new Pair(key, locale);",0,0,0,1,2,0,0,0,0,3,28,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,469,        FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);,8,5,0,2,4,0,10,4,0,28,73,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,470,        if (format == null) {,4,2,0,1,3,0,10,0,0,16,21,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,471,            if (locale == null) {,4,1,0,1,3,2,4,2,0,13,21,2,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,472,                locale = Locale.getDefault();,0,0,0,1,2,0,0,0,0,3,29,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,475,"                SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,",2,0,0,1,3,0,8,4,0,14,100,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,477,                String pattern = formatter.toPattern();,6,0,0,1,2,3,4,4,0,18,39,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,478,"                format = getInstance(pattern, timeZone, locale);",2,0,0,1,2,0,8,0,0,11,48,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,479,"                cDateTimeInstanceCache.put(key, format);",2,0,0,1,2,2,8,4,0,16,40,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,483,            },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,485,        return format;,4,1,0,0,0,1,8,0,0,13,14,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,672,                if (tokenLen >= 4) {,2,1,0,1,3,0,0,0,0,3,20,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,675,"                    rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);",12,0,0,1,2,0,0,2,0,15,81,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,677,                break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1717,            if (this == obj) {,0,0,0,1,3,0,6,0,0,6,18,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1721,            if (!(obj instanceof Pair)) {,0,0,0,2,5,0,0,0,0,7,29,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1725,            Pair key = (Pair)obj;,2,1,0,1,2,0,0,0,0,4,21,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1727,            return,2,0,0,0,0,3,0,4,0,9,6,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1538,"        TimeZoneNameRule(TimeZone timeZone, boolean timeZoneForced, Locale locale, int style) {",10,0,1,1,3,0,10,4,0,26,87,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1539,            mTimeZone = timeZone;,6,0,0,0,0,3,2,0,0,13,21,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1540,            mTimeZoneForced = timeZoneForced;,4,0,0,0,0,0,0,0,0,5,33,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1541,            mLocale = locale;,4,0,0,0,0,0,0,0,0,5,17,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1542,            mStyle = style;,4,0,0,0,0,0,0,0,0,5,15,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,44,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,45,    },4,0,0,0,1,0,0,0,0,4,1,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,64,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,65,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,67,        return (bool.booleanValue() ? Boolean.FALSE : Boolean.TRUE);,0,0,0,2,4,1,0,0,0,7,60,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,87,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,88,            return false;,0,0,0,0,0,1,4,0,0,5,13,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,90,        return bool.booleanValue() ? true : false;,0,0,0,1,2,1,0,0,0,4,42,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,108,        return !isTrue(bool);,2,0,0,1,2,1,8,0,0,11,21,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,126,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,127,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,129,        return bool.booleanValue() ? false : true;,0,0,0,1,2,1,4,0,0,6,42,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,147,        return !isFalse(bool);,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,165,        return bool ? Boolean.TRUE : Boolean.FALSE;,10,0,0,0,0,1,0,0,0,10,43,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,183,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,150,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,173,"            throw new IllegalArgumentException(""The Writer must not be null"");",0,0,0,1,2,0,4,2,0,8,66,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,229,                        out.write('\\');,2,0,0,1,2,3,4,2,0,12,16,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,230,"                        out.write('""');",0,0,0,1,2,0,4,0,0,5,15,13,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,231,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,223,                        if (escapeSingleQuote) {,0,0,0,1,3,0,0,0,0,4,24,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,226,                        out.write('\'');,2,0,0,1,2,0,4,0,0,8,16,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,227,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,149,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,153,            StringWriter writer = new StringWriter(str.length() * 2);,4,1,0,2,4,0,4,4,0,13,57,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,154,"            escapeJavaStyleString(writer, str, escapeSingleQuotes);",0,0,0,1,2,0,0,0,0,3,55,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,155,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,172,        if (out == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,175,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,179,        sz = str.length();,2,0,0,1,2,0,4,0,0,7,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,180,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,181,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,184,            if (ch > 0xfff) {,4,2,0,1,3,0,8,2,0,16,17,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,186,            } else if (ch > 0xff) {,2,1,0,1,4,0,0,0,0,3,23,7,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,676,                        if (field == DateUtils.SEMI_MONTH) {,6,1,0,1,3,0,0,0,0,7,36,12,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,689,"                            val.add(fields[i][0], 1);",0,0,0,3,6,0,0,0,0,9,25,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,437,        if (date == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,440,        Calendar gval = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,441,        gval.setTime(date);,0,0,0,1,2,0,6,0,0,6,19,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,442,"        modify(gval, field, true);",0,0,0,1,2,0,0,0,0,3,26,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,443,        return gval.getTime();,0,0,0,1,2,1,4,0,0,4,22,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,621,        if (val.get(Calendar.YEAR) > 280000000) {,4,1,0,2,5,0,4,0,0,9,41,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,625,        if (field == Calendar.MILLISECOND) {,0,0,0,1,3,0,0,0,0,4,36,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,635,        Date date = val.getTime();,2,0,0,1,2,0,4,2,0,8,26,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,636,        long time = date.getTime();,0,0,0,1,2,0,0,0,0,3,27,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,637,        boolean done = false;,2,0,0,0,0,0,0,0,0,3,21,5,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,640,        int millisecs = val.get(Calendar.MILLISECOND);,0,0,0,1,2,0,0,0,0,3,46,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,641,        if (!round || millisecs < 500) {,4,2,0,1,3,0,0,0,0,7,32,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,649,        int seconds = val.get(Calendar.SECOND);,0,0,0,1,2,0,0,0,0,3,39,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,650,        if (!done && (!round || seconds < 30)) {,8,3,0,2,5,0,4,0,0,18,40,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,658,        int minutes = val.get(Calendar.MINUTE);,6,0,0,1,2,0,4,0,0,10,39,5,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,659,        if (!done && (!round || minutes < 30)) {,0,0,0,2,5,0,0,0,0,7,40,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,660,            time = time - (minutes * 60000L);,8,2,0,1,2,0,0,2,0,13,33,1,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,9,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,110,            if (str.charAt(2) != '_') {,8,5,0,2,5,0,4,0,0,18,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,113,            char ch3 = str.charAt(3);,2,0,0,1,2,0,4,0,0,6,25,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,114,            char ch4 = str.charAt(4);,2,0,0,1,2,0,4,0,0,6,25,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,115,            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {,8,7,0,1,3,0,0,0,0,19,55,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,95,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,98,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,179,        stopTime = System.currentTimeMillis();,2,0,0,1,2,0,4,0,0,7,38,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,180,        this.runningState = STATE_SUSPENDED;,4,0,0,0,0,0,0,0,0,5,36,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,181,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,176,        if(this.runningState != STATE_RUNNING) {,4,1,0,1,3,0,0,0,0,5,40,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,210,            return this.stopTime - this.startTime;,4,1,0,0,0,1,0,0,0,5,38,6,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,115,        if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {,8,3,0,1,3,0,0,0,0,11,80,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,631,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",6,0,0,1,2,0,4,0,0,11,57,7,0.07692,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,632,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.07692,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,167,"        return getInstance(pattern, null, null);",0,0,0,1,2,1,4,0,0,5,40,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,553,            locale = Locale.getDefault();,4,0,0,1,2,3,6,2,0,17,29,1,0.0625,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,614,"                    rule = selectNumberRule(Calendar.YEAR, tokenLen);",12,0,0,1,2,0,4,0,0,17,49,3,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,625,                    rule = TwoDigitMonthField.INSTANCE;,10,1,0,0,0,0,4,0,0,16,35,3,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,777,"            return new PaddedNumberField(field, padding);",4,0,0,1,2,1,0,2,0,6,45,6,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1261,"        PaddedNumberField(int field, int size) {",0,0,0,1,3,0,0,0,0,4,40,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1262,            if (size < 3) {,2,1,0,1,3,0,0,0,0,3,15,5,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1266,            mField = field;,0,0,0,0,0,0,0,0,0,0,15,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1267,            mSize = size;,0,0,0,0,0,0,0,0,0,0,13,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1268,        },0,0,0,0,1,0,0,0,0,1,1,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1274,            return 4;,0,0,0,0,0,1,0,0,0,1,9,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1398,            super();,10,1,0,1,2,0,0,0,0,12,8,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1399,        },0,0,0,0,1,0,8,0,0,8,1,5,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1392,        static final TwoDigitMonthField INSTANCE = new TwoDigitMonthField();,6,0,0,1,2,2,0,4,0,13,68,1,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1405,            return 2;,0,0,0,0,0,1,0,0,0,1,9,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,539,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,540,        if (pattern == null) {,2,0,0,1,3,0,4,0,0,6,22,5,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,543,        mPattern = pattern;,4,0,0,0,0,0,0,0,0,5,19,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,545,        mTimeZoneForced = (timeZone != null);,0,0,0,1,2,0,0,0,0,3,37,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,546,        if (timeZone == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,547,            timeZone = TimeZone.getDefault();,6,1,0,1,2,0,8,0,0,16,33,3,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,549,        mTimeZone = timeZone;,0,0,0,0,0,0,0,0,0,0,21,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,551,        mLocaleForced = (locale != null);,0,0,0,1,2,0,0,0,0,3,33,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,552,        if (locale == null) {,2,0,0,1,3,3,0,0,0,5,21,2,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,555,        mLocale = locale;,0,0,0,0,0,0,0,0,0,0,17,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,556,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,111,    private static Map cInstanceCache = new HashMap(7);,6,0,0,1,2,2,0,4,0,14,51,1,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,112,    private static Map cDateInstanceCache = new HashMap(7);,6,2,0,1,2,0,4,0,0,14,55,3,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,113,    private static Map cTimeInstanceCache = new HashMap(7);,0,0,0,1,2,0,0,0,0,3,55,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,114,    private static Map cDateTimeInstanceCache = new HashMap(7);,0,0,0,1,2,0,0,0,0,3,59,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,115,    private static Map cTimeZoneDisplayCache = new HashMap(7);,2,0,0,1,2,3,0,4,0,9,58,2,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,213,"        FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale);",0,0,0,1,2,0,0,0,0,3,75,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,214,        FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat);,0,0,0,2,4,0,0,0,0,6,73,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,215,        if (format == null) {,4,2,0,1,3,1,8,0,0,17,21,3,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,216,            format = emptyFormat;,0,0,0,0,0,0,0,0,0,0,21,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,217,            format.init();  // convert shell format into usable one,2,0,0,1,2,0,6,0,0,10,55,6,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,218,"            cInstanceCache.put(format, format);  // this is OK!",2,0,0,1,2,3,10,2,0,18,51,1,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,220,        return format;,0,0,0,0,0,1,0,0,0,1,14,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,562,        List rulesList = parsePattern();,2,0,0,1,2,3,4,2,0,11,32,2,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,563,        mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]);,0,0,0,5,10,0,0,0,0,15,64,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,565,        int len = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,566,        for (int i=mRules.length; --i >= 0; ) {,0,0,0,1,3,0,0,0,0,4,39,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,567,            len += mRules[i].estimateLength();,2,0,1,2,4,0,2,0,0,9,34,6,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,570,        mMaxLengthEstimate = len;,4,0,0,0,0,0,0,0,0,5,25,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,571,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,582,        DateFormatSymbols symbols = new DateFormatSymbols(mLocale);,0,0,0,1,2,0,0,0,0,3,59,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,583,        List rules = new ArrayList();,0,0,0,1,2,0,0,0,0,3,29,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1083,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1084,    },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,87,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,105,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,122,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",0,0,0,1,2,0,0,0,0,3,80,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,138,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,154,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",2,1,0,1,2,0,0,0,0,3,92,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,175,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,191,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,207,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,224,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,241,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,258,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",0,0,0,1,2,0,0,0,0,3,88,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,275,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,291,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,0,0,0,1,2,0,0,0,0,3,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,307,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,4,0,0,1,2,6,4,6,0,20,82,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,324,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",0,0,0,1,2,0,0,0,0,3,86,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,342,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,3,6,2,0,16,86,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,464,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1508,            return false;,4,1,0,0,0,1,8,6,0,20,13,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,398,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,401,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,404,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,0,0,0,7,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,411,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,414,        char lastChar = str.charAt(str.length() - 1);,0,0,0,2,4,0,0,0,0,6,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,418,        int decPos = str.indexOf('.');,0,0,0,1,2,0,0,0,0,3,30,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,419,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,12,0,0,19,53,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,421,        if (decPos > -1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,433,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,436,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,438,            dec = null;,6,0,0,0,0,0,0,0,0,8,11,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,440,        if (!Character.isDigit(lastChar)) {,2,1,1,2,5,0,6,0,0,14,35,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,441,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,444,                exp = null;,4,1,0,0,0,1,4,2,0,12,11,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,447,"            String numeric = str.substring(0, str.length() - 1);",8,4,0,2,4,0,8,2,0,22,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,448,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,449,            switch (lastChar) {,0,0,0,1,3,0,0,0,0,4,19,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,452,                    if (dec == null,4,1,0,0,1,3,0,0,0,8,15,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,457,                            return createLong(numeric);,0,0,0,1,2,1,4,0,0,4,27,12,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,556,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,559,        for (int i = str.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,560,            if (str.charAt(i) != '0') {,6,2,0,2,5,0,6,0,0,16,27,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,561,                return false;,4,1,0,0,0,1,0,0,0,7,13,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,185,        return str == null || str.length() == 0;,0,0,0,1,2,1,0,0,0,4,40,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,223,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,226,        for (int i = 0; i < strLen; i++) {,10,2,0,1,3,0,4,0,0,17,34,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,227,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,26,0,0,28,55,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,228,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,628,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,631,        return Long.valueOf(str);,0,0,0,1,2,1,0,0,0,4,25,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1507,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1510,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1511,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,40,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1515,        return true;,4,3,0,0,0,1,0,0,0,8,12,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,41,    public static final Long LONG_ZERO = new Long(0L);,4,1,1,1,2,3,8,4,0,28,50,1,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,43,    public static final Long LONG_ONE = new Long(1L);,0,0,0,1,2,0,0,0,0,3,49,4,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,2,0,0,1,2,0,0,0,0,2,56,5,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,47,    public static final Integer INTEGER_ZERO = new Integer(0);,0,0,0,1,2,0,0,0,0,3,58,4,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,49,    public static final Integer INTEGER_ONE = new Integer(1);,0,0,0,1,2,0,0,0,0,3,57,4,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,51,    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);,2,0,0,1,2,0,6,2,0,12,64,1,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,53,    public static final Short SHORT_ZERO = new Short((short) 0);,2,0,0,2,4,3,0,4,0,9,60,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,55,    public static final Short SHORT_ONE = new Short((short) 1);,4,2,0,2,4,3,4,4,0,18,59,1,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,2,0,0,2,4,3,0,4,0,10,66,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,59,    public static final Byte BYTE_ZERO = new Byte((byte) 0);,2,0,0,2,4,3,0,4,0,9,56,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,61,    public static final Byte BYTE_ONE = new Byte((byte) 1);,2,0,0,2,4,3,0,4,0,9,55,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,63,    public static final Byte BYTE_MINUS_ONE = new Byte((byte) -1);,2,0,0,2,4,3,0,4,0,10,62,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,65,    public static final Double DOUBLE_ZERO = new Double(0.0d);,2,0,0,1,2,3,2,0,0,8,58,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,2,0,0,1,2,3,0,4,0,9,57,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,69,    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);,2,0,0,1,2,3,0,4,0,10,64,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,2,0,0,1,2,3,0,4,0,9,55,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,73,    public static final Float FLOAT_ONE = new Float(1.0f);,2,0,0,1,2,3,6,4,0,15,54,1,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,75,    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);,0,0,0,1,2,0,0,0,0,3,61,4,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,161,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,162,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,203,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,224,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,231,        return true;,2,0,0,0,0,4,0,12,0,17,12,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,251,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,276,        return str == null ? EMPTY : str.trim();,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,303,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,329,        String ts = trim(str);,12,3,0,1,2,0,16,2,0,33,22,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,330,        return isEmpty(ts) ? null : ts;,10,0,0,1,2,1,20,4,0,35,31,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,355,        return str == null ? EMPTY : str.trim();,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,383,"        return strip(str, null);",2,1,0,1,2,1,4,0,0,8,24,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,410,        if (str == null) {,2,0,0,1,3,0,0,0,0,2,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,411,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,413,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,414,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,440,"        return str == null ? EMPTY : strip(str, null);",2,0,0,1,2,1,0,0,0,2,46,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,470,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,471,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,473,"        str = stripStart(str, stripChars);",2,0,0,1,2,1,0,2,0,5,34,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,474,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,503,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,504,            return str;,6,1,0,0,0,1,4,0,0,12,11,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,506,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,507,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,508,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,509,                start++;,12,3,1,0,0,3,18,4,0,47,8,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,511,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,6,0,0,6,38,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,512,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,514,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,0,0,0,5,11,0,0,0,0,16,76,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,515,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,518,        return str.substring(start);,2,0,0,1,2,1,0,2,0,6,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,547,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,548,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,551,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,552,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,4,9,0,0,0,0,13,67,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,553,                end--;,10,0,0,0,0,1,0,6,0,18,6,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,555,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,556,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,558,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,0,0,0,5,11,0,0,0,0,16,71,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,559,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,562,"        return str.substring(0, end);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,587,"        return stripAll(strs, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,617,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,4,0,0,5,51,15,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,618,            return strs;,4,0,0,0,0,3,8,2,0,17,12,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,620,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,621,        for (int i = 0; i < strsLen; i++) {,12,0,0,1,3,3,0,6,0,21,35,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,622,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,624,        return newArr;,6,0,0,0,0,1,0,0,0,7,14,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,650,        return str1 == null ? str2 == null : str1.equals(str2);,0,0,0,1,2,1,0,0,0,4,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,675,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,700,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,701,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,703,        return str.indexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,732,        if (isEmpty(str)) {,2,0,0,2,5,0,12,0,0,15,19,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,733,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,735,"        return str.indexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,761,        if (str == null || searchStr == null) {,2,0,0,1,3,3,2,2,0,10,39,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,762,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,764,        return str.indexOf(searchStr);,0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,795,        if (str == null || searchStr == null || ordinal <= 0) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,796,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,798,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,799,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,801,        int found = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,802,        int index = INDEX_NOT_FOUND;,2,0,0,0,0,0,0,2,0,5,28,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,804,"            index = str.indexOf(searchStr, index + 1);",2,0,0,1,2,0,0,0,0,2,42,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,879,        if (width > 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,880,            ensureCapacity(size + width);,4,1,0,1,2,0,2,0,0,7,29,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,881,            String str = (obj == null ? getNullText() : obj.toString());,4,1,0,3,6,0,6,2,0,14,60,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,882,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,883,            if (strLen >= width) {,4,1,0,1,3,0,0,0,0,5,22,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);",4,0,0,1,2,1,10,2,0,17,38,5,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,107,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.008,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,108,        if (initialCapacity <= 0) {,2,1,0,1,3,0,0,0,0,3,27,4,0.008,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,111,        buffer = new char[initialCapacity];,2,0,1,1,2,0,0,0,0,5,35,4,0.008,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,112,    },0,0,0,0,1,0,0,0,0,1,1,4,0.008,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,228,        if (capacity > buffer.length) {,0,0,0,1,3,0,0,0,0,4,31,4,0.00581,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,233,        return this;,4,0,0,0,0,1,0,2,0,6,12,1,0.00581,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,241,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,118,    private StrMatcher delimMatcher = StrMatcher.splitMatcher();,4,1,0,1,2,1,4,2,0,12,60,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,120,    private StrMatcher quoteMatcher = StrMatcher.noneMatcher();,0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,122,    private StrMatcher ignoredMatcher = StrMatcher.noneMatcher();,2,0,0,1,2,1,4,2,0,9,61,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,124,    private StrMatcher trimmerMatcher = StrMatcher.noneMatcher();,2,0,0,1,2,1,4,2,0,9,61,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,127,    private boolean emptyAsNull = false;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,129,    private boolean ignoreEmptyTokens = true;,4,0,0,0,0,1,0,0,0,6,41,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,242,        this.chars = null;,2,0,0,0,0,0,0,0,0,3,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,243,    },12,1,0,0,1,0,0,2,0,16,1,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,252,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,253,        if (input != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,254,            chars = input.toCharArray();,6,0,1,1,2,0,4,2,0,16,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,256,            chars = null;,2,1,0,0,0,0,0,0,0,3,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,258,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,267,        this(input);,0,0,0,1,2,0,0,0,0,3,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,268,        setDelimiterChar(delim);,2,1,0,1,2,0,4,0,0,7,24,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,269,    },0,0,0,0,1,0,4,0,0,4,1,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,278,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,279,        setDelimiterString(delim);,0,0,0,1,2,0,4,0,0,4,26,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,280,    },2,0,0,0,1,3,4,2,0,12,1,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,289,        this(input);,0,0,0,1,2,0,0,0,0,3,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,290,        setDelimiterMatcher(delim);,0,0,0,1,2,0,4,0,0,4,27,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,291,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,302,"        this(input, delim);",4,0,0,1,2,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,303,        setQuoteChar(quote);,0,0,0,1,2,0,14,0,0,14,20,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,304,    },0,0,0,0,1,0,12,2,0,14,1,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,315,"        this(input, delim);",4,0,0,1,2,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,316,        setQuoteMatcher(quote);,4,0,0,1,2,6,2,6,0,19,23,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,317,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,329,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,330,        this.chars = input;,4,0,0,0,0,0,0,0,0,5,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,331,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,343,        this(input);,0,0,0,1,2,0,0,0,0,3,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,344,        setDelimiterChar(delim);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,345,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,357,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,358,        setDelimiterString(delim);,4,1,0,1,2,0,4,0,0,9,26,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,359,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,371,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,372,        setDelimiterMatcher(delim);,0,0,0,1,2,0,0,2,0,4,27,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,373,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,387,"        this(input, delim);",0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,388,        setQuoteChar(quote);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,389,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,403,"        this(input, delim);",0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,404,        setQuoteMatcher(quote);,0,0,0,1,2,0,12,0,0,12,23,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,405,    },4,1,0,0,1,6,8,2,0,23,1,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,93,        CSV_TOKENIZER_PROTOTYPE = new StrTokenizer();,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,94,        CSV_TOKENIZER_PROTOTYPE.setDelimiterMatcher(StrMatcher.commaMatcher());,0,0,0,2,4,0,0,0,0,6,71,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,95,        CSV_TOKENIZER_PROTOTYPE.setQuoteMatcher(StrMatcher.doubleQuoteMatcher());,0,0,0,2,4,0,8,0,0,8,73,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,96,        CSV_TOKENIZER_PROTOTYPE.setIgnoredMatcher(StrMatcher.noneMatcher());,0,0,0,2,4,0,0,0,0,6,68,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,97,        CSV_TOKENIZER_PROTOTYPE.setTrimmerMatcher(StrMatcher.trimMatcher());,0,0,0,2,4,0,8,0,0,8,68,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,98,        CSV_TOKENIZER_PROTOTYPE.setEmptyTokenAsNull(false);,0,0,0,1,2,0,0,0,0,3,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,99,        CSV_TOKENIZER_PROTOTYPE.setIgnoreEmptyTokens(false);,2,3,0,1,2,0,4,0,0,9,52,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,101,        TSV_TOKENIZER_PROTOTYPE = new StrTokenizer();,2,0,0,1,2,0,0,2,0,5,45,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,102,        TSV_TOKENIZER_PROTOTYPE.setDelimiterMatcher(StrMatcher.tabMatcher());,0,0,0,2,4,0,0,0,0,6,69,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,103,        TSV_TOKENIZER_PROTOTYPE.setQuoteMatcher(StrMatcher.doubleQuoteMatcher());,0,0,0,2,4,0,8,0,0,8,73,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,104,        TSV_TOKENIZER_PROTOTYPE.setIgnoredMatcher(StrMatcher.noneMatcher());,0,0,0,2,4,0,8,0,0,8,68,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,105,        TSV_TOKENIZER_PROTOTYPE.setTrimmerMatcher(StrMatcher.trimMatcher());,0,0,0,2,4,0,16,0,0,16,68,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,106,        TSV_TOKENIZER_PROTOTYPE.setEmptyTokenAsNull(false);,2,1,0,1,2,0,4,0,0,8,51,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,107,        TSV_TOKENIZER_PROTOTYPE.setIgnoreEmptyTokens(false);,4,1,0,1,2,3,12,0,0,23,52,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,108,    },18,4,0,0,1,0,8,0,0,31,1,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,139,        return (StrTokenizer) CSV_TOKENIZER_PROTOTYPE.clone();,4,0,0,2,4,1,0,0,0,5,54,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,152,        return getCSVClone();,14,6,0,1,2,1,10,0,0,32,21,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,165,        StrTokenizer tok = getCSVClone();,0,0,0,1,2,0,0,0,0,3,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,166,        tok.reset(input);,6,1,1,1,2,0,14,0,0,25,17,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,167,        return tok;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,180,        StrTokenizer tok = getCSVClone();,2,0,0,1,2,0,2,2,0,6,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,181,        tok.reset(input);,0,0,0,1,2,0,6,0,0,6,17,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,182,        return tok;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1672,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1673,        for (int i = 0; i < thisBuf.length; i++) {,0,0,0,1,3,0,0,0,0,4,42,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1674,            if (thisBuf[i] == ch) {,2,1,1,2,5,0,0,0,0,7,23,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1675,                return true;,2,0,0,0,0,1,4,4,0,11,12,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1202,        int len = (str == null ? 0 : str.length());,0,0,0,2,4,0,6,0,0,6,43,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1203,        if (len > 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1204,"            int index = indexOf(str, 0);",0,0,0,1,2,0,0,0,0,3,28,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1205,            if (index >= 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1206,"                deleteImpl(index, index + len, len);",0,0,0,1,2,0,0,0,0,3,36,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1209,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1762,        if (str == null || startIndex >= size) {,0,0,0,1,3,0,0,0,0,4,40,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1765,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1766,        if (strLen == 1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1769,        if (strLen == 0) {,4,1,0,1,3,3,2,2,0,13,18,1,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1772,        if (strLen > size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1775,        char[] thisBuf = buffer;,2,0,0,1,2,3,0,0,0,5,24,2,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1776,        int len = size - strLen + 1;,0,0,0,0,0,0,0,0,0,0,28,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1778,        for (int i = startIndex; i < len; i++) {,10,1,0,1,3,0,0,0,0,12,40,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1779,            for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,0,0,0,10,34,7,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1780,                if (str.charAt(j) != thisBuf[i + j]) {,4,2,1,3,7,0,6,0,0,14,38,9,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1781,                    continue outer;,0,0,0,0,0,0,0,0,0,0,15,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1784,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",4,1,0,1,2,0,12,0,0,17,72,5,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1115,        size -= len;,4,0,0,0,0,0,0,0,0,5,12,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1116,    },4,0,0,0,1,0,0,2,0,6,1,5,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,121,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.01429,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,122,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.01429,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,125,            buffer = new char[str.length() + CAPACITY];,0,0,0,2,4,0,0,0,0,1,43,8,0.01429,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,126,            append(str);,0,0,0,1,2,0,4,0,0,4,12,7,0.01429,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,128,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01429,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,474,            int len = length();,0,0,0,1,2,0,0,0,0,3,19,4,0.00877,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,475,            ensureCapacity(len + strLen);,4,1,0,1,2,0,2,0,0,7,29,7,0.00877,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,476,"            str.getChars(0, strLen, buffer, len);",0,0,0,1,2,0,0,0,0,3,37,4,0.00877,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,477,            size += strLen;,0,0,0,0,0,0,0,0,0,0,15,4,0.00877,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,469,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0087,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,472,        int strLen = str.length();,2,0,0,1,2,0,0,2,0,5,26,5,0.0087,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,473,        if (strLen > 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0087,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,479,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0087,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,293,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,294,            this.ch = ch;,6,0,0,0,0,3,0,4,0,14,13,1,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,295,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,216,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,217,    },0,0,0,0,1,0,6,0,0,7,1,6,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",2,0,0,1,2,3,0,4,0,10,69,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,4,0,0,1,2,3,0,4,0,13,68,1,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,2,0,0,1,2,3,0,4,0,10,69,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",2,0,0,2,4,3,2,4,0,12,94,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,2,0,0,1,2,3,0,4,0,9,65,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,4,0,0,1,2,3,6,4,0,19,77,1,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",0,0,0,2,4,0,0,0,0,6,88,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,4,0,0,1,2,3,10,6,0,23,63,1,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,389,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,390,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,362,            super();,4,1,0,1,2,0,4,0,0,9,8,5,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,363,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,260,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,261,            this.chars = (char[]) chars.clone();,2,0,0,3,6,0,4,0,0,7,36,5,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,262,            Arrays.sort(this.chars);,0,0,0,1,2,0,0,0,0,3,24,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,263,        },4,3,0,0,1,0,0,0,0,7,1,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,182,        return size;,2,0,0,0,0,1,0,0,0,2,12,4,0.00585,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,228,        if (capacity > buffer.length) {,8,4,0,1,3,0,4,0,0,16,31,3,0.00585,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,233,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.00585,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,307,            return ch == buffer[pos] ? 1 : 0;,6,1,0,1,2,4,0,6,0,16,33,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,80,        return COMMA_MATCHER;,4,1,0,0,0,1,0,0,0,5,21,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,89,        return TAB_MATCHER;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,98,        return SPACE_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,108,        return SPLIT_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,117,        return TRIM_MATCHER;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,126,        return SINGLE_QUOTE_MATCHER;,2,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,135,        return DOUBLE_QUOTE_MATCHER;,2,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,144,        return QUOTE_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,153,        return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,163,        return new CharMatcher(ch);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,173,        if (chars == null || chars.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,174,            return NONE_MATCHER;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,176,        if (chars.length == 1) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,177,            return new CharMatcher(chars[0]);,0,0,0,2,4,1,0,0,0,7,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,179,        return new CharSetMatcher(chars);,10,1,0,1,2,1,8,0,0,19,33,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,189,        if (chars == null || chars.length() == 0) {,0,0,0,2,5,0,0,0,0,7,43,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,190,            return NONE_MATCHER;,4,0,0,0,0,3,0,0,0,6,20,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,192,        if (chars.length() == 1) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,193,            return new CharMatcher(chars.charAt(0));,0,0,0,2,4,1,4,2,0,6,40,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,195,        return new CharSetMatcher(chars.toCharArray());,0,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,205,        if (str == null || str.length() == 0) {,2,3,0,2,5,0,4,0,0,9,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,206,            return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1762,        if (str == null || startIndex >= size) {,0,0,0,1,3,0,0,0,0,4,40,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1765,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1766,        if (strLen == 1) {,8,2,0,1,3,0,0,0,0,12,18,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1769,        if (strLen == 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1772,        if (strLen > size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1775,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,8,1,0,0,0,0,0,0,0,9,34,5,0.57143,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1778,        for (int i = startIndex; i < len; i++) {,10,1,0,1,3,0,0,0,0,12,40,5,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1779,            for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,0,0,0,10,34,7,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1780,                if (str.charAt(j) != thisBuf[i + j]) {,4,2,1,3,7,0,6,0,0,14,38,9,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1781,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1784,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1184,        int len = (str == null ? 0 : str.length());,4,1,0,2,4,0,4,0,0,9,43,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1185,        if (len > 0) {,12,2,0,1,3,3,0,4,0,22,14,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1186,"            int index = indexOf(str, 0);",2,0,0,1,2,0,4,0,0,6,28,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1187,            while (index >= 0) {,0,0,0,1,3,0,0,0,0,4,20,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1188,"                deleteImpl(index, index + len, len);",0,0,0,1,2,0,0,0,0,3,36,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1189,"                index = indexOf(str, index);",2,0,0,1,2,0,6,0,0,9,28,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1202,        int len = (str == null ? 0 : str.length());,0,0,0,2,4,0,0,0,0,6,43,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1203,        if (len > 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1204,"            int index = indexOf(str, 0);",0,0,0,1,2,0,0,0,0,3,28,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1205,            if (index >= 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1206,"                deleteImpl(index, index + len, len);",0,0,0,1,2,0,0,0,0,3,36,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1209,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1747,"        return indexOf(str, 0);",4,1,0,1,2,1,8,0,0,14,23,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",4,1,0,1,2,0,12,0,0,17,72,5,0.30769,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1115,        size -= len;,0,0,0,0,0,0,0,0,0,0,12,4,0.30769,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1116,    },0,0,0,0,1,0,0,0,0,1,1,4,0.30769,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,121,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,122,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,125,            buffer = new char[str.length() + CAPACITY];,4,1,0,2,4,0,4,0,0,10,43,6,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,126,            append(str);,0,0,0,1,2,0,4,0,0,4,12,7,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,128,    },0,0,0,0,1,0,4,0,0,4,1,5,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,474,            int len = length();,2,0,0,1,2,0,2,0,0,4,19,7,0.03571,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,475,            ensureCapacity(len + strLen);,0,0,0,1,2,0,0,0,0,3,29,4,0.03571,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,476,"            str.getChars(0, strLen, buffer, len);",8,1,0,1,2,0,10,0,0,19,37,3,0.03571,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,477,            size += strLen;,0,0,0,0,0,0,0,0,0,0,15,4,0.03571,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,469,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0354,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,472,        int strLen = str.length();,4,0,0,1,2,3,6,2,0,16,26,1,0.0354,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,473,        if (strLen > 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0354,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,479,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0354,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,260,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,261,            this.chars = (char[]) chars.clone();,0,1,0,3,6,0,4,0,0,5,36,5,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,262,            Arrays.sort(this.chars);,0,0,0,1,2,0,0,0,0,3,24,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,263,        },0,1,0,0,1,0,6,0,0,7,1,6,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,216,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,217,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",0,0,0,1,2,0,0,0,0,3,69,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,0,0,0,1,2,0,6,0,0,6,68,5,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,6,1,0,1,2,0,4,0,0,12,69,6,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",0,0,0,2,4,0,0,0,0,6,94,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,0,0,0,1,2,0,0,0,0,3,65,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,0,0,0,1,2,0,0,0,0,3,77,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",2,0,0,2,4,3,6,4,0,16,88,1,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,0,0,0,1,2,0,0,0,0,3,63,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,389,            super();,4,1,0,1,2,0,4,0,0,9,8,5,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,390,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,362,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,363,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,293,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,294,            this.ch = ch;,0,0,0,0,0,0,0,0,0,0,13,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,295,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,182,        return size;,0,0,0,0,0,1,0,0,0,1,12,4,0.02367,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,228,        if (capacity > buffer.length) {,0,0,0,1,3,0,0,0,0,4,31,4,0.02367,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,233,        return this;,2,0,0,0,0,4,2,0,0,8,12,2,0.02367,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,275,"            return Arrays.binarySearch(chars, buffer[pos]) >= 0 ? 1 : 0;",0,0,0,2,4,1,0,0,0,7,60,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,80,        return COMMA_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,89,        return TAB_MATCHER;,6,0,0,0,0,1,10,0,0,19,19,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,98,        return SPACE_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,108,        return SPLIT_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,117,        return TRIM_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,126,        return SINGLE_QUOTE_MATCHER;,2,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,135,        return DOUBLE_QUOTE_MATCHER;,0,0,0,0,0,1,0,0,0,1,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,144,        return QUOTE_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,153,        return NONE_MATCHER;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,163,        return new CharMatcher(ch);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,173,        if (chars == null || chars.length == 0) {,2,0,0,1,3,0,0,0,0,2,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,174,            return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,176,        if (chars.length == 1) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,177,            return new CharMatcher(chars[0]);,0,0,0,2,4,1,0,0,0,7,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,179,        return new CharSetMatcher(chars);,2,0,0,1,2,1,4,2,0,9,33,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,189,        if (chars == null || chars.length() == 0) {,0,0,0,2,5,0,0,0,0,7,43,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,190,            return NONE_MATCHER;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,192,        if (chars.length() == 1) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,193,            return new CharMatcher(chars.charAt(0));,0,0,0,2,4,1,4,2,0,6,40,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,840,                    if (entityName.length() == 1) {,0,1,0,2,5,0,4,0,0,5,31,11,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,843,                        char charAt1 = entityName.charAt(1);,2,0,0,1,2,0,14,0,0,16,36,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,845,                            if (charAt1 == 'x' || charAt1=='X') {,4,3,0,1,3,0,0,0,0,9,37,15,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,848,                                entityValue = Integer.parseInt(entityName.substring(1));,4,1,0,2,4,0,8,0,0,14,56,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,852,                        },4,1,0,0,1,0,6,0,0,12,1,8,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang/Entities,62,853,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,862,                    buf.append((char) (entityValue));,2,0,0,3,6,0,4,0,0,6,33,11,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,819,        StringBuffer buf = new StringBuffer(str.length());,6,0,0,2,4,0,4,4,0,15,50,1,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,820,"        buf.append(str.substring(0, firstAmp));",0,0,0,2,4,0,0,0,0,6,39,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,821,        for (int i = firstAmp; i < str.length(); ++i) {,8,1,0,2,5,0,4,0,0,14,47,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,822,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,823,            if (ch == '&') {,2,1,0,1,3,0,0,0,0,4,16,6,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,824,"                int semi = str.indexOf(';', i + 1);",4,1,0,1,2,0,4,0,0,10,35,9,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,825,                if (semi == -1) {,2,1,0,1,3,0,0,0,0,4,17,8,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,829,"                int amph = str.indexOf('&', i + 1);",8,3,0,1,2,0,4,0,0,17,35,3,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,830,                if( amph != -1 && amph < semi ) {,6,3,0,1,3,0,0,0,0,10,33,8,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,835,"                String entityName = str.substring(i + 1, semi);",2,0,0,1,2,0,0,0,0,2,47,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,837,                if (entityName.length() == 0) {,0,1,0,2,5,0,4,0,0,5,31,8,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,839,                } else if (entityName.charAt(0) == '#') {,0,1,0,2,6,0,4,0,0,6,41,9,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,857,                if (entityValue == -1) {,2,1,0,1,3,0,4,0,0,10,24,3,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,864,                i = semi;,0,0,0,0,0,0,0,0,0,0,9,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,865,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,869,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,814,        int firstAmp = str.indexOf('&');,2,0,0,1,2,0,4,0,0,7,32,5,0.03704,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,815,        if (firstAmp < 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.03704,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,62,83,"        protected Entry(int hash, int key, Object value, Entry next) {",10,0,0,1,3,1,0,4,0,15,62,3,0.02439,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,62,84,            this.hash = hash;,6,0,0,0,0,0,6,2,0,15,17,1,0.02439,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,62,85,            this.key = key;,8,2,0,0,0,0,0,2,0,13,15,1,0.02439,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,62,86,            this.value = value;,0,0,0,0,0,0,0,0,0,0,19,4,0.02439,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,62,87,            this.next = next;,4,0,0,0,0,0,0,0,0,5,17,5,0.02439,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,62,88,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02439,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,247,"        return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());",0,0,0,2,4,1,12,0,0,13,81,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,330,"            if (Token.containsTokenWithValue(tokens, M)) {",0,0,0,2,5,0,8,0,0,8,46,7,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,331,                months += 12 * years;,6,4,0,0,0,0,8,0,0,21,21,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,332,                years = 0;,2,0,0,0,0,0,0,0,0,3,10,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,344,            hours += 24 * days;,4,1,0,0,0,0,0,0,0,6,19,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,345,            days = 0;,4,0,0,0,0,0,0,0,0,5,9,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,348,            minutes += 60 * hours;,4,1,0,0,0,0,0,0,0,6,22,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,349,            hours = 0;,4,0,0,0,0,0,4,4,0,13,10,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,352,            seconds += 60 * minutes;,4,1,0,0,0,0,0,0,0,6,24,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,353,            minutes = 0;,2,0,0,0,0,0,0,0,0,3,12,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,356,            milliseconds += 1000 * seconds;,0,0,0,0,0,0,0,0,0,0,31,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,357,            seconds = 0;,2,0,0,0,0,0,0,0,0,3,12,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,265,        long millis = endMillis - startMillis;,10,1,0,0,0,0,4,4,0,20,38,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,266,        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {,0,0,0,1,3,0,0,2,0,2,45,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,270,        Token[] tokens = lexx(format);,2,0,0,2,4,0,4,2,0,8,30,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,274,        Calendar start = Calendar.getInstance(timezone);,2,0,0,1,2,0,6,2,0,10,48,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,275,        start.setTime(new Date(startMillis));,4,0,0,2,4,0,10,2,0,18,37,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,276,        Calendar end = Calendar.getInstance(timezone);,2,0,0,1,2,0,6,2,0,10,46,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,277,        end.setTime(new Date(endMillis));,2,0,0,2,4,0,4,2,0,8,33,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,280,        int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);,0,0,0,2,4,0,0,0,0,6,83,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,281,        int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);,0,0,0,2,4,0,0,0,0,6,68,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,282,        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);,14,2,0,2,4,0,8,0,0,24,68,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,283,        int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);,0,0,0,2,4,0,0,0,0,6,76,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,284,        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);,10,1,0,2,4,0,8,0,0,19,77,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,285,        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);,10,1,0,2,4,0,8,0,0,19,65,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,286,        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);,14,4,0,2,4,0,12,0,0,31,62,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,289,        while (milliseconds < 0) {,2,1,0,1,3,0,0,0,0,3,26,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,293,        while (seconds < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,297,        while (minutes < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,301,        while (hours < 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,305,        while (days < 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,314,        while (months < 0) {,2,1,0,1,3,0,0,0,0,3,20,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,318,"        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);",6,0,0,1,2,0,8,0,0,15,81,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,319,"        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);",0,0,0,1,2,0,0,0,0,3,66,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,320,"        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);",6,0,0,1,2,0,8,0,0,15,66,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,321,"        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);",6,0,0,1,2,0,8,0,0,15,67,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,322,"        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);",6,0,0,1,2,0,8,0,0,15,66,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,323,"        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);",0,0,0,1,2,0,0,0,0,3,63,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,324,"        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);",2,0,1,1,2,0,4,2,0,10,60,3,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,329,"        if (!Token.containsTokenWithValue(tokens, y)) {",0,0,0,2,5,0,12,0,0,13,47,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,339,"        if (!Token.containsTokenWithValue(tokens, M)) {",2,0,0,2,5,3,16,2,0,25,47,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,343,"        if (!Token.containsTokenWithValue(tokens, d)) {",0,0,0,2,5,0,0,0,0,7,47,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,347,"        if (!Token.containsTokenWithValue(tokens, H)) {",2,0,0,2,5,0,8,0,0,11,47,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,351,"        if (!Token.containsTokenWithValue(tokens, m)) {",0,0,0,2,5,0,8,0,0,9,47,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,355,"        if (!Token.containsTokenWithValue(tokens, s)) {",2,1,0,2,5,0,8,0,0,12,47,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,360,"        return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);",0,0,0,1,2,1,20,0,0,20,96,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,433,"        end.add( field, -1 * difference );",8,1,0,1,2,3,12,4,0,30,34,1,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,434,        int endValue = end.get(field);,4,0,0,1,2,0,10,0,0,14,30,1,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,435,        int startValue = start.get(field);,2,0,0,1,2,3,2,2,0,10,34,2,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,436,        if (endValue < startValue) {,4,1,0,1,3,0,0,0,0,5,28,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,441,            return 0;,0,0,0,0,0,1,4,0,0,4,9,7,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,395,"                    buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(months), count, '0') : Integer",2,0,0,2,5,0,18,0,0,21,96,12,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,397,                    lastOutputSeconds = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,487,                case 'M'  : value = M; break;,4,0,0,0,0,0,0,0,0,6,29,6,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,63,3865,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,63,3868,        int pads = size - str.length();,0,0,0,1,2,0,0,0,0,3,31,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,63,3869,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,63,3870,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,534,            return false;,4,1,0,0,0,1,0,0,0,6,13,1,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,503,                    previous.increment();,2,0,0,1,2,0,8,0,0,13,21,3,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,566,            count++;,2,0,0,0,0,0,0,0,0,2,8,5,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,567,        },4,0,0,0,1,0,6,0,0,10,1,5,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,380,        StringBuffer buffer = new StringBuffer();,4,0,1,1,2,1,4,4,0,17,41,1,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,381,        boolean lastOutputSeconds = false;,10,0,0,0,0,0,4,0,0,15,34,3,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,382,        int sz = tokens.length;,0,0,0,0,0,0,0,0,0,0,23,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,383,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,384,            Token token = tokens[i];,2,0,1,1,2,0,0,2,0,8,24,6,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,385,            Object value = token.getValue();,2,0,0,1,2,0,4,2,0,8,32,6,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,386,            int count = token.getCount();,2,1,0,1,2,0,0,0,0,3,29,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,387,            if (value instanceof StringBuffer) {,2,0,0,1,3,0,0,2,0,4,36,7,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,390,                if (value == y) {,0,0,0,1,3,0,0,0,0,4,17,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,394,                } else if (value == M) {,0,0,0,1,4,0,0,0,0,5,24,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,430,        return buffer.toString();,0,0,0,1,2,1,4,0,0,4,25,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,528,            int sz = tokens.length;,10,1,0,0,0,0,4,0,0,16,23,1,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,529,            for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,530,                if (tokens[i].getValue() == value) {,0,0,0,3,7,0,0,0,0,10,36,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,531,                    return true;,0,0,0,0,0,1,4,0,0,4,12,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,575,            return count;,2,0,0,0,0,1,0,0,0,2,13,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,460,        char[] array = format.toCharArray();,0,0,0,2,4,0,0,0,0,6,36,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,461,        java.util.ArrayList list = new java.util.ArrayList(array.length);,18,0,0,1,2,0,0,0,0,18,65,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,463,        boolean inLiteral = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,464,        StringBuffer buffer = null;,2,0,0,0,0,0,0,2,0,4,27,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,465,        Token previous = null;,8,0,0,0,0,3,12,6,0,30,22,1,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,466,        int sz = array.length;,6,0,0,0,0,0,0,0,0,6,22,5,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,467,        for(int i=0; i<sz; i++) {,0,0,0,1,3,0,0,0,0,4,25,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,468,            char ch = array[i];,0,0,0,1,2,0,0,0,0,3,19,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,469,            if(inLiteral && ch != '\'') {,4,2,0,1,3,0,0,0,0,7,29,6,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,473,            Object value = null;,10,3,0,0,0,0,0,2,0,15,20,3,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,474,            switch(ch) {,0,0,0,1,3,0,0,0,0,4,12,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,501,            if(value != null) {,2,1,0,1,3,0,6,0,0,9,19,3,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,502,                if(previous != null && previous.getValue() == value) {,4,3,0,2,5,0,4,0,0,11,54,8,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,505,                    Token token = new Token(value);,2,0,0,1,2,0,0,0,0,2,31,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,506,                    list.add(token); ,0,0,0,1,2,0,6,0,0,6,16,11,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,507,                    previous = token;,0,0,0,0,0,0,0,0,0,0,17,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,509,                buffer = null; ,2,0,0,0,0,0,0,0,0,2,14,6,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,512,        return (Token[]) list.toArray( new Token[0] );,0,0,0,4,8,1,0,0,0,13,46,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,545,        Token(Object value) {,4,0,0,1,3,0,0,2,0,6,21,3,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,546,            this.value = value;,4,0,0,0,0,0,0,0,0,5,19,5,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,547,            this.count = 1;,2,0,0,0,0,0,0,2,0,6,15,1,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,548,        },2,1,0,0,1,0,0,0,0,3,1,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,584,            return value;,4,0,0,0,0,4,0,4,0,11,13,1,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,445,"    static final Object y = ""y"";",2,0,0,0,0,2,6,2,0,13,28,1,0.09091,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,446,"    static final Object M = ""M"";",2,0,0,0,0,2,0,2,0,7,28,2,0.09091,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,447,"    static final Object d = ""d"";",2,0,0,0,0,2,10,2,0,17,28,1,0.09091,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,        return iValue - ((ValuedEnum) other).iValue;,6,1,0,2,4,1,0,2,0,9,44,4,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,126,        super(name);,2,0,0,1,2,0,0,0,0,2,12,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,127,        iValue = value;,4,0,0,0,0,0,0,0,0,5,15,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,128,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,519,        return getClass();,0,0,0,1,2,1,2,0,0,2,18,5,0.01754,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,314,        iName = name;,4,0,0,0,0,0,0,0,0,5,13,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,315,        iHashCode = 7 + getEnumClass().hashCode() + 3 * name.hashCode();,2,2,0,3,6,0,8,0,0,13,64,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,317,    },2,1,0,0,1,0,0,0,0,3,1,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,339,                ok = true;,6,1,0,0,0,0,0,0,0,9,10,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,340,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,349,        Entry entry = (Entry) cEnumClasses.get(enumClass);,0,0,0,2,4,0,0,0,0,6,50,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,350,        if (entry == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,351,            entry = createEntry(enumClass);,2,0,0,1,2,0,6,2,0,10,31,12,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,352,"            cEnumClasses.put(enumClass, entry);",0,0,0,1,2,0,0,0,0,3,35,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,354,        if (entry.map.containsKey(name)) {,4,0,0,2,5,0,4,0,0,8,34,5,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,357,"        entry.map.put(name, this);",4,0,0,1,2,0,4,0,0,8,26,5,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,358,        entry.list.add(this);,8,0,0,1,2,0,2,0,0,11,21,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,359,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,484,        Entry entry = new Entry();,6,1,0,1,2,3,10,2,0,24,26,1,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,485,        Class cls = enumClass.getSuperclass();,2,0,0,1,2,0,4,2,0,8,38,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,486,        while (cls != null && cls != Enum.class && cls != ValuedEnum.class) {,6,5,0,1,3,0,0,4,0,15,69,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,495,        return entry;,2,0,0,0,0,1,0,0,0,2,13,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,297,          super();,4,2,0,1,2,0,8,2,0,16,8,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,279,        final Map map = new HashMap();,2,0,0,1,2,1,0,4,0,7,30,3,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,283,        final Map unmodifiableMap = Collections.unmodifiableMap(map);,2,0,0,1,2,1,6,2,0,11,61,3,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,287,        final List list = new ArrayList(25);,2,0,0,1,2,1,0,4,0,7,36,3,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,291,        final List unmodifiableList = Collections.unmodifiableList(list);,2,0,0,1,2,1,6,2,0,11,65,3,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,298,        },0,0,0,0,1,0,0,0,0,1,1,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,335,        Class cls = getClass();,4,0,0,1,2,0,2,4,0,10,23,3,0.01515,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,336,        boolean ok = false;,0,0,0,0,0,0,0,0,0,0,19,4,0.01515,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,338,            if (cls == enumClass) {,4,1,0,1,3,0,0,0,0,5,23,6,0.01515,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,344,        if (ok == false) {,6,1,0,1,3,3,0,2,0,13,18,1,0.01515,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,185,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,312,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,270,    protected transient String iToString = null;,0,0,0,0,0,0,0,0,0,0,44,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,313,        init(name);,0,0,0,1,2,0,4,0,0,4,11,5,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,327,        if (StringUtils.isEmpty(name)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,331,        Class enumClass = getEnumClass();,0,0,0,1,2,0,0,0,0,3,33,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,332,        if (enumClass == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,337,        while (cls != null && cls != Enum.class && cls != ValuedEnum.class) {,6,5,0,1,3,0,0,4,0,15,69,4,0.01408,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,249,    private static final Map EMPTY_MAP = Collections.unmodifiableMap(new HashMap(0));,0,0,0,2,4,0,0,0,0,6,81,4,0.01389,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,254,    private static final Map cEnumClasses = new HashMap();,2,0,0,1,2,3,0,4,0,9,54,2,0.01389,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,161,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,162,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,203,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,6,0,0,7,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,223,        if (str == null || (strLen = str.length()) == 0) {,4,4,0,3,7,0,14,0,0,24,50,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,224,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,226,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,227,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,2,1,0,4,9,0,10,0,0,15,55,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,228,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,231,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,251,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,276,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,303,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,329,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,330,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,7,31,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,355,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,383,"        return strip(str, null);",10,1,0,1,2,1,0,0,0,12,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,410,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,411,            return null;,2,1,1,0,0,1,0,0,0,7,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,413,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,414,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,440,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,470,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,471,            return str;,2,1,0,0,0,1,0,0,0,3,11,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,473,"        str = stripStart(str, stripChars);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,474,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,503,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,504,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,506,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,507,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,508,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,2,3,0,4,9,0,4,0,0,9,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,509,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,511,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,512,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,514,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,8,4,0,5,11,0,10,0,0,23,76,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,515,                start++;,2,0,0,0,0,0,0,0,0,3,8,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,518,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,547,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,6,0,0,6,47,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,548,            return str;,20,2,0,0,0,1,4,2,0,30,11,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,551,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,552,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,4,9,0,0,0,0,13,67,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,553,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,555,        } else if (stripChars.length() == 0) {,2,1,0,2,6,0,4,0,0,7,38,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,556,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,558,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,0,0,0,5,11,0,0,0,0,16,71,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,559,                end--;,4,0,0,0,0,0,0,0,0,6,6,0,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,562,"        return str.substring(0, end);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,587,"        return stripAll(strs, null);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,617,        if (strs == null || (strsLen = strs.length) == 0) {,4,1,0,2,5,0,0,0,0,5,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,618,            return strs;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,620,        String[] newArr = new String[strsLen];,4,0,1,2,4,0,0,4,0,10,38,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,621,        for (int i = 0; i < strsLen; i++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,622,"            newArr[i] = strip(strs[i], stripChars);",2,0,1,3,6,0,4,0,0,16,39,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,624,        return newArr;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,650,        return str1 == null ? str2 == null : str1.equals(str2);,0,0,0,1,2,1,0,0,0,4,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,675,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,700,        if (isEmpty(str)) {,2,0,0,2,5,0,12,0,0,14,19,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,701,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,703,        return str.indexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,732,        if (isEmpty(str)) {,2,0,0,2,5,0,4,6,0,13,19,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,733,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,735,"        return str.indexOf(searchChar, startPos);",0,0,0,1,2,1,4,0,0,5,41,10,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,761,        if (str == null || searchStr == null) {,6,3,0,1,3,0,0,0,0,9,39,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,762,            return -1;,6,3,0,0,0,4,2,2,0,17,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,764,        return str.indexOf(searchStr);,0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,795,        if (str == null || searchStr == null || ordinal <= 0) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,796,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,543,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,546,        Calendar gval = Calendar.getInstance();,0,0,0,1,2,0,0,0,0,3,39,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,547,        gval.setTime(date);,0,0,0,1,2,0,0,0,0,3,19,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,548,"        modify(gval, field, false);",0,0,0,1,2,0,6,0,0,7,27,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,549,        return gval.getTime();,2,1,0,1,2,1,4,0,0,7,22,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,620,        if (val.get(Calendar.YEAR) > 280000000) {,4,1,0,2,5,0,4,0,0,9,41,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,641,        boolean roundUp = false;,0,0,0,0,0,0,0,0,0,0,24,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,642,        for (int i = 0; i < fields.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,643,            for (int j = 0; j < fields[i].length; j++) {,0,0,0,2,5,0,0,0,0,7,44,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,644,                if (fields[i][j] == field) {,2,1,1,3,7,0,0,0,0,9,28,8,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,646,                    if (round && roundUp) {,4,1,0,1,3,0,0,0,0,5,23,10,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,663,                    return;,0,0,0,0,0,1,4,0,0,5,7,11,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,667,            int offset = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,668,            boolean offsetSet = false;,2,0,0,0,0,0,0,0,0,4,26,3,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,670,            switch (field) {,2,0,0,1,3,0,0,0,0,2,16,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,700,            if (!offsetSet) {,10,2,0,1,3,0,4,0,0,17,17,3,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,701,                int min = val.getActualMinimum(fields[i][0]);,6,3,1,3,6,0,8,0,0,22,45,3,0.25,0,0,-1
