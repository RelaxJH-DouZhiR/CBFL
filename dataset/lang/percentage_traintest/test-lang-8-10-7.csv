dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1099,        },2,0,0,0,1,3,0,4,0,9,1,2,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,633,"                rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);",0,0,0,1,2,0,0,0,0,3,56,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,634,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,639,"                rule = selectNumberRule(Calendar.SECOND, tokenLen);",6,0,0,1,2,0,4,0,0,11,51,7,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,640,                break;,0,0,0,0,0,0,4,0,0,6,6,5,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,738,                    if (i + 1 < length && pattern.charAt(i + 1) == '\'') {,6,5,0,2,5,0,4,0,0,16,54,10,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,743,                        inLiteral = !inLiteral;,2,1,0,0,0,0,0,0,0,3,23,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,832,"        return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();",0,0,0,3,6,1,0,0,0,10,73,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,871,        if (mTimeZoneForced) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,875,"        return applyRules(calendar, buf);",0,0,0,1,2,1,14,0,0,14,33,1,0.0303,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1292,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,10,0,0,10,39,6,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1293,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1299,            if (value < 100) {,4,1,0,1,3,3,2,2,0,13,18,1,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1307,                if (value < 1000) {,2,1,0,1,3,0,0,0,0,3,19,7,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1313,                for (int i = mSize; --i >= digits; ) {,0,0,0,1,3,0,0,0,0,4,38,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1316,                buffer.append(Integer.toString(value));,0,0,0,2,4,0,10,0,0,10,39,8,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1318,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,636,"                rule = selectNumberRule(Calendar.MINUTE, tokenLen);",0,0,0,1,2,0,0,0,0,3,51,4,0.02941,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,637,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.02941,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,887,        Rule[] rules = mRules;,4,0,0,1,2,0,0,2,0,6,22,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,888,        int len = mRules.length;,6,0,0,0,0,0,0,0,0,6,24,5,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,889,        for (int i = 0; i < len; i++) {,8,1,0,1,3,0,0,0,0,10,31,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3612,        if (text == null || text.length() == 0 || searchList == null || ,4,8,0,1,3,0,4,0,0,16,63,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3615,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3619,        if (timeToLive < 0) {,4,1,0,1,3,0,6,2,0,13,21,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3623,        int searchLength = searchList.length;,0,0,0,0,0,0,0,0,0,0,37,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3624,        int replacementLength = replacementList.length;,0,0,0,0,0,0,0,0,0,0,47,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3627,        if (searchLength != replacementLength) {,10,1,0,1,3,0,0,0,0,11,40,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3635,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,2,0,1,2,4,0,0,0,0,5,64,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3638,        int textIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3639,        int replaceIndex = -1;,2,0,0,0,0,0,0,0,0,3,22,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3640,        int tempIndex = -1;,2,0,0,0,0,0,12,0,0,16,19,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3644,        for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3645,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3650,            tempIndex = text.indexOf(searchList[i]);,2,0,1,2,4,0,4,0,0,11,40,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3653,            if (tempIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3654,                noMoreMatchesForReplIndex[i] = true;,2,0,1,1,2,3,0,0,0,11,36,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3656,                if (textIndex == -1 || tempIndex < textIndex) {,0,0,0,1,3,0,0,0,0,4,47,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3657,                    textIndex = tempIndex;,0,3,0,0,0,0,12,0,0,15,22,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3658,                    replaceIndex = i;,0,0,0,0,0,0,0,0,0,0,17,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3665,        if (textIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3666,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3669,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3672,        int increase = 0;,2,0,0,0,0,0,0,0,0,2,17,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3675,        for (int i = 0; i < searchList.length; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3676,            int greater = replacementList[i].length() - searchList[i].length();,4,1,1,4,8,0,8,0,0,22,67,3,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3677,            if (greater > 0) {,2,1,0,1,3,0,0,0,0,3,18,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3682,"        increase = Math.min(increase, text.length() / 5);",0,0,0,2,4,0,0,0,0,6,49,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3684,        StringBuilder buf = new StringBuilder(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,64,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3686,        while (textIndex != -1) {,0,0,0,1,3,0,0,0,0,4,25,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3688,            for (int i = start; i < textIndex; i++) {,0,0,0,1,3,0,0,0,0,4,41,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3689,                buf.append(text.charAt(i));,0,0,0,2,4,0,10,0,0,10,27,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3691,            buf.append(replacementList[replaceIndex]);,4,0,0,2,4,0,0,4,0,8,42,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3693,            start = textIndex + searchList[replaceIndex].length();,2,1,0,2,4,0,0,0,0,3,54,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3695,            textIndex = -1;,4,0,0,0,0,3,0,0,0,9,15,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3696,            replaceIndex = -1;,2,0,0,0,0,0,0,0,0,4,18,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3697,            tempIndex = -1;,4,1,0,0,0,3,16,4,0,31,15,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3700,            for (int i = 0; i < searchLength; i++) {,8,2,1,1,3,0,4,0,0,20,40,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3701,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3706,"                tempIndex = text.indexOf(searchList[i], start);",2,0,1,2,4,0,6,0,0,13,47,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3709,                if (tempIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3710,                    noMoreMatchesForReplIndex[i] = true;,0,0,1,1,2,0,0,0,0,6,36,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3712,                    if (textIndex == -1 || tempIndex < textIndex) {,2,0,0,1,3,0,0,2,0,4,47,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3713,                        textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,12,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3714,                        replaceIndex = i;,10,0,0,0,0,6,14,4,0,39,17,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3721,        int textLength = text.length();,2,0,0,1,2,0,8,0,0,10,31,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3722,        for (int i = start; i < textLength; i++) {,0,0,0,1,3,0,0,0,0,4,42,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3723,            buf.append(text.charAt(i));,0,0,0,2,4,0,4,2,0,6,27,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3725,        String result = buf.toString();,0,0,0,1,2,0,0,0,0,3,31,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3726,        if (!repeat) {,0,0,0,1,3,0,0,0,0,4,14,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,167,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,168,    },0,0,0,0,1,0,4,0,0,5,1,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,191,        return str == null || str.length() == 0;,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,209,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,6,0,0,7,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,229,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,230,            return true;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,232,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,234,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,237,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,257,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,286,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,312,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,313,        return isEmpty(ts) ? null : ts;,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,338,        return str == null ? EMPTY : str.trim();,2,1,0,1,2,1,4,0,0,7,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,366,"        return strip(str, null);",4,1,0,1,2,1,4,0,0,10,24,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,393,        if (str == null) {,8,2,0,1,3,0,0,0,0,11,18,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,394,            return null;,0,0,0,0,0,1,6,0,0,6,12,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,396,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,397,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,423,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,453,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,454,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,456,"        str = stripStart(str, stripChars);",6,0,0,1,2,0,0,2,0,8,34,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,457,"        return stripEnd(str, stripChars);",6,1,0,1,2,1,0,0,0,8,33,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,486,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,487,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,489,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,490,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,491,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,2,0,0,4,9,0,0,0,0,3,72,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,492,                start++;,2,0,0,0,0,0,6,0,0,8,8,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,494,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,495,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,497,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,0,0,0,5,11,0,0,0,0,16,76,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,498,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,501,        return str.substring(start);,0,0,0,1,2,1,0,2,0,4,28,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,530,        if (str == null || (end = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,531,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,534,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,535,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,4,3,0,4,9,0,8,0,0,15,67,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,536,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,538,        } else if (stripChars.length() == 0) {,4,2,0,2,6,0,4,6,0,18,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1045,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",0,0,0,3,6,1,0,0,0,10,60,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1018,        return str.indexOf(searchStr) >= 0;,0,1,0,1,2,1,6,0,0,7,35,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1015,        if (str == null || searchStr == null) {,4,3,0,1,3,0,6,0,0,13,39,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,168,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,169,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,192,        return str == null || str.length() == 0;,4,3,0,1,2,1,4,0,0,11,40,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,210,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,16,0,0,17,33,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,230,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,231,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,233,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,234,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,2,1,0,4,9,0,24,0,0,27,55,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,235,                return false;,2,0,0,0,0,1,4,2,0,9,13,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,238,        return true;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,258,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,6,0,0,7,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,287,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,313,        String ts = trim(str);,8,0,0,1,2,0,4,2,0,14,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,314,        return isEmpty(ts) ? null : ts;,4,0,0,1,2,1,4,0,0,9,31,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,339,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,367,"        return strip(str, null);",0,0,0,1,2,1,4,0,0,5,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,394,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,395,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,397,"        str = strip(str, null);",2,0,0,1,2,0,4,0,0,8,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,398,        return str.length() == 0 ? null : str;,6,1,0,1,2,1,10,2,0,19,38,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,424,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,454,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,455,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,457,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,458,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,487,        if (str == null || (strLen = str.length()) == 0) {,2,0,0,3,7,0,0,0,0,2,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,488,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,490,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,491,        if (stripChars == null) {,2,1,0,1,3,0,6,0,0,9,25,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,492,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,493,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,495,        } else if (stripChars.length() == 0) {,10,2,0,2,6,0,4,0,0,17,38,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,496,            return str;,0,1,0,0,0,1,6,0,0,7,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,498,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,2,0,0,5,11,0,4,0,0,9,76,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,499,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,502,        return str.substring(start);,2,0,0,1,2,1,10,0,0,13,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,531,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,12,0,0,12,47,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,532,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,535,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,536,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,4,1,1,4,9,3,12,12,0,35,67,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,537,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,539,        } else if (stripChars.length() == 0) {,2,0,0,2,6,0,0,2,0,5,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,540,            return str;,8,1,0,0,0,1,8,4,0,23,11,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,542,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,4,4,0,5,11,0,8,0,0,17,71,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,543,                end--;,2,0,0,0,0,3,2,0,0,8,6,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,546,"        return str.substring(0, end);",4,0,0,1,2,1,6,0,0,10,29,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,571,"        return stripAll(strs, null);",8,4,0,1,2,1,0,0,0,12,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,601,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,602,            return strs;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,604,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,605,        for (int i = 0; i < strsLen; i++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,606,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,608,        return newArr;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,634,        return str1 == null ? str2 == null : str1.equals(str2);,4,2,0,1,2,1,12,0,0,19,55,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,659,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,684,        if (isEmpty(str)) {,2,1,0,2,5,0,4,0,0,7,19,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,685,            return -1;,0,0,0,0,0,1,4,0,0,6,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,687,        return str.indexOf(searchChar);,2,0,0,1,2,1,0,0,0,2,31,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,716,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,717,            return -1;,2,1,0,0,0,4,4,0,0,13,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,719,"        return str.indexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,745,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,746,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,748,        return str.indexOf(searchStr);,0,0,0,1,2,1,6,0,0,6,30,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,779,        if (str == null || searchStr == null || ordinal <= 0) {,6,5,0,1,3,0,0,0,0,11,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,780,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,782,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,783,            return 0;,2,0,0,0,0,1,6,0,0,8,9,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,785,        int found = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,786,        int index = INDEX_NOT_FOUND;,6,1,0,0,0,0,6,0,0,14,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,788,"            index = str.indexOf(searchStr, index + 1);",6,1,0,1,2,0,10,2,0,20,42,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,789,            if (index < 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,790,                return index;,4,0,0,0,0,1,0,2,0,6,13,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,792,            found++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,793,        } while (found < ordinal);,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,794,        return index;,2,0,0,0,0,1,0,0,0,3,13,10,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,829,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,830,            return -1;,10,0,1,0,0,1,2,4,0,20,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,833,        if (searchStr.length() == 0 && startPos >= str.length()) {,2,1,0,3,7,0,0,0,0,3,58,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,834,            return str.length();,0,1,0,1,2,1,12,0,0,14,20,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,836,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,861,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,862,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,170,            return StringUtils.EMPTY;,6,1,0,0,0,1,0,0,0,7,25,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,230,            return StringUtils.EMPTY;,4,1,0,0,0,4,0,4,0,12,25,1,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,229,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,232,        return getPackageName(cls.getName());,0,0,0,2,4,1,0,0,0,7,37,4,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,201,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,245,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.16667,1,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,252,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,54,4,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,253,        if (i == -1) {,2,1,0,1,3,0,0,0,0,4,14,4,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,256,"        return className.substring(0, i);",0,0,0,1,2,1,6,0,0,6,33,5,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,86,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,2,0,0,1,2,3,12,2,0,19,94,1,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",4,0,0,1,2,0,4,2,0,10,53,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",4,0,0,1,2,0,4,2,0,10,47,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",4,0,0,1,2,0,4,2,0,10,57,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",8,1,0,1,2,0,10,2,0,21,53,1,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",0,0,0,1,2,0,0,0,0,3,47,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",4,0,0,1,2,0,4,2,0,10,51,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",4,1,0,1,2,0,0,0,0,5,49,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",8,0,0,1,2,0,4,0,0,12,46,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,455,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,459,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,0,0,0,4,8,0,0,0,0,12,67,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,460,"            escapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,24,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,461,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,498,        if (writer == null ) {,4,1,0,1,3,0,6,0,0,12,22,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,501,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,504,"        Entities.HTML40.escape(writer, string);",4,0,0,1,2,0,6,0,0,10,39,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,505,    },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,832,"                    writer.write(""&#"");",0,0,0,1,2,0,4,0,0,5,19,11,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,833,"                    writer.write(Integer.toString(c, 10));",6,3,0,2,4,0,10,0,0,19,38,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,834,                    writer.write(';');,0,0,0,1,2,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,536,            return super.name(value);,0,0,0,1,2,1,0,0,0,4,25,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,831,                if (c > 0x7F) {,0,0,0,1,3,0,0,0,0,4,15,4,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,961,"                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);",2,0,0,2,4,0,8,0,0,11,63,18,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,826,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,827,        for (int i = 0; i < len; i++) {,0,0,0,1,3,0,0,0,0,4,31,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,828,            char c = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.2,1,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,829,            String entityName = this.entityName(c);,4,2,1,1,2,0,8,0,0,21,39,3,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,830,            if (entityName == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,844,    },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,951,                        if (entityContentLen > 1) {,0,0,0,1,3,0,0,0,0,4,27,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,952,                            char isHexChar = entityContent.charAt(1);,0,0,0,1,2,0,0,0,0,3,41,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,954,                                switch (isHexChar) {,2,0,0,1,3,0,0,0,0,2,20,16,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,964,                                if (entityValue > 0xFFFF) {,2,1,0,1,3,0,0,0,0,3,27,16,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,969,                            },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,970,                        },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,525,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,529,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,0,0,0,4,8,0,0,0,0,12,67,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,530,"            unescapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,26,7,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,531,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,557,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,560,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,563,"        Entities.HTML40.unescape(writer, string);",0,0,0,1,2,0,6,0,0,7,41,5,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,564,    },0,0,0,0,1,0,0,0,0,1,1,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,42,245,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,981,                    writer.write(entityValue);,14,5,0,1,2,3,10,2,0,35,26,1,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,533,            if (value < LOOKUP_TABLE_SIZE) {,4,1,0,1,3,0,6,0,0,11,32,1,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,766,        return map.name(value);,0,0,0,1,2,1,6,0,0,6,23,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,457,            return (String) mapValueToName.get(value);,0,0,0,2,4,1,6,2,0,8,42,6,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,905,        int firstAmp = str.indexOf('&');,4,0,0,1,2,3,4,2,0,14,32,1,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,906,        if (firstAmp < 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,910,"            doUnescape(writer, str, firstAmp);",0,0,0,1,2,0,0,0,0,3,34,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,912,    },0,0,0,0,1,0,0,0,0,1,1,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,42,237,        Entry tab[] = table;,6,0,0,1,2,0,4,2,0,12,20,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,42,238,        int hash = key;,0,0,0,0,0,0,0,0,0,0,15,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,112,"        this(pattern, Locale.getDefault(), registry);",4,0,0,2,4,0,4,0,0,8,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,148,        ArrayList foundFormats = new ArrayList();,4,0,0,1,2,0,0,0,0,5,41,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,149,        ArrayList foundDescriptions = new ArrayList();,0,0,0,1,2,0,0,0,0,3,46,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,150,        StringBuffer stripCustom = new StringBuffer(pattern.length());,2,0,0,2,4,0,4,4,0,10,62,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,152,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,153,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,154,        int fmtCount = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,155,        while (pos.getIndex() < pattern.length()) {,4,2,0,3,7,0,8,12,0,27,43,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,156,            switch (c[pos.getIndex()]) {,2,0,1,3,7,0,10,4,0,18,28,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,187,                stripCustom.append(c[pos.getIndex()]);,0,0,1,3,6,0,8,0,0,10,38,8,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,188,                next(pos);,0,0,0,1,2,0,4,0,0,4,10,8,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,403,        pos.setIndex(pos.getIndex() + 1);,0,1,0,2,4,0,8,0,0,9,33,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,404,        return pos;,2,0,0,0,0,1,0,0,0,2,11,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,124,        super(DUMMY_PATTERN);,0,0,0,1,2,0,0,0,0,3,21,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,125,        setLocale(locale);,0,0,0,1,2,0,4,0,0,4,18,5,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,126,        this.registry = registry;,0,0,0,0,0,0,0,0,0,0,25,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,127,        applyPattern(pattern);,0,0,0,1,2,0,4,0,0,4,22,5,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,143,        if (registry == null) {,4,1,0,1,3,0,0,2,0,7,23,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,144,            super.applyPattern(pattern);,4,0,0,1,2,0,0,0,0,4,28,7,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,145,            toPattern = super.toPattern();,6,1,0,1,2,0,0,0,0,8,30,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,146,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,349,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,350,            chars = str.toCharArray();,10,1,0,1,2,0,4,0,0,17,26,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,351,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,363,            int len = chars.length;,8,2,0,0,0,0,4,0,0,15,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,139,        if (val == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,142,        if (val.length() == 0) {,2,1,0,2,5,0,4,4,0,11,24,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,145,"        if (val.startsWith(""--"")) {",0,0,0,2,5,0,4,0,0,5,27,5,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,152,"        if (val.startsWith(""0x"") || val.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,155,        char lastChar = val.charAt(val.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,159,        int decPos = val.indexOf('.');,4,1,0,1,2,0,4,0,0,10,30,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,160,        int expPos = val.indexOf('e') + val.indexOf('E') + 1;,0,0,0,2,4,0,0,0,0,6,53,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,162,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,174,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,177,                mant = val;,6,0,0,0,0,3,2,2,0,15,11,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,179,            dec = null;,2,0,0,0,0,0,0,0,0,3,11,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,181,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,0,6,0,0,7,35,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,182,            if (expPos > -1 && expPos < val.length() - 1) {,8,5,0,2,5,0,8,0,0,22,47,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,185,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,188,"            String numeric = val.substring(0, val.length() - 1);",0,0,0,2,4,0,0,0,0,6,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,189,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,5279,        return str == null ? EMPTY : str;,0,0,0,0,0,1,0,0,0,1,33,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,167,        super();,0,0,0,1,2,0,14,0,0,15,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,168,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,191,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,209,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,229,        if (str == null || (strLen = str.length()) == 0) {,6,4,0,3,7,0,4,0,0,15,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,230,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,232,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,234,                return false;,4,0,0,0,0,1,0,0,0,6,13,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,237,        return true;,12,4,0,0,0,8,4,10,0,38,12,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,257,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,282,        return str == null ? EMPTY : str.trim();,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,309,        return str == null ? null : str.trim();,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,335,        String ts = trim(str);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,336,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,8,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,361,        return str == null ? EMPTY : str.trim();,2,0,0,1,2,1,4,0,0,7,40,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,389,"        return strip(str, null);",0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,416,        if (str == null) {,2,0,0,1,3,2,4,2,0,10,18,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,417,            return null;,4,0,0,0,0,4,2,2,0,12,12,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,419,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,420,        return str.length() == 0 ? null : str;,2,0,0,1,2,1,0,0,0,2,38,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,446,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,476,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,477,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,479,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,480,"        return stripEnd(str, stripChars);",2,0,0,1,2,1,6,2,0,11,33,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,509,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,510,            return str;,4,0,0,0,0,1,6,2,0,12,11,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,512,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,513,        if (stripChars == null) {,12,2,0,1,3,0,10,0,0,26,25,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,514,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,515,                start++;,2,0,0,0,0,0,0,0,0,3,8,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,517,        } else if (stripChars.length() == 0) {,2,1,0,2,6,0,10,2,0,15,38,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,518,            return str;,2,0,0,0,0,1,0,2,0,6,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,520,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,6,3,0,5,11,0,10,0,0,20,76,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,521,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,524,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,553,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,554,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,557,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,558,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,4,9,0,0,0,0,13,67,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,559,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,561,        } else if (stripChars.length() == 0) {,10,1,0,2,6,0,0,0,0,12,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,562,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,564,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,4,4,0,5,11,0,14,0,0,23,71,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,565,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,568,"        return str.substring(0, end);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,593,"        return stripAll(strs, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,623,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,624,            return strs;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,626,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,8,0,0,8,38,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,627,        for (int i = 0; i < strsLen; i++) {,12,1,0,1,3,3,0,4,0,22,35,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,628,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,630,        return newArr;,14,2,0,0,0,7,4,0,0,29,14,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,656,        return str1 == null ? str2 == null : str1.equals(str2);,4,2,0,1,2,1,6,0,0,12,55,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,681,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,706,        if (isEmpty(str)) {,6,4,0,2,5,0,4,0,0,15,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,707,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,709,        return str.indexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,738,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,739,            return -1;,0,0,0,0,0,1,4,0,0,5,10,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,741,"        return str.indexOf(searchChar, startPos);",6,0,0,1,2,1,8,0,0,16,41,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,767,        if (str == null || searchStr == null) {,10,4,0,1,3,0,0,0,0,15,39,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,768,            return -1;,2,0,0,0,0,1,0,0,0,3,10,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,770,        return str.indexOf(searchStr);,0,0,0,1,2,1,6,0,0,6,30,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,801,        if (str == null || searchStr == null || ordinal <= 0) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,802,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,3,23,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,804,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,805,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,807,        int found = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,808,        int index = INDEX_NOT_FOUND;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,810,"            index = str.indexOf(searchStr, index + 1);",0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,811,            if (index < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,812,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,814,            found++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,815,        } while (found < ordinal);,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,816,        return index;,2,0,0,0,0,1,4,2,0,8,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,851,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,852,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,855,        if (searchStr.length() == 0 && startPos >= str.length()) {,0,0,0,3,7,0,6,0,0,6,58,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,856,            return str.length();,0,0,0,1,2,1,10,0,0,10,20,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,858,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,883,        if (isEmpty(str)) {,2,1,0,2,5,0,4,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,884,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,886,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,917,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,918,            return -1;,2,0,0,0,0,1,0,0,0,4,10,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,920,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,946,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,947,            return -1;,4,1,0,0,0,1,0,0,0,5,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,949,        return str.lastIndexOf(searchStr);,0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,981,        if (str == null || searchStr == null) {,6,3,0,1,3,0,0,0,0,9,39,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,982,            return -1;,2,0,0,0,0,4,2,2,0,11,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,984,"        return str.lastIndexOf(searchStr, startPos);",4,1,0,1,2,1,8,2,0,15,44,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1009,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1010,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1012,        return str.indexOf(searchChar) >= 0;,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1037,        if (str == null || searchStr == null) {,6,1,0,1,3,0,6,0,0,14,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1038,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,244,                            out.write('\\');,6,1,0,1,2,0,4,0,0,12,16,3,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,245,                        out.write('/');,2,0,1,1,2,0,14,2,0,23,15,3,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,246,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,86,"        return escapeJavaStyleString(str, false);",2,0,0,1,2,4,8,2,0,17,41,1,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,155,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,159,            StringWriter writer = new StringWriter(str.length() * 2);,2,1,0,2,4,0,4,4,0,11,57,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,160,"            escapeJavaStyleString(writer, str, escapeSingleQuotes);",0,0,0,1,2,0,0,0,0,3,55,4,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,161,            return writer.toString();,6,0,0,1,2,1,8,0,0,14,25,3,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,179,        if (out == null) {,6,1,0,1,3,3,2,2,0,16,18,1,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,182,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,186,        sz = str.length();,2,0,0,1,2,0,4,0,0,7,18,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,187,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,188,            char ch = str.charAt(i);,2,0,0,1,2,3,2,2,0,10,24,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,191,            if (ch > 0xfff) {,2,1,0,1,3,0,0,0,0,3,17,6,0.25,0,0,-1
