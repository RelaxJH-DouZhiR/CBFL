dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,395,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,408,        if (array == null) {,4,1,0,1,3,0,0,2,0,8,20,14,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,409,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,411,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,424,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,425,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,427,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,440,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,441,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,443,        return array.clone();,2,2,0,1,2,1,8,0,0,12,21,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,462,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,463,            return EMPTY_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,465,        return array;,2,0,0,0,0,1,0,0,0,3,13,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,482,        if (array == null || array.length == 0) {,12,4,0,1,3,0,0,0,0,17,41,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,483,            return EMPTY_STRING_ARRAY;,2,0,0,0,0,1,10,0,0,12,26,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,485,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,502,        if (array == null || array.length == 0) {,14,4,0,1,3,1,0,4,0,24,41,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,503,            return EMPTY_LONG_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,505,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,522,        if (array == null || array.length == 0) {,8,3,0,1,3,0,4,2,0,17,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,523,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,525,        return array;,2,0,0,0,0,1,0,0,0,3,13,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,542,        if (array == null || array.length == 0) {,6,3,0,1,3,0,10,0,0,19,41,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,543,            return EMPTY_SHORT_ARRAY;,2,1,0,0,0,1,16,0,0,24,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,545,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,562,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,563,            return EMPTY_CHAR_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,565,        return array;,4,0,0,0,0,1,0,0,0,4,13,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,582,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,583,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,4,0,0,7,24,11,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,585,        return array;,2,0,0,0,0,1,4,0,0,6,13,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,602,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,603,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,605,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,622,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,623,            return EMPTY_FLOAT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,625,        return array;,0,0,0,0,0,1,8,0,0,9,13,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,642,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,643,            return EMPTY_BOOLEAN_ARRAY;,20,2,0,0,0,1,6,0,0,32,27,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,645,        return array;,0,0,0,0,0,1,4,0,0,5,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,662,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,663,            return EMPTY_LONG_OBJECT_ARRAY;,0,0,0,0,0,1,4,0,0,4,31,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,665,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,682,        if (array == null || array.length == 0) {,2,1,0,1,3,0,4,4,0,11,41,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,683,            return EMPTY_INTEGER_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,685,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,702,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,703,            return EMPTY_SHORT_OBJECT_ARRAY;,4,0,0,0,0,1,4,0,0,8,32,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,705,        return array;,10,1,0,0,0,1,0,0,0,12,13,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,722,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,723,            return EMPTY_CHARACTER_OBJECT_ARRAY;,4,1,0,0,0,1,0,0,0,5,36,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,725,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,742,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,743,            return EMPTY_BYTE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,745,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,762,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,763,            return EMPTY_DOUBLE_OBJECT_ARRAY;,4,0,1,0,0,1,0,0,0,6,33,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,765,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,782,        if (array == null || array.length == 0) {,4,0,0,1,3,1,6,4,0,15,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,783,            return EMPTY_FLOAT_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,32,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,785,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,802,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,803,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,805,        return array;,2,1,0,0,0,1,0,0,0,4,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,838,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,839,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,841,        if (startIndexInclusive < 0) {,2,1,0,1,3,0,0,0,0,3,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,842,            startIndexInclusive = 0;,0,0,0,0,0,0,0,0,0,0,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,844,        if (endIndexExclusive > array.length) {,10,1,0,1,3,0,0,0,0,12,39,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,845,            endIndexExclusive = array.length;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,847,        int newSize = endIndexExclusive - startIndexInclusive;,0,0,0,0,0,0,0,0,0,0,54,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,848,        Class<?> type = array.getClass().getComponentType();,0,0,0,2,4,0,0,0,0,6,52,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,849,        if (newSize <= 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,851,"            final T[] emptyArray = (T[]) Array.newInstance(type, 0);",0,0,0,4,8,0,0,0,0,12,56,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,852,            return emptyArray;,4,1,1,0,0,1,8,0,0,21,18,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,855,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",0,0,0,4,8,0,0,0,0,12,54,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,856,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",8,1,0,1,2,0,16,0,0,27,67,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,857,        return subarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,880,        if (array == null) {,2,1,0,1,3,0,4,0,0,7,20,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,881,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,883,        if (startIndexInclusive < 0) {,10,1,0,1,3,0,0,0,0,12,30,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,884,            startIndexInclusive = 0;,4,0,0,0,0,3,0,6,0,14,24,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,886,        if (endIndexExclusive > array.length) {,6,1,0,1,3,0,0,0,0,7,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,887,            endIndexExclusive = array.length;,6,0,0,0,0,0,0,0,0,7,33,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,889,        int newSize = endIndexExclusive - startIndexInclusive;,6,1,0,0,0,0,0,0,0,7,54,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,890,        if (newSize <= 0) {,12,2,0,1,3,0,4,0,0,19,19,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1441,		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,14,0,0,17,53,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1444,		int csLength = cs.length();,0,0,0,1,2,0,0,0,0,3,27,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1445,		int searchLength = searchChars.length;,0,0,0,0,0,0,4,0,0,4,38,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1446,		for (int i = 0; i < csLength; i++) {,0,0,0,1,3,0,0,0,0,4,36,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1447,			char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1448,			for (int j = 0; j < searchLength; j++) {,0,0,0,1,3,0,0,0,0,4,40,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1449,				if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1452,						return true;,0,0,0,0,0,1,0,0,0,1,12,10,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1487,        if (searchChars == null) {,0,0,0,1,3,0,0,0,0,4,26,4,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1490,"        return containsAny(cs, searchChars.toCharArray());",4,0,0,2,4,1,14,4,0,22,50,1,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3279,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.30769,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3282,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.30769,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,194,        return cs == null || cs.length() == 0;,2,3,0,1,2,1,12,0,0,18,38,4,0.04396,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,4,1,0,2,4,3,0,4,0,12,64,1,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,4,0,0,2,4,3,0,0,0,7,61,1,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,0,0,2,4,3,2,0,0,9,58,1,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,0,0,2,4,0,0,0,0,2,58,5,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,170,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,171,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,212,        return !StringUtils.isEmpty(cs);,0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,232,        if (cs == null || (strLen = cs.length()) == 0) {,2,0,0,3,7,0,2,2,0,6,48,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,233,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,235,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,236,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,54,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,237,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,240,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,260,        return !StringUtils.isBlank(cs);,0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,289,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,315,        String ts = trim(str);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,316,        return isEmpty(ts) ? null : ts;,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,341,        return str == null ? EMPTY : str.trim();,2,0,0,1,2,4,0,0,0,5,40,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,369,"        return strip(str, null);",2,0,0,1,2,4,0,4,0,9,24,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,396,        if (str == null) {,4,1,0,1,3,3,0,0,0,8,18,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,397,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,399,"        str = strip(str, null);",2,0,0,1,2,0,4,0,0,8,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,400,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,426,"        return str == null ? EMPTY : strip(str, null);",4,1,0,1,2,4,2,0,0,11,46,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,456,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,457,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,459,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,460,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,489,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,490,            return str;,4,1,0,0,0,1,0,0,0,5,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,492,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,493,        if (stripChars == null) {,6,1,0,1,3,0,10,0,0,19,25,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,494,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,495,                start++;,2,0,0,0,0,0,0,0,0,3,8,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,497,        } else if (stripChars.length() == 0) {,0,1,0,2,6,0,4,0,0,5,38,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,498,            return str;,0,0,0,0,0,1,0,0,0,1,11,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,500,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND)) {,8,3,0,5,11,3,12,0,0,27,89,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,501,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,504,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,533,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,534,            return str;,6,1,0,0,0,1,0,0,0,7,11,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,537,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,538,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,4,9,0,0,0,0,13,67,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,539,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,541,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,542,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,544,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND)) {,0,0,0,5,11,0,0,0,0,16,84,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,545,                end--;,4,0,0,0,0,3,0,4,0,13,6,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,548,"        return str.substring(0, end);",2,1,0,1,2,1,4,0,0,7,29,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,573,"        return stripAll(strs, null);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,603,        if (strs == null || (strsLen = strs.length) == 0) {,8,3,0,2,5,0,0,0,0,12,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,604,            return strs;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,606,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,607,        for (int i = 0; i < strsLen; i++) {,10,1,0,1,3,0,4,2,0,18,35,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,608,"            newArr[i] = strip(strs[i], stripChars);",6,0,0,3,6,0,6,0,0,14,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,610,        return newArr;,4,0,0,0,0,1,4,0,0,8,14,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,630,        if(input == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,631,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,633,        if(SystemUtils.isJavaVersionAtLeast(1.6f)) {,2,0,0,2,5,0,0,0,0,2,44,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,640,"                Class<?> normalizerFormClass = ClassUtils.getClass(""java.text.Normalizer$Form"", false);",2,0,0,1,2,0,4,2,0,10,87,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,643,"                Class<?> normalizerClass = ClassUtils.getClass(""java.text.Normalizer"", false);",0,0,0,1,2,0,6,0,0,7,78,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,646,"                java.lang.reflect.Method method = normalizerClass.getMethod(""normalize"", CharSequence.class, normalizerFormClass );",6,3,0,1,2,0,4,0,0,14,115,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,649,"                java.lang.reflect.Field nfd = normalizerFormClass.getField(""NFD"");",10,0,0,1,2,0,4,0,0,15,66,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,652,"                String decomposed = (String) method.invoke( null, input, nfd.get(null) );",0,0,0,3,6,0,4,0,0,4,73,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,655,"                java.util.regex.Pattern accentPattern = java.util.regex.Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");",18,0,0,2,4,0,2,0,0,21,109,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,656,"                return accentPattern.matcher(decomposed).replaceAll("""");",0,0,0,2,4,1,0,0,0,7,56,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,657,            } catch(ClassNotFoundException cnfe) {,6,0,0,1,4,0,0,2,0,9,38,0,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,658,"                throw new RuntimeException(""ClassNotFoundException occurred during 1.6 backcompat code"", cnfe);",0,0,0,1,2,0,0,0,0,3,95,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,659,            } catch(NoSuchMethodException nsme) {,2,1,0,1,4,0,0,0,0,3,37,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,660,"                throw new RuntimeException(""NoSuchMethodException occurred during 1.6 backcompat code"", nsme);",6,0,0,1,2,1,0,4,0,12,94,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,661,            } catch(NoSuchFieldException nsfe) {,2,0,0,1,4,0,0,2,0,4,36,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,662,"                throw new RuntimeException(""NoSuchFieldException occurred during 1.6 backcompat code"", nsfe);",0,0,0,1,2,0,0,0,0,3,93,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,663,            } catch(IllegalAccessException iae) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,664,"                throw new RuntimeException(""IllegalAccessException occurred during 1.6 backcompat code"", iae);",0,0,0,1,2,0,0,0,0,3,94,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,665,            } catch(IllegalArgumentException iae) {,6,0,0,1,4,0,6,0,0,12,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,666,"                throw new RuntimeException(""IllegalArgumentException occurred during 1.6 backcompat code"", iae);",0,0,0,1,2,0,0,0,0,3,96,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,667,            } catch(java.lang.reflect.InvocationTargetException ite) {,4,2,0,1,4,0,6,0,0,12,58,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,668,"                throw new RuntimeException(""InvocationTargetException occurred during 1.6 backcompat code"", ite);",4,0,1,1,2,0,6,2,0,17,97,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,669,            } catch(SecurityException se) {,6,1,0,1,4,0,4,0,0,13,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,670,"                throw new RuntimeException(""SecurityException occurred during 1.6 backcompat code"", se);",0,0,0,1,2,0,0,0,0,3,88,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,673,"            throw new UnsupportedOperationException(""The stripAccents(String) method is not supported until Java 1.6"");",0,0,0,2,4,0,6,2,0,9,107,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,700,        return cs1 == null ? cs2 == null : cs1.equals(cs2);,8,3,0,1,2,1,12,2,0,25,51,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,725,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,6,2,0,1,2,1,0,0,0,9,65,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,750,        if (isEmpty(str)) {,4,0,0,2,5,0,0,0,0,4,19,11,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,751,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,753,        return str.indexOf(searchChar);,0,0,0,1,2,1,6,0,0,6,31,11,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,782,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,783,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,10,0,0,13,23,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,785,"        return str.indexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,812,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,813,            return INDEX_NOT_FOUND;,8,3,0,0,0,1,12,0,0,24,23,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,815,        return str.indexOf(searchStr);,0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,851,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,852,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,854,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,891,"        return ordinalIndexOf(str, searchStr, ordinal, false);",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,909,        if (str == null || searchStr == null || ordinal <= 0) {,6,1,0,1,3,0,0,0,0,7,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,910,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,912,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,913,            return lastIndex ? str.length() : 0;,2,0,0,1,2,4,2,2,0,10,36,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,915,        int found = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,916,        int index = lastIndex ? str.length() : INDEX_NOT_FOUND;,0,0,0,1,2,0,8,0,0,8,55,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,918,            if(lastIndex) {,2,0,0,1,3,0,6,0,0,9,15,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,919,"                index = str.lastIndexOf(searchStr, index - 1);",0,0,0,1,2,0,0,0,0,3,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,921,"                index = str.indexOf(searchStr, index + 1);",0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,923,            if (index < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,924,                return index;,8,1,0,0,0,4,2,0,0,16,13,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,926,            found++;,0,1,0,0,0,0,6,0,0,7,8,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,927,        } while (found < ordinal);,2,0,1,1,3,0,0,2,0,8,26,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,928,        return index;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,956,"        return indexOfIgnoreCase(str, searchStr, 0);",0,0,0,1,2,1,0,0,0,1,44,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,991,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,992,            return INDEX_NOT_FOUND;,2,0,0,0,0,4,2,2,0,10,23,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,994,        if (startPos < 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,995,            startPos = 0;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,997,        int endLimit = (str.length() - searchStr.length()) + 1;,0,0,0,3,6,0,0,0,0,9,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,998,        if (startPos > endLimit) {,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,999,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1001,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1002,            return startPos;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1004,        for (int i = startPos; i < endLimit; i++) {,0,0,0,1,3,0,0,0,0,4,43,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1005,"            if (str.regionMatches(true, i, searchStr, 0, searchStr.length())) {",0,0,0,3,7,0,0,0,0,10,67,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1006,                return i;,4,0,1,0,0,1,2,0,0,11,9,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1009,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1034,        if (isEmpty(str)) {,2,0,0,2,5,3,6,2,0,13,19,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1035,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1037,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1068,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1069,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1071,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1097,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1098,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1100,        return str.lastIndexOf(searchStr);,0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1137,"        return ordinalIndexOf(str, searchStr, ordinal, true);",2,2,0,1,2,1,16,4,0,26,53,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1169,        if (str == null || searchStr == null) {,2,1,0,1,3,0,0,0,0,3,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1170,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1172,"        return str.lastIndexOf(searchStr, startPos);",0,0,0,1,2,1,8,0,0,8,44,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1198,        if (str == null || searchStr == null) {,14,4,0,1,3,0,0,0,0,19,39,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1199,            return INDEX_NOT_FOUND;,2,2,0,0,0,1,8,0,0,12,23,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1201,"        return lastIndexOfIgnoreCase(str, searchStr, str.length());",0,0,0,2,4,1,10,0,0,10,59,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1233,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1234,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1236,        if (startPos > (str.length() - searchStr.length())) {,0,0,0,4,9,0,0,0,0,13,53,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1237,            startPos = str.length() - searchStr.length();,2,1,0,2,4,0,8,0,0,12,45,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1239,        if (startPos < 0) {,4,0,0,1,3,0,8,0,0,13,19,0,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1240,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1242,        if (searchStr.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1243,            return startPos;,4,1,0,0,0,4,6,0,0,16,16,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1246,        for (int i = startPos; i >= 0; i--) {,8,1,0,1,3,0,0,0,0,10,37,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1247,"            if (str.regionMatches(true, i, searchStr, 0, searchStr.length())) {",0,0,0,3,7,0,12,0,0,13,67,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1248,                return i;,2,1,0,0,0,1,8,0,0,11,9,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1251,        return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1276,        if (isEmpty(str)) {,2,0,0,2,5,0,0,0,0,2,19,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1277,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1279,        return str.indexOf(searchChar) >= 0;,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1304,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1305,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1307,        return str.indexOf(searchStr) >= 0;,2,1,0,1,2,1,0,0,0,3,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1334,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1335,            return false;,2,0,1,0,0,1,8,2,0,16,13,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1337,        int len = searchStr.length();,2,1,0,1,2,0,0,0,0,3,29,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1338,        int max = str.length() - len;,6,1,0,1,2,0,6,0,0,13,29,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1339,        for (int i = 0; i <= max; i++) {,0,0,0,1,3,0,0,0,0,4,32,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1340,"            if (str.regionMatches(true, i, searchStr, 0, len)) {",0,0,0,2,5,0,10,0,0,11,52,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1341,                return true;,2,0,0,0,0,1,4,0,0,8,12,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1344,        return false;,2,0,0,0,0,1,0,0,0,4,13,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1372,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,4,4,0,3,7,0,10,0,0,18,53,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1373,            return INDEX_NOT_FOUND;,4,1,0,0,0,1,8,0,0,14,23,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1375,        for (int i = 0; i < cs.length(); i++) {,6,1,0,2,5,0,4,0,0,12,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1376,            char ch = cs.charAt(i);,2,0,0,1,2,0,6,2,0,12,23,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,400,"        return reflectionHashCode(17, 37, object, false, null, null);",0,0,0,1,2,1,0,0,0,4,61,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,107,            return new HashSet<IDKey>();,0,0,0,1,2,1,0,0,0,4,28,4,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,137,        return REGISTRY.get();,0,0,0,1,2,1,0,0,0,4,22,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,152,        return getRegistry().contains(new IDKey(value));,2,0,0,3,6,1,4,2,0,8,48,5,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,173,        if (isRegistered(object)) {,2,0,0,2,5,0,10,0,0,13,27,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,177,            register(object);,0,0,0,1,2,0,4,0,0,4,17,7,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,178,            Field[] fields = clazz.getDeclaredFields();,0,0,0,2,4,0,0,0,0,6,43,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,179,"            AccessibleObject.setAccessible(fields, true);",0,0,0,1,2,0,6,0,0,7,45,7,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,180,            for (Field field : fields) {,4,0,0,1,3,0,0,2,0,6,28,6,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,181,"                if (!ArrayUtils.contains(excludeFields, field.getName())",0,0,0,2,5,0,10,0,0,11,56,11,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,186,                        Object fieldValue = field.get(object);,0,0,0,1,2,0,0,0,0,3,38,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,187,                        builder.append(fieldValue);,0,0,0,1,2,0,0,0,0,3,27,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,192,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,196,            unregister(object);,6,2,0,1,2,0,4,0,0,12,19,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,197,        },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,198,    },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,360,        Class<?> clazz = object.getClass();,4,0,0,1,2,3,8,4,0,19,35,1,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,361,"        reflectionAppend(object, clazz, builder, testTransients, excludeFields);",0,0,0,1,2,0,12,0,0,12,72,5,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,362,        while (clazz.getSuperclass() != null && clazz != reflectUpToClass) {,4,3,0,2,5,0,4,0,0,11,68,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,363,            clazz = clazz.getSuperclass();,0,0,0,1,2,0,0,0,0,3,30,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,364,"            reflectionAppend(object, clazz, builder, testTransients, excludeFields);",0,0,0,1,2,0,12,0,0,12,72,7,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,366,        return builder.toHashCode();,2,0,1,1,2,1,8,0,0,14,28,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,522,        getRegistry().add(new IDKey(value));,6,0,0,3,6,0,8,4,0,18,36,1,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,523,    },2,1,0,0,1,0,0,0,0,3,1,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,538,        getRegistry().remove(new IDKey(value));,2,0,0,3,6,0,4,2,0,8,39,5,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,539,    },4,0,0,0,1,1,0,2,0,7,1,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,40,        public IDKey(Object _value) {,4,0,0,1,3,1,0,2,0,7,29,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,42,            id = System.identityHashCode(_value);  ,0,0,0,1,2,0,0,0,0,3,37,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,46,            value = _value;,8,0,0,0,0,0,10,0,0,21,15,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,47,        },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,55,           return id;,2,0,0,0,0,1,0,0,0,2,10,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,65,            if (!(other instanceof IDKey)) {,4,2,0,2,5,1,4,4,0,15,32,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,68,            IDKey idKey = (IDKey) other;,4,0,0,1,2,0,0,4,0,8,28,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,69,            if (id != idKey.id) {,6,1,0,1,3,0,0,0,0,7,21,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,73,            return value == idKey.value;,6,1,0,0,0,1,0,0,0,7,28,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,4,0,0,2,4,4,4,4,0,17,65,1,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,2,0,2,4,0,10,0,0,16,58,6,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,0,0,0,0,3,65,8,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,6,0,0,12,64,1,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1627,"        return indexOf(array, objectToFind, 0);",0,0,0,1,2,1,0,0,0,4,39,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1645,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1646,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1730,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",6,5,0,1,2,1,16,0,0,28,55,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,359,"        HashCodeBuilder builder = new HashCodeBuilder(initialNonZeroOddNumber, multiplierNonZeroOddNumber);",6,0,0,1,2,0,0,4,0,10,99,4,0.09091,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,356,        if (object == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.08333,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,883,                iTotal = iTotal * iConstant + object.hashCode();,6,2,0,1,2,0,4,0,0,13,48,8,0.08333,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,855,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,859,            if(object.getClass().isArray()) {,2,0,0,3,7,0,0,2,0,4,33,6,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,886,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,585,        if (multiplierNonZeroOddNumber == 0) {,2,1,0,1,3,0,0,0,0,3,38,4,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,588,        if (multiplierNonZeroOddNumber % 2 == 0) {,2,2,0,1,3,0,0,0,0,4,42,4,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,591,        iConstant = multiplierNonZeroOddNumber;,14,1,0,0,0,0,0,0,0,17,39,3,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,592,        iTotal = initialNonZeroOddNumber;,0,0,0,0,0,0,0,0,0,0,33,4,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,593,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,966,        return iTotal;,0,0,0,0,0,1,0,0,0,1,14,4,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,582,        if (initialNonZeroOddNumber % 2 == 0) {,2,2,0,1,3,0,0,0,0,4,39,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,549,    private int iTotal = 0;,0,0,0,0,0,0,0,0,0,0,23,4,0.02326,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,578,"    public HashCodeBuilder(int initialNonZeroOddNumber, int multiplierNonZeroOddNumber) {",12,1,0,1,3,4,4,2,0,24,85,1,0.02326,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,579,        if (initialNonZeroOddNumber == 0) {,2,1,0,1,3,0,0,0,0,3,35,4,0.02326,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,104,    private static final ThreadLocal<Set<IDKey>> REGISTRY = new ThreadLocal<Set<IDKey>>() {,2,0,0,1,3,3,0,12,0,17,87,2,0.02273,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,104,    private static final ThreadLocal<Set<IDKey>> REGISTRY = new ThreadLocal<Set<IDKey>>() {,2,0,0,1,3,3,0,12,0,17,87,2,0.02273,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,556,    public HashCodeBuilder() {,6,2,0,1,3,0,14,2,0,25,26,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,557,        iConstant = 37;,2,0,0,0,0,0,0,0,0,3,15,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,558,        iTotal = 17;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,559,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,580,"            throw new IllegalArgumentException(""HashCodeBuilder requires a non zero initial value"");",0,0,0,1,2,0,0,0,0,3,88,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,583,"            throw new IllegalArgumentException(""HashCodeBuilder requires an odd initial value"");",0,0,0,1,2,0,0,2,0,3,84,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,586,"            throw new IllegalArgumentException(""HashCodeBuilder requires a non zero multiplier"");",2,0,0,1,2,0,0,4,0,7,85,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,589,"            throw new IllegalArgumentException(""HashCodeBuilder requires an odd multiplier"");",0,0,0,1,2,0,0,2,0,3,81,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,174,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,188,                    } catch (IllegalAccessException e) {,2,0,0,1,4,0,0,2,0,4,36,12,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,191,"                        throw new InternalError(""Unexpected IllegalAccessException"");",2,0,0,1,2,0,0,2,0,5,61,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,238,"        return reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, false, null, null);",0,0,0,1,2,1,0,0,0,4,106,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,282,"        return reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, testTransients, null,",0,0,0,0,1,1,0,0,0,2,108,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,304,"        return reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, testTransients,",0,0,0,0,1,1,10,0,0,10,102,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,357,"            throw new IllegalArgumentException(""The object to build a hash code for must not be null"");",2,0,0,1,2,3,4,4,0,15,91,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,436,"        return reflectionHashCode(17, 37, object, testTransients, null, null);",0,0,0,1,2,1,6,0,0,7,70,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,472,"        return reflectionHashCode(object, ReflectionToStringBuilder.toNoNullStringArray(excludeFields));",0,0,0,2,4,1,0,0,0,7,96,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,510,"        return reflectionHashCode(17, 37, object, false, null, excludeFields);",4,2,0,1,2,1,16,0,0,24,70,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,610,        iTotal = iTotal * iConstant + (value ? 0 : 1);,0,0,0,1,2,0,0,0,0,3,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,611,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,624,        if (array == null) {,2,1,0,1,3,0,4,0,0,7,20,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,625,            iTotal = iTotal * iConstant;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,627,            for (int i = 0; i < array.length; i++) {,12,2,0,1,3,0,4,0,0,19,40,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,628,                append(array[i]);,4,0,0,2,4,3,10,4,0,22,17,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,631,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,646,        iTotal = iTotal * iConstant + value;,8,2,0,0,0,0,0,0,0,11,36,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,647,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,662,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,663,            iTotal = iTotal * iConstant;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,665,            for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,666,                append(array[i]);,0,0,1,2,4,0,2,0,0,6,17,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,669,        return this;,6,0,0,0,0,4,0,4,0,13,12,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,682,        iTotal = iTotal * iConstant + value;,8,2,0,0,0,0,0,0,0,11,36,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,683,        return this;,6,0,0,0,0,1,10,2,0,19,12,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,4,0,0,2,4,0,6,0,0,10,68,5,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,2,0,0,2,4,3,0,4,0,9,71,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,4,0,0,2,4,6,0,0,0,10,67,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,1,0,2,4,0,0,0,0,3,58,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,4,0,0,1,2,6,6,2,0,18,86,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,2,0,0,1,2,3,6,2,0,13,94,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",4,0,0,1,2,0,4,2,0,10,53,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",6,0,0,1,2,3,6,4,0,20,47,1,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",4,0,0,1,2,0,4,2,0,10,57,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",0,0,0,1,2,0,0,0,0,3,53,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",6,0,0,1,2,3,6,4,0,20,47,1,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",4,0,0,1,2,0,4,2,0,10,51,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",10,0,0,1,2,3,8,2,0,24,46,1,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",6,0,0,1,2,3,6,12,0,27,101,1,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,91,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,2,2,0,2,5,0,6,0,0,12,62,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,92,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,2,0,0,1,2,0,6,2,0,10,64,6,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,93,            if (!primitiveClass.equals(wrapperClass)) {,0,0,0,2,5,0,0,0,0,7,43,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,94,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,1,2,0,8,0,0,8,54,9,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,96,        },2,0,0,0,1,0,0,2,0,4,1,6,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,102,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",4,0,0,1,2,6,2,12,0,25,89,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,107,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",2,0,0,1,2,3,0,12,0,17,96,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,124,"        addAbbreviation(""int"", ""I"");",0,0,0,1,2,0,0,0,0,3,28,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,125,"        addAbbreviation(""boolean"", ""Z"");",0,0,0,1,2,0,2,0,0,4,32,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,126,"        addAbbreviation(""float"", ""F"");",0,0,0,1,2,0,2,0,0,4,30,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,127,"        addAbbreviation(""long"", ""J"");",0,0,0,1,2,0,0,0,0,3,29,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,128,"        addAbbreviation(""short"", ""S"");",0,0,0,1,2,0,0,0,0,3,30,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,129,"        addAbbreviation(""byte"", ""B"");",0,0,0,1,2,0,2,0,0,4,29,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,130,"        addAbbreviation(""double"", ""D"");",0,0,0,1,2,0,2,0,0,4,31,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,131,"        addAbbreviation(""char"", ""C"");",0,0,0,1,2,0,2,0,0,4,29,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,132,    },2,0,0,0,1,3,4,2,0,12,1,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,116,"        abbreviationMap.put(primitive, abbreviation);",0,0,0,1,2,0,8,0,0,8,45,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,117,"        reverseAbbreviationMap.put(abbreviation, primitive);",0,0,0,1,2,0,0,0,0,3,52,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,118,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,143,      super();,2,1,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,144,    },2,0,0,0,1,3,0,4,0,10,1,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,156,        if (object == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,157,            return valueIfNull;,4,0,0,0,0,4,2,0,0,10,19,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,159,        return getShortClassName(object.getClass());,6,2,0,2,4,4,4,4,0,20,44,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,169,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,170,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,172,        return getShortClassName(cls.getName());,6,3,0,2,4,3,20,0,0,33,40,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,184,        if (className == null) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,185,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,187,        if (className.length() == 0) {,2,1,0,2,5,3,6,0,0,13,30,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,188,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,5,25,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,191,        StringBuilder arrayPrefix = new StringBuilder();,2,0,0,1,2,0,4,4,0,10,48,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,194,"        if (className.startsWith(""["")) {",0,0,0,2,6,0,4,0,0,5,32,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,195,            while (className.charAt(0) == '[') {,0,1,0,2,6,0,4,0,0,6,36,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,196,                className = className.substring(1);,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,197,"                arrayPrefix.append(""[]"");",0,0,0,2,4,0,0,0,0,6,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,200,            if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {,0,0,0,4,9,0,0,0,0,13,84,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,201,"                className = className.substring(1, className.length() - 1);",0,0,0,2,4,0,0,0,0,6,59,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,205,        if (reverseAbbreviationMap.containsKey(className)) {,0,0,0,2,5,0,0,0,0,7,52,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,206,            className = reverseAbbreviationMap.get(className);,6,1,0,1,2,0,10,0,0,19,50,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,209,        int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,210,        int innerIdx = className.indexOf(,2,1,0,0,1,0,0,0,0,3,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,212,        String out = className.substring(lastDotIdx + 1);,0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,213,        if (innerIdx != -1) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,214,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,216,        return out + arrayPrefix;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,229,        if (object == null) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0,-1
