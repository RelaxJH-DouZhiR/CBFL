dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,462,                pfxLen += pfx.length();,2,0,0,1,2,0,4,0,0,7,23,8,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,463,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,467,            final int hexDigits = str.length() - pfxLen;,6,2,0,1,2,1,4,0,0,13,44,4,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,468,            if (hexDigits > 16) { // too many for Long,2,1,0,1,3,0,0,0,0,3,42,6,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,471,            if (hexDigits > 8) { // too many for an int,4,2,0,1,3,0,0,0,0,6,43,4,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,474,            return createInteger(str);,2,0,0,1,2,1,4,0,0,7,26,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,680,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,684,        return Integer.decode(str);,0,0,0,1,2,1,6,0,0,6,27,5,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,451,        if (str == null) {,4,1,0,1,3,0,0,0,0,5,18,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,454,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,458,"        final String[] hex_prefixes = {""0x"", ""0X"", ""-0x"", ""-0X"", ""#"", ""-#""};",2,0,0,2,4,1,0,2,0,11,68,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,459,        int pfxLen = 0;,2,0,0,0,0,0,0,0,0,2,15,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,460,        for(final String pfx : hex_prefixes) {,4,0,0,1,3,1,0,2,0,7,38,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,461,            if (str.startsWith(pfx)) {,0,0,0,2,5,0,6,0,0,6,26,7,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,466,        if (pfxLen > 0) { // we have a hex number,2,1,0,1,3,0,0,0,0,3,41,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,257,        if (cs == null || (strLen = cs.length()) == 0) {,6,2,0,3,7,0,4,0,0,13,48,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,260,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,261,            if (Character.isWhitespace(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,52,6,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,262,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,181,"    private static final Pattern WHITESPACE_PATTERN = Pattern.compile(""(?: \\s|[\\s&&[^ ]])\\s*"");",8,0,0,4,8,6,8,8,0,32,94,1,0.09091,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,34,    public static final Long LONG_ZERO = Long.valueOf(0L);,2,0,0,1,2,3,4,2,0,11,54,2,0.01149,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,36,    public static final Long LONG_ONE = Long.valueOf(1L);,2,0,0,1,2,3,4,2,0,11,53,2,0.01149,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,38,    public static final Long LONG_MINUS_ONE = Long.valueOf(-1L);,2,0,0,1,2,3,4,2,0,12,60,2,0.01149,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,40,    public static final Integer INTEGER_ZERO = Integer.valueOf(0);,8,0,0,1,2,6,6,4,0,26,62,1,0.01149,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,42,    public static final Integer INTEGER_ONE = Integer.valueOf(1);,0,0,0,1,2,0,0,0,0,3,61,4,0.01149,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,44,    public static final Integer INTEGER_MINUS_ONE = Integer.valueOf(-1);,4,0,0,1,2,0,0,0,0,5,68,5,0.01149,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,46,    public static final Short SHORT_ZERO = Short.valueOf((short) 0);,2,0,0,2,4,3,4,2,0,11,64,2,0.01149,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,48,    public static final Short SHORT_ONE = Short.valueOf((short) 1);,6,0,0,2,4,3,4,2,0,16,63,1,0.01149,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,50,    public static final Short SHORT_MINUS_ONE = Short.valueOf((short) -1);,2,0,0,2,4,3,4,2,0,12,70,2,0.01149,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,52,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,2,0,0,2,4,3,4,2,0,11,60,2,0.01149,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,54,    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);,2,0,0,2,4,3,4,2,0,11,59,2,0.01149,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,56,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,2,0,0,2,4,3,4,2,0,12,66,2,0.01149,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,58,    public static final Double DOUBLE_ZERO = Double.valueOf(0.0d);,0,0,0,1,2,0,0,0,0,3,62,4,0.01149,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,60,    public static final Double DOUBLE_ONE = Double.valueOf(1.0d);,6,1,0,1,2,3,10,6,0,26,61,1,0.01149,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,62,    public static final Double DOUBLE_MINUS_ONE = Double.valueOf(-1.0d);,2,0,0,1,2,3,4,2,0,12,68,2,0.01149,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,64,    public static final Float FLOAT_ZERO = Float.valueOf(0.0f);,2,0,0,1,2,3,4,2,0,11,59,2,0.01149,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,66,    public static final Float FLOAT_ONE = Float.valueOf(1.0f);,0,0,0,1,2,0,0,0,0,3,58,4,0.01149,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,1,68,    public static final Float FLOAT_MINUS_ONE = Float.valueOf(-1.0f);,2,0,0,1,2,3,4,2,0,12,65,2,0.01149,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,192,        super();,2,1,0,1,2,0,8,0,0,13,8,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,193,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,217,        return cs == null || cs.length() == 0;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,236,        return !StringUtils.isEmpty(cs);,0,0,0,1,2,1,6,0,0,7,32,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,258,            return true;,0,0,0,0,0,1,0,0,0,2,12,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,265,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,286,        return !StringUtils.isBlank(cs);,0,0,0,1,2,1,6,0,0,7,32,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,315,        return str == null ? null : str.trim();,6,3,0,1,2,1,14,0,0,23,39,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,341,        final String ts = trim(str);,4,0,0,1,2,1,4,2,0,12,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,342,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,7,31,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,367,        return str == null ? EMPTY : str.trim();,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,395,"        return strip(str, null);",2,0,0,1,2,4,4,2,0,12,24,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,422,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,423,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,425,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,426,        return str.isEmpty() ? null : str;,0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,452,"        return str == null ? EMPTY : strip(str, null);",4,1,0,1,2,1,4,0,0,10,46,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,482,        if (isEmpty(str)) {,2,0,0,2,5,3,4,4,0,13,19,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,483,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,485,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,486,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,6,2,0,10,33,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,515,        if (str == null || (strLen = str.length()) == 0) {,8,6,0,3,7,3,12,2,0,32,50,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,516,            return str;,0,1,0,0,0,1,16,0,0,18,11,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,518,        int start = 0;,8,1,0,0,0,0,12,0,0,22,14,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,519,        if (stripChars == null) {,0,1,0,1,3,0,10,0,0,12,25,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,520,            while (start != strLen && Character.isWhitespace(str.charAt(start))) {,0,0,0,3,7,0,0,0,0,10,70,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,521,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,523,        } else if (stripChars.isEmpty()) {,0,0,0,2,6,0,4,0,0,4,34,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,524,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,526,            while (start != strLen && stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND) {,6,3,0,3,7,0,10,0,0,19,85,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,527,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,530,        return str.substring(start);,0,0,0,1,2,1,6,0,0,6,28,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,560,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,561,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,564,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,565,            while (end != 0 && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,3,7,0,0,0,0,10,65,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,566,                end--;,2,1,0,0,0,0,0,0,0,3,6,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,568,        } else if (stripChars.isEmpty()) {,2,0,0,2,6,0,4,0,0,6,34,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,569,            return str;,0,0,0,0,0,1,6,0,0,6,11,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,571,            while (end != 0 && stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND) {,0,0,0,3,7,0,0,0,0,10,80,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,572,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,575,"        return str.substring(0, end);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,600,"        return stripAll(strs, null);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,630,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,631,            return strs;,2,0,0,0,0,1,10,0,0,13,12,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,633,        final String[] newArr = new String[strsLen];,2,0,1,2,4,1,0,4,0,9,44,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,634,        for (int i = 0; i < strsLen; i++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,635,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,637,        return newArr;,2,0,0,0,0,4,0,12,0,17,14,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,659,        if(input == null) {,2,0,0,1,3,0,4,0,0,6,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,660,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,662,"        final Pattern pattern = Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");//$NON-NLS-1$",2,2,0,2,4,0,4,0,0,10,90,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,663,"        final String decomposed = Normalizer.normalize(input, Normalizer.Form.NFD);",10,3,0,1,2,1,10,2,0,26,75,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,665,"        return pattern.matcher(decomposed).replaceAll("""");//$NON-NLS-1$",0,0,0,2,4,1,0,0,0,7,63,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,692,        if (cs1 == cs2) {,8,1,0,1,3,3,8,2,0,23,17,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,693,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,695,        if (cs1 == null || cs2 == null) {,0,0,0,1,3,0,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,696,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,698,        if (cs1 instanceof String && cs2 instanceof String) {,0,0,0,1,3,0,0,0,0,4,53,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,699,            return cs1.equals(cs2);,0,0,0,1,2,1,6,0,0,6,23,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,701,"        return CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, Math.max(cs1.length(), cs2.length()));",0,0,0,4,8,1,20,0,0,21,100,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,726,        if (str1 == null || str2 == null) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,727,            return str1 == str2;,4,1,0,0,0,1,0,0,0,5,20,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,728,        } else if (str1 == str2) {,0,0,0,1,4,0,0,0,0,5,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,729,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,730,        } else if (str1.length() != str2.length()) {,0,0,0,3,8,0,0,0,0,11,44,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,731,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,733,"            return CharSequenceUtils.regionMatches(str1, true, 0, str2, 0, str1.length());",0,0,0,2,4,1,0,0,0,7,78,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,760,        if (isEmpty(seq)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,761,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,763,"        return CharSequenceUtils.indexOf(seq, searchChar, 0);",0,0,0,1,2,1,0,0,0,4,53,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,793,        if (isEmpty(seq)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,794,            return INDEX_NOT_FOUND;,4,1,0,0,0,1,0,0,0,6,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,796,"        return CharSequenceUtils.indexOf(seq, searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,60,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,824,        if (seq == null || searchSeq == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,825,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,827,"        return CharSequenceUtils.indexOf(seq, searchSeq, 0);",0,0,0,1,2,1,0,0,0,4,52,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,864,        if (seq == null || searchSeq == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,865,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,867,"        return CharSequenceUtils.indexOf(seq, searchSeq, startPos);",0,0,0,1,2,1,0,0,0,4,59,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,905,"        return ordinalIndexOf(str, searchStr, ordinal, false);",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,923,        if (str == null || searchStr == null || ordinal <= 0) {,2,0,0,1,3,0,0,2,0,4,55,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,924,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,2,0,4,23,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,926,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,927,            return lastIndex ? str.length() : 0;,4,1,0,1,2,1,8,0,0,14,36,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,929,        int found = 0;,2,0,0,0,0,2,0,0,0,4,14,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,930,        int index = lastIndex ? str.length() : INDEX_NOT_FOUND;,0,0,0,1,2,0,0,0,0,3,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,932,            if (lastIndex) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,933,"                index = CharSequenceUtils.lastIndexOf(str, searchStr, index - 1);",4,1,0,1,2,0,14,0,0,20,65,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,935,"                index = CharSequenceUtils.indexOf(str, searchStr, index + 1);",0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,937,            if (index < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,938,                return index;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,940,            found++;,0,0,0,0,0,0,0,2,0,2,8,11,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,941,        } while (found < ordinal);,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,942,        return index;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,971,"        return indexOfIgnoreCase(str, searchStr, 0);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,1007,        if (str == null || searchStr == null) {,2,0,0,1,3,0,0,2,0,4,39,11,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,1008,            return INDEX_NOT_FOUND;,4,2,0,0,0,1,6,0,0,12,23,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,1010,        if (startPos < 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,1011,            startPos = 0;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,1,1013,        final int endLimit = str.length() - searchStr.length() + 1;,0,0,0,2,4,0,0,0,0,6,59,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,494,                dec = str.substring(decPos + 1);,6,2,0,1,2,0,4,2,0,16,32,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,573,            exp = null;,0,0,0,0,0,0,0,0,0,0,11,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,594,                if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,65,4,0.33333,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,595,                    return f;,2,0,0,0,0,1,0,0,0,2,9,8,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,492,"                dec = str.substring(decPos + 1, expPos);",0,0,0,1,2,0,0,0,0,3,40,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,496,"            mant = str.substring(0, decPos);",0,0,0,1,2,0,0,0,0,3,32,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,497,            numDecimals = dec.length(); // gets number of digits past the decimal to ensure no loss of precision for floating point numbers.,0,0,0,1,2,0,0,0,0,3,128,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,570,        if (expPos > -1 && expPos < str.length() - 1) {,6,4,0,2,5,3,4,4,0,22,47,1,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,571,"            exp = str.substring(expPos + 1, str.length());",4,1,0,2,4,0,8,0,0,14,46,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,575,        if (dec == null && exp == null) { // no decimal point and no exponent,4,3,0,1,3,0,0,0,0,7,69,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,591,        final boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,1,8,0,0,12,61,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,593,                final Float f = createFloat(str);,4,0,0,1,2,0,0,0,0,5,33,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,488,            if (expPos > -1) { // there is an exponent,2,1,0,1,3,0,0,0,0,4,42,6,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,489,                if (expPos < decPos || expPos > str.length()) { // prevents double exponent causing IOOBE,0,0,0,2,5,0,0,0,0,7,89,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,509,        if (!Character.isDigit(lastChar) && lastChar != '.') {,2,2,0,2,5,0,6,0,0,12,54,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,621,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,624,        for (int i = str.length() - 1; i >= 0; i--) {,0,0,0,2,5,0,0,0,0,7,45,4,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,625,            if (str.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,27,6,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,626,                return false;,2,1,0,0,0,1,0,0,0,4,13,6,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,643,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,646,        return Float.valueOf(str);,0,0,0,1,2,1,6,0,0,6,26,5,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,451,        if (str == null) {,0,0,0,1,3,0,6,0,0,6,18,5,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,454,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,458,"        final String[] hex_prefixes = {""0x"", ""0X"", ""-0x"", ""-0X"", ""#"", ""-#""};",2,0,0,2,4,1,0,2,0,11,68,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,459,        int pfxLen = 0;,4,0,0,0,0,0,0,0,0,5,15,1,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,460,        for(final String pfx : hex_prefixes) {,0,0,0,1,3,0,0,0,0,4,38,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,461,            if (str.startsWith(pfx)) {,0,0,0,2,5,0,6,0,0,6,26,7,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,466,        if (pfxLen > 0) { // we have a hex number,2,1,0,1,3,0,0,0,0,3,41,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,476,        final char lastChar = str.charAt(str.length() - 1);,2,1,0,2,4,1,8,0,0,12,51,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,480,        final int decPos = str.indexOf('.');,0,0,0,1,2,0,0,0,0,3,36,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,481,        final int expPos = str.indexOf('e') + str.indexOf('E') + 1; // assumes both not present,0,0,0,2,4,0,0,0,0,6,87,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,485,        int numDecimals = 0; // Check required precision (LANG-693),8,0,0,1,2,0,8,0,0,17,59,3,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,486,        if (decPos > -1) { // there is a decimal point,2,0,0,1,3,3,0,0,0,5,46,2,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,3,257,        if (cs == null || (strLen = cs.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,48,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,3,260,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,3,261,            if (Character.isWhitespace(cs.charAt(i)) == false) {,0,0,0,3,7,0,0,0,0,10,52,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,3,262,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,3,181,"    private static final Pattern WHITESPACE_PATTERN = Pattern.compile(""(?: \\s|[\\s&&[^ ]])\\s*"");",0,0,0,4,8,0,0,0,0,12,94,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,34,    public static final Long LONG_ZERO = Long.valueOf(0L);,6,0,0,1,2,3,12,2,0,23,54,1,0.01163,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,36,    public static final Long LONG_ONE = Long.valueOf(1L);,2,0,0,1,2,3,4,2,0,11,53,2,0.01163,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,38,    public static final Long LONG_MINUS_ONE = Long.valueOf(-1L);,2,0,0,1,2,3,4,2,0,12,60,2,0.01163,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,40,    public static final Integer INTEGER_ZERO = Integer.valueOf(0);,2,0,0,1,2,3,4,2,0,11,62,2,0.01163,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,42,    public static final Integer INTEGER_ONE = Integer.valueOf(1);,2,0,0,1,2,3,4,2,0,11,61,2,0.01163,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,44,    public static final Integer INTEGER_MINUS_ONE = Integer.valueOf(-1);,8,3,0,1,2,3,2,0,0,18,68,1,0.01163,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,46,    public static final Short SHORT_ZERO = Short.valueOf((short) 0);,0,0,0,2,4,0,0,0,0,6,64,4,0.01163,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,48,    public static final Short SHORT_ONE = Short.valueOf((short) 1);,2,0,0,2,4,3,4,2,0,11,63,2,0.01163,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,50,    public static final Short SHORT_MINUS_ONE = Short.valueOf((short) -1);,0,0,0,2,4,0,0,0,0,6,70,4,0.01163,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,52,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,0,0,0,2,4,0,4,0,0,4,60,5,0.01163,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,54,    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);,0,0,0,2,4,0,0,0,0,6,59,4,0.01163,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,56,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,0,0,0,2,4,0,0,0,0,6,66,4,0.01163,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,58,    public static final Double DOUBLE_ZERO = Double.valueOf(0.0d);,2,0,0,1,2,3,4,2,0,11,62,2,0.01163,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,60,    public static final Double DOUBLE_ONE = Double.valueOf(1.0d);,0,0,0,1,2,0,0,0,0,3,61,4,0.01163,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,62,    public static final Double DOUBLE_MINUS_ONE = Double.valueOf(-1.0d);,0,0,0,1,2,0,0,0,0,3,68,4,0.01163,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,64,    public static final Float FLOAT_ZERO = Float.valueOf(0.0f);,4,1,0,1,2,3,4,2,0,14,59,1,0.01163,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,66,    public static final Float FLOAT_ONE = Float.valueOf(1.0f);,0,0,0,1,2,0,0,0,0,3,58,4,0.01163,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,68,    public static final Float FLOAT_MINUS_ONE = Float.valueOf(-1.0f);,0,0,0,1,2,0,6,0,0,6,65,5,0.01163,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,78,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,79,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,100,"        return toInt(str, 0);",0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,121,        if(str == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,122,            return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,125,            return Integer.parseInt(str);,0,0,0,1,2,1,6,0,0,6,29,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,126,        } catch (final NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,43,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,127,            return defaultValue;,2,0,0,0,0,4,4,0,0,10,20,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,149,"        return toLong(str, 0L);",0,0,0,1,2,1,4,0,0,4,23,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,170,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,171,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,174,            return Long.parseLong(str);,0,0,0,1,2,1,6,0,0,6,27,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,175,        } catch (final NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,43,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,176,            return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,199,"        return toFloat(str, 0.0f);",2,1,0,1,2,1,0,0,0,3,26,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,222,      if (str == null) {,0,1,0,1,3,0,4,0,0,5,18,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,223,          return defaultValue;,2,0,0,0,0,3,4,2,0,10,20,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,226,          return Float.parseFloat(str);,0,0,0,1,2,1,6,0,0,6,29,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,227,      } catch (final NumberFormatException nfe) {,2,0,0,1,4,1,0,2,0,5,43,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,228,          return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,251,"        return toDouble(str, 0.0d);",0,0,0,1,2,1,4,0,0,4,27,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,274,      if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,275,          return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,278,          return Double.parseDouble(str);,4,0,0,1,2,1,6,0,0,10,31,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,279,      } catch (final NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,43,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,280,          return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,303,"        return toByte(str, (byte) 0);",0,1,1,2,4,1,12,0,0,18,29,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,324,        if(str == null) {,4,1,0,1,3,0,4,0,0,9,17,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,325,            return defaultValue;,2,0,0,0,0,4,0,12,0,17,20,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,328,            return Byte.parseByte(str);,0,0,0,1,2,1,6,0,0,6,27,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,329,        } catch (final NumberFormatException nfe) {,2,0,1,1,4,0,0,0,0,5,43,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,330,            return defaultValue;,18,6,0,0,0,5,24,6,0,61,20,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,352,"        return toShort(str, (short) 0);",0,0,0,2,4,1,0,0,0,1,31,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,373,        if(str == null) {,2,1,0,1,3,0,6,0,0,10,17,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,374,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,377,            return Short.parseShort(str);,0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,378,        } catch (final NumberFormatException nfe) {,2,0,0,1,4,1,0,2,0,5,43,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,379,            return defaultValue;,2,0,0,0,0,1,0,0,0,3,20,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,452,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,455,"            throw new NumberFormatException(""A blank string is not a valid number"");",0,0,0,1,2,0,0,0,0,3,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,462,                pfxLen += pfx.length();,10,3,0,1,2,0,4,0,0,19,23,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,463,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,467,            final int hexDigits = str.length() - pfxLen;,0,0,0,1,2,0,0,0,0,3,44,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,468,            if (hexDigits > 16) { // too many for Long,4,1,0,1,3,0,0,8,0,13,42,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,469,                return createBigInteger(str);,0,0,0,1,2,1,4,0,0,4,29,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,471,            if (hexDigits > 8) { // too many for an int,0,0,0,1,3,0,0,0,0,4,43,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,472,                return createLong(str);,2,0,0,1,2,1,4,2,0,8,23,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,474,            return createInteger(str);,0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,490,"                    throw new NumberFormatException(str + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,499,            if (expPos > -1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,500,                if (expPos > str.length()) { // prevents double exponent causing IOOBE,0,0,0,2,5,0,0,0,0,7,70,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,501,"                    throw new NumberFormatException(str + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,503,"                mant = str.substring(0, expPos);",0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,505,                mant = str;,10,1,0,0,0,0,0,0,0,14,11,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,507,            dec = null;,2,0,1,0,0,0,0,0,0,7,11,10,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,510,            if (expPos > -1 && expPos < str.length() - 1) {,0,0,0,2,5,0,0,0,0,7,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,511,"                exp = str.substring(expPos + 1, str.length() - 1);",0,0,0,2,4,0,0,0,0,1,50,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,513,                exp = null;,0,0,0,0,0,0,0,2,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,516,"            final String numeric = str.substring(0, str.length() - 1);",2,1,0,2,4,1,8,2,0,14,58,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,517,            final boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,6,1,0,2,4,1,8,0,0,17,61,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,518,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,521,                    if (dec == null,2,1,0,0,1,0,0,0,0,3,15,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,525,                            return createLong(numeric);,0,0,0,1,2,1,4,2,0,8,27,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,526,                        } catch (final NumberFormatException nfe) { // NOPMD,0,0,0,1,4,0,8,0,0,8,52,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,529,                        return createBigInteger(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,532,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,536,                        final Float f = NumberUtils.createFloat(numeric);,14,2,0,1,2,0,0,2,0,19,49,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,537,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,540,                            return f;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,545,                    },2,0,0,0,1,0,0,0,0,4,1,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,543,                    } catch (final NumberFormatException nfe) { // NOPMD,4,0,0,1,4,4,2,4,0,15,52,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,550,                        final Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,1,6,2,0,11,51,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,551,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,4,1,0,5,11,0,0,0,0,5,65,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,552,                            return d;,4,1,0,0,0,1,0,0,0,5,9,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,556,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,554,                    } catch (final NumberFormatException nfe) { // NOPMD,0,0,0,1,4,0,0,0,0,5,52,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,558,                        return createBigDecimal(numeric);,8,1,0,1,2,1,8,0,0,19,33,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,559,                    } catch (final NumberFormatException e) { // NOPMD,0,0,0,1,4,0,0,0,0,5,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,564,"                    throw new NumberFormatException(str + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,578,                return createInteger(str);,0,0,0,1,2,1,6,0,0,6,26,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,579,            } catch (final NumberFormatException nfe) { // NOPMD,2,0,0,1,4,0,4,0,0,6,52,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,3,583,                return createLong(str);,0,0,0,1,2,1,0,0,0,4,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,76,"            final CharSequence subSeq = input.subSequence(index, index + i);",6,1,0,1,2,1,6,2,0,16,64,6,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,77,            final CharSequence result = lookupMap.get(subSeq);,2,0,0,1,2,1,6,2,0,11,50,6,0.04167,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,78,            if (result != null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,83,        return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,70,        int max = longest;,4,0,0,0,0,0,0,0,0,4,18,5,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,4,71,        if (index + longest > input.length()) {,4,2,0,2,5,0,4,0,0,10,39,4,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,99,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",0,0,0,1,2,0,0,0,0,3,68,4,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,89,        if (str == null) {,0,0,0,1,3,0,0,4,0,4,18,11,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,92,        final int len = str.length();,2,0,0,1,2,1,4,0,0,7,29,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,93,        if (len < 2) {,2,1,0,1,3,0,0,0,0,3,14,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,96,        final char ch0 = str.charAt(0);,2,0,0,1,2,1,4,0,0,7,31,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,97,            final char ch1 = str.charAt(1);,4,2,0,1,2,1,14,0,0,22,31,1,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/LocaleUtils,5,98,            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {,0,1,0,3,7,0,12,0,0,15,65,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,556,        return ESCAPE_CSV.translate(input);,0,0,0,1,2,1,6,0,0,6,35,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,156,            if(index != 0) {,2,1,0,1,3,0,0,0,0,3,16,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,160,"            if (StringUtils.containsNone(input.toString(), CSV_SEARCH_CHARS)) {",0,0,0,3,7,0,10,0,0,10,67,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,161,                out.write(input.toString());,0,0,0,2,4,0,8,0,0,8,28,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,167,            return input.length();,0,0,0,1,2,1,4,0,0,4,22,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1737,        if (cs == null || searchChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1740,        int csLen = cs.length();,14,1,0,1,2,3,4,4,0,27,24,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1741,        int csLast = csLen - 1;,4,1,0,0,0,0,0,0,0,5,23,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1742,        int searchLen = searchChars.length;,12,0,0,0,0,0,0,0,0,12,35,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1743,        int searchLast = searchLen - 1;,4,1,0,0,0,0,0,0,0,5,31,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1744,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1745,            char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1746,            for (int j = 0; j < searchLen; j++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1747,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,1763,        return true;,2,1,0,0,0,1,0,0,0,4,12,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,268,    static class CsvUnescaper extends CharSequenceTranslator {,2,0,0,0,1,1,0,2,0,5,58,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,272,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,2,0,0,1,2,3,6,2,0,13,70,3,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,273,        private static final char[] CSV_SEARCH_CHARS = ,8,3,0,1,2,3,4,0,0,18,46,1,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,108,        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];,6,1,0,2,4,0,0,4,0,11,87,4,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,109,        newArray[0] = this;,0,0,1,1,2,0,0,0,0,3,19,4,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,110,"        System.arraycopy(translators, 0, newArray, 1, translators.length);",0,0,0,1,2,0,0,0,0,3,66,4,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,111,        return new AggregateTranslator(newArray);,0,0,0,1,2,1,0,0,0,4,41,4,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,52,    public static final CharSequenceTranslator ESCAPE_JAVA = ,2,0,0,0,0,3,0,2,0,7,56,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,72,    public static final CharSequenceTranslator ESCAPE_ECMASCRIPT = ,2,0,0,0,0,3,0,2,0,7,62,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,94,    public static final CharSequenceTranslator ESCAPE_XML = ,0,0,0,0,0,0,0,0,0,0,55,4,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,109,    public static final CharSequenceTranslator ESCAPE_HTML3 = ,4,0,0,0,0,3,0,2,0,9,57,1,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,124,    public static final CharSequenceTranslator ESCAPE_HTML4 = ,2,0,0,0,0,3,0,2,0,7,57,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,140,    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();,2,0,0,1,2,3,0,4,0,9,73,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,183,    public static final CharSequenceTranslator UNESCAPE_JAVA = ,0,0,0,0,0,0,0,0,0,0,58,4,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,206,    public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;,4,0,0,0,0,3,0,2,0,9,79,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,217,    public static final CharSequenceTranslator UNESCAPE_HTML3 = ,0,0,0,0,0,0,0,0,0,0,59,4,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,233,    public static final CharSequenceTranslator UNESCAPE_HTML4 = ,2,0,0,0,0,3,0,2,0,7,59,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,250,    public static final CharSequenceTranslator UNESCAPE_XML = ,2,0,0,0,0,3,0,2,0,7,57,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,266,    public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();,2,0,0,1,2,3,0,4,0,9,77,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,40,    public AggregateTranslator(CharSequenceTranslator... translators) {,4,0,0,1,3,1,0,2,0,7,67,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,41,        this.translators = ArrayUtils.clone(translators);,2,0,0,1,2,0,6,0,0,9,49,4,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,42,    },0,0,0,0,1,0,0,0,0,1,1,4,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,145,    static class CsvEscaper extends CharSequenceTranslator {,4,0,0,0,1,4,0,6,0,15,56,1,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,149,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,0,0,0,1,2,0,0,0,0,3,70,4,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,150,        private static final char[] CSV_SEARCH_CHARS = ,6,0,0,1,2,6,2,2,0,16,46,1,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,320,        if (array == null) {,6,1,0,1,3,6,0,4,0,17,20,1,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,323,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,35,    private static final String[][] ISO8859_1_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,52,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,139,    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);,2,0,0,3,6,3,4,2,0,11,78,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,148,    private static final String[][] HTML40_EXTENDED_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,350,    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);,0,0,0,3,6,0,0,0,0,9,90,4,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,359,    private static final String[][] BASIC_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,48,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,371,    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);,2,0,0,3,6,3,4,2,0,11,70,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,378,    private static final String[][] APOS_ESCAPE = {,4,0,0,2,5,3,0,4,0,11,47,1,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,387,    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);,2,0,0,3,6,3,4,2,0,11,68,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,396,    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,409,    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);,4,0,0,3,6,3,4,4,0,16,90,1,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,34,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },0,0,0,5,10,1,0,0,0,16,80,4,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,138,    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); },8,3,0,5,10,3,4,2,0,19,84,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,147,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,92,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,349,    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,96,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,358,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,72,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,370,    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,76,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,377,    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,70,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,386,    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,74,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,395,    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,92,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,408,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,96,2,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,417,        String[][] newarray = new String[array.length][2];,18,3,0,4,8,0,6,8,0,36,50,3,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,418,        for(int i = 0; i<array.length; i++) {,0,0,0,1,3,0,0,0,0,4,37,4,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,419,            newarray[i][0] = array[i][1];,0,0,1,4,8,0,0,0,0,9,29,6,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,420,            newarray[i][1] = array[i][0];,0,0,0,4,8,0,6,0,0,6,29,5,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,6,422,        return newarray;,2,0,0,0,0,1,0,0,0,2,16,4,0.04167,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,40,    public LookupTranslator(CharSequence[]... lookup) {,2,0,0,2,5,0,20,0,0,23,51,1,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,41,"        lookupMap = new HashMap<CharSequence, CharSequence>();",2,0,0,1,2,0,0,0,0,2,54,5,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,42,        int _shortest = Integer.MAX_VALUE;,6,0,0,0,0,0,0,0,0,6,34,5,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,43,        int _longest = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,44,        if (lookup != null) {,2,1,0,1,3,0,4,0,0,8,21,3,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,45,            for (CharSequence[] seq : lookup) {,8,0,0,2,5,0,6,2,0,16,35,3,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,46,"                this.lookupMap.put(seq[0], seq[1]);",0,0,0,3,6,0,0,0,0,9,35,4,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,47,                int sz = seq[0].length();,0,0,0,2,4,0,0,0,0,6,25,4,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,48,                if (sz < _shortest) {,8,1,0,1,3,0,0,2,0,11,21,3,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,49,                    _shortest = sz;,0,0,0,0,0,0,0,0,0,0,15,4,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,51,                if (sz > _longest) {,4,1,0,1,3,0,0,0,0,5,20,8,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,52,                    _longest = sz;,4,0,0,0,0,0,0,0,0,5,14,10,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,56,        shortest = _shortest;,0,0,0,0,0,0,0,0,0,0,21,4,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,57,        longest = _longest;,6,0,0,0,0,0,14,4,0,25,19,3,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,6,58,    },0,0,0,0,1,0,0,0,0,1,1,4,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,6,34,public class OctalUnescaper extends CharSequenceTranslator {,0,0,0,0,1,0,0,0,0,1,60,4,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,6,36,    private static int OCTAL_MAX = 377;,0,0,0,0,0,0,0,0,0,0,35,4,0.04,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,6,85,"        return new UnicodeEscaper(codepointLow, codepointHigh, false);",0,0,0,1,2,1,0,0,0,4,62,4,0.03846,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeUnescaper,6,30,public class UnicodeUnescaper extends CharSequenceTranslator {,0,0,0,0,1,0,0,0,0,1,62,4,0.03704,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,6,35,"    public static enum OPTION { semiColonRequired, semiColonOptional, errorIfNoSemiColon }",12,1,0,1,2,2,8,0,0,25,86,1,0.03704,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,6,56,    public NumericEntityUnescaper(OPTION... options) {,4,0,0,1,3,1,0,2,0,7,50,2,0.03704,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,6,57,        if(options.length > 0) {,4,1,0,1,3,0,0,0,0,5,24,4,0.03704,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,6,60,            this.options = EnumSet.copyOf(Arrays.asList(new OPTION[] { OPTION.semiColonRequired }));,6,0,0,4,8,0,8,2,0,17,88,6,0.03704,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,6,62,    },0,0,0,0,1,0,4,0,0,4,1,6,0.03704,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,6,51,"    private UnicodeEscaper(int below, int above, boolean between) {",8,0,0,1,3,1,0,0,0,9,63,2,0.03704,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,6,52,        this.below = below;,4,0,0,0,0,0,0,0,0,5,19,4,0.03704,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,6,53,        this.above = above;,0,0,0,0,0,0,10,0,0,10,19,5,0.03704,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,6,54,        this.between = between;,0,0,0,0,0,0,0,0,0,0,23,4,0.03704,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,6,55,    },2,0,0,0,1,3,0,4,0,9,1,2,0.03704,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,94,            for (int pt = 0; pt < consumed; pt++) {,8,1,0,1,3,0,4,0,0,15,39,3,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,95,"                pos += Character.charCount(Character.codePointAt(input, pos));",2,0,0,2,4,0,12,0,0,15,62,8,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CodePointTranslator,6,29,public abstract class CodePointTranslator extends CharSequenceTranslator {,0,0,0,0,1,0,0,0,0,1,74,4,0.03226,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,54,        if (input == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,58,            StringWriter writer = new StringWriter(input.length() * 2);,2,1,0,2,4,0,4,4,0,11,59,6,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,59,"            translate(input, writer);",0,0,0,1,2,0,6,0,0,6,25,7,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,76,        if (out == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,79,        if (input == null) {,4,1,1,1,3,0,0,0,0,8,20,3,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,82,        int pos = 0;,2,0,0,0,0,0,0,0,0,2,12,5,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,83,        int len = input.length();,0,0,0,1,2,0,0,0,0,3,25,4,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,84,        while (pos < len) {,10,1,0,1,3,0,4,0,0,16,19,3,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,85,"            int consumed = translate(input, pos, out);",2,0,0,1,2,0,8,0,0,10,42,7,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,86,            if (consumed == 0) {,2,1,0,1,3,0,4,4,0,11,20,3,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,32,public abstract class CharSequenceTranslator {,6,0,0,0,1,2,4,2,0,15,46,1,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,49,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,10,64,1,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,53,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,57,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,61,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,4,1,0,2,4,1,4,0,0,10,58,6,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,65,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,69,    public static final int[] EMPTY_INT_ARRAY = new int[0];,0,0,0,2,4,0,0,0,0,6,55,4,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,73,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,77,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,81,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,85,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,89,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,93,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,97,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,101,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,105,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,109,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,2,2,0,10,67,2,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,113,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,117,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,6,121,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,0,0,0,2,4,0,0,0,0,6,80,4,0.02564,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,159,"    private static final Pattern WHITESPACE_PATTERN = Pattern.compile(""(?: \\s|[\\s&&[^ ]])\\s*"");",6,1,0,4,8,3,16,4,0,32,94,1,0.01064,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,279,            if(index != 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,280,"                throw new IllegalStateException(""CsvUnescaper should never reach the [1] index"");",0,0,0,2,4,0,0,0,0,6,81,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,283,            if ( input.charAt(0) != CSV_QUOTE || input.charAt(input.length() - 1) != CSV_QUOTE ) {,0,0,0,4,9,0,0,0,0,13,86,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,284,                out.write(input.toString());,8,0,1,2,4,0,8,8,0,27,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,285,                return input.length();,0,0,0,1,2,1,10,0,0,10,22,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,289,"            String quoteless = input.subSequence(1, input.length() - 1).toString();",0,0,0,3,6,0,0,0,0,9,71,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,291,"            if ( StringUtils.containsAny(quoteless, CSV_SEARCH_CHARS) ) {",2,0,0,2,5,0,0,2,0,4,61,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,293,"                out.write(StringUtils.replace(quoteless, CSV_QUOTE_STR + CSV_QUOTE_STR, CSV_QUOTE_STR));",8,1,0,2,4,3,14,2,0,29,88,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,295,                out.write(input.toString());,0,0,0,2,4,0,8,0,0,8,28,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,297,            return input.length();,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,55,            return null;,0,0,0,0,0,1,4,0,0,4,12,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,60,            return writer.toString();,0,0,0,1,2,1,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,61,        } catch (IOException ioe) {,2,0,0,1,4,0,0,2,0,4,27,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,63,            throw new RuntimeException(ioe);,0,0,0,1,2,0,0,0,0,3,32,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,77,"            throw new IllegalArgumentException(""The Writer must not be null"");",2,0,0,1,2,0,0,0,0,2,66,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,80,            return;,6,1,0,0,0,1,0,0,0,8,7,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,87,"                char[] c = Character.toChars(Character.codePointAt(input, pos));",0,0,0,3,6,0,0,0,0,9,64,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,88,                out.write(c);,0,0,0,1,2,0,0,0,0,3,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,89,                pos+= c.length;,2,0,0,0,0,0,0,0,0,2,15,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,90,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,97,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,98,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,6,122,        return Integer.toHexString(codepoint).toUpperCase(Locale.ENGLISH);,0,0,0,2,4,1,0,0,0,7,66,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,314,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,315,    },2,0,0,0,1,0,0,2,0,4,1,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,341,        return ESCAPE_JAVA.translate(input);,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,370,        return ESCAPE_ECMASCRIPT.translate(input);,0,0,0,1,2,1,6,0,0,6,42,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,383,        return UNESCAPE_JAVA.translate(input);,4,0,0,1,2,2,8,2,0,15,38,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,400,        return UNESCAPE_ECMASCRIPT.translate(input);,2,0,0,1,2,1,12,0,0,14,44,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,433,        return ESCAPE_HTML4.translate(input);,0,0,0,1,2,1,10,0,0,10,37,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,446,        return ESCAPE_HTML3.translate(input);,0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,468,        return UNESCAPE_HTML4.translate(input);,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,482,        return UNESCAPE_HTML3.translate(input);,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,506,        return ESCAPE_XML.translate(input);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,527,        return UNESCAPE_XML.translate(input);,0,0,0,1,2,1,0,0,0,4,37,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,582,        return UNESCAPE_CSV.translate(input);,0,1,0,1,2,1,10,0,0,11,37,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,51,        for (CharSequenceTranslator translator : translators) {,4,0,0,1,3,0,0,2,0,6,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,52,"            int consumed = translator.translate(input, index, out);",2,0,0,1,2,0,10,0,0,12,55,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,53,            if(consumed != 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,54,                return consumed;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,6,57,        return 0;,6,0,0,0,0,4,0,4,0,13,9,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,157,"                throw new IllegalStateException(""CsvEscaper should never reach the [1] index"");",2,0,0,2,4,3,6,4,0,16,79,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,163,                out.write(CSV_QUOTE);,0,0,0,1,2,0,6,0,0,6,21,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,164,"                out.write(StringUtils.replace(input.toString(), CSV_QUOTE_STR, CSV_QUOTE_STR + CSV_QUOTE_STR));",4,1,0,3,6,0,26,0,0,31,95,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,6,165,                out.write(CSV_QUOTE);,0,0,0,1,2,0,6,0,0,6,21,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,170,        super();,2,0,0,1,2,0,0,0,0,2,8,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,171,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,195,        return cs == null || cs.length() == 0;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,214,        return !StringUtils.isEmpty(cs);,0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,235,        if (cs == null || (strLen = cs.length()) == 0) {,6,3,0,3,7,0,4,0,0,16,48,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,236,            return true;,2,0,1,0,0,1,0,0,0,7,12,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,238,        for (int i = 0; i < strLen; i++) {,14,1,0,1,3,0,0,0,0,17,34,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,239,            if (Character.isWhitespace(cs.charAt(i)) == false) {,2,1,0,3,7,0,10,0,0,14,52,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,240,                return false;,2,1,0,0,0,1,8,0,0,13,13,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,243,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,264,        return !StringUtils.isBlank(cs);,0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,293,        return str == null ? null : str.trim();,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,319,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,320,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,7,31,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,345,        return str == null ? EMPTY : str.trim();,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,373,"        return strip(str, null);",0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,400,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,401,            return null;,2,0,0,0,0,1,0,0,0,2,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,403,"        str = strip(str, null);",2,0,0,1,2,0,4,0,0,8,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,404,        return str.length() == 0 ? null : str;,2,1,0,1,2,1,4,0,0,7,38,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,430,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,460,        if (isEmpty(str)) {,10,2,0,2,5,0,0,0,0,14,19,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,461,            return str;,4,0,1,0,0,1,0,0,0,6,11,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,463,"        str = stripStart(str, stripChars);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,464,"        return stripEnd(str, stripChars);",6,1,0,1,2,1,0,0,0,7,33,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,493,        if (str == null || (strLen = str.length()) == 0) {,6,3,0,3,7,0,6,0,0,16,50,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,494,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,496,        int start = 0;,18,6,0,0,0,3,2,0,0,30,14,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,497,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,498,            while (start != strLen && Character.isWhitespace(str.charAt(start))) {,4,2,0,3,7,0,10,0,0,16,70,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,499,                start++;,6,0,0,0,0,0,0,0,0,8,8,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,501,        } else if (stripChars.length() == 0) {,4,3,0,2,6,0,0,0,0,7,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,502,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,504,            while (start != strLen && stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND) {,6,3,0,3,7,0,10,0,0,19,85,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,505,                start++;,2,0,0,0,0,0,0,0,0,3,8,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,508,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,538,        if (str == null || (end = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,539,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,542,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,543,            while (end != 0 && Character.isWhitespace(str.charAt(end - 1))) {,4,3,0,3,7,0,8,0,0,15,65,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,544,                end--;,2,0,0,0,0,0,0,0,0,3,6,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,546,        } else if (stripChars.length() == 0) {,0,1,0,2,6,0,4,0,0,5,38,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,547,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,549,            while (end != 0 && stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND) {,0,0,0,3,7,0,0,0,0,10,80,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,550,                end--;,8,3,0,0,0,0,0,0,0,12,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,553,"        return str.substring(0, end);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,578,"        return stripAll(strs, null);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,608,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,609,            return strs;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,611,        String[] newArr = new String[strsLen];,2,0,1,2,4,0,0,4,0,8,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,6,612,        for (int i = 0; i < strsLen; i++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,111,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",0,0,0,1,2,0,0,0,0,3,78,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",0,0,0,1,2,0,0,0,0,3,92,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,8,2,0,16,78,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",0,0,0,1,2,0,0,0,0,3,88,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",0,0,0,1,2,0,0,0,0,3,78,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,313,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,331,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,2,0,0,1,2,3,4,2,0,11,82,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",2,0,0,1,2,3,2,2,0,10,86,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",0,0,0,1,2,0,0,0,0,3,86,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",2,0,0,1,2,3,2,2,0,10,92,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",2,0,0,1,2,3,2,2,0,10,98,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",0,0,0,1,2,0,0,0,0,3,102,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",2,0,0,1,2,3,2,2,0,10,104,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,442,    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);,2,0,0,1,2,3,6,2,0,13,114,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,461,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =,0,0,0,0,0,0,0,0,0,0,64,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,0,1,2,3,2,2,0,10,74,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",4,1,0,1,2,3,2,2,0,13,82,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",2,0,0,1,2,3,2,2,0,10,76,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,2,0,10,76,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",4,0,0,1,2,3,8,4,0,20,76,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",0,0,0,1,2,0,0,0,0,3,108,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",0,0,0,1,2,0,0,0,0,3,80,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,697,"    public static final String OS_NAME = getSystemProperty(""os.name"");",2,0,0,1,2,3,2,4,0,14,66,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,715,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",2,0,0,1,2,3,2,2,0,10,72,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,733,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",0,0,0,1,2,0,4,0,0,5,80,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,753,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ?",2,1,0,1,2,3,2,2,0,12,85,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,772,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,0,0,0,1,2,0,0,0,0,3,70,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,790,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,809,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",0,0,0,1,2,0,0,0,0,3,78,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,827,"    public static final String USER_NAME = getSystemProperty(""user.name"");",0,0,0,1,2,0,0,0,0,3,70,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,845,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",8,1,0,1,2,3,2,6,0,21,78,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,860,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",0,0,0,1,2,0,0,0,0,3,71,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,870,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,880,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",0,0,0,1,2,0,0,0,0,3,71,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,890,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,900,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,910,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,922,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",0,0,0,1,2,0,0,0,0,3,71,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,942,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",4,1,0,1,2,3,2,0,0,11,64,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,954,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",0,0,0,1,2,0,0,0,0,3,68,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,966,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",0,0,0,1,2,0,0,0,0,3,66,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,978,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",6,2,0,2,4,3,8,0,0,21,97,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,990,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",2,0,0,1,2,3,2,0,0,8,64,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1002,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",2,0,0,1,2,3,2,0,0,8,73,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1014,"    public static final boolean IS_OS_FREE_BSD = getOSMatchesName(""FreeBSD"");",2,0,0,1,2,3,2,0,0,8,73,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1026,"    public static final boolean IS_OS_OPEN_BSD = getOSMatchesName(""OpenBSD"");",2,0,0,1,2,3,8,0,0,14,73,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1038,"    public static final boolean IS_OS_NET_BSD = getOSMatchesName(""NetBSD"");",4,1,0,1,2,3,2,0,0,11,71,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1050,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",0,0,0,1,2,0,0,0,0,3,65,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1062,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",0,0,0,1,2,0,0,0,0,3,72,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1074,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",0,0,0,1,2,0,0,0,0,3,69,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1086,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX,4,2,0,0,0,0,6,0,0,12,111,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1099,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,2,0,0,1,2,3,4,0,0,9,85,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1111,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",0,0,0,1,2,0,0,0,0,3,93,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1123,"    public static final boolean IS_OS_WINDOWS_2003 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.2"");",2,0,0,1,2,3,4,0,0,10,93,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1135,"    public static final boolean IS_OS_WINDOWS_2008 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" Server 2008"", ""6.1"");",4,1,0,1,2,3,2,0,0,12,110,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1147,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",6,3,0,1,2,3,6,0,0,21,98,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1160,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",0,0,0,1,2,0,0,0,0,3,98,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1173,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",0,0,0,1,2,0,0,0,0,3,91,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1186,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",4,1,0,1,2,3,2,0,0,11,96,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1199,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",0,0,0,1,2,0,18,0,0,18,91,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1212,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",2,0,0,1,2,3,4,0,0,11,94,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1224,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",14,4,0,1,2,0,0,0,0,19,90,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1236,"    public static final boolean IS_OS_WINDOWS_8 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.2"");",8,2,0,1,2,0,6,0,0,16,90,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1277,"        return isJavaVersionMatch(JAVA_SPECIFICATION_VERSION, versionPrefix);",6,0,0,1,2,2,0,12,0,19,69,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1288,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);",2,0,0,1,2,1,0,0,0,3,69,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1298,"        return isOSNameMatch(OS_NAME, osNamePrefix);",8,1,0,1,2,1,0,0,0,10,44,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1316,            return System.getProperty(property);,4,1,0,1,2,4,8,0,0,17,36,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1383,        return JAVA_SPECIFICATION_VERSION_AS_ENUM.atLeast(requiredVersion);,2,1,0,1,2,1,10,0,0,14,67,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1399,        if (version == null) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1402,        return version.startsWith(versionPrefix);,0,0,0,1,2,1,6,0,0,6,41,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1418,        if (osName == null || osVersion == null) {,0,1,0,1,3,0,10,0,0,12,42,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1421,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,0,1,0,2,4,1,12,0,0,13,80,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1435,        if (osName == null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,7,1438,        return osName.startsWith(osNamePrefix);,2,0,0,1,2,2,10,2,0,15,39,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,89,"    JavaVersion(final float value, final String name) {",6,0,0,1,3,2,0,2,0,10,51,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,90,        this.value = value;,0,0,0,0,0,0,4,0,0,5,19,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,91,        this.name = name;,4,0,0,0,0,0,0,0,0,5,17,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,92,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,32,"    JAVA_0_9(1.5f, ""0.9""),",0,0,0,1,2,0,0,0,0,3,22,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,37,"    JAVA_1_1(1.1f, ""1.1""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,42,"    JAVA_1_2(1.2f, ""1.2""),",0,0,0,1,2,0,0,0,0,3,22,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,47,"    JAVA_1_3(1.3f, ""1.3""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,52,"    JAVA_1_4(1.4f, ""1.4""),",0,0,0,1,2,0,0,0,0,3,22,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,57,"    JAVA_1_5(1.5f, ""1.5""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,62,"    JAVA_1_6(1.6f, ""1.6""),",0,0,0,1,2,0,0,0,0,3,22,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,67,"    JAVA_1_7(1.7f, ""1.7""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,72,"    JAVA_1_8(1.8f, ""1.8"");",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,27,public enum JavaVersion {,6,0,0,0,1,1,4,0,0,11,25,0,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,105,        return this.value >= requiredVersion.value;,0,0,0,0,0,1,0,0,0,1,43,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,132,"        if (""0.9"".equals(nom)) {",4,0,0,2,5,0,4,2,0,11,24,0,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,134,"        } else if (""1.1"".equals(nom)) {",0,0,0,2,6,0,0,0,0,8,31,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,136,"        } else if (""1.2"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,138,"        } else if (""1.3"".equals(nom)) {",0,0,0,2,6,0,0,0,0,8,31,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,140,"        } else if (""1.4"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,142,"        } else if (""1.5"".equals(nom)) {",4,0,0,2,6,0,4,0,0,8,31,17,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,144,"        } else if (""1.6"".equals(nom)) {",0,0,0,2,6,0,0,0,0,8,31,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,146,"        } else if (""1.7"".equals(nom)) {",0,0,0,2,6,0,0,0,0,8,31,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,7,147,            return JAVA_1_7;,0,0,0,0,0,1,0,0,0,1,16,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,447,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,453,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,456,            int hexDigits = str.length() - 2; // drop 0x,0,0,0,1,2,0,0,0,0,3,44,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,457,"            if (str.startsWith(""-"")) { // drop -",4,1,0,2,5,0,4,0,0,10,36,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,460,            if (hexDigits > 8) { // too many for an int,2,1,0,1,3,0,0,0,0,3,43,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,463,            return createInteger(str);,2,0,0,1,2,4,6,4,0,16,26,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,474,            if (expPos > -1) {,14,8,0,1,3,0,14,2,0,39,18,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,475,                if (expPos < decPos || expPos > str.length()) {,6,3,0,2,5,0,4,0,0,13,47,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,478,"                dec = str.substring(decPos + 1, expPos);",10,1,0,1,2,0,4,0,0,18,40,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,480,                dec = str.substring(decPos + 1);,10,1,0,1,2,0,0,0,0,12,32,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,482,"            mant = str.substring(0, decPos);",0,0,0,1,2,0,0,0,0,3,32,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,485,                if (expPos > str.length()) {,0,0,0,2,5,0,0,0,0,7,28,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,496,"                exp = str.substring(expPos + 1, str.length() - 1);",2,0,0,2,4,3,4,2,0,12,50,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,521,                        Float f = NumberUtils.createFloat(numeric);,2,0,0,1,2,0,6,2,0,10,43,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,522,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,0,0,0,5,11,0,0,0,0,16,65,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,525,                            return f;,0,0,0,0,0,1,0,0,0,1,9,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,535,                        Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,0,6,2,0,10,45,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,536,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,0,0,5,11,0,0,0,0,2,65,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,537,                            return d;,4,1,0,0,0,1,4,0,0,9,9,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,543,                        return createBigDecimal(numeric);,16,2,0,1,2,1,14,10,0,46,33,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,555,            if (expPos > -1 && expPos < str.length() - 1) {,8,5,0,2,5,0,4,0,0,18,47,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,556,"                exp = str.substring(expPos + 1, str.length());",4,1,0,2,4,0,8,0,0,14,46,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,558,                exp = null;,0,0,0,0,0,0,0,0,0,0,11,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,560,            if (dec == null && exp == null) {,6,3,1,1,3,0,0,0,0,12,33,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,563,                    return createInteger(str);,0,0,0,1,2,1,0,0,0,4,26,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,564,                } catch (NumberFormatException nfe) { // NOPMD,0,0,0,1,4,0,0,0,0,5,46,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,568,                    return createLong(str);,0,0,0,1,2,1,4,0,0,5,23,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,569,                } catch (NumberFormatException nfe) { // NOPMD,0,0,0,1,4,0,0,0,0,5,46,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,572,                return createBigInteger(str);,0,0,0,1,2,1,0,0,0,4,29,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,576,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,14,1,0,2,4,0,24,2,0,45,55,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,578,                    Float f = createFloat(str);,0,0,0,1,2,0,0,0,0,3,27,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,579,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,6,3,0,5,11,0,12,0,0,24,65,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,580,                        return f;,8,2,0,0,0,1,0,0,0,11,9,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,586,                    Double d = createDouble(str);,0,0,0,1,2,0,0,0,0,3,29,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,446,        if (str == null) {,2,0,0,1,3,0,0,0,0,2,18,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,449,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,452,"        if (str.startsWith(""--"")) {",2,0,0,2,5,0,4,0,0,7,27,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,7,455,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"") || str.startsWith(""0X"") || str.startsWith(""-0X"")) {",0,0,0,5,11,0,0,0,0,16,101,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1134,            if (zone.useDaylightTime(),0,0,0,1,3,0,4,0,0,4,26,7,2.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1138,"                buffer.append(getTimeZoneDisplay(zone, false, mStyle, mLocale));",2,0,0,2,4,0,4,0,0,6,64,5,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1140,        },0,0,0,0,1,0,0,0,0,1,1,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1238,            if (this == obj) {,0,0,0,1,3,0,0,0,0,4,18,4,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1241,            if (obj instanceof TimeZoneDisplayKey) {,2,0,0,1,3,0,0,2,0,4,40,6,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1242,                TimeZoneDisplayKey other = (TimeZoneDisplayKey)obj;,10,0,0,1,2,0,0,4,0,14,51,1,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1243,                return,0,0,0,0,0,0,0,0,0,0,6,4,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,734,            } else if (value < 100) {,2,1,0,1,4,0,0,0,0,3,25,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,735,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,736,                buffer.append((char)(value % 10 + '0'));,6,3,0,3,6,0,10,0,0,20,40,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1216,"                           boolean daylight, int style, Locale locale) {",6,0,0,0,2,0,0,2,0,8,45,4,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1217,            mTimeZone = timeZone;,0,0,0,0,0,0,0,0,0,0,21,4,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1218,            if (daylight) {,2,0,0,1,3,0,0,0,0,2,15,5,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1219,                style |= 0x80000000;,4,1,0,0,0,0,0,2,0,9,20,1,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1221,            mStyle = style;,4,0,0,0,0,0,0,0,0,5,15,5,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1222,            mLocale = locale;,0,0,0,0,0,0,0,0,0,0,17,4,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1223,        },0,0,0,0,1,0,0,0,0,1,1,4,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1230,            return (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();,2,4,0,3,6,1,8,0,0,14,71,5,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,259,                if (tokenLen >= 4) {,2,1,0,1,3,0,0,2,0,8,20,4,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,262,"                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);",0,0,0,1,2,0,0,0,0,3,64,4,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,264,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1079,"        TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);",2,0,0,1,2,3,0,4,0,9,77,2,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1080,        String value = cTimeZoneDisplayCache.get(key);,2,0,0,1,2,0,6,2,0,10,46,4,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1081,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1083,"            value = tz.getDisplayName(daylight, style, locale);",0,0,0,1,2,0,0,0,0,3,51,4,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1084,"            String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);",0,0,0,1,2,0,0,0,0,3,61,4,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1085,            if (prior != null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1089,        return value;,6,0,0,0,0,1,0,0,0,8,13,3,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,692,            buffer.append(mValues[calendar.get(mField)]);,2,0,0,3,6,0,0,0,0,2,45,6,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,693,        },2,0,0,0,1,0,0,0,0,3,1,6,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1109,"        TimeZoneNameRule(TimeZone timeZone, Locale locale, int style) {",8,0,0,1,3,0,0,4,0,12,63,3,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1110,            mLocale = locale;,4,0,0,0,0,0,6,0,0,11,17,1,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1111,            mStyle = style;,4,0,0,0,0,0,0,0,0,5,15,5,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1112,            zone = timeZone;,0,0,0,0,0,0,0,0,0,0,16,4,0.8,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1114,"            mStandard = getTimeZoneDisplay(timeZone, false, style, locale);",0,0,0,1,2,0,0,0,0,3,63,4,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1115,"            mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);",2,0,0,1,2,0,8,0,0,12,62,5,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1116,        },0,0,0,0,1,0,0,0,0,1,1,4,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,1126,"            return Math.max(mStandard.length(), mDaylight.length());",0,0,0,3,6,1,12,0,0,12,56,6,0.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,732,            if (value < 10) {,2,1,0,1,3,0,0,0,0,3,17,5,0.66667,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,740,        },0,0,0,0,1,0,0,0,0,1,1,4,0.66667,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,8,450,            return MODULO_HOUR_STRATEGY;,2,0,0,0,0,1,0,0,0,2,28,5,0.26667,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,987,        TwelveHourField(NumberRule rule) {,2,0,0,1,3,3,2,2,0,10,34,2,0.26667,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,988,            mRule = rule;,4,0,1,0,0,0,6,0,0,15,13,1,0.26667,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,989,        },0,0,0,0,1,0,0,0,0,1,1,4,0.26667,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,996,            return mRule.estimateLength();,0,0,0,1,2,1,8,0,0,8,30,1,0.26667,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,220,"                rule = new TwelveHourField(selectNumberRule(Calendar.HOUR, tokenLen));",4,3,0,2,4,0,4,0,0,12,70,4,0.26667,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,221,                break;,4,0,0,0,0,0,0,0,0,5,6,4,0.26667,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,8,446,"            return getLocaleSpecificStrategy(Calendar.AM_PM, definingCalendar);",6,1,0,1,2,1,4,0,0,11,67,3,0.23529,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,250,"                rule = new TextField(Calendar.AM_PM, AmPmStrings);",8,0,0,1,2,0,0,2,0,11,50,7,0.22222,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,251,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.22222,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,359,            return new UnpaddedNumberField(field);,2,0,0,1,2,1,0,2,0,4,38,6,0.17391,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,707,        UnpaddedNumberField(int field) {,4,0,0,1,3,0,0,0,0,4,32,3,0.17391,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,8,708,            mField = field;,4,0,0,0,0,0,0,0,0,5,15,5,0.17391,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,180,        return parsePattern;,2,0,0,0,0,1,0,0,0,2,20,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,260,        return date;,4,0,0,0,0,1,0,0,0,5,12,3,0.10526,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,732,"            cal.set(field, modify(Integer.parseInt(value)));",0,0,0,3,6,0,14,0,0,14,48,6,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,733,        },0,0,0,0,1,0,0,0,0,1,1,4,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,741,            return iValue;,2,0,0,0,0,1,0,0,0,2,14,5,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,282,"        Calendar cal= Calendar.getInstance(timeZone, locale);",2,0,0,1,2,0,8,2,0,12,53,4,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,283,        cal.clear();,0,0,0,1,2,0,4,0,0,4,12,5,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,285,        for(int i=0; i<strategies.length;) {,10,1,0,1,3,0,4,2,0,17,36,3,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,286,            Strategy strategy= strategies[i++];,0,0,0,1,2,0,0,0,0,3,35,4,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,287,"            strategy.setCalendar(this, cal, matcher.group(i));",0,0,0,2,4,0,12,0,0,12,50,7,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,288,        },0,0,0,0,1,0,0,0,0,1,1,4,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,289,        pos.setIndex(offset+matcher.end());,2,1,0,2,4,0,8,0,0,11,35,5,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,290,        return cal.getTime();,0,0,0,1,2,1,4,0,0,4,21,5,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,250,"        Date date= parse(source, new ParsePosition(0));",2,0,0,2,4,0,4,4,0,10,47,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,251,        if(date==null) {,0,0,0,1,3,0,0,0,0,4,16,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,276,        int offset= pos.getIndex();,0,0,0,1,2,0,0,0,0,3,27,4,0.09756,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,277,        Matcher matcher= parsePattern.matcher(source.substring(offset));,12,1,0,2,4,0,10,2,0,26,64,3,0.09756,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,278,        if(!matcher.lookingAt()) {,0,0,0,2,5,0,4,0,0,5,26,4,0.09756,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,537,            if(formatField.length()>2) {,0,1,0,2,5,0,4,0,0,5,28,5,0.07692,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,538,"                formatField= formatField.substring(1, formatField.length()-1);",0,0,0,2,4,0,0,0,0,6,62,4,0.07692,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,9,359,            return new UnpaddedNumberField(field);,4,0,0,1,2,1,0,2,0,6,38,3,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,9,707,        UnpaddedNumberField(int field) {,6,0,0,1,3,3,0,4,0,13,32,1,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,9,708,            mField = field;,0,0,0,0,0,0,0,0,0,1,15,12,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,9,709,        },0,0,0,0,1,0,0,0,0,1,1,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,9,716,            return 4;,0,0,0,0,0,1,0,0,0,1,9,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,9,472,        return parser.parse(source);,0,0,0,1,2,1,6,0,0,6,28,5,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,566,            return DAY_OF_MONTH_STRATEGY;,2,0,0,0,0,1,0,0,0,2,29,5,0.0396,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,145,            collector.add(currentStrategy);,0,0,0,1,2,0,6,0,0,6,31,7,0.03774,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,304,        for(int i= 0; i<value.length(); ++i) {,6,1,0,2,5,0,4,0,0,12,38,4,0.0367,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,305,            char c= value.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.0367,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,306,            switch(c) {,0,0,0,1,3,0,0,0,0,4,11,4,0.0367,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,331,            regex.append(c);,0,0,0,1,2,0,6,0,0,6,16,7,0.0367,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,333,        return regex;,2,0,0,0,0,1,0,0,0,2,13,4,0.0367,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,542,            return new CopyQuotedStrategy(formatField);,0,0,0,1,2,1,0,0,0,4,43,4,0.0367,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,68,"public class FastDateParser implements DateParser, Serializable {",2,0,0,0,1,1,0,4,0,7,65,1,0.0367,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,603,        CopyQuotedStrategy(String formatField) {,4,0,0,1,3,0,8,4,0,16,40,1,0.0367,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,604,            this.formatField= formatField;,8,4,0,0,0,0,4,0,0,17,30,1,0.0367,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,605,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0367,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,624,"            escapeRegex(regex, formatField, true);",4,0,0,1,2,0,6,4,0,15,38,1,0.0367,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,625,            return false;,0,0,0,0,0,1,0,0,0,1,13,5,0.0367,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,718,            if(parser.isNextNumber()) {,0,0,0,2,5,0,4,0,0,4,27,6,0.03604,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,722,"                regex.append(""(\\p{IsNd}++)"");",0,0,0,3,6,0,4,0,0,5,30,8,0.03604,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,724,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.03604,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,104,"    protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) {",8,0,0,1,3,1,0,6,0,15,76,2,0.03604,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,105,        this.pattern = pattern;,4,0,0,0,0,0,0,0,0,5,23,4,0.03604,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,106,        this.timeZone = timeZone;,0,0,0,0,0,0,0,0,0,0,25,4,0.03604,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,107,        this.locale = locale;,6,1,0,0,0,0,0,0,0,8,21,3,0.03604,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,108,        init();,0,0,0,1,2,0,2,0,0,2,7,5,0.03604,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,109,    },2,0,0,0,1,0,4,2,0,8,1,4,0.03604,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,116,"        thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);",0,0,0,2,4,0,0,0,0,6,68,4,0.03604,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,118,"        nameValues= new ConcurrentHashMap<Integer, KeyValue[]>();",2,0,0,2,4,0,0,6,0,9,57,4,0.03604,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,120,        StringBuilder regex= new StringBuilder();,2,0,0,1,2,0,4,4,0,10,41,3,0.03604,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,121,        List<Strategy> collector = new ArrayList<Strategy>();,0,0,0,1,2,0,0,0,0,3,53,4,0.03604,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,123,        Matcher patternMatcher= formatPattern.matcher(pattern);,2,0,0,1,2,0,6,2,0,10,55,4,0.03604,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,124,        if(!patternMatcher.lookingAt()) {,2,0,0,2,5,0,4,0,0,7,33,3,0.03604,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,9,128,        currentFormatField= patternMatcher.group();,0,0,0,1,2,0,0,0,0,3,43,4,0.03604,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,180,        return parsePattern;,2,0,0,0,0,1,0,0,0,2,20,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,685,            KeyValue[] textKeyValues= parser.getDisplayNames(field);,4,0,0,2,4,0,12,6,0,22,56,1,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,686,"            int idx= Arrays.binarySearch(textKeyValues, new KeyValue(value, -1), IGNORE_CASE_COMPARATOR);",10,1,1,2,4,0,8,2,0,25,93,1,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,687,            if(idx<0) {,2,1,0,1,3,0,0,0,0,3,11,5,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,696,"            cal.set(field, textKeyValues[idx].value);",4,0,1,2,4,0,12,0,0,21,41,1,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,697,        },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,850,            return iValue-1;,2,1,0,0,0,1,0,0,0,3,16,8,0.13793,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,250,"        Date date= parse(source, new ParsePosition(0));",0,0,0,2,4,0,0,0,0,6,47,4,0.10526,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,251,        if(date==null) {,2,1,0,1,3,0,0,0,0,3,16,4,0.10526,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,260,        return date;,0,0,0,0,0,1,0,0,0,1,12,4,0.10526,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,741,"            cal.set(field, modify(Integer.parseInt(value)));",0,0,0,3,6,0,14,0,0,14,48,6,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,742,        },0,0,0,0,1,0,0,0,0,1,1,4,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,276,        int offset= pos.getIndex();,0,0,0,1,2,0,0,0,0,3,27,4,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,277,        Matcher matcher= parsePattern.matcher(source.substring(offset));,2,0,0,2,4,0,10,2,0,14,64,4,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,278,        if(!matcher.lookingAt()) {,2,0,0,2,5,3,4,4,0,14,26,1,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,282,"        Calendar cal= Calendar.getInstance(timeZone, locale);",2,0,0,1,2,0,8,2,0,12,53,4,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,283,        cal.clear();,0,0,0,1,2,0,0,0,0,3,12,4,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,285,        for(int i=0; i<strategies.length;) {,8,1,0,1,3,0,0,0,0,9,36,4,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,286,            Strategy strategy= strategies[i++];,0,0,0,1,2,0,0,0,0,3,35,4,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,287,"            strategy.setCalendar(this, cal, matcher.group(i));",0,0,0,2,4,0,0,0,0,6,50,4,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,288,        },10,0,0,0,1,0,0,4,0,14,1,4,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,289,        pos.setIndex(offset+matcher.end());,2,1,0,2,4,0,8,0,0,11,35,5,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,290,        return cal.getTime();,6,0,0,1,2,1,0,2,0,8,21,4,0.10256,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,395,"                fieldKeyValues= createKeyValues(symbols.getWeekdays(), symbols.getShortWeekdays());",0,0,0,3,6,0,0,0,0,9,83,4,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,396,                break;,4,0,0,0,0,0,0,0,0,5,6,5,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,555,            return DAY_OF_WEEK_STRATEGY;,0,0,0,0,0,1,0,0,0,1,28,4,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,754,            super();,2,1,0,1,2,0,0,0,0,3,8,6,0.07143,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,755,        },0,0,0,0,1,0,0,0,0,1,1,4,0.07143,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,747,        static final UnpaddedMonthField INSTANCE = new UnpaddedMonthField();,0,0,0,1,2,0,0,0,0,3,68,4,0.07143,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,762,            return 2;,0,0,0,0,0,1,0,0,0,1,9,4,0.07143,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,213,                    rule = UnpaddedMonthField.INSTANCE;,6,0,0,0,0,0,0,0,0,7,35,11,0.07143,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDatePrinter,10,215,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.07143,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,379,        Integer fieldInt = Integer.valueOf(field);,2,0,0,1,2,0,6,2,0,10,42,4,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,380,        KeyValue[] fieldKeyValues= nameValues.get(fieldInt);,0,0,0,2,4,0,0,0,0,6,52,4,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,381,        if(fieldKeyValues==null) {,2,1,0,1,3,0,0,0,0,3,26,4,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,382,            DateFormatSymbols symbols= DateFormatSymbols.getInstance(locale);,2,0,0,1,2,0,6,2,0,10,65,6,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,383,            switch(field) {,0,0,0,1,3,0,0,0,0,4,15,4,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,406,"            KeyValue[] prior = nameValues.putIfAbsent(fieldInt, fieldKeyValues);",30,8,1,2,4,6,16,6,0,72,68,1,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,407,            if(prior!=null) {,0,0,0,1,3,0,0,0,0,4,17,4,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,411,        return fieldKeyValues;,2,0,0,0,0,1,0,0,0,2,22,4,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,434,        KeyValue[] fieldKeyValues= new KeyValue[count(longValues)+count(shortValues)];,2,1,0,4,8,0,8,4,0,15,78,4,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,435,"        copy(fieldKeyValues, copy(fieldKeyValues, 0, longValues), shortValues);",0,0,0,2,4,0,0,0,0,6,71,4,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,436,"        Arrays.sort(fieldKeyValues, IGNORE_CASE_COMPARATOR);",2,0,0,1,2,0,8,0,0,10,52,3,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,437,        return fieldKeyValues;,2,0,0,0,0,1,0,0,0,2,22,4,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,446,        int count= 0;,2,0,0,0,0,0,0,0,0,2,13,5,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,447,        if(values!=null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,448,            for(String value : values) {,4,0,0,1,3,0,0,2,0,6,28,6,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,449,                if(value.length()>0) {,0,1,0,2,5,0,4,0,0,5,22,8,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,450,                    ++count;,6,1,0,0,0,0,4,0,0,12,8,3,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,454,        return count;,0,0,0,0,0,1,0,0,0,1,13,4,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,465,        if(values!=null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,466,            for(int i= 0; i<values.length; ++i) {,10,1,0,1,3,0,0,0,0,12,37,6,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,467,                String value= values[i];,2,0,1,1,2,0,0,2,0,8,24,8,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,468,                if(value.length()>0) {,0,1,0,2,5,0,4,0,0,5,22,8,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,469,"                    fieldKeyValues[offset++]= new KeyValue(value, i);",6,0,1,2,4,0,0,2,0,12,49,10,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateParser,10,473,        return offset;,10,1,0,0,0,1,0,0,0,12,14,4,0.06349,0,0,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,253,                ch = (char) (random.nextInt(gap) + start);,4,1,0,3,6,0,6,0,0,12,42,8,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,163,"        return random(count, start, end, letters, numbers, null, RANDOM);",0,0,0,1,2,1,0,0,0,4,65,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,234,        if (start == 0 && end == 0) {,4,3,0,1,3,0,0,0,0,7,29,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,247,        char[] buffer = new char[count];,2,0,0,2,4,0,6,0,0,8,32,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,11,248,        int gap = end - start;,6,1,0,0,0,0,0,0,0,7,22,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,248,                ch = chars[random.nextInt(gap) + start];,4,1,1,2,4,0,6,0,0,14,40,8,4.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,225,        if (count == 0) {,0,0,0,1,3,0,0,0,0,4,17,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,227,        } else if (count < 0) {,2,1,0,1,4,0,0,0,0,3,23,5,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,231,        if (start == 0 && end == 0) {,4,3,0,1,3,0,0,0,0,7,29,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/RandomStringUtils,12,232,                if (!letters && !numbers) {,4,1,0,1,3,0,0,0,0,7,27,6,2.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/SerializationException,13,75,"        super(msg, cause);",4,0,0,1,2,0,0,0,0,4,18,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SerializationException,13,76,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,83,        ByteArrayInputStream bais = new ByteArrayInputStream(objectData);,4,0,0,1,2,0,0,4,0,8,65,4,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,85,        ClassLoaderAwareObjectInputStream in = null;,2,0,0,0,0,0,0,2,0,4,44,4,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,88,"            in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());",4,0,0,3,6,0,6,2,0,13,85,6,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/SerializationUtils,13,95,            T readObject = (T) in.readObject();,4,0,0,2,4,0,0,0,0,5,35,5,0.2,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,782,        if (cs1 == cs2) {,6,1,0,1,3,0,0,0,0,7,17,4,0.0625,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,783,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0625,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,785,        if (cs1 == null || cs2 == null) {,8,3,0,1,3,3,6,4,0,24,33,1,0.0625,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,788,            return cs1.equals(cs2);,0,0,0,1,2,1,0,0,0,4,23,4,0.0625,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,148,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");",0,0,0,1,2,0,0,0,0,3,72,4,0.00321,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,707,    private static class InitStripAccents {,0,0,0,0,1,0,0,0,0,1,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,711,"        private static final Pattern sunPattern = Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");//$NON-NLS-1$",0,0,0,2,4,0,0,0,0,6,108,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,716,        private static final Pattern java6Pattern = sunPattern;,4,0,0,0,0,3,0,2,0,9,55,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,720,            Object _java6NormalizerFormNFD = null;,0,0,0,0,0,0,0,0,0,0,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,721,            Method _java6NormalizeMethod = null;,2,0,0,0,0,3,0,4,0,9,36,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,722,            Method _sunDecomposeMethod = null;,0,0,0,0,0,0,0,0,0,0,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,723,            Throwable _java6Exception = null;,0,0,0,0,0,0,0,0,0,0,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,724,            Throwable _sunException = null;,0,0,0,0,0,0,0,0,0,0,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,728,                Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,77,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,730,"                _java6NormalizerFormNFD = normalizerFormClass.getField(""NFD"").get(null);//$NON-NLS-1$",0,0,0,2,4,0,0,0,0,6,85,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,731,                Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,73,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,733,"                _java6NormalizeMethod = normalizerClass.getMethod(""normalize"",//$NON-NLS-1$",2,0,0,0,1,0,4,0,0,8,75,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,747,            },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,735,            } catch (Exception e1) {,2,0,0,1,4,0,0,2,0,4,24,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,737,                _java6Exception = e1;,4,0,0,0,0,0,0,0,0,5,21,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,740,                    Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,73,10,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,742,"                    _sunDecomposeMethod = normalizerClass.getMethod(""decompose"",//$NON-NLS-1$",2,0,0,0,1,0,4,0,0,8,73,10,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,746,                },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,744,                } catch (Exception e2) {,0,0,0,1,4,0,0,0,0,5,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,745,                    _sunException = e2;,0,0,0,0,0,0,0,0,0,0,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,750,            java6Exception = _java6Exception;,10,0,0,0,0,0,6,2,0,19,33,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,751,            java6NormalizerFormNFD = _java6NormalizerFormNFD;,4,0,0,0,0,0,0,0,0,5,49,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,752,            java6NormalizeMethod = _java6NormalizeMethod;,4,0,0,0,0,0,0,0,0,5,45,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,753,            sunException = _sunException;,4,0,0,0,0,0,0,0,0,5,29,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,754,            sunDecomposeMethod = _sunDecomposeMethod;,4,0,0,0,0,0,0,0,0,5,41,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,755,        },2,0,0,0,1,3,2,2,0,10,1,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,37,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,38,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,56,"        return cs == null ? null : cs.subSequence(start, cs.length());",2,1,0,2,4,1,10,0,0,13,62,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,70,        if (cs instanceof String) {,2,0,0,1,3,0,0,2,0,4,27,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,71,"            return ((String) cs).indexOf(searchChar, start);",0,0,0,3,6,1,0,0,0,10,48,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,73,            int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,74,            if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,75,                start = 0;,4,0,0,0,0,3,0,4,0,13,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,77,            for (int i = start; i < sz; i++) {,2,1,0,1,3,0,0,0,0,3,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,78,                if (cs.charAt(i) == searchChar) {,2,1,0,2,5,0,6,0,0,9,33,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,79,                    return i;,2,0,0,0,0,1,0,0,0,2,9,10,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,82,            return -1;,0,0,0,0,0,1,2,0,0,5,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,95,"        return cs.toString().indexOf(searchChar.toString(), start);",0,0,0,3,6,1,12,0,0,12,59,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,117,        if (cs instanceof String) {,2,0,0,1,3,0,0,2,0,4,27,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,118,"            return ((String) cs).lastIndexOf(searchChar, start);",0,0,0,3,6,1,0,0,0,10,52,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,120,            int sz = cs.length();,0,0,0,1,2,0,0,0,0,3,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,121,            if (start < 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,122,                return -1;,0,0,0,0,0,1,0,0,0,1,10,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,124,            if (start >= sz) {,4,1,0,1,3,0,0,0,0,5,18,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,125,                start = sz - 1;,4,1,0,0,0,0,6,0,0,15,15,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,127,            for (int i = start; i >= 0; --i) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,128,                if (cs.charAt(i) == searchChar) {,4,2,0,2,5,0,6,0,0,12,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,129,                    return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,132,            return -1;,12,1,0,0,0,4,0,0,0,17,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,145,"        return cs.toString().lastIndexOf(searchChar.toString(), start);",2,0,0,3,6,1,0,0,0,2,63,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,164,        if (cs instanceof String) {,2,0,0,1,3,0,0,2,0,4,27,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,165,            return ((String) cs).toCharArray();,0,0,0,3,6,1,0,0,0,10,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,167,            int sz = cs.length();,2,0,0,1,2,0,4,0,0,6,21,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,168,            char[] array = new char[cs.length()];,0,0,0,3,6,0,0,0,0,1,37,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,169,            for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,170,                array[i] = cs.charAt(i);,2,0,1,2,4,2,6,4,0,19,24,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,172,            return array;,2,0,0,0,0,1,0,0,0,2,13,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,189,        if (cs instanceof String && substring instanceof String) {,4,1,0,1,3,0,0,4,0,9,58,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,190,"            return ((String) cs).regionMatches(ignoreCase, thisStart, (String) substring, start, length);",0,0,0,4,8,1,0,0,0,13,93,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/CharSequenceUtils,14,193,"            return cs.toString().regionMatches(ignoreCase, thisStart, substring.toString(), start, length);",0,0,0,3,6,1,0,0,0,10,95,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,159,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,160,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,184,        return cs == null || cs.length() == 0;,4,4,1,1,2,4,2,0,0,23,38,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,203,        return !StringUtils.isEmpty(cs);,4,1,0,1,2,1,8,2,0,17,32,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,224,        if (cs == null || (strLen = cs.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,48,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,225,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,227,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,228,            if (Character.isWhitespace(cs.charAt(i)) == false) {,0,1,0,3,7,0,10,0,0,12,52,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,229,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,232,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,253,        return !StringUtils.isBlank(cs);,0,0,0,1,2,1,6,0,0,7,32,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,282,        return str == null ? null : str.trim();,10,1,0,1,2,4,14,2,0,31,39,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,308,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,309,        return isEmpty(ts) ? null : ts;,0,0,0,1,2,1,6,0,0,6,31,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,334,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,362,"        return strip(str, null);",0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,389,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,390,            return null;,6,3,0,0,0,1,10,0,0,20,12,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,392,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,393,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,419,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,449,        if (isEmpty(str)) {,2,0,0,2,5,0,0,0,0,2,19,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,450,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,452,"        str = stripStart(str, stripChars);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,453,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,482,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,483,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,485,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,486,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,487,            while (start != strLen && Character.isWhitespace(str.charAt(start))) {,2,0,0,3,7,0,0,0,0,2,70,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,488,                start++;,4,0,0,0,0,0,0,4,0,9,8,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,490,        } else if (stripChars.length() == 0) {,2,1,0,2,6,0,10,2,0,15,38,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,491,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,493,            while (start != strLen && stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND) {,0,0,0,3,7,0,0,0,0,10,85,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,494,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,497,        return str.substring(start);,2,1,0,1,2,1,0,0,0,3,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,527,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,528,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,14,531,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,676,            return typeVarAssigns;,0,0,0,0,0,1,0,0,0,1,22,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,547,        if (type instanceof Class<?>) {,0,0,0,1,3,0,0,0,0,4,31,4,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,548,"            return getTypeArguments((Class<?>) type, toClass, subtypeVarAssigns);",0,0,0,2,4,1,0,0,0,7,69,4,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,551,        if (type instanceof ParameterizedType) {,2,0,0,1,3,0,0,2,0,4,40,5,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,552,"            return getTypeArguments((ParameterizedType) type, toClass, subtypeVarAssigns);",2,0,0,2,4,1,6,2,0,10,78,7,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,653,"        if (!isAssignable(cls, toClass)) {",4,1,0,2,5,0,12,0,0,19,34,4,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,658,        if (cls.isPrimitive()) {,0,0,0,2,5,0,4,0,0,4,24,5,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,671,"        HashMap<TypeVariable<?>, Type> typeVarAssigns = subtypeVarAssigns == null ? new HashMap<TypeVariable<?>, Type>()",0,0,0,1,2,0,0,0,0,3,112,4,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/reflect/TypeUtils,15,675,        if (cls.getTypeParameters().length > 0 || toClass.equals(cls)) {,6,2,0,3,7,0,10,0,0,18,64,1,1.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,0,4,0,9,74,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,111,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",2,0,0,1,2,3,6,2,0,15,80,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",0,0,0,1,2,0,0,0,0,3,80,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",2,0,0,1,2,3,2,2,0,10,92,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",8,2,0,1,2,3,6,2,0,22,86,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",2,1,0,1,2,0,0,0,0,3,88,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,313,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,8,0,0,1,2,3,8,2,0,22,72,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,331,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,8,0,0,1,2,3,4,4,0,20,82,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",2,0,0,1,2,3,2,2,0,10,86,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",4,0,0,1,2,3,2,2,0,12,86,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",0,0,0,1,2,0,0,0,0,3,92,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",0,0,0,1,2,0,0,0,0,3,98,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",0,0,0,1,2,0,0,0,0,3,102,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",2,0,0,1,2,3,2,2,0,10,104,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,442,    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);,2,0,0,1,2,3,6,2,0,13,114,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,461,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =,2,0,0,0,0,3,0,2,0,7,64,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,0,1,2,3,2,2,0,10,74,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",0,0,0,1,2,0,0,0,0,3,82,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",0,0,0,1,2,0,0,0,0,3,76,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,2,0,10,76,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",4,0,0,1,2,5,2,4,0,16,76,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,108,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",0,0,0,1,2,0,0,0,0,3,110,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",0,0,0,1,2,0,0,0,0,3,80,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",0,0,0,1,2,0,0,0,0,3,82,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,697,"    public static final String OS_NAME = getSystemProperty(""os.name"");",0,0,0,1,2,0,0,0,0,3,66,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,715,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",6,3,0,1,2,3,4,2,0,18,72,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,733,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,753,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ?",4,2,0,1,2,3,2,2,0,15,85,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,772,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,2,0,0,1,2,3,4,2,0,11,70,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,790,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,809,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",2,0,0,1,2,3,2,2,0,10,78,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,827,"    public static final String USER_NAME = getSystemProperty(""user.name"");",2,0,0,1,2,3,2,2,0,10,70,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,845,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",0,0,0,1,2,0,0,0,0,3,78,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,860,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,870,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",4,0,0,1,2,6,4,4,0,20,71,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,880,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,890,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",4,0,0,1,2,3,6,0,0,15,71,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,900,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",4,1,0,1,2,3,2,0,0,11,71,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,910,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,2,0,11,71,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,922,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",2,0,0,1,2,3,2,0,0,8,71,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,942,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",2,0,0,1,2,3,2,0,0,8,64,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,954,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",4,0,0,1,2,3,2,0,0,12,68,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,966,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",0,0,0,1,2,0,0,0,0,3,66,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,978,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",0,0,0,2,4,0,0,0,0,6,97,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,990,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",2,0,0,1,2,0,0,0,0,2,64,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1002,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",4,0,0,1,2,0,0,0,0,5,73,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1014,"    public static final boolean IS_OS_FREE_BSD = getOSMatchesName(""FreeBSD"");",0,0,0,1,2,0,0,0,0,3,73,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1026,"    public static final boolean IS_OS_OPEN_BSD = getOSMatchesName(""OpenBSD"");",10,2,0,1,2,9,6,0,0,29,73,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1038,"    public static final boolean IS_OS_NET_BSD = getOSMatchesName(""NetBSD"");",0,0,0,1,2,0,0,0,0,3,71,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1050,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",6,0,0,1,2,3,2,0,0,12,65,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1062,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",0,0,0,1,2,0,0,2,0,4,72,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1074,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",2,0,0,1,2,3,2,0,0,8,69,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1086,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX,0,0,0,0,0,0,4,0,0,5,111,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1099,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,2,0,0,1,2,3,4,0,0,9,85,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1111,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",0,0,0,1,2,0,0,0,0,3,93,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1123,"    public static final boolean IS_OS_WINDOWS_2003 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.2"");",0,0,0,1,2,0,0,0,0,3,93,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1135,"    public static final boolean IS_OS_WINDOWS_2008 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" Server 2008"", ""6.1"");",2,0,0,1,2,0,6,2,0,10,110,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1147,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",2,1,1,1,2,0,0,2,0,10,98,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1160,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",2,0,0,1,2,0,0,0,0,2,98,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1173,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",4,0,0,1,2,3,12,2,0,23,91,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1186,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",0,0,0,1,2,0,0,0,0,3,96,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1199,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",2,0,0,1,2,3,4,0,0,10,91,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1212,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",2,0,0,1,2,0,0,0,0,2,94,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1224,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",0,0,0,1,2,0,0,0,0,3,90,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1265,"        return isJavaVersionMatch(JAVA_SPECIFICATION_VERSION, versionPrefix);",0,0,0,1,2,1,0,0,0,4,69,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1276,"        return isOSMatch(OS_NAME, OS_VERSION, osNamePrefix, osVersionPrefix);",0,0,0,1,2,1,0,0,0,4,69,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1286,"        return isOSNameMatch(OS_NAME, osNamePrefix);",4,1,0,1,2,4,8,0,0,18,44,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1304,            return System.getProperty(property);,0,0,0,1,2,1,0,0,0,4,36,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1371,        return JAVA_SPECIFICATION_VERSION_AS_ENUM.atLeast(requiredVersion);,0,0,0,1,2,1,0,0,0,4,67,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1387,        if (version == null) {,2,1,0,1,3,0,0,0,0,3,22,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1390,        return version.startsWith(versionPrefix);,0,0,0,1,2,1,6,0,0,6,41,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1406,        if (osName == null || osVersion == null) {,4,3,0,1,3,0,0,0,0,7,42,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1409,        return osName.startsWith(osNamePrefix) && osVersion.startsWith(osVersionPrefix);,0,1,0,2,4,1,12,0,0,13,80,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1423,        if (osName == null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,15,1426,        return osName.startsWith(osNamePrefix);,0,0,0,1,2,1,0,0,0,4,39,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,89,"    JavaVersion(final float value, final String name) {",6,0,0,1,3,2,0,2,0,10,51,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,90,        this.value = value;,4,3,1,0,0,0,0,0,0,18,19,0,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,91,        this.name = name;,4,0,0,0,0,0,0,0,0,5,17,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,92,    },0,0,0,0,1,0,4,0,0,5,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,32,"    JAVA_0_9(1.5f, ""0.9""),",2,1,0,1,2,0,0,0,0,3,22,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,37,"    JAVA_1_1(1.1f, ""1.1""),",4,2,0,1,2,0,6,0,0,12,22,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,42,"    JAVA_1_2(1.2f, ""1.2""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,47,"    JAVA_1_3(1.3f, ""1.3""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,52,"    JAVA_1_4(1.4f, ""1.4""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,57,"    JAVA_1_5(1.5f, ""1.5""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,62,"    JAVA_1_6(1.6f, ""1.6""),",2,0,0,1,2,3,2,2,0,10,22,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,67,"    JAVA_1_7(1.7f, ""1.7""),",2,0,0,1,2,0,0,0,0,3,22,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,72,"    JAVA_1_8(1.8f, ""1.8"");",0,0,0,1,2,0,0,0,0,3,22,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,27,public enum JavaVersion {,0,0,0,0,1,0,0,0,0,1,25,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,105,        return this.value >= requiredVersion.value;,6,2,0,0,0,1,0,0,0,8,43,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,132,"        if (""0.9"".equals(nom)) {",2,0,0,2,5,0,6,2,0,11,24,0,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,134,"        } else if (""1.1"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,136,"        } else if (""1.2"".equals(nom)) {",0,0,0,2,6,0,0,0,0,8,31,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,138,"        } else if (""1.3"".equals(nom)) {",0,0,0,2,6,0,0,0,0,8,31,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,140,"        } else if (""1.4"".equals(nom)) {",4,0,0,2,6,6,22,4,0,37,31,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,142,"        } else if (""1.5"".equals(nom)) {",0,0,0,2,6,0,4,0,0,5,31,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,144,"        } else if (""1.6"".equals(nom)) {",0,0,0,2,6,0,0,0,0,8,31,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,146,"        } else if (""1.7"".equals(nom)) {",2,0,0,2,6,3,6,2,0,15,31,0,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/JavaVersion,15,147,            return JAVA_1_7;,2,0,0,0,0,1,0,0,0,2,16,13,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,52,    public static final CharSequenceTranslator ESCAPE_JAVA = ,12,2,0,0,0,6,12,6,0,41,56,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,72,    public static final CharSequenceTranslator ESCAPE_ECMASCRIPT = ,2,1,0,0,0,0,0,0,0,3,62,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,94,    public static final CharSequenceTranslator ESCAPE_XML = ,0,0,0,0,0,0,0,0,0,0,55,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,109,    public static final CharSequenceTranslator ESCAPE_HTML3 = ,2,0,0,0,0,3,0,2,0,7,57,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,124,    public static final CharSequenceTranslator ESCAPE_HTML4 = ,6,1,0,0,0,3,6,6,0,23,57,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,140,    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();,4,0,0,1,2,3,0,4,0,11,73,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,183,    public static final CharSequenceTranslator UNESCAPE_JAVA = ,4,0,0,0,0,3,0,2,0,9,58,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,206,    public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;,0,0,0,0,0,0,0,0,0,0,79,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,217,    public static final CharSequenceTranslator UNESCAPE_HTML3 = ,0,0,0,0,0,0,0,0,0,0,59,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,233,    public static final CharSequenceTranslator UNESCAPE_HTML4 = ,0,0,0,0,0,0,0,0,0,0,59,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,250,    public static final CharSequenceTranslator UNESCAPE_XML = ,8,7,0,0,0,0,4,0,0,19,57,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,266,    public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();,0,0,0,1,2,0,0,0,0,3,77,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,433,        return ESCAPE_HTML4.translate(input);,2,0,0,1,2,1,0,2,0,4,37,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,32,public abstract class CharSequenceTranslator {,0,0,0,0,1,0,0,0,0,1,46,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,54,        if (input == null) {,0,0,0,1,3,0,0,0,0,4,20,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,58,            StringWriter writer = new StringWriter(input.length() * 2);,2,1,0,2,4,0,0,0,0,3,59,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,59,"            translate(input, writer);",0,0,0,1,2,0,0,0,0,3,25,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,60,            return writer.toString();,0,0,0,1,2,1,0,0,0,4,25,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,76,        if (out == null) {,0,0,0,1,3,0,0,0,0,4,18,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,79,        if (input == null) {,0,0,0,1,3,0,0,0,0,4,20,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,82,        int pos = 0;,8,0,0,0,0,0,0,2,0,10,12,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,83,        int len = input.length();,0,0,0,1,2,0,0,0,0,3,25,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,84,        while (pos < len) {,0,0,0,1,3,0,0,2,0,3,19,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,85,"            int consumed = translate(input, pos, out);",4,2,0,1,2,0,14,0,0,22,42,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,86,            if (consumed == 0) {,0,0,0,1,3,0,0,0,0,4,20,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,87,"                char[] c = Character.toChars(Character.codePointAt(input, pos));",0,0,0,3,6,0,0,0,0,9,64,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,88,                out.write(c);,0,0,0,1,2,0,0,0,0,3,13,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,89,                pos+= c.length;,8,0,0,0,0,0,0,0,0,9,15,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,90,                continue;,0,0,0,0,0,0,0,0,0,0,9,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,94,            for (int pt = 0; pt < consumed; pt++) {,0,0,0,1,3,0,0,0,0,4,39,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,95,"                pos += Character.charCount(Character.codePointAt(input, pos));",0,0,0,2,4,0,14,0,0,14,62,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,97,        },2,0,0,0,1,0,0,0,0,2,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,98,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,108,        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];,0,0,0,2,4,0,0,0,0,1,87,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,109,        newArray[0] = this;,0,0,1,1,2,0,0,0,0,3,19,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,110,"        System.arraycopy(translators, 0, newArray, 1, translators.length);",0,0,0,1,2,0,8,0,0,8,66,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,15,111,        return new AggregateTranslator(newArray);,6,0,0,1,2,1,8,0,0,15,41,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,40,    public AggregateTranslator(CharSequenceTranslator... translators) {,2,0,0,1,3,0,6,4,0,12,67,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,41,        this.translators = ArrayUtils.clone(translators);,2,1,0,1,2,0,0,0,0,3,49,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,42,    },2,1,0,0,1,0,4,0,0,7,1,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,51,        for (CharSequenceTranslator translator : translators) {,14,2,0,1,3,0,0,0,0,17,55,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,52,"            int consumed = translator.translate(input, index, out);",0,0,0,1,2,0,0,0,0,3,55,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,53,            if(consumed != 0) {,0,0,0,1,3,0,0,0,0,4,19,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,54,                return consumed;,8,1,0,0,0,1,0,0,0,9,16,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,15,57,        return 0;,0,0,0,0,0,1,0,0,0,1,9,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,145,    static class CsvEscaper extends CharSequenceTranslator {,2,0,0,0,1,3,12,0,0,17,56,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,149,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,0,0,0,1,2,0,0,0,0,3,70,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,150,        private static final char[] CSV_SEARCH_CHARS = ,2,0,0,1,2,3,0,0,0,5,46,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,268,    static class CsvUnescaper extends CharSequenceTranslator {,4,0,0,0,1,0,0,2,0,6,58,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,272,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,4,0,0,1,2,3,6,2,0,15,70,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,15,273,        private static final char[] CSV_SEARCH_CHARS = ,0,0,0,1,2,0,0,2,0,4,46,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,53,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,4,1,0,1,2,0,8,0,0,13,86,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,63,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,94,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,68,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,70,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",4,3,0,1,2,0,2,0,0,9,53,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,15,71,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",4,0,0,1,2,0,4,2,0,10,47,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,459,            return createInteger(str);,0,0,0,1,2,1,4,0,0,4,26,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,470,            if (expPos > -1) {,8,2,0,1,3,0,0,0,0,13,18,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,476,                dec = str.substring(decPos + 1);,4,1,0,1,2,0,4,0,0,10,32,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,478,"            mant = str.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,481,                if (expPos > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,484,"                mant = str.substring(0, expPos);",0,0,0,1,2,0,0,0,0,3,32,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,517,                        Float f = NumberUtils.createFloat(numeric);,2,0,0,1,2,0,6,2,0,10,43,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,518,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,521,                            return f;,0,0,0,0,0,1,0,0,0,1,9,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,531,                        Double d = NumberUtils.createDouble(numeric);,2,0,0,1,2,0,6,2,0,10,45,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,532,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,533,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,545,"                    throw new NumberFormatException(str + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,551,            if (expPos > -1 && expPos < str.length() - 1) {,8,4,0,2,5,0,4,0,0,17,47,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,554,                exp = null;,4,1,0,0,0,0,0,0,0,6,11,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,556,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,559,                    return createInteger(str);,0,0,0,1,2,1,4,0,0,4,26,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,560,                } catch (NumberFormatException nfe) { // NOPMD,0,0,0,1,4,0,0,0,0,5,46,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,564,                    return createLong(str);,0,0,0,1,2,1,4,0,0,4,23,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,572,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,0,0,0,2,4,0,0,0,0,6,55,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,574,                    Float f = createFloat(str);,0,0,0,1,2,0,0,0,0,3,27,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,575,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,576,                        return f;,2,0,0,0,0,1,0,0,0,2,9,12,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,445,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,448,        if (StringUtils.isBlank(str)) {,2,0,0,2,5,3,6,4,0,16,31,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,451,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,4,0,0,5,27,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,458,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,0,0,3,7,0,0,0,0,10,52,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,461,        char lastChar = str.charAt(str.length() - 1);,4,1,0,2,4,0,8,2,0,16,45,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,465,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,466,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,468,        if (decPos > -1) {,4,1,0,1,3,0,4,0,0,10,18,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,480,            if (expPos > -1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,486,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,488,            dec = null;,0,0,0,0,0,0,0,0,0,0,11,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,490,        if (!Character.isDigit(lastChar) && lastChar != '.') {,2,2,0,2,5,0,6,0,0,12,54,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,491,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,494,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,497,"            String numeric = str.substring(0, str.length() - 1);",4,0,0,2,4,0,0,0,0,5,52,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,498,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,499,            switch (lastChar) {,2,0,0,1,3,3,16,4,0,25,19,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,502,                    if (dec == null,2,1,0,0,1,0,0,0,0,3,15,9,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,506,                            return createLong(numeric);,0,0,0,1,2,1,4,0,0,4,27,12,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,605,        if (str == null) {,2,0,0,1,3,3,0,4,0,9,18,2,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,608,        for (int i = str.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,609,            if (str.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,27,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,610,                return false;,2,0,0,0,0,1,0,8,0,11,13,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,627,        if (str == null) {,8,1,0,1,3,0,4,0,0,14,18,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,630,        return Float.valueOf(str);,0,0,0,1,2,1,6,0,0,6,26,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,643,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,646,        return Double.valueOf(str);,0,0,0,1,2,1,6,0,0,6,27,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,660,        if (str == null) {,2,1,0,1,3,0,8,0,0,11,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,664,        return Integer.decode(str);,0,0,0,1,2,1,6,2,0,10,27,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,677,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,680,        return Long.valueOf(str);,0,0,0,1,2,1,6,0,0,6,25,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1287,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1290,        for (int i = 0; i < str.length(); i++) {,8,1,0,2,5,3,6,0,0,20,40,1,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1291,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,40,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,1295,        return true;,2,0,0,0,0,1,4,2,0,9,12,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,183,        return cs == null || cs.length() == 0;,4,3,1,1,2,4,8,4,0,31,38,1,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,223,        if (cs == null || (strLen = cs.length()) == 0) {,6,3,0,3,7,0,10,4,0,24,48,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,226,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,227,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,54,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,228,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,147,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");",2,0,0,1,2,3,4,2,0,12,72,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,704,    private static boolean sunAvailable = false;,0,0,0,0,0,0,0,2,0,3,44,9,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,705,    private static Method  sunDecomposeMethod = null;,10,1,0,0,0,0,6,0,0,18,49,3,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,706,"    private static final Pattern sunPattern = Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");//$NON-NLS-1$",2,0,0,2,4,3,4,2,0,12,108,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,708,    private static boolean java6Available = false;,2,0,0,0,0,2,0,0,0,5,46,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,709,    private static Method  java6NormalizeMethod = null;,0,0,0,0,0,0,0,0,0,0,51,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,710,    private static Object  java6NormalizerFormNFD = null;,0,0,0,0,0,0,0,0,0,0,53,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,711,    private static final Pattern java6Pattern = sunPattern;,4,0,0,0,0,3,8,2,0,17,55,1,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,717,            Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader(),0,0,0,2,4,0,0,0,0,6,77,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,719,"            java6NormalizerFormNFD = normalizerFormClass.getField(""NFD"").get(null);//$NON-NLS-1$",4,0,0,2,4,0,10,0,0,16,84,1,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,720,            Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),0,0,0,2,4,0,0,0,0,6,73,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,722,"            java6NormalizeMethod = normalizerClass.getMethod(""normalize"",",0,0,0,0,1,0,0,0,0,1,61,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,724,            java6Available = true;,0,1,0,0,0,0,4,0,0,5,22,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,733,        },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,737,            Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,3,6,2,0,13,73,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,739,"            sunDecomposeMethod = normalizerClass.getMethod(""decompose"",",0,0,0,0,1,0,0,0,0,1,59,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,744,        } catch (NoSuchMethodException e) {,0,0,0,1,4,0,0,0,0,5,35,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,745,            sunAvailable = false;,0,0,0,0,0,0,0,0,0,0,21,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,16,750,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,33,    public static final Long LONG_ZERO = Long.valueOf(0L);,4,0,0,1,2,3,4,2,0,14,54,1,0.0125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,35,    public static final Long LONG_ONE = Long.valueOf(1L);,0,0,0,1,2,0,0,0,0,3,53,4,0.0125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,37,    public static final Long LONG_MINUS_ONE = Long.valueOf(-1L);,0,1,1,1,2,0,0,0,0,5,60,6,0.0125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,39,    public static final Integer INTEGER_ZERO = Integer.valueOf(0);,2,0,0,1,2,3,4,2,0,11,62,2,0.0125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,41,    public static final Integer INTEGER_ONE = Integer.valueOf(1);,2,0,0,1,2,3,8,2,0,16,61,1,0.0125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,43,    public static final Integer INTEGER_MINUS_ONE = Integer.valueOf(-1);,2,0,0,1,2,3,4,2,0,12,68,2,0.0125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,45,    public static final Short SHORT_ZERO = Short.valueOf((short) 0);,2,0,0,2,4,3,4,2,0,11,64,2,0.0125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,47,    public static final Short SHORT_ONE = Short.valueOf((short) 1);,2,0,0,2,4,3,4,2,0,11,63,2,0.0125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,49,    public static final Short SHORT_MINUS_ONE = Short.valueOf((short) -1);,2,0,0,2,4,3,4,2,0,12,70,2,0.0125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,51,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,4,0,0,2,4,6,4,4,0,20,60,2,0.0125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,53,    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);,2,0,0,2,4,3,4,2,0,11,59,2,0.0125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,55,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,4,0,0,2,4,3,4,2,0,16,66,1,0.0125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,57,    public static final Double DOUBLE_ZERO = Double.valueOf(0.0d);,6,0,0,1,2,3,4,2,0,16,62,1,0.0125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,59,    public static final Double DOUBLE_ONE = Double.valueOf(1.0d);,4,0,0,1,2,0,0,2,0,6,61,4,0.0125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,61,    public static final Double DOUBLE_MINUS_ONE = Double.valueOf(-1.0d);,8,1,0,1,2,3,4,2,0,20,68,1,0.0125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,63,    public static final Float FLOAT_ZERO = Float.valueOf(0.0f);,4,0,0,1,2,3,4,2,0,14,59,1,0.0125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,65,    public static final Float FLOAT_ONE = Float.valueOf(1.0f);,2,0,0,1,2,3,4,2,0,11,58,2,0.0125,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,16,67,    public static final Float FLOAT_MINUS_ONE = Float.valueOf(-1.0f);,0,0,0,1,2,0,0,0,0,3,65,4,0.0125,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1416,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,1417,    },0,0,0,0,1,0,0,0,0,1,1,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,89,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,111,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,129,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",0,0,0,1,2,0,0,0,0,3,80,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,147,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,165,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",0,0,0,1,2,0,0,0,0,3,92,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,186,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",6,4,0,1,2,3,10,2,0,27,86,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,204,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,222,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",0,0,0,1,2,0,0,0,0,3,82,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,240,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",0,0,0,1,2,0,0,0,0,3,88,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,259,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",0,0,0,1,2,0,0,0,0,3,78,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,277,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",10,2,0,1,2,4,18,6,0,42,88,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,295,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,313,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,0,0,0,1,2,0,6,0,0,6,72,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,331,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,0,0,0,1,2,0,0,0,0,3,82,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,349,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",4,1,0,1,2,0,0,0,0,5,86,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,368,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",0,0,0,1,2,0,0,0,0,3,86,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,387,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",12,1,1,1,2,6,6,8,0,39,92,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,405,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",0,0,0,1,2,0,0,0,0,3,98,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,423,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",2,1,0,1,2,0,0,0,0,3,102,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,441,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",2,0,0,1,2,0,6,2,0,10,104,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,442,    private static final JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM = JavaVersion.get(JAVA_SPECIFICATION_VERSION);,4,1,0,1,2,0,0,0,0,6,114,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,461,    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY =,0,0,0,0,0,0,0,0,0,0,64,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,480,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",10,0,0,1,2,0,6,2,0,19,74,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,498,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,0,0,1,2,3,8,2,0,16,82,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,516,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",2,0,0,1,2,3,2,2,0,10,76,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,535,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",4,0,0,1,2,3,2,2,0,14,76,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,553,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",0,0,0,1,2,0,0,0,0,3,76,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,571,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",8,1,0,1,2,0,0,0,0,10,104,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,589,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",0,0,0,1,2,0,0,0,0,3,108,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,607,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",0,0,0,1,2,0,0,0,0,3,110,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,625,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",4,2,0,1,2,0,8,0,0,15,80,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,643,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",6,0,0,1,2,7,8,6,0,29,82,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,661,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",8,5,0,1,2,0,14,2,0,31,80,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,679,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,0,0,2,0,4,66,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,697,"    public static final String OS_NAME = getSystemProperty(""os.name"");",2,0,0,1,2,3,6,2,0,14,66,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,715,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",2,0,0,1,2,3,2,2,0,10,72,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,733,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",14,1,0,1,2,3,2,2,0,26,80,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,753,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ?",2,1,0,1,2,3,2,2,0,12,85,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,772,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,790,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,2,0,0,1,2,3,4,2,0,11,72,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,16,809,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",0,0,0,1,2,0,0,0,0,3,78,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,506,        return ESCAPE_XML.translate(input);,0,0,0,1,2,1,6,0,0,6,35,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,57,        return 0;,2,1,0,0,0,1,0,0,0,3,9,4,0.07692,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,51,        for (CharSequenceTranslator translator : translators) {,4,0,0,1,3,0,0,2,0,6,55,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,52,"            int consumed = translator.translate(input, index, out);",2,0,0,1,2,0,10,0,0,12,55,7,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,53,            if(consumed != 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,78,        return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,65,        int max = longest;,4,0,0,0,0,0,0,0,0,4,18,5,0.0625,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,66,        if (index + longest > input.length()) {,10,3,0,2,5,0,4,0,0,17,39,4,0.0625,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,70,        for (int i = max; i >= shortest; i--) {,10,1,0,1,3,0,0,0,0,12,39,4,0.0625,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,71,"            CharSequence subSeq = input.subSequence(index, index + i);",6,1,0,1,2,0,6,2,0,15,58,6,0.0625,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,72,            CharSequence result = lookupMap.get(subSeq);,2,0,0,1,2,0,6,2,0,10,44,6,0.0625,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,73,            if (result != null) {,2,1,0,1,3,0,0,0,0,3,21,6,0.0625,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,46,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,50,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,54,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,58,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,62,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,66,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,70,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,74,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,78,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,4,1,0,2,4,3,0,4,0,12,68,1,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,82,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,86,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,90,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,94,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,2,1,0,2,4,3,14,2,0,22,71,1,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,98,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,102,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,106,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,4,1,0,2,4,3,0,0,0,8,67,1,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,110,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,4,0,0,2,4,3,0,4,0,12,74,1,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,114,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,118,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,4,1,0,2,4,3,0,4,0,12,80,1,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,317,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,17,320,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,268,    static class CsvUnescaper extends CharSequenceTranslator {,2,0,0,0,1,1,0,2,0,5,58,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,272,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,2,0,0,1,2,3,6,2,0,13,70,3,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,273,        private static final char[] CSV_SEARCH_CHARS = ,0,0,0,1,2,0,0,0,0,3,46,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,114,        CharSequenceTranslator[] newArray = new CharSequenceTranslator[translators.length + 1];,6,1,0,2,4,0,0,4,0,11,87,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,115,        newArray[0] = this;,0,0,0,1,2,0,0,0,0,3,19,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,116,"        System.arraycopy(translators, 0, newArray, 1, translators.length);",4,0,0,1,2,0,8,0,0,12,66,5,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/CharSequenceTranslator,17,117,        return new AggregateTranslator(newArray);,2,0,0,1,2,1,0,2,0,4,41,5,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,52,    public static final CharSequenceTranslator ESCAPE_JAVA = ,2,0,0,0,0,3,0,2,0,7,56,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,72,    public static final CharSequenceTranslator ESCAPE_ECMASCRIPT = ,0,0,0,0,0,0,0,0,0,0,62,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,94,    public static final CharSequenceTranslator ESCAPE_XML = ,2,1,0,0,0,0,0,0,0,3,55,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,109,    public static final CharSequenceTranslator ESCAPE_HTML3 = ,2,0,0,0,0,3,0,2,0,7,57,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,124,    public static final CharSequenceTranslator ESCAPE_HTML4 = ,2,0,0,0,0,3,0,2,0,7,57,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,140,    public static final CharSequenceTranslator ESCAPE_CSV = new CsvEscaper();,2,0,0,1,2,3,0,4,0,9,73,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,183,    public static final CharSequenceTranslator UNESCAPE_JAVA = ,4,1,0,0,0,3,0,2,0,10,58,1,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,206,    public static final CharSequenceTranslator UNESCAPE_ECMASCRIPT = UNESCAPE_JAVA;,0,0,0,0,0,0,0,0,0,0,79,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,217,    public static final CharSequenceTranslator UNESCAPE_HTML3 = ,2,0,0,0,0,3,0,2,0,7,59,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,233,    public static final CharSequenceTranslator UNESCAPE_HTML4 = ,0,0,0,0,0,0,0,0,0,0,59,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,250,    public static final CharSequenceTranslator UNESCAPE_XML = ,2,0,0,0,0,3,0,2,0,7,57,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,266,    public static final CharSequenceTranslator UNESCAPE_CSV = new CsvUnescaper();,2,1,0,1,2,3,6,4,0,17,77,1,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,40,    public AggregateTranslator(CharSequenceTranslator... translators) {,8,1,0,1,3,1,0,2,0,12,67,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,41,        this.translators = ArrayUtils.clone(translators);,2,0,0,1,2,0,6,0,0,9,49,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/AggregateTranslator,17,42,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,145,    static class CsvEscaper extends CharSequenceTranslator {,2,0,0,0,1,1,0,2,0,5,56,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,149,        private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,0,0,0,1,2,0,0,0,0,3,70,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringEscapeUtils,17,150,        private static final char[] CSV_SEARCH_CHARS = ,2,0,0,1,2,3,0,0,0,5,46,3,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,35,    private static final String[][] ISO8859_1_ESCAPE = {,2,0,0,2,5,3,6,2,0,13,52,1,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,139,    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);,0,0,0,3,6,0,0,0,0,9,78,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,148,    private static final String[][] HTML40_EXTENDED_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,350,    private static final String[][] HTML40_EXTENDED_UNESCAPE = invert(HTML40_EXTENDED_ESCAPE);,0,0,0,3,6,0,0,0,0,9,90,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,359,    private static final String[][] BASIC_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,48,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,371,    private static final String[][] BASIC_UNESCAPE = invert(BASIC_ESCAPE);,2,0,0,3,6,0,12,2,0,16,70,3,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,378,    private static final String[][] APOS_ESCAPE = {,0,0,0,2,5,0,0,0,0,7,47,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,387,    private static final String[][] APOS_UNESCAPE = invert(APOS_ESCAPE);,0,0,0,3,6,0,0,0,0,9,68,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,396,    private static final String[][] JAVA_CTRL_CHARS_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,58,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,409,    private static final String[][] JAVA_CTRL_CHARS_UNESCAPE = invert(JAVA_CTRL_CHARS_ESCAPE);,2,0,0,3,6,3,4,2,0,11,90,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,34,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },12,1,0,5,10,4,8,0,0,24,80,1,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,138,    public static String[][] ISO8859_1_UNESCAPE() { return ISO8859_1_UNESCAPE.clone(); },2,1,0,5,10,3,18,2,0,25,84,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,147,    public static String[][] HTML40_EXTENDED_ESCAPE() { return HTML40_EXTENDED_ESCAPE.clone(); },0,1,0,5,10,1,8,0,0,11,92,3,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,349,    public static String[][] HTML40_EXTENDED_UNESCAPE() { return HTML40_EXTENDED_UNESCAPE.clone(); },0,0,0,5,10,1,0,0,0,16,96,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,358,    public static String[][] BASIC_ESCAPE() { return BASIC_ESCAPE.clone(); },4,1,0,5,10,3,8,4,0,21,72,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,370,    public static String[][] BASIC_UNESCAPE() { return BASIC_UNESCAPE.clone(); },8,1,0,5,10,1,0,0,0,10,76,5,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,377,    public static String[][] APOS_ESCAPE() { return APOS_ESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,70,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,386,    public static String[][] APOS_UNESCAPE() { return APOS_UNESCAPE.clone(); },2,0,0,5,10,3,4,2,0,10,74,2,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,395,    public static String[][] JAVA_CTRL_CHARS_ESCAPE() { return JAVA_CTRL_CHARS_ESCAPE.clone(); },4,3,0,5,10,1,0,0,0,7,92,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,408,    public static String[][] JAVA_CTRL_CHARS_UNESCAPE() { return JAVA_CTRL_CHARS_UNESCAPE.clone(); },2,1,0,5,10,1,6,0,0,9,96,3,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,417,        String[][] newarray = new String[array.length][2];,8,0,0,4,8,0,0,8,0,16,50,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,418,        for(int i = 0; i<array.length; i++) {,2,0,0,1,3,0,4,2,0,8,37,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,419,            newarray[i][0] = array[i][1];,0,0,1,4,8,0,6,0,0,15,29,3,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,420,            newarray[i][1] = array[i][0];,0,0,1,4,8,0,0,0,0,9,29,6,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,17,422,        return newarray;,2,0,0,0,0,1,0,2,0,5,16,3,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,40,    public LookupTranslator(CharSequence[]... lookup) {,0,0,0,2,5,0,0,0,0,7,51,4,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,41,"        lookupMap = new HashMap<CharSequence, CharSequence>();",2,1,0,1,2,0,0,0,0,3,54,4,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,42,        int _shortest = Integer.MAX_VALUE;,0,0,0,0,0,0,0,0,0,0,34,4,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,43,        int _longest = 0;,4,0,0,0,0,0,0,0,0,5,17,5,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,44,        if (lookup != null) {,6,1,0,1,3,0,0,0,0,7,21,4,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,45,            for (CharSequence[] seq : lookup) {,4,0,0,2,5,0,0,2,0,6,35,6,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,46,"                this.lookupMap.put(seq[0], seq[1]);",2,0,1,3,6,0,2,0,0,8,35,9,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,47,                int sz = seq[0].length();,2,0,1,2,4,0,2,0,0,6,25,9,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,48,                if (sz < _shortest) {,4,1,0,1,3,0,0,0,0,5,21,8,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,49,                    _shortest = sz;,0,0,0,0,0,0,0,0,0,0,15,4,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,51,                if (sz > _longest) {,0,0,0,1,3,0,0,0,0,4,20,4,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,52,                    _longest = sz;,4,0,0,0,0,0,6,0,0,10,14,5,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,56,        shortest = _shortest;,2,0,0,0,0,0,0,2,0,4,21,8,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,57,        longest = _longest;,4,0,0,0,0,0,0,0,0,5,19,4,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/LookupTranslator,17,58,    },4,3,0,0,1,0,8,0,0,15,1,6,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,17,34,public class OctalUnescaper extends CharSequenceTranslator {,0,0,0,0,1,0,0,0,0,1,60,4,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/OctalUnescaper,17,36,    private static int OCTAL_MAX = 377;,6,0,0,0,0,0,4,0,0,11,35,9,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/UnicodeEscaper,17,85,"        return new UnicodeEscaper(codepointLow, codepointHigh, false);",0,0,0,1,2,1,0,0,0,4,62,4,0.04545,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,409,"        TimeZoneDisplayKey key = new TimeZoneDisplayKey(tz, daylight, style, locale);",10,0,0,1,2,0,0,4,0,14,77,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,410,        String value = cTimeZoneDisplayCache.get(key);,2,1,0,1,2,0,0,0,0,3,46,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,411,        if (value == null) {,2,1,0,1,3,0,0,0,0,3,20,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,413,"            value = tz.getDisplayName(daylight, style, locale);",4,0,0,1,2,0,10,0,0,15,51,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,414,"            String prior = cTimeZoneDisplayCache.putIfAbsent(key, value);",2,0,0,1,2,0,8,2,0,12,61,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,415,            if (prior != null) {,0,0,0,1,3,0,0,0,0,4,20,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,419,        return value;,6,0,0,0,0,1,0,0,0,7,13,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,555,                if (tokenLen >= 4) {,0,0,0,1,3,0,0,0,0,4,20,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,558,"                    rule = new TimeZoneNameRule(mTimeZone, mLocale, TimeZone.SHORT);",10,0,0,1,2,0,0,2,0,13,64,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,560,                break;,4,3,0,0,0,0,0,0,0,7,6,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1240,"            appendTo(buffer, calendar.get(Calendar.YEAR) % 100);",4,1,0,2,4,0,8,0,0,13,52,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1241,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1247,            buffer.append((char)(value / 10 + '0'));,4,2,0,3,6,0,4,0,0,11,40,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1248,            buffer.append((char)(value % 10 + '0'));,0,0,0,3,6,0,0,0,0,9,40,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1249,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1484,"                           boolean daylight, int style, Locale locale) {",2,1,0,0,2,0,0,0,0,3,45,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1485,            mTimeZone = timeZone;,2,0,0,0,0,3,0,2,0,7,21,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1486,            if (daylight) {,0,0,0,1,3,0,0,0,0,4,15,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1487,                style |= 0x80000000;,0,0,0,0,0,0,4,0,0,5,20,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1489,            mStyle = style;,4,0,0,0,0,0,0,0,0,5,15,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1490,            mLocale = locale;,2,0,0,0,0,3,0,4,0,9,17,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1491,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1498,            return (mStyle * 31 + mLocale.hashCode() ) * 31 + mTimeZone.hashCode();,4,5,0,3,6,1,8,0,0,17,71,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1387,"        TimeZoneNameRule(TimeZone timeZone, Locale locale, int style) {",8,0,0,1,3,0,0,4,0,12,63,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1388,            mTimeZone = timeZone;,0,0,0,0,0,0,0,0,0,0,21,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1390,"            mStandard = getTimeZoneDisplay(timeZone, false, style, locale);",4,1,0,1,2,0,12,4,0,23,63,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1391,"            mDaylight = getTimeZoneDisplay(timeZone, true, style, locale);",4,0,0,1,2,0,0,0,0,5,62,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1392,        },2,0,0,0,1,0,0,0,0,2,1,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1398,"            return Math.max(mStandard.length(), mDaylight.length());",0,0,0,3,6,1,12,0,0,12,56,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,498,                    rule = TwoDigitYearField.INSTANCE;,2,0,0,0,0,3,0,0,0,5,34,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,500,                break;,2,0,0,0,0,3,2,2,0,10,6,2,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,503,"                    rule = new TextField(Calendar.MONTH, months);",0,0,0,1,2,0,0,0,0,3,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,546,"                rule = new TextField(Calendar.AM_PM, AmPmStrings);",8,0,0,1,2,0,0,2,0,11,50,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,547,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1023,            buffer.append(mValues[calendar.get(mField)]);,2,0,0,3,6,0,0,0,0,3,45,12,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1024,        },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1062,            } else if (value < 100) {,4,1,0,1,4,0,0,4,0,9,25,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1063,                buffer.append((char)(value / 10 + '0'));,0,0,0,3,6,0,0,0,0,9,40,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1064,                buffer.append((char)(value % 10 + '0'));,0,0,0,3,6,0,0,0,0,9,40,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1226,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1227,        },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,18,1220,        static final TwoDigitYearField INSTANCE = new TwoDigitYearField();,2,0,0,1,2,2,0,4,0,8,66,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,41,            int start = index + 2;,4,1,0,0,0,0,0,0,0,5,22,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,42,            boolean isHex = false;,2,0,0,0,0,0,0,0,0,3,22,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,44,            char firstChar = input.charAt(start);,2,0,0,1,2,0,6,0,0,8,37,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,82,        return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.57143,1,1,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,46,                start++;,2,0,0,0,0,0,0,0,0,3,8,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,19,47,                isHex = true;,2,0,0,0,0,0,0,0,0,4,13,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3257,            return null;,2,0,0,0,0,4,4,2,0,12,12,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3256,        if (array == null) {,2,0,0,1,3,0,16,0,0,19,20,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3260,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3290,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3293,        int noOfItems = (endIndex - startIndex);,6,1,0,1,2,0,0,0,0,7,40,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3294,        if (noOfItems <= 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3295,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3298,        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,0,0,0,6,12,0,0,0,0,18,116,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3300,        for (int i = startIndex; i < endIndex; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3301,            if (i > startIndex) {,6,2,0,1,3,0,0,0,0,8,21,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3302,                buf.append(separator);,2,0,0,1,2,3,6,4,0,15,22,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3304,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3305,                buf.append(array[i]);,0,0,1,2,4,0,4,0,0,8,21,9,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3308,        return buf.toString();,0,0,1,1,2,1,0,0,0,9,22,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3230,"        return join(elements, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3336,            return null;,2,0,0,0,0,1,6,0,0,8,12,7,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3380,            return EMPTY;,0,0,0,0,0,1,0,0,0,1,13,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3335,        if (array == null) {,4,0,0,1,3,0,0,0,0,5,20,8,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3338,"        return join(array, separator, 0, array.length);",4,0,0,1,2,1,6,0,0,10,47,5,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3369,        if (array == null) {,4,2,0,1,3,0,8,0,0,16,20,3,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3372,        if (separator == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3373,            separator = EMPTY;,2,1,0,0,0,0,0,0,0,3,18,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3378,        int noOfItems = (endIndex - startIndex);,8,1,0,1,2,0,0,0,0,9,40,3,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3379,        if (noOfItems <= 0) {,0,0,0,1,3,0,0,0,0,4,21,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3383,        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());,8,2,1,7,14,0,8,6,0,33,133,1,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3385,        for (int i = startIndex; i < endIndex; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3386,            if (i > startIndex) {,4,1,0,1,3,0,0,0,0,5,21,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3389,            if (array[i] != null) {,0,1,1,2,5,0,0,0,0,5,23,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,3393,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,147,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");",2,0,0,1,2,3,4,2,0,12,72,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,704,    private static boolean sunAvailable = false;,2,1,0,0,0,0,0,0,0,4,44,4,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,705,    private static Method  sunDecomposeMethod = null;,2,0,0,0,0,2,0,2,0,6,49,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,706,"    private static final Pattern sunPattern = Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");//$NON-NLS-1$",2,0,0,2,4,3,4,2,0,12,108,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,708,    private static boolean java6Available = false;,2,0,0,0,0,2,0,0,0,5,46,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,709,    private static Method  java6NormalizeMethod = null;,2,0,0,0,0,2,0,2,0,6,51,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,710,    private static Object  java6NormalizerFormNFD = null;,2,0,0,0,0,2,0,2,0,6,53,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,711,    private static final Pattern java6Pattern = sunPattern;,6,0,0,0,0,6,0,6,0,18,55,2,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,717,            Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader(),0,0,0,2,4,0,0,0,0,6,77,4,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,719,"            java6NormalizerFormNFD = normalizerFormClass.getField(""NFD"").get(null);//$NON-NLS-1$",8,0,0,2,4,0,0,2,0,11,84,9,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,720,            Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),2,0,0,2,4,0,6,2,0,10,73,6,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,722,"            java6NormalizeMethod = normalizerClass.getMethod(""normalize"",",0,0,0,0,1,0,0,0,0,1,61,4,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,724,            java6Available = true;,2,0,0,0,0,0,0,0,0,4,22,6,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,733,        },0,0,0,0,1,0,0,0,0,1,1,4,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,737,            Class<?> normalizerClass = Thread.currentThread().getContextClassLoader(),0,0,0,2,4,0,0,0,0,6,73,4,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,739,"            sunDecomposeMethod = normalizerClass.getMethod(""decompose"",",0,0,0,0,1,0,0,0,0,1,59,4,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,744,        } catch (NoSuchMethodException e) {,0,0,0,1,4,0,0,0,0,5,35,4,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,745,            sunAvailable = false;,2,0,0,0,0,0,0,0,0,4,21,7,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,747,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01717,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,158,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,159,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,725,        } catch (ClassNotFoundException e) {,0,0,0,1,4,0,0,0,0,5,36,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,726,            java6Available = false;,0,0,0,0,0,0,0,0,0,0,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,727,        } catch (NoSuchFieldException e) {,2,0,1,1,4,0,0,2,0,7,34,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,728,            java6Available = false;,2,0,0,0,0,0,0,0,0,4,23,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,729,        } catch (IllegalAccessException e) {,2,0,0,1,4,0,0,2,0,4,36,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,730,            java6Available = false;,2,0,1,0,0,0,0,2,0,8,23,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,731,        } catch (NoSuchMethodException e) {,2,0,0,1,4,0,0,2,0,4,35,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,732,            java6Available = false;,2,0,0,0,0,0,0,0,0,4,23,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,741,            sunAvailable = true;,2,0,0,0,0,0,0,0,0,4,20,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,746,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,742,        } catch (ClassNotFoundException e) {,0,0,0,1,4,0,0,0,0,5,36,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,743,            sunAvailable = false;,0,0,0,0,0,0,0,0,0,0,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,183,        return cs == null || cs.length() == 0;,2,0,0,1,2,1,0,0,0,2,38,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,202,        return !StringUtils.isEmpty(cs);,0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,223,        if (cs == null || (strLen = cs.length()) == 0) {,2,1,0,3,7,0,0,0,0,3,48,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,224,            return true;,4,1,0,0,0,1,0,0,0,5,12,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,226,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,227,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,54,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,228,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,231,        return true;,0,0,0,0,0,1,4,0,0,4,12,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,252,        return !StringUtils.isBlank(cs);,0,0,0,1,2,1,6,0,0,7,32,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,281,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,307,        String ts = trim(str);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,308,        return isEmpty(ts) ? null : ts;,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,333,        return str == null ? EMPTY : str.trim();,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,361,"        return strip(str, null);",0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,388,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,389,            return null;,0,0,0,0,0,1,4,0,0,5,12,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,391,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,392,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,418,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,448,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,449,            return str;,0,0,0,0,0,1,0,0,0,1,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,451,"        str = stripStart(str, stripChars);",16,2,1,1,2,0,14,0,0,39,34,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,452,"        return stripEnd(str, stripChars);",6,0,0,1,2,1,0,4,0,10,33,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,481,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,482,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,484,        int start = 0;,2,1,0,0,0,0,0,0,0,3,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,485,        if (stripChars == null) {,4,1,1,1,3,0,4,0,0,18,25,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,486,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,2,2,0,4,9,0,4,0,0,9,72,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,487,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,489,        } else if (stripChars.length() == 0) {,2,0,0,2,6,3,0,2,0,9,38,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,490,            return str;,4,1,0,0,0,1,0,0,0,5,11,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,492,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND)) {,0,0,0,5,11,0,0,0,0,16,89,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,493,                start++;,4,0,0,0,0,0,0,0,0,5,8,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,496,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,526,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,527,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,530,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,531,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,6,4,0,4,9,0,8,0,0,18,67,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,532,                end--;,6,0,0,0,0,0,0,4,0,11,6,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,534,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,20,535,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,60,"    public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone(""GMT"");",0,0,0,1,2,0,0,0,0,3,73,4,0.00926,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,88,    private static final int[][] fields = {,0,0,0,2,5,0,0,0,0,7,39,4,0.00926,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1832,            super();,2,0,0,1,2,3,6,4,0,15,8,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1833,            this.endFinal = endFinal;,4,0,0,0,0,0,0,0,0,5,25,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1834,            spot = startFinal;,4,0,0,0,0,0,0,0,0,5,18,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1835,"            spot.add(Calendar.DATE, -1);",4,0,0,1,2,0,4,0,0,9,28,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1836,        },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1844,            return spot.before(endFinal);,0,0,0,1,2,1,6,0,0,6,29,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1853,            if (spot.equals(endFinal)) {,0,0,0,2,5,0,0,0,0,7,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1854,                throw new NoSuchElementException();,4,0,0,1,2,0,0,2,0,7,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1856,"            spot.add(Calendar.DATE, 1);",0,0,0,1,2,0,6,0,0,6,27,13,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1857,            return (Calendar) spot.clone();,0,0,0,2,4,1,4,2,0,6,31,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1867,            throw new UnsupportedOperationException();,0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,1821,    static class DateIterator implements Iterator<Calendar> {,0,0,0,0,1,0,0,0,0,1,57,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,158,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,159,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,176,        if (date1 == null || date2 == null) {,2,0,0,1,3,0,6,0,0,8,37,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,177,"            throw new IllegalArgumentException(""The date must not be null"");",0,0,0,1,2,0,0,0,0,3,64,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,179,        Calendar cal1 = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,180,        cal1.setTime(date1);,0,0,0,1,2,0,6,0,0,6,20,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,181,        Calendar cal2 = Calendar.getInstance();,12,1,0,1,2,0,12,2,0,27,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,182,        cal2.setTime(date2);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,183,"        return isSameDay(cal1, cal2);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,200,        if (cal1 == null || cal2 == null) {,4,3,0,1,3,0,0,0,0,7,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/DateUtils,21,201,"            throw new IllegalArgumentException(""The date must not be null"");",10,1,0,1,2,0,0,2,0,16,64,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,216,"            throw new ArithmeticException(""The denominator must not be zero"");",0,0,0,1,2,0,0,2,0,3,66,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,223,            numerator/=2; denominator/=2;,6,0,0,0,0,3,4,0,0,18,29,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,226,            if (numerator==Integer.MIN_VALUE ||,6,2,0,0,1,0,6,0,0,14,35,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,228,"                throw new ArithmeticException(""overflow: can't negate"");",0,0,0,1,2,0,0,2,0,3,56,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,230,            numerator = -numerator;,6,1,0,0,0,0,8,0,0,17,23,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,231,            denominator = -denominator;,4,0,0,0,0,0,0,0,0,6,27,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,475,        if (numerator == 0) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,476,            return equals(ZERO) ? this : ZERO;,2,0,0,1,2,1,4,0,0,6,34,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,478,"        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);",2,0,0,2,4,0,10,0,0,12,66,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,479,        if (gcd == 1) {,0,0,0,1,3,0,0,0,0,4,15,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,480,            return this;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,482,"        return Fraction.getFraction(numerator / gcd, denominator / gcd);",0,0,0,1,2,1,0,0,0,4,64,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,591,        if (u>0) { u=-u; } // make u negative,8,2,0,2,4,0,0,0,0,12,37,4,0.57143,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,592,        if (v>0) { v=-v; } // make v negative,6,1,0,2,4,0,0,0,0,9,37,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,594,        int k=0;,2,0,0,0,0,0,0,0,0,2,8,5,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,595,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,6,7,0,3,7,0,0,0,0,13,72,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,598,        if (k==31) {,0,0,0,1,3,0,0,0,0,4,12,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,603,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,8,3,0,3,6,0,0,0,0,12,38,5,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,609,            while ((t&1)==0) { // while t is even..,2,2,0,2,5,0,0,0,0,4,39,6,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,613,            if (t>0) {,6,1,0,1,3,0,0,0,0,8,10,3,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/Fraction,22,614,                u = -t;,0,0,0,0,0,0,0,0,0,0,7,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,216,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,217,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",2,0,0,1,2,3,0,4,0,10,69,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,2,0,0,1,2,3,0,4,0,10,68,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,4,0,0,1,2,3,0,4,0,14,69,1,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",2,0,0,2,4,3,2,4,0,12,94,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,2,0,0,1,2,3,0,4,0,9,65,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,2,0,0,1,2,3,0,4,0,10,77,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",2,0,0,2,4,3,2,4,0,12,88,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,0,0,0,1,2,0,0,0,0,3,63,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,108,        return SPLIT_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,267,"        return isMatch(buffer, pos, 0, buffer.length);",0,0,0,1,2,1,4,0,0,4,46,5,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,417,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,418,        },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,389,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,390,        },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,318,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,319,            this.ch = ch;,0,0,0,0,0,0,0,0,0,0,13,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,320,        },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,284,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,285,            this.chars = chars.clone();,4,1,0,1,2,0,4,2,0,13,27,1,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,286,            Arrays.sort(this.chars);,0,0,0,1,2,0,0,0,0,3,24,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,287,        },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/StrMatcher,23,300,"            return Arrays.binarySearch(chars, buffer[pos]) >= 0 ? 1 : 0;",0,1,1,2,4,1,6,0,0,11,60,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,151,        ArrayList<Format> foundFormats = new ArrayList<Format>();,2,0,0,1,2,0,0,8,0,10,57,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,152,        ArrayList<String> foundDescriptions = new ArrayList<String>();,2,0,0,1,2,0,0,8,0,10,62,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,153,        StringBuilder stripCustom = new StringBuilder(pattern.length());,4,0,0,2,4,3,6,6,0,20,64,1,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,155,        ParsePosition pos = new ParsePosition(0);,0,0,0,1,2,0,0,0,0,3,41,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,156,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,157,        int fmtCount = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,158,        while (pos.getIndex() < pattern.length()) {,0,0,0,3,7,0,0,0,0,10,43,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,159,            switch (c[pos.getIndex()]) {,0,0,0,3,7,0,0,0,0,10,28,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/ExtendedMessageFormat,23,164,                fmtCount++;,2,0,0,0,0,0,0,0,0,3,11,7,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,454,            return null;,2,0,0,0,0,3,4,2,0,10,12,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,467,            return createInteger(str);,4,0,0,1,2,4,2,2,0,12,26,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,478,            if (expPos > -1) {,0,0,0,1,3,0,0,0,0,4,18,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,479,                if (expPos < decPos || expPos > str.length()) {,14,3,0,2,5,0,8,0,0,25,47,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,482,"                dec = str.substring(decPos + 1, expPos);",0,0,0,1,2,0,0,0,0,3,40,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,484,                dec = str.substring(decPos + 1);,6,1,1,1,2,0,4,0,0,14,32,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,486,"            mant = str.substring(0, decPos);",2,0,0,1,2,0,6,0,0,9,32,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,489,                if (expPos > str.length()) {,2,1,0,2,5,0,4,0,0,7,28,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,500,"                exp = str.substring(expPos + 1, str.length() - 1);",12,3,0,2,4,0,8,0,0,25,50,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,525,                        Float f = NumberUtils.createFloat(numeric);,2,0,0,1,2,0,6,2,0,10,43,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,526,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,16,0,0,23,65,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,529,                            return f;,0,0,0,0,0,1,0,0,0,1,9,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,539,                        Double d = NumberUtils.createDouble(numeric);,0,0,0,1,2,0,0,0,0,3,45,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,540,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,541,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,547,                        return createBigDecimal(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,559,            if (expPos > -1 && expPos < str.length() - 1) {,6,5,0,2,5,0,8,0,0,20,47,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,560,"                exp = str.substring(expPos + 1, str.length());",6,1,0,2,4,3,8,0,0,19,46,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,562,                exp = null;,2,0,0,0,0,0,6,0,0,9,11,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,564,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,567,                    return createInteger(str);,2,0,0,1,2,1,4,4,0,10,26,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,568,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,572,                    return createLong(str);,10,0,0,1,2,1,4,2,0,17,23,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,573,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,576,                return createBigInteger(str);,2,1,0,1,2,1,4,0,0,7,29,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,580,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,582,                    Float f = createFloat(str);,6,2,0,1,2,0,4,0,0,13,27,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,583,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,584,                        return f;,2,0,0,0,0,1,0,0,0,2,9,12,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,590,                    Double d = createDouble(str);,6,0,0,1,2,1,4,4,0,15,29,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,24,240,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,453,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,456,        if (StringUtils.isBlank(str)) {,2,1,0,2,5,0,6,0,0,9,31,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,459,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,4,0,0,5,27,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,466,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,469,        char lastChar = str.charAt(str.length() - 1);,0,0,0,2,4,0,0,0,0,6,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,473,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,474,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,476,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,488,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,494,                mant = str;,6,1,0,0,0,0,0,0,0,8,11,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,496,            dec = null;,2,0,0,0,0,0,0,0,0,3,11,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,498,        if (!Character.isDigit(lastChar) && lastChar != '.') {,0,0,0,2,5,0,0,0,0,7,54,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,499,            if (expPos > -1 && expPos < str.length() - 1) {,6,5,0,2,5,0,4,0,0,16,47,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,502,                exp = null;,0,0,0,0,0,0,0,0,0,0,11,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,505,"            String numeric = str.substring(0, str.length() - 1);",0,0,0,2,4,0,0,0,0,6,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,506,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,0,0,0,2,4,0,0,0,0,6,55,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,507,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,510,                    if (dec == null,2,1,0,0,1,0,0,0,0,3,15,9,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,514,                            return createLong(numeric);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,613,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,616,        for (int i = str.length() - 1; i >= 0; i--) {,0,0,0,2,5,0,0,0,0,7,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,617,            if (str.charAt(i) != '0') {,2,0,0,2,5,0,4,0,0,7,27,9,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,618,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,635,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,638,        return Float.valueOf(str);,0,0,0,1,2,1,6,0,0,6,26,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,651,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,654,        return Double.valueOf(str);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,668,        if (str == null) {,8,1,0,1,3,3,6,4,0,22,18,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,672,        return Integer.decode(str);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,701,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,704,        return new BigInteger(str);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,717,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,721,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,724,        return new BigDecimal(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,685,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,688,        return Long.valueOf(str);,0,0,0,1,2,1,0,0,0,4,25,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1295,        if (StringUtils.isEmpty(str)) {,4,0,0,2,5,0,2,0,0,6,31,9,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1298,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1299,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,11,40,6,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,1303,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,24,199,        return cs == null || cs.length() == 0;,0,0,0,1,2,1,0,0,0,4,38,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,24,239,        if (cs == null || (strLen = cs.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,48,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,24,242,        for (int i = 0; i < strLen; i++) {,4,1,0,1,3,0,0,0,0,5,34,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,24,243,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,54,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,24,244,                return false;,0,4,0,0,0,1,12,0,0,18,13,6,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,24,163,"    private static final Pattern WHITESPACE_BLOCK = Pattern.compile(""\\s+"");",0,0,0,1,2,0,0,0,0,3,72,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,41,    public static final Long LONG_ZERO = new Long(0L);,0,0,0,1,2,0,0,0,0,3,50,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,43,    public static final Long LONG_ONE = new Long(1L);,4,0,0,1,2,0,6,0,0,10,49,3,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,0,0,0,1,2,0,4,0,0,5,56,8,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,47,    public static final Integer INTEGER_ZERO = new Integer(0);,0,0,0,1,2,0,0,0,0,3,58,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,49,    public static final Integer INTEGER_ONE = new Integer(1);,2,0,0,1,2,3,0,4,0,9,57,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,51,    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);,0,0,0,1,2,0,0,0,0,3,64,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,53,    public static final Short SHORT_ZERO = new Short((short) 0);,0,0,0,2,4,0,0,0,0,6,60,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,55,    public static final Short SHORT_ONE = new Short((short) 1);,0,0,0,2,4,0,0,0,0,6,59,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,2,0,0,2,4,3,0,4,0,10,66,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,59,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,2,0,0,2,4,3,4,2,0,11,60,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,61,    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);,0,0,0,2,4,0,0,0,0,6,59,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,63,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,2,0,0,2,4,0,0,0,0,2,66,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,65,    public static final Double DOUBLE_ZERO = new Double(0.0d);,0,0,0,1,2,0,0,0,0,3,58,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,4,4,0,1,2,0,8,0,0,17,57,7,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,69,    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);,0,0,0,1,2,0,0,0,0,3,64,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,8,3,0,1,2,0,0,0,0,12,55,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,73,    public static final Float FLOAT_ONE = new Float(1.0f);,0,0,0,1,2,0,0,0,0,3,54,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,75,    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);,2,0,0,1,2,3,0,4,0,10,61,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,85,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,86,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,107,"        return toInt(str, 0);",0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,128,        if(str == null) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,129,            return defaultValue;,4,0,1,0,0,1,4,0,0,13,20,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,132,            return Integer.parseInt(str);,0,0,0,1,2,1,6,0,0,6,29,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,133,        } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,134,            return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,156,"        return toLong(str, 0L);",2,0,0,1,2,1,4,0,0,8,23,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,177,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,178,            return defaultValue;,2,0,0,0,0,1,0,0,0,2,20,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,181,            return Long.parseLong(str);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,182,        } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,183,            return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,206,"        return toFloat(str, 0.0f);",0,0,0,1,2,1,0,0,0,4,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,229,      if (str == null) {,6,1,0,1,3,0,0,2,0,9,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,230,          return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,233,          return Float.parseFloat(str);,2,0,0,1,2,1,4,0,0,6,29,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,234,      } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,235,          return defaultValue;,2,1,0,0,0,1,10,0,0,14,20,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,258,"        return toDouble(str, 0.0d);",0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,281,      if (str == null) {,22,3,0,1,3,0,4,2,0,35,18,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,282,          return defaultValue;,0,0,0,0,0,1,4,0,0,4,20,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,285,          return Double.parseDouble(str);,10,2,0,1,2,1,4,0,0,17,31,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,286,      } catch (NumberFormatException nfe) {,4,0,0,1,4,0,0,2,0,6,37,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,287,          return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,310,"        return toByte(str, (byte) 0);",4,0,0,2,4,1,4,0,0,9,29,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,331,        if(str == null) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,332,            return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,335,            return Byte.parseByte(str);,2,0,0,1,2,1,4,2,0,9,27,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,336,        } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,337,            return defaultValue;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,24,359,"        return toShort(str, (short) 0);",0,0,0,2,4,1,0,0,0,7,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,30,    public static String[][] ISO8859_1_ESCAPE() { return ISO8859_1_ESCAPE.clone(); },0,0,0,5,10,1,0,0,0,16,80,4,0.05,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,31,    private static final String[][] ISO8859_1_ESCAPE = {,2,0,0,2,5,3,0,2,0,7,52,2,0.04545,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/EntityArrays,25,131,    private static final String[][] ISO8859_1_UNESCAPE = invert(ISO8859_1_ESCAPE);,2,0,0,3,6,3,4,2,0,11,78,2,0.04545,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1171,            buffer.append(mValues[calendar.get(mField)]);,0,0,1,3,6,0,10,0,0,12,45,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1172,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1130,            buffer.append(mValue);,0,0,0,1,2,0,6,0,0,6,22,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1131,        },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,820,        Calendar c = new GregorianCalendar(mTimeZone);,4,0,0,1,2,0,0,4,0,8,46,4,0.03333,1,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,821,        c.setTime(date);,0,0,0,1,2,0,6,0,0,6,16,5,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,822,"        return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();",2,0,0,3,6,1,6,2,0,10,70,5,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1115,        StringLiteral(String value) {,6,0,0,1,3,3,2,4,0,16,29,1,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1116,            mValue = value;,10,0,0,0,0,0,4,0,0,15,15,1,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1117,        },2,2,1,0,1,0,4,4,0,21,1,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1123,            return mValue.length();,0,0,0,1,2,1,4,0,0,4,23,6,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1348,"            appendTo(buffer, calendar.get(mField));",2,0,0,2,4,0,14,0,0,16,39,1,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1349,        },0,0,0,0,1,0,6,0,0,7,1,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1355,            if (value < 100) {,0,0,0,1,3,0,0,0,0,4,18,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1356,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1357,                buffer.append((char)(value % 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1361,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,196,"        return getInstance(pattern, null, locale);",0,0,0,1,2,1,0,0,0,4,42,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,645,"                rule = new TextField(Calendar.DAY_OF_WEEK, tokenLen < 4 ? shortWeekdays : weekdays);",2,0,0,1,2,0,4,0,0,6,84,5,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,646,                break;,0,0,0,0,0,0,4,0,0,5,6,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,687,                    rule = new StringLiteral(sub);,4,0,0,1,2,0,0,2,0,7,30,9,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,689,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,738,                    if (i + 1 < length && pattern.charAt(i + 1) == '\'') {,0,0,0,2,5,0,0,0,0,7,54,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,743,                        inLiteral = !inLiteral;,0,0,0,0,0,0,6,0,0,6,23,5,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1148,"        TextField(int field, String[] values) {",2,0,0,2,5,0,0,0,0,3,39,7,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1149,            mField = field;,4,0,0,0,0,0,0,0,0,5,15,5,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1150,            mValues = values;,6,1,0,0,0,0,0,0,0,8,17,1,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1151,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1157,            int max = 0;,2,0,0,0,0,0,0,0,0,2,12,6,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1158,            for (int i=mValues.length; --i >= 0; ) {,8,1,0,1,3,0,0,0,0,10,40,5,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1159,                int len = mValues[i].length();,2,0,1,2,4,0,12,0,0,19,30,1,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1160,                if (len > max) {,4,1,0,1,3,0,0,0,0,5,16,7,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1161,                    max = len;,6,0,0,0,0,3,0,4,0,14,10,1,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1163,            },0,0,0,0,1,0,0,0,0,1,1,4,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,1164,            return max;,0,0,0,0,0,1,0,0,0,1,11,4,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,888,        Rule[] rules = mRules;,0,0,0,1,2,0,0,0,0,3,22,4,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,26,889,        int len = mRules.length;,0,0,0,0,0,0,0,0,0,0,24,4,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,454,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,467,            return createInteger(str);,0,0,0,1,2,1,4,0,0,4,26,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,478,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,479,                if (expPos < decPos) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,482,"                dec = str.substring(decPos + 1, expPos);",0,0,0,1,2,0,0,0,0,3,40,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,484,                dec = str.substring(decPos + 1);,4,1,0,1,2,0,4,0,0,10,32,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,486,"            mant = str.substring(0, decPos);",0,0,0,1,2,0,0,0,0,3,32,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,489,"                mant = str.substring(0, expPos);",0,0,0,1,2,0,0,0,0,3,32,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,497,"                exp = str.substring(expPos + 1, str.length() - 1);",0,0,0,2,4,0,0,0,0,6,50,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,522,                        Float f = NumberUtils.createFloat(numeric);,0,0,0,1,2,0,0,0,0,3,43,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,523,                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,526,                            return f;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,536,                        Double d = NumberUtils.createDouble(numeric);,0,0,0,1,2,0,8,0,0,8,45,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,537,                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,2,3,0,5,11,0,8,0,0,15,65,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,538,                            return d;,2,0,0,0,0,1,0,0,0,2,9,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,544,                        return createBigDecimal(numeric);,0,0,0,1,2,1,4,0,0,4,33,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,556,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,557,"                exp = str.substring(expPos + 1, str.length());",2,1,0,2,4,0,0,0,0,3,46,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,559,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,561,            if (dec == null && exp == null) {,4,3,0,1,3,0,0,0,0,7,33,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,564,                    return createInteger(str);,0,0,0,1,2,1,4,0,0,4,26,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,565,                } catch (NumberFormatException nfe) {,4,0,0,1,4,0,4,2,0,12,37,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,569,                    return createLong(str);,0,0,0,1,2,1,4,0,0,4,23,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,570,                } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,573,                return createBigInteger(str);,0,0,0,1,2,1,4,0,0,4,29,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,577,                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,579,                    Float f = createFloat(str);,2,0,0,1,2,0,4,2,0,8,27,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,580,                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,4,3,0,5,11,2,8,4,0,23,65,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,581,                        return f;,4,0,0,0,0,3,0,4,0,10,9,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,587,                    Double d = createDouble(str);,8,0,0,1,2,0,0,4,0,12,29,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,453,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,456,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,459,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,2,0,0,4,27,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,466,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",6,0,0,3,7,0,0,4,0,10,52,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,469,        char lastChar = str.charAt(str.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,473,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,474,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,0,0,0,2,4,0,0,0,0,6,53,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,476,        if (decPos > -1) {,2,0,0,1,3,0,0,2,0,4,18,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,488,            if (expPos > -1) {,8,1,0,1,3,0,4,2,0,17,18,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,491,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,493,            dec = null;,4,0,0,0,0,0,0,0,0,5,11,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,495,        if (!Character.isDigit(lastChar) && lastChar != '.') {,0,0,0,2,5,0,0,0,0,7,54,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,496,            if (expPos > -1 && expPos < str.length() - 1) {,0,0,0,2,5,0,0,0,0,7,47,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,499,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,502,"            String numeric = str.substring(0, str.length() - 1);",2,1,0,2,4,0,8,2,0,13,52,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,503,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,504,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,507,                    if (dec == null,2,2,0,0,1,0,8,0,0,12,15,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,511,                            return createLong(numeric);,0,0,0,1,2,1,0,0,0,4,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,610,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,613,        for (int i = str.length() - 1; i >= 0; i--) {,2,0,0,2,5,0,4,0,0,8,45,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,614,            if (str.charAt(i) != '0') {,0,1,0,2,5,0,6,0,0,8,27,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,615,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,632,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,635,        return Float.valueOf(str);,0,1,0,1,2,1,24,0,0,25,26,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,648,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,651,        return Double.valueOf(str);,6,0,0,1,2,1,6,0,0,13,27,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,665,        if (str == null) {,4,2,0,1,3,0,10,0,0,16,18,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,669,        return Integer.decode(str);,8,3,0,1,2,1,0,0,0,12,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,698,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,701,        return new BigInteger(str);,2,0,0,1,2,1,0,2,0,4,27,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,714,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,718,        if (StringUtils.isBlank(str)) {,2,1,0,2,5,0,6,0,0,9,31,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,721,        return new BigDecimal(str);,2,0,0,1,2,2,0,0,0,3,27,2,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,682,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,685,        return Long.valueOf(str);,2,1,0,1,2,1,6,0,0,9,25,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1292,        if (StringUtils.isEmpty(str)) {,2,0,0,2,5,0,6,0,0,8,31,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1295,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1296,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,10,0,0,11,40,6,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,1300,        return true;,0,0,0,0,0,1,0,2,0,4,12,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,27,193,        return cs == null || cs.length() == 0;,0,0,0,1,2,1,0,0,0,4,38,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,27,233,        if (cs == null || (strLen = cs.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,48,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,27,236,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,27,237,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,2,1,0,4,9,0,8,2,0,14,54,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,27,238,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,41,    public static final Long LONG_ZERO = new Long(0L);,2,0,0,1,2,3,0,4,0,9,50,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,43,    public static final Long LONG_ONE = new Long(1L);,4,0,0,1,2,4,0,8,0,16,49,1,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,0,0,0,1,2,0,0,0,0,3,56,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,47,    public static final Integer INTEGER_ZERO = new Integer(0);,0,0,0,1,2,0,10,0,0,10,58,5,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,49,    public static final Integer INTEGER_ONE = new Integer(1);,10,1,0,1,2,3,6,4,0,25,57,1,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,51,    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);,4,0,0,1,2,6,0,16,0,27,64,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,53,    public static final Short SHORT_ZERO = new Short((short) 0);,4,0,0,2,4,0,0,0,0,5,60,6,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,55,    public static final Short SHORT_ONE = new Short((short) 1);,2,0,0,2,4,3,0,4,0,9,59,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,2,0,0,2,4,3,0,4,0,10,66,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,59,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,2,0,0,2,4,3,4,2,0,11,60,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,61,    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);,0,0,0,2,4,0,0,0,0,6,59,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,63,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,6,0,0,2,4,3,4,6,0,20,66,1,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,65,    public static final Double DOUBLE_ZERO = new Double(0.0d);,0,0,0,1,2,0,0,0,0,3,58,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,2,0,0,1,2,3,0,4,0,9,57,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,69,    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);,2,1,0,1,2,0,0,0,0,3,64,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,4,0,0,1,2,4,0,6,0,14,55,1,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,73,    public static final Float FLOAT_ONE = new Float(1.0f);,0,0,0,1,2,0,0,0,0,3,54,4,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,27,75,    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);,2,0,0,1,2,3,0,4,0,10,61,2,0.01786,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1821,        super();,10,3,0,1,2,0,10,0,0,23,8,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,1822,    },0,0,0,0,1,0,6,0,0,6,1,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,104,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,127,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",0,0,0,1,2,0,0,0,0,3,78,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,146,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",0,0,0,1,2,0,0,0,0,3,80,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,165,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",0,0,0,1,2,0,0,0,0,3,80,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,184,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",4,0,0,1,2,3,6,6,0,20,92,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,206,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",4,0,0,1,2,3,2,2,0,12,86,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,225,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,1,0,1,2,0,8,0,0,11,90,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,244,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",0,0,0,1,2,0,0,0,0,3,82,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,263,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",0,0,0,1,2,0,0,0,0,3,88,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,283,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",0,0,0,1,2,0,0,0,0,3,78,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,302,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",0,0,0,1,2,0,0,0,0,3,88,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,321,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,0,4,0,0,7,78,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,340,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,0,0,0,1,2,0,0,0,0,3,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,359,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,0,0,0,1,2,0,0,0,0,3,82,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,378,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",0,0,0,1,2,0,0,0,0,3,86,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,398,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,3,2,2,0,10,86,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,418,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",0,0,0,1,2,0,0,0,0,3,92,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,437,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",0,0,0,1,2,0,0,0,0,3,98,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,456,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",0,0,0,1,2,0,4,0,0,4,102,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,475,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",0,0,0,1,2,0,0,0,0,3,104,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,495,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = getSystemProperty(""java.util.prefs.PreferencesFactory"");",0,0,0,1,2,0,0,0,0,3,121,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,514,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,1,1,2,3,2,2,0,14,74,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,533,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,1,0,1,2,0,2,0,0,5,82,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,552,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",0,0,0,1,2,0,0,0,0,3,76,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,572,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,1,0,1,2,0,4,0,0,7,76,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,591,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",6,1,0,1,2,3,2,2,0,15,76,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,610,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,629,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,108,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,648,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",0,0,0,1,2,0,0,0,0,3,110,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,667,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",2,0,0,1,2,1,4,2,0,9,80,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,686,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",0,0,0,1,2,0,0,0,0,3,82,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,705,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",0,0,0,1,2,0,0,0,0,3,80,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,724,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",0,0,0,1,2,0,0,0,0,3,66,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,743,"    public static final String OS_NAME = getSystemProperty(""os.name"");",0,0,0,1,2,0,0,0,0,3,66,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,762,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",0,0,0,1,2,0,0,0,0,3,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,781,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,802,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ? getSystemProperty(""user.region"")",2,1,0,2,4,3,4,2,0,16,118,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,822,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,6,1,0,1,2,0,0,0,0,7,70,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,841,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,0,0,0,1,2,0,0,0,0,3,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,861,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",0,0,0,1,2,0,0,0,0,3,78,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,880,"    public static final String USER_NAME = getSystemProperty(""user.name"");",0,0,0,1,2,0,0,0,0,3,70,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,899,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",4,0,0,1,2,3,8,2,0,19,78,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,27,917,    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();,0,0,0,1,2,0,0,0,0,3,74,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,57,"                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);",2,0,0,3,6,0,14,0,0,17,77,10,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,61,            },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,63,                out.write(entityValue);,0,0,0,1,2,0,6,0,0,6,23,7,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,64,            return 2 + (end - start) + (isHex ? 1 : 0) + 1;,6,2,0,2,4,1,0,0,0,8,47,6,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang3/text/translate/NumericEntityUnescaper,28,38,            int start = index + 2;,4,1,0,0,0,0,0,0,0,5,22,7,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1717,            return ArrayUtils.EMPTY_INT_ARRAY;,4,0,0,0,0,1,0,0,0,4,34,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,4,0,0,2,4,5,0,4,0,13,74,1,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,4,0,0,2,4,6,4,2,0,17,61,1,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,22,7,0,2,4,6,8,4,0,51,64,1,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,8,3,0,2,4,3,16,6,0,37,74,1,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,29,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,4,4,0,15,80,1,0.00485,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,104,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,127,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,0,4,0,9,78,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,146,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",4,0,0,1,2,3,6,4,0,18,80,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,165,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",6,0,0,1,2,3,2,2,0,15,80,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,184,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",4,1,0,1,2,3,2,2,0,13,92,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,206,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,225,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,244,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,263,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,283,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,302,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",2,0,0,1,2,3,2,2,0,10,88,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,321,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",4,0,0,1,2,6,2,2,0,15,78,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,340,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,4,0,0,1,2,3,8,4,0,19,72,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,359,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,2,0,0,1,2,3,4,2,0,11,82,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,378,"    public static final String JAVA_LIBRARY_PATH = getSystemProperty(""java.library.path"");",10,3,0,1,2,6,8,6,0,34,86,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,398,"    public static final String JAVA_RUNTIME_NAME = getSystemProperty(""java.runtime.name"");",2,0,0,1,2,0,0,0,0,2,86,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,418,"    public static final String JAVA_RUNTIME_VERSION = getSystemProperty(""java.runtime.version"");",0,0,0,1,2,0,0,0,0,3,92,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,437,"    public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(""java.specification.name"");",2,0,0,1,2,3,2,2,0,10,98,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,456,"    public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(""java.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,102,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,475,"    public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(""java.specification.version"");",2,0,0,1,2,3,2,2,0,10,104,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,495,"    public static final String JAVA_UTIL_PREFS_PREFERENCES_FACTORY = getSystemProperty(""java.util.prefs.PreferencesFactory"");",10,1,0,1,2,3,2,2,0,20,121,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,514,"    public static final String JAVA_VENDOR = getSystemProperty(""java.vendor"");",2,0,0,1,2,3,2,2,0,10,74,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,533,"    public static final String JAVA_VENDOR_URL = getSystemProperty(""java.vendor.url"");",2,0,0,1,2,3,2,2,0,10,82,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,552,"    public static final String JAVA_VERSION = getSystemProperty(""java.version"");",4,0,0,1,2,3,2,4,0,14,76,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,572,"    public static final String JAVA_VM_INFO = getSystemProperty(""java.vm.info"");",2,0,0,1,2,3,2,2,0,10,76,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,591,"    public static final String JAVA_VM_NAME = getSystemProperty(""java.vm.name"");",2,0,0,1,2,3,2,2,0,10,76,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,610,"    public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(""java.vm.specification.name"");",2,0,0,1,2,3,2,2,0,10,104,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,629,"    public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(""java.vm.specification.vendor"");",2,0,0,1,2,3,2,2,0,10,108,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,648,"    public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(""java.vm.specification.version"");",2,0,0,1,2,3,2,2,0,10,110,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,667,"    public static final String JAVA_VM_VENDOR = getSystemProperty(""java.vm.vendor"");",0,0,0,1,2,0,0,0,0,3,80,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,686,"    public static final String JAVA_VM_VERSION = getSystemProperty(""java.vm.version"");",0,0,0,1,2,0,0,0,0,3,82,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,705,"    public static final String LINE_SEPARATOR = getSystemProperty(""line.separator"");",0,0,0,1,2,0,0,0,0,3,80,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,724,"    public static final String OS_ARCH = getSystemProperty(""os.arch"");",2,0,0,1,2,3,2,2,0,10,66,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,743,"    public static final String OS_NAME = getSystemProperty(""os.name"");",6,3,0,1,2,0,8,0,0,17,66,3,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,762,"    public static final String OS_VERSION = getSystemProperty(""os.version"");",0,0,0,1,2,0,0,0,0,3,72,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,781,"    public static final String PATH_SEPARATOR = getSystemProperty(""path.separator"");",2,0,0,1,2,3,2,2,0,10,80,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,802,"    public static final String USER_COUNTRY = getSystemProperty(""user.country"") == null ? getSystemProperty(""user.region"")",0,0,0,2,4,0,6,0,0,6,118,5,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,822,    public static final String USER_DIR = getSystemProperty(USER_DIR_KEY);,0,0,0,1,2,0,0,0,0,3,70,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,841,    public static final String USER_HOME = getSystemProperty(USER_HOME_KEY);,0,0,0,1,2,0,0,0,0,3,72,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,861,"    public static final String USER_LANGUAGE = getSystemProperty(""user.language"");",0,0,0,1,2,0,0,0,0,3,78,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,880,"    public static final String USER_NAME = getSystemProperty(""user.name"");",2,0,0,1,2,3,2,2,0,10,70,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,899,"    public static final String USER_TIMEZONE = getSystemProperty(""user.timezone"");",2,0,0,1,2,3,2,2,0,10,78,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,917,    public static final String JAVA_VERSION_TRIMMED = getJavaVersionTrimmed();,2,0,0,1,2,3,2,2,0,9,74,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,943,    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();,0,0,0,1,2,0,0,0,0,3,71,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,964,    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();,2,0,0,1,2,3,2,0,0,7,65,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,980,"    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(""1.1"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,991,"    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(""1.2"");",2,1,0,1,2,0,0,0,0,3,71,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1002,"    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(""1.3"");",0,0,0,1,2,0,0,0,0,3,71,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1013,"    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(""1.4"");",2,0,0,1,2,0,0,2,0,4,71,5,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1024,"    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(""1.5"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1035,"    public static final boolean IS_JAVA_1_6 = getJavaVersionMatches(""1.6"");",2,0,0,1,2,3,2,0,0,8,71,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1048,"    public static final boolean IS_JAVA_1_7 = getJavaVersionMatches(""1.7"");",0,0,0,1,2,0,0,0,0,3,71,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1069,"    public static final boolean IS_OS_AIX = getOSMatchesName(""AIX"");",2,0,0,1,2,3,2,0,0,8,64,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1082,"    public static final boolean IS_OS_HP_UX = getOSMatchesName(""HP-UX"");",6,1,0,1,2,6,4,0,0,20,68,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1095,"    public static final boolean IS_OS_IRIX = getOSMatchesName(""Irix"");",4,1,0,1,2,3,2,0,0,11,66,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1108,"    public static final boolean IS_OS_LINUX = getOSMatchesName(""Linux"") || getOSMatchesName(""LINUX"");",0,0,0,2,4,0,0,0,0,6,97,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1121,"    public static final boolean IS_OS_MAC = getOSMatchesName(""Mac"");",0,0,0,1,2,0,0,0,0,3,64,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1134,"    public static final boolean IS_OS_MAC_OSX = getOSMatchesName(""Mac OS X"");",4,0,0,1,2,3,6,2,0,17,73,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1147,"    public static final boolean IS_OS_OS2 = getOSMatchesName(""OS/2"");",6,0,0,1,2,3,2,0,0,13,65,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1160,"    public static final boolean IS_OS_SOLARIS = getOSMatchesName(""Solaris"");",2,0,0,1,2,3,2,0,0,8,72,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1173,"    public static final boolean IS_OS_SUN_OS = getOSMatchesName(""SunOS"");",0,0,0,1,2,0,0,0,0,3,69,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1186,    public static final boolean IS_OS_UNIX = IS_OS_AIX || IS_OS_HP_UX || IS_OS_IRIX || IS_OS_LINUX || IS_OS_MAC_OSX || IS_OS_SOLARIS,14,2,0,0,0,3,4,0,0,23,128,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1200,    public static final boolean IS_OS_WINDOWS = getOSMatchesName(OS_NAME_WINDOWS_PREFIX);,6,0,0,1,2,3,0,4,0,13,85,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1213,"    public static final boolean IS_OS_WINDOWS_2000 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.0"");",0,0,0,1,2,0,0,0,0,3,93,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1226,"    public static final boolean IS_OS_WINDOWS_95 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.0"");",2,0,0,1,2,0,4,4,0,10,98,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1240,"    public static final boolean IS_OS_WINDOWS_98 = getOSMatches(OS_NAME_WINDOWS_PREFIX + "" 9"", ""4.1"");",0,0,0,1,2,0,0,0,0,3,98,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1254,"    public static final boolean IS_OS_WINDOWS_ME = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""4.9"");",4,0,0,1,2,3,4,0,0,12,91,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1268,"    public static final boolean IS_OS_WINDOWS_NT = getOSMatchesName(OS_NAME_WINDOWS_PREFIX + "" NT"");",10,4,0,1,2,3,12,0,0,30,96,1,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1282,"    public static final boolean IS_OS_WINDOWS_XP = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""5.1"");",2,0,0,1,2,3,4,0,0,10,91,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1296,"    public static final boolean IS_OS_WINDOWS_VISTA = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.0"");",2,0,0,1,2,3,4,0,0,10,94,2,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1309,"    public static final boolean IS_OS_WINDOWS_7 = getOSMatches(OS_NAME_WINDOWS_PREFIX, ""6.1"");",0,0,0,1,2,0,0,0,0,3,90,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1364,"        return toVersionFloat(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",2,1,0,2,4,1,0,0,0,3,95,7,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1388,"        return toVersionInt(toJavaVersionIntArray(SystemUtils.JAVA_VERSION, JAVA_VERSION_TRIM_SIZE));",4,0,0,2,4,1,6,0,0,10,93,5,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/SystemUtils,29,1401,"        return isJavaVersionMatch(JAVA_VERSION_TRIMMED, versionPrefix);",0,0,0,1,2,1,0,0,0,4,63,4,0.00412,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1674,        if (cs == null || searchChars == null) {,4,3,0,1,3,0,0,0,0,7,40,4,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1677,        int csLen = cs.length();,2,1,0,1,2,0,0,0,0,3,24,5,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1678,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1679,        for (int i = 0; i < csLen; i++) {,0,0,0,1,3,0,0,0,0,4,33,4,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1680,            char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1681,            for (int j = 0; j < searchLen; j++) {,8,1,0,1,3,0,0,0,0,10,37,6,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1682,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1685,                        return false;,4,0,0,0,0,1,10,0,0,15,13,3,1.6,1,1,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3279,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,1.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,3282,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,1.25,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1715,        if (cs == null || invalidChars == null) {,2,0,0,1,3,0,0,0,0,2,41,4,0.44444,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1718,"        return containsNone(cs, invalidChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,52,4,0.44444,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1372,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,10,0,0,11,53,4,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1375,        int csLen = cs.length();,2,0,0,1,2,0,4,0,0,6,24,5,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1376,        int searchLen = searchChars.length;,6,0,0,0,0,0,0,0,0,6,35,5,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1377,        for (int i = 0; i < csLen; i++) {,8,1,0,1,3,0,0,0,0,10,33,4,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1378,            char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1379,            for (int j = 0; j < searchLen; j++) {,14,2,0,1,3,0,0,0,0,18,37,3,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1380,                if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1382,                        return i;,0,0,0,0,0,1,0,0,0,1,9,4,0.4,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,194,        return cs == null || cs.length() == 0;,2,3,0,1,2,1,4,0,0,9,38,4,0.37113,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1689,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.33333,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1462,                        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.30769,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1444,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,53,4,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1447,        int csLength = cs.length();,2,0,0,1,2,0,4,0,0,6,27,5,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1448,        int searchLength = searchChars.length;,0,0,0,0,0,0,0,0,0,0,38,4,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1449,        int csLast = csLength - 1;,4,1,0,0,0,0,0,0,0,5,26,5,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1450,        int searchLast = searchLength - 1;,4,1,0,0,0,0,0,0,0,5,34,5,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1451,        for (int i = 0; i < csLength; i++) {,8,1,0,1,3,0,0,0,0,10,36,4,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1452,            char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1453,            for (int j = 0; j < searchLength; j++) {,8,1,0,1,3,0,0,0,0,10,40,6,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1454,                if (searchChars[j] == ch) {,0,0,0,2,5,0,0,0,0,7,27,4,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1455,                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {,2,1,0,1,3,0,0,0,0,3,111,4,0.28571,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1467,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.28571,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,10,64,2,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,4,0,0,2,4,3,8,8,0,24,64,1,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,6,0,0,11,55,1,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,2,0,1,2,4,0,2,0,0,11,61,1,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,0,0,0,0,3,68,12,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,0,0,2,4,3,0,4,0,9,58,2,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,0,0,0,2,4,0,0,0,0,6,80,4,0.10684,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1412,        if (isEmpty(cs) || isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,42,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1415,"        return indexOfAny(cs, searchChars.toCharArray());",0,0,0,2,4,1,0,0,0,7,49,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1570,        if (isEmpty(str) || isEmpty(searchChars)) {,0,1,0,3,7,0,8,0,0,9,43,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1573,        int strLen = str.length();,0,0,0,1,2,0,0,0,0,3,26,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1574,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1575,            char ch = str.charAt(i);,4,2,0,1,2,0,10,0,0,16,24,6,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1576,            if (searchChars.indexOf(ch) < 0) {,4,2,0,2,5,0,10,0,0,16,34,3,0.1,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1577,                    return i;,2,0,0,0,0,4,2,0,0,8,9,2,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1498,        if (searchChars == null) {,2,1,0,1,3,0,0,0,0,3,26,4,0.09091,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1501,"        return containsAny(cs, searchChars.toCharArray());",2,0,0,2,4,1,4,0,0,6,50,7,0.09091,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1542,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.08333,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1529,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,0,0,3,7,0,0,0,0,10,53,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1532,        int csLen = cs.length();,0,0,0,1,2,0,0,0,0,3,24,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1533,        int searchLen = searchChars.length;,0,0,0,0,0,0,0,0,0,0,35,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1535,        for (int i = 0; i < csLen; i++) {,0,0,0,1,3,0,0,0,0,4,33,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1536,            char ch = cs.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1537,            for (int j = 0; j < searchLen; j++) {,8,0,0,1,3,0,2,0,0,10,37,8,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1538,                if (searchChars[j] == ch) {,2,1,0,2,5,0,0,0,0,3,27,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,30,1539,                        continue outer;,0,0,0,0,0,0,0,0,0,0,15,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,145,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,146,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,162,"        return toString(array, ""{}"");",0,0,0,2,4,1,4,0,0,5,29,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,178,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,179,            return stringIfNull;,2,1,0,0,0,1,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,181,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",0,0,0,3,6,1,0,0,0,10,87,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,195,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,3,6,1,0,0,0,10,61,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,226,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,227,            return null;,4,0,0,0,0,1,4,4,0,12,12,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,229,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",6,1,0,3,6,1,0,12,0,20,88,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,230,        for (int i = 0; i < array.length; i++) {,10,1,0,1,3,0,0,0,0,12,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,231,            Object object = array[i];,4,1,1,1,2,0,0,2,0,11,25,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,232,"            if (object instanceof Map.Entry<?, ?>) {",0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,233,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",0,0,0,1,2,0,0,0,0,3,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,234,"                map.put(entry.getKey(), entry.getValue());",2,1,1,3,6,0,12,2,0,19,42,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,235,            } else if (object instanceof Object[]) {,0,0,0,2,6,0,0,0,0,8,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,236,                Object[] entry = (Object[]) object;,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,237,                if (entry.length < 2) {,8,2,0,1,3,0,4,0,0,15,23,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,238,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",0,0,0,0,1,0,0,0,0,1,63,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,242,"                map.put(entry[0], entry[1]);",0,0,0,3,6,0,0,0,0,9,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,243,            } else {,2,0,0,0,2,0,0,0,0,2,8,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,244,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,10,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,249,        return map;,2,0,0,0,0,1,0,0,0,2,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,294,        return items;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,312,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,313,            return null;,2,0,1,0,0,1,10,2,0,22,12,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,315,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,328,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,329,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,331,        return array.clone();,0,1,0,1,2,1,12,0,0,14,21,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,344,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,345,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,347,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,360,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,361,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,363,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,376,        if (array == null) {,6,1,0,1,3,0,0,0,0,8,20,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,377,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,379,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,392,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,393,            return null;,2,1,0,0,0,1,8,0,0,11,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,395,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,408,        if (array == null) {,4,1,0,1,3,0,0,2,0,8,20,14,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,409,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,411,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,424,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,425,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,427,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,440,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,441,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,443,        return array.clone();,2,2,0,1,2,1,8,0,0,12,21,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,462,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,463,            return EMPTY_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,465,        return array;,2,0,0,0,0,1,0,0,0,3,13,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,482,        if (array == null || array.length == 0) {,12,4,0,1,3,0,0,0,0,17,41,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,483,            return EMPTY_STRING_ARRAY;,2,0,0,0,0,1,10,0,0,12,26,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,485,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,502,        if (array == null || array.length == 0) {,14,4,0,1,3,1,0,4,0,24,41,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,503,            return EMPTY_LONG_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,505,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,522,        if (array == null || array.length == 0) {,8,3,0,1,3,0,4,2,0,17,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,523,            return EMPTY_INT_ARRAY;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,525,        return array;,2,0,0,0,0,1,0,0,0,3,13,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,542,        if (array == null || array.length == 0) {,6,3,0,1,3,0,10,0,0,19,41,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,543,            return EMPTY_SHORT_ARRAY;,2,1,0,0,0,1,16,0,0,24,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,545,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,562,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,563,            return EMPTY_CHAR_ARRAY;,0,0,0,0,0,1,0,0,0,1,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,565,        return array;,4,0,0,0,0,1,0,0,0,4,13,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,582,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,583,            return EMPTY_BYTE_ARRAY;,2,0,0,0,0,1,4,0,0,7,24,11,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,585,        return array;,2,0,0,0,0,1,4,0,0,6,13,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,602,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,603,            return EMPTY_DOUBLE_ARRAY;,2,0,0,0,0,1,0,0,0,2,26,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,605,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,622,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,623,            return EMPTY_FLOAT_ARRAY;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,625,        return array;,0,0,0,0,0,1,8,0,0,9,13,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,642,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,643,            return EMPTY_BOOLEAN_ARRAY;,20,2,0,0,0,1,6,0,0,32,27,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,645,        return array;,0,0,0,0,0,1,4,0,0,5,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,662,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,663,            return EMPTY_LONG_OBJECT_ARRAY;,0,0,0,0,0,1,4,0,0,4,31,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,665,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,682,        if (array == null || array.length == 0) {,2,1,0,1,3,0,4,4,0,11,41,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,683,            return EMPTY_INTEGER_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,685,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,702,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,703,            return EMPTY_SHORT_OBJECT_ARRAY;,4,0,0,0,0,1,4,0,0,8,32,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,705,        return array;,10,1,0,0,0,1,0,0,0,12,13,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,722,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,723,            return EMPTY_CHARACTER_OBJECT_ARRAY;,4,1,0,0,0,1,0,0,0,5,36,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,725,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,742,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,743,            return EMPTY_BYTE_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,745,        return array;,2,0,0,0,0,1,0,0,0,2,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,762,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,763,            return EMPTY_DOUBLE_OBJECT_ARRAY;,4,0,1,0,0,1,0,0,0,6,33,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,765,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,782,        if (array == null || array.length == 0) {,4,0,0,1,3,1,6,4,0,15,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,783,            return EMPTY_FLOAT_OBJECT_ARRAY;,2,0,0,0,0,1,0,0,0,2,32,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,785,        return array;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,802,        if (array == null || array.length == 0) {,6,3,0,1,3,0,0,0,0,9,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,803,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,0,0,0,0,0,1,0,0,0,1,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,30,805,        return array;,2,1,0,0,0,1,0,0,0,4,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1441,		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0,1,0,3,7,0,14,0,0,17,53,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1444,		int csLength = cs.length();,0,0,0,1,2,0,0,0,0,3,27,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1445,		int searchLength = searchChars.length;,0,0,0,0,0,0,4,0,0,4,38,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1446,		for (int i = 0; i < csLength; i++) {,0,0,0,1,3,0,0,0,0,4,36,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1447,			char ch = cs.charAt(i);,2,0,0,1,2,0,6,0,0,8,23,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1448,			for (int j = 0; j < searchLength; j++) {,0,0,0,1,3,0,0,0,0,4,40,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1449,				if (searchChars[j] == ch) {,2,1,1,2,5,0,0,0,0,7,27,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1452,						return true;,0,0,0,0,0,1,0,0,0,1,12,10,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1487,        if (searchChars == null) {,0,0,0,1,3,0,0,0,0,4,26,4,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1490,"        return containsAny(cs, searchChars.toCharArray());",4,0,0,2,4,1,14,4,0,22,50,1,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3279,        if (array == null || array.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.30769,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,3282,        return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.30769,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,194,        return cs == null || cs.length() == 0;,2,3,0,1,2,1,12,0,0,18,38,4,0.04396,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,4,1,0,2,4,3,0,4,0,12,64,1,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,4,0,0,2,4,3,0,0,0,7,61,1,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,0,0,2,4,3,2,0,0,9,58,1,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,0,0,2,4,0,0,0,0,2,58,5,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,31,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.01762,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,170,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,171,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,212,        return !StringUtils.isEmpty(cs);,0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,232,        if (cs == null || (strLen = cs.length()) == 0) {,2,0,0,3,7,0,2,2,0,6,48,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,233,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,235,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,236,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,54,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,237,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,240,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,260,        return !StringUtils.isBlank(cs);,0,0,0,1,2,1,0,0,0,4,32,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,289,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,315,        String ts = trim(str);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,316,        return isEmpty(ts) ? null : ts;,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,341,        return str == null ? EMPTY : str.trim();,2,0,0,1,2,4,0,0,0,5,40,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,369,"        return strip(str, null);",2,0,0,1,2,4,0,4,0,9,24,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,396,        if (str == null) {,4,1,0,1,3,3,0,0,0,8,18,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,397,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,399,"        str = strip(str, null);",2,0,0,1,2,0,4,0,0,8,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,400,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,426,"        return str == null ? EMPTY : strip(str, null);",4,1,0,1,2,4,2,0,0,11,46,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,456,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,457,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,459,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,460,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,489,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,490,            return str;,4,1,0,0,0,1,0,0,0,5,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,492,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,493,        if (stripChars == null) {,6,1,0,1,3,0,10,0,0,19,25,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,494,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,495,                start++;,2,0,0,0,0,0,0,0,0,3,8,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,497,        } else if (stripChars.length() == 0) {,0,1,0,2,6,0,4,0,0,5,38,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,498,            return str;,0,0,0,0,0,1,0,0,0,1,11,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,500,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND)) {,8,3,0,5,11,3,12,0,0,27,89,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,501,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,504,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,533,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,534,            return str;,6,1,0,0,0,1,0,0,0,7,11,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,537,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,538,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,4,9,0,0,0,0,13,67,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,539,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,541,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,542,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,544,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND)) {,0,0,0,5,11,0,0,0,0,16,84,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,545,                end--;,4,0,0,0,0,3,0,4,0,13,6,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,548,"        return str.substring(0, end);",2,1,0,1,2,1,4,0,0,7,29,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,573,"        return stripAll(strs, null);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,603,        if (strs == null || (strsLen = strs.length) == 0) {,8,3,0,2,5,0,0,0,0,12,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,604,            return strs;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,606,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,607,        for (int i = 0; i < strsLen; i++) {,10,1,0,1,3,0,4,2,0,18,35,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,608,"            newArr[i] = strip(strs[i], stripChars);",6,0,0,3,6,0,6,0,0,14,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,610,        return newArr;,4,0,0,0,0,1,4,0,0,8,14,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,630,        if(input == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,631,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,633,        if(SystemUtils.isJavaVersionAtLeast(1.6f)) {,2,0,0,2,5,0,0,0,0,2,44,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,640,"                Class<?> normalizerFormClass = ClassUtils.getClass(""java.text.Normalizer$Form"", false);",2,0,0,1,2,0,4,2,0,10,87,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,643,"                Class<?> normalizerClass = ClassUtils.getClass(""java.text.Normalizer"", false);",0,0,0,1,2,0,6,0,0,7,78,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,646,"                java.lang.reflect.Method method = normalizerClass.getMethod(""normalize"", CharSequence.class, normalizerFormClass );",6,3,0,1,2,0,4,0,0,14,115,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,649,"                java.lang.reflect.Field nfd = normalizerFormClass.getField(""NFD"");",10,0,0,1,2,0,4,0,0,15,66,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,652,"                String decomposed = (String) method.invoke( null, input, nfd.get(null) );",0,0,0,3,6,0,4,0,0,4,73,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,655,"                java.util.regex.Pattern accentPattern = java.util.regex.Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");",18,0,0,2,4,0,2,0,0,21,109,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,656,"                return accentPattern.matcher(decomposed).replaceAll("""");",0,0,0,2,4,1,0,0,0,7,56,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,657,            } catch(ClassNotFoundException cnfe) {,6,0,0,1,4,0,0,2,0,9,38,0,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,658,"                throw new RuntimeException(""ClassNotFoundException occurred during 1.6 backcompat code"", cnfe);",0,0,0,1,2,0,0,0,0,3,95,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,659,            } catch(NoSuchMethodException nsme) {,2,1,0,1,4,0,0,0,0,3,37,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,660,"                throw new RuntimeException(""NoSuchMethodException occurred during 1.6 backcompat code"", nsme);",6,0,0,1,2,1,0,4,0,12,94,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,661,            } catch(NoSuchFieldException nsfe) {,2,0,0,1,4,0,0,2,0,4,36,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,662,"                throw new RuntimeException(""NoSuchFieldException occurred during 1.6 backcompat code"", nsfe);",0,0,0,1,2,0,0,0,0,3,93,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,663,            } catch(IllegalAccessException iae) {,0,0,0,1,4,0,0,0,0,5,37,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,664,"                throw new RuntimeException(""IllegalAccessException occurred during 1.6 backcompat code"", iae);",0,0,0,1,2,0,0,0,0,3,94,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,665,            } catch(IllegalArgumentException iae) {,6,0,0,1,4,0,6,0,0,12,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,666,"                throw new RuntimeException(""IllegalArgumentException occurred during 1.6 backcompat code"", iae);",0,0,0,1,2,0,0,0,0,3,96,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,667,            } catch(java.lang.reflect.InvocationTargetException ite) {,4,2,0,1,4,0,6,0,0,12,58,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,668,"                throw new RuntimeException(""InvocationTargetException occurred during 1.6 backcompat code"", ite);",4,0,1,1,2,0,6,2,0,17,97,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,669,            } catch(SecurityException se) {,6,1,0,1,4,0,4,0,0,13,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,670,"                throw new RuntimeException(""SecurityException occurred during 1.6 backcompat code"", se);",0,0,0,1,2,0,0,0,0,3,88,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,673,"            throw new UnsupportedOperationException(""The stripAccents(String) method is not supported until Java 1.6"");",0,0,0,2,4,0,6,2,0,9,107,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,700,        return cs1 == null ? cs2 == null : cs1.equals(cs2);,8,3,0,1,2,1,12,2,0,25,51,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,725,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,6,2,0,1,2,1,0,0,0,9,65,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,750,        if (isEmpty(str)) {,4,0,0,2,5,0,0,0,0,4,19,11,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,751,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,753,        return str.indexOf(searchChar);,0,0,0,1,2,1,6,0,0,6,31,11,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,782,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,783,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,10,0,0,13,23,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,785,"        return str.indexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,812,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,813,            return INDEX_NOT_FOUND;,8,3,0,0,0,1,12,0,0,24,23,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,815,        return str.indexOf(searchStr);,0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,851,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,852,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,854,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,891,"        return ordinalIndexOf(str, searchStr, ordinal, false);",0,0,0,1,2,1,0,0,0,4,54,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,909,        if (str == null || searchStr == null || ordinal <= 0) {,6,1,0,1,3,0,0,0,0,7,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,910,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,912,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,913,            return lastIndex ? str.length() : 0;,2,0,0,1,2,4,2,2,0,10,36,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,915,        int found = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,916,        int index = lastIndex ? str.length() : INDEX_NOT_FOUND;,0,0,0,1,2,0,8,0,0,8,55,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,918,            if(lastIndex) {,2,0,0,1,3,0,6,0,0,9,15,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,919,"                index = str.lastIndexOf(searchStr, index - 1);",0,0,0,1,2,0,0,0,0,3,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,921,"                index = str.indexOf(searchStr, index + 1);",0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,923,            if (index < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,924,                return index;,8,1,0,0,0,4,2,0,0,16,13,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,926,            found++;,0,1,0,0,0,0,6,0,0,7,8,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,927,        } while (found < ordinal);,2,0,1,1,3,0,0,2,0,8,26,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,928,        return index;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,956,"        return indexOfIgnoreCase(str, searchStr, 0);",0,0,0,1,2,1,0,0,0,1,44,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,991,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,992,            return INDEX_NOT_FOUND;,2,0,0,0,0,4,2,2,0,10,23,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,994,        if (startPos < 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,995,            startPos = 0;,0,0,0,0,0,0,0,0,0,0,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,997,        int endLimit = (str.length() - searchStr.length()) + 1;,0,0,0,3,6,0,0,0,0,9,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,998,        if (startPos > endLimit) {,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,999,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1001,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1002,            return startPos;,0,0,0,0,0,1,0,0,0,1,16,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1004,        for (int i = startPos; i < endLimit; i++) {,0,0,0,1,3,0,0,0,0,4,43,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1005,"            if (str.regionMatches(true, i, searchStr, 0, searchStr.length())) {",0,0,0,3,7,0,0,0,0,10,67,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1006,                return i;,4,0,1,0,0,1,2,0,0,11,9,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1009,        return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1034,        if (isEmpty(str)) {,2,0,0,2,5,3,6,2,0,13,19,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1035,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1037,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1068,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1069,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1071,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1097,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1098,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1100,        return str.lastIndexOf(searchStr);,0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1137,"        return ordinalIndexOf(str, searchStr, ordinal, true);",2,2,0,1,2,1,16,4,0,26,53,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1169,        if (str == null || searchStr == null) {,2,1,0,1,3,0,0,0,0,3,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1170,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1172,"        return str.lastIndexOf(searchStr, startPos);",0,0,0,1,2,1,8,0,0,8,44,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1198,        if (str == null || searchStr == null) {,14,4,0,1,3,0,0,0,0,19,39,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1199,            return INDEX_NOT_FOUND;,2,2,0,0,0,1,8,0,0,12,23,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1201,"        return lastIndexOfIgnoreCase(str, searchStr, str.length());",0,0,0,2,4,1,10,0,0,10,59,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1233,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1234,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1236,        if (startPos > (str.length() - searchStr.length())) {,0,0,0,4,9,0,0,0,0,13,53,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1237,            startPos = str.length() - searchStr.length();,2,1,0,2,4,0,8,0,0,12,45,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1239,        if (startPos < 0) {,4,0,0,1,3,0,8,0,0,13,19,0,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1240,            return INDEX_NOT_FOUND;,0,0,0,0,0,1,0,0,0,1,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1242,        if (searchStr.length() == 0) {,0,1,0,2,5,0,4,0,0,5,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,31,1243,            return startPos;,4,1,0,0,0,4,6,0,0,16,16,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,400,"        return reflectionHashCode(17, 37, object, false, null, null);",0,0,0,1,2,1,0,0,0,4,61,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,107,            return new HashSet<IDKey>();,0,0,0,1,2,1,0,0,0,4,28,4,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,137,        return REGISTRY.get();,0,0,0,1,2,1,0,0,0,4,22,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,152,        return getRegistry().contains(new IDKey(value));,2,0,0,3,6,1,4,2,0,8,48,5,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,173,        if (isRegistered(object)) {,2,0,0,2,5,0,10,0,0,13,27,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,177,            register(object);,0,0,0,1,2,0,4,0,0,4,17,7,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,178,            Field[] fields = clazz.getDeclaredFields();,0,0,0,2,4,0,0,0,0,6,43,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,179,"            AccessibleObject.setAccessible(fields, true);",0,0,0,1,2,0,6,0,0,7,45,7,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,180,            for (Field field : fields) {,4,0,0,1,3,0,0,2,0,6,28,6,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,181,"                if (!ArrayUtils.contains(excludeFields, field.getName())",0,0,0,2,5,0,10,0,0,11,56,11,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,186,                        Object fieldValue = field.get(object);,0,0,0,1,2,0,0,0,0,3,38,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,187,                        builder.append(fieldValue);,0,0,0,1,2,0,0,0,0,3,27,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,192,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,196,            unregister(object);,6,2,0,1,2,0,4,0,0,12,19,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,197,        },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,198,    },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,360,        Class<?> clazz = object.getClass();,4,0,0,1,2,3,8,4,0,19,35,1,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,361,"        reflectionAppend(object, clazz, builder, testTransients, excludeFields);",0,0,0,1,2,0,12,0,0,12,72,5,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,362,        while (clazz.getSuperclass() != null && clazz != reflectUpToClass) {,4,3,0,2,5,0,4,0,0,11,68,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,363,            clazz = clazz.getSuperclass();,0,0,0,1,2,0,0,0,0,3,30,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,364,"            reflectionAppend(object, clazz, builder, testTransients, excludeFields);",0,0,0,1,2,0,12,0,0,12,72,7,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,366,        return builder.toHashCode();,2,0,1,1,2,1,8,0,0,14,28,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,522,        getRegistry().add(new IDKey(value));,6,0,0,3,6,0,8,4,0,18,36,1,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,523,    },2,1,0,0,1,0,0,0,0,3,1,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,538,        getRegistry().remove(new IDKey(value));,2,0,0,3,6,0,4,2,0,8,39,5,0.14286,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,539,    },4,0,0,0,1,1,0,2,0,7,1,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,40,        public IDKey(Object _value) {,4,0,0,1,3,1,0,2,0,7,29,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,42,            id = System.identityHashCode(_value);  ,0,0,0,1,2,0,0,0,0,3,37,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,46,            value = _value;,8,0,0,0,0,0,10,0,0,21,15,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,47,        },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,55,           return id;,2,0,0,0,0,1,0,0,0,2,10,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,65,            if (!(other instanceof IDKey)) {,4,2,0,2,5,1,4,4,0,15,32,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,68,            IDKey idKey = (IDKey) other;,4,0,0,1,2,0,0,4,0,8,28,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,69,            if (id != idKey.id) {,6,1,0,1,3,0,0,0,0,7,21,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/IDKey,32,73,            return value == idKey.value;,6,1,0,0,0,1,0,0,0,7,28,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,4,0,0,2,4,4,4,4,0,17,65,1,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,2,0,2,4,0,10,0,0,16,58,6,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,2,0,0,2,4,0,0,0,0,3,65,8,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,6,0,0,12,64,1,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0,0,0,2,4,0,0,0,0,6,71,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1627,"        return indexOf(array, objectToFind, 0);",0,0,0,1,2,1,0,0,0,4,39,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1645,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1646,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,32,1730,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",6,5,0,1,2,1,16,0,0,28,55,3,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,359,"        HashCodeBuilder builder = new HashCodeBuilder(initialNonZeroOddNumber, multiplierNonZeroOddNumber);",6,0,0,1,2,0,0,4,0,10,99,4,0.09091,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,356,        if (object == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.08333,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,883,                iTotal = iTotal * iConstant + object.hashCode();,6,2,0,1,2,0,4,0,0,13,48,8,0.08333,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,855,        if (object == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,859,            if(object.getClass().isArray()) {,2,0,0,3,7,0,0,2,0,4,33,6,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,886,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.04762,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,585,        if (multiplierNonZeroOddNumber == 0) {,2,1,0,1,3,0,0,0,0,3,38,4,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,588,        if (multiplierNonZeroOddNumber % 2 == 0) {,2,2,0,1,3,0,0,0,0,4,42,4,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,591,        iConstant = multiplierNonZeroOddNumber;,14,1,0,0,0,0,0,0,0,17,39,3,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,592,        iTotal = initialNonZeroOddNumber;,0,0,0,0,0,0,0,0,0,0,33,4,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,593,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,966,        return iTotal;,0,0,0,0,0,1,0,0,0,1,14,4,0.02703,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,582,        if (initialNonZeroOddNumber % 2 == 0) {,2,2,0,1,3,0,0,0,0,4,39,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,549,    private int iTotal = 0;,0,0,0,0,0,0,0,0,0,0,23,4,0.02326,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,578,"    public HashCodeBuilder(int initialNonZeroOddNumber, int multiplierNonZeroOddNumber) {",12,1,0,1,3,4,4,2,0,24,85,1,0.02326,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,579,        if (initialNonZeroOddNumber == 0) {,2,1,0,1,3,0,0,0,0,3,35,4,0.02326,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,104,    private static final ThreadLocal<Set<IDKey>> REGISTRY = new ThreadLocal<Set<IDKey>>() {,2,0,0,1,3,3,0,12,0,17,87,2,0.02273,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,104,    private static final ThreadLocal<Set<IDKey>> REGISTRY = new ThreadLocal<Set<IDKey>>() {,2,0,0,1,3,3,0,12,0,17,87,2,0.02273,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,556,    public HashCodeBuilder() {,6,2,0,1,3,0,14,2,0,25,26,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,557,        iConstant = 37;,2,0,0,0,0,0,0,0,0,3,15,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,558,        iTotal = 17;,0,0,0,0,0,0,0,0,0,0,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,559,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,580,"            throw new IllegalArgumentException(""HashCodeBuilder requires a non zero initial value"");",0,0,0,1,2,0,0,0,0,3,88,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,583,"            throw new IllegalArgumentException(""HashCodeBuilder requires an odd initial value"");",0,0,0,1,2,0,0,2,0,3,84,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,586,"            throw new IllegalArgumentException(""HashCodeBuilder requires a non zero multiplier"");",2,0,0,1,2,0,0,4,0,7,85,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,589,"            throw new IllegalArgumentException(""HashCodeBuilder requires an odd multiplier"");",0,0,0,1,2,0,0,2,0,3,81,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,174,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,188,                    } catch (IllegalAccessException e) {,2,0,0,1,4,0,0,2,0,4,36,12,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,191,"                        throw new InternalError(""Unexpected IllegalAccessException"");",2,0,0,1,2,0,0,2,0,5,61,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,238,"        return reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, false, null, null);",0,0,0,1,2,1,0,0,0,4,106,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,282,"        return reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, testTransients, null,",0,0,0,0,1,1,0,0,0,2,108,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,304,"        return reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, testTransients,",0,0,0,0,1,1,10,0,0,10,102,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,357,"            throw new IllegalArgumentException(""The object to build a hash code for must not be null"");",2,0,0,1,2,3,4,4,0,15,91,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,436,"        return reflectionHashCode(17, 37, object, testTransients, null, null);",0,0,0,1,2,1,6,0,0,7,70,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,472,"        return reflectionHashCode(object, ReflectionToStringBuilder.toNoNullStringArray(excludeFields));",0,0,0,2,4,1,0,0,0,7,96,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,510,"        return reflectionHashCode(17, 37, object, false, null, excludeFields);",4,2,0,1,2,1,16,0,0,24,70,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,610,        iTotal = iTotal * iConstant + (value ? 0 : 1);,0,0,0,1,2,0,0,0,0,3,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,611,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,624,        if (array == null) {,2,1,0,1,3,0,4,0,0,7,20,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/HashCodeBuilder,32,625,            iTotal = iTotal * iConstant;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,55,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,59,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,63,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,67,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,71,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,2,0,0,2,4,3,0,4,0,9,65,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,75,    public static final int[] EMPTY_INT_ARRAY = new int[0];,2,0,0,2,4,3,0,0,0,5,55,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,79,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,83,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,87,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,4,0,0,2,4,0,6,0,0,10,68,5,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,91,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,95,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,99,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,103,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,2,0,0,2,4,3,0,4,0,9,71,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,107,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,111,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,115,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,4,0,0,2,4,6,0,0,0,10,67,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,119,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,2,0,0,2,4,3,0,4,0,9,74,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,123,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,2,1,0,2,4,0,0,0,0,3,58,4,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,33,127,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,2,0,0,2,4,3,0,4,0,9,80,2,0.025,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,4,0,0,1,2,6,6,2,0,18,86,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,2,0,0,1,2,3,6,2,0,13,94,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",4,0,0,1,2,0,4,2,0,10,53,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",6,0,0,1,2,3,6,4,0,20,47,1,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",4,0,0,1,2,0,4,2,0,10,57,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",0,0,0,1,2,0,0,0,0,3,53,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",6,0,0,1,2,3,6,4,0,20,47,1,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",4,0,0,1,2,0,4,2,0,10,51,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",10,0,0,1,2,3,8,2,0,24,46,1,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,89,"    private static final Map<Class<?>, Class<?>> wrapperPrimitiveMap = new HashMap<Class<?>, Class<?>>();",6,0,0,1,2,3,6,12,0,27,101,1,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,91,        for (Class<?> primitiveClass : primitiveWrapperMap.keySet()) {,2,2,0,2,5,0,6,0,0,12,62,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,92,            Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);,2,0,0,1,2,0,6,2,0,10,64,6,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,93,            if (!primitiveClass.equals(wrapperClass)) {,0,0,0,2,5,0,0,0,0,7,43,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,94,"                wrapperPrimitiveMap.put(wrapperClass, primitiveClass);",0,0,0,1,2,0,8,0,0,8,54,9,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,96,        },2,0,0,0,1,0,0,2,0,4,1,6,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,102,"    private static final Map<String, String> abbreviationMap = new HashMap<String, String>();",4,0,0,1,2,6,2,12,0,25,89,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,107,"    private static final Map<String, String> reverseAbbreviationMap = new HashMap<String, String>();",2,0,0,1,2,3,0,12,0,17,96,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,124,"        addAbbreviation(""int"", ""I"");",0,0,0,1,2,0,0,0,0,3,28,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,125,"        addAbbreviation(""boolean"", ""Z"");",0,0,0,1,2,0,2,0,0,4,32,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,126,"        addAbbreviation(""float"", ""F"");",0,0,0,1,2,0,2,0,0,4,30,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,127,"        addAbbreviation(""long"", ""J"");",0,0,0,1,2,0,0,0,0,3,29,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,128,"        addAbbreviation(""short"", ""S"");",0,0,0,1,2,0,0,0,0,3,30,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,129,"        addAbbreviation(""byte"", ""B"");",0,0,0,1,2,0,2,0,0,4,29,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,130,"        addAbbreviation(""double"", ""D"");",0,0,0,1,2,0,2,0,0,4,31,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,131,"        addAbbreviation(""char"", ""C"");",0,0,0,1,2,0,2,0,0,4,29,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,132,    },2,0,0,0,1,3,4,2,0,12,1,2,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,116,"        abbreviationMap.put(primitive, abbreviation);",0,0,0,1,2,0,8,0,0,8,45,5,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,117,"        reverseAbbreviationMap.put(abbreviation, primitive);",0,0,0,1,2,0,0,0,0,3,52,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,118,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0122,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,143,      super();,2,1,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,144,    },2,0,0,0,1,3,0,4,0,10,1,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,156,        if (object == null) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,157,            return valueIfNull;,4,0,0,0,0,4,2,0,0,10,19,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,159,        return getShortClassName(object.getClass());,6,2,0,2,4,4,4,4,0,20,44,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,169,        if (cls == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,170,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,172,        return getShortClassName(cls.getName());,6,3,0,2,4,3,20,0,0,33,40,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,184,        if (className == null) {,4,1,0,1,3,0,0,0,0,5,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,185,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,187,        if (className.length() == 0) {,2,1,0,2,5,3,6,0,0,13,30,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,188,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,5,25,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,191,        StringBuilder arrayPrefix = new StringBuilder();,2,0,0,1,2,0,4,4,0,10,48,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,194,"        if (className.startsWith(""["")) {",0,0,0,2,6,0,4,0,0,5,32,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,195,            while (className.charAt(0) == '[') {,0,1,0,2,6,0,4,0,0,6,36,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,196,                className = className.substring(1);,0,0,0,1,2,0,0,0,0,3,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,197,"                arrayPrefix.append(""[]"");",0,0,0,2,4,0,0,0,0,6,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,200,            if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {,0,0,0,4,9,0,0,0,0,13,84,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,201,"                className = className.substring(1, className.length() - 1);",0,0,0,2,4,0,0,0,0,6,59,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,205,        if (reverseAbbreviationMap.containsKey(className)) {,0,0,0,2,5,0,0,0,0,7,52,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,206,            className = reverseAbbreviationMap.get(className);,6,1,0,1,2,0,10,0,0,19,50,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,209,        int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,63,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,210,        int innerIdx = className.indexOf(,2,1,0,0,1,0,0,0,0,3,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,212,        String out = className.substring(lastDotIdx + 1);,0,0,0,1,2,0,0,0,0,3,49,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,213,        if (innerIdx != -1) {,0,0,0,1,3,0,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,214,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,216,        return out + arrayPrefix;,0,0,0,0,0,1,0,0,0,1,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,229,        if (object == null) {,4,2,0,1,3,0,0,0,0,6,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,230,            return valueIfNull;,2,0,0,0,0,1,0,0,0,2,19,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,232,        return getPackageName(object.getClass());,0,0,0,2,4,1,6,0,0,6,41,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,242,        if (cls == null) {,8,1,1,1,3,0,0,6,0,20,18,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,243,            return StringUtils.EMPTY;,0,0,0,0,0,1,0,2,0,4,25,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,245,        return getPackageName(cls.getName());,0,0,0,2,4,1,0,0,0,7,37,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,258,        if (className == null || className.length() == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,259,            return StringUtils.EMPTY;,4,0,0,0,0,1,0,0,0,4,25,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,263,        while (className.charAt(0) == '[') {,0,0,0,2,6,0,0,0,0,8,36,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,264,            className = className.substring(1);,2,0,0,1,2,0,4,0,0,7,35,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,267,        if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {,0,0,0,4,9,0,0,0,0,13,84,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,268,            className = className.substring(1);,2,0,0,1,2,0,0,0,0,3,35,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,271,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,54,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,272,        if (i == -1) {,2,1,0,1,3,0,0,0,0,4,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,273,            return StringUtils.EMPTY;,4,1,0,0,0,1,0,2,0,10,25,0,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,275,"        return className.substring(0, i);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,288,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,289,            return null;,2,0,0,0,0,1,8,0,0,11,12,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,291,        List<Class<?>> classes = new ArrayList<Class<?>>();,0,0,0,1,2,0,0,0,0,3,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,292,        Class<?> superclass = cls.getSuperclass();,0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,293,        while (superclass != null) {,2,1,0,1,3,0,0,0,0,3,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,294,            classes.add(superclass);,0,0,0,1,2,0,6,0,0,6,24,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,295,            superclass = superclass.getSuperclass();,0,0,0,1,2,0,0,0,0,3,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,297,        return classes;,2,0,0,0,0,1,0,0,0,2,15,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,314,        if (cls == null) {,4,1,0,1,3,0,0,0,0,5,18,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,315,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,318,        LinkedHashSet<Class<?>> interfacesFound = new LinkedHashSet<Class<?>>();,2,0,0,1,2,0,0,0,0,2,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,319,"        getAllInterfaces(cls, interfacesFound);",0,0,0,1,2,0,6,0,0,6,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ClassUtils,33,321,        return new ArrayList<Class<?>>(interfacesFound);,4,0,0,1,2,1,0,4,0,8,48,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,155,        return ReflectionToStringBuilder.toString(object);,2,0,0,1,2,4,6,4,0,15,50,1,135.2,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,123,"        return toString(object, null, false, false, null);",0,0,0,1,2,1,0,0,0,4,50,4,112.66667,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,473,"        super(object, style, buffer);",6,0,0,1,2,0,0,0,0,6,29,4,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,474,        this.setUpToClass(reflectUpToClass);,0,0,0,1,2,0,4,0,0,4,36,5,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,475,        this.setAppendTransients(outputTransients);,0,0,0,1,2,0,4,0,0,4,43,5,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,476,        this.setAppendStatics(outputStatics);,0,0,0,1,2,0,4,0,0,4,37,5,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,477,    },8,1,1,0,1,0,0,0,0,14,1,6,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,290,"        return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)",12,0,0,1,2,1,4,4,0,21,108,1,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,636,        this.appendStatics = appendStatics;,0,0,0,0,0,0,0,0,0,0,35,4,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,637,    },0,0,0,0,1,0,0,0,0,1,1,4,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,648,        this.appendTransients = appendTransients;,0,0,0,0,0,0,0,0,0,0,41,4,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,649,    },0,0,0,0,1,0,0,0,0,1,1,4,75.11111,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,923,        buffer.append(arrayStart);,0,0,0,1,2,0,0,0,0,3,26,4,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,924,        int length = Array.getLength(array);,2,0,0,1,2,0,6,0,0,8,36,5,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,925,        for (int i = 0; i < length; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,926,"            Object item = Array.get(array, i);",4,0,0,1,2,0,14,2,0,20,34,6,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,927,            if (i > 0) {,2,1,0,1,3,0,0,0,0,3,12,6,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,930,            if (item == null) {,0,0,0,1,3,0,0,0,0,4,19,4,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,934,"                appendInternal(buffer, fieldName, item, arrayContentDetail);",0,0,0,1,2,0,0,0,0,3,60,4,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,937,        buffer.append(arrayEnd);,0,0,0,1,2,0,0,0,0,3,24,4,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,938,    },2,0,0,0,1,3,0,4,0,9,1,2,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,527,            this.reflectionAppendArray(this.getObject());,0,0,0,2,4,0,4,0,0,4,45,7,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,528,            return;,2,0,0,0,0,4,2,2,0,10,7,2,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,622,"        this.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);",2,0,0,3,6,3,8,4,0,17,81,1,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,623,        return this;,2,0,0,0,0,1,4,2,0,8,12,4,73.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,683,        this.upToClass = clazz;,4,0,0,0,0,0,0,0,0,5,23,4,67.6,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,684,    },0,0,0,0,1,0,0,0,0,1,1,4,67.6,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,677,        if (clazz != null) {,2,1,0,1,3,0,0,0,0,3,20,4,61.45455,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,1045,        return style;,2,0,0,0,0,1,0,0,0,2,13,4,44.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,701,            clazz = clazz.getSuperclass();,2,0,0,1,2,0,4,0,0,7,30,6,39.76471,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,702,            this.appendFieldsIn(clazz);,0,0,0,1,2,0,6,0,0,8,27,1,39.76471,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,928,                buffer.append(arraySeparator);,0,0,0,1,2,0,4,0,0,5,30,5,36.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,526,        if (clazz.isArray()) {,2,1,1,2,5,0,0,0,0,7,22,8,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,530,        Field[] fields = clazz.getDeclaredFields();,2,0,0,2,4,0,4,2,0,8,43,4,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,531,"        AccessibleObject.setAccessible(fields, true);",2,1,0,1,2,0,6,0,0,10,45,3,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,532,        for (Field field : fields) {,4,0,0,1,3,0,0,2,0,6,28,4,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,549,    },0,0,0,0,1,0,0,0,0,1,1,4,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,566,        return this.upToClass;,0,0,0,0,0,1,0,0,0,1,22,4,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,698,        Class<?> clazz = this.getObject().getClass();,0,0,0,2,4,0,0,0,0,6,45,4,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,699,        this.appendFieldsIn(clazz);,0,0,0,1,2,0,4,0,0,4,27,5,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,700,        while (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {,2,3,0,3,7,0,6,0,0,11,71,4,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,704,        return super.toString();,2,0,0,1,2,1,0,0,0,2,24,5,35.57895,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,695,        if (this.getObject() == null) {,0,1,0,2,5,0,2,0,0,3,31,4,33.8,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,372,    private boolean appendStatics = false;,0,0,0,0,0,0,0,0,0,0,38,4,30.72727,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,377,    private boolean appendTransients = false;,0,0,0,0,0,0,0,0,0,0,41,4,30.72727,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ReflectionToStringBuilder,34,387,    private Class<?> upToClass = null;,2,0,0,0,0,0,0,0,0,2,34,7,30.72727,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,413,                    match = false;,0,0,0,0,0,0,0,0,0,0,14,4,23.21053,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,414,                    break;,0,0,0,0,0,0,0,0,0,0,6,4,23.21053,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1455,                buffer.append(object.getClass().getName());,0,0,0,3,6,0,0,0,0,9,43,4,9.59211,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1468,            register(object);,0,0,0,1,2,0,0,0,0,3,17,4,9.59211,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1469,            buffer.append('@');,0,0,0,1,2,0,4,0,0,5,19,7,9.59211,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1470,            buffer.append(Integer.toHexString(System.identityHashCode(object)));,0,0,0,3,6,0,0,0,0,9,68,4,9.59211,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,148,"        return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();",0,0,0,3,6,1,0,0,0,10,88,4,8.67857,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,163,"        Map<Object, Object> m = getRegistry();",2,0,0,1,2,0,2,6,0,10,38,4,8.67857,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,164,        return m.containsKey(value);,0,0,0,1,2,1,0,0,0,4,28,4,8.67857,1,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,469,        if (isRegistered(value),0,0,0,1,3,0,0,0,0,4,23,4,8.67857,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1451,            register(object);,0,0,0,1,2,0,0,0,0,3,17,4,7.92391,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,1452,            if (useShortClassName) {,0,0,0,1,3,0,0,0,0,4,24,4,7.92391,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,256,            style = getDefaultStyle();,0,0,0,1,2,0,4,0,0,4,26,5,7.14706,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringBuilder,34,120,        return defaultStyle;,10,0,0,0,0,4,0,12,0,25,20,1,7.07767,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,208,                    m.remove(value);,0,0,0,1,2,0,0,0,0,3,16,4,7.00962,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,209,                    if (m.isEmpty()) {,0,0,0,2,5,0,4,0,0,4,18,11,7.00962,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,210,                        REGISTRY.remove();,0,0,0,1,2,0,4,0,0,4,18,13,7.00962,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,410,            boolean match = true;,2,0,0,0,0,0,0,0,0,3,21,7,6.94286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,411,            for (int i = 0; i < sepLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,6,6.94286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,412,                if (buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)) {,0,0,0,3,7,0,0,0,0,10,74,4,6.94286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,417,            if (match) {,0,0,0,1,3,0,0,0,0,4,12,4,6.94286,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,203,        if (value != null) {,4,1,0,1,3,0,0,0,0,5,20,4,6.87736,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,205,            synchronized (ToStringStyle.class) {,2,0,0,1,3,0,0,0,0,2,36,4,6.87736,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,206,                m = REGISTRY.get();,2,0,0,1,2,0,0,8,0,10,19,4,6.87736,0,0,-1
defect4j,lang,org/apache/commons/lang3/builder/ToStringStyle,34,207,                if (m != null) {,2,2,0,1,3,0,10,0,0,15,16,3,6.87736,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3290,        if (array != null){,2,1,0,1,3,0,0,0,0,3,19,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3298,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",0,0,0,4,8,0,0,0,0,12,49,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3299,        newArray[newArray.length - 1] = element;,2,1,0,1,2,0,0,0,0,3,40,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3300,        return newArray;,2,0,0,0,0,1,0,0,0,2,16,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3535,"        return Array.newInstance(newArrayComponentType, 1);",2,1,0,1,2,1,6,0,0,10,51,3,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,3529,        if (array != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,58,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,2,0,0,2,4,3,0,4,0,9,64,2,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,62,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,4,0,0,2,4,3,6,6,0,19,64,1,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,66,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,70,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,74,    public static final int[] EMPTY_INT_ARRAY = new int[0];,0,0,0,2,4,0,0,0,0,6,55,4,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,78,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,6,2,0,2,4,3,4,4,0,19,74,1,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,82,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,86,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,90,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,0,0,2,4,0,0,0,0,5,58,10,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,94,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,6,0,0,2,4,3,0,4,0,14,65,1,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,98,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,0,0,5,64,2,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,102,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,4,0,0,2,4,3,4,2,0,13,71,1,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,106,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,0,0,0,2,4,0,0,0,0,6,61,4,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,110,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,114,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,118,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,122,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,0,0,0,6,58,4,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,126,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,0,0,0,2,4,0,0,0,0,6,80,4,0.00303,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,143,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,144,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,160,"        return toString(array, ""{}"");",0,0,0,2,4,1,0,0,0,7,29,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,176,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,177,            return stringIfNull;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,179,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",2,0,0,3,6,4,8,2,0,17,87,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,193,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,3,6,1,0,0,0,10,61,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,224,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,225,            return null;,0,1,0,0,0,1,12,0,0,13,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,227,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",8,2,0,3,6,1,0,12,0,23,88,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,228,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,229,            Object object = array[i];,4,0,0,1,2,0,0,4,0,8,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,230,"            if (object instanceof Map.Entry<?, ?>) {",6,0,0,1,3,0,0,0,0,6,40,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,231,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",2,0,0,1,2,0,0,0,0,4,47,10,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,232,"                map.put(entry.getKey(), entry.getValue());",0,0,0,3,6,0,0,0,0,9,42,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,233,            } else if (object instanceof Object[]) {,0,0,0,2,6,0,4,0,0,4,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,234,                Object[] entry = (Object[]) object;,4,0,0,3,6,0,0,4,0,8,35,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,235,                if (entry.length < 2) {,4,1,0,1,3,0,0,0,0,5,23,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,236,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,12,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,240,"                map.put(entry[0], entry[1]);",0,0,1,3,6,0,10,0,0,14,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,241,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,242,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",0,0,0,0,1,0,0,0,0,1,63,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,247,        return map;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,292,        return items;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,310,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,311,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,313,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,326,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,327,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,329,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,342,        if (array == null) {,10,4,0,1,3,0,0,0,0,15,20,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,343,            return null;,4,0,0,0,0,1,6,0,0,10,12,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,345,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,358,        if (array == null) {,8,1,0,1,3,3,0,4,0,16,20,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,359,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,361,        return array.clone();,4,0,0,1,2,4,4,2,0,14,21,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,374,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,375,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,377,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,390,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,391,            return null;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,393,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,406,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,407,            return null;,2,0,0,0,0,1,4,0,0,6,12,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,409,        return array.clone();,2,0,0,1,2,1,0,0,0,2,21,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,422,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,423,            return null;,2,0,0,0,0,4,4,2,0,12,12,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,425,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,438,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,439,            return null;,4,0,0,0,0,1,0,0,0,5,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,441,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,474,        if (array == null) {,12,3,0,1,3,0,0,0,0,16,20,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,35,475,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,449,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,1,1,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,452,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,455,"        if (str.startsWith(""--"")) {",8,1,0,2,5,0,4,0,0,15,27,3,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,462,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,465,        char lastChar = str.charAt(str.length() - 1);,12,2,0,2,4,3,8,0,0,26,45,1,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,469,        int decPos = str.indexOf('.');,2,0,0,1,2,0,4,0,0,7,30,5,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,470,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,8,0,0,13,53,5,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,472,        if (decPos > -1) {,10,2,0,1,3,0,0,0,0,14,18,3,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,484,            if (expPos > -1) {,4,2,0,1,3,0,0,0,0,7,18,6,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,487,                mant = str;,0,0,0,0,0,0,0,0,0,0,11,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,489,            dec = null;,4,0,0,0,0,0,4,0,0,10,11,5,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,491,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,0,6,0,0,7,35,4,4.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,492,            if (expPos > -1 && expPos < str.length() - 1) {,6,4,0,2,5,1,4,4,0,20,47,1,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,495,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,498,"            String numeric = str.substring(0, str.length() - 1);",0,0,0,2,4,0,0,0,0,6,52,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,499,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,500,            switch (lastChar) {,2,0,0,1,3,0,0,0,0,2,19,6,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,503,                    if (dec == null,12,2,0,0,1,0,8,0,0,22,15,3,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,507,                            return createLong(numeric);,0,0,0,1,2,1,4,0,0,4,27,12,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,606,        if (str == null) {,4,1,0,1,3,3,0,4,0,12,18,1,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,609,        for (int i = str.length() - 1; i >= 0; i--) {,0,0,0,2,5,0,0,0,0,1,45,6,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,610,            if (str.charAt(i) != '0') {,0,0,0,2,5,0,0,0,0,7,27,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,611,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,628,        if (str == null) {,0,0,1,1,3,0,10,0,0,12,18,6,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,631,        return Float.valueOf(str);,0,0,0,1,2,1,0,0,0,4,26,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,644,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,647,        return Double.valueOf(str);,0,0,0,1,2,1,6,0,0,6,27,5,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,661,        if (str == null) {,6,1,0,1,3,0,0,0,0,8,18,3,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,665,        return Integer.decode(str);,0,0,0,1,2,1,6,0,0,6,27,5,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,694,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,697,        return new BigInteger(str);,4,0,0,1,2,4,0,2,0,9,27,1,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,710,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,714,        if (StringUtils.isBlank(str)) {,2,0,0,2,5,3,10,2,0,17,31,1,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,717,        return new BigDecimal(str);,0,0,0,1,2,1,0,0,0,4,27,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,678,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,681,        return Long.valueOf(str);,0,0,0,1,2,1,6,0,0,6,25,5,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1288,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,31,5,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1291,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1292,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,40,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1296,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,36,191,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,36,229,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,36,232,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,36,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,36,234,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,2.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,453,"            throw new NumberFormatException(""A blank string is not a valid number"");",0,0,0,1,2,0,0,2,0,3,72,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,460,            return null;,0,0,0,0,0,1,0,0,0,1,12,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,476,"                    throw new NumberFormatException(str + "" is not a valid number."");",0,0,0,1,2,0,0,0,0,3,65,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,485,"                mant = str.substring(0, expPos);",0,0,0,1,2,0,0,0,0,3,32,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,508,                        } catch (NumberFormatException nfe) {,0,0,0,1,4,0,0,0,0,5,37,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,511,                        return createBigInteger(numeric);,0,0,0,1,2,1,0,0,0,4,33,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,514,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,527,                    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,525,                    } catch (NumberFormatException nfe) {,2,0,0,1,4,0,0,2,0,4,37,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,538,                    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,536,                    } catch (NumberFormatException nfe) {,6,0,0,1,4,0,6,2,0,14,37,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,541,                    } catch (NumberFormatException e) {,2,0,0,1,4,0,0,2,0,4,35,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,581,                },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,579,                } catch (NumberFormatException nfe) {,4,0,0,1,4,0,0,2,0,6,37,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,584,                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {,2,0,0,5,11,0,0,2,0,4,66,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,585,                        return d;,2,0,0,0,0,4,10,4,0,20,9,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,587,                } catch (NumberFormatException nfe) {,2,0,0,1,4,0,6,4,0,12,37,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,591,                return createBigDecimal(str);,2,0,0,1,2,4,6,0,0,12,29,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,614,        return str.length() > 0;,0,1,0,1,2,1,4,0,0,5,24,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1313,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1314,            return false;,4,1,0,0,0,1,4,0,0,11,13,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1316,        char[] chars = str.toCharArray();,16,0,0,2,4,0,35,6,0,62,33,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1317,        int sz = chars.length;,0,0,0,0,0,0,0,0,0,0,22,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1318,        boolean hasExp = false;,4,1,0,0,0,0,0,0,0,6,23,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1319,        boolean hasDecPoint = false;,6,1,0,0,0,0,0,0,0,8,28,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1320,        boolean allowSigns = false;,2,0,0,0,0,0,4,0,0,8,27,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1321,        boolean foundDigit = false;,0,0,0,0,0,0,0,0,0,0,27,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1323,        int start = (chars[0] == '-') ? 1 : 0;,4,1,1,2,4,0,0,2,0,10,38,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1324,        if (sz > start + 1) {,0,0,0,1,3,0,0,0,0,4,21,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1325,            if (chars[start] == '0' && chars[start + 1] == 'x') {,0,0,0,3,7,0,0,0,0,10,53,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1326,                int i = start + 2;,4,3,0,0,0,0,8,0,0,15,18,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1327,                if (i == sz) {,4,1,0,1,3,0,0,0,0,5,14,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1331,                for (; i < chars.length; i++) {,6,1,0,1,3,0,4,0,0,12,31,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1332,                    if ((chars[i] < '0' || chars[i] > '9'),0,3,1,3,7,0,0,0,0,13,38,13,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1335,                        return false;,0,0,0,0,0,1,0,0,0,1,13,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1338,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1341,"        sz--; // don't want to loop to the last char, check it afterwords",2,0,0,0,0,0,0,0,0,3,65,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1343,        int i = start;,4,0,0,0,0,0,0,0,0,4,14,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1346,        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {,12,6,0,2,5,0,6,0,0,25,61,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1347,            if (chars[i] >= '0' && chars[i] <= '9') {,2,0,0,3,7,0,0,0,0,2,41,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1348,                foundDigit = true;,0,0,0,0,0,0,0,0,0,0,18,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1349,                allowSigns = false;,8,0,0,0,0,0,4,6,0,20,19,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1351,            } else if (chars[i] == '.') {,0,0,0,2,6,0,0,0,0,8,29,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1352,                if (hasDecPoint || hasExp) {,4,1,0,1,3,0,0,0,0,5,28,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1354,                    return false;,2,0,0,0,0,1,0,2,0,4,13,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1356,                hasDecPoint = true;,2,0,0,0,0,0,0,0,0,4,19,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1357,            } else if (chars[i] == 'e' || chars[i] == 'E') {,4,4,1,3,8,2,0,2,0,22,48,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1359,                if (hasExp) {,0,0,0,1,3,0,0,0,0,4,13,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1363,                if (!foundDigit) {,4,1,0,1,3,0,0,0,0,6,18,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1366,                hasExp = true;,2,0,0,0,0,0,0,0,0,4,14,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1367,                allowSigns = true;,10,2,0,0,0,0,0,0,0,15,18,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1368,            } else if (chars[i] == '+' || chars[i] == '-') {,6,1,0,3,8,0,4,0,0,12,48,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1369,                if (!allowSigns) {,4,1,0,1,3,0,0,0,0,7,18,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1370,                    return false;,0,0,0,0,0,1,0,0,0,1,13,13,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1372,                allowSigns = false;,2,1,0,0,0,0,2,0,0,7,19,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1373,                foundDigit = false; // we need a digit after the E,2,0,0,0,0,0,0,0,0,4,50,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1375,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1377,            i++;,2,0,0,0,0,3,2,2,0,10,4,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1379,        if (i < chars.length) {,6,1,0,1,3,0,0,0,0,7,23,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1380,            if (chars[i] >= '0' && chars[i] <= '9') {,0,3,1,3,7,0,0,0,0,13,41,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1382,                return true;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1384,            if (chars[i] == 'e' || chars[i] == 'E') {,0,3,1,3,7,0,0,0,0,13,41,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1386,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1388,            if (!allowSigns,0,0,0,0,1,0,0,0,0,1,15,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1393,                return foundDigit;,0,0,0,0,0,1,0,0,0,1,18,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1395,            if (chars[i] == 'l',2,0,0,1,3,0,0,0,0,2,19,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1398,                return foundDigit && !hasExp;,10,2,1,0,0,4,2,2,0,25,29,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,1401,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,36,230,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,41,    public static final Long LONG_ZERO = new Long(0L);,4,0,0,1,2,6,4,6,0,20,50,2,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,43,    public static final Long LONG_ONE = new Long(1L);,6,0,0,1,2,3,0,4,0,14,49,1,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,2,0,0,1,2,3,0,4,0,10,56,2,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,47,    public static final Integer INTEGER_ZERO = new Integer(0);,8,1,0,1,2,0,0,0,0,10,58,4,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,49,    public static final Integer INTEGER_ONE = new Integer(1);,2,0,0,1,2,0,6,0,0,8,57,3,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,51,    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);,2,0,0,1,2,3,0,4,0,10,64,2,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,53,    public static final Short SHORT_ZERO = new Short((short) 0);,0,0,0,2,4,0,0,0,0,6,60,4,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,55,    public static final Short SHORT_ONE = new Short((short) 1);,4,0,0,2,4,0,4,0,0,8,59,17,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,0,0,0,2,4,0,0,0,0,6,66,4,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,59,    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);,2,0,0,2,4,3,4,2,0,11,60,2,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,61,    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);,4,0,0,2,4,3,12,2,0,21,59,1,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,63,    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);,4,3,0,2,4,0,0,0,0,7,66,4,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,65,    public static final Double DOUBLE_ZERO = new Double(0.0d);,8,3,0,1,2,0,0,0,0,12,58,4,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,0,0,0,1,2,0,0,0,0,3,57,4,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,69,    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);,2,0,1,1,2,0,0,0,0,4,64,5,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,0,0,0,1,2,0,0,0,0,3,55,4,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/math/NumberUtils,36,73,    public static final Float FLOAT_ONE = new Float(1.0f);,0,0,0,1,2,0,0,0,0,3,54,4,0.07273,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2954,        if (array1 == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2956,        } else if (array2 == null) {,0,0,0,1,4,0,0,0,0,5,28,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2959,        final Class<?> type1 = array1.getClass().getComponentType();,2,0,0,2,4,1,6,2,0,11,60,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2960,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",10,1,0,4,8,0,6,4,0,21,80,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2961,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",4,0,0,1,2,0,8,0,0,12,59,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2962,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",8,0,0,1,2,0,14,0,0,23,71,3,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,2964,        return joinedArray;,0,0,0,0,0,1,0,0,0,1,19,4,0.33333,1,1,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,54,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,4,0,0,2,4,3,6,4,0,18,64,1,0.00319,1,1,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,58,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,62,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,0,0,0,2,4,0,0,0,0,6,64,4,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,66,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,2,0,0,2,4,3,0,0,0,5,58,2,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,70,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,4,0,0,2,4,3,0,4,0,11,65,1,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,74,    public static final int[] EMPTY_INT_ARRAY = new int[0];,0,0,0,2,4,0,0,0,0,6,55,4,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,78,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,82,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,2,0,0,2,4,3,0,0,0,5,61,2,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,86,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,2,0,0,2,4,3,0,4,0,9,68,2,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,90,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,4,0,0,2,4,3,0,2,0,9,58,1,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,94,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,0,0,0,2,4,0,0,0,0,6,65,4,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,98,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,2,0,0,2,4,3,0,0,0,5,64,2,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,102,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,2,0,0,2,4,3,0,4,0,9,71,2,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,106,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,8,3,0,2,4,3,0,0,0,15,61,1,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,110,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0,0,0,2,4,0,0,0,0,6,68,4,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,114,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,2,0,0,2,4,3,0,0,0,5,67,2,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,118,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,0,0,0,2,4,0,0,0,0,6,74,4,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,122,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0,0,0,2,4,0,12,0,0,12,58,7,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,126,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,0,0,0,2,4,0,0,0,0,6,80,4,0.00319,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,143,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,144,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,160,"        return toString(array, ""{}"");",0,0,0,2,4,1,0,0,0,7,29,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,176,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,177,            return stringIfNull;,2,0,0,0,0,1,8,2,0,12,20,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,179,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",0,0,0,3,6,1,0,0,0,10,87,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,193,"        return new EqualsBuilder().append(array1, array2).isEquals();",0,0,0,3,6,1,8,2,0,10,61,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,224,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,225,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,227,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",2,0,0,3,6,0,6,2,0,10,88,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,228,        for (int i = 0; i < array.length; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,229,            Object object = array[i];,2,0,1,1,2,0,0,2,0,8,25,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,230,"            if (object instanceof Map.Entry<?, ?>) {",0,0,0,1,3,0,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,231,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",12,0,0,1,2,0,0,0,0,12,47,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,232,"                map.put(entry.getKey(), entry.getValue());",0,0,0,3,6,0,12,0,0,12,42,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,233,            } else if (object instanceof Object[]) {,0,0,0,2,6,0,0,0,0,8,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,234,                Object[] entry = (Object[]) object;,0,0,0,3,6,0,0,0,0,9,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,235,                if (entry.length < 2) {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,236,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",0,0,0,0,1,0,0,0,0,1,63,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,240,"                map.put(entry[0], entry[1]);",2,1,1,3,6,0,4,0,0,11,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,241,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,242,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",2,1,0,0,1,0,0,2,0,7,63,10,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,247,        return map;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,265,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,266,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,268,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,281,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,282,            return null;,4,0,0,0,0,1,6,0,0,10,12,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,284,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,297,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,298,            return null;,0,0,0,0,0,1,8,0,0,8,12,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,300,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,313,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,314,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,316,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,329,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,330,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,332,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,345,        if (array == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,346,            return null;,12,0,0,0,0,1,0,2,0,16,12,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,348,        return array.clone();,2,0,0,1,2,1,0,2,0,4,21,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,361,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,362,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,364,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,377,        if (array == null) {,4,2,0,1,3,0,10,0,0,16,20,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,378,            return null;,2,0,0,0,0,1,4,0,0,6,12,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,380,        return array.clone();,0,0,0,1,2,1,0,0,0,4,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,393,        if (array == null) {,8,5,0,1,3,0,8,0,0,21,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,394,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,396,        return array.clone();,0,0,0,1,2,1,4,0,0,4,21,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/ArrayUtils,37,430,        if (array == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,182,"        return getInstance(pattern, timeZone, null);",0,0,0,1,2,1,6,0,0,7,44,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1300,                for (int i = mSize; --i >= 2; ) {,0,0,0,1,3,0,0,0,0,4,33,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1301,                    buffer.append('0');,0,0,0,1,2,0,4,0,0,5,19,10,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1303,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1304,                buffer.append((char)(value % 10 + '0'));,0,0,0,3,6,0,0,0,0,9,40,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1423,"            appendTo(buffer, calendar.get(Calendar.MONTH) + 1);",4,1,0,2,4,0,8,0,0,13,51,6,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1424,        },2,0,0,0,1,0,0,0,0,2,1,5,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1430,            buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,6,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1431,            buffer.append((char)(value % 10 + '0'));,4,2,0,3,6,3,6,2,0,19,40,1,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1432,        },0,0,0,0,1,0,0,0,0,1,1,4,0.03333,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1310,"                    Validate.isTrue(value > -1, ""Negative values should not be possible"", value);",2,1,0,1,2,0,6,0,0,11,77,10,0.03125,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1311,                    digits = Integer.toString(value).length();,2,0,0,2,4,0,8,0,0,11,42,9,0.03125,0,0,-1
defect4j,lang,org/apache/commons/lang3/Validate,38,121,        if (expression == false) {,2,1,0,1,3,0,0,0,0,4,26,4,0.03125,0,0,-1
defect4j,lang,org/apache/commons/lang3/Validate,38,124,    },0,0,0,0,1,0,0,0,0,1,1,4,0.03125,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1347,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,10,0,0,10,39,6,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1348,        },2,0,0,0,1,3,2,2,0,10,1,2,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1354,            if (value < 100) {,2,1,0,1,3,0,0,0,0,3,18,5,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1355,                buffer.append((char)(value / 10 + '0'));,2,2,0,3,6,0,4,0,0,9,40,8,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1356,                buffer.append((char)(value % 10 + '0'));,4,3,0,3,6,0,4,2,0,16,40,1,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1360,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1098,            buffer.append(mValue);,4,0,0,1,2,0,6,0,0,10,22,1,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1099,        },2,0,0,0,1,3,0,4,0,9,1,2,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,633,"                rule = selectNumberRule(Calendar.HOUR_OF_DAY, tokenLen);",0,0,0,1,2,0,0,0,0,3,56,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,634,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,639,"                rule = selectNumberRule(Calendar.SECOND, tokenLen);",6,0,0,1,2,0,4,0,0,11,51,7,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,640,                break;,0,0,0,0,0,0,4,0,0,6,6,5,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,738,                    if (i + 1 < length && pattern.charAt(i + 1) == '\'') {,6,5,0,2,5,0,4,0,0,16,54,10,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,743,                        inLiteral = !inLiteral;,2,1,0,0,0,0,0,0,0,3,23,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,832,"        return format(calendar, new StringBuffer(mMaxLengthEstimate)).toString();",0,0,0,3,6,1,0,0,0,10,73,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,871,        if (mTimeZoneForced) {,0,0,0,1,3,0,0,0,0,4,22,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,875,"        return applyRules(calendar, buf);",0,0,0,1,2,1,14,0,0,14,33,1,0.0303,1,1,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1292,"            appendTo(buffer, calendar.get(mField));",0,0,0,2,4,0,10,0,0,10,39,6,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1293,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1299,            if (value < 100) {,4,1,0,1,3,3,2,2,0,13,18,1,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1307,                if (value < 1000) {,2,1,0,1,3,0,0,0,0,3,19,7,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1313,                for (int i = mSize; --i >= digits; ) {,0,0,0,1,3,0,0,0,0,4,38,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1316,                buffer.append(Integer.toString(value));,0,0,0,2,4,0,10,0,0,10,39,8,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,1318,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0303,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,636,"                rule = selectNumberRule(Calendar.MINUTE, tokenLen);",0,0,0,1,2,0,0,0,0,3,51,4,0.02941,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,637,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.02941,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,887,        Rule[] rules = mRules;,4,0,0,1,2,0,0,2,0,6,22,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,888,        int len = mRules.length;,6,0,0,0,0,0,0,0,0,6,24,5,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/time/FastDateFormat,38,889,        for (int i = 0; i < len; i++) {,8,1,0,1,3,0,0,0,0,10,31,4,0.02857,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3612,        if (text == null || text.length() == 0 || searchList == null || ,4,8,0,1,3,0,4,0,0,16,63,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3615,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3619,        if (timeToLive < 0) {,4,1,0,1,3,0,6,2,0,13,21,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3623,        int searchLength = searchList.length;,0,0,0,0,0,0,0,0,0,0,37,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3624,        int replacementLength = replacementList.length;,0,0,0,0,0,0,0,0,0,0,47,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3627,        if (searchLength != replacementLength) {,10,1,0,1,3,0,0,0,0,11,40,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3635,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,2,0,1,2,4,0,0,0,0,5,64,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3638,        int textIndex = -1;,2,0,0,0,0,0,0,0,0,3,19,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3639,        int replaceIndex = -1;,2,0,0,0,0,0,0,0,0,3,22,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3640,        int tempIndex = -1;,2,0,0,0,0,0,12,0,0,16,19,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3644,        for (int i = 0; i < searchLength; i++) {,0,0,0,1,3,0,0,0,0,4,40,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3645,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3650,            tempIndex = text.indexOf(searchList[i]);,2,0,1,2,4,0,4,0,0,11,40,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3653,            if (tempIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3654,                noMoreMatchesForReplIndex[i] = true;,2,0,1,1,2,3,0,0,0,11,36,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3656,                if (textIndex == -1 || tempIndex < textIndex) {,0,0,0,1,3,0,0,0,0,4,47,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3657,                    textIndex = tempIndex;,0,3,0,0,0,0,12,0,0,15,22,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3658,                    replaceIndex = i;,0,0,0,0,0,0,0,0,0,0,17,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3665,        if (textIndex == -1) {,0,0,0,1,3,0,0,0,0,4,22,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3666,            return text;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3669,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3672,        int increase = 0;,2,0,0,0,0,0,0,0,0,2,17,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3675,        for (int i = 0; i < searchList.length; i++) {,0,0,0,1,3,0,0,0,0,4,45,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3676,            int greater = replacementList[i].length() - searchList[i].length();,4,1,1,4,8,0,8,0,0,22,67,3,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3677,            if (greater > 0) {,2,1,0,1,3,0,0,0,0,3,18,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3682,"        increase = Math.min(increase, text.length() / 5);",0,0,0,2,4,0,0,0,0,6,49,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3684,        StringBuilder buf = new StringBuilder(text.length() + increase);,4,1,0,2,4,0,4,4,0,13,64,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3686,        while (textIndex != -1) {,0,0,0,1,3,0,0,0,0,4,25,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3688,            for (int i = start; i < textIndex; i++) {,0,0,0,1,3,0,0,0,0,4,41,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3689,                buf.append(text.charAt(i));,0,0,0,2,4,0,10,0,0,10,27,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3691,            buf.append(replacementList[replaceIndex]);,4,0,0,2,4,0,0,4,0,8,42,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3693,            start = textIndex + searchList[replaceIndex].length();,2,1,0,2,4,0,0,0,0,3,54,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3695,            textIndex = -1;,4,0,0,0,0,3,0,0,0,9,15,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3696,            replaceIndex = -1;,2,0,0,0,0,0,0,0,0,4,18,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3697,            tempIndex = -1;,4,1,0,0,0,3,16,4,0,31,15,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3700,            for (int i = 0; i < searchLength; i++) {,8,2,1,1,3,0,4,0,0,20,40,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3701,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0,4,1,2,5,0,0,0,0,12,60,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3706,"                tempIndex = text.indexOf(searchList[i], start);",2,0,1,2,4,0,6,0,0,13,47,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3709,                if (tempIndex == -1) {,2,1,0,1,3,0,0,0,0,4,22,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3710,                    noMoreMatchesForReplIndex[i] = true;,0,0,1,1,2,0,0,0,0,6,36,10,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3712,                    if (textIndex == -1 || tempIndex < textIndex) {,2,0,0,1,3,0,0,2,0,4,47,11,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3713,                        textIndex = tempIndex;,4,0,0,0,0,0,0,0,0,5,22,12,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3714,                        replaceIndex = i;,10,0,0,0,0,6,14,4,0,39,17,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3721,        int textLength = text.length();,2,0,0,1,2,0,8,0,0,10,31,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3722,        for (int i = start; i < textLength; i++) {,0,0,0,1,3,0,0,0,0,4,42,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3723,            buf.append(text.charAt(i));,0,0,0,2,4,0,4,2,0,6,27,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3725,        String result = buf.toString();,0,0,0,1,2,0,0,0,0,3,31,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,3726,        if (!repeat) {,0,0,0,1,3,0,0,0,0,4,14,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,167,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,168,    },0,0,0,0,1,0,4,0,0,5,1,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,191,        return str == null || str.length() == 0;,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,209,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,6,0,0,7,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,229,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,230,            return true;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,232,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,0,0,4,9,0,0,0,0,13,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,234,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,237,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,257,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,286,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,312,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,313,        return isEmpty(ts) ? null : ts;,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,338,        return str == null ? EMPTY : str.trim();,2,1,0,1,2,1,4,0,0,7,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,366,"        return strip(str, null);",4,1,0,1,2,1,4,0,0,10,24,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,393,        if (str == null) {,8,2,0,1,3,0,0,0,0,11,18,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,394,            return null;,0,0,0,0,0,1,6,0,0,6,12,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,396,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,397,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,423,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,453,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,454,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,456,"        str = stripStart(str, stripChars);",6,0,0,1,2,0,0,2,0,8,34,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,457,"        return stripEnd(str, stripChars);",6,1,0,1,2,1,0,0,0,8,33,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,486,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,487,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,489,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,490,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,491,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,2,0,0,4,9,0,0,0,0,3,72,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,492,                start++;,2,0,0,0,0,0,6,0,0,8,8,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,494,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,495,            return str;,2,0,0,0,0,1,0,0,0,2,11,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,497,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,0,0,0,5,11,0,0,0,0,16,76,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,498,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,501,        return str.substring(start);,0,0,0,1,2,1,0,2,0,4,28,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,530,        if (str == null || (end = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,531,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,534,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,535,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,4,3,0,4,9,0,8,0,0,15,67,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,536,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang3/StringUtils,39,538,        } else if (stripChars.length() == 0) {,4,2,0,2,6,0,4,6,0,18,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1045,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1048,"        return contains(str.toUpperCase(), searchStr.toUpperCase());",0,0,0,3,6,1,0,0,0,10,60,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1018,        return str.indexOf(searchStr) >= 0;,0,1,0,1,2,1,6,0,0,7,35,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,1015,        if (str == null || searchStr == null) {,4,3,0,1,3,0,6,0,0,13,39,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,168,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,169,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,192,        return str == null || str.length() == 0;,4,3,0,1,2,1,4,0,0,11,40,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,210,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,16,0,0,17,33,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,230,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,231,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,233,        for (int i = 0; i < strLen; i++) {,0,0,0,1,3,0,0,0,0,4,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,234,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,2,1,0,4,9,0,24,0,0,27,55,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,235,                return false;,2,0,0,0,0,1,4,2,0,9,13,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,238,        return true;,2,0,0,0,0,1,0,0,0,3,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,258,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,6,0,0,7,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,287,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,313,        String ts = trim(str);,8,0,0,1,2,0,4,2,0,14,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,314,        return isEmpty(ts) ? null : ts;,4,0,0,1,2,1,4,0,0,9,31,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,339,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,367,"        return strip(str, null);",0,0,0,1,2,1,4,0,0,5,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,394,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,395,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,397,"        str = strip(str, null);",2,0,0,1,2,0,4,0,0,8,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,398,        return str.length() == 0 ? null : str;,6,1,0,1,2,1,10,2,0,19,38,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,424,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,454,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,455,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,457,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,458,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,487,        if (str == null || (strLen = str.length()) == 0) {,2,0,0,3,7,0,0,0,0,2,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,488,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,490,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,491,        if (stripChars == null) {,2,1,0,1,3,0,6,0,0,9,25,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,492,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,493,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,495,        } else if (stripChars.length() == 0) {,10,2,0,2,6,0,4,0,0,17,38,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,496,            return str;,0,1,0,0,0,1,6,0,0,7,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,498,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,2,0,0,5,11,0,4,0,0,9,76,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,499,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,502,        return str.substring(start);,2,0,0,1,2,1,10,0,0,13,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,531,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,12,0,0,12,47,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,532,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,535,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,536,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,4,1,1,4,9,3,12,12,0,35,67,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,537,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,539,        } else if (stripChars.length() == 0) {,2,0,0,2,6,0,0,2,0,5,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,540,            return str;,8,1,0,0,0,1,8,4,0,23,11,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,542,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,4,4,0,5,11,0,8,0,0,17,71,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,543,                end--;,2,0,0,0,0,3,2,0,0,8,6,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,546,"        return str.substring(0, end);",4,0,0,1,2,1,6,0,0,10,29,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,571,"        return stripAll(strs, null);",8,4,0,1,2,1,0,0,0,12,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,601,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,602,            return strs;,2,0,0,0,0,1,0,0,0,2,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,604,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,605,        for (int i = 0; i < strsLen; i++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,606,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,608,        return newArr;,2,0,0,0,0,1,0,0,0,2,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,634,        return str1 == null ? str2 == null : str1.equals(str2);,4,2,0,1,2,1,12,0,0,19,55,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,659,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,684,        if (isEmpty(str)) {,2,1,0,2,5,0,4,0,0,7,19,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,685,            return -1;,0,0,0,0,0,1,4,0,0,6,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,687,        return str.indexOf(searchChar);,2,0,0,1,2,1,0,0,0,2,31,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,716,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,717,            return -1;,2,1,0,0,0,4,4,0,0,13,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,719,"        return str.indexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,745,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,746,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,748,        return str.indexOf(searchStr);,0,0,0,1,2,1,6,0,0,6,30,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,779,        if (str == null || searchStr == null || ordinal <= 0) {,6,5,0,1,3,0,0,0,0,11,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,780,            return INDEX_NOT_FOUND;,2,0,0,0,0,1,0,0,0,2,23,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,782,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,783,            return 0;,2,0,0,0,0,1,6,0,0,8,9,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,785,        int found = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,786,        int index = INDEX_NOT_FOUND;,6,1,0,0,0,0,6,0,0,14,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,788,"            index = str.indexOf(searchStr, index + 1);",6,1,0,1,2,0,10,2,0,20,42,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,789,            if (index < 0) {,2,1,0,1,3,0,0,0,0,3,16,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,790,                return index;,4,0,0,0,0,1,0,2,0,6,13,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,792,            found++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,793,        } while (found < ordinal);,4,1,0,1,3,0,0,0,0,5,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,794,        return index;,2,0,0,0,0,1,0,0,0,3,13,10,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,829,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,830,            return -1;,10,0,1,0,0,1,2,4,0,20,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,833,        if (searchStr.length() == 0 && startPos >= str.length()) {,2,1,0,3,7,0,0,0,0,3,58,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,834,            return str.length();,0,1,0,1,2,1,12,0,0,14,20,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,836,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,861,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,40,862,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,170,            return StringUtils.EMPTY;,6,1,0,0,0,1,0,0,0,7,25,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,230,            return StringUtils.EMPTY;,4,1,0,0,0,4,0,4,0,12,25,1,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,229,        if (cls == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,232,        return getPackageName(cls.getName());,0,0,0,2,4,1,0,0,0,7,37,4,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,201,"            out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);",2,0,0,1,2,0,8,0,0,11,70,6,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,245,        if (className == null) {,2,1,0,1,3,0,0,0,0,3,24,4,0.16667,1,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,252,        int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,54,4,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,253,        if (i == -1) {,2,1,0,1,3,0,0,0,0,4,14,4,0.16667,1,1,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,256,"        return className.substring(0, i);",0,0,0,1,2,1,6,0,0,6,33,5,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,58,    public static final String PACKAGE_SEPARATOR = String.valueOf(PACKAGE_SEPARATOR_CHAR);,0,0,0,1,2,0,0,0,0,3,86,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,68,    public static final String INNER_CLASS_SEPARATOR = String.valueOf(INNER_CLASS_SEPARATOR_CHAR);,2,0,0,1,2,3,12,2,0,19,94,1,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,73,"    private static final Map<Class<?>, Class<?>> primitiveWrapperMap = new HashMap<Class<?>, Class<?>>();",2,0,0,1,2,3,0,12,0,17,101,2,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,75,"         primitiveWrapperMap.put(Boolean.TYPE, Boolean.class);",4,0,0,1,2,0,4,2,0,10,53,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,76,"         primitiveWrapperMap.put(Byte.TYPE, Byte.class);",4,0,0,1,2,0,4,2,0,10,47,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,77,"         primitiveWrapperMap.put(Character.TYPE, Character.class);",4,0,0,1,2,0,4,2,0,10,57,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,78,"         primitiveWrapperMap.put(Short.TYPE, Short.class);",4,0,0,1,2,0,4,2,0,10,49,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,79,"         primitiveWrapperMap.put(Integer.TYPE, Integer.class);",8,1,0,1,2,0,10,2,0,21,53,1,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,80,"         primitiveWrapperMap.put(Long.TYPE, Long.class);",0,0,0,1,2,0,0,0,0,3,47,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,81,"         primitiveWrapperMap.put(Double.TYPE, Double.class);",4,0,0,1,2,0,4,2,0,10,51,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,82,"         primitiveWrapperMap.put(Float.TYPE, Float.class);",4,1,0,1,2,0,0,0,0,5,49,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/ClassUtils,41,83,"         primitiveWrapperMap.put(Void.TYPE, Void.TYPE);",8,0,0,1,2,0,4,0,0,12,46,5,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,455,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,459,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,0,0,0,4,8,0,0,0,0,12,67,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,460,"            escapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,24,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,461,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,498,        if (writer == null ) {,4,1,0,1,3,0,6,0,0,12,22,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,501,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,504,"        Entities.HTML40.escape(writer, string);",4,0,0,1,2,0,6,0,0,10,39,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,505,    },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,832,"                    writer.write(""&#"");",0,0,0,1,2,0,4,0,0,5,19,11,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,833,"                    writer.write(Integer.toString(c, 10));",6,3,0,2,4,0,10,0,0,19,38,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,834,                    writer.write(';');,0,0,0,1,2,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,536,            return super.name(value);,0,0,0,1,2,1,0,0,0,4,25,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,831,                if (c > 0x7F) {,0,0,0,1,3,0,0,0,0,4,15,4,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,961,"                                        entityValue = Integer.parseInt(entityContent.substring(1), 10);",2,0,0,2,4,0,8,0,0,11,63,18,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,826,        int len = str.length();,0,0,0,1,2,0,0,0,0,3,23,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,827,        for (int i = 0; i < len; i++) {,0,0,0,1,3,0,0,0,0,4,31,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,828,            char c = str.charAt(i);,0,0,0,1,2,0,0,0,0,3,23,4,0.2,1,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,829,            String entityName = this.entityName(c);,4,2,1,1,2,0,8,0,0,21,39,3,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,830,            if (entityName == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,844,    },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,951,                        if (entityContentLen > 1) {,0,0,0,1,3,0,0,0,0,4,27,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,952,                            char isHexChar = entityContent.charAt(1);,0,0,0,1,2,0,0,0,0,3,41,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,954,                                switch (isHexChar) {,2,0,0,1,3,0,0,0,0,2,20,16,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,964,                                if (entityValue > 0xFFFF) {,2,1,0,1,3,0,0,0,0,3,27,16,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,969,                            },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,970,                        },0,0,0,0,1,0,0,0,0,1,1,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,525,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,529,            StringWriter writer = new StringWriter ((int)(str.length() * 1.5));,0,0,0,4,8,0,0,0,0,12,67,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,530,"            unescapeHtml(writer, str);",0,0,0,1,2,0,6,0,0,6,26,7,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,531,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,557,        if (writer == null ) {,2,1,0,1,3,0,0,0,0,3,22,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,560,        if (string == null) {,2,1,0,1,3,0,0,0,0,3,21,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,563,"        Entities.HTML40.unescape(writer, string);",0,0,0,1,2,0,6,0,0,7,41,5,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,42,564,    },0,0,0,0,1,0,0,0,0,1,1,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,42,245,        return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,981,                    writer.write(entityValue);,14,5,0,1,2,3,10,2,0,35,26,1,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,533,            if (value < LOOKUP_TABLE_SIZE) {,4,1,0,1,3,0,6,0,0,11,32,1,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,766,        return map.name(value);,0,0,0,1,2,1,6,0,0,6,23,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,457,            return (String) mapValueToName.get(value);,0,0,0,2,4,1,6,2,0,8,42,6,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,905,        int firstAmp = str.indexOf('&');,4,0,0,1,2,3,4,2,0,14,32,1,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,906,        if (firstAmp < 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,910,"            doUnescape(writer, str, firstAmp);",0,0,0,1,2,0,0,0,0,3,34,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,42,912,    },0,0,0,0,1,0,0,0,0,1,1,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,42,237,        Entry tab[] = table;,6,0,0,1,2,0,4,2,0,12,20,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,42,238,        int hash = key;,0,0,0,0,0,0,0,0,0,0,15,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,112,"        this(pattern, Locale.getDefault(), registry);",4,0,0,2,4,0,4,0,0,8,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,148,        ArrayList foundFormats = new ArrayList();,4,0,0,1,2,0,0,0,0,5,41,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,149,        ArrayList foundDescriptions = new ArrayList();,0,0,0,1,2,0,0,0,0,3,46,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,150,        StringBuffer stripCustom = new StringBuffer(pattern.length());,2,0,0,2,4,0,4,4,0,10,62,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,152,        ParsePosition pos = new ParsePosition(0);,2,0,0,1,2,0,0,4,0,6,41,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,153,        char[] c = pattern.toCharArray();,2,0,0,2,4,0,4,0,0,6,33,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,154,        int fmtCount = 0;,2,0,0,0,0,0,0,0,0,2,17,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,155,        while (pos.getIndex() < pattern.length()) {,4,2,0,3,7,0,8,12,0,27,43,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,156,            switch (c[pos.getIndex()]) {,2,0,1,3,7,0,10,4,0,18,28,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,187,                stripCustom.append(c[pos.getIndex()]);,0,0,1,3,6,0,8,0,0,10,38,8,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,188,                next(pos);,0,0,0,1,2,0,4,0,0,4,10,8,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,403,        pos.setIndex(pos.getIndex() + 1);,0,1,0,2,4,0,8,0,0,9,33,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,404,        return pos;,2,0,0,0,0,1,0,0,0,2,11,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,124,        super(DUMMY_PATTERN);,0,0,0,1,2,0,0,0,0,3,21,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,125,        setLocale(locale);,0,0,0,1,2,0,4,0,0,4,18,5,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,126,        this.registry = registry;,0,0,0,0,0,0,0,0,0,0,25,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,127,        applyPattern(pattern);,0,0,0,1,2,0,4,0,0,4,22,5,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,143,        if (registry == null) {,4,1,0,1,3,0,0,2,0,7,23,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,144,            super.applyPattern(pattern);,4,0,0,1,2,0,0,0,0,4,28,7,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,145,            toPattern = super.toPattern();,6,1,0,1,2,0,0,0,0,8,30,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/ExtendedMessageFormat,43,146,            return;,0,0,0,0,0,1,0,0,0,1,7,4,0.16667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,349,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,350,            chars = str.toCharArray();,10,1,0,1,2,0,4,0,0,17,26,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,351,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,43,363,            int len = chars.length;,8,2,0,0,0,0,4,0,0,15,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,139,        if (val == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,142,        if (val.length() == 0) {,2,1,0,2,5,0,4,4,0,11,24,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,145,"        if (val.startsWith(""--"")) {",0,0,0,2,5,0,4,0,0,5,27,5,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,152,"        if (val.startsWith(""0x"") || val.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,155,        char lastChar = val.charAt(val.length() - 1);,2,1,0,2,4,0,8,0,0,11,45,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,159,        int decPos = val.indexOf('.');,4,1,0,1,2,0,4,0,0,10,30,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,160,        int expPos = val.indexOf('e') + val.indexOf('E') + 1;,0,0,0,2,4,0,0,0,0,6,53,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,162,        if (decPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,174,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,177,                mant = val;,6,0,0,0,0,3,2,2,0,15,11,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,179,            dec = null;,2,0,0,0,0,0,0,0,0,3,11,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,181,        if (!Character.isDigit(lastChar)) {,0,0,0,2,5,0,6,0,0,7,35,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,182,            if (expPos > -1 && expPos < val.length() - 1) {,8,5,0,2,5,0,8,0,0,22,47,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,185,                exp = null;,2,0,0,0,0,0,0,0,0,3,11,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,188,"            String numeric = val.substring(0, val.length() - 1);",0,0,0,2,4,0,0,0,0,6,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/NumberUtils,44,189,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,5279,        return str == null ? EMPTY : str;,0,0,0,0,0,1,0,0,0,1,33,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,167,        super();,0,0,0,1,2,0,14,0,0,15,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,168,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,191,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,209,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,229,        if (str == null || (strLen = str.length()) == 0) {,6,4,0,3,7,0,4,0,0,15,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,230,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,232,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,233,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,10,0,0,12,55,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,234,                return false;,4,0,0,0,0,1,0,0,0,6,13,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,237,        return true;,12,4,0,0,0,8,4,10,0,38,12,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,257,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,282,        return str == null ? EMPTY : str.trim();,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,309,        return str == null ? null : str.trim();,0,0,0,1,2,1,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,335,        String ts = trim(str);,0,0,0,1,2,0,0,0,0,3,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,336,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,8,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,361,        return str == null ? EMPTY : str.trim();,2,0,0,1,2,1,4,0,0,7,40,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,389,"        return strip(str, null);",0,0,0,1,2,1,0,0,0,4,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,416,        if (str == null) {,2,0,0,1,3,2,4,2,0,10,18,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,417,            return null;,4,0,0,0,0,4,2,2,0,12,12,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,419,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,420,        return str.length() == 0 ? null : str;,2,0,0,1,2,1,0,0,0,2,38,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,446,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,476,        if (isEmpty(str)) {,0,0,0,2,5,0,4,0,0,4,19,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,477,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,479,"        str = stripStart(str, stripChars);",2,0,0,1,2,0,6,0,0,9,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,480,"        return stripEnd(str, stripChars);",2,0,0,1,2,1,6,2,0,11,33,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,509,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,510,            return str;,4,0,0,0,0,1,6,2,0,12,11,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,512,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,513,        if (stripChars == null) {,12,2,0,1,3,0,10,0,0,26,25,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,514,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,515,                start++;,2,0,0,0,0,0,0,0,0,3,8,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,517,        } else if (stripChars.length() == 0) {,2,1,0,2,6,0,10,2,0,15,38,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,518,            return str;,2,0,0,0,0,1,0,2,0,6,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,520,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,6,3,0,5,11,0,10,0,0,20,76,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,521,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,524,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,553,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,554,            return str;,2,0,0,0,0,1,0,0,0,2,11,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,557,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,558,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,4,9,0,0,0,0,13,67,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,559,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,561,        } else if (stripChars.length() == 0) {,10,1,0,2,6,0,0,0,0,12,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,562,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,564,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,4,4,0,5,11,0,14,0,0,23,71,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,565,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,568,"        return str.substring(0, end);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,593,"        return stripAll(strs, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,623,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,0,0,0,7,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,624,            return strs;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,626,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,8,0,0,8,38,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,627,        for (int i = 0; i < strsLen; i++) {,12,1,0,1,3,3,0,4,0,22,35,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,628,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,630,        return newArr;,14,2,0,0,0,7,4,0,0,29,14,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,656,        return str1 == null ? str2 == null : str1.equals(str2);,4,2,0,1,2,1,6,0,0,12,55,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,681,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,706,        if (isEmpty(str)) {,6,4,0,2,5,0,4,0,0,15,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,707,            return -1;,0,0,0,0,0,1,0,0,0,1,10,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,709,        return str.indexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,31,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,738,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,739,            return -1;,0,0,0,0,0,1,4,0,0,5,10,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,741,"        return str.indexOf(searchChar, startPos);",6,0,0,1,2,1,8,0,0,16,41,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,767,        if (str == null || searchStr == null) {,10,4,0,1,3,0,0,0,0,15,39,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,768,            return -1;,2,0,0,0,0,1,0,0,0,3,10,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,770,        return str.indexOf(searchStr);,0,0,0,1,2,1,6,0,0,6,30,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,801,        if (str == null || searchStr == null || ordinal <= 0) {,0,0,0,1,3,0,0,0,0,4,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,802,            return INDEX_NOT_FOUND;,2,1,0,0,0,1,0,0,0,3,23,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,804,        if (searchStr.length() == 0) {,0,0,0,2,5,0,0,0,0,7,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,805,            return 0;,0,0,0,0,0,1,0,0,0,1,9,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,807,        int found = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,808,        int index = INDEX_NOT_FOUND;,0,0,0,0,0,0,0,0,0,0,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,810,"            index = str.indexOf(searchStr, index + 1);",0,0,0,1,2,0,0,0,0,3,42,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,811,            if (index < 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,812,                return index;,2,0,0,0,0,1,0,0,0,2,13,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,814,            found++;,2,0,0,0,0,0,0,0,0,3,8,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,815,        } while (found < ordinal);,0,0,0,1,3,0,0,0,0,4,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,816,        return index;,2,0,0,0,0,1,4,2,0,8,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,851,        if (str == null || searchStr == null) {,4,3,0,1,3,0,0,0,0,7,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,852,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,855,        if (searchStr.length() == 0 && startPos >= str.length()) {,0,0,0,3,7,0,6,0,0,6,58,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,856,            return str.length();,0,0,0,1,2,1,10,0,0,10,20,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,858,"        return str.indexOf(searchStr, startPos);",0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,883,        if (isEmpty(str)) {,2,1,0,2,5,0,4,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,884,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,886,        return str.lastIndexOf(searchChar);,0,0,0,1,2,1,0,0,0,4,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,917,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,918,            return -1;,2,0,0,0,0,1,0,0,0,4,10,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,920,"        return str.lastIndexOf(searchChar, startPos);",0,0,0,1,2,1,0,0,0,4,45,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,946,        if (str == null || searchStr == null) {,0,0,0,1,3,0,0,0,0,4,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,947,            return -1;,4,1,0,0,0,1,0,0,0,5,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,949,        return str.lastIndexOf(searchStr);,0,0,0,1,2,1,0,0,0,4,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,981,        if (str == null || searchStr == null) {,6,3,0,1,3,0,0,0,0,9,39,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,982,            return -1;,2,0,0,0,0,4,2,2,0,11,10,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,984,"        return str.lastIndexOf(searchStr, startPos);",4,1,0,1,2,1,8,2,0,15,44,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1009,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1010,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1012,        return str.indexOf(searchChar) >= 0;,0,0,0,1,2,1,0,0,0,4,36,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1037,        if (str == null || searchStr == null) {,6,1,0,1,3,0,6,0,0,14,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,45,1038,            return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,244,                            out.write('\\');,6,1,0,1,2,0,4,0,0,12,16,3,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,245,                        out.write('/');,2,0,1,1,2,0,14,2,0,23,15,3,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,246,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,86,"        return escapeJavaStyleString(str, false);",2,0,0,1,2,4,8,2,0,17,41,1,0.33333,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,155,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,159,            StringWriter writer = new StringWriter(str.length() * 2);,2,1,0,2,4,0,4,4,0,11,57,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,160,"            escapeJavaStyleString(writer, str, escapeSingleQuotes);",0,0,0,1,2,0,0,0,0,3,55,4,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,161,            return writer.toString();,6,0,0,1,2,1,8,0,0,14,25,3,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,179,        if (out == null) {,6,1,0,1,3,3,2,2,0,16,18,1,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,182,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,186,        sz = str.length();,2,0,0,1,2,0,4,0,0,7,18,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,187,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,188,            char ch = str.charAt(i);,2,0,0,1,2,3,2,2,0,10,24,2,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,191,            if (ch > 0xfff) {,2,1,0,1,3,0,0,0,0,3,17,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,193,            } else if (ch > 0xff) {,0,0,0,1,4,0,0,0,0,5,23,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,195,            } else if (ch > 0x7f) {,2,1,0,1,4,0,0,0,0,3,23,8,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,197,            } else if (ch < 32) {,6,2,0,1,4,3,2,2,0,16,21,1,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,228,                switch (ch) {,0,0,0,1,3,0,0,0,0,4,13,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,248,                        out.write(ch);,0,0,0,1,2,0,0,0,0,3,14,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,253,    },0,0,0,0,1,0,0,0,0,1,1,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,46,45,    private static final String CSV_QUOTE_STR = String.valueOf(CSV_QUOTE);,2,0,0,1,2,3,6,2,0,13,70,2,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,158,        return nullText;,2,0,0,0,0,1,0,0,0,2,16,4,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1183,        if (width > 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1184,            ensureCapacity(size + width);,4,1,0,1,2,0,2,0,0,7,29,7,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1185,            String str = (obj == null ? getNullText() : obj.toString());,0,0,0,3,6,0,0,0,0,9,60,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1186,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1227,        if (width > 0) {,6,3,0,1,3,0,8,0,0,18,16,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1228,            ensureCapacity(size + width);,6,1,0,1,2,0,8,2,0,17,29,5,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1229,            String str = (obj == null ? getNullText() : obj.toString());,4,1,0,3,6,0,6,2,0,14,60,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,1230,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,98,        this(CAPACITY);,2,0,0,1,2,0,0,0,0,2,15,4,0.02837,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,99,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02837,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,107,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,108,        if (initialCapacity <= 0) {,0,0,0,1,3,0,0,0,0,4,27,4,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,111,        buffer = new char[initialCapacity];,2,0,1,1,2,0,0,0,0,5,35,4,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,112,    },2,0,0,0,1,0,6,0,0,9,1,3,0.02778,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,216,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,217,    },2,1,0,0,1,0,0,0,0,3,1,7,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",0,0,0,1,2,0,0,0,0,3,69,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,2,0,0,1,2,3,0,4,0,10,68,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,2,0,0,1,2,3,0,4,0,10,69,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",2,0,0,2,4,3,2,4,0,13,94,1,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,4,1,0,1,2,3,0,4,0,12,65,1,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,2,0,0,1,2,3,0,4,0,10,77,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",4,0,0,2,4,5,2,4,0,16,88,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,2,0,0,1,2,3,0,4,0,9,63,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,386,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,387,        },2,0,0,0,1,3,2,2,0,10,1,2,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,413,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,414,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,317,            super();,2,0,0,1,2,0,0,2,0,4,8,5,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,318,            this.ch = ch;,4,0,0,0,0,0,0,0,0,5,13,5,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,319,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,284,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,285,            this.chars = (char[]) chars.clone();,0,0,0,3,6,0,0,0,0,9,36,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,286,            Arrays.sort(this.chars);,2,0,0,1,2,0,4,0,0,6,24,6,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,287,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02484,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,228,        if (capacity > buffer.length) {,2,0,0,1,3,0,4,0,0,8,31,6,0.02094,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,233,        return this;,2,0,0,0,0,4,4,2,0,12,12,2,0.02094,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,80,        return COMMA_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,89,        return TAB_MATCHER;,4,0,0,0,0,3,4,2,0,12,19,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,98,        return SPACE_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,108,        return SPLIT_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,117,        return TRIM_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,126,        return SINGLE_QUOTE_MATCHER;,2,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,135,        return DOUBLE_QUOTE_MATCHER;,0,0,0,0,0,1,0,0,0,1,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,144,        return QUOTE_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,153,        return NONE_MATCHER;,0,0,1,0,0,1,8,0,0,10,20,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,163,        return new CharMatcher(ch);,2,0,0,1,2,1,0,2,0,4,27,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,173,        if (chars == null || chars.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,174,            return NONE_MATCHER;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,176,        if (chars.length == 1) {,0,0,0,1,3,0,0,0,0,4,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,177,            return new CharMatcher(chars[0]);,0,0,1,2,4,1,0,2,0,4,33,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,179,        return new CharSetMatcher(chars);,2,0,0,1,2,1,0,2,0,4,33,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,189,        if (chars == null || chars.length() == 0) {,0,0,0,2,5,0,0,0,0,7,43,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,190,            return NONE_MATCHER;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,192,        if (chars.length() == 1) {,0,0,0,2,5,0,0,0,0,7,26,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,193,            return new CharMatcher(chars.charAt(0));,0,0,0,2,4,1,4,2,0,6,40,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,195,        return new CharSetMatcher(chars.toCharArray());,0,0,0,2,4,1,0,0,0,7,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,205,        if (str == null || str.length() == 0) {,2,3,0,2,5,0,4,0,0,9,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,206,            return NONE_MATCHER;,2,1,0,0,0,1,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,208,        return new StringMatcher(str);,0,0,0,1,2,1,0,0,0,4,30,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,47,267,"        return isMatch(buffer, pos, 0, buffer.length);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2561,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2560,        StrBuilderTokenizer() {,0,0,0,1,3,0,0,0,0,4,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2562,        },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2566,            if (chars == null) {,0,0,0,1,3,0,0,0,0,4,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2567,"                return super.tokenize(StrBuilder.this.buffer, 0, StrBuilder.this.size());",0,0,0,2,4,1,0,0,0,7,73,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2569,"                return super.tokenize(chars, offset, count);",0,0,0,1,2,1,0,0,0,4,44,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2575,            String str = super.getContent();,4,0,0,1,2,0,0,2,0,7,32,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2576,            if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2577,                return StrBuilder.this.toString();,2,0,0,1,2,1,2,0,0,4,34,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,47,2579,                return str;,2,0,0,0,0,1,6,0,0,8,11,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,241,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,118,    private StrMatcher delimMatcher = StrMatcher.splitMatcher();,2,0,0,1,2,1,4,2,0,9,60,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,120,    private StrMatcher quoteMatcher = StrMatcher.noneMatcher();,0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,122,    private StrMatcher ignoredMatcher = StrMatcher.noneMatcher();,10,7,0,1,2,1,4,2,0,28,61,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,124,    private StrMatcher trimmerMatcher = StrMatcher.noneMatcher();,0,0,0,1,2,0,0,0,0,3,61,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,127,    private boolean emptyAsNull = false;,2,0,0,0,0,1,0,0,0,4,36,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,129,    private boolean ignoreEmptyTokens = true;,0,0,0,0,0,0,0,0,0,0,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,47,242,        this.chars = null;,4,0,0,0,0,0,0,0,0,5,18,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,372,            return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,381,                isEquals = lhs.equals(rhs);,4,0,0,1,2,0,6,2,0,13,27,4,0.05263,1,1,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,368,        if (isEquals == false) {,2,1,0,1,3,0,0,0,0,4,24,4,0.02222,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,371,        if (lhs == rhs) {,6,1,0,1,3,0,6,0,0,15,17,3,0.02222,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,374,        if (lhs == null || rhs == null) {,4,3,0,1,3,0,0,0,0,7,33,4,0.02222,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,378,        Class lhsClass = lhs.getClass();,2,0,0,1,2,0,4,2,0,8,32,4,0.02222,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,379,        if (!lhsClass.isArray()) {,6,1,0,2,5,0,4,0,0,12,26,4,0.02222,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,408,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.02222,1,1,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,831,        return this.isEquals;,4,1,0,0,0,1,0,0,0,6,21,6,0.01639,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,100,    public EqualsBuilder() {,2,0,0,1,3,1,0,0,0,3,24,2,0.01613,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,92,    private boolean isEquals = true;,6,0,0,0,0,1,4,0,0,12,32,1,0.01613,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,102,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01613,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,125,"        return reflectionEquals(lhs, rhs, false, null, null);",4,0,0,1,2,1,6,0,0,13,53,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,148,"        return reflectionEquals(lhs, rhs, ReflectionToStringBuilder.toNoNullStringArray(excludeFields));",0,0,0,2,4,1,0,0,0,7,96,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,171,"        return reflectionEquals(lhs, rhs, false, null, excludeFields);",0,0,0,1,2,1,8,0,0,10,62,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,195,"        return reflectionEquals(lhs, rhs, testTransients, null, null);",0,0,0,1,2,1,0,0,0,4,62,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,224,"        return reflectionEquals(lhs, rhs, testTransients, reflectUpToClass, null);",2,1,0,1,2,1,10,0,0,14,74,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,255,        if (lhs == rhs) {,4,0,0,1,3,0,8,2,0,14,17,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/builder/EqualsBuilder,48,256,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,146,            if (numerator==Integer.MIN_VALUE ||,6,2,0,0,1,0,0,0,0,8,35,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,150,            numerator = -numerator;,2,0,0,0,0,0,0,4,0,6,23,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,151,            denominator = -denominator;,4,0,0,0,0,0,0,0,0,6,27,6,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,578,        if (u>0) { u=-u; } // make u negative,0,0,0,2,4,0,4,0,0,5,37,5,0.125,1,1,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,579,        if (v>0) { v=-v; } // make v negative,0,0,0,2,4,0,0,0,0,6,37,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,581,        int k=0;,0,0,0,0,0,0,0,0,0,0,8,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,582,        while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...,6,7,0,3,7,0,0,0,0,13,72,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,585,        if (k==31) {,2,1,0,1,3,0,0,0,0,3,12,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,590,        int t = ((u&1)==1) ? v : -(u/2)/*B3*/;,8,3,0,3,6,0,0,0,0,12,38,5,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,596,            while ((t&1)==0) { // while t is even..,4,2,0,2,5,3,6,2,0,17,39,1,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,600,            if (t>0) {,2,1,0,1,3,0,0,0,0,3,10,6,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,601,                u = -t;,0,0,0,0,0,0,0,0,0,0,7,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,603,                v = t;,4,0,0,0,0,0,0,0,0,5,6,8,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,606,            t = (v - u)/2;,6,2,0,1,2,0,0,0,0,9,14,6,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,609,        } while (t!=0);,2,1,0,1,3,0,0,0,0,3,15,4,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,610,        return -u*(1<<k); // gcd is u*2^k,2,0,0,1,2,4,0,0,0,5,33,2,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,571,        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {,2,1,0,3,7,0,0,0,0,3,43,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,572,            return 1;,6,0,0,0,0,1,8,0,0,14,9,3,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,142,        if (denominator == 0) {,4,1,0,1,3,1,0,2,0,8,23,1,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,145,        if (denominator < 0) {,2,1,0,1,3,0,0,0,0,3,22,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/math/Fraction,49,153,"        return new Fraction(numerator, denominator);",0,0,0,1,2,1,0,0,0,4,44,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1708,"        public Pair(Object obj1, Object obj2) {",6,0,0,1,3,1,0,4,0,11,39,3,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1709,            mObj1 = obj1;,4,2,0,0,0,0,0,0,0,6,13,10,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1710,            mObj2 = obj2;,0,0,0,0,0,0,0,0,0,0,13,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1711,        },4,1,0,0,1,0,0,0,0,5,1,8,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1738,            return,0,0,0,0,0,0,0,0,0,0,6,4,4.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,772,            return new UnpaddedNumberField(field);,2,0,0,1,2,1,0,2,0,4,38,6,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,954,        return mLocale;,4,0,0,0,0,1,4,0,0,9,15,3,1.33333,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1185,        UnpaddedNumberField(int field) {,0,0,0,1,3,0,0,0,0,4,32,4,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1186,            mField = field;,2,0,0,0,0,3,0,4,0,9,15,2,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1187,        },0,0,0,0,1,0,0,0,0,1,1,4,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1176,        static final UnpaddedNumberField INSTANCE_YEAR = new UnpaddedNumberField(Calendar.YEAR);,6,0,0,1,2,2,0,4,0,12,88,3,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1193,            return 4;,0,0,0,0,0,1,0,0,0,1,9,4,1.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,234,"        return getDateInstance(style, null, null);",0,0,0,1,2,1,0,0,0,4,42,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,293,                locale = Locale.getDefault();,0,0,0,1,2,0,0,0,0,3,29,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,408,"        return getDateTimeInstance(dateStyle, timeStyle, null, null);",0,0,0,1,2,1,6,0,0,7,61,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,425,"        return getDateTimeInstance(dateStyle, timeStyle, null, locale);",4,0,0,1,2,1,8,0,0,13,63,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,461,"        Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));",12,2,0,3,6,0,0,8,0,22,70,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,462,        if (timeZone != null) {,2,1,0,1,3,0,0,0,0,3,23,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,465,        if (locale != null) {,2,1,0,1,3,0,0,0,0,3,21,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,466,"            key = new Pair(key, locale);",0,0,0,1,2,0,0,0,0,3,28,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,469,        FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);,8,5,0,2,4,0,10,4,0,28,73,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,470,        if (format == null) {,4,2,0,1,3,0,10,0,0,16,21,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,471,            if (locale == null) {,4,1,0,1,3,2,4,2,0,13,21,2,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,472,                locale = Locale.getDefault();,0,0,0,1,2,0,0,0,0,3,29,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,475,"                SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,",2,0,0,1,3,0,8,4,0,14,100,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,477,                String pattern = formatter.toPattern();,6,0,0,1,2,3,4,4,0,18,39,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,478,"                format = getInstance(pattern, timeZone, locale);",2,0,0,1,2,0,8,0,0,11,48,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,479,"                cDateTimeInstanceCache.put(key, format);",2,0,0,1,2,2,8,4,0,16,40,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,483,            },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,485,        return format;,4,1,0,0,0,1,8,0,0,13,14,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,672,                if (tokenLen >= 4) {,2,1,0,1,3,0,0,0,0,3,20,7,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,675,"                    rule = new TimeZoneNameRule(mTimeZone, mTimeZoneForced, mLocale, TimeZone.SHORT);",12,0,0,1,2,0,0,2,0,15,81,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,677,                break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1717,            if (this == obj) {,0,0,0,1,3,0,6,0,0,6,18,9,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1721,            if (!(obj instanceof Pair)) {,0,0,0,2,5,0,0,0,0,7,29,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1725,            Pair key = (Pair)obj;,2,1,0,1,2,0,0,0,0,4,21,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,50,1727,            return,2,0,0,0,0,3,0,4,0,9,6,2,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,44,      super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,45,    },4,0,0,0,1,0,0,0,0,4,1,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,64,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,65,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,67,        return (bool.booleanValue() ? Boolean.FALSE : Boolean.TRUE);,0,0,0,2,4,1,0,0,0,7,60,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,87,        if (bool == null) {,2,1,0,1,3,0,0,0,0,3,19,4,0.0,1,1,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,88,            return false;,0,0,0,0,0,1,4,0,0,5,13,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,90,        return bool.booleanValue() ? true : false;,0,0,0,1,2,1,0,0,0,4,42,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,108,        return !isTrue(bool);,2,0,0,1,2,1,8,0,0,11,21,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,126,        if (bool == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,127,            return false;,0,0,0,0,0,1,0,0,0,1,13,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,129,        return bool.booleanValue() ? false : true;,0,0,0,1,2,1,4,0,0,6,42,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/BooleanUtils,51,147,        return !isFalse(bool);,0,0,0,1,2,1,0,0,0,4,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,150,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,173,"            throw new IllegalArgumentException(""The Writer must not be null"");",0,0,0,1,2,0,4,2,0,8,66,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,229,                        out.write('\\');,2,0,0,1,2,3,4,2,0,12,16,1,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,230,"                        out.write('""');",0,0,0,1,2,0,4,0,0,5,15,13,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,231,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,223,                        if (escapeSingleQuote) {,0,0,0,1,3,0,0,0,0,4,24,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,226,                        out.write('\'');,2,0,0,1,2,0,4,0,0,8,16,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,227,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,149,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,153,            StringWriter writer = new StringWriter(str.length() * 2);,4,1,0,2,4,0,4,4,0,13,57,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,154,"            escapeJavaStyleString(writer, str, escapeSingleQuotes);",0,0,0,1,2,0,0,0,0,3,55,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,155,            return writer.toString();,0,0,0,1,2,1,4,0,0,4,25,7,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,172,        if (out == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,175,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,179,        sz = str.length();,2,0,0,1,2,0,4,0,0,7,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,180,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringEscapeUtils,52,181,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,676,                        if (field == DateUtils.SEMI_MONTH) {,6,1,0,1,3,0,0,0,0,7,36,12,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,689,"                            val.add(fields[i][0], 1);",0,0,0,3,6,0,0,0,0,9,25,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,437,        if (date == null) {,0,0,0,1,3,0,0,0,0,4,19,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,440,        Calendar gval = Calendar.getInstance();,2,0,0,1,2,0,4,2,0,8,39,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,441,        gval.setTime(date);,0,0,0,1,2,0,6,0,0,6,19,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,442,"        modify(gval, field, true);",0,0,0,1,2,0,0,0,0,3,26,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,443,        return gval.getTime();,0,0,0,1,2,1,4,0,0,4,22,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,621,        if (val.get(Calendar.YEAR) > 280000000) {,4,1,0,2,5,0,4,0,0,9,41,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,625,        if (field == Calendar.MILLISECOND) {,0,0,0,1,3,0,0,0,0,4,36,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,635,        Date date = val.getTime();,2,0,0,1,2,0,4,2,0,8,26,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,636,        long time = date.getTime();,0,0,0,1,2,0,0,0,0,3,27,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,637,        boolean done = false;,2,0,0,0,0,0,0,0,0,3,21,5,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,640,        int millisecs = val.get(Calendar.MILLISECOND);,0,0,0,1,2,0,0,0,0,3,46,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,641,        if (!round || millisecs < 500) {,4,2,0,1,3,0,0,0,0,7,32,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,649,        int seconds = val.get(Calendar.SECOND);,0,0,0,1,2,0,0,0,0,3,39,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,650,        if (!done && (!round || seconds < 30)) {,8,3,0,2,5,0,4,0,0,18,40,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,53,658,        int minutes = val.get(Calendar.MINUTE);,6,0,0,1,2,0,4,0,0,10,39,5,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,116,"                throw new IllegalArgumentException(""Invalid locale format: "" + str);",2,1,0,1,2,0,0,2,0,6,68,9,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,110,            if (str.charAt(2) != '_') {,8,5,0,2,5,0,4,0,0,18,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,113,            char ch3 = str.charAt(3);,2,0,0,1,2,0,4,0,0,6,25,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,114,            char ch4 = str.charAt(4);,2,0,0,1,2,0,4,0,0,6,25,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,115,            if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {,8,7,0,1,3,0,0,0,0,19,55,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,95,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/LocaleUtils,54,98,        int len = str.length();,2,0,0,1,2,0,4,0,0,6,23,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,179,        stopTime = System.currentTimeMillis();,2,0,0,1,2,0,4,0,0,7,38,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,180,        this.runningState = STATE_SUSPENDED;,4,0,0,0,0,0,0,0,0,5,36,4,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,181,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,176,        if(this.runningState != STATE_RUNNING) {,4,1,0,1,3,0,0,0,0,5,40,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/StopWatch,55,210,            return this.stopTime - this.startTime;,4,1,0,0,0,1,0,0,0,5,38,6,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,631,"                rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);",6,0,0,1,2,0,4,0,0,11,57,7,0.07692,1,1,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,632,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.07692,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,167,"        return getInstance(pattern, null, null);",0,0,0,1,2,1,4,0,0,5,40,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,553,            locale = Locale.getDefault();,4,0,0,1,2,3,6,2,0,17,29,1,0.0625,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,614,"                    rule = selectNumberRule(Calendar.YEAR, tokenLen);",12,0,0,1,2,0,4,0,0,17,49,3,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,625,                    rule = TwoDigitMonthField.INSTANCE;,10,1,0,0,0,0,4,0,0,16,35,3,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,777,"            return new PaddedNumberField(field, padding);",4,0,0,1,2,1,0,2,0,6,45,6,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1261,"        PaddedNumberField(int field, int size) {",0,0,0,1,3,0,0,0,0,4,40,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1262,            if (size < 3) {,2,1,0,1,3,0,0,0,0,3,15,5,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1266,            mField = field;,0,0,0,0,0,0,0,0,0,0,15,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1267,            mSize = size;,0,0,0,0,0,0,0,0,0,0,13,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1268,        },0,0,0,0,1,0,0,0,0,1,1,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1274,            return 4;,0,0,0,0,0,1,0,0,0,1,9,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1398,            super();,10,1,0,1,2,0,0,0,0,12,8,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1399,        },0,0,0,0,1,0,8,0,0,8,1,5,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1392,        static final TwoDigitMonthField INSTANCE = new TwoDigitMonthField();,6,0,0,1,2,2,0,4,0,13,68,1,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,1405,            return 2;,0,0,0,0,0,1,0,0,0,1,9,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,539,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,540,        if (pattern == null) {,2,0,0,1,3,0,4,0,0,6,22,5,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,543,        mPattern = pattern;,4,0,0,0,0,0,0,0,0,5,19,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,545,        mTimeZoneForced = (timeZone != null);,0,0,0,1,2,0,0,0,0,3,37,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,546,        if (timeZone == null) {,0,0,0,1,3,0,0,0,0,4,23,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,547,            timeZone = TimeZone.getDefault();,6,1,0,1,2,0,8,0,0,16,33,3,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,549,        mTimeZone = timeZone;,0,0,0,0,0,0,0,0,0,0,21,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,551,        mLocaleForced = (locale != null);,0,0,0,1,2,0,0,0,0,3,33,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,552,        if (locale == null) {,2,0,0,1,3,3,0,0,0,5,21,2,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,555,        mLocale = locale;,0,0,0,0,0,0,0,0,0,0,17,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,556,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,111,    private static Map cInstanceCache = new HashMap(7);,6,0,0,1,2,2,0,4,0,14,51,1,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,112,    private static Map cDateInstanceCache = new HashMap(7);,6,2,0,1,2,0,4,0,0,14,55,3,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,113,    private static Map cTimeInstanceCache = new HashMap(7);,0,0,0,1,2,0,0,0,0,3,55,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,114,    private static Map cDateTimeInstanceCache = new HashMap(7);,0,0,0,1,2,0,0,0,0,3,59,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,115,    private static Map cTimeZoneDisplayCache = new HashMap(7);,2,0,0,1,2,3,0,4,0,9,58,2,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,213,"        FastDateFormat emptyFormat = new FastDateFormat(pattern, timeZone, locale);",0,0,0,1,2,0,0,0,0,3,75,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,214,        FastDateFormat format = (FastDateFormat) cInstanceCache.get(emptyFormat);,0,0,0,2,4,0,0,0,0,6,73,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,215,        if (format == null) {,4,2,0,1,3,1,8,0,0,17,21,3,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,216,            format = emptyFormat;,0,0,0,0,0,0,0,0,0,0,21,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,217,            format.init();  // convert shell format into usable one,2,0,0,1,2,0,6,0,0,10,55,6,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,218,"            cInstanceCache.put(format, format);  // this is OK!",2,0,0,1,2,3,10,2,0,18,51,1,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,220,        return format;,0,0,0,0,0,1,0,0,0,1,14,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,562,        List rulesList = parsePattern();,2,0,0,1,2,3,4,2,0,11,32,2,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,563,        mRules = (Rule[]) rulesList.toArray(new Rule[rulesList.size()]);,0,0,0,5,10,0,0,0,0,15,64,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/time/FastDateFormat,56,565,        int len = 0;,0,0,0,0,0,0,0,0,0,0,12,4,0.05556,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1083,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,1084,    },2,1,0,0,1,0,0,0,0,3,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,87,"    public static final String AWT_TOOLKIT = getSystemProperty(""awt.toolkit"");",2,0,0,1,2,3,2,2,0,10,74,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,105,"    public static final String FILE_ENCODING = getSystemProperty(""file.encoding"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,122,"    public static final String FILE_SEPARATOR = getSystemProperty(""file.separator"");",0,0,0,1,2,0,0,0,0,3,80,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,138,"    public static final String JAVA_AWT_FONTS = getSystemProperty(""java.awt.fonts"");",2,0,0,1,2,3,2,2,0,10,80,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,154,"    public static final String JAVA_AWT_GRAPHICSENV = getSystemProperty(""java.awt.graphicsenv"");",2,1,0,1,2,0,0,0,0,3,92,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,175,"    public static final String JAVA_AWT_HEADLESS = getSystemProperty(""java.awt.headless"");",2,0,0,1,2,3,2,2,0,10,86,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,191,"    public static final String JAVA_AWT_PRINTERJOB = getSystemProperty(""java.awt.printerjob"");",2,0,0,1,2,3,2,2,0,10,90,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,207,"    public static final String JAVA_CLASS_PATH = getSystemProperty(""java.class.path"");",2,0,0,1,2,3,2,2,0,10,82,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,224,"    public static final String JAVA_CLASS_VERSION = getSystemProperty(""java.class.version"");",2,0,0,1,2,3,2,2,0,10,88,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,241,"    public static final String JAVA_COMPILER = getSystemProperty(""java.compiler"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,258,"    public static final String JAVA_ENDORSED_DIRS = getSystemProperty(""java.endorsed.dirs"");",0,0,0,1,2,0,0,0,0,3,88,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,275,"    public static final String JAVA_EXT_DIRS = getSystemProperty(""java.ext.dirs"");",2,0,0,1,2,3,2,2,0,10,78,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,291,    public static final String JAVA_HOME = getSystemProperty(JAVA_HOME_KEY);,0,0,0,1,2,0,0,0,0,3,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/SystemUtils,57,307,    public static final String JAVA_IO_TMPDIR = getSystemProperty(JAVA_IO_TMPDIR_KEY);,4,0,0,1,2,6,4,6,0,20,82,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,464,"                    throw new NumberFormatException(str + "" is not a valid number."");",2,1,0,1,2,0,0,2,0,6,65,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1508,            return false;,4,1,0,0,0,1,8,6,0,20,13,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,398,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,401,        if (StringUtils.isBlank(str)) {,0,0,0,2,5,0,0,0,0,7,31,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,404,"        if (str.startsWith(""--"")) {",0,0,0,2,5,0,0,0,0,7,27,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,411,"        if (str.startsWith(""0x"") || str.startsWith(""-0x"")) {",0,1,0,3,7,0,8,0,0,11,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,414,        char lastChar = str.charAt(str.length() - 1);,0,0,0,2,4,0,0,0,0,6,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,418,        int decPos = str.indexOf('.');,0,0,0,1,2,0,0,0,0,3,30,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,419,        int expPos = str.indexOf('e') + str.indexOf('E') + 1;,2,1,0,2,4,0,12,0,0,19,53,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,421,        if (decPos > -1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,433,            if (expPos > -1) {,2,1,0,1,3,0,0,0,0,4,18,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,436,                mant = str;,4,0,0,0,0,0,0,0,0,5,11,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,438,            dec = null;,6,0,0,0,0,0,0,0,0,8,11,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,440,        if (!Character.isDigit(lastChar)) {,2,1,1,2,5,0,6,0,0,14,35,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,441,            if (expPos > -1 && expPos < str.length() - 1) {,4,4,0,2,5,0,4,0,0,13,47,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,444,                exp = null;,4,1,0,0,0,1,4,2,0,12,11,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,447,"            String numeric = str.substring(0, str.length() - 1);",8,4,0,2,4,0,8,2,0,22,52,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,448,            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);,2,1,0,2,4,0,8,0,0,11,55,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,449,            switch (lastChar) {,0,0,0,1,3,0,0,0,0,4,19,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,452,                    if (dec == null,4,1,0,0,1,3,0,0,0,8,15,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,457,                            return createLong(numeric);,0,0,0,1,2,1,4,0,0,4,27,12,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,556,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,559,        for (int i = str.length() - 1; i >= 0; i--) {,6,2,0,2,5,0,4,0,0,13,45,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,560,            if (str.charAt(i) != '0') {,6,2,0,2,5,0,6,0,0,16,27,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,561,                return false;,4,1,0,0,0,1,0,0,0,7,13,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,185,        return str == null || str.length() == 0;,0,0,0,1,2,1,0,0,0,4,40,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,223,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,226,        for (int i = 0; i < strLen; i++) {,10,2,0,1,3,0,4,0,0,17,34,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,227,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,0,1,0,4,9,0,26,0,0,28,55,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,228,                return false;,0,0,0,0,0,1,0,0,0,1,13,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,628,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,631,        return Long.valueOf(str);,0,0,0,1,2,1,0,0,0,4,25,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1507,        if (StringUtils.isEmpty(str)) {,0,0,0,2,5,0,6,0,0,6,31,5,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1510,        for (int i = 0; i < str.length(); i++) {,6,1,0,2,5,0,4,0,0,12,40,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1511,            if (!Character.isDigit(str.charAt(i))) {,0,0,0,3,7,0,0,0,0,10,40,4,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,1515,        return true;,4,3,0,0,0,1,0,0,0,8,12,3,0.33333,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,41,    public static final Long LONG_ZERO = new Long(0L);,4,1,1,1,2,3,8,4,0,28,50,1,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,43,    public static final Long LONG_ONE = new Long(1L);,0,0,0,1,2,0,0,0,0,3,49,4,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,45,    public static final Long LONG_MINUS_ONE = new Long(-1L);,2,0,0,1,2,0,0,0,0,2,56,5,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,47,    public static final Integer INTEGER_ZERO = new Integer(0);,0,0,0,1,2,0,0,0,0,3,58,4,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,49,    public static final Integer INTEGER_ONE = new Integer(1);,0,0,0,1,2,0,0,0,0,3,57,4,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,51,    public static final Integer INTEGER_MINUS_ONE = new Integer(-1);,2,0,0,1,2,0,6,2,0,12,64,1,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,53,    public static final Short SHORT_ZERO = new Short((short) 0);,2,0,0,2,4,3,0,4,0,9,60,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,55,    public static final Short SHORT_ONE = new Short((short) 1);,4,2,0,2,4,3,4,4,0,18,59,1,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,57,    public static final Short SHORT_MINUS_ONE = new Short((short) -1);,2,0,0,2,4,3,0,4,0,10,66,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,59,    public static final Byte BYTE_ZERO = new Byte((byte) 0);,2,0,0,2,4,3,0,4,0,9,56,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,61,    public static final Byte BYTE_ONE = new Byte((byte) 1);,2,0,0,2,4,3,0,4,0,9,55,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,63,    public static final Byte BYTE_MINUS_ONE = new Byte((byte) -1);,2,0,0,2,4,3,0,4,0,10,62,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,65,    public static final Double DOUBLE_ZERO = new Double(0.0d);,2,0,0,1,2,3,2,0,0,8,58,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,67,    public static final Double DOUBLE_ONE = new Double(1.0d);,2,0,0,1,2,3,0,4,0,9,57,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,69,    public static final Double DOUBLE_MINUS_ONE = new Double(-1.0d);,2,0,0,1,2,3,0,4,0,10,64,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,71,    public static final Float FLOAT_ZERO = new Float(0.0f);,2,0,0,1,2,3,0,4,0,9,55,2,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,73,    public static final Float FLOAT_ONE = new Float(1.0f);,2,0,0,1,2,3,6,4,0,15,54,1,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/math/NumberUtils,58,75,    public static final Float FLOAT_MINUS_ONE = new Float(-1.0f);,0,0,0,1,2,0,0,0,0,3,61,4,0.0137,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,161,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,162,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,203,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,224,            return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,231,        return true;,2,0,0,0,0,4,0,12,0,17,12,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,251,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,276,        return str == null ? EMPTY : str.trim();,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,303,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,329,        String ts = trim(str);,12,3,0,1,2,0,16,2,0,33,22,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,330,        return isEmpty(ts) ? null : ts;,10,0,0,1,2,1,20,4,0,35,31,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,355,        return str == null ? EMPTY : str.trim();,0,0,0,1,2,1,0,0,0,4,40,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,383,"        return strip(str, null);",2,1,0,1,2,1,4,0,0,8,24,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,410,        if (str == null) {,2,0,0,1,3,0,0,0,0,2,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,411,            return null;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,413,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,414,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,440,"        return str == null ? EMPTY : strip(str, null);",2,0,0,1,2,1,0,0,0,2,46,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,470,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,471,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,473,"        str = stripStart(str, stripChars);",2,0,0,1,2,1,0,2,0,5,34,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,474,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,6,0,0,6,33,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,503,        if (str == null || (strLen = str.length()) == 0) {,4,3,0,3,7,0,4,0,0,12,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,504,            return str;,6,1,0,0,0,1,4,0,0,12,11,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,506,        int start = 0;,2,0,0,0,0,0,0,0,0,2,14,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,507,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,508,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0,0,0,4,9,0,0,0,0,13,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,509,                start++;,12,3,1,0,0,3,18,4,0,47,8,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,511,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,6,0,0,6,38,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,512,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,514,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,0,0,0,5,11,0,0,0,0,16,76,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,515,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,518,        return str.substring(start);,2,0,0,1,2,1,0,2,0,6,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,547,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,47,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,548,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,551,        if (stripChars == null) {,2,1,0,1,3,0,0,0,0,3,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,552,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,4,9,0,0,0,0,13,67,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,553,                end--;,10,0,0,0,0,1,0,6,0,18,6,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,555,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,556,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,558,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,0,0,0,5,11,0,0,0,0,16,71,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,559,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,562,"        return str.substring(0, end);",0,0,0,1,2,1,6,0,0,6,29,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,587,"        return stripAll(strs, null);",0,0,0,1,2,1,4,0,0,5,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,617,        if (strs == null || (strsLen = strs.length) == 0) {,0,0,0,2,5,0,4,0,0,5,51,15,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,618,            return strs;,4,0,0,0,0,3,8,2,0,17,12,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,620,        String[] newArr = new String[strsLen];,0,0,0,2,4,0,0,0,0,6,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,621,        for (int i = 0; i < strsLen; i++) {,12,0,0,1,3,3,0,6,0,21,35,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,622,"            newArr[i] = strip(strs[i], stripChars);",0,0,0,3,6,0,0,0,0,9,39,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,624,        return newArr;,6,0,0,0,0,1,0,0,0,7,14,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,650,        return str1 == null ? str2 == null : str1.equals(str2);,0,0,0,1,2,1,0,0,0,4,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,675,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0,0,0,1,2,1,0,0,0,4,65,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,700,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,58,701,            return -1;,0,0,0,0,0,1,0,0,0,1,10,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,879,        if (width > 0) {,2,1,0,1,3,0,0,0,0,3,16,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,880,            ensureCapacity(size + width);,4,1,0,1,2,0,2,0,0,7,29,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,881,            String str = (obj == null ? getNullText() : obj.toString());,4,1,0,3,6,0,6,2,0,14,60,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,882,            int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,883,            if (strLen >= width) {,4,1,0,1,3,0,0,0,0,5,22,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,884,"                str.getChars(0, strLen, buffer, size);",4,0,0,1,2,1,10,2,0,17,38,5,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,107,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.008,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,108,        if (initialCapacity <= 0) {,2,1,0,1,3,0,0,0,0,3,27,4,0.008,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,111,        buffer = new char[initialCapacity];,2,0,1,1,2,0,0,0,0,5,35,4,0.008,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,112,    },0,0,0,0,1,0,0,0,0,1,1,4,0.008,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,228,        if (capacity > buffer.length) {,0,0,0,1,3,0,0,0,0,4,31,4,0.00581,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,59,233,        return this;,4,0,0,0,0,1,0,2,0,6,12,1,0.00581,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,241,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,118,    private StrMatcher delimMatcher = StrMatcher.splitMatcher();,4,1,0,1,2,1,4,2,0,12,60,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,120,    private StrMatcher quoteMatcher = StrMatcher.noneMatcher();,0,0,0,1,2,0,0,0,0,3,59,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,122,    private StrMatcher ignoredMatcher = StrMatcher.noneMatcher();,2,0,0,1,2,1,4,2,0,9,61,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,124,    private StrMatcher trimmerMatcher = StrMatcher.noneMatcher();,2,0,0,1,2,1,4,2,0,9,61,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,127,    private boolean emptyAsNull = false;,0,0,0,0,0,0,0,0,0,0,36,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,129,    private boolean ignoreEmptyTokens = true;,4,0,0,0,0,1,0,0,0,6,41,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,242,        this.chars = null;,2,0,0,0,0,0,0,0,0,3,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,243,    },12,1,0,0,1,0,0,2,0,16,1,7,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,252,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,253,        if (input != null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,254,            chars = input.toCharArray();,6,0,1,1,2,0,4,2,0,16,28,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,256,            chars = null;,2,1,0,0,0,0,0,0,0,3,13,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,258,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,267,        this(input);,0,0,0,1,2,0,0,0,0,3,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,268,        setDelimiterChar(delim);,2,1,0,1,2,0,4,0,0,7,24,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,269,    },0,0,0,0,1,0,4,0,0,4,1,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,278,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,279,        setDelimiterString(delim);,0,0,0,1,2,0,4,0,0,4,26,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,280,    },2,0,0,0,1,3,4,2,0,12,1,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,289,        this(input);,0,0,0,1,2,0,0,0,0,3,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,290,        setDelimiterMatcher(delim);,0,0,0,1,2,0,4,0,0,4,27,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,291,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,302,"        this(input, delim);",4,0,0,1,2,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,303,        setQuoteChar(quote);,0,0,0,1,2,0,14,0,0,14,20,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,304,    },0,0,0,0,1,0,12,2,0,14,1,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,315,"        this(input, delim);",4,0,0,1,2,0,0,0,0,4,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,316,        setQuoteMatcher(quote);,4,0,0,1,2,6,2,6,0,19,23,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,317,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,329,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,330,        this.chars = input;,4,0,0,0,0,0,0,0,0,5,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,331,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,343,        this(input);,0,0,0,1,2,0,0,0,0,3,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,344,        setDelimiterChar(delim);,0,0,0,1,2,0,0,0,0,3,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,345,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,357,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,358,        setDelimiterString(delim);,4,1,0,1,2,0,4,0,0,9,26,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,359,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,371,        this(input);,2,0,0,1,2,0,0,0,0,2,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,372,        setDelimiterMatcher(delim);,0,0,0,1,2,0,0,2,0,4,27,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,373,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,387,"        this(input, delim);",0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,388,        setQuoteChar(quote);,0,0,0,1,2,0,0,0,0,3,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,389,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,403,"        this(input, delim);",0,0,0,1,2,0,0,0,0,3,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,404,        setQuoteMatcher(quote);,0,0,0,1,2,0,12,0,0,12,23,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,405,    },4,1,0,0,1,6,8,2,0,23,1,2,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,93,        CSV_TOKENIZER_PROTOTYPE = new StrTokenizer();,0,0,0,1,2,0,0,0,0,3,45,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,94,        CSV_TOKENIZER_PROTOTYPE.setDelimiterMatcher(StrMatcher.commaMatcher());,0,0,0,2,4,0,0,0,0,6,71,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,95,        CSV_TOKENIZER_PROTOTYPE.setQuoteMatcher(StrMatcher.doubleQuoteMatcher());,0,0,0,2,4,0,8,0,0,8,73,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,96,        CSV_TOKENIZER_PROTOTYPE.setIgnoredMatcher(StrMatcher.noneMatcher());,0,0,0,2,4,0,0,0,0,6,68,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,97,        CSV_TOKENIZER_PROTOTYPE.setTrimmerMatcher(StrMatcher.trimMatcher());,0,0,0,2,4,0,8,0,0,8,68,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,98,        CSV_TOKENIZER_PROTOTYPE.setEmptyTokenAsNull(false);,0,0,0,1,2,0,0,0,0,3,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,99,        CSV_TOKENIZER_PROTOTYPE.setIgnoreEmptyTokens(false);,2,3,0,1,2,0,4,0,0,9,52,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,101,        TSV_TOKENIZER_PROTOTYPE = new StrTokenizer();,2,0,0,1,2,0,0,2,0,5,45,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,102,        TSV_TOKENIZER_PROTOTYPE.setDelimiterMatcher(StrMatcher.tabMatcher());,0,0,0,2,4,0,0,0,0,6,69,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,103,        TSV_TOKENIZER_PROTOTYPE.setQuoteMatcher(StrMatcher.doubleQuoteMatcher());,0,0,0,2,4,0,8,0,0,8,73,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,104,        TSV_TOKENIZER_PROTOTYPE.setIgnoredMatcher(StrMatcher.noneMatcher());,0,0,0,2,4,0,8,0,0,8,68,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,105,        TSV_TOKENIZER_PROTOTYPE.setTrimmerMatcher(StrMatcher.trimMatcher());,0,0,0,2,4,0,16,0,0,16,68,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,106,        TSV_TOKENIZER_PROTOTYPE.setEmptyTokenAsNull(false);,2,1,0,1,2,0,4,0,0,8,51,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrTokenizer,59,107,        TSV_TOKENIZER_PROTOTYPE.setIgnoreEmptyTokens(false);,4,1,0,1,2,3,12,0,0,23,52,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1672,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1673,        for (int i = 0; i < thisBuf.length; i++) {,0,0,0,1,3,0,0,0,0,4,42,4,1.0,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1674,            if (thisBuf[i] == ch) {,2,1,1,2,5,0,0,0,0,7,23,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1675,                return true;,2,0,0,0,0,1,4,4,0,11,12,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1202,        int len = (str == null ? 0 : str.length());,0,0,0,2,4,0,6,0,0,6,43,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1203,        if (len > 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1204,"            int index = indexOf(str, 0);",0,0,0,1,2,0,0,0,0,3,28,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1205,            if (index >= 0) {,2,1,0,1,3,0,0,0,0,3,17,6,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1206,"                deleteImpl(index, index + len, len);",0,0,0,1,2,0,0,0,0,3,36,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1209,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1762,        if (str == null || startIndex >= size) {,0,0,0,1,3,0,0,0,0,4,40,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1765,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1766,        if (strLen == 1) {,0,0,0,1,3,0,0,0,0,4,18,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1769,        if (strLen == 0) {,4,1,0,1,3,3,2,2,0,13,18,1,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1772,        if (strLen > size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1775,        char[] thisBuf = buffer;,2,0,0,1,2,3,0,0,0,5,24,2,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1776,        int len = size - strLen + 1;,0,0,0,0,0,0,0,0,0,0,28,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1778,        for (int i = startIndex; i < len; i++) {,10,1,0,1,3,0,0,0,0,12,40,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1779,            for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,0,0,0,10,34,7,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1780,                if (str.charAt(j) != thisBuf[i + j]) {,4,2,1,3,7,0,6,0,0,14,38,9,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1781,                    continue outer;,0,0,0,0,0,0,0,0,0,0,15,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1784,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",4,1,0,1,2,0,12,0,0,17,72,5,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1115,        size -= len;,4,0,0,0,0,0,0,0,0,5,12,4,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,1116,    },4,0,0,0,1,0,0,2,0,6,1,5,0.06667,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,121,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.01429,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,122,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.01429,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,125,            buffer = new char[str.length() + CAPACITY];,0,0,0,2,4,0,0,0,0,1,43,8,0.01429,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,126,            append(str);,0,0,0,1,2,0,4,0,0,4,12,7,0.01429,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,128,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01429,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,474,            int len = length();,0,0,0,1,2,0,0,0,0,3,19,4,0.00877,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,475,            ensureCapacity(len + strLen);,4,1,0,1,2,0,2,0,0,7,29,7,0.00877,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,476,"            str.getChars(0, strLen, buffer, len);",0,0,0,1,2,0,0,0,0,3,37,4,0.00877,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,477,            size += strLen;,0,0,0,0,0,0,0,0,0,0,15,4,0.00877,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,469,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0087,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,472,        int strLen = str.length();,2,0,0,1,2,0,0,2,0,5,26,5,0.0087,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,473,        if (strLen > 0) {,2,1,0,1,3,0,0,0,0,3,17,4,0.0087,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,479,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0087,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,293,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,294,            this.ch = ch;,6,0,0,0,0,3,0,4,0,14,13,1,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,295,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,216,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,217,    },0,0,0,0,1,0,6,0,0,7,1,6,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",2,0,0,1,2,3,0,4,0,10,69,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,4,0,0,1,2,3,0,4,0,13,68,1,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,2,0,0,1,2,3,0,4,0,10,69,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",2,0,0,2,4,3,2,4,0,12,94,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,2,0,0,1,2,3,0,4,0,9,65,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,4,0,0,1,2,3,6,4,0,19,77,1,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",0,0,0,2,4,0,0,0,0,6,88,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,4,0,0,1,2,3,10,6,0,23,63,1,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,389,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,390,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,362,            super();,4,1,0,1,2,0,4,0,0,9,8,5,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,363,        },0,0,0,0,1,0,0,0,0,1,1,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,260,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,261,            this.chars = (char[]) chars.clone();,2,0,0,3,6,0,4,0,0,7,36,5,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,262,            Arrays.sort(this.chars);,0,0,0,1,2,0,0,0,0,3,24,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,263,        },4,3,0,0,1,0,0,0,0,7,1,4,0.00625,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,182,        return size;,2,0,0,0,0,1,0,0,0,2,12,4,0.00585,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,228,        if (capacity > buffer.length) {,8,4,0,1,3,0,4,0,0,16,31,3,0.00585,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,60,233,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.00585,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,307,            return ch == buffer[pos] ? 1 : 0;,6,1,0,1,2,4,0,6,0,16,33,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,80,        return COMMA_MATCHER;,4,1,0,0,0,1,0,0,0,5,21,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,89,        return TAB_MATCHER;,2,0,0,0,0,1,0,0,0,2,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,98,        return SPACE_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,108,        return SPLIT_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,117,        return TRIM_MATCHER;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,126,        return SINGLE_QUOTE_MATCHER;,2,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,135,        return DOUBLE_QUOTE_MATCHER;,2,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,144,        return QUOTE_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,153,        return NONE_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,163,        return new CharMatcher(ch);,0,0,0,1,2,1,0,0,0,4,27,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,173,        if (chars == null || chars.length == 0) {,0,0,0,1,3,0,0,0,0,4,41,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,60,174,            return NONE_MATCHER;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,6,1,0,1,2,0,0,0,0,8,47,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1762,        if (str == null || startIndex >= size) {,0,0,0,1,3,0,0,0,0,4,40,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1765,        int strLen = str.length();,2,0,0,1,2,0,4,0,0,6,26,5,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1766,        if (strLen == 1) {,8,2,0,1,3,0,0,0,0,12,18,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1769,        if (strLen == 0) {,2,1,0,1,3,0,0,0,0,3,18,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1772,        if (strLen > size) {,4,1,0,1,3,0,0,0,0,5,20,4,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1775,        char[] thisBuf = buffer;,4,0,0,1,2,0,0,0,0,4,24,5,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,8,1,0,0,0,0,0,0,0,9,34,5,0.57143,1,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1778,        for (int i = startIndex; i < len; i++) {,10,1,0,1,3,0,0,0,0,12,40,5,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1779,            for (int j = 0; j < strLen; j++) {,8,1,0,1,3,0,0,0,0,10,34,7,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1780,                if (str.charAt(j) != thisBuf[i + j]) {,4,2,1,3,7,0,6,0,0,14,38,9,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1781,                    continue outer;,2,0,0,0,0,0,0,0,0,2,15,11,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1784,            return i;,2,0,0,0,0,1,0,0,0,2,9,7,0.57143,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1184,        int len = (str == null ? 0 : str.length());,4,1,0,2,4,0,4,0,0,9,43,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1185,        if (len > 0) {,12,2,0,1,3,3,0,4,0,22,14,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1186,"            int index = indexOf(str, 0);",2,0,0,1,2,0,4,0,0,6,28,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1187,            while (index >= 0) {,0,0,0,1,3,0,0,0,0,4,20,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1188,"                deleteImpl(index, index + len, len);",0,0,0,1,2,0,0,0,0,3,36,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1189,"                index = indexOf(str, index);",2,0,0,1,2,0,6,0,0,9,28,8,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1202,        int len = (str == null ? 0 : str.length());,0,0,0,2,4,0,0,0,0,6,43,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1203,        if (len > 0) {,0,0,0,1,3,0,0,0,0,4,14,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1204,"            int index = indexOf(str, 0);",0,0,0,1,2,0,0,0,0,3,28,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1205,            if (index >= 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1206,"                deleteImpl(index, index + len, len);",0,0,0,1,2,0,0,0,0,3,36,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1209,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1747,"        return indexOf(str, 0);",4,1,0,1,2,1,8,0,0,14,23,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",4,1,0,1,2,0,12,0,0,17,72,5,0.30769,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1115,        size -= len;,0,0,0,0,0,0,0,0,0,0,12,4,0.30769,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,1116,    },0,0,0,0,1,0,0,0,0,1,1,4,0.30769,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,121,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,122,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,125,            buffer = new char[str.length() + CAPACITY];,4,1,0,2,4,0,4,0,0,10,43,6,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,126,            append(str);,0,0,0,1,2,0,4,0,0,4,12,7,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,128,    },0,0,0,0,1,0,4,0,0,4,1,5,0.05882,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,474,            int len = length();,2,0,0,1,2,0,2,0,0,4,19,7,0.03571,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,475,            ensureCapacity(len + strLen);,0,0,0,1,2,0,0,0,0,3,29,4,0.03571,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,476,"            str.getChars(0, strLen, buffer, len);",8,1,0,1,2,0,10,0,0,19,37,3,0.03571,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,477,            size += strLen;,0,0,0,0,0,0,0,0,0,0,15,4,0.03571,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,469,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0354,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,472,        int strLen = str.length();,4,0,0,1,2,3,6,2,0,16,26,1,0.0354,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,473,        if (strLen > 0) {,0,0,0,1,3,0,0,0,0,4,17,4,0.0354,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,479,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,0.0354,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,260,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,261,            this.chars = (char[]) chars.clone();,0,1,0,3,6,0,4,0,0,5,36,5,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,262,            Arrays.sort(this.chars);,0,0,0,1,2,0,0,0,0,3,24,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,263,        },0,1,0,0,1,0,6,0,0,7,1,6,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,216,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,217,    },0,0,0,0,1,0,0,0,0,1,1,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",0,0,0,1,2,0,0,0,0,3,69,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,0,0,0,1,2,0,6,0,0,6,68,5,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,6,1,0,1,2,0,4,0,0,12,69,6,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",0,0,0,2,4,0,0,0,0,6,94,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,0,0,0,1,2,0,0,0,0,3,65,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,0,0,0,1,2,0,0,0,0,3,77,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",2,0,0,1,2,3,0,4,0,10,76,2,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",2,0,0,2,4,3,6,4,0,16,88,1,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,0,0,0,1,2,0,0,0,0,3,63,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,389,            super();,4,1,0,1,2,0,4,0,0,9,8,5,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,390,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,362,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,363,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,293,            super();,0,0,0,1,2,0,0,0,0,3,8,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,294,            this.ch = ch;,0,0,0,0,0,0,0,0,0,0,13,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,295,        },0,0,0,0,1,0,0,0,0,1,1,4,0.02532,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,182,        return size;,0,0,0,0,0,1,0,0,0,1,12,4,0.02367,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,228,        if (capacity > buffer.length) {,0,0,0,1,3,0,0,0,0,4,31,4,0.02367,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrBuilder,61,233,        return this;,2,0,0,0,0,4,2,0,0,8,12,2,0.02367,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,275,"            return Arrays.binarySearch(chars, buffer[pos]) >= 0 ? 1 : 0;",0,0,0,2,4,1,0,0,0,7,60,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,80,        return COMMA_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,89,        return TAB_MATCHER;,6,0,0,0,0,1,10,0,0,19,19,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,98,        return SPACE_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,108,        return SPLIT_MATCHER;,2,0,0,0,0,1,0,0,0,2,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,117,        return TRIM_MATCHER;,2,0,0,0,0,1,0,0,0,2,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,126,        return SINGLE_QUOTE_MATCHER;,2,0,0,0,0,1,0,0,0,2,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,135,        return DOUBLE_QUOTE_MATCHER;,0,0,0,0,0,1,0,0,0,1,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,144,        return QUOTE_MATCHER;,0,0,0,0,0,1,0,0,0,1,21,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/text/StrMatcher,61,153,        return NONE_MATCHER;,0,0,0,0,0,1,0,0,0,1,20,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,840,                    if (entityName.length() == 1) {,0,1,0,2,5,0,4,0,0,5,31,11,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,843,                        char charAt1 = entityName.charAt(1);,2,0,0,1,2,0,14,0,0,16,36,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,845,                            if (charAt1 == 'x' || charAt1=='X') {,4,3,0,1,3,0,0,0,0,9,37,15,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,848,                                entityValue = Integer.parseInt(entityName.substring(1));,4,1,0,2,4,0,8,0,0,14,56,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,852,                        },4,1,0,0,1,0,6,0,0,12,1,8,0.5,1,1,-1
defect4j,lang,org/apache/commons/lang/Entities,62,853,                    },0,0,0,0,1,0,0,0,0,1,1,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,862,                    buf.append((char) (entityValue));,2,0,0,3,6,0,4,0,0,6,33,11,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,819,        StringBuffer buf = new StringBuffer(str.length());,6,0,0,2,4,0,4,4,0,15,50,1,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,820,"        buf.append(str.substring(0, firstAmp));",0,0,0,2,4,0,0,0,0,6,39,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,821,        for (int i = firstAmp; i < str.length(); ++i) {,8,1,0,2,5,0,4,0,0,14,47,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,822,            char ch = str.charAt(i);,2,0,0,1,2,0,6,0,0,8,24,7,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,823,            if (ch == '&') {,2,1,0,1,3,0,0,0,0,4,16,6,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,824,"                int semi = str.indexOf(';', i + 1);",4,1,0,1,2,0,4,0,0,10,35,9,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,825,                if (semi == -1) {,2,1,0,1,3,0,0,0,0,4,17,8,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,829,"                int amph = str.indexOf('&', i + 1);",8,3,0,1,2,0,4,0,0,17,35,3,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,830,                if( amph != -1 && amph < semi ) {,6,3,0,1,3,0,0,0,0,10,33,8,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,835,"                String entityName = str.substring(i + 1, semi);",2,0,0,1,2,0,0,0,0,2,47,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,837,                if (entityName.length() == 0) {,0,1,0,2,5,0,4,0,0,5,31,8,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,839,                } else if (entityName.charAt(0) == '#') {,0,1,0,2,6,0,4,0,0,6,41,9,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,857,                if (entityValue == -1) {,2,1,0,1,3,0,4,0,0,10,24,3,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,864,                i = semi;,0,0,0,0,0,0,0,0,0,0,9,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,865,            } else {,0,0,0,0,2,0,0,0,0,2,8,4,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,869,        return buf.toString();,0,0,0,1,2,1,4,0,0,4,22,5,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,814,        int firstAmp = str.indexOf('&');,2,0,0,1,2,0,4,0,0,7,32,5,0.03704,0,0,-1
defect4j,lang,org/apache/commons/lang/Entities,62,815,        if (firstAmp < 0) {,0,0,0,1,3,0,0,0,0,4,19,4,0.03704,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,62,83,"        protected Entry(int hash, int key, Object value, Entry next) {",10,0,0,1,3,1,0,4,0,15,62,3,0.02439,0,0,-1
defect4j,lang,org/apache/commons/lang/IntHashMap,62,84,            this.hash = hash;,6,0,0,0,0,0,6,2,0,15,17,1,0.02439,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,247,"        return formatPeriod(startMillis, endMillis, format, true, TimeZone.getDefault());",0,0,0,2,4,1,12,0,0,13,81,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,330,"            if (Token.containsTokenWithValue(tokens, M)) {",0,0,0,2,5,0,8,0,0,8,46,7,1.0,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,331,                months += 12 * years;,6,4,0,0,0,0,8,0,0,21,21,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,332,                years = 0;,2,0,0,0,0,0,0,0,0,3,10,8,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,344,            hours += 24 * days;,4,1,0,0,0,0,0,0,0,6,19,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,345,            days = 0;,4,0,0,0,0,0,0,0,0,5,9,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,348,            minutes += 60 * hours;,4,1,0,0,0,0,0,0,0,6,22,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,349,            hours = 0;,4,0,0,0,0,0,4,4,0,13,10,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,352,            seconds += 60 * minutes;,4,1,0,0,0,0,0,0,0,6,24,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,353,            minutes = 0;,2,0,0,0,0,0,0,0,0,3,12,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,356,            milliseconds += 1000 * seconds;,0,0,0,0,0,0,0,0,0,0,31,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,357,            seconds = 0;,2,0,0,0,0,0,0,0,0,3,12,6,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,265,        long millis = endMillis - startMillis;,10,1,0,0,0,0,4,4,0,20,38,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,266,        if (millis < 28 * DateUtils.MILLIS_PER_DAY) {,0,0,0,1,3,0,0,2,0,2,45,7,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,270,        Token[] tokens = lexx(format);,2,0,0,2,4,0,4,2,0,8,30,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,274,        Calendar start = Calendar.getInstance(timezone);,2,0,0,1,2,0,6,2,0,10,48,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,275,        start.setTime(new Date(startMillis));,4,0,0,2,4,0,10,2,0,18,37,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,276,        Calendar end = Calendar.getInstance(timezone);,2,0,0,1,2,0,6,2,0,10,46,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,277,        end.setTime(new Date(endMillis));,2,0,0,2,4,0,4,2,0,8,33,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,280,        int milliseconds = end.get(Calendar.MILLISECOND) - start.get(Calendar.MILLISECOND);,0,0,0,2,4,0,0,0,0,6,83,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,281,        int seconds = end.get(Calendar.SECOND) - start.get(Calendar.SECOND);,0,0,0,2,4,0,0,0,0,6,68,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,282,        int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);,14,2,0,2,4,0,8,0,0,24,68,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,283,        int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);,0,0,0,2,4,0,0,0,0,6,76,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,284,        int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);,10,1,0,2,4,0,8,0,0,19,77,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,285,        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);,10,1,0,2,4,0,8,0,0,19,65,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,286,        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);,14,4,0,2,4,0,12,0,0,31,62,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,289,        while (milliseconds < 0) {,2,1,0,1,3,0,0,0,0,3,26,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,293,        while (seconds < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,297,        while (minutes < 0) {,2,1,0,1,3,0,0,0,0,3,21,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,301,        while (hours < 0) {,2,1,0,1,3,0,0,0,0,3,19,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,305,        while (days < 0) {,0,0,0,1,3,0,0,0,0,4,18,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,314,        while (months < 0) {,2,1,0,1,3,0,0,0,0,3,20,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,318,"        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);",6,0,0,1,2,0,8,0,0,15,81,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,319,"        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);",0,0,0,1,2,0,0,0,0,3,66,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,320,"        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);",6,0,0,1,2,0,8,0,0,15,66,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,321,"        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);",6,0,0,1,2,0,8,0,0,15,67,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,322,"        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);",6,0,0,1,2,0,8,0,0,15,66,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,323,"        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);",0,0,0,1,2,0,0,0,0,3,63,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,324,"        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);",2,0,1,1,2,0,4,2,0,10,60,3,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,329,"        if (!Token.containsTokenWithValue(tokens, y)) {",0,0,0,2,5,0,12,0,0,13,47,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,339,"        if (!Token.containsTokenWithValue(tokens, M)) {",2,0,0,2,5,3,16,2,0,25,47,1,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,343,"        if (!Token.containsTokenWithValue(tokens, d)) {",0,0,0,2,5,0,0,0,0,7,47,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,347,"        if (!Token.containsTokenWithValue(tokens, H)) {",2,0,0,2,5,0,8,0,0,11,47,3,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,351,"        if (!Token.containsTokenWithValue(tokens, m)) {",0,0,0,2,5,0,8,0,0,9,47,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,355,"        if (!Token.containsTokenWithValue(tokens, s)) {",2,1,0,2,5,0,8,0,0,12,47,4,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,360,"        return format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);",0,0,0,1,2,1,20,0,0,20,96,5,0.5,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,433,"        end.add( field, -1 * difference );",8,1,0,1,2,3,12,4,0,30,34,1,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,434,        int endValue = end.get(field);,4,0,0,1,2,0,10,0,0,14,30,1,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,435,        int startValue = start.get(field);,2,0,0,1,2,3,2,2,0,10,34,2,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,436,        if (endValue < startValue) {,4,1,0,1,3,0,0,0,0,5,28,4,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,441,            return 0;,0,0,0,0,0,1,4,0,0,4,9,7,0.5,1,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,395,"                    buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(months), count, '0') : Integer",2,0,0,2,5,0,18,0,0,21,96,12,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,397,                    lastOutputSeconds = false;,0,0,0,0,0,0,0,0,0,0,26,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,487,                case 'M'  : value = M; break;,4,0,0,0,0,0,0,0,0,6,29,6,0.2,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,63,3865,        if (str == null) {,2,1,0,1,3,0,0,0,0,3,18,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,63,3868,        int pads = size - str.length();,0,0,0,1,2,0,0,0,0,3,31,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,63,3869,        if (pads <= 0) {,0,0,0,1,3,0,0,0,0,4,16,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,63,3870,            return str; // returns original String when possible,0,0,0,0,0,1,0,0,0,1,52,4,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,534,            return false;,4,1,0,0,0,1,0,0,0,6,13,1,0.14286,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,503,                    previous.increment();,2,0,0,1,2,0,8,0,0,13,21,3,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,566,            count++;,2,0,0,0,0,0,0,0,0,2,8,5,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,567,        },4,0,0,0,1,0,6,0,0,10,1,5,0.125,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,380,        StringBuffer buffer = new StringBuffer();,4,0,1,1,2,1,4,4,0,17,41,1,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,381,        boolean lastOutputSeconds = false;,10,0,0,0,0,0,4,0,0,15,34,3,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,382,        int sz = tokens.length;,0,0,0,0,0,0,0,0,0,0,23,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,383,        for (int i = 0; i < sz; i++) {,8,1,0,1,3,0,0,0,0,10,30,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,384,            Token token = tokens[i];,2,0,1,1,2,0,0,2,0,8,24,6,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,385,            Object value = token.getValue();,2,0,0,1,2,0,4,2,0,8,32,6,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,386,            int count = token.getCount();,2,1,0,1,2,0,0,0,0,3,29,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,387,            if (value instanceof StringBuffer) {,2,0,0,1,3,0,0,2,0,4,36,7,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,390,                if (value == y) {,0,0,0,1,3,0,0,0,0,4,17,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,394,                } else if (value == M) {,0,0,0,1,4,0,0,0,0,5,24,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,430,        return buffer.toString();,0,0,0,1,2,1,4,0,0,4,25,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,528,            int sz = tokens.length;,10,1,0,0,0,0,4,0,0,16,23,1,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,529,            for (int i = 0; i < sz; i++) {,0,0,0,1,3,0,0,0,0,4,30,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,530,                if (tokens[i].getValue() == value) {,0,0,0,3,7,0,0,0,0,10,36,4,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,531,                    return true;,0,0,0,0,0,1,4,0,0,4,12,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,575,            return count;,2,0,0,0,0,1,0,0,0,2,13,5,0.11111,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,460,        char[] array = format.toCharArray();,0,0,0,2,4,0,0,0,0,6,36,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,461,        java.util.ArrayList list = new java.util.ArrayList(array.length);,18,0,0,1,2,0,0,0,0,18,65,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,463,        boolean inLiteral = false;,2,0,0,0,0,0,0,0,0,3,26,5,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,464,        StringBuffer buffer = null;,2,0,0,0,0,0,0,2,0,4,27,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,465,        Token previous = null;,8,0,0,0,0,3,12,6,0,30,22,1,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,466,        int sz = array.length;,6,0,0,0,0,0,0,0,0,6,22,5,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,467,        for(int i=0; i<sz; i++) {,0,0,0,1,3,0,0,0,0,4,25,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,468,            char ch = array[i];,0,0,0,1,2,0,0,0,0,3,19,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,469,            if(inLiteral && ch != '\'') {,4,2,0,1,3,0,0,0,0,7,29,6,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,473,            Object value = null;,10,3,0,0,0,0,0,2,0,15,20,3,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,474,            switch(ch) {,0,0,0,1,3,0,0,0,0,4,12,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,501,            if(value != null) {,2,1,0,1,3,0,6,0,0,9,19,3,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,502,                if(previous != null && previous.getValue() == value) {,4,3,0,2,5,0,4,0,0,11,54,8,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DurationFormatUtils,63,505,                    Token token = new Token(value);,2,0,0,1,2,0,0,0,0,2,31,4,0.1,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,183,        return iValue - ((ValuedEnum) other).iValue;,6,1,0,2,4,1,0,2,0,9,44,4,0.25,1,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,126,        super(name);,2,0,0,1,2,0,0,0,0,2,12,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,127,        iValue = value;,4,0,0,0,0,0,0,0,0,5,15,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/ValuedEnum,64,128,    },0,0,0,0,1,0,0,0,0,1,1,4,0.05263,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,519,        return getClass();,0,0,0,1,2,1,2,0,0,2,18,5,0.01754,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,314,        iName = name;,4,0,0,0,0,0,0,0,0,5,13,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,315,        iHashCode = 7 + getEnumClass().hashCode() + 3 * name.hashCode();,2,2,0,3,6,0,8,0,0,13,64,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,317,    },2,1,0,0,1,0,0,0,0,3,1,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,339,                ok = true;,6,1,0,0,0,0,0,0,0,9,10,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,340,                break;,0,0,0,0,0,0,0,0,0,0,6,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,349,        Entry entry = (Entry) cEnumClasses.get(enumClass);,0,0,0,2,4,0,0,0,0,6,50,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,350,        if (entry == null) {,2,1,0,1,3,0,0,0,0,3,20,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,351,            entry = createEntry(enumClass);,2,0,0,1,2,0,6,2,0,10,31,12,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,352,"            cEnumClasses.put(enumClass, entry);",0,0,0,1,2,0,0,0,0,3,35,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,354,        if (entry.map.containsKey(name)) {,4,0,0,2,5,0,4,0,0,8,34,5,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,357,"        entry.map.put(name, this);",4,0,0,1,2,0,4,0,0,8,26,5,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,358,        entry.list.add(this);,8,0,0,1,2,0,2,0,0,11,21,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,359,    },0,0,0,0,1,0,0,0,0,1,1,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,484,        Entry entry = new Entry();,6,1,0,1,2,3,10,2,0,24,26,1,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,485,        Class cls = enumClass.getSuperclass();,2,0,0,1,2,0,4,2,0,8,38,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,486,        while (cls != null && cls != Enum.class && cls != ValuedEnum.class) {,6,5,0,1,3,0,0,4,0,15,69,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,495,        return entry;,2,0,0,0,0,1,0,0,0,2,13,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,297,          super();,4,2,0,1,2,0,8,2,0,16,8,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,279,        final Map map = new HashMap();,2,0,0,1,2,1,0,4,0,7,30,3,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,283,        final Map unmodifiableMap = Collections.unmodifiableMap(map);,2,0,0,1,2,1,6,2,0,11,61,3,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,287,        final List list = new ArrayList(25);,2,0,0,1,2,1,0,4,0,7,36,3,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,291,        final List unmodifiableList = Collections.unmodifiableList(list);,2,0,0,1,2,1,6,2,0,11,65,3,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,298,        },0,0,0,0,1,0,0,0,0,1,1,4,0.01587,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,335,        Class cls = getClass();,4,0,0,1,2,0,2,4,0,10,23,3,0.01515,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,336,        boolean ok = false;,0,0,0,0,0,0,0,0,0,0,19,4,0.01515,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,338,            if (cls == enumClass) {,4,1,0,1,3,0,0,0,0,5,23,6,0.01515,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,344,        if (ok == false) {,6,1,0,1,3,3,0,2,0,13,18,1,0.01515,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,185,        return str == null || str.length() == 0;,2,3,0,1,2,1,4,0,0,9,40,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,312,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,270,    protected transient String iToString = null;,0,0,0,0,0,0,0,0,0,0,44,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,313,        init(name);,0,0,0,1,2,0,4,0,0,4,11,5,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,327,        if (StringUtils.isEmpty(name)) {,0,0,0,2,5,0,0,0,0,7,32,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,331,        Class enumClass = getEnumClass();,0,0,0,1,2,0,0,0,0,3,33,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,332,        if (enumClass == null) {,0,0,0,1,3,0,0,0,0,4,24,4,0.01493,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,337,        while (cls != null && cls != Enum.class && cls != ValuedEnum.class) {,6,5,0,1,3,0,0,4,0,15,69,4,0.01408,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,249,    private static final Map EMPTY_MAP = Collections.unmodifiableMap(new HashMap(0));,0,0,0,2,4,0,0,0,0,6,81,4,0.01389,0,0,-1
defect4j,lang,org/apache/commons/lang/enums/Enum,64,254,    private static final Map cEnumClasses = new HashMap();,2,0,0,1,2,3,0,4,0,9,54,2,0.01389,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,161,        super();,0,0,0,1,2,0,0,0,0,3,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,162,    },0,0,0,0,1,0,0,0,0,1,1,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,203,        return !StringUtils.isEmpty(str);,0,0,0,1,2,1,6,0,0,7,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,223,        if (str == null || (strLen = str.length()) == 0) {,4,4,0,3,7,0,14,0,0,24,50,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,224,            return true;,0,0,0,0,0,1,0,0,0,1,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,226,        for (int i = 0; i < strLen; i++) {,8,1,0,1,3,0,0,0,0,10,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,227,            if ((Character.isWhitespace(str.charAt(i)) == false)) {,2,1,0,4,9,0,10,0,0,15,55,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,228,                return false;,0,0,0,0,0,1,0,0,0,1,13,8,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,231,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,251,        return !StringUtils.isBlank(str);,0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,276,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,303,        return str == null ? null : str.trim();,2,1,0,1,2,1,4,0,0,7,39,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,329,        String ts = trim(str);,2,0,0,1,2,0,4,2,0,8,22,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,330,        return isEmpty(ts) ? null : ts;,2,0,0,1,2,1,4,0,0,7,31,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,355,        return str == null ? EMPTY : str.trim();,4,1,0,1,2,1,4,0,0,9,40,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,383,"        return strip(str, null);",10,1,0,1,2,1,0,0,0,12,24,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,410,        if (str == null) {,0,0,0,1,3,0,0,0,0,4,18,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,411,            return null;,2,1,1,0,0,1,0,0,0,7,12,6,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,413,"        str = strip(str, null);",0,0,0,1,2,0,0,0,0,3,23,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,414,        return str.length() == 0 ? null : str;,0,0,0,1,2,1,0,0,0,4,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,440,"        return str == null ? EMPTY : strip(str, null);",0,0,0,1,2,1,0,0,0,4,46,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,470,        if (isEmpty(str)) {,0,0,0,2,5,0,0,0,0,7,19,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,471,            return str;,2,1,0,0,0,1,0,0,0,3,11,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,473,"        str = stripStart(str, stripChars);",0,0,0,1,2,0,0,0,0,3,34,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,474,"        return stripEnd(str, stripChars);",0,0,0,1,2,1,0,0,0,4,33,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,503,        if (str == null || (strLen = str.length()) == 0) {,0,0,0,3,7,0,0,0,0,10,50,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,504,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,506,        int start = 0;,0,0,0,0,0,0,0,0,0,0,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,507,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,508,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,2,3,0,4,9,0,4,0,0,9,72,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,509,                start++;,0,0,0,0,0,0,0,0,0,0,8,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,511,        } else if (stripChars.length() == 0) {,0,0,0,2,6,0,0,0,0,8,38,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,512,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,514,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != -1)) {,8,4,0,5,11,0,10,0,0,23,76,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,515,                start++;,2,0,0,0,0,0,0,0,0,3,8,9,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,518,        return str.substring(start);,0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,547,        if (str == null || (end = str.length()) == 0) {,0,0,0,3,7,0,6,0,0,6,47,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,548,            return str;,20,2,0,0,0,1,4,2,0,30,11,1,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,551,        if (stripChars == null) {,0,0,0,1,3,0,0,0,0,4,25,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,552,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0,0,0,4,9,0,0,0,0,13,67,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,553,                end--;,0,0,0,0,0,0,0,0,0,0,6,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,555,        } else if (stripChars.length() == 0) {,2,1,0,2,6,0,4,0,0,7,38,5,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,556,            return str;,0,0,0,0,0,1,0,0,0,1,11,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,558,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != -1)) {,0,0,0,5,11,0,0,0,0,16,71,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,559,                end--;,4,0,0,0,0,0,0,0,0,6,6,0,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,562,"        return str.substring(0, end);",0,0,0,1,2,1,0,0,0,4,29,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,587,"        return stripAll(strs, null);",0,0,0,1,2,1,0,0,0,4,28,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,617,        if (strs == null || (strsLen = strs.length) == 0) {,4,1,0,2,5,0,0,0,0,5,51,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,618,            return strs;,0,0,0,0,0,1,0,0,0,1,12,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,620,        String[] newArr = new String[strsLen];,4,0,1,2,4,0,0,4,0,10,38,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,621,        for (int i = 0; i < strsLen; i++) {,0,0,0,1,3,0,0,0,0,4,35,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,622,"            newArr[i] = strip(strs[i], stripChars);",2,0,1,3,6,0,4,0,0,16,39,3,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,624,        return newArr;,0,0,0,0,0,1,0,0,0,1,14,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/StringUtils,64,650,        return str1 == null ? str2 == null : str1.equals(str2);,0,0,0,1,2,1,0,0,0,4,55,4,0.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,543,        if (date == null) {,2,1,0,1,3,0,0,0,0,3,19,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,546,        Calendar gval = Calendar.getInstance();,0,0,0,1,2,0,0,0,0,3,39,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,547,        gval.setTime(date);,0,0,0,1,2,0,0,0,0,3,19,4,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,548,"        modify(gval, field, false);",0,0,0,1,2,0,6,0,0,7,27,5,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,549,        return gval.getTime();,2,1,0,1,2,1,4,0,0,7,22,3,1.0,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,620,        if (val.get(Calendar.YEAR) > 280000000) {,4,1,0,2,5,0,4,0,0,9,41,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,641,        boolean roundUp = false;,0,0,0,0,0,0,0,0,0,0,24,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,642,        for (int i = 0; i < fields.length; i++) {,10,1,0,1,3,0,0,0,0,12,41,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,643,            for (int j = 0; j < fields[i].length; j++) {,0,0,0,2,5,0,0,0,0,7,44,4,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,644,                if (fields[i][j] == field) {,2,1,1,3,7,0,0,0,0,9,28,8,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,646,                    if (round && roundUp) {,4,1,0,1,3,0,0,0,0,5,23,10,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,663,                    return;,0,0,0,0,0,1,4,0,0,5,7,11,0.25,1,1,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,667,            int offset = 0;,0,0,0,0,0,0,0,0,0,0,15,4,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,668,            boolean offsetSet = false;,2,0,0,0,0,0,0,0,0,4,26,3,0.25,0,0,-1
defect4j,lang,org/apache/commons/lang/time/DateUtils,65,670,            switch (field) {,2,0,0,1,3,0,0,0,0,2,16,6,0.25,0,0,-1
