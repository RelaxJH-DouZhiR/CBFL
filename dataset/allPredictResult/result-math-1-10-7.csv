dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict0,predict1
defect4j,math,org/apache/commons/math/util/FastMath,62,1450,"        split(x, xs);",0,0,0,0,2,0,3,0,1,3,13,4,1.0,0,0,0.1976315147107158,0.8023684852892856
defect4j,math,org/apache/commons/math/util/FastMath,62,1451,        ys[0] = ys[1] = 0.0;,0,0,1,0,4,0,0,0,2,3,20,4,1.0,0,0,0.6494568491400003,0.35054315085999854
defect4j,math,org/apache/commons/math/util/FastMath,62,1453,        for (int i = 19; i >= 0; i--) {,3,1,0,1,3,2,0,0,1,6,31,4,1.0,0,0,0.510880416106337,0.4891195838936645
defect4j,math,org/apache/commons/math/util/FastMath,62,1454,"            splitMult(xs, ys, as);",0,0,0,0,2,0,4,0,1,3,22,6,1.0,0,0,0.12748305923737677,0.8725169407626219
defect4j,math,org/apache/commons/math/util/FastMath,62,1455,            ys[0] = as[0]; ys[1] = as[1];,0,0,1,0,8,0,0,0,2,3,29,6,1.0,0,0,0.6024662688159412,0.39753373118405966
defect4j,math,org/apache/commons/math/util/FastMath,62,1457,            if ( (i & 1) == 0) {,1,2,0,2,5,1,0,0,0,5,20,6,1.0,0,0,0.44231574421487,0.5576842557851316
defect4j,math,org/apache/commons/math/util/FastMath,62,1458,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,1.0,0,0,0.10955714674259293,0.8904428532574087
defect4j,math,org/apache/commons/math/util/FastMath,62,1461,"            split(FACT[i], as);",0,0,1,0,4,0,2,0,1,4,19,6,1.0,0,0,0.5424026694050281,0.45759733059497104
defect4j,math,org/apache/commons/math/util/FastMath,62,1462,"            splitReciprocal(as, facts);",0,0,0,0,2,0,3,0,1,3,27,6,1.0,0,0,0.1705969732738773,0.8294030267261215
defect4j,math,org/apache/commons/math/util/FastMath,62,1464,            if ( (i & 2) != 0 ) {,1,2,0,2,5,1,0,0,0,5,21,6,1.0,0,0,0.4435891568074425,0.5564108431925561
defect4j,math,org/apache/commons/math/util/FastMath,62,1465,                facts[0] = -facts[0];,0,0,1,0,4,0,0,0,2,3,21,8,1.0,0,0,0.4840281365498636,0.515971863450136
defect4j,math,org/apache/commons/math/util/FastMath,62,1466,                facts[1] = -facts[1];,0,0,1,0,4,0,0,0,2,3,21,8,1.0,0,0,0.4840281365498636,0.515971863450136
defect4j,math,org/apache/commons/math/util/FastMath,62,1469,"            splitAdd(ys, facts, as);",0,0,0,0,2,0,4,0,1,3,24,6,1.0,0,0,0.12870260598398234,0.871297394016019
defect4j,math,org/apache/commons/math/util/FastMath,62,1470,            ys[0] = as[0]; ys[1] = as[1];,0,0,1,0,8,0,0,0,2,3,29,6,1.0,0,0,0.6024662688159412,0.39753373118405966
defect4j,math,org/apache/commons/math/util/FastMath,62,1473,        if (result != null) {,1,1,0,1,3,1,0,0,0,5,21,4,1.0,0,0,0.34421537879372915,0.6557846212062715
defect4j,math,org/apache/commons/math/util/FastMath,62,1474,            result[0] = ys[0];,0,0,1,0,4,0,0,0,1,3,18,6,1.0,0,0,0.5079849798074585,0.49201502019254145
defect4j,math,org/apache/commons/math/util/FastMath,62,1475,            result[1] = ys[1];,0,0,1,0,4,0,0,0,1,3,18,6,1.0,0,0,0.5079849798074585,0.49201502019254145
defect4j,math,org/apache/commons/math/util/FastMath,62,1478,        return ys[0] + ys[1];,0,1,1,0,4,1,0,0,0,4,21,4,1.0,0,0,0.5690205792433035,0.4309794207566953
defect4j,math,org/apache/commons/math/util/FastMath,62,1489,        final double xs[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,1.0,0,0,0.5569547362795896,0.4430452637204091
defect4j,math,org/apache/commons/math/util/FastMath,62,1490,        final double ys[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,1.0,0,0,0.5569547362795896,0.4430452637204091
defect4j,math,org/apache/commons/math/util/FastMath,62,1491,        final double facts[] = new double[2];,1,0,0,0,4,4,0,0,1,4,37,4,1.0,0,0,0.5620967003786831,0.43790329962131813
defect4j,math,org/apache/commons/math/util/FastMath,62,1492,        final double as[] = new double[2];,1,0,0,0,4,4,0,0,1,4,34,4,1.0,0,0,0.5569547362795896,0.4430452637204091
defect4j,math,org/apache/commons/math/util/FastMath,62,1493,"        split(x, xs);",0,0,0,0,2,0,3,0,1,3,13,4,1.0,0,0,0.1976315147107158,0.8023684852892856
defect4j,math,org/apache/commons/math/util/FastMath,62,1494,        ys[0] = ys[1] = 0.0;,0,0,1,0,4,0,0,0,2,3,20,4,1.0,0,0,0.6494568491400003,0.35054315085999854
defect4j,math,org/apache/commons/math/util/FastMath,62,1496,        for (int i = 19; i >= 0; i--) {,3,1,0,1,3,2,0,0,1,6,31,4,1.0,0,0,0.510880416106337,0.4891195838936645
defect4j,math,org/apache/commons/math/util/FastMath,62,1497,"            splitMult(xs, ys, as);",0,0,0,0,2,0,4,0,1,3,22,6,1.0,0,0,0.12748305923737677,0.8725169407626219
defect4j,math,org/apache/commons/math/util/FastMath,62,1498,            ys[0] = as[0]; ys[1] = as[1];,0,0,1,0,8,0,0,0,2,3,29,6,1.0,0,0,0.6024662688159412,0.39753373118405966
defect4j,math,org/apache/commons/math/util/FastMath,62,1500,            if ( (i & 1) != 0) {,1,2,0,2,5,1,0,0,0,5,20,6,1.0,0,0,0.44231574421487,0.5576842557851316
defect4j,math,org/apache/commons/math/util/FastMath,62,1501,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,1.0,0,0,0.10955714674259293,0.8904428532574087
defect4j,math,org/apache/commons/math/util/FastMath,62,1504,"            split(FACT[i], as);",0,0,1,0,4,0,2,0,1,4,19,6,1.0,0,0,0.5424026694050281,0.45759733059497104
defect4j,math,org/apache/commons/math/util/FastMath,62,1505,"            splitReciprocal(as, facts);",0,0,0,0,2,0,3,0,1,3,27,6,1.0,0,0,0.1705969732738773,0.8294030267261215
defect4j,math,org/apache/commons/math/util/FastMath,62,1507,            if ( (i & 2) != 0 ) {,1,2,0,2,5,1,0,0,0,5,21,6,1.0,0,0,0.4435891568074425,0.5564108431925561
defect4j,math,org/apache/commons/math/util/FastMath,62,1508,                facts[0] = -facts[0];,0,0,1,0,4,0,0,0,2,3,21,8,1.0,0,0,0.4840281365498636,0.515971863450136
defect4j,math,org/apache/commons/math/util/FastMath,62,1509,                facts[1] = -facts[1];,0,0,1,0,4,0,0,0,2,3,21,8,1.0,0,0,0.4840281365498636,0.515971863450136
defect4j,math,org/apache/commons/math/util/FastMath,62,1512,"            splitAdd(ys, facts, as);",0,0,0,0,2,0,4,0,1,3,24,6,1.0,0,0,0.12870260598398234,0.871297394016019
defect4j,math,org/apache/commons/math/util/FastMath,62,1513,            ys[0] = as[0]; ys[1] = as[1];,0,0,1,0,8,0,0,0,2,3,29,6,1.0,0,0,0.6024662688159412,0.39753373118405966
defect4j,math,org/apache/commons/math/util/FastMath,62,1516,        if (result != null) {,1,1,0,1,3,1,0,0,0,5,21,4,1.0,0,0,0.34421537879372915,0.6557846212062715
defect4j,math,org/apache/commons/math/util/FastMath,62,1517,            result[0] = ys[0];,0,0,1,0,4,0,0,0,1,3,18,6,1.0,0,0,0.5079849798074585,0.49201502019254145
defect4j,math,org/apache/commons/math/util/FastMath,62,1518,            result[1] = ys[1];,0,0,1,0,4,0,0,0,1,3,18,6,1.0,0,0,0.5079849798074585,0.49201502019254145
defect4j,math,org/apache/commons/math/util/FastMath,62,1521,        return ys[0] + ys[1];,0,1,1,0,4,1,0,0,0,4,21,4,1.0,0,0,0.5690205792433035,0.4309794207566953
defect4j,math,org/apache/commons/math/util/FastMath,62,1527,        final double result[] = new double[2];,1,0,0,0,4,4,0,0,1,4,38,4,1.0,0,0,0.5638666011884197,0.4361333988115806
defect4j,math,org/apache/commons/math/util/FastMath,62,1530,        for (int i = 0; i < 7; i++) {,3,1,0,1,3,2,0,0,1,6,29,4,1.0,0,0,0.5077330785956583,0.4922669214043402
defect4j,math,org/apache/commons/math/util/FastMath,62,1531,            double x = i / 8.0;,2,1,0,0,0,1,0,0,0,3,19,7,1.0,0,0,0.18461994626676637,0.815380053733235
defect4j,math,org/apache/commons/math/util/FastMath,62,1533,"            slowSin(x, result);",0,0,0,0,2,0,3,0,1,3,19,6,1.0,0,0,0.1645053771029175,0.8354946228970813
defect4j,math,org/apache/commons/math/util/FastMath,62,1534,            SINE_TABLE_A[i] = result[0];,0,0,1,0,4,0,0,0,1,3,28,6,1.0,0,0,0.5216216509559067,0.4783783490440949
defect4j,math,org/apache/commons/math/util/FastMath,62,1535,            SINE_TABLE_B[i] = result[1];,0,0,1,0,4,0,0,0,1,3,28,6,1.0,0,0,0.5216216509559067,0.4783783490440949
defect4j,math,org/apache/commons/math/util/FastMath,62,1537,"            slowCos(x, result);",0,0,0,0,2,0,3,0,1,3,19,6,1.0,0,0,0.1645053771029175,0.8354946228970813
defect4j,math,org/apache/commons/math/util/FastMath,62,1538,            COSINE_TABLE_A[i] = result[0];,0,0,1,0,4,0,0,0,1,3,30,6,1.0,0,0,0.5247036598011412,0.47529634019885814
defect4j,math,org/apache/commons/math/util/FastMath,62,1539,            COSINE_TABLE_B[i] = result[1];,0,0,1,0,4,0,0,0,1,3,30,6,1.0,0,0,0.5247036598011412,0.47529634019885814
defect4j,math,org/apache/commons/math/util/FastMath,62,1543,        for (int i = 7; i < 14; i++) {,3,1,0,1,3,2,0,0,1,6,30,4,1.0,0,0,0.5092918968236461,0.49070810317635283
defect4j,math,org/apache/commons/math/util/FastMath,62,1544,            double xs[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,1.0,0,0,0.22976673021374852,0.7702332697862521
defect4j,math,org/apache/commons/math/util/FastMath,62,1545,            double ys[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,1.0,0,0,0.22976673021374852,0.7702332697862521
defect4j,math,org/apache/commons/math/util/FastMath,62,1546,            double as[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,1.0,0,0,0.22976673021374852,0.7702332697862521
defect4j,math,org/apache/commons/math/util/FastMath,62,1547,            double bs[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,1.0,0,0,0.22976673021374852,0.7702332697862521
defect4j,math,org/apache/commons/math/util/FastMath,62,1548,            double temps[] = new double[2];,1,0,0,0,4,3,0,0,0,3,31,7,1.0,0,0,0.23309486720334965,0.7669051327966508
defect4j,math,org/apache/commons/math/util/FastMath,62,1550,            if ( (i & 1) == 0) {,1,2,0,2,5,1,0,0,0,5,20,6,1.0,0,0,0.44231574421487,0.5576842557851316
defect4j,math,org/apache/commons/math/util/FastMath,62,1552,                xs[0] = SINE_TABLE_A[i/2];,1,1,1,0,4,0,0,0,1,5,26,8,1.0,0,0,0.5562946641509091,0.44370533584909105
defect4j,math,org/apache/commons/math/util/FastMath,62,1553,                xs[1] = SINE_TABLE_B[i/2];,1,1,1,0,4,0,0,0,1,5,26,8,1.0,0,0,0.5562946641509091,0.44370533584909105
defect4j,math,org/apache/commons/math/util/FastMath,62,1554,                ys[0] = COSINE_TABLE_A[i/2];,1,1,1,0,4,0,0,0,1,5,28,8,1.0,0,0,0.559224097960687,0.44077590203931377
defect4j,math,org/apache/commons/math/util/FastMath,62,1555,                ys[1] = COSINE_TABLE_B[i/2];,1,1,1,0,4,0,0,0,1,5,28,8,1.0,0,0,0.559224097960687,0.44077590203931377
defect4j,math,org/apache/commons/math/util/FastMath,62,1558,"                splitMult(xs, ys, result);",0,0,0,0,2,0,4,0,1,3,26,8,1.0,0,0,0.08825335192099673,0.9117466480790027
defect4j,math,org/apache/commons/math/util/FastMath,62,1559,                SINE_TABLE_A[i] = result[0] * 2.0;,0,1,1,0,4,0,0,0,1,4,34,8,1.0,0,0,0.494786302026538,0.5052136979734619
defect4j,math,org/apache/commons/math/util/FastMath,62,1560,                SINE_TABLE_B[i] = result[1] * 2.0;,0,1,1,0,4,0,0,0,1,4,34,8,1.0,0,0,0.494786302026538,0.5052136979734619
defect4j,math,org/apache/commons/math/util/FastMath,62,1563,"                splitMult(ys, ys, as);",0,0,0,0,2,0,4,0,1,3,22,8,1.0,0,0,0.08647400485704917,0.9135259951429506
defect4j,math,org/apache/commons/math/util/FastMath,62,1564,"                splitMult(xs, xs, temps);",0,0,0,0,2,0,4,0,1,3,25,8,1.0,0,0,0.08779107306503865,0.91220892693496
defect4j,math,org/apache/commons/math/util/FastMath,62,1565,                temps[0] = -temps[0];,0,0,1,0,4,0,0,0,2,3,21,8,1.0,0,0,0.4840281365498636,0.515971863450136
defect4j,math,org/apache/commons/math/util/FastMath,62,1566,                temps[1] = -temps[1];,0,0,1,0,4,0,0,0,2,3,21,8,1.0,0,0,0.4840281365498636,0.515971863450136
defect4j,math,org/apache/commons/math/util/FastMath,62,1567,"                splitAdd(as, temps, result);",0,0,0,0,2,0,4,0,1,3,28,8,1.0,0,0,0.08921365577546791,0.9107863442245304
defect4j,math,org/apache/commons/math/util/FastMath,62,1568,                COSINE_TABLE_A[i] = result[0];,0,0,1,0,4,0,0,0,1,3,30,8,1.0,0,0,0.4169821860695704,0.583017813930428
defect4j,math,org/apache/commons/math/util/FastMath,62,1569,                COSINE_TABLE_B[i] = result[1];,0,0,1,0,4,0,0,0,1,3,30,8,1.0,0,0,0.4169821860695704,0.583017813930428
defect4j,math,org/apache/commons/math/util/FastMath,62,1571,                xs[0] = SINE_TABLE_A[i/2];,1,1,1,0,4,0,0,0,1,5,26,8,1.0,0,0,0.5562946641509091,0.44370533584909105
defect4j,math,org/apache/commons/math/util/FastMath,62,1572,                xs[1] = SINE_TABLE_B[i/2];,1,1,1,0,4,0,0,0,1,5,26,8,1.0,0,0,0.5562946641509091,0.44370533584909105
defect4j,math,org/apache/commons/math/util/FastMath,62,1573,                ys[0] = COSINE_TABLE_A[i/2];,1,1,1,0,4,0,0,0,1,5,28,8,1.0,0,0,0.559224097960687,0.44077590203931377
defect4j,math,org/apache/commons/math/util/FastMath,62,1574,                ys[1] = COSINE_TABLE_B[i/2];,1,1,1,0,4,0,0,0,1,5,28,8,1.0,0,0,0.559224097960687,0.44077590203931377
defect4j,math,org/apache/commons/math/util/FastMath,62,1575,                as[0] = SINE_TABLE_A[i/2+1];,1,2,1,0,4,0,0,0,1,5,28,8,1.0,0,0,0.6373398027851412,0.36266019721485876
defect4j,math,org/apache/commons/math/util/FastMath,62,1576,                as[1] = SINE_TABLE_B[i/2+1];,1,2,1,0,4,0,0,0,1,5,28,8,1.0,0,0,0.6373398027851412,0.36266019721485876
defect4j,math,org/apache/commons/math/util/FastMath,62,1577,                bs[0] = COSINE_TABLE_A[i/2+1];,1,2,1,0,4,0,0,0,1,5,30,8,1.0,0,0,0.6401905415310182,0.35980945846898266
defect4j,math,org/apache/commons/math/util/FastMath,62,1578,                bs[1] = COSINE_TABLE_B[i/2+1];,1,2,1,0,4,0,0,0,1,5,30,8,1.0,0,0,0.6401905415310182,0.35980945846898266
defect4j,math,org/apache/commons/math/util/FastMath,62,1581,"                splitMult(xs, bs, temps);",0,0,0,0,2,0,4,0,1,3,25,8,1.0,0,0,0.08779107306503865,0.91220892693496
defect4j,math,org/apache/commons/math/util/FastMath,62,1582,"                splitMult(ys, as, result);",0,0,0,0,2,0,4,0,1,3,26,8,1.0,0,0,0.08825335192099673,0.9117466480790027
defect4j,math,org/apache/commons/math/util/FastMath,62,1583,"                splitAdd(result, temps, result);",0,0,0,0,2,0,4,0,1,3,32,8,1.0,0,0,0.09128154274987034,0.9087184572501298
defect4j,math,org/apache/commons/math/util/FastMath,62,1584,                SINE_TABLE_A[i] = result[0];,0,0,1,0,4,0,0,0,1,3,28,8,1.0,0,0,0.4139818018244026,0.5860181981755984
defect4j,math,org/apache/commons/math/util/FastMath,62,1585,                SINE_TABLE_B[i] = result[1];,0,0,1,0,4,0,0,0,1,3,28,8,1.0,0,0,0.4139818018244026,0.5860181981755984
defect4j,math,org/apache/commons/math/util/FastMath,62,1588,"                splitMult(ys, bs, result);",0,0,0,0,2,0,4,0,1,3,26,8,1.0,0,0,0.08825335192099673,0.9117466480790027
defect4j,math,org/apache/commons/math/util/FastMath,62,1589,"                splitMult(xs, as, temps);",0,0,0,0,2,0,4,0,1,3,25,8,1.0,0,0,0.08779107306503865,0.91220892693496
defect4j,math,org/apache/commons/math/util/FastMath,62,1590,                temps[0] = -temps[0];,0,0,1,0,4,0,0,0,2,3,21,8,1.0,0,0,0.4840281365498636,0.515971863450136
defect4j,math,org/apache/commons/math/util/FastMath,62,1591,                temps[1] = -temps[1];,0,0,1,0,4,0,0,0,2,3,21,8,1.0,0,0,0.4840281365498636,0.515971863450136
defect4j,math,org/apache/commons/math/util/FastMath,62,1592,"                splitAdd(result, temps, result);",0,0,0,0,2,0,4,0,1,3,32,8,1.0,0,0,0.09128154274987034,0.9087184572501298
defect4j,math,org/apache/commons/math/util/FastMath,62,1593,                COSINE_TABLE_A[i] = result[0];,0,0,1,0,4,0,0,0,1,3,30,8,1.0,0,0,0.4169821860695704,0.583017813930428
defect4j,math,org/apache/commons/math/util/FastMath,62,1594,                COSINE_TABLE_B[i] = result[1];,0,0,1,0,4,0,0,0,1,3,30,8,1.0,0,0,0.4169821860695704,0.583017813930428
defect4j,math,org/apache/commons/math/util/FastMath,62,1599,        for (int i = 0; i < 14; i++) {,3,1,0,1,3,2,0,0,1,6,30,4,1.0,0,0,0.5092918968236461,0.49070810317635283
defect4j,math,org/apache/commons/math/util/FastMath,62,1600,            double xs[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,1.0,0,0,0.22976673021374852,0.7702332697862521
defect4j,math,org/apache/commons/math/util/FastMath,62,1601,            double ys[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,1.0,0,0,0.22976673021374852,0.7702332697862521
defect4j,math,org/apache/commons/math/util/FastMath,62,1602,            double as[] = new double[2];,1,0,0,0,4,3,0,0,0,3,28,7,1.0,0,0,0.22976673021374852,0.7702332697862521
defect4j,math,org/apache/commons/math/util/FastMath,62,1604,            as[0] = COSINE_TABLE_A[i];,0,0,1,0,4,0,0,0,1,3,26,6,1.0,0,0,0.5186574130430881,0.4813425869569114
defect4j,math,org/apache/commons/math/util/FastMath,62,1605,            as[1] = COSINE_TABLE_B[i];,0,0,1,0,4,0,0,0,1,3,26,6,1.0,0,0,0.5186574130430881,0.4813425869569114
defect4j,math,org/apache/commons/math/util/FastMath,62,1607,"            splitReciprocal(as, ys);",0,0,0,0,2,0,3,0,1,3,24,6,1.0,0,0,0.16816638525958538,0.8318336147404133
defect4j,math,org/apache/commons/math/util/FastMath,62,1609,            xs[0] = SINE_TABLE_A[i];,0,0,1,0,4,0,0,0,1,3,24,6,1.0,0,0,0.5158113259090439,0.48418867409095695
defect4j,math,org/apache/commons/math/util/FastMath,62,1610,            xs[1] = SINE_TABLE_B[i];,0,0,1,0,4,0,0,0,1,3,24,6,1.0,0,0,0.5158113259090439,0.48418867409095695
defect4j,math,org/apache/commons/math/util/FastMath,62,1612,"            splitMult(xs, ys, as);",0,0,0,0,2,0,4,0,1,3,22,6,1.0,0,0,0.12748305923737677,0.8725169407626219
defect4j,math,org/apache/commons/math/util/FastMath,62,1614,            TANGENT_TABLE_A[i] = as[0];,0,0,1,0,4,0,0,0,1,3,27,6,1.0,0,0,0.5201247855617379,0.47987521443826203
defect4j,math,org/apache/commons/math/util/FastMath,62,1615,            TANGENT_TABLE_B[i] = as[1];,0,0,1,0,4,0,0,0,1,3,27,6,1.0,0,0,0.5201247855617379,0.47987521443826203
defect4j,math,org/apache/commons/math/util/FastMath,62,1618,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.11573401054039674,0.8842659894596017
defect4j,math,org/apache/commons/math/util/FastMath,62,3016,        return (x < 0l) ? -x : x;,3,1,0,1,2,1,0,0,1,6,25,5,1.0,0,0,0.4499215766624848,0.550078423337515
defect4j,math,org/apache/commons/math/util/FastMath,62,3034,        return (x < 0.0) ? -x : x;,3,1,0,1,2,1,0,0,1,6,26,5,1.0,0,0,0.4513472298657984,0.5486527701342012
defect4j,math,org/apache/commons/math/util/FastMath,62,3044,        return abs(x - Double.longBitsToDouble(Double.doubleToLongBits(x) ^ 1));,1,2,0,3,6,1,6,0,1,7,72,4,1.0,0,0,0.4222562921373977,0.5777437078626018
defect4j,math,org/apache/commons/math/util/FastMath,62,3224,        return (a <= b) ? a : (Double.isNaN(a + b) ? Double.NaN : b);,8,2,0,2,6,1,2,0,0,6,61,5,1.0,0,0,0.6784789652167025,0.32152103478329835
defect4j,math,org/apache/commons/math/util/FastMath,62,3260,        return (a <= b) ? b : (Double.isNaN(a + b) ? Double.NaN : a);,8,2,0,2,6,1,2,0,0,6,61,5,1.0,0,0,0.6784789652167025,0.32152103478329835
defect4j,math,org/apache/commons/math/util/Incrementor,62,28,public class Incrementor {,1,0,0,0,1,2,0,0,1,4,26,1,1.0,0,0,0.35970550239290944,0.6402944976070916
defect4j,math,org/apache/commons/math/util/Incrementor,62,44,        maximalCount = max;,2,0,0,0,0,0,0,0,1,2,19,4,1.0,0,0,0.2479039106547034,0.7520960893452984
defect4j,math,org/apache/commons/math/util/Incrementor,62,45,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.11573401054039674,0.8842659894596017
defect4j,math,org/apache/commons/math/util/Incrementor,62,53,        return maximalCount;,1,0,0,0,0,1,0,0,0,2,20,4,1.0,0,0,0.17586561198551948,0.8241343880144809
defect4j,math,org/apache/commons/math/util/Incrementor,62,62,        return count;,1,0,0,0,0,1,0,0,0,2,13,4,1.0,0,0,0.1711652992057698,0.8288347007942316
defect4j,math,org/apache/commons/math/util/Incrementor,62,84,        if (++count > maximalCount) {,2,1,0,1,3,1,0,0,1,6,29,4,1.0,0,0,0.4530070423533159,0.5469929576466845
defect4j,math,org/apache/commons/math/util/Incrementor,62,87,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.11573401054039674,0.8842659894596017
defect4j,math,org/apache/commons/math/util/Incrementor,62,93,        count = 0;,1,0,0,0,0,0,0,0,1,2,10,4,1.0,0,0,0.21744693693662268,0.7825530630633788
defect4j,math,org/apache/commons/math/util/Incrementor,62,94,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.11573401054039674,0.8842659894596017
defect4j,math,org/apache/commons/math/util/MathUtils,62,33,public final class MathUtils {,1,0,0,0,1,3,0,0,2,4,30,1,1.0,0,0,0.5173031341184422,0.48269686588155697
defect4j,math,org/apache/commons/math/util/MathUtils,62,75,    private static final long[] FACTORIALS = new long[] {,1,0,0,0,5,6,0,0,3,4,53,2,1.0,0,0,0.9405346411856094,0.05946535881438957
defect4j,math,org/apache/commons/math/util/MathUtils,62,417,"        return equals(x, y, 1);",0,0,0,0,2,1,3,0,1,4,23,4,1.0,0,0,0.23156461311191187,0.7684353868880891
defect4j,math,org/apache/commons/math/util/MathUtils,62,479,        assert maxUlps > 0 && maxUlps < NAN_GAP;,3,3,0,0,0,1,0,0,0,3,40,4,1.0,0,0,0.5340564070158855,0.46594359298411425
defect4j,math,org/apache/commons/math/util/MathUtils,62,481,        long xInt = Double.doubleToLongBits(x);,1,0,0,1,2,1,3,0,0,5,39,5,1.0,0,0,0.2691031222700532,0.7308968777299467
defect4j,math,org/apache/commons/math/util/MathUtils,62,482,        long yInt = Double.doubleToLongBits(y);,1,0,0,1,2,1,3,0,0,5,39,5,1.0,0,0,0.2691031222700532,0.7308968777299467
defect4j,math,org/apache/commons/math/util/MathUtils,62,485,        if (xInt < 0) {,1,1,0,1,3,1,0,0,0,5,15,4,1.0,0,0,0.3376607679554389,0.6623392320445616
defect4j,math,org/apache/commons/math/util/MathUtils,62,486,            xInt = SGN_MASK - xInt;,3,1,0,0,0,0,0,0,1,3,23,6,1.0,0,0,0.3000868922266015,0.6999131077734
defect4j,math,org/apache/commons/math/util/MathUtils,62,488,        if (yInt < 0) {,1,1,0,1,3,1,0,0,0,5,15,4,1.0,0,0,0.3376607679554389,0.6623392320445616
defect4j,math,org/apache/commons/math/util/MathUtils,62,489,            yInt = SGN_MASK - yInt;,3,1,0,0,0,0,0,0,1,3,23,6,1.0,0,0,0.3000868922266015,0.6999131077734
defect4j,math,org/apache/commons/math/util/MathUtils,62,492,        final boolean isEqual = FastMath.abs(xInt - yInt) <= maxUlps;,4,2,0,1,2,2,2,0,1,7,61,4,1.0,0,0,0.6394557418133647,0.3605442581866339
defect4j,math,org/apache/commons/math/util/MathUtils,62,494,        return isEqual && !Double.isNaN(x) && !Double.isNaN(y);,1,1,0,1,4,1,6,0,2,7,55,4,1.0,0,0,0.1980265601692549,0.8019734398307441
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,62,28,public class JDKRandomGenerator extends Random implements RandomGenerator {,1,0,0,0,1,4,0,2,1,5,75,1,1.0,0,0,0.9985881624376021,0.001411837562398079
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,191,"        Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {",0,0,0,1,4,1,3,2,1,6,68,5,1.0,0,0,0.9943256349595901,0.005674365040408714
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,194,                    if (o1 == null) {,1,1,0,1,3,1,0,0,0,5,17,10,1.0,0,0,0.12274389982101033,0.8772561001789896
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,196,                    } else if (o2 == null) {,1,1,0,1,4,2,0,0,0,5,24,11,1.0,0,0,0.09956415889190616,0.9004358411080925
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,199,                    final double v1 = o1.getValue();,1,0,0,1,2,2,2,0,1,6,32,10,1.0,0,0,0.16079362332455208,0.8392063766754477
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,200,                    final double v2 = o2.getValue();,1,0,0,1,2,2,2,0,1,6,32,10,1.0,0,0,0.16079362332455208,0.8392063766754477
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,201,                    return (goal == GoalType.MINIMIZE) ?,3,1,0,1,2,1,0,0,0,5,36,12,1.0,0,0,0.08250406967521479,0.9174959303247842
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,72,                                             final RandomGenerator generator) {,1,0,0,0,2,1,0,1,1,5,34,3,1.0,0,0,0.6860642876172772,0.31393571238272355
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,73,        this.optimizer = optimizer;,2,0,0,0,0,1,0,0,1,3,27,4,1.0,0,0,0.3053647383913877,0.6946352616086126
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,74,        this.starts = starts;,2,0,0,0,0,1,0,0,1,3,21,4,1.0,0,0,0.2983104719296845,0.7016895280703147
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,75,        this.generator = generator;,2,0,0,0,0,1,0,0,1,3,27,4,1.0,0,0,0.3053647383913877,0.6946352616086126
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,76,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.11573401054039674,0.8842659894596017
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,146,"        return optimize(f, goal, min, max, 0);",0,0,0,0,2,1,5,0,1,4,38,4,1.0,1,0,0.13756817405092064,0.8624318259490784
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,154,        optima = new UnivariateRealPointValuePair[starts];,1,0,1,0,2,1,0,1,1,6,50,4,1.0,0,0,0.904721733570549,0.09527826642945153
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,155,        totalEvaluations = 0;,1,0,0,0,0,0,0,0,1,2,21,4,1.0,0,0,0.2261088386921775,0.773891161307821
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,158,        for (int i = 0; i < starts; ++i) {,4,1,0,1,3,2,0,0,1,6,34,4,1.0,0,0,0.540202436544878,0.4597975634551224
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,160,                final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);,6,4,0,1,6,2,2,0,1,7,82,8,1.0,1,0,0.8530244863250761,0.1469755136749224
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,161,                final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);,6,4,0,1,6,2,2,0,1,7,82,8,1.0,1,0,0.8530244863250761,0.1469755136749224
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,162,"                optima[i] = optimizer.optimize(f, goal, FastMath.min(bound1, bound2), FastMath.max(bound1, bound2));",0,0,1,0,8,0,12,0,1,4,100,8,1.0,1,0,0.0019415067929253278,0.9980584932070735
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,167,            },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.11573401054039674,0.8842659894596017
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,169,            final int usedEvaluations = optimizer.getEvaluations();,1,0,0,1,2,2,2,0,1,6,55,6,1.0,0,0,0.3965595485367177,0.6034404514632823
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,170,            optimizer.setMaxEvaluations(optimizer.getMaxEvaluations() - usedEvaluations);,1,1,0,2,4,0,4,0,0,5,77,7,1.0,0,0,0.3078037057761747,0.692196294223824
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,171,            totalEvaluations += usedEvaluations;,2,0,0,0,0,0,0,0,1,2,36,6,1.0,0,0,0.22105800091605135,0.7789419990839498
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,174,        sortPairs(goal);,0,0,0,1,2,0,2,0,1,4,16,4,1.0,0,0,0.30735309755571666,0.6926469024442825
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,176,        if (optima[0] == null) {,0,1,1,1,5,1,0,0,0,5,24,4,1.0,0,0,0.6383563605865904,0.3616436394134102
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,182,        return optima[0];,0,0,1,0,2,1,0,0,0,3,17,5,1.0,0,0,0.46673205287641645,0.5332679471235834
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,191,"        Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {",0,0,0,1,4,1,3,2,1,6,68,5,1.0,0,0,0.9943256349595901,0.005674365040408714
defect4j,math,org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer,62,205,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.11573401054039674,0.8842659894596017
defect4j,math,org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair,62,45,                                        final double value) {,1,0,0,0,2,2,0,0,1,4,21,3,1.0,0,0,0.3584105625321122,0.6415894374678872
defect4j,math,org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair,62,46,        this.point = point;,2,0,0,0,0,1,0,0,1,3,19,4,1.0,0,0,0.2961793609200477,0.7038206390799507
defect4j,math,org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair,62,47,        this.value = value;,2,0,0,0,0,1,0,0,1,3,19,4,1.0,0,0,0.2961793609200477,0.7038206390799507
defect4j,math,org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair,62,48,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.11573401054039674,0.8842659894596017
defect4j,math,org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair,62,56,        return point;,1,0,0,0,0,1,0,0,0,2,13,4,1.0,0,0,0.1711652992057698,0.8288347007942316
defect4j,math,org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair,62,65,        return value;,1,0,0,0,0,1,0,0,0,2,13,4,1.0,0,0,0.1711652992057698,0.8288347007942316
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,36,public abstract class AbstractUnivariateRealOptimizer,1,0,0,0,0,3,0,0,2,3,53,1,1.0,0,0,0.5010957916337067,0.4989042083662946
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,41,    private final Incrementor evaluations = new Incrementor();,1,0,0,1,2,3,0,2,3,6,58,2,1.0,0,0,0.9989453527075323,0.0010546472924660708
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,55,        evaluations.setMaximalCount(maxEvaluations);,0,0,0,1,2,0,3,0,0,3,44,5,1.0,0,0,0.19603970233292287,0.8039602976670781
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,56,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.11573401054039674,0.8842659894596017
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,60,        return evaluations.getMaximalCount();,0,0,0,1,2,1,2,0,0,4,37,5,1.0,0,0,0.24952625878473125,0.7504737412152692
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,65,        return evaluations.getCount();,0,0,0,1,2,1,2,0,0,4,30,5,1.0,0,0,0.24082744023450037,0.7591725597654999
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,72,        return goal;,1,0,0,0,0,1,0,0,0,2,12,4,1.0,0,0,0.17056968761686486,0.8294303123831358
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,78,        return searchMin;,1,0,0,0,0,1,0,0,0,2,17,4,1.0,0,0,0.17373584918864166,0.8262641508113578
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,84,        return searchMax;,1,0,0,0,0,1,0,0,0,2,17,4,1.0,0,0,0.17373584918864166,0.8262641508113578
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,90,        return searchStart;,1,0,0,0,0,1,0,0,0,2,19,4,1.0,0,0,0.17513614207132655,0.8248638579286747
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,106,            evaluations.incrementCount();,0,0,0,1,2,0,2,0,0,3,29,7,1.0,0,0,0.16106918821122201,0.8389308117887779
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,109,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.11573401054039674,0.8842659894596017
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,110,        return function.value(point);,0,0,0,1,2,1,3,0,0,4,29,5,1.0,0,0,0.20354267890301295,0.7964573210969871
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,120,        if (f == null) {,1,1,0,1,3,1,0,0,0,5,16,4,1.0,0,0,0.3386820010324648,0.6613179989675348
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,123,        if (goalType == null) {,1,1,0,1,3,1,0,0,0,5,23,4,1.0,0,0,0.34663027760098797,0.6533697223990121
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,128,        searchMin = min;,2,0,0,0,0,0,0,0,1,2,16,4,1.0,0,0,0.2452276651006074,0.7547723348993924
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,129,        searchMax = max;,2,0,0,0,0,0,0,0,1,2,16,4,1.0,0,0,0.2452276651006074,0.7547723348993924
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,130,        searchStart = startValue;,2,0,0,0,0,0,0,0,1,2,25,4,1.0,0,0,0.25392605456605066,0.7460739454339508
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,131,        goal = goalType;,2,0,0,0,0,0,0,0,1,2,16,4,1.0,0,0,0.2452276651006074,0.7547723348993924
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,132,        function = f;,2,0,0,0,0,0,0,0,1,2,13,4,1.0,0,0,0.2427687872810405,0.7572312127189587
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,133,        evaluations.resetCount();,0,0,0,1,2,0,2,0,0,3,25,5,1.0,0,0,0.20896334961256255,0.7910366503874383
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,136,        return doOptimize();,0,0,0,1,2,1,1,0,1,5,20,4,1.0,0,0,0.3485949071880853,0.6514050928119152
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,144,"        return optimize(f, goalType, min, max, min + 0.5 * (max - min));",3,3,0,1,4,1,5,0,1,7,64,4,1.0,0,0,0.5159822922991126,0.48401770770088876
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,62,158,        return checker;,1,0,0,0,0,1,0,0,0,2,15,4,1.0,0,0,0.17241265408063564,0.8275873459193631
defect4j,math,org/apache/commons/math/optimization/GoalType,62,27,public enum GoalType implements Serializable {,1,0,0,0,1,3,0,1,1,5,46,1,1.0,0,0,0.7778926891893589,0.2221073108106416
defect4j,math,org/apache/commons/math/optimization/GoalType,62,30,"    MAXIMIZE,",1,0,0,0,0,0,0,0,0,1,9,2,1.0,0,0,0.13473396115881048,0.865266038841191
defect4j,math,org/apache/commons/math/optimization/GoalType,62,33,    MINIMIZE,1,0,0,0,0,0,0,0,0,1,8,2,1.0,0,0,0.13430019145090588,0.8656998085490925
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,76,                          double abs) {,1,0,0,0,2,1,0,0,0,3,13,3,1.0,0,0,0.23371740828519508,0.7662825917148047
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,77,        if (rel < MIN_RELATIVE_TOLERANCE) {,2,1,0,1,3,1,0,0,0,5,35,4,1.0,0,0,0.3943740042007759,0.6056259957992244
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,80,        if (abs <= 0) {,1,1,0,1,3,1,0,0,0,5,15,4,1.0,0,0,0.3376607679554389,0.6623392320445616
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,83,        relativeThreshold = rel;,2,0,0,0,0,0,0,0,1,2,24,4,1.0,0,0,0.2528592107036596,0.7471407892963388
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,84,        absoluteThreshold = abs;,2,0,0,0,0,0,0,0,1,2,24,4,1.0,0,0,0.2528592107036596,0.7471407892963388
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,85,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.11573401054039674,0.8842659894596017
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,47,    private static final double GOLDEN_SECTION = 0.5 * (3 - FastMath.sqrt(5));,1,2,0,2,4,4,2,0,3,7,74,2,1.0,0,0,0.910704703070356,0.08929529692964244
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,51,    private static final double MIN_RELATIVE_TOLERANCE = 2 * FastMath.ulp(1d);,1,1,0,1,2,4,2,0,3,7,74,2,1.0,0,0,0.8392502258766917,0.16074977412330788
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,90,        final boolean isMinim = getGoalType() == GoalType.MINIMIZE;,3,1,0,1,2,2,1,0,2,7,59,4,1.0,0,0,0.6361487710994002,0.3638512289005996
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,91,        final double lo = getMin();,1,0,0,1,2,2,1,0,2,6,27,4,1.0,0,0,0.5119491795119482,0.4880508204880527
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,92,        final double mid = getStartValue();,1,0,0,1,2,2,1,0,2,6,35,4,1.0,0,0,0.5247640978427612,0.47523590215723854
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,93,        final double hi = getMax();,1,0,0,1,2,2,1,0,2,6,27,4,1.0,0,0,0.5119491795119482,0.4880508204880527
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,96,        final ConvergenceChecker<UnivariateRealPointValuePair> checker,1,0,0,0,0,1,0,2,1,4,62,4,1.0,0,0,0.9952199741810883,0.004780025818912281
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,101,        if (lo < hi) {,2,1,0,1,3,1,0,0,0,5,14,4,1.0,0,0,0.36647121321523407,0.6335287867847668
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,102,            a = lo;,2,0,0,0,0,0,0,0,1,2,7,6,1.0,0,0,0.19581742303724486,0.8041825769627565
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,103,            b = hi;,2,0,0,0,0,0,0,0,1,2,7,6,1.0,0,0,0.19581742303724486,0.8041825769627565
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,109,        double x = mid;,2,0,0,0,0,1,0,0,0,2,15,5,1.0,0,0,0.17641108945171163,0.8235889105482873
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,110,        double v = x;,2,0,0,0,0,1,0,0,0,2,13,5,1.0,0,0,0.17514092895173497,0.8248590710482646
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,111,        double w = x;,2,0,0,0,0,1,0,0,0,2,13,5,1.0,0,0,0.17514092895173497,0.8248590710482646
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,112,        double d = 0;,1,0,0,0,0,1,0,0,0,2,13,5,1.0,0,0,0.15704044803241082,0.8429595519675896
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,113,        double e = 0;,1,0,0,0,0,1,0,0,0,2,13,5,1.0,0,0,0.15704044803241082,0.8429595519675896
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,114,        double fx = computeObjectiveValue(x);,1,0,0,1,2,1,2,0,1,6,37,5,1.0,0,0,0.3718889787985058,0.6281110212014933
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,115,        if (!isMinim) {,1,0,0,1,3,1,0,0,1,5,15,4,1.0,0,0,0.3775817067403188,0.6224182932596817
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,118,        double fv = fx;,2,0,0,0,0,1,0,0,0,2,15,5,1.0,0,0,0.17641108945171163,0.8235889105482873
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,119,        double fw = fx;,2,0,0,0,0,1,0,0,0,2,15,5,1.0,0,0,0.17641108945171163,0.8235889105482873
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,121,        UnivariateRealPointValuePair previous = null;,1,0,0,0,0,0,0,1,0,2,45,4,1.0,0,0,0.4874219168319694,0.5125780831680316
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,122,        UnivariateRealPointValuePair current,1,0,0,0,0,0,0,1,0,2,36,4,1.0,0,0,0.4704605705807521,0.5295394294192486
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,125,        int iter = 0;,1,0,0,0,0,1,0,0,0,2,13,5,1.0,0,0,0.15704044803241082,0.8429595519675896
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,127,            final double m = 0.5 * (a + b);,3,2,0,1,2,2,0,0,1,6,31,6,1.0,0,0,0.5293906488518393,0.4706093511481622
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,128,            final double tol1 = relativeThreshold * FastMath.abs(x) + absoluteThreshold;,3,2,0,1,2,2,3,0,1,7,76,6,1.0,0,0,0.5441616565289608,0.45583834347103974
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,129,            final double tol2 = 2 * tol1;,2,1,0,0,0,2,0,0,1,4,29,6,1.0,0,0,0.33892285901962355,0.6610771409803772
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,132,            final boolean stop = FastMath.abs(x - m) <= tol2 - 0.5 * (b - a);,6,5,0,1,4,2,2,0,1,7,65,6,1.0,0,0,0.9592941570068539,0.04070584299314733
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,133,            if (!stop) {,1,0,0,1,3,1,0,0,1,5,12,6,1.0,0,0,0.31768093640034584,0.6823190635996549
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,134,                double p = 0;,1,0,0,0,0,1,0,0,0,2,13,9,1.0,0,0,0.07252366366415659,0.9274763363358423
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,135,                double q = 0;,1,0,0,0,0,1,0,0,0,2,13,9,1.0,0,0,0.07252366366415659,0.9274763363358423
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,136,                double r = 0;,1,0,0,0,0,1,0,0,0,2,13,9,1.0,0,0,0.07252366366415659,0.9274763363358423
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,137,                double u = 0;,1,0,0,0,0,1,0,0,0,2,13,9,1.0,0,0,0.07252366366415659,0.9274763363358423
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,139,                if (FastMath.abs(e) > tol1) { // Fit parabola.,1,1,0,2,5,1,3,0,0,6,46,8,1.0,0,0,0.2539212641716818,0.7460787358283165
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,140,                    r = (x - w) * (fx - fv);,5,3,0,1,4,0,0,0,1,5,24,10,1.0,0,0,0.4337402454729196,0.566259754527082
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,141,                    q = (x - v) * (fx - fw);,5,3,0,1,4,0,0,0,1,5,24,10,1.0,0,0,0.4337402454729196,0.566259754527082
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,142,                    p = (x - v) * q - (x - w) * r;,7,5,0,1,4,0,0,0,1,5,30,10,1.0,0,0,0.8731151029757201,0.12688489702427805
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,143,                    q = 2 * (q - r);,3,2,0,1,2,0,0,0,1,5,16,10,1.0,0,0,0.25135308374344034,0.7486469162565583
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,145,                    if (q > 0) {,1,1,0,1,3,1,0,0,0,5,12,10,1.0,0,0,0.12037163662418184,0.8796283633758171
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,146,                        p = -p;,2,0,0,0,0,0,0,0,2,2,7,12,1.0,0,0,0.05025867123555861,0.9497413287644396
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,148,                        q = -q;,2,0,0,0,0,0,0,0,2,2,7,12,1.0,0,0,0.05025867123555861,0.9497413287644396
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,151,                    r = e;,2,0,0,0,0,0,0,0,1,2,6,10,1.0,0,0,0.07822691750674418,0.9217730824932555
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,152,                    e = d;,2,0,0,0,0,0,0,0,1,2,6,10,1.0,0,0,0.07822691750674418,0.9217730824932555
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,154,                    if (p > q * (a - x) &&,4,5,0,1,3,1,0,0,0,5,22,10,1.0,0,0,0.7987553230018288,0.20124467699817075
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,158,                        d = p / q;,3,1,0,0,0,0,0,0,1,3,10,12,1.0,0,0,0.05968055426688567,0.9403194457331135
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,159,                        u = x + d;,3,1,0,0,0,0,0,0,1,3,10,12,1.0,0,0,0.05968055426688567,0.9403194457331135
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,162,                        if (u - a < tol2 || b - u < tol2) {,6,5,0,1,3,1,0,0,0,5,35,12,1.0,0,0,0.6911313039293127,0.3088686960706873
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,163,                            if (x <= m) {,2,1,0,1,3,1,0,0,0,5,13,14,1.0,0,0,0.025727335184459674,0.9742726648155406
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,164,                                d = tol1;,2,0,0,0,0,0,0,0,1,2,9,16,1.0,0,0,0.004497077148083788,0.9955029228519158
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,171,                        if (x < m) {,2,1,0,1,3,1,0,0,0,5,12,12,1.0,0,0,0.06555744541889179,0.9344425545811099
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,172,                            e = b - x;,3,1,0,0,0,0,0,0,1,3,10,14,1.0,0,0,0.02323624735420297,0.9767637526457965
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,174,                            e = a - x;,3,1,0,0,0,0,0,0,1,3,10,14,1.0,0,0,0.02323624735420297,0.9767637526457965
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,176,                        d = GOLDEN_SECTION * e;,3,1,0,0,0,0,0,0,1,3,23,12,1.0,0,0,0.06318961769471929,0.9368103823052802
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,180,                    if (x < m) {,2,1,0,1,3,1,0,0,0,5,12,10,1.0,0,0,0.13492214587256346,0.8650778541274351
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,183,                        e = a - x;,3,1,0,0,0,0,0,0,1,3,10,12,1.0,0,0,0.05968055426688567,0.9403194457331135
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,185,                    d = GOLDEN_SECTION * e;,3,1,0,0,0,0,0,0,1,3,23,10,1.0,0,0,0.13039859104455626,0.8696014089554445
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,189,                if (FastMath.abs(d) < tol1) {,1,1,0,2,5,1,3,0,0,6,29,8,1.0,0,0,0.23145730305943318,0.7685426969405683
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,190,                    if (d >= 0) {,1,1,0,1,3,1,0,0,0,5,13,10,1.0,0,0,0.12081749462344366,0.879182505376557
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,191,                        u = x + tol1;,3,1,0,0,0,0,0,0,1,3,13,12,1.0,0,0,0.060371941921127235,0.9396280580788721
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,193,                        u = x - tol1;,3,1,0,0,0,0,0,0,1,3,13,12,1.0,0,0,0.060371941921127235,0.9396280580788721
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,196,                    u = x + d;,3,1,0,0,0,0,0,0,1,3,10,10,1.0,0,0,0.12364988330651978,0.87635011669348
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,199,                double fu = computeObjectiveValue(u);,1,0,0,1,2,1,2,0,1,6,37,9,1.0,0,0,0.19904714610560684,0.8009528538943939
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,200,                if (!isMinim) {,1,0,0,1,3,1,0,0,1,5,15,8,1.0,0,0,0.2340561186006016,0.7659438813993981
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,205,                if (fu <= fx) {,2,1,0,1,3,1,0,0,0,5,15,8,1.0,0,0,0.22641521119610736,0.7735847888038929
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,206,                    if (u < x) {,2,1,0,1,3,1,0,0,0,5,12,10,1.0,0,0,0.13492214587256346,0.8650778541274351
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,207,                        b = x;,2,0,0,0,0,0,0,0,1,2,6,12,1.0,0,0,0.03677081020397679,0.9632291897960236
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,209,                        a = x;,2,0,0,0,0,0,0,0,1,2,6,12,1.0,0,0,0.03677081020397679,0.9632291897960236
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,211,                    v = w;,2,0,0,0,0,0,0,0,1,2,6,10,1.0,0,0,0.07822691750674418,0.9217730824932555
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,212,                    fv = fw;,2,0,0,0,0,0,0,0,1,2,8,10,1.0,0,0,0.07873990249704846,0.9212600975029528
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,213,                    w = x;,2,0,0,0,0,0,0,0,1,2,6,10,1.0,0,0,0.07822691750674418,0.9217730824932555
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,214,                    fw = fx;,2,0,0,0,0,0,0,0,1,2,8,10,1.0,0,0,0.07873990249704846,0.9212600975029528
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,215,                    x = u;,2,0,0,0,0,0,0,0,1,2,6,10,1.0,0,0,0.07822691750674418,0.9217730824932555
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,216,                    fx = fu;,2,0,0,0,0,0,0,0,1,2,8,10,1.0,0,0,0.07873990249704846,0.9212600975029528
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,218,                    if (u < x) {,2,1,0,1,3,1,0,0,0,5,12,10,1.0,0,0,0.13492214587256346,0.8650778541274351
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,219,                        a = u;,2,0,0,0,0,0,0,0,1,2,6,12,1.0,0,0,0.03677081020397679,0.9632291897960236
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,221,                        b = u;,2,0,0,0,0,0,0,0,1,2,6,12,1.0,0,0,0.03677081020397679,0.9632291897960236
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,223,                    if (fu <= fw ||,2,2,0,0,1,1,0,0,0,4,15,10,1.0,0,0,0.14264311053991643,0.8573568894600844
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,225,                        v = w;,2,0,0,0,0,0,0,0,1,2,6,12,1.0,0,0,0.03677081020397679,0.9632291897960236
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,226,                        fv = fw;,2,0,0,0,0,0,0,0,1,2,8,12,1.0,0,0,0.037022859423310676,0.9629771405766901
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,227,                        w = u;,2,0,0,0,0,0,0,0,1,2,6,12,1.0,0,0,0.03677081020397679,0.9632291897960236
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,228,                        fw = fu;,2,0,0,0,0,0,0,0,1,2,8,12,1.0,0,0,0.037022859423310676,0.9629771405766901
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,229,                    } else if (fu <= fv ||,2,3,0,0,2,2,0,0,0,4,22,11,1.0,0,0,0.19375799405031113,0.8062420059496891
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,232,                        v = u;,2,0,0,0,0,0,0,0,1,2,6,13,1.0,0,0,0.023351992277184496,0.9766480077228158
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,233,                        fv = fu;,2,0,0,0,0,0,0,0,1,2,8,13,1.0,0,0,0.023514306285572117,0.9764856937144267
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,237,                previous = current;,2,0,0,0,0,0,0,0,1,2,19,8,1.0,0,0,0.14239417397375276,0.8576058260262486
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,238,"                current = new UnivariateRealPointValuePair(x, isMinim ? fx : -fx);",5,0,0,0,2,1,0,1,3,5,66,8,1.0,0,0,0.81600371456925,0.1839962854307493
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,241,                if (checker != null) {,1,1,0,1,3,1,0,0,0,5,22,8,1.0,0,0,0.20998645689802176,0.7900135431019781
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,246,            } else { // Default termination (Brent's criterion).,0,0,0,1,4,1,0,0,0,3,52,2,1.0,0,0,0.2805830982568115,0.7194169017431896
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,247,                return current;,1,0,0,0,0,1,0,0,0,2,15,8,1.0,0,0,0.0949752019446088,0.9050247980553928
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,249,            ++iter;,1,0,0,0,0,0,0,0,1,2,7,6,1.0,0,0,0.17603610424017518,0.823963895759824
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,62,250,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.11573401054039674,0.8842659894596017
defect4j,math,org/apache/commons/math/util/MathUtils,63,33,public final class MathUtils {,1,0,0,0,1,3,0,0,2,4,30,1,0.00228,0,0,0.5173031341184422,0.48269686588155697
defect4j,math,org/apache/commons/math/util/MathUtils,63,75,    private static final long[] FACTORIALS = new long[] {,1,0,0,0,5,6,0,0,3,4,53,2,0.00228,0,0,0.9405346411856094,0.05946535881438957
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,64,402,                            tmp = 0.1;,1,0,0,0,0,0,0,0,1,2,10,12,0.28571,1,1,0.03287176998495156,0.967128230015048
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,275,        updateJacobian();,0,0,0,1,2,0,1,0,1,4,17,4,1.0,0,0,0.3314096273149497,0.668590372685049
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,278,        double[][] jTj = new double[cols][cols];,1,0,1,0,8,3,0,0,0,4,40,5,1.0,0,0,0.6899150962311928,0.310084903768806
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,279,        for (int i = 0; i < cols; ++i) {,4,1,0,1,3,2,0,0,1,6,32,4,1.0,0,0,0.5368944154596028,0.4631055845403982
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,280,            for (int j = i; j < cols; ++j) {,5,1,0,1,3,2,0,0,1,6,32,6,1.0,0,0,0.49438987748499835,0.5056101225150014
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,281,                double sum = 0;,1,0,0,0,0,1,0,0,0,2,15,9,1.0,0,0,0.07311558743006956,0.9268844125699296
