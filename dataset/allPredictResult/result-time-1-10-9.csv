dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,time,org/joda/time/field/PreciseDurationField,11,115,        return difference / iUnitMillis;,4,1,0,0,0,1,0,0,0,5,32,4,1.0,0,0,0
defect4j,time,org/joda/time/field/FieldUtils,11,100,        long diff = val1 - val2;,6,1,0,0,0,0,0,0,0,7,24,5,1.0,0,0,1
defect4j,time,org/joda/time/field/FieldUtils,11,102,        if ((val1 ^ diff) < 0 && (val1 ^ val2) < 0) {,8,5,0,3,7,0,0,0,0,13,45,4,1.0,0,0,0
defect4j,time,org/joda/time/field/FieldUtils,11,106,        return diff;,2,0,0,0,0,1,0,0,0,2,12,4,1.0,0,0,0
defect4j,time,org/joda/time/field/FieldUtils,11,187,        if (Integer.MIN_VALUE <= value && value <= Integer.MAX_VALUE) {,12,3,0,1,3,0,0,0,0,15,63,4,1.0,0,0,0
defect4j,time,org/joda/time/field/FieldUtils,11,188,            return (int) value;,2,0,0,1,2,1,0,0,0,2,19,7,1.0,0,0,0
defect4j,time,org/joda/time/field/MillisDurationField,11,117,"        return FieldUtils.safeAdd(instant, value);",0,0,0,1,2,1,0,0,0,4,42,4,1.0,0,0,0
defect4j,time,org/joda/time/field/PreciseDurationDateTimeField,12,129,            return (instant + 1) % iUnitMillis + iUnitMillis - 1;,6,4,0,1,2,1,0,0,0,10,53,6,4.0,0,0,0
defect4j,time,org/joda/time/Period,13,967,        int[] values = getValues();  // cloned,2,0,0,2,4,0,2,0,0,4,38,5,1.0,0,0,1
defect4j,time,org/joda/time/Period,13,968,"        getPeriodType().setIndexedField(this, PeriodType.MILLI_INDEX, values, millis);",0,0,0,2,4,0,0,0,0,6,78,4,1.0,0,0,1
defect4j,time,org/joda/time/Period,13,969,"        return new Period(values, getPeriodType());",0,0,0,2,4,1,6,0,0,6,43,5,1.0,0,0,0
defect4j,time,org/joda/time/IllegalFieldValueException,14,314,        return iMessage;,2,0,0,0,0,1,0,0,0,2,16,4,18.0,0,0,0
defect4j,time,org/joda/time/field/FieldUtils,15,138,                return -val1;,2,0,0,0,0,1,0,0,0,3,13,5,0.08333,1,1,0
defect4j,time,org/joda/time/format/DateTimeFormatter,16,698,        DateTimeParser parser = requireParser();,2,0,0,1,2,0,2,2,0,6,40,4,6.125,0,0,1
defect4j,time,org/joda/time/format/DateTimeFormatter,16,699,        if (instant == null) {,2,1,0,1,3,0,6,0,0,9,22,3,6.125,0,0,1
defect4j,time,org/joda/time/format/DateTimeFormatter,16,703,        long instantMillis = instant.getMillis();,2,0,0,1,2,0,4,0,0,6,41,5,6.125,0,0,1
defect4j,time,org/joda/time/format/DateTimeFormatter,16,704,        Chronology chrono = instant.getChronology();,2,0,0,1,2,0,4,2,0,8,44,4,6.125,0,0,1
defect4j,time,org/joda/time/format/DateTimeFormatter,16,705,        long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);,0,0,0,2,4,0,10,0,0,10,78,5,6.125,0,0,1
defect4j,time,org/joda/time/format/DateTimeFormatter,16,706,        chrono = selectChronology(chrono);,2,0,0,1,2,0,4,0,0,7,34,4,6.125,0,0,1
defect4j,time,org/joda/time/format/DateTimeFormatter,16,708,        DateTimeParserBucket bucket = new DateTimeParserBucket(,0,0,0,0,1,0,0,0,0,1,55,4,6.125,0,0,1
defect4j,time,org/joda/time/format/DateTimeFormatter,16,710,"        int newPos = parser.parseInto(bucket, text, position);",0,0,0,1,2,0,0,0,0,3,54,4,6.125,0,0,1
defect4j,time,org/joda/time/format/DateTimeFormatter,16,711,"        instant.setMillis(bucket.computeMillis(false, text));",0,0,0,2,4,0,10,0,0,11,53,5,6.125,0,0,1
defect4j,time,org/joda/time/format/DateTimeFormatter,16,712,        if (iOffsetParsed && bucket.getOffsetInteger() != null) {,4,2,0,2,5,0,8,0,0,15,57,1,6.125,0,0,1
defect4j,time,org/joda/time/format/DateTimeFormatter,16,717,            chrono = chrono.withZone(bucket.getZone());,2,0,0,2,4,0,8,0,0,11,43,7,6.125,0,0,1
defect4j,time,org/joda/time/format/DateTimeFormatter,16,719,        instant.setChronology(chrono);,0,0,0,1,2,0,0,0,0,3,30,4,6.125,0,0,1
defect4j,time,org/joda/time/format/DateTimeFormatter,16,720,        if (iZone != null) {,2,1,0,1,3,0,4,0,0,7,20,1,6.125,0,0,1
defect4j,time,org/joda/time/format/DateTimeFormatter,16,723,        return newPos;,2,0,0,0,0,1,0,0,0,2,14,4,6.125,0,0,0
defect4j,time,org/joda/time/DateTimeZone,17,1167,        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);,0,0,0,1,2,0,0,0,0,3,88,4,0.5,1,0,1
defect4j,time,org/joda/time/DateTimeZone,17,1168,        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);,8,2,0,1,2,0,2,0,0,12,87,5,0.5,1,0,0
defect4j,time,org/joda/time/DateTimeZone,17,1169,        if (instantBefore == instantAfter) {,4,1,0,1,3,0,0,0,0,5,36,4,0.5,1,0,1
defect4j,time,org/joda/time/DateTimeZone,17,1174,        long local = convertUTCToLocal(instant);,2,0,0,1,2,0,16,0,0,18,40,3,0.5,1,0,1
defect4j,time,org/joda/time/DateTimeZone,17,1175,"        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);",6,0,0,1,2,1,4,0,0,11,86,5,0.5,1,0,0
defect4j,time,org/joda/time/DateTime,17,665,"        long newMillis = getZone().adjustOffset(getMillis(), false);",2,0,0,3,6,0,6,0,0,9,60,5,0.5,0,0,1
defect4j,time,org/joda/time/DateTime,17,666,        return withMillis(newMillis);,0,0,0,1,2,1,4,0,0,4,29,5,0.5,0,0,0
defect4j,time,org/joda/time/DateTime,17,685,"        long newMillis = getZone().adjustOffset(getMillis(), true);",4,0,0,3,6,0,10,0,0,16,59,3,0.5,0,0,1
defect4j,time,org/joda/time/DateTime,17,686,        return withMillis(newMillis);,0,0,0,1,2,1,4,0,0,4,29,5,0.5,0,0,0
defect4j,time,org/joda/time/chrono/GJChronology,18,356,        if ((base = getBase()) != null) {,10,3,0,3,7,0,4,0,0,19,33,3,0.05556,0,0,0
defect4j,time,org/joda/time/chrono/GJChronology,18,364,            instant = iGregorianChronology.getDateTimeMillis,0,0,0,0,0,0,0,0,0,0,48,4,0.05556,1,1,1
defect4j,time,org/joda/time/field/FieldUtils,18,233,            throw new IllegalFieldValueException,0,0,0,0,0,0,0,2,0,2,36,8,0.05556,0,0,1
defect4j,time,org/joda/time/DateTime,19,331,"        super(year, monthOfYear, dayOfMonth,",6,0,0,0,1,0,0,0,0,6,36,4,0.06667,0,0,1
defect4j,time,org/joda/time/DateTime,19,333,    },4,1,0,0,1,0,8,0,0,13,1,5,0.06667,0,0,1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2519,"            buf.append(displayZone != null ? displayZone.getID() : """");",0,0,0,2,4,0,0,0,0,6,59,4,0.14286,0,0,1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2520,        },0,0,0,0,1,0,0,0,0,1,1,4,0.14286,0,0,1
defect4j,time,org/joda/time/format/DateTimeFormatterBuilder,20,2537,            return MAX_LENGTH;,0,0,0,0,0,1,0,0,0,1,18,4,0.14286,0,0,0
defect4j,time,org/joda/time/tz/FixedDateTimeZone,22,61,        return true;,0,0,0,0,0,1,0,0,0,1,12,4,1.33333,0,0,0
defect4j,time,org/joda/time/DateTimeZone,23,314,            dtz = cProvider.getZone(convId);,4,1,0,1,2,0,6,0,0,12,32,4,1.0,0,0,1
defect4j,time,org/joda/time/LocalDate,24,1735,        return ISODateTimeFormat.date().print(this);,0,0,0,2,4,1,0,0,0,7,44,4,12.25,0,0,0
defect4j,time,org/joda/time/format/DateTimeFormat,24,530,                builder.appendWeekOfWeekyear(tokenLen);,0,0,0,1,2,0,0,0,0,3,39,4,12.25,0,0,1
defect4j,time,org/joda/time/format/DateTimeFormat,24,531,                break;,0,0,0,0,0,0,0,0,0,0,6,4,12.25,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,25,552,                offset = standardOffset;,0,0,0,0,0,0,0,0,0,0,24,4,1.125,0,0,1
defect4j,time,org/joda/time/DateTime,26,1694,"        return withMillis(getChronology().millisOfSecond().set(getMillis(), millis));",6,1,0,5,10,1,20,0,0,29,77,1,1.125,0,0,1
defect4j,time,org/joda/time/format/PeriodFormatterBuilder,27,192,        if (formatter == null) {,4,0,0,1,3,0,4,0,0,9,24,3,1.0,0,0,1
defect4j,time,org/joda/time/format/PeriodFormatterBuilder,27,195,        clearPrefix();,0,0,0,1,2,0,2,0,0,2,14,5,1.0,0,0,1
defect4j,time,org/joda/time/format/PeriodFormatterBuilder,27,196,"        append0(formatter.getPrinter(), formatter.getParser());",2,0,0,3,6,0,0,0,0,2,55,5,1.0,0,0,1
defect4j,time,org/joda/time/format/PeriodFormatterBuilder,27,197,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,0
defect4j,time,org/joda/time/format/PeriodFormatterBuilder,27,818,"                return new Object[] {Literal.EMPTY, Literal.EMPTY};",8,0,0,2,4,1,0,2,0,10,51,6,1.0,1,1,0
