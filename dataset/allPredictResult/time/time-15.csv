project_path,version,lines,statement,suspicious,faulty,predict,miss_line
org/joda/time/field/FieldUtils,15,138,                return -val1;,0.08333,1,0,1
org/joda/time/field/FieldUtils,15,142,                return val1;,0.04,0,-1,0
org/joda/time/field/FieldUtils,15,144,        long total = val1 * val2;,0.03846,0,-1,0
org/joda/time/field/FieldUtils,15,145,        if (total / val2 != val1) {,0.03846,0,-1,0
org/joda/time/field/FieldUtils,15,148,        return total;,0.03846,0,-1,0
org/joda/time/field/FieldUtils,15,136,        switch (val2) {,0.01961,0,-1,0
org/joda/time/IllegalFieldValueException,15,108,"        super(createMessage(fieldType.getName(), value, lowerBound, upperBound, null));",0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,109,        iDateTimeFieldType = fieldType;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,110,        iDurationFieldType = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,111,        iFieldName = fieldType.getName();,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,112,        iNumberValue = value;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,113,        iStringValue = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,114,        iLowerBound = lowerBound;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,115,        iUpperBound = upperBound;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,116,        iMessage = super.getMessage();,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,117,    },0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,129,"        super(createMessage(fieldType.getName(), value, null, null, explain));",0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,130,        iDateTimeFieldType = fieldType;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,131,        iDurationFieldType = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,132,        iFieldName = fieldType.getName();,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,133,        iNumberValue = value;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,134,        iStringValue = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,135,        iLowerBound = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,136,        iUpperBound = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,137,        iMessage = super.getMessage();,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,138,    },0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,150,"        super(createMessage(fieldType.getName(), value, lowerBound, upperBound, null));",0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,151,        iDateTimeFieldType = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,152,        iDurationFieldType = fieldType;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,153,        iFieldName = fieldType.getName();,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,154,        iNumberValue = value;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,155,        iStringValue = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,156,        iLowerBound = lowerBound;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,157,        iUpperBound = upperBound;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,158,        iMessage = super.getMessage();,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,159,    },0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,171,"        super(createMessage(fieldName, value, lowerBound, upperBound, null));",0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,172,        iDateTimeFieldType = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,173,        iDurationFieldType = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,174,        iFieldName = fieldName;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,175,        iNumberValue = value;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,176,        iStringValue = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,177,        iLowerBound = lowerBound;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,178,        iUpperBound = upperBound;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,179,        iMessage = super.getMessage();,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,180,    },0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,189,"        super(createMessage(fieldType.getName(), value));",0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,190,        iDateTimeFieldType = fieldType;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,191,        iDurationFieldType = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,192,        iFieldName = fieldType.getName();,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,193,        iStringValue = value;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,194,        iNumberValue = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,195,        iLowerBound = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,196,        iUpperBound = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,197,        iMessage = super.getMessage();,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,198,    },0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,207,"        super(createMessage(fieldType.getName(), value));",0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,208,        iDateTimeFieldType = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,209,        iDurationFieldType = fieldType;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,210,        iFieldName = fieldType.getName();,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,211,        iStringValue = value;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,212,        iNumberValue = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,213,        iLowerBound = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,214,        iUpperBound = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,215,        iMessage = super.getMessage();,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,216,    },0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,225,"        super(createMessage(fieldName, value));",0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,226,        iDateTimeFieldType = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,227,        iDurationFieldType = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,228,        iFieldName = fieldName;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,229,        iStringValue = value;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,230,        iNumberValue = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,231,        iLowerBound = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,232,        iUpperBound = null;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,233,        iMessage = super.getMessage();,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,234,    },0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,41,        StringBuffer buf = new StringBuffer(),0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,44,        if (lowerBound == null) {,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,45,            if (upperBound == null) {,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,46,"                buf.append(""is not supported"");",0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,48,"                buf.append(""must not be larger than "").append(upperBound);",0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,50,        } else if (upperBound == null) {,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,51,"            buf.append(""must not be smaller than "").append(lowerBound);",0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,53,"            buf.append(""must be in the range ["")",0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,59,        if (explain != null) {,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,60,"            buf.append("": "").append(explain);",0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,63,        return buf.toString();,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,74,"        StringBuffer buf = new StringBuffer().append(""Value "");",0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,76,        if (value == null) {,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,77,"            buf.append(""null"");",0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,79,"            buf.append('""');",0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,80,            buf.append(value);,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,81,"            buf.append('""');",0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,84,"        buf.append("" for "").append(fieldName).append(' ').append(""is not supported"");",0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,86,        return buf.toString();,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,243,        return iDateTimeFieldType;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,252,        return iDurationFieldType;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,261,        return iFieldName;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,270,        return iNumberValue;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,279,        return iStringValue;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,288,        String value = iStringValue;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,289,        if (value == null) {,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,290,            value = String.valueOf(iNumberValue);,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,292,        return value;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,301,        return iLowerBound;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,310,        return iUpperBound;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,314,        return iMessage;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,323,        if (iMessage == null) {,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,324,            iMessage = message;,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,325,        } else if (message != null) {,0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,326,"            iMessage = message + "": "" + iMessage;",0.0,0,-1,0
org/joda/time/IllegalFieldValueException,15,328,    },0.0,0,-1,0
org/joda/time/field/FieldUtils,15,36,        super();,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,37,    },0.0,0,-1,0
org/joda/time/field/FieldUtils,15,49,        if (value == Integer.MIN_VALUE) {,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,50,"            throw new ArithmeticException(""Integer.MIN_VALUE cannot be negated"");",0.0,0,-1,0
org/joda/time/field/FieldUtils,15,52,        return -value;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,64,        int sum = val1 + val2;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,66,        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,67,            throw new ArithmeticException,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,70,        return sum;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,82,        long sum = val1 + val2;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,84,        if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,85,            throw new ArithmeticException,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,88,        return sum;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,100,        long diff = val1 - val2;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,102,        if ((val1 ^ diff) < 0 && (val1 ^ val2) < 0) {,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,103,            throw new ArithmeticException,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,106,        return diff;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,119,        long total = (long) val1 * (long) val2;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,120,        if (total < Integer.MIN_VALUE || total > Integer.MAX_VALUE) {,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,121,"          throw new ArithmeticException(""Multiplication overflows an int: "" + val1 + "" * "" + val2);",0.0,0,-1,0
org/joda/time/field/FieldUtils,15,123,        return (int) total;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,140,                return 0L;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,146,"          throw new ArithmeticException(""Multiplication overflows a long: "" + val1 + "" * "" + val2);",0.0,0,-1,0
org/joda/time/field/FieldUtils,15,160,        if (val2 == 1) {,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,161,            return val1;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,163,        if (val1 == 1) {,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,164,            return val2;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,166,        if (val1 == 0 || val2 == 0) {,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,167,            return 0;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,169,        long total = val1 * val2;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,170,        if (total / val2 != val1 || val1 == Long.MIN_VALUE && val2 == -1 || val2 == Long.MIN_VALUE && val1 == -1) {,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,171,"            throw new ArithmeticException(""Multiplication overflows a long: "" + val1 + "" * "" + val2);",0.0,0,-1,0
org/joda/time/field/FieldUtils,15,173,        return total;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,184,        if (Integer.MIN_VALUE <= value && value <= Integer.MAX_VALUE) {,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,185,            return (int) value;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,187,"        throw new ArithmeticException(""Value cannot fit in an int: "" + value);",0.0,0,-1,0
org/joda/time/field/FieldUtils,15,199,"        long val = FieldUtils.safeMultiply(val1, val2);",0.0,0,-1,0
org/joda/time/field/FieldUtils,15,200,        return FieldUtils.safeToInt(val);,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,214,        if ((value < lowerBound) || (value > upperBound)) {,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,215,            throw new IllegalFieldValueException,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,219,    },0.0,0,-1,0
org/joda/time/field/FieldUtils,15,232,        if ((value < lowerBound) || (value > upperBound)) {,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,233,            throw new IllegalFieldValueException,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,237,    },0.0,0,-1,0
org/joda/time/field/FieldUtils,15,249,        if ((value < lowerBound) || (value > upperBound)) {,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,250,            throw new IllegalFieldValueException,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,254,    },0.0,0,-1,0
org/joda/time/field/FieldUtils,15,273,"        return getWrappedValue(currentValue + wrapValue, minValue, maxValue);",0.0,0,-1,0
org/joda/time/field/FieldUtils,15,289,        if (minValue >= maxValue) {,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,290,"            throw new IllegalArgumentException(""MIN > MAX"");",0.0,0,-1,0
org/joda/time/field/FieldUtils,15,293,        int wrapRange = maxValue - minValue + 1;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,294,        value -= minValue;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,296,        if (value >= 0) {,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,297,            return (value % wrapRange) + minValue;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,300,        int remByRange = (-value) % wrapRange;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,302,        if (remByRange == 0) {,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,303,            return 0 + minValue;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,305,        return (wrapRange - remByRange) + minValue;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,318,        if (object1 == object2) {,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,319,            return true;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,321,        if (object1 == null || object2 == null) {,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,322,            return false;,0.0,0,-1,0
org/joda/time/field/FieldUtils,15,324,        return object1.equals(object2);,0.0,0,-1,0
