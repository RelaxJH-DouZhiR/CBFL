dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict0,predict1
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,282,                for (int k = 0; k < rows; ++k) {,4,1,0,1,3,2,0,0,1,6,32,8,1.0,0,0,0.3357935670529714,0.6642064329470294
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,283,                    sum += jacobian[k][i] * jacobian[k][j];,1,1,1,0,8,0,0,0,1,5,39,10,1.0,0,0,0.4347138327494901,0.565286167250509
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,285,                jTj[i][j] = sum;,1,0,1,0,4,0,0,0,1,4,16,8,1.0,0,0,0.5064688449808696,0.4935311550191304
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,286,                jTj[j][i] = sum;,1,0,1,0,4,0,0,0,1,4,16,8,1.0,0,0,0.5064688449808696,0.4935311550191304
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,292,            RealMatrix inverse =,1,0,0,0,0,0,0,1,0,2,20,6,1.0,0,0,0.4308773046824788,0.5691226953175207
defect4j,math,org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer,65,312,        if (rows <= cols) {,2,1,0,1,3,1,0,0,0,5,19,4,1.0,0,0,0.37242405012083896,0.6275759498791615
defect4j,math,org/apache/commons/math/linear/AbstractRealMatrix,65,44,    protected AbstractRealMatrix() {,1,0,0,1,3,1,0,0,1,5,32,2,1.0,0,0,0.44187266477928766,0.558127335220712
defect4j,math,org/apache/commons/math/linear/AbstractRealMatrix,65,45,        lu = null;,1,0,0,0,0,0,0,0,1,2,10,4,1.0,0,0,0.26846620367788576,0.7315337963221138
defect4j,math,org/apache/commons/math/linear/AbstractRealMatrix,65,46,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,77,"        super(rowDimension, columnDimension);",2,0,0,0,2,1,0,0,1,4,37,3,1.0,0,0,0.4076882983134216,0.5923117016865778
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,78,        data = new double[rowDimension][columnDimension];,1,0,1,0,4,2,0,0,1,5,49,4,1.0,0,0,0.7351949435577739,0.26480505644222774
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,79,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,95,"        throws IllegalArgumentException, NullPointerException {",2,0,0,0,1,1,0,0,0,3,55,2,1.0,0,0,0.3549386232430823,0.645061376756917
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,96,        copyIn(d);,0,0,0,1,2,0,2,0,1,4,10,4,1.0,0,0,0.33861363023858243,0.6613863697614183
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,97,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,298,        return copyOut();,0,0,0,1,2,1,1,0,1,5,17,4,1.0,0,0,0.3571359610780548,0.6428640389219457
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,316,        if (data == null) {,1,1,0,1,3,1,0,0,0,5,19,4,1.0,0,0,0.34944764641459863,0.6505523535854009
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,317,            if (row > 0) {,1,1,0,1,3,1,0,0,0,5,14,6,1.0,0,0,0.285649640690987,0.7143503593090123
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,321,            if (column > 0) {,1,1,0,1,3,1,0,0,0,5,17,6,1.0,0,0,0.2856935698726415,0.7143064301273582
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,325,            final int nRows = subMatrix.length;,3,0,0,0,0,2,0,0,1,3,35,6,1.0,0,0,0.308757275109848,0.6912427248901509
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,326,            if (nRows == 0) {,1,1,0,1,3,1,0,0,0,5,17,6,1.0,0,0,0.2856935698726415,0.7143064301273582
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,331,            final int nCols = subMatrix[0].length;,2,0,1,0,2,2,0,0,1,5,38,6,1.0,0,0,0.6733767031117489,0.32662329688825087
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,332,            if (nCols == 0) {,1,1,0,1,3,1,0,0,0,5,17,6,1.0,0,0,0.2856935698726415,0.7143064301273582
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,336,            data = new double[subMatrix.length][nCols];,3,0,1,0,4,2,0,0,1,5,43,6,1.0,0,0,0.6978305400307647,0.30216945996923467
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,337,            for (int i = 0; i < data.length; ++i) {,5,1,0,1,3,2,0,0,1,6,39,6,1.0,0,0,0.45320636456678287,0.5467936354332187
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,338,                if (subMatrix[i].length != nCols) {,2,1,1,1,5,1,0,0,0,6,35,8,1.0,0,0,0.5212221694220471,0.4787778305779522
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,342,"                System.arraycopy(subMatrix[i], 0, data[i + row], column, nCols);",2,1,1,0,6,0,4,0,0,5,64,9,1.0,0,0,0.3775868300692216,0.6224131699307772
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,344,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,1.0,0,0,0.19931337326883194,0.8006866267311689
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,348,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,367,            data[row][column] = value;,1,0,1,0,4,0,0,0,1,4,26,6,1.0,0,0,0.6172018046454705,0.3827981953545286
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,371,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,372,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,401,        return (data == null) ? 0 : data.length;,3,1,0,1,2,1,0,0,0,5,40,5,1.0,0,0,0.38235300842402875,0.6176469915759712
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,407,        return ((data == null) || (data[0] == null)) ? 0 : data[0].length;,2,3,1,2,10,1,0,0,0,6,66,5,1.0,0,0,0.8634215318188735,0.13657846818112612
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,597,        final int nRows = this.getRowDimension();,1,0,0,1,2,3,1,0,1,6,41,4,1.0,0,0,0.5530976523656024,0.4469023476343978
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,598,        final double[][] out = new double[nRows][this.getColumnDimension()];,1,0,1,1,10,5,1,0,1,7,68,4,1.0,0,0,0.9682290579784585,0.03177094202154286
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,600,        for (int i = 0; i < nRows; i++) {,4,1,0,1,3,2,0,0,1,6,33,4,1.0,0,0,0.5123513749287815,0.48764862507121814
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,601,"            System.arraycopy(data[i], 0, out[i], 0, data[i].length);",1,0,1,0,8,0,2,0,0,4,56,7,1.0,0,0,0.534472872683447,0.4655271273165547
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,603,        return out;,1,0,0,0,0,1,0,0,0,2,11,4,1.0,0,0,0.19436532579412982,0.8056346742058704
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,617,"        setSubMatrix(in, 0, 0);",0,0,0,0,2,0,2,0,1,3,23,4,1.0,0,0,0.27560234287336066,0.7243976571266384
defect4j,math,org/apache/commons/math/linear/Array2DRowRealMatrix,65,618,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,361,            final int m = pivot.length;,3,0,0,0,0,2,0,0,1,3,27,5,1.0,0,0,0.3353375752846173,0.6646624247153828
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,362,            if (b.getRowDimension() != m) {,1,1,0,2,5,1,2,0,0,6,31,5,1.0,0,0,0.34583401076598286,0.654165989234016
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,367,            if (singular) {,1,0,0,1,3,1,0,0,0,4,15,5,1.0,0,0,0.2804519876821258,0.7195480123178741
defect4j,math,org/apache/commons/math/linear/LUDecompositionImpl,65,417,            return solve(MatrixUtils.createRealIdentityMatrix(pivot.length));,2,0,0,2,4,1,3,0,1,6,65,5,1.0,0,0,0.4507333663828439,0.5492666336171568
defect4j,math,org/apache/commons/math/linear/MatrixUtils,65,62,        return (rows * columns <= 4096) ?,2,2,0,1,2,1,0,0,0,5,33,6,1.0,0,0,0.36795807764185245,0.6320419223581477
defect4j,math,org/apache/commons/math/linear/MatrixUtils,65,107,        return (data.length * data[0].length <= 4096) ?,3,2,1,1,4,1,0,0,0,6,47,6,1.0,0,0,0.7142100333276283,0.2857899666723701
defect4j,math,org/apache/commons/math/linear/MatrixUtils,65,143,"        final RealMatrix m = createRealMatrix(dimension, dimension);",1,0,0,0,2,1,3,1,2,6,60,4,1.0,0,0,0.7572727403460139,0.24272725965398637
defect4j,math,org/apache/commons/math/linear/MatrixUtils,65,144,        for (int i = 0; i < dimension; ++i) {,4,1,0,1,3,2,0,0,1,6,37,4,1.0,0,0,0.5189622903579301,0.48103770964206904
defect4j,math,org/apache/commons/math/linear/MatrixUtils,65,145,"            m.setEntry(i, i, 1.0);",0,0,0,0,2,0,4,0,0,2,22,7,1.0,0,0,0.07150197832012585,0.9284980216798742
defect4j,math,org/apache/commons/math/linear/MatrixUtils,65,147,        return m;,1,0,0,0,0,1,0,0,0,2,9,4,1.0,0,0,0.19492165058061967,0.8050783494193792
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,66,152,        return evaluations;,1,0,0,0,0,1,0,0,0,2,19,4,9.0,0,0,0.19424499200324946,0.8057550079967518
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,43,"        super(100, 1E-10);",0,0,0,0,2,1,0,0,1,3,18,3,1.0,0,0,0.28923135620929424,0.7107686437907048
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,44,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,37,    private static final double GOLDEN_SECTION = 0.5 * (3 - Math.sqrt(5));,1,2,0,2,4,4,2,0,3,7,70,2,1.0,0,0,0.9338726151361653,0.0661273848638361
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,57,        clearResult();,0,0,0,1,2,0,1,0,1,4,14,4,1.0,0,0,0.3660347387416133,0.6339652612583859
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,58,"        return localMin(f, goalType, min, max, relativeAccuracy, absoluteAccuracy);",0,0,0,0,2,1,7,0,1,4,75,4,1.0,0,0,0.08115899203326765,0.9188410079667318
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,88,        double x = a + GOLDEN_SECTION * (b - a);,5,3,0,1,2,1,0,0,0,5,40,5,1.0,0,0,0.5471320378763513,0.4528679621236494
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,89,        double v = x;,2,0,0,0,0,1,0,0,0,2,13,5,1.0,0,0,0.18945264190857153,0.8105473580914276
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,90,        double w = x;,2,0,0,0,0,1,0,0,0,2,13,5,1.0,0,0,0.18945264190857153,0.8105473580914276
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,91,        double e = 0;,1,0,0,0,0,1,0,0,0,2,13,5,1.0,0,0,0.1746235408052045,0.8253764591947954
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,92,"        double fx = computeObjectiveValue(f, x);",1,0,0,0,2,1,3,0,1,5,40,5,1.0,0,0,0.28562191702011286,0.7143780829798865
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,93,        if (goalType == GoalType.MAXIMIZE) {,3,1,0,1,3,1,0,0,0,5,36,4,1.0,0,0,0.4058951546711262,0.594104845328873
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,96,        double fv = fx;,2,0,0,0,0,1,0,0,0,2,15,5,1.0,0,0,0.1893200746423834,0.810679925357617
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,97,        double fw = fx;,2,0,0,0,0,1,0,0,0,2,15,5,1.0,0,0,0.1893200746423834,0.810679925357617
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,99,        int count = 0;,1,0,0,0,0,1,0,0,0,2,14,5,1.0,0,0,0.1745371370936731,0.8254628629063282
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,100,        while (count < maximalIterationCount) {,2,1,0,1,3,1,0,0,0,5,39,4,1.0,0,0,0.39418291353840207,0.6058170864615978
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,101,            double m = 0.5 * (a + b);,3,2,0,1,2,1,0,0,0,5,25,7,1.0,0,0,0.33059029911141546,0.6694097008885839
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,102,            double tol = eps * Math.abs(x) + t;,3,2,0,1,2,1,3,0,0,6,35,7,1.0,0,0,0.27102324833111713,0.728976751668883
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,103,            double t2 = 2 * tol;,2,1,0,0,0,1,0,0,0,3,20,7,1.0,0,0,0.1907950300195548,0.8092049699804463
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,106,            if (Math.abs(x - m) > t2 - 0.5 * (b - a)) {,5,5,0,2,7,1,2,0,0,6,43,6,1.0,0,0,0.8014392038610053,0.19856079613899455
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,107,                double p = 0;,1,0,0,0,0,1,0,0,0,2,13,9,1.0,0,0,0.0817750792270012,0.9182249207729998
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,108,                double q = 0;,1,0,0,0,0,1,0,0,0,2,13,9,1.0,0,0,0.0817750792270012,0.9182249207729998
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,109,                double r = 0;,1,0,0,0,0,1,0,0,0,2,13,9,1.0,0,0,0.0817750792270012,0.9182249207729998
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,110,                double d = 0;,1,0,0,0,0,1,0,0,0,2,13,9,1.0,0,0,0.0817750792270012,0.9182249207729998
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,111,                double u = 0;,1,0,0,0,0,1,0,0,0,2,13,9,1.0,0,0,0.0817750792270012,0.9182249207729998
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,113,                if (Math.abs(e) > tol) { // Fit parabola.,1,1,0,2,5,1,3,0,0,6,41,8,1.0,0,0,0.19979761231779541,0.8002023876822046
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,114,                    r = (x - w) * (fx - fv);,5,3,0,1,4,0,0,0,1,5,24,10,1.0,0,0,0.3426299643013864,0.6573700356986131
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,115,                    q = (x - v) * (fx - fw);,5,3,0,1,4,0,0,0,1,5,24,10,1.0,0,0,0.3426299643013864,0.6573700356986131
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,116,                    p = (x - v) * q - (x - w) * r;,7,5,0,1,4,0,0,0,1,5,30,10,1.0,0,0,0.6421854325272949,0.35781456747270657
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,117,                    q = 2 * (q - r);,3,2,0,1,2,0,0,0,1,5,16,10,1.0,0,0,0.24799783993232746,0.7520021600676732
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,119,                    if (q > 0) {,1,1,0,1,3,1,0,0,0,5,12,10,1.0,0,0,0.12787669197436888,0.872123308025633
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,120,                        p = -p;,2,0,0,0,0,0,0,0,2,2,7,12,1.0,0,0,0.07441422256916763,0.9255857774308317
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,122,                        q = -q;,2,0,0,0,0,0,0,0,2,2,7,12,1.0,0,0,0.07441422256916763,0.9255857774308317
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,125,                    r = e;,2,0,0,0,0,0,0,0,1,2,6,10,1.0,0,0,0.10057131985525157,0.8994286801447483
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,126,                    e = d;,2,0,0,0,0,0,0,0,1,2,6,10,1.0,0,0,0.10057131985525157,0.8994286801447483
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,129,                if (Math.abs(p) < Math.abs(0.5 * q * r) &&,2,4,0,1,5,1,5,0,0,6,42,8,1.0,0,0,0.261047273936914,0.7389527260630869
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,139,                    e = ((x < m) ? b : a) - x;,6,2,0,2,4,0,0,0,1,5,26,10,1.0,0,0,0.29668906204599627,0.7033109379540032
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,140,                    d = GOLDEN_SECTION * e;,3,1,0,0,0,0,0,0,1,3,23,10,1.0,0,0,0.14735807639583584,0.8526419236041656
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,144,                u = x + ((Math.abs(d) > tol) ? d : ((d > 0) ? tol : -tol));,7,3,0,3,10,0,3,0,2,6,59,8,1.0,0,0,0.6667925993189667,0.333207400681035
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,145,"                double fu = computeObjectiveValue(f, u);",1,0,0,0,2,1,3,0,1,5,40,9,1.0,0,0,0.14405560088550923,0.8559443991144906
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,146,                if (goalType == GoalType.MAXIMIZE) {,3,1,0,1,3,1,0,0,0,5,36,8,1.0,0,0,0.24848763424064457,0.751512365759355
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,151,                if (fu <= fx) {,2,1,0,1,3,1,0,0,0,5,15,8,1.0,0,0,0.22272327758747826,0.7772767224125209
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,152,                    if (u < x) {,2,1,0,1,3,1,0,0,0,5,12,10,1.0,0,0,0.13940652671828407,0.860593473281717
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,153,                        b = x;,2,0,0,0,0,0,0,0,1,2,6,12,1.0,0,0,0.05202607012706246,0.9479739298729364
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,155,                        a = x;,2,0,0,0,0,0,0,0,1,2,6,12,1.0,0,0,0.05202607012706246,0.9479739298729364
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,157,                    v = w;,2,0,0,0,0,0,0,0,1,2,6,10,1.0,0,0,0.10057131985525157,0.8994286801447483
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,158,                    fv = fw;,2,0,0,0,0,0,0,0,1,2,8,10,1.0,0,0,0.10006922325397156,0.8999307767460277
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,159,                    w = x;,2,0,0,0,0,0,0,0,1,2,6,10,1.0,0,0,0.10057131985525157,0.8994286801447483
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,160,                    fw = fx;,2,0,0,0,0,0,0,0,1,2,8,10,1.0,0,0,0.10006922325397156,0.8999307767460277
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,161,                    x = u;,2,0,0,0,0,0,0,0,1,2,6,10,1.0,0,0,0.10057131985525157,0.8994286801447483
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,162,                    fx = fu;,2,0,0,0,0,0,0,0,1,2,8,10,1.0,0,0,0.10006922325397156,0.8999307767460277
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,164,                    if (u < x) {,2,1,0,1,3,1,0,0,0,5,12,10,1.0,0,0,0.13940652671828407,0.860593473281717
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,165,                        a = u;,2,0,0,0,0,0,0,0,1,2,6,12,1.0,0,0,0.05202607012706246,0.9479739298729364
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,167,                        b = u;,2,0,0,0,0,0,0,0,1,2,6,12,1.0,0,0,0.05202607012706246,0.9479739298729364
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,169,                    if ((fu <= fw) || (w == x)) {,4,3,0,2,7,1,0,0,0,5,29,10,1.0,0,0,0.2930553082624439,0.7069446917375549
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,170,                        v = w;,2,0,0,0,0,0,0,0,1,2,6,12,1.0,0,0,0.05202607012706246,0.9479739298729364
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,171,                        fv = fw;,2,0,0,0,0,0,0,0,1,2,8,12,1.0,0,0,0.05175238776639375,0.9482476122336079
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,172,                        w = u;,2,0,0,0,0,0,0,0,1,2,6,12,1.0,0,0,0.05202607012706246,0.9479739298729364
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,173,                        fw = fu;,2,0,0,0,0,0,0,0,1,2,8,12,1.0,0,0,0.05175238776639375,0.9482476122336079
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,174,                    } else if ((fu <= fv) || (v == x) || (v == w)) {,6,4,0,2,10,2,0,0,0,5,48,11,1.0,0,0,0.40115020829903203,0.5988497917009682
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,175,                        v = u;,2,0,0,0,0,0,0,0,1,2,6,13,1.0,0,0,0.035204231154221215,0.9647957688457789
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,176,                        fv = fu;,2,0,0,0,0,0,0,0,1,2,8,13,1.0,0,0,0.03501577118887876,0.9649842288111229
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,179,            } else { // termination,0,0,0,0,2,1,0,0,0,2,23,2,1.0,0,0,0.19948520275141854,0.8005147972485804
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,180,"                setResult(x, (goalType == GoalType.MAXIMIZE) ? -fx : fx, count);",5,1,0,1,4,0,3,0,2,6,64,8,1.0,0,0,0.43679939717940724,0.5632006028205916
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,181,                return x;,1,0,0,0,0,1,0,0,0,2,9,8,1.0,0,0,0.10488613769142262,0.8951138623085761
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,184,            ++count;,1,0,0,0,0,0,0,0,1,2,8,6,1.0,0,0,0.21563278925890106,0.7843672107410995
defect4j,math,org/apache/commons/math/optimization/univariate/BrentOptimizer,67,185,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,63,"        super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);",2,0,0,0,2,1,0,0,1,4,61,3,1.0,0,0,0.474541561893763,0.5254584381062385
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,64,        resultComputed = false;,1,0,0,0,0,0,0,0,2,2,23,4,1.0,0,0,0.35151875459225734,0.6484812454077435
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,65,        setMaxEvaluations(Integer.MAX_VALUE);,2,0,0,1,2,0,1,0,1,5,37,4,1.0,0,0,0.47192624488141566,0.5280737551185852
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,66,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,72,        if (!resultComputed) {,1,0,0,1,3,1,0,0,1,5,22,4,1.0,0,0,0.3949721266363284,0.6050278733636714
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,75,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,85,        checkResultComputed();,0,0,0,1,2,0,1,0,1,4,22,4,1.0,0,0,0.367727505450779,0.6322724945492227
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,86,        return functionValue;,1,0,0,0,0,1,0,0,0,2,21,4,1.0,0,0,0.1947407793899058,0.8052592206100935
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,98,        this.result         = x;,2,0,0,0,0,1,0,0,1,3,24,4,1.0,0,0,0.3199279868010527,0.6800720131989475
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,99,        this.functionValue  = fx;,2,0,0,0,0,1,0,0,1,3,25,4,1.0,0,0,0.3206012895311825,0.6793987104688174
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,100,        this.iterationCount = iterationCount;,2,0,0,0,0,1,0,0,1,3,37,4,1.0,0,0,0.3345421358238159,0.6654578641761837
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,101,        this.resultComputed = true;,1,0,0,0,0,1,0,0,2,3,27,4,1.0,0,0,0.387293820764788,0.6127061792352123
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,102,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,108,        this.resultComputed = false;,1,0,0,0,0,1,0,0,2,3,28,4,1.0,0,0,0.388267166173234,0.6117328338267651
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,109,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,113,        this.maxEvaluations = maxEvaluations;,2,0,0,0,0,1,0,0,1,3,37,4,1.0,0,0,0.3345421358238159,0.6654578641761837
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,114,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,123,        return evaluations;,1,0,0,0,0,1,0,0,0,2,19,4,1.0,0,0,0.19424499200324946,0.8057550079967518
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,137,        if (++evaluations > maxEvaluations) {,2,1,0,1,3,1,0,0,1,6,37,4,1.0,0,0,0.46117630204416665,0.5388236979558337
defect4j,math,org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer,67,141,        return f.value(point);,0,0,0,1,2,1,3,0,0,4,22,5,1.0,0,0,0.19206544165887104,0.8079345583411295
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,61,                                      final double defaultAbsoluteAccuracy) {,1,0,0,0,2,2,0,0,1,4,39,3,1.0,0,0,0.4157356013735354,0.5842643986264628
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,62,        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;,2,0,0,0,0,1,0,0,1,3,55,4,1.0,0,0,0.3770395387062592,0.6229604612937399
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,63,        this.defaultRelativeAccuracy = 1.0e-14;,1,0,0,0,0,1,0,0,1,3,39,4,1.0,0,0,0.31602504091640193,0.6839749590835988
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,64,        this.absoluteAccuracy = defaultAbsoluteAccuracy;,2,0,0,0,0,1,0,0,1,3,48,4,1.0,0,0,0.35727149004753833,0.6427285099524622
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,65,        this.relativeAccuracy = defaultRelativeAccuracy;,2,0,0,0,0,1,0,0,1,3,48,4,1.0,0,0,0.35727149004753833,0.6427285099524622
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,66,        this.defaultMaximalIterationCount = defaultMaximalIterationCount;,2,0,0,0,0,1,0,0,1,3,65,4,1.0,0,0,0.4128882518071139,0.587111748192885
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,67,        this.maximalIterationCount = defaultMaximalIterationCount;,2,0,0,0,0,1,0,0,1,3,58,4,1.0,0,0,0.3868365745200696,0.613163425479931
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,68,        this.iterationCount = 0;,1,0,0,0,0,1,0,0,1,3,24,4,1.0,0,0,0.2986490611036082,0.7013509388963916
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,69,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,73,        return iterationCount;,1,0,0,0,0,1,0,0,0,2,22,4,1.0,0,0,0.19506808124489738,0.8049319187551018
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,93,        maximalIterationCount = count;,2,0,0,0,0,0,0,0,1,2,30,4,1.0,0,0,0.29501804857603836,0.7049819514239609
defect4j,math,org/apache/commons/math/ConvergingAlgorithmImpl,67,94,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/optimization/GoalType,67,27,public enum GoalType implements Serializable {,1,0,0,0,1,3,0,1,1,5,46,1,1.0,0,0,0.8332739753754197,0.16672602462457986
defect4j,math,org/apache/commons/math/optimization/GoalType,67,30,"    MAXIMIZE,",1,0,0,0,0,0,0,0,0,1,9,2,1.0,0,0,0.18315902992988808,0.8168409700701122
defect4j,math,org/apache/commons/math/optimization/GoalType,67,33,    MINIMIZE,1,0,0,0,0,0,0,0,0,1,8,2,1.0,0,0,0.18350009112826907,0.8164999088717322
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,80,                                             final RandomGenerator generator) {,1,0,0,0,2,1,0,1,1,5,34,3,1.0,0,0,0.7117269162721049,0.28827308372789473
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,81,        this.optimizer        = optimizer;,2,0,0,0,0,1,0,0,1,3,34,4,1.0,0,0,0.33002577042204534,0.6699742295779538
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,82,        this.totalIterations  = 0;,1,0,0,0,0,1,0,0,1,3,26,4,1.0,0,0,0.3000168142806174,0.6999831857193827
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,83,        this.starts           = starts;,2,0,0,0,0,1,0,0,1,3,31,4,1.0,0,0,0.32620422594174764,0.6737957740582533
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,84,        this.generator        = generator;,2,0,0,0,0,1,0,0,1,3,34,4,1.0,0,0,0.33002577042204534,0.6699742295779538
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,85,        this.optima           = null;,1,0,0,0,0,1,0,0,1,3,29,4,1.0,0,0,0.3026061751068787,0.6973938248931197
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,86,        setMaximalIterationCount(Integer.MAX_VALUE);,2,0,0,1,2,0,1,0,1,5,44,4,1.0,0,0,0.4867113564454224,0.5132886435545783
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,87,        setMaxEvaluations(Integer.MAX_VALUE);,2,0,0,1,2,0,1,0,1,5,37,4,1.0,0,0,0.47192624488141566,0.5280737551185852
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,88,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,152,        this.maxIterations = count;,2,0,0,0,0,1,0,0,1,3,27,4,1.0,0,0,0.3221700096887378,0.677829990311261
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,153,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,157,        this.maxEvaluations = maxEvaluations;,2,0,0,0,0,1,0,0,1,3,37,4,1.0,0,0,0.3345421358238159,0.6654578641761837
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,158,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,193,        if (optima == null) {,1,1,0,1,3,1,0,0,0,5,21,4,1.0,0,0,0.3501674160814702,0.649832583918529
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,219,        if (optimaValues == null) {,1,1,0,1,3,1,0,0,0,5,27,4,1.0,0,0,0.3541713893778545,0.6458286106221456
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,231,        optima           = new double[starts];,1,0,1,0,2,2,0,0,1,5,38,4,1.0,0,0,0.7144229456201149,0.28557705437988534
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,232,        optimaValues     = new double[starts];,1,0,1,0,2,2,0,0,1,5,38,4,1.0,0,0,0.7144229456201149,0.28557705437988534
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,233,        totalIterations  = 0;,1,0,0,0,0,0,0,0,1,2,21,4,1.0,0,0,0.26862125052051017,0.7313787494794906
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,234,        totalEvaluations = 0;,1,0,0,0,0,0,0,0,1,2,21,4,1.0,0,0,0.26862125052051017,0.7313787494794906
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,237,        for (int i = 0; i < starts; ++i) {,4,1,0,1,3,2,0,0,1,6,34,4,1.0,0,0,0.5138788176567957,0.48612118234320384
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,240,                optimizer.setMaximalIterationCount(maxIterations - totalIterations);,2,1,0,1,2,0,2,0,0,5,68,9,1.0,0,0,0.26232468989137814,0.737675310108623
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,241,                optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations);,2,1,0,1,2,0,2,0,0,5,63,9,1.0,0,0,0.24634544136134315,0.7536545586386558
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,242,                final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);,6,4,0,1,6,2,2,0,1,7,82,8,1.0,0,0,0.7275932347878258,0.27240676521217266
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,243,                final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);,6,4,0,1,6,2,2,0,1,7,82,8,1.0,0,0,0.7275932347878258,0.27240676521217266
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,244,"                optima[i]       = optimizer.optimize(f, goalType,",0,0,1,0,3,0,4,0,1,4,49,8,1.0,0,0,0.3527617953811561,0.6472382046188426
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,247,                optimaValues[i] = optimizer.getFunctionValue();,0,0,1,1,4,0,2,0,1,5,47,8,1.0,0,0,0.5320042124357087,0.46799578756429105
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,254,            },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,256,            totalIterations  += optimizer.getIterationCount();,1,0,0,1,2,0,2,0,1,5,50,6,1.0,0,0,0.3759775346007633,0.6240224653992364
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,257,            totalEvaluations += optimizer.getEvaluations();,1,0,0,1,2,0,2,0,1,5,47,6,1.0,0,0,0.36816327660590753,0.6318367233940924
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,262,        int lastNaN = optima.length;,3,0,0,0,0,1,0,0,0,2,28,5,1.0,0,0,0.20486736562924115,0.7951326343707589
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,263,        for (int i = 0; i < lastNaN; ++i) {,4,1,0,1,3,2,0,0,1,6,35,4,1.0,0,0,0.5154898408687402,0.4845101591312597
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,264,            if (Double.isNaN(optima[i])) {,0,0,1,2,7,1,2,0,0,5,30,7,1.0,0,0,0.4989765243770625,0.5010234756229373
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,272,        double currX = optima[0];,1,0,1,0,2,1,0,0,0,4,25,5,1.0,0,0,0.5548745716823821,0.4451254283176174
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,273,        double currY = optimaValues[0];,1,0,1,0,2,1,0,0,0,4,31,5,1.0,0,0,0.5611898663182983,0.43881013368170046
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,274,        for (int j = 1; j < lastNaN; ++j) {,4,1,0,1,3,2,0,0,1,6,35,4,1.0,0,0,0.5154898408687402,0.4845101591312597
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,275,            final double prevY = currY;,2,0,0,0,0,2,0,0,1,3,27,6,1.0,0,0,0.285099306757335,0.7149006932426634
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,276,            currX = optima[j];,1,0,1,0,2,0,0,0,1,4,18,6,1.0,0,0,0.6129332127731582,0.38706678722684107
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,277,            currY = optimaValues[j];,1,0,1,0,2,0,0,0,1,4,24,6,1.0,0,0,0.6156598567832958,0.3843401432167024
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,278,            if ((goalType == GoalType.MAXIMIZE) ^ (currY < prevY)) {,5,3,0,2,7,1,0,0,0,5,56,6,1.0,0,0,0.5951006408262846,0.4048993591737142
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,301,        if (Double.isNaN(optima[0])) {,0,0,1,2,7,1,2,0,0,5,30,5,1.0,0,0,0.5887433601923316,0.41125663980766913
defect4j,math,org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer,67,308,        return optima[0];,0,0,1,0,2,1,0,0,0,3,17,5,1.0,0,0,0.464307506013384,0.5356924939866156
defect4j,math,org/apache/commons/math/random/JDKRandomGenerator,67,28,public class JDKRandomGenerator extends Random implements RandomGenerator {,1,0,0,0,1,4,0,2,1,5,75,1,1.0,0,0,0.9994116952563489,0.0005883047436515181
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,68,381,                            tmp = 0.1;,1,0,0,0,0,0,0,0,1,2,10,12,0.28571,1,1,0.0468866051987269,0.9531133948012738
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,68,607,            } else if (fp < 0) {,1,1,0,1,4,2,0,0,0,5,20,7,0.28571,1,1,0.27004051054595557,0.7299594894540459
defect4j,math,org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer,68,608,"                paru = Math.min(paru, lmPar);",1,0,0,0,2,0,4,0,1,4,29,9,0.28571,1,1,0.10567577218581663,0.8943242278141822
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,161,        TDistribution tDistribution = new TDistributionImpl(nObs - 2);,2,1,0,1,2,1,0,2,1,7,62,4,0.8,0,0,0.9976407855945381,0.0023592144054611
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,162,        int nVars = correlationMatrix.getColumnDimension();,1,0,0,1,2,1,2,0,0,5,51,5,0.8,0,0,0.3211024477736328,0.6788975522263668
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,163,        double[][] out = new double[nVars][nVars];,1,0,1,0,8,3,0,0,0,4,42,5,0.8,0,0,0.6997670276017219,0.30023297239827873
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,164,        for (int i = 0; i < nVars; i++) {,4,1,0,1,3,2,0,0,1,6,33,4,0.8,0,0,0.5123513749287815,0.48764862507121814
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,165,            for (int j = 0; j < nVars; j++) {,4,1,0,1,3,2,0,0,1,6,33,6,0.8,0,0,0.43937800862988435,0.5606219913701146
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,166,                if (i == j) {,2,1,0,1,3,1,0,0,0,5,13,8,0.8,0,0,0.22287280435856527,0.7771271956414351
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,167,                    out[i][j] = 0d;,0,0,1,0,4,0,0,0,1,3,15,10,0.8,0,0,0.290200474806219,0.7097995251937812
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,169,"                    double r = correlationMatrix.getEntry(i, j);",1,0,0,0,2,1,4,0,0,4,44,11,0.8,0,0,0.043577108869744405,0.9564228911302574
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,170,                    double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));,5,5,0,3,8,1,4,0,0,6,59,11,0.8,0,0,0.49642556916917485,0.5035744308308233
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,171,                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));,0,2,1,2,8,0,3,0,1,6,61,10,0.8,1,0,0.5056094453401244,0.49439055465987397
defect4j,math,org/apache/commons/math/stat/correlation/PearsonsCorrelation,69,175,        return new BlockRealMatrix(out);,1,0,0,1,2,2,0,1,1,6,32,4,0.8,0,0,0.7384808480602624,0.2615191519397382
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,46,        super();,0,0,0,1,2,1,0,0,1,4,8,3,0.8,0,0,0.35680787339592634,0.6431921266040731
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,47,    },0,0,0,0,1,0,0,0,0,1,1,2,0.8,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,128,        double p0 = 1.0;,1,0,0,0,0,1,0,0,0,2,16,5,0.8,0,0,0.17450945296052545,0.8254905470394743
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,129,"        double p1 = getA(0, x);",1,0,0,0,2,1,2,0,1,5,23,5,0.8,0,0,0.31298469931193174,0.6870153006880685
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,130,        double q0 = 0.0;,1,0,0,0,0,1,0,0,0,2,16,5,0.8,0,0,0.17450945296052545,0.8254905470394743
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,131,        double q1 = 1.0;,1,0,0,0,0,1,0,0,0,2,16,5,0.8,0,0,0.17450945296052545,0.8254905470394743
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,132,        double c = p1 / q1;,3,1,0,0,0,1,0,0,0,3,19,5,0.8,0,0,0.2665440625269102,0.7334559374730893
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,133,        int n = 0;,1,0,0,0,0,1,0,0,0,2,10,5,0.8,0,0,0.17517377342448523,0.8248262265755141
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,134,        double relativeError = Double.MAX_VALUE;,3,0,0,0,0,1,0,0,0,2,40,5,0.8,0,0,0.21742015058930317,0.7825798494106957
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,135,        while (n < maxIterations && relativeError > epsilon) {,4,3,0,1,3,1,0,0,0,5,54,4,0.8,0,0,0.6113510627698203,0.38864893723018035
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,136,            ++n;,1,0,0,0,0,0,0,0,1,2,4,6,0.8,0,0,0.2177491763510374,0.7822508236489634
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,137,"            double a = getA(n, x);",1,0,0,0,2,1,3,0,1,5,22,7,0.8,0,0,0.2018847003051078,0.7981152996948928
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,138,"            double b = getB(n, x);",1,0,0,0,2,1,3,0,1,5,22,7,0.8,0,0,0.2018847003051078,0.7981152996948928
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,139,            double p2 = a * p1 + b * p0;,5,3,0,0,0,1,0,0,0,3,28,7,0.8,0,0,0.3359003392878155,0.6640996607121843
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,140,            double q2 = a * q1 + b * q0;,5,3,0,0,0,1,0,0,0,3,28,7,0.8,0,0,0.3359003392878155,0.6640996607121843
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,141,            boolean infinite = false;,1,0,0,0,0,1,0,0,1,3,25,7,0.8,0,0,0.2070790059653935,0.7929209940346063
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,142,            if (Double.isInfinite(p2) || Double.isInfinite(q2)) {,0,1,0,2,7,1,6,0,0,5,53,6,0.8,0,0,0.09486013701148524,0.9051398629885153
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,175,            if (infinite) {,1,0,0,1,3,1,0,0,0,4,15,6,0.8,0,0,0.24857757723619284,0.7514224227638077
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,182,            double r = p2 / q2;,3,1,0,0,0,1,0,0,0,3,19,7,0.8,0,0,0.20179795433056125,0.7982020456694375
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,184,            if (Double.isNaN(r)) {,0,0,0,2,5,1,3,0,0,4,22,7,0.8,0,0,0.16586538311167495,0.8341346168883257
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,189,            relativeError = Math.abs(r / c - 1.0);,3,2,0,1,2,0,2,0,1,6,38,6,0.8,0,0,0.4679768796695211,0.5320231203304782
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,192,            c = p2 / q2;,3,1,0,0,0,0,0,0,1,3,12,6,0.8,0,0,0.3188945414132574,0.6811054585867409
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,193,            p0 = p1;,2,0,0,0,0,0,0,0,1,2,8,6,0.8,0,0,0.23296147474953827,0.7670385252504612
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,194,            p1 = p2;,2,0,0,0,0,0,0,0,1,2,8,6,0.8,0,0,0.23296147474953827,0.7670385252504612
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,195,            q0 = q1;,2,0,0,0,0,0,0,0,1,2,8,6,0.8,0,0,0.23296147474953827,0.7670385252504612
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,196,            q1 = q2;,2,0,0,0,0,0,0,0,1,2,8,6,0.8,0,0,0.23296147474953827,0.7670385252504612
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,197,        },0,0,0,0,1,0,0,0,0,1,1,2,0.8,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,199,        if (n >= maxIterations) {,2,1,0,1,3,1,0,0,0,5,25,4,0.8,0,0,0.3755898916586399,0.6244101083413592
defect4j,math,org/apache/commons/math/util/ContinuedFraction,69,205,        return c;,1,0,0,0,0,1,0,0,0,2,9,4,0.8,0,0,0.19492165058061967,0.8050783494193792
defect4j,math,org/apache/commons/math/distribution/TDistributionImpl,69,128,        if (x == 0.0) {,1,1,0,1,3,1,0,0,0,5,15,4,0.8,0,0,0.3489247085107402,0.6510752914892584
defect4j,math,org/apache/commons/math/distribution/TDistributionImpl,69,131,            double t =,1,0,0,0,0,1,0,0,0,2,10,7,0.8,0,0,0.12872704396676024,0.8712729560332392
defect4j,math,org/apache/commons/math/distribution/TDistributionImpl,69,136,            if (x < 0.0) {,1,1,0,1,3,1,0,0,0,5,14,6,0.8,0,0,0.285649640690987,0.7143503593090123
defect4j,math,org/apache/commons/math/distribution/TDistributionImpl,69,139,                ret = 1.0 - 0.5 * t;,2,2,0,0,0,0,0,0,1,3,20,8,0.8,0,0,0.26170109642404016,0.7382989035759594
defect4j,math,org/apache/commons/math/distribution/TDistributionImpl,69,143,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.8,0,0,0.19436532579412982,0.8056346742058704
defect4j,math,org/apache/commons/math/special/Gamma,69,41,    private static final double[] LANCZOS =,1,0,0,0,2,4,0,0,3,4,39,2,0.8,0,0,0.8480769552647034,0.15192304473529636
defect4j,math,org/apache/commons/math/special/Gamma,69,61,    private static final double HALF_LOG_2_PI = 0.5 * Math.log(2.0 * Math.PI);,3,2,0,1,2,4,2,0,3,7,74,2,0.8,0,0,0.9376388770079878,0.06236112299201208
defect4j,math,org/apache/commons/math/special/Gamma,69,97,        if (Double.isNaN(x) || (x <= 0.0)) {,1,2,0,2,7,1,3,0,0,6,36,4,0.8,0,0,0.38291582193652995,0.6170841780634715
defect4j,math,org/apache/commons/math/special/Gamma,69,100,            double g = 607.0 / 128.0;,1,1,0,0,0,1,0,0,0,3,25,7,0.8,0,0,0.17764552184296672,0.8223544781570327
defect4j,math,org/apache/commons/math/special/Gamma,69,102,            double sum = 0.0;,1,0,0,0,0,1,0,0,0,2,17,7,0.8,0,0,0.12825703357570586,0.8717429664242948
defect4j,math,org/apache/commons/math/special/Gamma,69,103,            for (int i = LANCZOS.length - 1; i > 0; --i) {,5,2,0,1,3,2,0,0,1,6,46,6,0.8,0,0,0.5249341752059904,0.4750658247940083
defect4j,math,org/apache/commons/math/special/Gamma,69,104,                sum = sum + (LANCZOS[i] / (x + i));,4,3,1,2,6,0,0,0,1,6,35,8,0.8,0,0,0.8041898481630666,0.1958101518369317
defect4j,math,org/apache/commons/math/special/Gamma,69,106,            sum = sum + LANCZOS[0];,2,1,1,0,2,0,0,0,1,5,23,6,0.8,0,0,0.6807862624627204,0.31921373753727816
defect4j,math,org/apache/commons/math/special/Gamma,69,108,            double tmp = x + g + .5;,3,1,0,0,0,1,0,0,0,3,24,7,0.8,0,0,0.2034830626123919,0.7965169373876074
defect4j,math,org/apache/commons/math/special/Gamma,69,109,            ret = ((x + .5) * Math.log(tmp)) - tmp +,3,5,0,2,6,0,3,0,1,6,40,6,0.8,0,0,0.818581116930311,0.18141888306968845
defect4j,math,org/apache/commons/math/special/Gamma,69,113,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.8,0,0,0.19436532579412982,0.8056346742058704
defect4j,math,org/apache/commons/math/special/Beta,69,54,"        return regularizedBeta(x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE);",2,0,0,0,2,1,5,0,1,5,68,4,0.8,0,0,0.25624471933436654,0.7437552806656336
defect4j,math,org/apache/commons/math/special/Beta,69,121,        if (Double.isNaN(x) || Double.isNaN(a) || Double.isNaN(b) || (x < 0) ||,1,2,0,1,9,1,9,0,0,6,71,4,0.8,0,0,0.0261306546972788,0.9738693453027223
defect4j,math,org/apache/commons/math/special/Beta,69,125,        } else if (x > (a + 1.0) / (a + b + 2.0)) {,4,4,0,2,8,2,0,0,0,5,43,5,0.8,0,0,0.741883030034276,0.25811696996572375
defect4j,math,org/apache/commons/math/special/Beta,69,128,            ContinuedFraction fraction = new ContinuedFraction() {,1,0,0,1,3,1,0,2,1,6,54,7,0.8,0,0,0.9951830997672478,0.004816900232752526
defect4j,math,org/apache/commons/math/special/Beta,69,151,            ret = Math.exp((a * Math.log(x)) + (b * Math.log(1.0 - x)) -,4,8,0,2,9,0,7,0,1,6,60,7,0.8,0,0,0.9450856470437152,0.05491435295628481
defect4j,math,org/apache/commons/math/special/Beta,69,156,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.8,0,0,0.19436532579412982,0.8056346742058704
defect4j,math,org/apache/commons/math/special/Beta,69,192,        if (Double.isNaN(a) || Double.isNaN(b) || (a <= 0.0) || (b <= 0.0)) {,2,3,0,2,11,1,6,0,0,6,69,4,0.8,0,0,0.30215642185084407,0.6978435781491563
defect4j,math,org/apache/commons/math/special/Beta,69,195,            ret = Gamma.logGamma(a) + Gamma.logGamma(b) -,1,2,0,1,4,0,6,0,1,6,45,6,0.8,0,0,0.15182120067494062,0.8481787993250599
defect4j,math,org/apache/commons/math/special/Beta,69,199,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,0.8,0,0,0.19436532579412982,0.8056346742058704
defect4j,math,org/apache/commons/math/special/Beta,69,128,            ContinuedFraction fraction = new ContinuedFraction() {,1,0,0,1,3,1,0,2,1,6,54,7,0.8,0,0,0.9951830997672478,0.004816900232752526
defect4j,math,org/apache/commons/math/special/Beta,69,134,                    if (n % 2 == 0) { // even,1,2,0,1,3,1,0,0,0,5,25,13,0.8,0,0,0.0572108105860486,0.9427891894139518
defect4j,math,org/apache/commons/math/special/Beta,69,135,                        m = n / 2.0;,2,1,0,0,0,0,0,0,1,3,12,15,0.8,0,0,0.0203191878446252,0.9796808121553733
defect4j,math,org/apache/commons/math/special/Beta,69,136,                        ret = (m * (b - m) * x) /,5,3,0,2,4,0,0,0,1,5,25,15,0.8,0,0,0.07550489791939709,0.9244951020806034
defect4j,math,org/apache/commons/math/special/Beta,69,139,                        m = (n - 1.0) / 2.0;,2,2,0,1,2,0,0,0,1,5,20,15,0.8,0,0,0.03850548828760542,0.9614945117123944
defect4j,math,org/apache/commons/math/special/Beta,69,140,                        ret = -((a + m) * (a + b + m) * x) /,7,4,0,2,6,0,0,0,2,5,36,15,0.8,0,0,0.1724447015978825,0.8275552984021163
defect4j,math,org/apache/commons/math/special/Beta,69,143,                    return ret;,1,0,0,0,0,1,0,0,0,2,11,13,0.8,0,0,0.021048713527799967,0.9789512864722015
defect4j,math,org/apache/commons/math/special/Beta,69,148,                    return 1.0;,0,0,0,0,0,1,0,0,0,1,11,2,0.8,0,0,0.14236746386500732,0.8576325361349939
defect4j,math,org/apache/commons/math/analysis/solvers/BisectionSolver,70,66,"        return solve(f, min, max);",0,0,0,0,2,1,4,0,1,4,26,4,1.0,0,0,0.18988687795484976,0.8101131220451497
defect4j,math,org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,180,                loop     = false;,1,0,0,0,0,0,0,0,2,2,17,12,1.0,1,1,0.06714173982108353,0.9328582601789158
defect4j,math,org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,300,                  loop     = false;,1,0,0,0,0,0,0,0,2,2,17,14,1.0,1,1,0.029809484962933275,0.9701905150370683
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,72,196,        return (start < mid) && (mid < end);,4,3,0,1,4,1,0,0,0,5,36,4,0.5,0,0,0.567941552378813,0.4320584476211882
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,72,225,"        if (!isSequence(lower, initial, upper)) {",0,0,0,0,5,1,4,0,2,4,41,4,0.5,0,0,0.27402744347128777,0.7259725565287138
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,72,230,    },0,0,0,0,1,0,0,0,0,1,1,2,0.5,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,72,102,        clearResult();,0,0,0,1,2,0,1,0,1,4,14,4,0.5,0,0,0.3660347387416133,0.6339652612583859
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,72,103,"        verifySequence(min, initial, max);",0,0,0,0,2,0,4,0,1,3,34,4,0.5,0,0,0.18813685083700152,0.8118631491629972
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,72,106,        double yInitial = f.value(initial);,1,0,0,1,2,1,3,0,0,5,35,5,0.5,0,0,0.24589579921187366,0.754104200788126
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,72,107,        if (Math.abs(yInitial) <= functionValueAccuracy) {,1,1,0,2,5,1,3,0,0,6,50,4,0.5,0,0,0.36111063575488533,0.6388893642451142
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,72,113,        double yMin = f.value(min);,1,0,0,1,2,1,3,0,0,5,27,5,0.5,0,0,0.23815507908688713,0.7618449209131121
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,72,114,        if (Math.abs(yMin) <= functionValueAccuracy) {,1,1,0,2,5,1,3,0,0,6,46,4,0.5,0,0,0.3510396959955604,0.648960304004441
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,72,180,            if (Math.abs(yMin) <= functionValueAccuracy) {,1,1,0,2,5,1,3,0,0,6,46,6,0.5,0,0,0.28749641605432186,0.712503583945679
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,72,183,            } else if (Math.abs(yMax) <= functionValueAccuracy) {,1,1,0,2,6,2,3,0,0,6,53,7,0.5,0,0,0.2873187986178299,0.7126812013821694
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,73,196,        return (start < mid) && (mid < end);,4,3,0,1,4,1,0,0,0,5,36,4,1.0,0,0,0.567941552378813,0.4320584476211882
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,73,225,"        if (!isSequence(lower, initial, upper)) {",0,0,0,0,5,1,4,0,2,4,41,4,1.0,0,0,0.27402744347128777,0.7259725565287138
defect4j,math,org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,73,230,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.16860205618202959,0.831397943817972
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,73,102,        clearResult();,0,0,0,1,2,0,1,0,1,4,14,4,1.0,0,0,0.3660347387416133,0.6339652612583859
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,73,103,"        verifySequence(min, initial, max);",0,0,0,0,2,0,4,0,1,3,34,4,1.0,0,0,0.18813685083700152,0.8118631491629972
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,73,106,        double yInitial = f.value(initial);,1,0,0,1,2,1,3,0,0,5,35,5,1.0,0,0,0.24589579921187366,0.754104200788126
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,73,107,        if (Math.abs(yInitial) <= functionValueAccuracy) {,1,1,0,2,5,1,3,0,0,6,50,4,1.0,0,0,0.36111063575488533,0.6388893642451142
defect4j,math,org/apache/commons/math/analysis/solvers/BrentSolver,73,113,        double yMin = f.value(min);,1,0,0,1,2,1,3,0,0,5,27,5,1.0,0,0,0.23815507908688713,0.7618449209131121
