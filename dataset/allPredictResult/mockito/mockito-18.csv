project_path,version,lines,statement,suspicious,faulty,predict,miss_line
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,107,        } else if (type == HashMap.class) {,0.00211,0,1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,109,        } else if (type == SortedMap.class) {,0.00211,0,1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,111,        } else if (type == TreeMap.class) {,0.00211,0,1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,113,        } else if (type == LinkedHashMap.class) {,0.00211,0,1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,117,        return null;,0.00211,0,1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,101,        } else if (type == LinkedList.class) {,0.00211,0,1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,103,        } else if (type == ArrayList.class) {,0.00211,0,1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,105,        } else if (type == Map.class) {,0.00211,0,1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,87,        } else if (type == Collection.class) {,0.0021,1,-1,1
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,89,        } else if (type == Set.class) {,0.0021,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,91,        } else if (type == HashSet.class) {,0.0021,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,93,        } else if (type == SortedSet.class) {,0.0021,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,95,        } else if (type == TreeSet.class) {,0.0021,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,97,        } else if (type == LinkedHashSet.class) {,0.0021,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,99,        } else if (type == List.class) {,0.0021,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,83,        if (Primitives.isPrimitiveOrWrapper(type)) {,0.00178,0,-1,0
org/mockito/internal/util/Primitives,18,42,        return PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.containsKey(type);,0.00167,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,76,        return null;,0.00162,0,-1,0
org/mockito/internal/util/MockUtil,18,70,        return isMockitoMock(mock) && getMockSettings(mock).getDefaultAnswer() == Mockito.CALLS_REAL_METHODS;,0.00162,0,-1,0
org/mockito/internal/util/Primitives,18,13,"    private static final Map<Class<?>, Class<?>> PRIMITIVE_TYPES = new HashMap<Class<?>, Class<?>>();",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,14,"    private static final Map<Class<?>, Object> PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES = new HashMap<Class<?>, Object>();",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,58,"        PRIMITIVE_TYPES.put(Boolean.class, Boolean.TYPE);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,59,"        PRIMITIVE_TYPES.put(Character.class, Character.TYPE);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,60,"        PRIMITIVE_TYPES.put(Byte.class, Byte.TYPE);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,61,"        PRIMITIVE_TYPES.put(Short.class, Short.TYPE);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,62,"        PRIMITIVE_TYPES.put(Integer.class, Integer.TYPE);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,63,"        PRIMITIVE_TYPES.put(Long.class, Long.TYPE);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,64,"        PRIMITIVE_TYPES.put(Float.class, Float.TYPE);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,65,"        PRIMITIVE_TYPES.put(Double.class, Double.TYPE);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,69,"        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Boolean.class, false);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,70,"        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Character.class, '\u0000');",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,71,"        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Byte.class, (byte) 0);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,72,"        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Short.class, (short) 0);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,73,"        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Integer.class, 0);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,74,"        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Long.class, 0L);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,75,"        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Float.class, 0F);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,76,"        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Double.class, 0D);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,78,"        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(boolean.class, false);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,79,"        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(char.class, '\u0000');",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,80,"        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(byte.class, (byte) 0);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,81,"        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(short.class, (short) 0);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,82,"        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(int.class, 0);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,83,"        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(long.class, 0L);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,84,"        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(float.class, 0F);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,85,"        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(double.class, 0D);",0.00161,0,-1,0
org/mockito/internal/util/Primitives,18,86,    },0.00161,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,72,        } else if (isMockOrSpy(instance)) {,0.00154,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,86,        return mockUtil.isMock(instance),0.00154,0,-1,0
org/mockito/internal/util/MockUtil,18,66,        return isMockitoMock(mock);,0.0012,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,59,"            FieldReader fieldReader = new FieldReader(instance, field);",0.00111,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,61,"            Object mockInstance = preparedMock(fieldReader.read(), field);",0.00111,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,62,            if (mockInstance != null) {,0.00111,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,70,        if (isAnnotatedByMockOrSpy(field)) {,0.00111,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,80,        return null != field.getAnnotation(Spy.class),0.00111,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,18,52,            if (null != field.getAnnotation(InjectMocks.class)) {,0.00111,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,50,            if (field.isAnnotationPresent(Spy.class) && !field.isAnnotationPresent(InjectMocks.class)) {,0.00111,0,-1,0
org/mockito/MockitoAnnotations,18,115,"            processAnnotationDeprecatedWay(annotationEngine, testClass, field);",0.00111,0,-1,0
org/mockito/MockitoAnnotations,18,135,    },0.00111,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,64,            boolean alreadyAssigned = false;,0.0011,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,65,            for(Annotation annotation : field.getAnnotations()) {           ,0.0011,0,-1,0
org/mockito/MockitoAnnotations,18,121,        boolean alreadyAssigned = false;,0.0011,0,-1,0
org/mockito/MockitoAnnotations,18,122,        for(Annotation annotation : field.getAnnotations()) {,0.0011,0,-1,0
org/mockito/internal/util/MockUtil,18,74,        return mockMaker.getHandler(mock) != null;,0.0011,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,18,26,        return GLOBAL_CONFIGURATION.get();,0.00109,0,-1,0
org/mockito/internal/util/reflection/FieldReader,18,15,    final AccessibilityChanger changer = new AccessibilityChanger();,0.00109,0,-1,0
org/mockito/internal/util/reflection/FieldReader,18,17,"    public FieldReader(Object target, Field field) {",0.00109,0,-1,0
org/mockito/internal/util/reflection/FieldReader,18,18,        this.target = target;,0.00109,0,-1,0
org/mockito/internal/util/reflection/FieldReader,18,19,        this.field = field;,0.00109,0,-1,0
org/mockito/internal/util/reflection/FieldReader,18,20,        changer.enableAccess(field);,0.00109,0,-1,0
org/mockito/internal/util/reflection/FieldReader,18,21,    },0.00109,0,-1,0
org/mockito/internal/util/reflection/FieldReader,18,29,            return field.get(target);,0.00109,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,60,        threadSafely().reset();,0.00109,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,61,    },0.00109,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,103,        stubbingInProgress = null;,0.00109,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,104,        verificationMode = null;,0.00109,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,105,        getArgumentMatcherStorage().reset();,0.00109,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,106,    },0.00109,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,123,        matcherStack.clear();,0.00109,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,124,    },0.00109,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,64,        threadSafely().resetOngoingStubbing();,0.00108,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,65,    },0.00108,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,49,        iOngoingStubbing = null;,0.00107,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,50,    },0.00107,0,-1,0
org/mockito/internal/util/reflection/AccessibilityChanger,18,11,    private Boolean wasAccessible = null;,0.00107,0,-1,0
org/mockito/internal/util/reflection/AccessibilityChanger,18,29,        wasAccessible = accessibleObject.isAccessible();,0.00107,0,-1,0
org/mockito/internal/util/reflection/AccessibilityChanger,18,30,        accessibleObject.setAccessible(true);,0.00107,0,-1,0
org/mockito/internal/util/reflection/AccessibilityChanger,18,31,    },0.00107,0,-1,0
org/mockito/internal/util/reflection/AccessibilityChanger,18,9,public class AccessibilityChanger {,0.00106,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,18,16,public class MockAnnotationProcessor implements FieldAnnotationProcessor<Mock> {,0.00101,0,-1,0
org/mockito/internal/configuration/MockitoAnnotationsMockAnnotationProcessor,18,16,public class MockitoAnnotationsMockAnnotationProcessor implements FieldAnnotationProcessor<Mock> {,0.00101,0,-1,0
org/mockito/internal/configuration/DefaultInjectionEngine,18,17,public class DefaultInjectionEngine {,0.00101,0,-1,0
org/mockito/internal/configuration/CaptorAnnotationProcessor,18,17,public class CaptorAnnotationProcessor implements FieldAnnotationProcessor<Captor> {,0.00101,0,-1,0
org/mockito/internal/configuration/DefaultInjectionEngine,18,20,"        MockInjection.onFields(needingInjection, testClassInstance)",0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,22,    private final MockUtil mockUtil = new MockUtil();,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,23,public class InjectingAnnotationEngine implements AnnotationEngine {,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,24,    private final AnnotationEngine delegate = new DefaultAnnotationEngine();,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,25,    private final AnnotationEngine spyAnnotationEngine = new SpyAnnotationEngine();,0.00101,0,-1,0
org/mockito/internal/configuration/DefaultInjectionEngine,18,26,    },0.00101,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,18,28,public class SpyOnInjectedFieldsHandler extends MockInjectionStrategy {,0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,18,29,    public InjectMocksScanner(Class<?> clazz) {,0.00101,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,30,"    private final Map<Class<? extends Annotation>, FieldAnnotationProcessor<?>> annotationProcessorMap = new HashMap<Class<? extends Annotation>, FieldAnnotationProcessor<?>>();",0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,18,30,        this.clazz = clazz;,0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,18,31,    },0.00101,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,32,    public DefaultAnnotationEngine() {,0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,32,"    public MockScanner(Object instance, Class<?> clazz) {",0.00101,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,33,"        registerAnnotationProcessor(Mock.class, new MockAnnotationProcessor());",0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,33,        this.instance = instance;,0.00101,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,34,"        registerAnnotationProcessor(MockitoAnnotations.Mock.class, new MockitoAnnotationsMockAnnotationProcessor());",0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,34,        this.clazz = clazz;,0.00101,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,35,"        registerAnnotationProcessor(Captor.class, new CaptorAnnotationProcessor());",0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,35,    },0.00101,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,36,    },0.00101,0,-1,0
org/mockito/configuration/DefaultMockitoConfiguration,18,39,        return new InjectingAnnotationEngine();,0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,18,40,        mockDependentFields.addAll(scan());,0.00101,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,40,public class SpyAnnotationEngine implements AnnotationEngine {,0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,18,41,    },0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,18,42,            nextStrategy.thenTry(strategy);,0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,47,        mocks.addAll(scan());,0.00101,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,48,        Field[] fields = context.getDeclaredFields();,0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,48,"        return new OngoingMockInjection(fields, ofInstance);",0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,48,    },0.00101,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,49,        for (Field field : fields) {,0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,18,49,        Set<Field> mockDependentFields = new HashSet<Field>();,0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,18,50,        Field[] fields = clazz.getDeclaredFields();,0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,18,51,        for (Field field : fields) {,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,55,"        processIndependentAnnotations(testInstance.getClass(), testInstance);",0.00101,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,18,55,        return GLOBAL_CONFIGURATION.get().getAnnotationEngine();,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,56,"        processInjectMocks(testInstance.getClass(), testInstance);",0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,56,        Set<Object> mocks = newMockSafeHashSet();,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,57,    },0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,57,        for (Field field : clazz.getDeclaredFields()) {,0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,18,58,        return mockDependentFields;,0.00101,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,58,"        annotationProcessorMap.put(annotationClass, fieldAnnotationProcessor);",0.00101,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,59,    },0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,60,        Class<?> classContext = clazz;,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,61,        while (classContext != Object.class) {,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,62,            injectMocks(testInstance);,0.00101,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,62,        Field[] fields = clazz.getDeclaredFields();,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,63,            classContext = classContext.getSuperclass();,0.00101,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,63,        for (Field field : fields) {,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,65,    },0.00101,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,66,        return mocks;,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,68,        Class<?> classContext = clazz;,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,69,        while (classContext != Object.class) {,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,71,"            delegate.process(classContext, testInstance);",0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,73,"            spyAnnotationEngine.process(classContext, testInstance);",0.00101,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,74,    },0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,75,            classContext = classContext.getSuperclass();,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,77,    },0.00101,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,79,    },0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,86,            postInjectionStrategies.thenTry(new SpyOnInjectedFieldsHandler());,0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,87,            return this;,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,90,        Class<?> clazz = testClassInstance.getClass();,0.00101,0,-1,0
org/mockito/MockitoAnnotations,18,90,        if (testClass == null) {,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,91,        Set<Field> mockDependentFields = new HashSet<Field>();,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,92,        Set<Object> mocks = newMockSafeHashSet();,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,94,        while (clazz != Object.class) {,0.00101,0,-1,0
org/mockito/MockitoAnnotations,18,94,        AnnotationEngine annotationEngine = new GlobalConfiguration().getAnnotationEngine();,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,95,            new InjectMocksScanner(clazz).addTo(mockDependentFields);,0.00101,0,-1,0
org/mockito/MockitoAnnotations,18,95,        Class<?> clazz = testClass.getClass();,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,96,"            new MockScanner(testClassInstance, clazz).addPreparedMocks(mocks);",0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,97,            clazz = clazz.getSuperclass();,0.00101,0,-1,0
org/mockito/MockitoAnnotations,18,98,        if (annotationEngine.getClass() != new DefaultMockitoConfiguration().getAnnotationEngine().getClass()) {,0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,100,"        new DefaultInjectionEngine().injectMocksOnFields(mockDependentFields, mocks, testClassInstance);",0.00101,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,101,    },0.00101,0,-1,0
org/mockito/MockitoAnnotations,18,101,            while (clazz != Object.class) {,0.00101,0,-1,0
org/mockito/MockitoAnnotations,18,102,"                scanDeprecatedWay(annotationEngine, testClass, clazz);",0.00101,0,-1,0
org/mockito/MockitoAnnotations,18,103,                clazz = clazz.getSuperclass();,0.00101,0,-1,0
org/mockito/MockitoAnnotations,18,108,"        annotationEngine.process(testClass.getClass(), testClass);",0.00101,0,-1,0
org/mockito/MockitoAnnotations,18,109,    },0.00101,0,-1,0
org/mockito/MockitoAnnotations,18,112,        Field[] fields = clazz.getDeclaredFields();,0.00101,0,-1,0
org/mockito/MockitoAnnotations,18,114,        for (Field field : fields) {,0.00101,0,-1,0
org/mockito/MockitoAnnotations,18,117,    },0.00101,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,18,16,    private final MockUtil mockUtil = new MockUtil();,0.00101,0,-1,0
org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,18,16,    public TypeBasedCandidateFilter(MockCandidateFilter next) {,0.00101,0,-1,0
org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,18,17,        this.next = next;,0.00101,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,18,18,    public NameBasedCandidateFilter(MockCandidateFilter next) {,0.00101,0,-1,0
org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,18,18,    },0.00101,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,18,19,        this.next = next;,0.00101,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,18,20,    },0.00101,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,18,22,public class FinalMockCandidateFilter implements MockCandidateFilter {,0.00101,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,42,    public ConstructorInjection() { },0.00101,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,60,public class PropertyAndSetterInjection extends MockInjectionStrategy {,0.00101,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,62,    private final MockCandidateFilter mockCandidateFilter = new TypeBasedCandidateFilter(new NameBasedCandidateFilter(new FinalMockCandidateFilter()));,0.00101,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,64,    private final ListUtil.Filter<Field> notFinalOrStatic = new ListUtil.Filter<Field>() {,0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,76,            injectionStrategies.thenTry(new ConstructorInjection());,0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,77,            return this;,0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,81,            injectionStrategies.thenTry(new PropertyAndSetterInjection());,0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,82,            return this;,0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,18,41,        if(nextStrategy != null) {,0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,18,44,            nextStrategy = strategy;,0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,18,46,        return strategy;,0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,71,"            this.mocks.addAll(checkNotNull(mocks, ""mocks""));",0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,72,            return this;,0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,91,            for (Field field : fields) {,0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,95,        },0.00101,0,-1,0
org/mockito/internal/util/Checks,18,25,        return iterable;,0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,67,"            this.fields.addAll(checkItemsNotNull(fields, ""fields""));",0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,68,        },0.00101,0,-1,0
org/mockito/internal/util/Checks,18,21,"        checkNotNull(iterable, checkedIterable);",0.00101,0,-1,0
org/mockito/internal/util/Checks,18,22,        for (Object item : iterable) {,0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,66,"            this.fieldOwner = checkNotNull(fieldOwner, ""fieldOwner"");",0.00101,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,124,        return backingHashSet.addAll(asWrappedMocks(mocks));,0.00101,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,132,"        Checks.checkNotNull(mocks, ""Passed collection should notify() be null"");",0.00101,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,133,        HashSet<HashCodeAndEqualsMockWrapper> hashSet = new HashSet<HashCodeAndEqualsMockWrapper>();,0.00101,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,134,        for (Object mock : mocks) {,0.00101,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,138,        return hashSet;,0.00101,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,18,14,public abstract class MockInjectionStrategy {,0.001,0,-1,0
org/mockito/internal/util/collections/Sets,18,20,        return HashCodeAndEqualsSafeSet.of(mocks);,0.001,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,18,20,        return new MockInjectionStrategy() {,0.001,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,37,        return new Iterator<Object>() {,0.001,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,38,            private final Iterator<HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();,0.001,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,41,                return iterator.hasNext();,0.001,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,55,        private final Set<Field> fields = new HashSet<Field>();,0.001,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,56,        private final Set<Object> mocks = newMockSafeHashSet();,0.001,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,58,        private final MockInjectionStrategy injectionStrategies = MockInjectionStrategy.nop();,0.001,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,59,        private final MockInjectionStrategy postInjectionStrategies = MockInjectionStrategy.nop();,0.001,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,65,"        private OngoingMockInjection(Set<Field> fields, Object fieldOwner) {",0.001,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,146,        return of(Arrays.asList(mocks));,0.001,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,150,        HashCodeAndEqualsSafeSet hashCodeAndEqualsSafeSet = new HashCodeAndEqualsSafeSet();,0.001,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,151,        if (objects != null) {,0.001,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,152,            for (Object mock : objects) {,0.001,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,156,        return hashCodeAndEqualsSafeSet;,0.001,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,34,    private final HashSet<HashCodeAndEqualsMockWrapper> backingHashSet = new HashSet<HashCodeAndEqualsMockWrapper>();,0.001,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,32,public class HashCodeAndEqualsSafeSet implements Set<Object> {,0.00099,0,-1,0
org/mockito/internal/util/Checks,18,17,        return value;,0.00099,0,-1,0
org/mockito/internal/util/Checks,18,14,        if(value == null) {,0.00099,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,48,        threadSafely().validateState();,0.00098,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,49,    },0.00098,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,68,        validateMostStuff();,0.00098,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,71,        if (stubbingInProgress != null) {,0.00098,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,76,    },0.00098,0,-1,0
org/mockito/internal/util/ObjectMethodsGuru,18,13,public class ObjectMethodsGuru implements Serializable {,0.00093,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,53,"public class ReturnsEmptyValues implements Answer<Object>, Serializable {",0.00093,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,56,    ObjectMethodsGuru methodsGuru = new ObjectMethodsGuru();,0.00093,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,57,    MockUtil mockUtil = new MockUtil();,0.00093,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,19,public class MockingProgressImpl implements MockingProgress {,0.00092,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,21,    private final Reporter reporter = new Reporter();,0.00092,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,21,        if (mockingProgress.get() == null) {,0.00092,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,22,    private final ArgumentMatcherStorage argumentMatcherStorage = new ArgumentMatcherStorageImpl();,0.00092,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,22,public class ArgumentMatcherStorageImpl implements ArgumentMatcherStorage {,0.00092,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,22,            mockingProgress.set(new MockingProgressImpl());,0.00092,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,24,        return mockingProgress.get();,0.00092,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,26,    private Location stubbingInProgress = null;,0.00092,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,26,    private final Stack<LocalizedMatcher> matcherStack = new Stack<LocalizedMatcher>();,0.00092,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,18,47,        new GlobalConfiguration();,0.00092,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,18,48,    },0.00092,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,81,        GlobalConfiguration.validate();,0.00092,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,83,        if (verificationMode != null) {,0.00092,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,89,        getArgumentMatcherStorage().validateState();,0.00092,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,90,    },0.00092,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,109,        return argumentMatcherStorage;,0.00092,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,112,        if (!matcherStack.isEmpty()) {,0.00092,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,117,    },0.00092,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,15,"public class ThreadSafeMockingProgress implements MockingProgress, Serializable {",0.00092,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,18,    private static final ThreadLocal<MockingProgress> mockingProgress = new ThreadLocal<MockingProgress>();,0.00092,0,-1,0
org/mockito/internal/util/MockUtil,18,22,public class MockUtil {,0.00092,0,-1,0
org/mockito/internal/util/MockUtil,18,24,    private static final MockMaker mockMaker = Plugins.getMockMaker();,0.00092,0,-1,0
org/mockito/internal/configuration/plugins/Plugins,18,27,        return registry.getMockMaker();,0.00092,0,-1,0
org/mockito/internal/configuration/plugins/PluginRegistry,18,33,        return mockMaker;,0.00092,0,-1,0
org/mockito/exceptions/Reporter,18,54,public class Reporter {,0.00092,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,18,40,            return config;,0.00091,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,18,68,            configClass = (Class) Class.forName(MOCKITO_CONFIGURATION_CLASS_NAME);,0.00091,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,18,72,        },0.00091,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,18,75,            return (IMockitoConfiguration) configClass.newInstance();,0.00091,0,-1,0
org/mockito/configuration/DefaultMockitoConfiguration,18,20,public class DefaultMockitoConfiguration implements IMockitoConfiguration {,0.00091,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,18,22,    private static final ThreadLocal<IMockitoConfiguration> GLOBAL_CONFIGURATION = new ThreadLocal<IMockitoConfiguration>();,0.00091,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,18,29,    public GlobalConfiguration() {,0.00091,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,18,31,        if (GLOBAL_CONFIGURATION.get() == null) {,0.00091,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,18,32,            GLOBAL_CONFIGURATION.set(createConfig());,0.00091,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,18,34,    },0.00091,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,18,37,        IMockitoConfiguration defaultConfiguration = new DefaultMockitoConfiguration();,0.00091,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,18,38,        IMockitoConfiguration config = new ClassPathLoader().loadConfiguration();,0.00091,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,18,39,        if (config != null) {,0.00091,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,18,56,public class ClassPathLoader {,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/DefaultPluginSwitch,18,5,class DefaultPluginSwitch implements PluginSwitch {,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginRegistry,18,7,class PluginRegistry {,0.00091,0,-1,0
org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider,18,9,public class DefaultStackTraceCleanerProvider implements StackTraceCleanerProvider {,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginRegistry,18,9,    private final PluginSwitch pluginSwitch,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/Plugins,18,11,    private static PluginRegistry registry = new PluginRegistry();,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginRegistry,18,12,    private final MockMaker mockMaker,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginFinder,18,14,    public PluginFinder(PluginSwitch pluginSwitch) {,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginFinder,18,15,        this.pluginSwitch = pluginSwitch;,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginRegistry,18,15,    private final StackTraceCleanerProvider stackTraceCleanerProvider,0.00091,0,-1,0
org/mockito/internal/util/collections/Iterables,18,16,        List<T> out = new LinkedList<T>();,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,16,    public PluginLoader(PluginSwitch pluginSwitch) {,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginFinder,18,16,    },0.00091,0,-1,0
org/mockito/internal/util/collections/Iterables,18,17,        while(in.hasMoreElements()) {,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,17,        this.pluginSwitch = pluginSwitch;,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,18,    },0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginFinder,18,19,        for (URL resource : resources) {,0.00091,0,-1,0
org/mockito/internal/util/collections/Iterables,18,20,        return out;,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,24,        T plugin = loadImpl(pluginType);,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,25,        if (plugin != null) {,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,33,            return pluginType.cast(Class.forName(defaultPluginClassName).newInstance());,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginFinder,18,39,        return null;,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,46,        ClassLoader loader = Thread.currentThread().getContextClassLoader();,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,47,        if (loader == null) {,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,52,"            resources = loader.getResources(""mockito-extensions/"" + service.getName());",0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,55,        },0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,58,            String foundPluginClass = new PluginFinder(pluginSwitch).findPluginClass(Iterables.toIterable(resources));,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,59,            if (foundPluginClass != null) {,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,64,            return null;,0.00091,0,-1,0
org/mockito/internal/configuration/plugins/DefaultPluginSwitch,18,7,        return true;,0.0,0,-1,0
org/mockito/exceptions/misusing/CannotStubVoidMethodWithReturnValue,18,7,        super(message);,0.0,0,-1,0
org/mockito/internal/creation/instance/InstantiationException,18,8,"        super(message, cause);",0.0,0,-1,0
org/mockito/exceptions/misusing/CannotStubVoidMethodWithReturnValue,18,8,    },0.0,0,-1,0
org/mockito/internal/creation/instance/InstantiationException,18,9,    },0.0,0,-1,0
org/mockito/internal/configuration/plugins/Plugins,18,9,public class Plugins {,0.0,0,-1,0
org/mockito/internal/util/collections/Iterables,18,10,public class Iterables {,0.0,0,-1,0
org/mockito/internal/util/Checks,18,11,public class Checks {,0.0,0,-1,0
org/mockito/internal/util/collections/ListUtil,18,11,public class ListUtil {,0.0,0,-1,0
org/mockito/internal/util/Primitives,18,11,public class Primitives {,0.0,0,-1,0
org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider,18,12,        return defaultCleaner;,0.0,0,-1,0
org/mockito/exceptions/misusing/CannotVerifyStubOnlyMock,18,13,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/MockitoConfigurationException,18,14,        super(message);,0.0,0,-1,0
org/mockito/exceptions/verification/SmartNullPointerException,18,14,        super(message);,0.0,0,-1,0
org/mockito/internal/util/collections/ListUtil,18,14,        LinkedList<T> filtered = new LinkedList<T>();,0.0,0,-1,0
org/mockito/internal/util/collections/Sets,18,14,public abstract class Sets {,0.0,0,-1,0
org/mockito/exceptions/misusing/CannotVerifyStubOnlyMock,18,14,    },0.0,0,-1,0
org/mockito/exceptions/misusing/WrongTypeOfReturnValue,18,14,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/FriendlyReminderException,18,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/MockitoConfigurationException,18,15,    },0.0,0,-1,0
org/mockito/exceptions/verification/NeverWantedButInvoked,18,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/InvalidUseOfMatchersException,18,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/verification/TooLittleActualInvocations,18,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/UnfinishedVerificationException,18,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/NullInsteadOfMockException,18,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/verification/VerificationInOrderFailure,18,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/verification/SmartNullPointerException,18,15,    },0.0,0,-1,0
org/mockito/internal/util/Checks,18,15,"            throw new NullPointerException(checkedValue + "" should not be null"");",0.0,0,-1,0
org/mockito/internal/util/collections/ListUtil,18,15,        for (T t : collection) {,0.0,0,-1,0
org/mockito/exceptions/misusing/NotAMockException,18,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/verification/TooManyActualInvocations,18,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/MissingMethodInvocationException,18,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/WrongTypeOfReturnValue,18,15,    },0.0,0,-1,0
org/mockito/exceptions/misusing/UnfinishedStubbingException,18,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/FriendlyReminderException,18,16,    },0.0,0,-1,0
org/mockito/exceptions/verification/NeverWantedButInvoked,18,16,    },0.0,0,-1,0
org/mockito/exceptions/misusing/InvalidUseOfMatchersException,18,16,    },0.0,0,-1,0
org/mockito/exceptions/verification/TooLittleActualInvocations,18,16,    },0.0,0,-1,0
org/mockito/exceptions/misusing/UnfinishedVerificationException,18,16,    },0.0,0,-1,0
org/mockito/exceptions/misusing/NullInsteadOfMockException,18,16,    },0.0,0,-1,0
org/mockito/exceptions/verification/VerificationInOrderFailure,18,16,    },0.0,0,-1,0
org/mockito/internal/util/collections/ListUtil,18,16,            if (!filter.isOut(t)) {,0.0,0,-1,0
org/mockito/internal/util/collections/Sets,18,16,        return HashCodeAndEqualsSafeSet.of(mocks);,0.0,0,-1,0
org/mockito/exceptions/misusing/NotAMockException,18,16,    },0.0,0,-1,0
org/mockito/exceptions/verification/TooManyActualInvocations,18,16,    },0.0,0,-1,0
org/mockito/exceptions/verification/WantedButNotInvoked,18,16,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/MissingMethodInvocationException,18,16,    },0.0,0,-1,0
org/mockito/exceptions/misusing/UnfinishedStubbingException,18,16,    },0.0,0,-1,0
org/mockito/internal/util/collections/ListUtil,18,17,                filtered.add(t);,0.0,0,-1,0
org/mockito/internal/configuration/plugins/Plugins,18,17,        return registry.getStackTraceCleanerProvider();,0.0,0,-1,0
org/mockito/internal/util/reflection/AccessibilityChanger,18,17,"        assert wasAccessible != null : ""accessibility info shall not be null"";",0.0,0,-1,0
org/mockito/exceptions/verification/WantedButNotInvoked,18,17,    },0.0,0,-1,0
org/mockito/internal/util/collections/Iterables,18,18,            out.add(in.nextElement());,0.0,0,-1,0
org/mockito/exceptions/base/MockitoAssertionError,18,18,        super(message);,0.0,0,-1,0
org/mockito/exceptions/verification/NoInteractionsWanted,18,18,        super(message);,0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,18,18,        MockSettings mockSettings = Mockito.withSettings();,0.0,0,-1,0
org/mockito/exceptions/misusing/MockitoConfigurationException,18,18,"        super(message, cause);",0.0,0,-1,0
org/mockito/internal/util/ObjectMethodsGuru,18,18,        return isToString(new DelegatingMethod(method));,0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,18,19,        if (annotation.extraInterfaces().length > 0) { // never null,0.0,0,-1,0
org/mockito/exceptions/verification/NoInteractionsWanted,18,19,    },0.0,0,-1,0
org/mockito/exceptions/misusing/MockitoConfigurationException,18,19,    },0.0,0,-1,0
org/mockito/internal/util/collections/ListUtil,18,19,        },0.0,0,-1,0
org/mockito/internal/configuration/CaptorAnnotationProcessor,18,19,        Class<?> type = field.getType();,0.0,0,-1,0
org/mockito/internal/util/reflection/AccessibilityChanger,18,19,            accessibleObject.setAccessible(wasAccessible);,0.0,0,-1,0
org/mockito/exceptions/misusing/InvalidUseOfMatchersException,18,19,"        super("""");",0.0,0,-1,0
org/mockito/internal/configuration/MockitoAnnotationsMockAnnotationProcessor,18,19,"        return Mockito.mock(field.getType(), field.getName());",0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginFinder,18,20,            InputStream s = null;,0.0,0,-1,0
org/mockito/exceptions/base/MockitoAssertionError,18,20,        unfilteredStackTrace = getStackTrace();,0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,18,20,            mockSettings.extraInterfaces(annotation.extraInterfaces());,0.0,0,-1,0
org/mockito/internal/util/collections/ListUtil,18,20,        return filtered;,0.0,0,-1,0
org/mockito/internal/configuration/CaptorAnnotationProcessor,18,20,        if (!ArgumentCaptor.class.isAssignableFrom(type)) {,0.0,0,-1,0
org/mockito/internal/util/reflection/AccessibilityChanger,18,20,        } catch (Throwable t) {,0.0,0,-1,0
org/mockito/exceptions/misusing/InvalidUseOfMatchersException,18,20,    },0.0,0,-1,0
org/mockito/internal/configuration/CaptorAnnotationProcessor,18,21,"            throw new MockitoException(""@Captor field must be of the type ArgumentCaptor.\n"" + ""Field: '""",0.0,0,-1,0
org/mockito/exceptions/verification/WantedButNotInvoked,18,21,        return new RemoveFirstLine().of(super.toString());,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,18,21,        List<Object> mockTypeMatches = new ArrayList<Object>();,0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginFinder,18,22,                s = resource.openStream();,0.0,0,-1,0
org/mockito/exceptions/base/MockitoAssertionError,18,22,        ConditionalStackTraceFilter filter = new ConditionalStackTraceFilter();,0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,18,22,"        if ("""".equals(annotation.name())) {",0.0,0,-1,0
org/mockito/internal/util/reflection/AccessibilityChanger,18,22,        },0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,18,22,                return false;,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,18,22,        for (Object mock : mocks) {,0.0,0,-1,0
org/mockito/internal/util/ObjectMethodsGuru,18,22,        return method.getReturnType() == String.class,0.0,0,-1,0
org/mockito/internal/util/collections/ListUtil,18,23,    public interface Filter<T> {,0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginFinder,18,23,                String pluginClassName = new PluginFileReader().readPluginClass(s);,0.0,0,-1,0
org/mockito/exceptions/base/MockitoAssertionError,18,23,        filter.filter(this);,0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,18,23,            mockSettings.name(field.getName());,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,18,23,        List<Object> mockNameMatches = new ArrayList<Object>();,0.0,0,-1,0
org/mockito/internal/util/reflection/AccessibilityChanger,18,23,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,18,23,            if (field.getType().isAssignableFrom(mock.getClass())) {,0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginRegistry,18,23,        return stackTraceCleanerProvider;,0.0,0,-1,0
org/mockito/internal/util/Checks,18,23,"            checkNotNull(item, ""item in "" + checkedIterable);",0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginFinder,18,24,                if (pluginClassName == null) {,0.0,0,-1,0
org/mockito/internal/util/collections/Sets,18,24,        return new IdentitySet();,0.0,0,-1,0
org/mockito/exceptions/base/MockitoAssertionError,18,24,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,18,24,        if(mocks.size() == 1) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,18,24,        if(mocks.size() > 1) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,18,24,                mockTypeMatches.add(mock);,0.0,0,-1,0
org/mockito/internal/util/Checks,18,24,        },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldReader,18,24,            return read() == null;,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,25,public class MockInjection {,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,18,25,            final Object matchingMock = mocks.iterator().next();,0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,18,25,            mockSettings.name(annotation.name());,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,18,25,            for (Object mock : mocks) {,0.0,0,-1,0
org/mockito/internal/configuration/CaptorAnnotationProcessor,18,25,        Class cls = new GenericMaster().getGenericType(field);,0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,26,            return plugin;,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,18,26,                if (field.getName().equals(mockUtil.getMockName(mock).toString())) {,0.0,0,-1,0
org/mockito/internal/configuration/CaptorAnnotationProcessor,18,26,        return ArgumentCaptor.forClass(cls);,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,18,26,        },0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,18,27,            return new OngoingInjecter() {,0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,27,      return !type.isPrimitive() && !Modifier.isFinal(type.getModifiers());,0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,18,27,        if(annotation.serializable()){,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,18,27,                    mockNameMatches.add(mock);,0.0,0,-1,0
org/mockito/exceptions/base/MockitoAssertionError,18,27,        return unfilteredStackTrace;,0.0,0,-1,0
org/mockito/configuration/DefaultMockitoConfiguration,18,27,"        throw new RuntimeException(""\n"" + ""This method should not be used by the framework because it was deprecated""",0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,18,28,            mockSettings.serializable();,0.0,0,-1,0
org/mockito/internal/util/ObjectMethodsGuru,18,28,"        return method.getName().equals(""equals"")",0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,18,28,"        return next.filterCandidate(mockTypeMatches, field, fieldInstance);",0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,28,        threadSafely().reportOngoingStubbing(iOngoingStubbing);,0.0,0,-1,0
org/mockito/internal/util/collections/Sets,18,28,        if (elements == null) {,0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginFinder,18,29,                if (!pluginSwitch.isEnabled(pluginClassName)) {,0.0,0,-1,0
org/mockito/internal/util/Primitives,18,29,        if (clazz.isPrimitive()) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,18,29,            },0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,18,29,"        super(message, t);",0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,29,    },0.0,0,-1,0
org/mockito/internal/util/collections/Sets,18,29,"            throw new IllegalArgumentException(""Expected an array of elements (or empty array) but received a null."");",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,30,        this.iOngoingStubbing = iOngoingStubbing;,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,18,30,"                        if (!new BeanPropertySetter(fieldInstance, field).set(matchingMock)) {",0.0,0,-1,0
org/mockito/internal/util/Primitives,18,30,            return clazz;,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,18,30,"            return next.filterCandidate(mockNameMatches, field, fieldInstance);",0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,18,30,        filterStackTrace();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldReader,18,30,        } catch (Exception e) {,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,31,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,18,31,"                            new FieldSetter(fieldInstance, field).set(matchingMock);",0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,18,31,    },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldReader,18,31,"            throw new MockitoException(""Cannot read state from field: "" + field + "", on instance: "" + target);",0.0,0,-1,0
org/mockito/internal/util/collections/Sets,18,31,        return new LinkedHashSet<T>(asList(elements));,0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,31,        MockHandler mockHandler = new MockHandlerFactory().create(settings);,0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginFinder,18,32,                return pluginClassName;,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,32,        matcherStack.push(new LocalizedMatcher(matcher));,0.0,0,-1,0
org/mockito/internal/util/Primitives,18,32,        return (Class<T>) PRIMITIVE_TYPES.get(clazz);,0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,18,32,        mockSettings.defaultAnswer(annotation.answer());,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,18,32,"        return next.filterCandidate(mocks, field, fieldInstance);",0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,18,32,"        FieldReader fieldReader = new FieldReader(fieldOwner, field);",0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,32,        return threadSafely().pullOngoingStubbing();,0.0,0,-1,0
org/mockito/configuration/DefaultMockitoConfiguration,18,32,        return new ReturnsEmptyValues();,0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginFinder,18,33,            } catch(Exception e) {,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,33,        return new HandyReturnValues();,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,18,33,                    } catch (RuntimeException e) {,0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,18,33,"        return Mockito.mock(field.getType(), mockSettings);",0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,33,"        T mock = mockMaker.createMock(settings, mockHandler);",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,34,        IOngoingStubbing temp = iOngoingStubbing;,0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginFinder,18,34,"                throw new MockitoException(""Problems reading plugin implementation from: "" + resource, e);",0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,34,        } catch (Exception e) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,18,34,"                        new Reporter().cannotInjectDependency(field, matchingMock, e);",0.0,0,-1,0
org/mockito/internal/util/ObjectMethodsGuru,18,34,"        return method.getName().equals(""hashCode"")",0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,18,34,        super(message);,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,35,        iOngoingStubbing = null;,0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,35,"            throw new MockitoException(""Internal problem occurred, please report it. "" +",0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,18,35,                    },0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,18,35,        filterStackTrace();,0.0,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,18,35,"        return delegate.createMockFor(annotation, field);",0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,18,35,        if(!fieldReader.isNull() && field.isAnnotationPresent(Spy.class)) {,0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,35,        Object spiedInstance = settings.getSpiedInstance();,0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginFinder,18,36,                IOUtil.closeQuietly(s);,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,36,        return temp;,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,18,36,                    return matchingMock;,0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,18,36,    },0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,36,        threadSafely().verificationStarted(verify);,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,36,"        return new OngoingMockInjection(field, ofInstance);",0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,36,        if (spiedInstance != null) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,18,37,                Object instance = fieldReader.read();,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,37,    },0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,37,"            new LenientCopyTool().copyToMock(spiedInstance, mock);",0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,18,38,                if (new MockUtil().isMock(instance)) {,0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,18,39,        unfilteredStackTrace = getStackTrace();,0.0,0,-1,0
org/mockito/internal/util/ObjectMethodsGuru,18,39,        return Comparable.class.isAssignableFrom(method.getDeclaringClass()),0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,40,        validateState();,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,40,        if (matcherStack.isEmpty()) {,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,40,        return threadSafely().pullVerificationMode();,0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,40,        return mock;,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,41,        resetOngoingStubbing();,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,18,41,        return new OngoingInjecter() {,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,41,            return Collections.emptyList();,0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,18,41,                    Mockito.reset(instance);,0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,18,41,        ConditionalStackTraceFilter filter = new ConditionalStackTraceFilter();,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,42,        verificationMode = new Localized(verify);,0.0,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,18,42,            return defaultConfiguration;,0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,18,42,        filter.filter(this);,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,43,    },0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,43,"        return forAnnotation(annotation).process(annotation, field);",0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,18,43,"                    new FieldSetter(fieldOwner, field).set(",0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,43,        return null;,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,18,43,                return null;,0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,18,43,    },0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,44,        threadSafely().stubbingStarted();,0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,44,        InternalMockHandler oldHandler = (InternalMockHandler) getMockHandler(mock);,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,44,        List<LocalizedMatcher> matchers = new ArrayList<LocalizedMatcher>(matcherStack);,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,45,                return iterator.next().get();,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,45,    },0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,45,        MockCreationSettings settings = oldHandler.getMockSettings();,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,45,        matcherStack.clear();,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,45,    ConstructorInjection(ConstructorArgumentResolver argResolver) {,0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,18,46,        return unfilteredStackTrace;,0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,46,        MockHandler newHandler = new MockHandlerFactory().create(settings);,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,46,        return (List) matchers;,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,46,        this.argResolver = argResolver;,0.0,0,-1,0
org/mockito/configuration/DefaultMockitoConfiguration,18,46,        return true;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,46,"        this(fieldOwner, field, new NoArgConstructorInstantiator(fieldOwner, field));",0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,47,        if (annotationProcessorMap.containsKey(annotation.annotationType())) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,47,    },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,47,    },0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,48,"        mockMaker.resetMock(mock, newHandler, settings);",0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,48,            return (FieldAnnotationProcessor<A>) annotationProcessorMap.get(annotation.annotationType());,0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,48,            loader = ClassLoader.getSystemClassLoader();,0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,49,    },0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,49,                iterator.remove();,0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,18,50,            } catch (Exception e) {,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,50,            },0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,50,        return new FieldAnnotationProcessor<A>() {,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,51,            SimpleArgumentResolver simpleArgumentResolver = new SimpleArgumentResolver(mockCandidates);,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,51,"                assertNoIncompatibleAnnotations(Spy.class, field, Mock.class, org.mockito.MockitoAnnotations.Mock.class, Captor.class);",0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,18,51,"                throw new MockitoException(""Problems initiating spied field "" + field.getName(), e);",0.0,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,18,51,        return GLOBAL_CONFIGURATION.get().getReturnValues();,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,52,"            FieldInitializationReport report = new FieldInitializer(fieldOwner, field, simpleArgumentResolver).initialize();",0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,52,                field.setAccessible(true);,0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,18,52,            },0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,52,        if (mock == null) {,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,52,                return null;,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,52,        threadSafely().stubbingCompleted(invocation);,0.0,0,-1,0
org/mockito/configuration/DefaultMockitoConfiguration,18,53,        return true;,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,53,"        assertStateFor(""And(?)"", TWO_SUB_MATCHERS);",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,53,        if (verificationMode == null) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,18,53,"                assertNoAnnotations(field, Mock.class, MockitoAnnotations.Mock.class, Captor.class);",0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,53,"            throw new NotAMockException(""Argument should be a mock, but is null!"");",0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,53,    },0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,53,        } catch (IOException e) {,0.0,0,-1,0
org/mockito/internal/util/Primitives,18,53,        return (T) PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.get(primitiveOrWrapperType);,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,54,            return report.fieldWasInitializedUsingContructorArgs();,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,54,        And and = new And(popLastArgumentMatchers(TWO_SUB_MATCHERS));,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,54,    public static class OngoingMockInjection {,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,54,            return null;,0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,18,54,                mockDependentFields.add(field);,0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,54,"            throw new MockitoException(""Failed to load "" + service, e);",0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,55,        } catch (MockitoException e) {,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,55,                    instance = field.get(testInstance);,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,55,        matcherStack.push(new LocalizedMatcher(and));,0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,18,55,        return false;,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,55,        return backingHashSet.size();,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,56,            if(e.getCause() instanceof InvocationTargetException) {,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,56,"                    assertNotInterface(instance, field.getType());",0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,56,        return new HandyReturnValues();,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,56,        return threadSafely().toString();,0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,56,        if (isMockitoMock(mock)) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,57,                Throwable realCause = e.getCause().getCause();,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,57,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,57,                    if (new MockUtil().isMock(instance)) {,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,57,        VerificationMode temp = verificationMode.getObject();,0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,57,            MockHandler handler = mockMaker.getHandler(mock);,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,58,"                new Reporter().fieldInitialisationThrewException(field, realCause);",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,58,        verificationMode = null;,0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,58,            return (InternalMockHandler) handler;,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,59,        return temp;,0.0,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,18,59,        return GLOBAL_CONFIGURATION.get().cleansStackTrace();,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,59,        return backingHashSet.isEmpty();,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,60,                        Mockito.reset(instance);,0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,60,"            throw new NotAMockException(""Argument should be a mock, but is: "" + mock.getClass());",0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,60,                Class<?> pluginClass = loader.loadClass(foundPluginClass);,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,61,            return false;,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,61,                    } else if (instance != null) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,61,"        this(fieldOwner, field, new ParameterizedConstructorInstantiator(fieldOwner, field, argResolver));",0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,61,                Object plugin = pluginClass.newInstance();,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,62,"                        field.set(testInstance, Mockito.mock(instance.getClass(), withSettings()",0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,18,62,        for (Class annotation : annotations) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,62,"            this(Collections.singleton(field), fieldOwner);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,62,    },0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,62,                return service.cast(plugin);,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,63,        return backingHashSet.contains(HashCodeAndEqualsMockWrapper.of(mock));,0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,63,        if (methodsGuru.isToString(invocation.getMethod())) {,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,63,"        assertStateFor(""Or(?)"", TWO_SUB_MATCHERS);",0.0,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,18,63,        return GLOBAL_CONFIGURATION.get().enableClassCache();,0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,18,63,            if (field.isAnnotationPresent(annotation)) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,63,        },0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,63,        validateState();,0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,63,                mocks.add(mockInstance);,0.0,0,-1,0
org/mockito/MockitoAnnotations,18,64,public class MockitoAnnotations {,0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,64,            Object mock = invocation.getMock();,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,64,        Or or = new Or(popLastArgumentMatchers(TWO_SUB_MATCHERS));,0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,18,64,"                new Reporter().unsupportedCombinationOfAnnotations(annotation.getSimpleName(), InjectMocks.class.getSimpleName());",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,64,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,64,"    private FieldInitializer(Object fieldOwner, Field field, ConstructorInstantiator instantiator) {",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,64,        stubbingInProgress = new LocationImpl();,0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,65,            MockName name = mockUtil.getMockName(mock);,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,65,        matcherStack.push(new LocalizedMatcher(or));,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,65,"        if(new FieldReader(fieldOwner, field).isNull()) {",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,65,    },0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,65,        } catch (Exception e) {,0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,66,            if (name.isDefault()) {,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,66,        return new HandyReturnValues();,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,66,            return Modifier.isFinal(object.getModifiers()) || Modifier.isStatic(object.getModifiers());,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,66,            checkNotLocal(field);,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,66,"                Object mock = createMockFor(annotation, field);",0.0,0,-1,0
org/mockito/internal/configuration/plugins/PluginLoader,18,66,            throw new MockitoConfigurationException(,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,67,"                        field.set(testInstance, newSpyInstance(testInstance, field));",0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,67,        return backingHashSet.add(HashCodeAndEqualsMockWrapper.of(mock));,0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,67,"                return ""Mock for "" + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + "", hashCode: "" + mock.hashCode();",0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,18,67,    },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,67,            checkNotInner(field);,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,67,                if (mock != null) {,0.0,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,18,67,        return GLOBAL_CONFIGURATION.get().getDefaultAnswer();,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,18,68,"        if(processInjection(onField, fieldOwnedBy, mockCandidates)) {",0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,68,"                    throwIfAlreadyAssigned(field, alreadyAssigned);                    ",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,68,            checkNotInterface(field);,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,68,        return threadSafely().getArgumentMatcherStorage();,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,69,                } catch (Exception e) {,0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,69,                return name.toString();,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,18,69,            return true;,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,69,                    alreadyAssigned = true;                    ,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,69,            checkNotAbstract(field);,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,18,69,        } catch (ClassNotFoundException e) {,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,70,"                    throw new MockitoException(""Unable to initialize @Spy annotated field '"" + field.getName() + ""'.\n"" + e.getMessage(), e);",0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,71,            return instance;,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,71,                },0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,71,        return backingHashSet.remove(HashCodeAndEqualsMockWrapper.of(mock));,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,71,        throw new UnfinishedStubbingException(join(,0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,71,        } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,18,71,"        return relayProcessToNextStrategy(onField, fieldOwnedBy, mockCandidates);",0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,71,"                        new FieldSetter(testInstance, field).set(mock);",0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,18,71,            return null;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,71,        this.fieldOwner = fieldOwner;,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,72,            Location temp = stubbingInProgress;,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,72,        public SimpleArgumentResolver(Set<Object> objects) {,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,72,                    } catch (Exception e) {,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,72,"        threadSafely().mockingStarted(mock, classToMock);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,72,        this.field = field;,0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,73,"            mockUtil.maybeRedefineMockName(instance, field.getName());",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,73,            stubbingInProgress = null;,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,73,            this.objects = objects;,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,73,"        assertStateFor(""Not(?)"", ONE_SUB_MATCHER);",0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,73,"                        throw new MockitoException(""Problems setting field "" + field.getName() + "" annotated with """,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,73,    },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,73,        this.instantiator = instantiator;,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,73,"        FieldInitializationReport report = initializeInjectMocksField(injectMocksField, injectMocksFieldOwner);",0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,18,74,            return instance;,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,74,            reporter.unfinishedStubbing(temp);,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,74,        },0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,74,        Not not = new Not(popLastArgumentMatchers(ONE_SUB_MATCHER).get(0));,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,74,    },0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,75,            return invocation.getMock() == invocation.getArguments()[0] ? 0 : 1;,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,75,        matcherStack.push(new LocalizedMatcher(not));,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,75,                    },0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,75,        backingHashSet.clear();,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,76,        return new HandyReturnValues();,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,18,76,        } catch (ClassCastException e) {,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,76,        threadSafely().setListener(listener);,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,76,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,76,        boolean injectionOccurred = false;,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,77,        type = testInstance != null? testInstance.getClass() : type;,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,18,77,"            throw new MockitoConfigurationException(""MockitoConfiguration class must implement "" + IMockitoConfiguration.class.getName() + "" interface."", e);",0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,18,77,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,77,            List<Object> argumentInstances = new ArrayList<Object>(argTypes.length);,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,77,        Class<?> fieldClass = report.fieldClass();,0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,78,        return getMockHandler(mock).getMockSettings().getMockName();,0.0,0,-1,0
org/mockito/MockitoAnnotations,18,78,    @Target( { FIELD }),0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,78,        Class<?> returnType = invocation.getMethod().getReturnType();,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,78,        if (type.isInterface()) {,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,18,78,        } catch (Exception e) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,78,            for (Class<?> argType : argTypes) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,78,        Object fieldInstanceNeedingInjection = report.fieldInstance();,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,79,        throw new CloneNotSupportedException();,0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,79,        return returnValueFor(returnType);,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,79,"            throw new MockitoException(""Type '"" + type.getSimpleName() + ""' is an interface and it cannot be spied on."");",0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,18,79,"            throw new MockitoConfigurationException(""Unable to instantiate "" + MOCKITO_CONFIGURATION_CLASS_NAME +"" class. Does it have a safe, no-arg constructor?"", e);",0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,79,                argumentInstances.add(objectThatIsAssignableFrom(argType));,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,79,        while (fieldClass != Object.class) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,80,"            injectionOccurred |= injectMockCandidates(fieldClass, newMockSafeHashSet(mockCandidates), fieldInstanceNeedingInjection);",0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,80,        assertMatchersFoundFor(additionalMatcherName);,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,81,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,81,            fieldClass = fieldClass.getSuperclass();,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,81,"        assertIncorrectUseOfAdditionalMatchers(additionalMatcherName, subMatchersCount);",0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,81,            return argumentInstances.toArray();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,82,        final AccessibilityChanger changer = new AccessibilityChanger();,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,82,        if (alreadyAssigned) {,0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,82,        MockName mockName = getMockName(mock);,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,82,    },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,83,        changer.enableAccess(field);,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,83,            new Reporter().moreThanOneAnnotationNotAllowed(field.getName());,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,83,        return injectionOccurred;,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,83,        if (!(o instanceof HashCodeAndEqualsSafeSet)) {,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,84,            Location location = verificationMode.getLocation();,0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,84,        if (mockName.isDefault() && getMockHandler(mock).getMockSettings() instanceof CreationSettings) {,0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,84,            return Primitives.defaultValueForPrimitiveOrWrapper(type);,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,84,            return false;,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,85,        List<Matcher> result = new LinkedList<Matcher>();,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,85,            verificationMode = null;,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,18,85,    },0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,85,            ((CreationSettings) getMockHandler(mock).getMockSettings()).setMockName(new MockNameImpl(newName));,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,85,        MockSettings settings = withSettings(),0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,85,            for (Object object : objects) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,86,            return acquireFieldInstance();,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,86,"        result.addAll(matcherStack.subList(matcherStack.size() - count, matcherStack.size()));",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,86,            reporter.unfinishedVerificationException(location);,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,86,        HashCodeAndEqualsSafeSet that = (HashCodeAndEqualsSafeSet) o;,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,86,                if(argType.isAssignableFrom(object.getClass())) return object;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,87,        } catch(IllegalAccessException e) {,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,87,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,87,    },0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,87,        return backingHashSet.equals(that.backingHashSet);,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,87,            },0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,87,        FieldInitializationReport report = null;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,88,"            throw new MockitoException(""Problems initializing field '"" + field.getName() + ""' of type '"" + field.getType().getSimpleName() + ""'"", e);",0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,88,            matcherStack.pop();,0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,88,            return new LinkedList<Object>();,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,88,        Class<?> type = field.getType();,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,18,88,            return null;,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,18,89,"        return nextStrategy != null && nextStrategy.process(field, fieldOwner, mockCandidates);",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,89,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,89,        if (type.isInterface()) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,89,"            report = new FieldInitializer(fieldOwner, field).initialize();",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,90,            changer.safelyDisableAccess(field);,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,90,        return result;,0.0,0,-1,0
org/mockito/internal/util/MockUtil,18,90,        return getMockHandler(mock).getMockSettings();,0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,90,            return new HashSet<Object>();,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,90,"            return Mockito.mock(type, settings.useConstructor());",0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,90,        } catch (MockitoException e) {,0.0,0,-1,0
org/mockito/MockitoAnnotations,18,91,"            throw new MockitoException(""testClass cannot be null. For info how to use @Mock annotations see examples in javadoc for MockitoAnnotations class"");",0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,91,        return backingHashSet.hashCode();,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,91,            if(e.getCause() instanceof InvocationTargetException) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,92,"                injectionStrategies.process(field, fieldOwner, mocks);",0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,92,            return new HashSet<Object>();,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,92,        if (!Modifier.isStatic(type.getModifiers())) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,92,                Throwable realCause = e.getCause().getCause();,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,93,        stubbingInProgress = null;,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,93,"                postInjectionStrategies.process(field, fieldOwner, mocks);",0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,93,            Class<?> enclosing = type.getEnclosingClass();,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,93,"                new Reporter().fieldInitialisationThrewException(field, realCause);",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,94,    },0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,94,        if (matcherStack.isEmpty()) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,18,94,            },0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,94,            return new TreeSet<Object>();,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,94,            if (enclosing != null) {,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,95,            matcherStack.clear();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,95,        if(field.getType().isLocalClass()) {,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,95,                if (!enclosing.isInstance(testInstance)) {,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,95,        return unwrapTo(new Object[size()]);,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,95,"            new Reporter().cannotInitializeForInjectMocksAnnotation(field.getName(), e);",0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,96,            new Reporter().reportNoSubMatchersFound(additionalMatcherName);,0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,96,            return new TreeSet<Object>();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,96,"            throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' is a local class."");",0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,96,"                    throw new MockitoException(""@Spy annotation can only initialize inner classes declared in the test. """,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,96,        },0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,97,"        return  ""iOngoingStubbing: "" + iOngoingStubbing + ",0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,97,        return report; // never null,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,98,    },0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,98,            return new LinkedHashSet<Object>();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,98,    },0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,99,        Iterator<Object> iterator = iterator();,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,100,"        for (int i = 0, objectsLength = array.length; i < objectsLength; i++) {",0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,100,            return new LinkedList<Object>();,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,100,"                return Mockito.mock(type, settings",0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,101,            if (iterator.hasNext()) {,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,101,        if(matcherStack.size() < count) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,101,        if(field.getType().isMemberClass() && !Modifier.isStatic(field.getType().getModifiers())) {,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,102,                array[i] = (T) iterator.next();,0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,102,            return new LinkedList<Object>();,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,102,            ArrayList<LocalizedMatcher> lastMatchers = new ArrayList<LocalizedMatcher>(matcherStack);,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,102,        boolean injectionOccurred = false;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,102,"            throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' is an inner class."");",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,102,        throw new MissingMethodInvocationException(join(,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,103,            matcherStack.clear();,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,103,        List<Field> orderedInstanceFields = orderedInstanceFieldsFrom(awaitingInjectionClazz);,0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,104,            return new ArrayList<Object>();,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,104,"            new Reporter().incorrectUseOfAdditionalMatchers(additionalMatcherName, count, lastMatchers);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,104,    },0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,105,        return array;,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,105,"        injectionOccurred |= injectMockCandidatesOnFields(mocks, instance, injectionOccurred, orderedInstanceFields);",0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,106,"            return new HashMap<Object, Object>();",0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,106,    },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,107,        if(field.getType().isInterface()) {,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,107,            constructor = type.getDeclaredConstructor();,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,107,"        injectionOccurred |= injectMockCandidatesOnFields(mocks, instance, injectionOccurred, orderedInstanceFields);",0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,108,"            return new HashMap<Object, Object>();",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,108,"            throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' is an interface."");",0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,108,        } catch (NoSuchMethodException e) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,108,        return injectionOccurred;,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,109,"            throw new MockitoException(""Please ensure that the type '"" + type.getSimpleName() + ""' has 0-arg constructor."");",0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,110,"            return new TreeMap<Object, Object>();",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,110,    },0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,110,        },0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,110,        T[] array = typedArray.length >= size() ? typedArray :,0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,112,"            return new TreeMap<Object, Object>();",0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,112,        if (Modifier.isPrivate(constructor.getModifiers())) {,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,112,        return unwrapTo(array);,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,112,        for (Iterator<Field> it = orderedInstanceFields.iterator(); it.hasNext(); ) {,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,113,            ArrayList lastMatchers = new ArrayList<LocalizedMatcher>(matcherStack);,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,113,            constructor.setAccessible(true);,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,113,        if(Modifier.isAbstract(field.getType().getModifiers())) {,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,113,        if (listener instanceof MockingStartedListener) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,113,            Field field = it.next();,0.0,0,-1,0
org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues,18,114,"            return new LinkedHashMap<Object, Object>();",0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,114,            matcherStack.clear();,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,114,"            return Mockito.mock(type, settings",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,114,"            throw new MockitoException(""the type '"" + field.getType().getSimpleName() + "" is an abstract class."");",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,114,"            ((MockingStartedListener) listener).mockingStarted(mock, classToMock);",0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,114,"            Object injected = mockCandidateFilter.filterCandidate(mocks, field, instance).thenInject();",0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,18,115,            new Reporter().misplacedArgumentMatcher(lastMatchers);,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,115,            if (injected != null) {,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,116,        return backingHashSet.removeAll(asWrappedMocks(mocks));,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,116,    },0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,116,        validateMostStuff();,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,116,                injectionOccurred |= true;,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,117,        UnfinishedVerificationException exception = new UnfinishedVerificationException(join(,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,117,"            return Mockito.mock(type, settings.useConstructor());",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,117,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,117,                mocks.remove(injected);,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,118,                it.remove();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,119,        Object fieldInstance = field.get(fieldOwner);,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,120,        return backingHashSet.containsAll(asWrappedMocks(mocks));,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,120,        this.listener = listener;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,120,        if(fieldInstance != null) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,120,        },0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,18,121,    },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,121,"            return new FieldInitializationReport(fieldInstance, false, false);",0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,121,        return injectionOccurred;,0.0,0,-1,0
org/mockito/MockitoAnnotations,18,123,"            Object mock = annotationEngine.createMockFor(annotation, field);",0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,123,        for (Class u : undesiredAnnotations) {,0.0,0,-1,0
org/mockito/MockitoAnnotations,18,124,            if (mock != null) {,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,124,            if (field.isAnnotationPresent(u)) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,124,        return instantiator.instantiate();,0.0,0,-1,0
org/mockito/MockitoAnnotations,18,125,"                throwIfAlreadyAssigned(field, alreadyAssigned);",0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,125,"                new Reporter().unsupportedCombinationOfAnnotations(annotation.getSimpleName(), annotation.getClass().getSimpleName());",0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,125,        List<Field> declaredFields = Arrays.asList(awaitingInjectionClazz.getDeclaredFields());,0.0,0,-1,0
org/mockito/MockitoAnnotations,18,126,                alreadyAssigned = true;                ,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,126,"        declaredFields = ListUtil.filter(declaredFields, notFinalOrStatic);",0.0,0,-1,0
org/mockito/MockitoAnnotations,18,128,"                    new FieldSetter(testClass, field).set(mock);",0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,128,        return backingHashSet.retainAll(asWrappedMocks(mocks));,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,18,128,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,18,128,        return new SuperTypesLastSorter().sort(declaredFields);,0.0,0,-1,0
org/mockito/MockitoAnnotations,18,129,                } catch (Exception e) {,0.0,0,-1,0
org/mockito/MockitoAnnotations,18,130,"                    throw new MockitoException(""Problems setting field "" + field.getName() + "" annotated with """,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,130,        throw exception;,0.0,0,-1,0
org/mockito/MockitoAnnotations,18,132,                },0.0,0,-1,0
org/mockito/exceptions/Reporter,18,134,        throw new NotAMockException(join(,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,135,"            assert ! (mock instanceof HashCodeAndEqualsMockWrapper) : ""WRONG"";",0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,136,            hashSet.add(HashCodeAndEqualsMockWrapper.of(mock));,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,137,        },0.0,0,-1,0
org/mockito/MockitoAnnotations,18,138,        if (alreadyAssigned) {,0.0,0,-1,0
org/mockito/MockitoAnnotations,18,139,            new Reporter().moreThanOneAnnotationNotAllowed(field.getName());,0.0,0,-1,0
org/mockito/MockitoAnnotations,18,141,    },0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,142,        return backingHashSet.toString();,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,145,        throw new NullInsteadOfMockException(join(,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,153,                hashCodeAndEqualsSafeSet.add(mock);,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,18,154,            },0.0,0,-1,0
org/mockito/exceptions/Reporter,18,157,        throw new NotAMockException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,165,        throw new NullInsteadOfMockException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,169,"        NoArgConstructorInstantiator(Object testClass, Field field) {",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,170,            this.testClass = testClass;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,171,            this.field = field;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,172,        },0.0,0,-1,0
org/mockito/exceptions/Reporter,18,174,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,175,            final AccessibilityChanger changer = new AccessibilityChanger();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,176,            Constructor<?> constructor = null;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,178,                constructor = field.getType().getDeclaredConstructor();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,179,                changer.enableAccess(constructor);,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,181,                final Object[] noArg = new Object[0];,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,182,                Object newFieldInstance = constructor.newInstance(noArg);,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,183,"                new FieldSetter(testClass, field).set(newFieldInstance);",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,184,        throw new NotAMockException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,185,"                return new FieldInitializationReport(field.get(testClass), true, false);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,186,            } catch (NoSuchMethodException e) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,187,"                throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' has no default constructor"", e);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,188,            } catch (InvocationTargetException e) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,189,"                throw new MockitoException(""the default constructor of type '"" + field.getType().getSimpleName() + ""' has raised an exception (see the stack trace for cause): "" + e.getTargetException().toString(), e);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,190,            } catch (InstantiationException e) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,191,"                throw new MockitoException(""InstantiationException (see the stack trace for cause): "" + e.toString(), e);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,192,            } catch (IllegalAccessException e) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,193,"                throw new MockitoException(""IllegalAccessException (see the stack trace for cause): "" + e.toString(), e);",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,194,        throw new NullInsteadOfMockException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,195,                if(constructor != null) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,196,                    changer.safelyDisableAccess(constructor);,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,203,        throw new NotAMockException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,212,        throw new NullInsteadOfMockException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,216,          private final MockUtil mockUtil = new MockUtil();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,217,        private final Comparator<Constructor<?>> byParameterNumber = new Comparator<Constructor<?>>() {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,219,                int argLengths = constructorB.getParameterTypes().length - constructorA.getParameterTypes().length;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,220,                if (argLengths == 0) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,221,                    int constructorAMockableParamsSize = countMockableParams(constructorA);,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,221,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,222,                    int constructorBMockableParamsSize = countMockableParams(constructorB);,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,223,                    return constructorBMockableParamsSize - constructorAMockableParamsSize;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,225,                return argLengths;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,229,                int constructorMockableParamsSize = 0;,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,230,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,230,                for (Class<?> aClass : constructor.getParameterTypes()) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,231,                    if(mockUtil.isTypeMockable(aClass)){,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,232,                        constructorMockableParamsSize++;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,235,                return constructorMockableParamsSize;,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,239,        throw new InvalidUseOfMatchersException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,243,"        ParameterizedConstructorInstantiator(Object testClass, Field field, ConstructorArgumentResolver argumentResolver) {",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,244,            this.testClass = testClass;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,245,            this.field = field;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,246,            this.argResolver = argumentResolver;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,247,        },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,250,            final AccessibilityChanger changer = new AccessibilityChanger();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,251,            Constructor<?> constructor = null;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,253,                constructor = biggestConstructor(field.getType());,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,254,                changer.enableAccess(constructor);,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,256,                final Object[] args = argResolver.resolveTypeInstances(constructor.getParameterTypes());,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,257,                Object newFieldInstance = constructor.newInstance(args);,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,258,        throw new InvalidUseOfMatchersException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,258,"                new FieldSetter(testClass, field).set(newFieldInstance);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,260,"                return new FieldInitializationReport(field.get(testClass), false, true);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,261,            } catch (IllegalArgumentException e) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,262,"                throw new MockitoException(""internal error : argResolver provided incorrect types for constructor "" + constructor + "" of type "" + field.getType().getSimpleName(), e);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,263,            } catch (InvocationTargetException e) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,264,"                throw new MockitoException(""the constructor of type '"" + field.getType().getSimpleName() + ""' has raised an exception (see the stack trace for cause): "" + e.getTargetException().toString(), e);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,265,            } catch (InstantiationException e) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,266,"                throw new MockitoException(""InstantiationException (see the stack trace for cause): "" + e.toString(), e);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,267,            } catch (IllegalAccessException e) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,268,"                throw new MockitoException(""IllegalAccessException (see the stack trace for cause): "" + e.toString(), e);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,270,                if(constructor != null) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,271,                    changer.safelyDisableAccess(constructor);,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,277,            if(constructor.getParameterTypes().length == 0) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,278,"                throw new MockitoException(""the field "" + field.getName() + "" of type "" + field.getType() + "" has no parameterized constructor"");",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,279,        throw new CannotVerifyStubOnlyMock(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,280,        },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,283,            final List<Constructor<?>> constructors = Arrays.asList(clazz.getDeclaredConstructors());,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,284,"            Collections.sort(constructors, byParameterNumber);",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,286,        throw new InvalidUseOfMatchersException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,286,            Constructor<?> constructor = constructors.get(0);,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,287,"            checkParameterized(constructor, field);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,18,288,            return constructor;,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,295,        List<String> description = new ArrayList<String>();,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,296,        for (LocalizedMatcher matcher : matchers),0.0,0,-1,0
org/mockito/exceptions/Reporter,18,297,            description.add(matcher.getLocation().toString());,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,298,        return join(description.toArray());,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,302,"        String message = join(""Argument(s) are different! Wanted:"",",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,311,"        throw JUnitTool.createArgumentsAreDifferentException(message, wanted, actual);",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,315,        throw new WantedButNotInvoked(createWantedButNotInvokedMessage(wanted));,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,320,        if (invocations.isEmpty()) {,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,321,"            allInvocations = ""Actually, there were zero interactions with this mock.\n"";",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,323,"            StringBuilder sb = new StringBuilder(""\nHowever, there were other interactions with this mock:\n"");",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,324,            for (DescribedInvocation i : invocations) {,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,325,                sb.append(i.toString()),0.0,0,-1,0
org/mockito/exceptions/Reporter,18,329,            },0.0,0,-1,0
org/mockito/exceptions/Reporter,18,330,            allInvocations = sb.toString();,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,333,        String message = createWantedButNotInvokedMessage(wanted);,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,334,        throw new WantedButNotInvoked(message + allInvocations);,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,338,        return join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,347,        throw new VerificationInOrderFailure(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,360,"        String message = createTooManyInvocationsMessage(wantedCount, actualCount, wanted, firstUndesired);",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,361,        throw new TooManyActualInvocations(message);,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,366,        return join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,377,        throw new NeverWantedButInvoked(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,388,"        String message = createTooManyInvocationsMessage(wantedCount, actualCount, wanted, firstUndesired);",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,389,        throw new VerificationInOrderFailure(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,396,        String ending =,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,399,        String message = join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,406,        return message;,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,410,"        String message = createTooLittleInvocationsMessage(discrepancy, wanted, lastActualLocation);",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,412,        throw new TooLittleActualInvocations(message);,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,416,"        String message = createTooLittleInvocationsMessage(discrepancy, wanted, lastActualLocation);",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,418,        throw new VerificationInOrderFailure(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,424,        ScenarioPrinter scenarioPrinter = new ScenarioPrinter();,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,425,        String scenario = scenarioPrinter.print(invocations);,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,427,        throw new NoInteractionsWanted(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,437,        throw new VerificationInOrderFailure(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,446,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,456,        throw new CannotStubVoidMethodWithReturnValue(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,473,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,485,        throw new WrongTypeOfReturnValue(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,500,        throw new WrongTypeOfReturnValue(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,512,"        throw new MockitoAssertionError(join(""Wanted at most "" + pluralize(maxNumberOfInvocations) + "" but was "" + foundSize));",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,516,        throw new InvalidUseOfMatchersException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,534,        throw new SmartNullPointerException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,545,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,560,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,566,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,573,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,581,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,587,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,598,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,607,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,617,"        throw new MockitoException(""You cannot have more than one Mockito annotation on a field!\n"" +",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,623,"        throw new MockitoException(""This combination of annotations is not permitted on a single field:\n"" +",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,628,"        throw new MockitoException(join(""Cannot instantiate a @Spy for '"" + fieldName + ""' field."",",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,639,"        throw new MockitoException(join(""Cannot instantiate @InjectMocks field named '"" + fieldName + ""'."",",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,651,"        throw new FriendlyReminderException(join("""",",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,662,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,671,"        throw new MockitoException(""invocationListeners() does not accept null parameters"");",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,675,"        throw new MockitoException(""invocationListeners() requires at least one listener"");",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,679,        throw new MockitoException(StringJoiner.join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,685,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,695,        if (details.getCause() == null) {,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,696,            return details.getMessage();,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,698,        return details.getCause().getMessage();,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,702,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,713,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,719,"        throw new MockitoException(join(""Invalid argument index."",",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,726,        throw new MockitoException(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,739,        Class<?>[] parameterTypes = invocation.getMethod().getParameterTypes();,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,740,        if (parameterTypes.length == 0) {,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,741,"            return new StringBuilder(""the method has no arguments.\n"");",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,744,"        StringBuilder stringBuilder = new StringBuilder(""the possible argument indexes for this method are :\n"");",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,745,"        for (int i = 0, parameterTypesLength = parameterTypes.length; i < parameterTypesLength; i++) {",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,746,"            stringBuilder.append(""    ["").append(i);",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,748,            if (invocation.getMethod().isVarArgs() && i == parameterTypesLength - 1) {,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,749,"                stringBuilder.append(""+] "").append(parameterTypes[i].getComponentType().getSimpleName()).append(""  <- Vararg"").append(""\n"");",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,751,"                stringBuilder.append(""] "").append(parameterTypes[i].getSimpleName()).append(""\n"");",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,754,        return stringBuilder;,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,758,        throw new WrongTypeOfReturnValue(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,780,"        throw new MockitoException(""defaultAnswer() does not accept null parameter"");",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,784,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,796,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,806,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,18,816,"        throw new MockitoException(""Mocks instantiated with constructor cannot be combined with "" + mode + "" serialization mode."");",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,820,"        throw new FriendlyReminderException(join("""",",0.0,0,-1,0
org/mockito/exceptions/Reporter,18,829,        return new MockUtil().getMockName(mock);,0.0,0,-1,0
