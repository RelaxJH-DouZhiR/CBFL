project_path,version,lines,statement,suspicious,faulty,predict,miss_line
org/mockito/internal/matchers/Equality,22,16,"            return isArray(o2) && areArraysEqual(o1, o2);",0.33333,0,1,0
org/mockito/internal/matchers/Equality,22,23,"        return areArrayLengthsEqual(o1, o2)",0.33333,0,1,0
org/mockito/internal/matchers/Equality,22,28,        return Array.getLength(o1) == Array.getLength(o2);,0.33333,0,1,0
org/mockito/internal/matchers/Equality,22,32,        for (int i = 0; i < Array.getLength(o1); i++) {,0.33333,0,1,0
org/mockito/internal/matchers/Equality,22,33,"            if (!areEqual(Array.get(o1, i), Array.get(o2, i))) return false;",0.33333,0,1,0
org/mockito/internal/matchers/Equality,22,35,        return true;,0.33333,0,1,0
org/mockito/internal/matchers/Equality,22,14,            return o1 == null && o2 == null;,0.06667,0,-1,0
org/mockito/internal/matchers/Equality,22,15,        } else if (isArray(o1)) {,0.00392,0,-1,0
org/mockito/internal/matchers/Equality,22,18,            return o1.equals(o2);,0.00392,0,-1,0
org/mockito/internal/matchers/Equality,22,39,        return o.getClass().isArray();,0.00392,0,-1,0
org/mockito/internal/matchers/Equality,22,13,        if (o1 == null || o2 == null) {,0.00377,1,-1,0
org/mockito/internal/configuration/GlobalConfiguration,22,26,        return globalConfiguration.get();,0.00191,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,22,14,public abstract class MockInjectionStrategy {,0.00182,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,22,16,public class MockAnnotationProcessor implements FieldAnnotationProcessor<Mock> {,0.00182,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,22,16,    private final MockUtil mockUtil = new MockUtil();,0.00182,0,-1,0
org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,22,16,    public TypeBasedCandidateFilter(MockCandidateFilter next) {,0.00182,0,-1,0
org/mockito/internal/configuration/MockitoAnnotationsMockAnnotationProcessor,22,16,public class MockitoAnnotationsMockAnnotationProcessor implements FieldAnnotationProcessor<Mock> {,0.00182,0,-1,0
org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,22,17,        this.next = next;,0.00182,0,-1,0
org/mockito/internal/configuration/DefaultInjectionEngine,22,17,public class DefaultInjectionEngine {,0.00182,0,-1,0
org/mockito/internal/configuration/CaptorAnnotationProcessor,22,17,public class CaptorAnnotationProcessor implements FieldAnnotationProcessor<Captor> {,0.00182,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,22,18,    public NameBasedCandidateFilter(MockCandidateFilter next) {,0.00182,0,-1,0
org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,22,18,    },0.00182,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,22,19,        this.next = next;,0.00182,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,22,20,    },0.00182,0,-1,0
org/mockito/internal/util/collections/Sets,22,20,        return HashCodeAndEqualsSafeSet.of(mocks);,0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,22,20,        return new MockInjectionStrategy() {,0.00182,0,-1,0
org/mockito/internal/configuration/DefaultInjectionEngine,22,20,"        MockInjection.onFields(needingInjection, testClassInstance)",0.00182,0,-1,0
org/mockito/internal/util/Checks,22,21,"        checkNotNull(iterable, checkedIterable);",0.00182,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,22,22,public class FinalMockCandidateFilter implements MockCandidateFilter {,0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,22,    private MockUtil mockUtil = new MockUtil();,0.00182,0,-1,0
org/mockito/internal/util/Checks,22,22,        for (Object item : iterable) {,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,23,public class InjectingAnnotationEngine implements AnnotationEngine {,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,24,    private AnnotationEngine delegate = new DefaultAnnotationEngine();,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,25,    private AnnotationEngine spyAnnotationEngine = new SpyAnnotationEngine();,0.00182,0,-1,0
org/mockito/internal/util/Checks,22,25,        return iterable;,0.00182,0,-1,0
org/mockito/internal/configuration/DefaultInjectionEngine,22,26,    },0.00182,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,22,28,public class SpyOnInjectedFieldsHandler extends MockInjectionStrategy {,0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,22,29,    public InjectMocksScanner(Class<?> clazz) {,0.00182,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,30,"    private final Map<Class<? extends Annotation>, FieldAnnotationProcessor<?>> annotationProcessorMap = new HashMap<Class<? extends Annotation>, FieldAnnotationProcessor<?>>();",0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,22,30,        this.clazz = clazz;,0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,22,31,    },0.00182,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,32,    public DefaultAnnotationEngine() {,0.00182,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,32,public class HashCodeAndEqualsSafeSet implements Set<Object> {,0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,32,"    public MockScanner(Object instance, Class<?> clazz) {",0.00182,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,33,"        registerAnnotationProcessor(Mock.class, new MockAnnotationProcessor());",0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,33,        this.instance = instance;,0.00182,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,34,"        registerAnnotationProcessor(MockitoAnnotations.Mock.class, new MockitoAnnotationsMockAnnotationProcessor());",0.00182,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,34,    private HashSet<HashCodeAndEqualsMockWrapper> backingHashSet = new HashSet<HashCodeAndEqualsMockWrapper>();,0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,34,        this.clazz = clazz;,0.00182,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,35,"        registerAnnotationProcessor(Captor.class, new CaptorAnnotationProcessor());",0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,35,    },0.00182,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,36,    },0.00182,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,37,        return new Iterator<Object>() {,0.00182,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,38,            private Iterator<HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();,0.00182,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,39,public class SpyAnnotationEngine implements AnnotationEngine {,0.00182,0,-1,0
org/mockito/configuration/DefaultMockitoConfiguration,22,39,        return new InjectingAnnotationEngine();,0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,22,40,        mockDependentFields.addAll(scan());,0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,22,41,    },0.00182,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,41,                return iterator.hasNext();,0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,22,41,        if(nextStrategy != null) {,0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,22,42,            nextStrategy.thenTry(strategy);,0.00182,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,42,    public ConstructorInjection() { },0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,22,44,            nextStrategy = strategy;,0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,22,46,        return strategy;,0.00182,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,47,        Field[] fields = context.getDeclaredFields();,0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,47,        mocks.addAll(scan());,0.00182,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,48,        for (Field field : fields) {,0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,48,"        return new OngoingMockInjection(fields, ofInstance);",0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,48,    },0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,22,49,        Set<Field> mockDependentFields = new HashSet<Field>();,0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,22,50,        Field[] fields = clazz.getDeclaredFields();,0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,22,51,        for (Field field : fields) {,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,55,"        processIndependentAnnotations(testInstance.getClass(), testInstance);",0.00182,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,22,55,        return globalConfiguration.get().getAnnotationEngine();,0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,55,        private Set<Field> fields = new HashSet<Field>();,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,56,"        processInjectMocks(testInstance.getClass(), testInstance);",0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,56,        private Set<Object> mocks = newMockSafeHashSet();,0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,56,        Set<Object> mocks = newMockSafeHashSet();,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,57,    },0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,57,        for (Field field : clazz.getDeclaredFields()) {,0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,22,58,        return mockDependentFields;,0.00182,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,58,"        annotationProcessorMap.put(annotationClass, fieldAnnotationProcessor);",0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,58,        private MockInjectionStrategy injectionStrategies = MockInjectionStrategy.nop();,0.00182,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,59,public class PropertyAndSetterInjection extends MockInjectionStrategy {,0.00182,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,59,    },0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,59,        private MockInjectionStrategy postInjectionStrategies = MockInjectionStrategy.nop();,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,60,        Class<?> classContext = clazz;,0.00182,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,61,    private final MockCandidateFilter mockCandidateFilter = new TypeBasedCandidateFilter(new NameBasedCandidateFilter(new FinalMockCandidateFilter()));,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,61,        while (classContext != Object.class) {,0.00182,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,62,    private Comparator<Field> superTypesLast = new FieldTypeAndNameComparator();,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,62,            injectMocks(testInstance);,0.00182,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,62,        Field[] fields = clazz.getDeclaredFields();,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,63,            classContext = classContext.getSuperclass();,0.00182,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,63,        for (Field field : fields) {,0.00182,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,64,    private ListUtil.Filter<Field> notFinalOrStatic = new ListUtil.Filter<Field>() {,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,65,    },0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,65,"        private OngoingMockInjection(Set<Field> fields, Object fieldOwner) {",0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,66,"            this.fieldOwner = checkNotNull(fieldOwner, ""fieldOwner"");",0.00182,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,66,        return mocks;,0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,67,"            this.fields.addAll(checkItemsNotNull(fields, ""fields""));",0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,68,        Class<?> classContext = clazz;,0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,68,        },0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,69,        while (classContext != Object.class) {,0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,71,"            this.mocks.addAll(checkNotNull(mocks, ""mocks""));",0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,71,"            delegate.process(classContext, testInstance);",0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,72,            return this;,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,73,"            spyAnnotationEngine.process(classContext, testInstance);",0.00182,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,75,    },0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,75,            classContext = classContext.getSuperclass();,0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,76,            injectionStrategies.thenTry(new ConstructorInjection());,0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,77,            return this;,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,77,    },0.00182,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,79,    },0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,81,            injectionStrategies.thenTry(new PropertyAndSetterInjection());,0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,82,            return this;,0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,86,            postInjectionStrategies.thenTry(new SpyOnInjectedFieldsHandler());,0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,87,            return this;,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,90,        Class<?> clazz = testClassInstance.getClass();,0.00182,0,-1,0
org/mockito/MockitoAnnotations,22,90,        if (testClass == null) {,0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,91,            for (Field field : fields) {,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,91,        Set<Field> mockDependentFields = new HashSet<Field>();,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,92,        Set<Object> mocks = newMockSafeHashSet();,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,94,        while (clazz != Object.class) {,0.00182,0,-1,0
org/mockito/MockitoAnnotations,22,94,        AnnotationEngine annotationEngine = new GlobalConfiguration().getAnnotationEngine();,0.00182,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,95,        },0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,95,            new InjectMocksScanner(clazz).addTo(mockDependentFields);,0.00182,0,-1,0
org/mockito/MockitoAnnotations,22,95,        Class<?> clazz = testClass.getClass();,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,96,"            new MockScanner(testClassInstance, clazz).addPreparedMocks(mocks);",0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,97,            clazz = clazz.getSuperclass();,0.00182,0,-1,0
org/mockito/MockitoAnnotations,22,98,        if (annotationEngine.getClass() != new DefaultMockitoConfiguration().getAnnotationEngine().getClass()) {,0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,100,"        new DefaultInjectionEngine().injectMocksOnFields(mockDependentFields, mocks, testClassInstance);",0.00182,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,101,    },0.00182,0,-1,0
org/mockito/MockitoAnnotations,22,101,            while (clazz != Object.class) {,0.00182,0,-1,0
org/mockito/MockitoAnnotations,22,102,"                scanDeprecatedWay(annotationEngine, testClass, clazz);",0.00182,0,-1,0
org/mockito/MockitoAnnotations,22,103,                clazz = clazz.getSuperclass();,0.00182,0,-1,0
org/mockito/MockitoAnnotations,22,108,"        annotationEngine.process(testClass.getClass(), testClass);",0.00182,0,-1,0
org/mockito/MockitoAnnotations,22,109,    },0.00182,0,-1,0
org/mockito/MockitoAnnotations,22,112,        Field[] fields = clazz.getDeclaredFields();,0.00182,0,-1,0
org/mockito/MockitoAnnotations,22,114,        for (Field field : fields) {,0.00182,0,-1,0
org/mockito/MockitoAnnotations,22,117,    },0.00182,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,124,        return backingHashSet.addAll(asWrappedMocks(mocks));,0.00182,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,132,"        Checks.checkNotNull(mocks, ""Passed collection should notify() be null"");",0.00182,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,133,        HashSet<HashCodeAndEqualsMockWrapper> hashSet = new HashSet<HashCodeAndEqualsMockWrapper>();,0.00182,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,133,    static class FieldTypeAndNameComparator implements Comparator<Field> {,0.00182,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,134,        for (Object mock : mocks) {,0.00182,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,138,        return hashSet;,0.00182,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,146,        return of(Arrays.asList(mocks));,0.00182,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,150,        HashCodeAndEqualsSafeSet hashCodeAndEqualsSafeSet = new HashCodeAndEqualsSafeSet();,0.00182,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,151,        if (objects != null) {,0.00182,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,152,            for (Object mock : objects) {,0.00182,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,156,        return hashCodeAndEqualsSafeSet;,0.00182,0,-1,0
org/mockito/internal/util/Checks,22,14,        if(value == null) {,0.00178,0,-1,0
org/mockito/internal/util/Checks,22,17,        return value;,0.00178,0,-1,0
org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider,22,9,public class DefaultStackTraceCleanerProvider implements StackTraceCleanerProvider {,0.00177,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,16,"public class ThreadSafeMockingProgress implements MockingProgress, Serializable {",0.00177,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,19,    private static ThreadLocal<MockingProgress> mockingProgress = new ThreadLocal<MockingProgress>();,0.00177,0,-1,0
org/mockito/internal/creation/CglibMockMaker,22,19,public final class CglibMockMaker implements MockMaker {,0.00177,0,-1,0
org/mockito/configuration/DefaultMockitoConfiguration,22,20,public class DefaultMockitoConfiguration implements IMockitoConfiguration {,0.00177,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,20,public class MockingProgressImpl implements MockingProgress {,0.00177,0,-1,0
org/mockito/internal/util/MockUtil,22,21,public class MockUtil {,0.00177,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,22,    private final Reporter reporter = new Reporter();,0.00177,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,22,public class ArgumentMatcherStorageImpl implements ArgumentMatcherStorage {,0.00177,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,22,        if (mockingProgress.get() == null) {,0.00177,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,22,22,    private static ThreadLocal<IMockitoConfiguration> globalConfiguration = new ThreadLocal<IMockitoConfiguration>();,0.00177,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,23,    private final ArgumentMatcherStorage argumentMatcherStorage = new ArgumentMatcherStorageImpl();,0.00177,0,-1,0
org/mockito/internal/util/MockUtil,22,23,    private static final MockMaker mockMaker = ClassPathLoader.getMockMaker();,0.00177,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,23,            mockingProgress.set(new MockingProgressImpl());,0.00177,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,25,        return mockingProgress.get();,0.00177,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,26,    private Stack<LocalizedMatcher> matcherStack = new Stack<LocalizedMatcher>();,0.00177,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,27,    private Location stubbingInProgress = null;,0.00177,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,22,29,    public GlobalConfiguration() {,0.00177,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,22,31,        if (globalConfiguration.get() == null) {,0.00177,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,22,32,            globalConfiguration.set(createConfig());,0.00177,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,22,34,    },0.00177,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,22,37,        IMockitoConfiguration defaultConfiguration = new DefaultMockitoConfiguration();,0.00177,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,22,38,        IMockitoConfiguration config = new ClassPathLoader().loadConfiguration();,0.00177,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,22,39,        if (config != null) {,0.00177,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,22,40,            return config;,0.00177,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,22,47,        new GlobalConfiguration();,0.00177,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,22,48,    },0.00177,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,49,        threadSafely().validateState();,0.00177,0,-1,0
org/mockito/exceptions/Reporter,22,49,public class Reporter {,0.00177,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,50,    },0.00177,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,56,public class ClassPathLoader {,0.00177,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,63,    private static final MockMaker mockMaker = findPlatformMockMaker();,0.00177,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,64,    private static final StackTraceCleanerProvider stackTraceCleanerProvider =,0.00177,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,69,        validateMostStuff();,0.00177,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,72,        if (stubbingInProgress != null) {,0.00177,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,75,            configClass = (Class) Class.forName(MOCKITO_CONFIGURATION_CLASS_NAME);,0.00177,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,77,    },0.00177,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,79,        },0.00177,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,82,        GlobalConfiguration.validate();,0.00177,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,82,            return (IMockitoConfiguration) configClass.newInstance();,0.00177,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,84,        if (verificationMode != null) {,0.00177,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,90,        getArgumentMatcherStorage().validateState();,0.00177,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,91,    },0.00177,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,97,        return mockMaker;,0.00177,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,110,"        return findPluginImplementation(MockMaker.class, DEFAULT_MOCK_MAKER_CLASS);",0.00177,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,110,        return argumentMatcherStorage;,0.00177,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,112,        if (!matcherStack.isEmpty()) {,0.00177,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,114,        return findPluginImplementation(,0.00177,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,117,    },0.00177,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,119,        for (T plugin : loadImplementations(pluginType)) {,0.00177,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,127,            return pluginType.cast(Class.forName(defaultPluginClassName).newInstance());,0.00177,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,140,        ClassLoader loader = Thread.currentThread().getContextClassLoader();,0.00177,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,141,        if (loader == null) {,0.00177,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,146,"            resources = loader.getResources(""mockito-extensions/"" + service.getName());",0.00177,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,149,        },0.00177,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,151,        List<T> result = new ArrayList<T>();,0.00177,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,152,        for (URL resource : Collections.list(resources)) {,0.00177,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,169,        return result;,0.00177,0,-1,0
org/mockito/internal/matchers/Equality,22,10,public class Equality {,0.0,0,-1,0
org/mockito/internal/util/Checks,22,11,public class Checks {,0.0,0,-1,0
org/mockito/internal/util/collections/ListUtil,22,11,public class ListUtil {,0.0,0,-1,0
org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider,22,12,        return defaultCleaner;,0.0,0,-1,0
org/mockito/exceptions/misusing/CannotVerifyStubOnlyMock,22,13,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/MockitoConfigurationException,22,14,        super(message);,0.0,0,-1,0
org/mockito/exceptions/verification/SmartNullPointerException,22,14,        super(message);,0.0,0,-1,0
org/mockito/internal/util/collections/ListUtil,22,14,        LinkedList<T> filtered = new LinkedList<T>();,0.0,0,-1,0
org/mockito/internal/util/collections/Sets,22,14,public abstract class Sets {,0.0,0,-1,0
org/mockito/exceptions/misusing/CannotVerifyStubOnlyMock,22,14,    },0.0,0,-1,0
org/mockito/exceptions/misusing/WrongTypeOfReturnValue,22,14,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/FriendlyReminderException,22,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/MockitoConfigurationException,22,15,    },0.0,0,-1,0
org/mockito/exceptions/verification/NeverWantedButInvoked,22,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/InvalidUseOfMatchersException,22,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/verification/TooLittleActualInvocations,22,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/UnfinishedVerificationException,22,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/NullInsteadOfMockException,22,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/verification/VerificationInOrderFailure,22,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/verification/SmartNullPointerException,22,15,    },0.0,0,-1,0
org/mockito/internal/util/Checks,22,15,"            throw new NullPointerException(checkedValue + "" should not be null"");",0.0,0,-1,0
org/mockito/internal/util/collections/ListUtil,22,15,        for (T t : collection) {,0.0,0,-1,0
org/mockito/exceptions/misusing/NotAMockException,22,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/verification/TooManyActualInvocations,22,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/MissingMethodInvocationException,22,15,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/WrongTypeOfReturnValue,22,15,    },0.0,0,-1,0
org/mockito/exceptions/misusing/UnfinishedStubbingException,22,15,        super(message);,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializationReport,22,16,"    public FieldInitializationReport(Object fieldInstance, boolean wasInitialized, boolean wasInitializedUsingConstructorArgs) {",0.0,0,-1,0
org/mockito/exceptions/misusing/FriendlyReminderException,22,16,    },0.0,0,-1,0
org/mockito/exceptions/verification/NeverWantedButInvoked,22,16,    },0.0,0,-1,0
org/mockito/exceptions/misusing/InvalidUseOfMatchersException,22,16,    },0.0,0,-1,0
org/mockito/exceptions/verification/TooLittleActualInvocations,22,16,    },0.0,0,-1,0
org/mockito/exceptions/misusing/UnfinishedVerificationException,22,16,    },0.0,0,-1,0
org/mockito/exceptions/misusing/NullInsteadOfMockException,22,16,    },0.0,0,-1,0
org/mockito/exceptions/verification/VerificationInOrderFailure,22,16,    },0.0,0,-1,0
org/mockito/internal/util/collections/ListUtil,22,16,            if (!filter.isOut(t)) {,0.0,0,-1,0
org/mockito/internal/util/collections/Sets,22,16,        return HashCodeAndEqualsSafeSet.of(mocks);,0.0,0,-1,0
org/mockito/exceptions/misusing/NotAMockException,22,16,    },0.0,0,-1,0
org/mockito/exceptions/verification/TooManyActualInvocations,22,16,    },0.0,0,-1,0
org/mockito/exceptions/verification/WantedButNotInvoked,22,16,        super(message);,0.0,0,-1,0
org/mockito/exceptions/verification/ArgumentsAreDifferent,22,16,        super(message);,0.0,0,-1,0
org/mockito/exceptions/misusing/MissingMethodInvocationException,22,16,    },0.0,0,-1,0
org/mockito/exceptions/misusing/UnfinishedStubbingException,22,16,    },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializationReport,22,17,        this.fieldInstance = fieldInstance;,0.0,0,-1,0
org/mockito/internal/util/collections/ListUtil,22,17,                filtered.add(t);,0.0,0,-1,0
org/mockito/exceptions/verification/WantedButNotInvoked,22,17,    },0.0,0,-1,0
org/mockito/exceptions/verification/ArgumentsAreDifferent,22,17,    },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializationReport,22,18,        this.wasInitialized = wasInitialized;,0.0,0,-1,0
org/mockito/exceptions/base/MockitoAssertionError,22,18,        super(message);,0.0,0,-1,0
org/mockito/exceptions/verification/NoInteractionsWanted,22,18,        super(message);,0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,22,18,        MockSettings mockSettings = Mockito.withSettings();,0.0,0,-1,0
org/mockito/exceptions/misusing/MockitoConfigurationException,22,18,"        super(message, cause);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializationReport,22,19,        this.wasInitializedUsingConstructorArgs = wasInitializedUsingConstructorArgs;,0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,22,19,        if (annotation.extraInterfaces().length > 0) { // never null,0.0,0,-1,0
org/mockito/exceptions/verification/NoInteractionsWanted,22,19,    },0.0,0,-1,0
org/mockito/exceptions/misusing/MockitoConfigurationException,22,19,    },0.0,0,-1,0
org/mockito/internal/util/collections/ListUtil,22,19,        },0.0,0,-1,0
org/mockito/internal/configuration/CaptorAnnotationProcessor,22,19,        Class<?> type = field.getType();,0.0,0,-1,0
org/mockito/exceptions/misusing/InvalidUseOfMatchersException,22,19,"        super("""");",0.0,0,-1,0
org/mockito/internal/configuration/MockitoAnnotationsMockAnnotationProcessor,22,19,"        return Mockito.mock(field.getType(), field.getName());",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializationReport,22,20,    },0.0,0,-1,0
org/mockito/exceptions/base/MockitoAssertionError,22,20,        unfilteredStackTrace = getStackTrace();,0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,22,20,            mockSettings.extraInterfaces(annotation.extraInterfaces());,0.0,0,-1,0
org/mockito/internal/util/collections/ListUtil,22,20,        return filtered;,0.0,0,-1,0
org/mockito/internal/configuration/CaptorAnnotationProcessor,22,20,        if (!ArgumentCaptor.class.isAssignableFrom(type)) {,0.0,0,-1,0
org/mockito/exceptions/misusing/InvalidUseOfMatchersException,22,20,    },0.0,0,-1,0
org/mockito/internal/configuration/CaptorAnnotationProcessor,22,21,"            throw new MockitoException(""@Captor field must be of the type ArgumentCaptor.\n"" + ""Field: '""",0.0,0,-1,0
org/mockito/exceptions/verification/WantedButNotInvoked,22,21,        return new RemoveFirstLine().of(super.toString());,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,22,21,        List<Object> mockTypeMatches = new ArrayList<Object>();,0.0,0,-1,0
org/mockito/exceptions/verification/ArgumentsAreDifferent,22,21,        return new RemoveFirstLine().of(super.toString());,0.0,0,-1,0
org/mockito/exceptions/base/MockitoAssertionError,22,22,        ConditionalStackTraceFilter filter = new ConditionalStackTraceFilter();,0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,22,22,"        if ("""".equals(annotation.name())) {",0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,22,22,                return false;,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,22,22,        for (Object mock : mocks) {,0.0,0,-1,0
org/mockito/internal/creation/CglibMockMaker,22,22,        InternalMockHandler mockitoHandler = cast(handler);,0.0,0,-1,0
org/mockito/internal/util/collections/ListUtil,22,23,    public interface Filter<T> {,0.0,0,-1,0
org/mockito/exceptions/base/MockitoAssertionError,22,23,        filter.filter(this);,0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,22,23,            mockSettings.name(field.getName());,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,22,23,        List<Object> mockNameMatches = new ArrayList<Object>();,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,22,23,            if (field.getType().isAssignableFrom(mock.getClass())) {,0.0,0,-1,0
org/mockito/internal/creation/CglibMockMaker,22,23,        new AcrossJVMSerializationFeature().enableSerializationAcrossJVM(settings);,0.0,0,-1,0
org/mockito/internal/util/Checks,22,23,"            checkNotNull(item, ""item in "" + checkedIterable);",0.0,0,-1,0
org/mockito/internal/util/collections/Sets,22,24,        return new IdentitySet();,0.0,0,-1,0
org/mockito/exceptions/base/MockitoAssertionError,22,24,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,22,24,        if(mocks.size() == 1) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,22,24,        if(mocks.size() > 1) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,22,24,                mockTypeMatches.add(mock);,0.0,0,-1,0
org/mockito/internal/creation/CglibMockMaker,22,24,        return ClassImposterizer.INSTANCE.imposterise(,0.0,0,-1,0
org/mockito/internal/util/Checks,22,24,        },0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,25,public class MockInjection {,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,22,25,            final Object matchingMock = mocks.iterator().next();,0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,22,25,            mockSettings.name(annotation.name());,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,22,25,            for (Object mock : mocks) {,0.0,0,-1,0
org/mockito/internal/configuration/CaptorAnnotationProcessor,22,25,        Class cls = new GenericMaster().getGenericType(field);,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,26,      return !type.isPrimitive() && !Modifier.isFinal(type.getModifiers());,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,22,26,                if (field.getName().equals(mockUtil.getMockName(mock).toString())) {,0.0,0,-1,0
org/mockito/internal/configuration/CaptorAnnotationProcessor,22,26,        return ArgumentCaptor.forClass(cls);,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,22,26,        },0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,22,27,            return new OngoingInjecter() {,0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,22,27,        if(annotation.serializable()){,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,22,27,                    mockNameMatches.add(mock);,0.0,0,-1,0
org/mockito/exceptions/base/MockitoAssertionError,22,27,        return unfilteredStackTrace;,0.0,0,-1,0
org/mockito/configuration/DefaultMockitoConfiguration,22,27,"        throw new RuntimeException(""\n"" + ""This method should not be used by the framework because it was deprecated""",0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,22,28,        	mockSettings.serializable();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializationReport,22,28,        return fieldInstance;,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter,22,28,"        return next.filterCandidate(mockTypeMatches, field, fieldInstance);",0.0,0,-1,0
org/mockito/internal/util/collections/Sets,22,28,        if (elements == null) {,0.0,0,-1,0
org/mockito/internal/creation/CglibMockMaker,22,29,        if (!(handler instanceof InternalMockHandler)) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,22,29,            },0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,22,29,"        super(message, t);",0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,29,        threadSafely().reportOngoingStubbing(iOngoingStubbing);,0.0,0,-1,0
org/mockito/internal/util/collections/Sets,22,29,"            throw new IllegalArgumentException(""Expected an array of elements (or empty array) but received a null."");",0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,22,30,"                        if (!new BeanPropertySetter(fieldInstance, field).set(matchingMock)) {",0.0,0,-1,0
org/mockito/internal/creation/CglibMockMaker,22,30,"            throw new MockitoException(""At the moment you cannot provide own implementations of MockHandler."" +",0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,22,30,"            return next.filterCandidate(mockNameMatches, field, fieldInstance);",0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,22,30,        filterStackTrace();,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,30,    },0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,30,        MockHandler mockHandler = new MockHandlerFactory().create(settings);,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,31,        this.iOngoingStubbing = iOngoingStubbing;,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,22,31,"                            new FieldSetter(fieldInstance, field).set(matchingMock);",0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,22,31,    },0.0,0,-1,0
org/mockito/internal/util/collections/Sets,22,31,        return new LinkedHashSet<T>(asList(elements));,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,32,    },0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,32,        matcherStack.push(new LocalizedMatcher(matcher));,0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,22,32,        mockSettings.defaultAnswer(annotation.answer().get());,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter,22,32,"        return next.filterCandidate(mocks, field, fieldInstance);",0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,22,32,"        FieldReader fieldReader = new FieldReader(fieldOwner, field);",0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,32,"        T mock = mockMaker.createMock(settings, mockHandler);",0.0,0,-1,0
org/mockito/configuration/DefaultMockitoConfiguration,22,32,        return new ReturnsEmptyValues();,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,33,        return new HandyReturnValues();,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,22,33,                    } catch (RuntimeException e) {,0.0,0,-1,0
org/mockito/internal/configuration/MockAnnotationProcessor,22,33,"        return Mockito.mock(field.getType(), mockSettings);",0.0,0,-1,0
org/mockito/internal/creation/CglibMockMaker,22,33,        return (InternalMockHandler) handler;,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,33,        return threadSafely().pullOngoingStubbing();,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,22,34,"                        new Reporter().cannotInjectDependency(field, matchingMock, e);",0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,22,34,        super(message);,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,34,        Object spiedInstance = settings.getSpiedInstance();,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,35,        IOngoingStubbing temp = iOngoingStubbing;,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,22,35,                    },0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,22,35,        filterStackTrace();,0.0,0,-1,0
org/mockito/internal/configuration/InjectingAnnotationEngine,22,35,"        return delegate.createMockFor(annotation, field);",0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,22,35,        if(!fieldReader.isNull() && field.isAnnotationPresent(Spy.class)) {,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,35,        if (spiedInstance != null) {,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,36,        iOngoingStubbing = null;,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,22,36,                    return matchingMock;,0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,22,36,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,36,"        return new OngoingMockInjection(field, ofInstance);",0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,36,"            new LenientCopyTool().copyToMock(spiedInstance, mock);",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,37,        return temp;,0.0,0,-1,0
org/mockito/internal/creation/CglibMockMaker,22,37,"        ((Factory) mock).setCallback(0, new MethodInterceptorFilter(cast(newHandler), settings));",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializationReport,22,37,        return wasInitialized;,0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,22,37,                Object instance = fieldReader.read();,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,37,        threadSafely().verificationStarted(verify);,0.0,0,-1,0
org/mockito/internal/creation/CglibMockMaker,22,38,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,22,38,                if (new MockUtil().isMock(instance)) {,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,38,    },0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,22,39,        unfilteredStackTrace = getStackTrace();,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,39,        return mock;,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,40,        if (matcherStack.isEmpty()) {,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,41,        validateState();,0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,22,41,        return new OngoingInjecter() {,0.0,0,-1,0
org/mockito/internal/creation/CglibMockMaker,22,41,        if (!(mock instanceof Factory)) {,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,41,            return Collections.emptyList();,0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,22,41,                    Mockito.reset(instance);,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,41,        return threadSafely().pullVerificationMode();,0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,22,41,        ConditionalStackTraceFilter filter = new ConditionalStackTraceFilter();,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,42,        resetOngoingStubbing();,0.0,0,-1,0
org/mockito/internal/creation/CglibMockMaker,22,42,            return null;,0.0,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,22,42,            return defaultConfiguration;,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,42,        return null;,0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,22,42,        filter.filter(this);,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,43,        verificationMode = new Localized(verify);,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,43,"        return forAnnotation(annotation).process(annotation, field);",0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,43,        InternalMockHandler oldHandler = (InternalMockHandler) getMockHandler(mock);,0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,22,43,"                    new FieldSetter(fieldOwner, field).set(",0.0,0,-1,0
org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter,22,43,                return null;,0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,22,43,    },0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,44,    },0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,44,        MockCreationSettings settings = oldHandler.getMockSettings();,0.0,0,-1,0
org/mockito/internal/creation/CglibMockMaker,22,44,        Factory factory = (Factory) mock;,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,44,        List<LocalizedMatcher> matchers = new ArrayList<LocalizedMatcher>(matcherStack);,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,45,                return iterator.next().get();,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,45,        threadSafely().stubbingStarted();,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,45,        MockHandler newHandler = new MockHandlerFactory().create(settings);,0.0,0,-1,0
org/mockito/internal/creation/CglibMockMaker,22,45,        Callback callback = factory.getCallback(0);,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,45,        matcherStack.clear();,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,45,    ConstructorInjection(ConstructorArgumentResolver argResolver) {,0.0,0,-1,0
org/mockito/exceptions/base/MockitoException,22,46,        return unfilteredStackTrace;,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,46,    },0.0,0,-1,0
org/mockito/internal/creation/CglibMockMaker,22,46,        if (!(callback instanceof MethodInterceptorFilter)) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializationReport,22,46,        return wasInitializedUsingConstructorArgs;,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,46,        return (List) matchers;,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,46,        this.argResolver = argResolver;,0.0,0,-1,0
org/mockito/configuration/DefaultMockitoConfiguration,22,46,        return true;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,46,"        this(fieldOwner, field, new NoArgConstructorInstantiator(fieldOwner, field));",0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,47,"        mockMaker.resetMock(mock, newHandler, settings);",0.0,0,-1,0
org/mockito/internal/creation/CglibMockMaker,22,47,            return null;,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,47,        if (annotationProcessorMap.containsKey(annotation.annotationType())) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,47,    },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,47,    },0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,48,    },0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,48,            return (FieldAnnotationProcessor<A>) annotationProcessorMap.get(annotation.annotationType());,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,49,            if (field.isAnnotationPresent(Spy.class) && !field.isAnnotationPresent(InjectMocks.class)) {,0.0,0,-1,0
org/mockito/internal/creation/CglibMockMaker,22,49,        return ((MethodInterceptorFilter) callback).getHandler();,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,49,                iterator.remove();,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,50,"                assertNoIncompatibleAnnotations(Spy.class, field, Mock.class, org.mockito.MockitoAnnotations.Mock.class, Captor.class);",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,50,        iOngoingStubbing = null;,0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,22,50,            } catch (Exception e) {,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,50,            },0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,50,        return new FieldAnnotationProcessor<A>() {,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,51,            SimpleArgumentResolver simpleArgumentResolver = new SimpleArgumentResolver(mockCandidates);,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,51,                Object instance = null;,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,51,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,22,51,"                throw new MockitoException(""Problems initiating spied field "" + field.getName(), e);",0.0,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,22,51,        return globalConfiguration.get().getReturnValues();,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,51,        if (mock == null) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,52,"            FieldInitializationReport report = new FieldInitializer(fieldOwner, field, simpleArgumentResolver).initialize();",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,52,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,22,52,            if (null != field.getAnnotation(InjectMocks.class)) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,22,52,            },0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,52,"            throw new NotAMockException(""Argument should be a mock, but is null!"");",0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,52,                return null;,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,53,"                    FieldInitializationReport report = new FieldInitializer(testInstance, field).initialize();",0.0,0,-1,0
org/mockito/configuration/DefaultMockitoConfiguration,22,53,        return true;,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,53,"        assertStateFor(""And(?)"", TWO_SUB_MATCHERS);",0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,22,53,"                assertNoAnnotations(field, Mock.class, MockitoAnnotations.Mock.class, Captor.class);",0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,53,        threadSafely().stubbingCompleted(invocation);,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,54,            return report.fieldWasInitializedUsingContructorArgs();,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,54,                    instance = report.fieldInstance();,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,54,        And and = new And(popLastArgumentMatchers(TWO_SUB_MATCHERS));,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,54,    public static class OngoingMockInjection {,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,54,        if (verificationMode == null) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,22,54,                mockDependentFields.add(field);,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,54,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,55,        } catch (MockitoException e) {,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,55,                } catch (MockitoException e) {,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,55,        matcherStack.push(new LocalizedMatcher(and));,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,55,            return null;,0.0,0,-1,0
org/mockito/internal/configuration/injection/SpyOnInjectedFieldsHandler,22,55,        return false;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializationReport,22,55,        return fieldInstance != null ? fieldInstance.getClass() : null;,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,55,        if (isMockitoMock(mock)) {,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,55,        return backingHashSet.size();,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,56,            if(e.getCause() instanceof InvocationTargetException) {,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,56,"                    new Reporter().cannotInitializeForSpyAnnotation(field.getName(), e);",0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,56,        return new HandyReturnValues();,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,56,            MockHandler handler = mockMaker.getHandler(mock);,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,57,                Throwable realCause = e.getCause().getCause();,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,57,                },0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,57,        return threadSafely().toString();,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,57,            return (InternalMockHandler) handler;,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,58,"                new Reporter().fieldInitialisationThrewException(field, realCause);",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,58,        VerificationMode temp = verificationMode.getObject();,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,59,                    if (new MockUtil().isMock(instance)) {,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,59,        verificationMode = null;,0.0,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,22,59,        return globalConfiguration.get().cleansStackTrace();,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,59,        return backingHashSet.isEmpty();,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,59,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,59,"            throw new NotAMockException(""Argument should be a mock, but is: "" + mock.getClass());",0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,59,"            FieldReader fieldReader = new FieldReader(instance, field);",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,60,        return temp;,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,61,            return false;,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,61,        threadSafely().reset();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,61,"        this(fieldOwner, field, new ParameterizedConstructorInstantiator(fieldOwner, field, argResolver));",0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,61,"            Object mockInstance = preparedMock(fieldReader.read(), field);",0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,62,                        Mockito.reset(instance);,0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,22,62,        for (Class annotation : annotations) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,62,"            this(Collections.singleton(field), fieldOwner);",0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,62,    },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,62,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,62,            if (mockInstance != null) {,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,63,        return backingHashSet.contains(HashCodeAndEqualsMockWrapper.of(mock));,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,63,"        assertStateFor(""Or(?)"", TWO_SUB_MATCHERS);",0.0,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,22,63,        return globalConfiguration.get().enableClassCache();,0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,22,63,            if (field.isAnnotationPresent(annotation)) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,63,        },0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,63,                mocks.add(mockInstance);,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,64,                        field.setAccessible(true);,0.0,0,-1,0
org/mockito/MockitoAnnotations,22,64,public class MockitoAnnotations {,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,64,        Or or = new Or(popLastArgumentMatchers(TWO_SUB_MATCHERS));,0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,22,64,"                new Reporter().unsupportedCombinationOfAnnotations(annotation.getSimpleName(), InjectMocks.class.getSimpleName());",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,64,"    private FieldInitializer(Object fieldOwner, Field field, ConstructorInstantiator instantiator) {",0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,64,            boolean alreadyAssigned = false;,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,64,        validateState();,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,65,"                        field.set(testInstance, Mockito.mock(instance.getClass(), withSettings()",0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,65,        threadSafely().resetOngoingStubbing();,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,65,        matcherStack.push(new LocalizedMatcher(or));,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,65,"        if(new FieldReader(fieldOwner, field).isNull()) {",0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,65,            for(Annotation annotation : field.getAnnotations()) {           ,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,65,        stubbingInProgress = new LocationImpl();,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,65,        return isMockitoMock(mock);,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,66,        throw new UnfinishedStubbingException(join(,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,66,    },0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,66,        return new HandyReturnValues();,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,66,            return Modifier.isFinal(object.getModifiers()) || Modifier.isStatic(object.getModifiers());,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,66,            checkNotLocal(field);,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,66,"                Object mock = createMockFor(annotation, field);",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,66,    },0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,67,        return backingHashSet.add(HashCodeAndEqualsMockWrapper.of(mock));,0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/InjectMocksScanner,22,67,    },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,67,            checkNotInner(field);,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,67,                if (mock != null) {,0.0,0,-1,0
org/mockito/internal/configuration/GlobalConfiguration,22,67,        return globalConfiguration.get().getDefaultAnswer();,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,22,68,"        if(processInjection(onField, fieldOwnedBy, mockCandidates)) {",0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,68,"                    throwIfAlreadyAssigned(field, alreadyAssigned);                    ",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,68,            checkNotInterface(field);,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,69,        return isMockitoMock(mock) && getMockSettings(mock).getSpiedInstance() != null;,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,22,69,            return true;,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,69,                    alreadyAssigned = true;                    ,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,69,            checkNotAbstract(field);,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,69,        return threadSafely().getArgumentMatcherStorage();,0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,70,        if (isAnnotatedByMockOrSpy(field)) {,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,70,                } catch (IllegalAccessException e) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,71,            return instance;,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,71,"                    throw new MockitoException(""Problems initiating spied field "" + field.getName(), e);",0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,71,        return backingHashSet.remove(HashCodeAndEqualsMockWrapper.of(mock));,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,22,71,"        return relayProcessToNextStrategy(onField, fieldOwnedBy, mockCandidates);",0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,71,"                        new FieldSetter(testInstance, field).set(mock);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,71,        this.fieldOwner = fieldOwner;,0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,72,        } else if (isMockOrSpy(instance)) {,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,72,                },0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,72,        public SimpleArgumentResolver(Set<Object> objects) {,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,72,                    } catch (Exception e) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,72,        this.field = field;,0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,73,"            mockUtil.maybeRedefineMockName(instance, field.getName());",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,73,            Location temp = stubbingInProgress;,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,73,            this.objects = objects;,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,73,        return mockMaker.getHandler(mock) != null;,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,73,"        assertStateFor(""Not(?)"", ONE_SUB_MATCHER);",0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,73,"                        throw new MockitoException(""Problems setting field "" + field.getName() + "" annotated with """,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,73,"        threadSafely().mockingStarted(mock, classToMock);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,73,        this.instantiator = instantiator;,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,73,"        FieldInitializationReport report = initializeInjectMocksField(injectMocksField, injectMocksFieldOwner);",0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,74,            return instance;,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,74,            stubbingInProgress = null;,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,74,        },0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,74,        Not not = new Not(popLastArgumentMatchers(ONE_SUB_MATCHER).get(0));,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,74,    },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,74,    },0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,75,            reporter.unfinishedStubbing(temp);,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,75,        matcherStack.push(new LocalizedMatcher(not));,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,75,                    },0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,75,        backingHashSet.clear();,0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,76,        return null;,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,76,        return new HandyReturnValues();,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,76,        } catch (ClassNotFoundException e) {,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,76,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,76,        boolean injectionOccurred = false;,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,77,        return getMockHandler(mock).getMockSettings().getMockName();,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,77,        threadSafely().setListener(listener);,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,77,            List<Object> argumentInstances = new ArrayList<Object>(argTypes.length);,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,77,        Class<?> fieldClass = report.fieldClass();,0.0,0,-1,0
org/mockito/MockitoAnnotations,22,78,    @Target( { FIELD }),0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,78,            return null;,0.0,0,-1,0
org/mockito/internal/progress/ThreadSafeMockingProgress,22,78,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,78,            for (Class<?> argType : argTypes) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,78,        Object fieldInstanceNeedingInjection = report.fieldInstance();,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,79,        throw new CloneNotSupportedException();,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,79,        for (Class u : undesiredAnnotations) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,79,                argumentInstances.add(objectThatIsAssignableFrom(argType));,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,79,        while (fieldClass != Object.class) {,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,80,            if (field.isAnnotationPresent(u)) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,80,"            injectionOccurred |= injectMockCandidates(fieldClass, newMockSafeHashSet(mockCandidates), fieldInstanceNeedingInjection);",0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,80,        return null != field.getAnnotation(Spy.class),0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,80,        assertMatchersFoundFor(additionalMatcherName);,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,81,        MockName mockName = getMockName(mock);,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,81,"                new Reporter().unsupportedCombinationOfAnnotations(annotation.getSimpleName(), annotation.getClass().getSimpleName());",0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,81,            fieldClass = fieldClass.getSuperclass();,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,81,"        assertIncorrectUseOfAdditionalMatchers(additionalMatcherName, subMatchersCount);",0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,81,            return argumentInstances.toArray();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,82,        final AccessibilityChanger changer = new AccessibilityChanger();,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,82,        if (alreadyAssigned) {,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,82,    },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,83,        changer.enableAccess(field);,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,83,            new Reporter().moreThanOneAnnotationNotAllowed(field.getName());,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,83,        if (mockName.isDefault() && getMockHandler(mock).getMockSettings() instanceof CreationSettings) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,83,        return injectionOccurred;,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,83,        } catch (ClassCastException e) {,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,83,        if (!(o instanceof HashCodeAndEqualsSafeSet)) {,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,84,            ((CreationSettings) getMockHandler(mock).getMockSettings()).setMockName(new MockNameImpl(newName));,0.0,0,-1,0
org/mockito/internal/configuration/SpyAnnotationEngine,22,84,    }    ,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,84,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,84,"            throw new MockitoConfigurationException(""MockitoConfiguration class must implement "" + IMockitoConfiguration.class.getName() + "" interface."", e);",0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,84,            return false;,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,85,        List<Matcher> result = new LinkedList<Matcher>();,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,85,            Location location = verificationMode.getLocation();,0.0,0,-1,0
org/mockito/internal/configuration/DefaultAnnotationEngine,22,85,    },0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,85,        } catch (Exception e) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,85,            for (Object object : objects) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,86,            return acquireFieldInstance();,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,86,"        result.addAll(matcherStack.subList(matcherStack.size() - count, matcherStack.size()));",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,86,            verificationMode = null;,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,86,    },0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,86,"            throw new MockitoConfigurationException(""Unable to instantiate "" + MOCKITO_CONFIGURATION_CLASS_NAME +"" class. Does it have a safe, no-arg constructor?"", e);",0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,86,        HashCodeAndEqualsSafeSet that = (HashCodeAndEqualsSafeSet) o;,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,86,                if(argType.isAssignableFrom(object.getClass())) return object;,0.0,0,-1,0
org/mockito/internal/configuration/injection/scanner/MockScanner,22,86,        return mockUtil.isMock(instance),0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,87,        } catch(IllegalAccessException e) {,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,87,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,87,            reporter.unfinishedVerificationException(location);,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,87,        return backingHashSet.equals(that.backingHashSet);,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,87,            },0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,87,        FieldInitializationReport report = null;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,88,"            throw new MockitoException(""Problems initializing field '"" + field.getName() + ""' of type '"" + field.getType().getSimpleName() + ""'"", e);",0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,88,            matcherStack.pop();,0.0,0,-1,0
org/mockito/internal/configuration/injection/ConstructorInjection,22,88,            return null;,0.0,0,-1,0
org/mockito/internal/util/MockUtil,22,89,        return getMockHandler(mock).getMockSettings();,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjectionStrategy,22,89,"        return nextStrategy != null && nextStrategy.process(field, fieldOwner, mockCandidates);",0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,89,"            report = new FieldInitializer(fieldOwner, field).initialize();",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,90,            changer.safelyDisableAccess(field);,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,90,        return result;,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,90,        } catch (MockitoException e) {,0.0,0,-1,0
org/mockito/MockitoAnnotations,22,91,"            throw new MockitoException(""testClass cannot be null. For info how to use @Mock annotations see examples in javadoc for MockitoAnnotations class"");",0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,91,        return backingHashSet.hashCode();,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,91,            if(e.getCause() instanceof InvocationTargetException) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,92,"                injectionStrategies.process(field, fieldOwner, mocks);",0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,92,                Throwable realCause = e.getCause().getCause();,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,93,"                postInjectionStrategies.process(field, fieldOwner, mocks);",0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,93,"                new Reporter().fieldInitialisationThrewException(field, realCause);",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,94,        stubbingInProgress = null;,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,94,        if (matcherStack.isEmpty()) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/MockInjection,22,94,            },0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,95,    },0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,95,            matcherStack.clear();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,95,        if(field.getType().isLocalClass()) {,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,95,        return unwrapTo(new Object[size()]);,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,95,"            new Reporter().cannotInitializeForInjectMocksAnnotation(field.getName(), e);",0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,96,            new Reporter().reportNoSubMatchersFound(additionalMatcherName);,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,96,"            throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' is a local class."");",0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,96,        },0.0,0,-1,0
org/mockito/exceptions/Reporter,22,97,        throw new MissingMethodInvocationException(join(,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,97,        return report; // never null,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,98,    },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,98,    },0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,98,"        return  ""iOngoingStubbing: "" + iOngoingStubbing + ",0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,99,        Iterator<Object> iterator = iterator();,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,100,"        for (int i = 0, objectsLength = array.length; i < objectsLength; i++) {",0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,101,            if (iterator.hasNext()) {,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,101,        if(matcherStack.size() < count) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,101,        if(field.getType().isMemberClass() && !Modifier.isStatic(field.getType().getModifiers())) {,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,102,                array[i] = (T) iterator.next();,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,102,        return stackTraceCleanerProvider;,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,102,            ArrayList<LocalizedMatcher> lastMatchers = new ArrayList<LocalizedMatcher>(matcherStack);,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,102,        boolean injectionOccurred = false;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,102,"            throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' is an inner class."");",0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,103,            matcherStack.clear();,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,103,        List<Field> orderedInstanceFields = orderedInstanceFieldsFrom(awaitingInjectionClazz);,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,104,"            new Reporter().incorrectUseOfAdditionalMatchers(additionalMatcherName, count, lastMatchers);",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,104,        stubbingInProgress = null;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,104,    },0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,105,        return array;,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,105,        verificationMode = null;,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,105,"        injectionOccurred |= injectMockCandidatesOnFields(mocks, instance, injectionOccurred, orderedInstanceFields);",0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,106,    },0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,106,        getArgumentMatcherStorage().reset();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,107,        if(field.getType().isInterface()) {,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,107,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,107,"        injectionOccurred |= injectMockCandidatesOnFields(mocks, instance, injectionOccurred, orderedInstanceFields);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,108,"            throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' is an interface."");",0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,108,        return injectionOccurred;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,110,    },0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,110,        T[] array = typedArray.length >= size() ? typedArray :,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,112,        return unwrapTo(array);,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,112,        for (Iterator<Field> it = orderedInstanceFields.iterator(); it.hasNext(); ) {,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,113,            ArrayList lastMatchers = new ArrayList<LocalizedMatcher>(matcherStack);,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,113,        UnfinishedVerificationException exception = new UnfinishedVerificationException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,113,        if(Modifier.isAbstract(field.getType().getModifiers())) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,113,            Field field = it.next();,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,114,            matcherStack.clear();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,114,"            throw new MockitoException(""the type '"" + field.getType().getSimpleName() + "" is an abstract class."");",0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,114,        if (listener != null && listener instanceof MockingStartedListener) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,114,"            Object injected = mockCandidateFilter.filterCandidate(mocks, field, instance).thenInject();",0.0,0,-1,0
org/mockito/MockitoAnnotations,22,115,"            processAnnotationDeprecatedWay(annotationEngine, testClass, field);",0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,115,            new Reporter().misplacedArgumentMatcher(lastMatchers);,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,115,"            ((MockingStartedListener) listener).mockingStarted(mock, classToMock);",0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,115,            if (injected != null) {,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,116,        return backingHashSet.removeAll(asWrappedMocks(mocks));,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,116,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,116,                injectionOccurred |= true;,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,117,        validateMostStuff();,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,117,                mocks.remove(injected);,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,118,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,118,                it.remove();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,119,        Object fieldInstance = field.get(fieldOwner);,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,120,            return plugin; // return the first one service loader finds (if any),0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,120,        return backingHashSet.containsAll(asWrappedMocks(mocks));,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,120,        if(fieldInstance != null) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,120,        },0.0,0,-1,0
org/mockito/MockitoAnnotations,22,121,        boolean alreadyAssigned = false;,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,121,        this.listener = listener;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,121,"            return new FieldInitializationReport(fieldInstance, false, false);",0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,121,        return injectionOccurred;,0.0,0,-1,0
org/mockito/MockitoAnnotations,22,122,        for(Annotation annotation : field.getAnnotations()) {,0.0,0,-1,0
org/mockito/internal/progress/MockingProgressImpl,22,122,    },0.0,0,-1,0
org/mockito/MockitoAnnotations,22,123,"            Object mock = annotationEngine.createMockFor(annotation, field);",0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,123,        matcherStack.clear();,0.0,0,-1,0
org/mockito/MockitoAnnotations,22,124,            if (mock != null) {,0.0,0,-1,0
org/mockito/internal/progress/ArgumentMatcherStorageImpl,22,124,    },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,124,        return instantiator.instantiate();,0.0,0,-1,0
org/mockito/MockitoAnnotations,22,125,"                throwIfAlreadyAssigned(field, alreadyAssigned);",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,125,        throw exception;,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,125,        List<Field> declaredFields = Arrays.asList(awaitingInjectionClazz.getDeclaredFields());,0.0,0,-1,0
org/mockito/MockitoAnnotations,22,126,                alreadyAssigned = true;                ,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,126,"        declaredFields = ListUtil.filter(declaredFields, notFinalOrStatic);",0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,128,        } catch (Exception e) {,0.0,0,-1,0
org/mockito/MockitoAnnotations,22,128,"                    new FieldSetter(testClass, field).set(mock);",0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,128,        return backingHashSet.retainAll(asWrappedMocks(mocks));,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,128,"        Collections.sort(declaredFields, superTypesLast);",0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,129,"            throw new MockitoException(""Internal problem occurred, please report it. "" +",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,129,        throw new NotAMockException(join(,0.0,0,-1,0
org/mockito/MockitoAnnotations,22,129,                } catch (Exception e) {,0.0,0,-1,0
org/mockito/MockitoAnnotations,22,130,"                    throw new MockitoException(""Problems setting field "" + field.getName() + "" annotated with """,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,130,        return declaredFields;,0.0,0,-1,0
org/mockito/MockitoAnnotations,22,132,                },0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,135,"            assert ! (mock instanceof HashCodeAndEqualsMockWrapper) : ""WRONG"";",0.0,0,-1,0
org/mockito/MockitoAnnotations,22,135,    },0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,135,            Class<?> field1Type = field1.getType();,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,136,            hashSet.add(HashCodeAndEqualsMockWrapper.of(mock));,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,136,            Class<?> field2Type = field2.getType();,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,137,        },0.0,0,-1,0
org/mockito/MockitoAnnotations,22,138,        if (alreadyAssigned) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,139,            if (field1Type == field2Type) {,0.0,0,-1,0
org/mockito/MockitoAnnotations,22,139,            new Reporter().moreThanOneAnnotationNotAllowed(field.getName());,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,140,        throw new NullInsteadOfMockException(join(,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,140,                return field1.getName().compareTo(field2.getName());,0.0,0,-1,0
org/mockito/MockitoAnnotations,22,141,    },0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,142,            loader = ClassLoader.getSystemClassLoader();,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,142,        return backingHashSet.toString();,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,142,            if(field1Type.isAssignableFrom(field2Type)) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,143,                return 1;,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,145,            if(field2Type.isAssignableFrom(field1Type)) {,0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,146,                return -1;,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,147,        } catch (IOException e) {,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,148,"            throw new MockitoException(""Failed to load "" + service, e);",0.0,0,-1,0
org/mockito/internal/configuration/injection/PropertyAndSetterInjection,22,148,            return 0;,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,152,        throw new NotAMockException(join(,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,153,                hashCodeAndEqualsSafeSet.add(mock);,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,153,            InputStream in = null;,0.0,0,-1,0
org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet,22,154,            },0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,155,                in = resource.openStream();,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,156,"                for (String line : readerToLines(new InputStreamReader(in, ""UTF-8""))) {",0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,157,                    String name = stripCommentAndWhitespace(line);,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,158,                    if (name.length() != 0) {,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,159,                        result.add(service.cast(loader.loadClass(name).newInstance()));,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,160,        throw new NullInsteadOfMockException(join(,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,161,                },0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,162,            } catch (Exception e) {,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,163,                throw new MockitoConfigurationException(,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,166,                closeQuietly(in);,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,167,            },0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,168,        },0.0,0,-1,0
org/mockito/exceptions/Reporter,22,169,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,169,"        NoArgConstructorInstantiator(Object testClass, Field field) {",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,170,            this.testClass = testClass;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,171,            this.field = field;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,172,        },0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,173,        List<String> result = new ArrayList<String>();,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,174,        BufferedReader lineReader = new BufferedReader(reader);,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,175,            final AccessibilityChanger changer = new AccessibilityChanger();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,176,            Constructor<?> constructor = null;,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,176,        while ((line = lineReader.readLine()) != null) {,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,177,            result.add(line);,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,178,                constructor = field.getType().getDeclaredConstructor();,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,179,        throw new NotAMockException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,179,                changer.enableAccess(constructor);,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,179,        return result;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,181,                final Object[] noArg = new Object[0];,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,182,                Object newFieldInstance = constructor.newInstance(noArg);,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,183,        int hash = line.indexOf('#');,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,183,"                new FieldSetter(testClass, field).set(newFieldInstance);",0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,184,        if (hash != -1) {,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,185,"            line = line.substring(0, hash);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,185,"                return new FieldInitializationReport(field.get(testClass), true, false);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,186,            } catch (NoSuchMethodException e) {,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,187,        return line.trim();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,187,"                throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' has no default constructor"", e);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,188,            } catch (InvocationTargetException e) {,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,189,        throw new NullInsteadOfMockException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,189,"                throw new MockitoException(""the default constructor of type '"" + field.getType().getSimpleName() + ""' has raised an exception (see the stack trace for cause): "" + e.getTargetException().toString(), e);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,190,            } catch (InstantiationException e) {,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,191,        if (in != null) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,191,"                throw new MockitoException(""InstantiationException (see the stack trace for cause): "" + e.toString(), e);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,192,            } catch (IllegalAccessException e) {,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,193,                in.close();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,193,"                throw new MockitoException(""IllegalAccessException (see the stack trace for cause): "" + e.toString(), e);",0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,194,            } catch (IOException ignored) {,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,195,            },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,195,                if(constructor != null) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,196,                    changer.safelyDisableAccess(constructor);,0.0,0,-1,0
org/mockito/internal/configuration/ClassPathLoader,22,197,    },0.0,0,-1,0
org/mockito/exceptions/Reporter,22,198,        throw new NotAMockException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,207,        throw new NullInsteadOfMockException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,216,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,216,	    private final MockUtil mockUtil = new MockUtil();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,217,        private Comparator<Constructor<?>> byParameterNumber = new Comparator<Constructor<?>>() {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,219,	            int argLengths = constructorB.getParameterTypes().length - constructorA.getParameterTypes().length;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,220,	            if (argLengths == 0) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,221,		            int constructorAMockableParamsSize = countMockableParams(constructorA);,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,222,		            int constructorBMockableParamsSize = countMockableParams(constructorB);,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,223,		            return constructorBMockableParamsSize - constructorAMockableParamsSize;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,225,	            return argLengths;,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,225,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,229,		        int constructorMockableParamsSize = 0;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,230,		        for (Class<?> aClass : constructor.getParameterTypes()) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,231,			        if(mockUtil.isTypeMockable(aClass)){,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,232,				        constructorMockableParamsSize++;,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,234,        throw new InvalidUseOfMatchersException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,235,		        return constructorMockableParamsSize;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,243,"        ParameterizedConstructorInstantiator(Object testClass, Field field, ConstructorArgumentResolver argumentResolver) {",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,244,            this.testClass = testClass;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,245,            this.field = field;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,246,            this.argResolver = argumentResolver;,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,247,        },0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,250,            final AccessibilityChanger changer = new AccessibilityChanger();,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,251,            Constructor<?> constructor = null;,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,253,        throw new InvalidUseOfMatchersException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,253,                constructor = biggestConstructor(field.getType());,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,254,                changer.enableAccess(constructor);,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,256,                final Object[] args = argResolver.resolveTypeInstances(constructor.getParameterTypes());,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,257,                Object newFieldInstance = constructor.newInstance(args);,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,258,"                new FieldSetter(testClass, field).set(newFieldInstance);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,260,"                return new FieldInitializationReport(field.get(testClass), false, true);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,261,            } catch (IllegalArgumentException e) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,262,"                throw new MockitoException(""internal error : argResolver provided incorrect types for constructor "" + constructor + "" of type "" + field.getType().getSimpleName(), e);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,263,            } catch (InvocationTargetException e) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,264,"                throw new MockitoException(""the constructor of type '"" + field.getType().getSimpleName() + ""' has raised an exception (see the stack trace for cause): "" + e.getTargetException().toString(), e);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,265,            } catch (InstantiationException e) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,266,"                throw new MockitoException(""InstantiationException (see the stack trace for cause): "" + e.toString(), e);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,267,            } catch (IllegalAccessException e) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,268,"                throw new MockitoException(""IllegalAccessException (see the stack trace for cause): "" + e.toString(), e);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,270,                if(constructor != null) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,271,                    changer.safelyDisableAccess(constructor);,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,274,        throw new CannotVerifyStubOnlyMock(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,277,            if(constructor.getParameterTypes().length == 0) {,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,278,"                throw new MockitoException(""the field "" + field.getName() + "" of type "" + field.getType() + "" has no parameterized constructor"");",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,280,        },0.0,0,-1,0
org/mockito/exceptions/Reporter,22,281,        throw new InvalidUseOfMatchersException(join(,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,283,            final List<Constructor<?>> constructors = Arrays.asList(clazz.getDeclaredConstructors());,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,284,"            Collections.sort(constructors, byParameterNumber);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,286,            Constructor<?> constructor = constructors.get(0);,0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,287,"            checkParameterized(constructor, field);",0.0,0,-1,0
org/mockito/internal/util/reflection/FieldInitializer,22,288,            return constructor;,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,290,        List<String> description = new ArrayList<String>();,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,291,        for (LocalizedMatcher matcher : matchers),0.0,0,-1,0
org/mockito/exceptions/Reporter,22,292,            description.add(matcher.getLocation().toString());,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,293,        return join(description.toArray());,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,297,"        String message = join(""Argument(s) are different! Wanted:"",",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,306,        if (JUnitTool.hasJUnit()) {,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,307,"            throw JUnitTool.createArgumentsAreDifferentException(message, wanted, actual);",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,309,            throw new ArgumentsAreDifferent(message);,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,314,        throw new WantedButNotInvoked(createWantedButNotInvokedMessage(wanted));,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,319,        if (invocations.isEmpty()) {,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,320,"            allInvocations = ""Actually, there were zero interactions with this mock.\n"";",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,322,"            StringBuilder sb = new StringBuilder(""\nHowever, there were other interactions with this mock:\n"");",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,323,            for (DescribedInvocation i : invocations) {,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,324,                sb.append(i.toString()),0.0,0,-1,0
org/mockito/exceptions/Reporter,22,328,            },0.0,0,-1,0
org/mockito/exceptions/Reporter,22,329,            allInvocations = sb.toString();,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,332,        String message = createWantedButNotInvokedMessage(wanted);,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,333,        throw new WantedButNotInvoked(message + allInvocations);,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,337,        return join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,346,        throw new VerificationInOrderFailure(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,359,"        String message = createTooManyInvocationsMessage(wantedCount, actualCount, wanted, firstUndesired);",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,360,        throw new TooManyActualInvocations(message);,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,365,        return join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,376,        throw new NeverWantedButInvoked(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,387,"        String message = createTooManyInvocationsMessage(wantedCount, actualCount, wanted, firstUndesired);",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,388,        throw new VerificationInOrderFailure(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,395,        String ending =,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,398,        String message = join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,405,        return message;,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,409,"        String message = createTooLittleInvocationsMessage(discrepancy, wanted, lastActualLocation);",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,411,        throw new TooLittleActualInvocations(message);,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,415,"        String message = createTooLittleInvocationsMessage(discrepancy, wanted, lastActualLocation);",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,417,        throw new VerificationInOrderFailure(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,423,        ScenarioPrinter scenarioPrinter = new ScenarioPrinter();,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,424,        String scenario = scenarioPrinter.print(invocations);,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,426,        throw new NoInteractionsWanted(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,436,        throw new VerificationInOrderFailure(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,446,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,456,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,472,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,484,        throw new WrongTypeOfReturnValue(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,499,"        throw new MockitoAssertionError(join(""Wanted at most "" + pluralize(maxNumberOfInvocations) + "" but was "" + foundSize));",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,503,        throw new InvalidUseOfMatchersException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,520,        throw new SmartNullPointerException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,531,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,546,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,552,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,559,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,567,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,573,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,584,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,593,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,603,"        throw new MockitoException(""You cannot have more than one Mockito annotation on a field!\n"" +",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,609,"        throw new MockitoException(""This combination of annotations is not permitted on a single field:\n"" +",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,614,"        throw new MockitoException(join(""Cannot instantiate a @Spy for '"" + fieldName + ""' field."",",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,625,"        throw new MockitoException(join(""Cannot instantiate @InjectMocks field named '"" + fieldName + ""'."",",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,637,"        throw new FriendlyReminderException(join("""",",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,648,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,657,"        throw new MockitoException(""invocationListeners() does not accept null parameters"");",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,661,"        throw new MockitoException(""invocationListeners() requires at least one listener"");",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,665,        throw new MockitoException(StringJoiner.join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,671,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,681,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,692,        throw new MockitoException(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,698,"        throw new MockitoException(join(""Invalid argument index."",",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,705,        throw new MockitoException(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,718,        Class<?>[] parameterTypes = invocation.getMethod().getParameterTypes();,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,719,        if (parameterTypes.length == 0) {,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,720,"            return new StringBuilder(""the method has no arguments.\n"");",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,723,"        StringBuilder stringBuilder = new StringBuilder(""the possible argument indexes for this method are :\n"");",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,724,"        for (int i = 0, parameterTypesLength = parameterTypes.length; i < parameterTypesLength; i++) {",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,725,"            stringBuilder.append(""    ["").append(i);",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,727,            if (invocation.getMethod().isVarArgs() && i == parameterTypesLength - 1) {,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,728,"                stringBuilder.append(""+] "").append(parameterTypes[i].getComponentType().getSimpleName()).append(""  <- Vararg"").append(""\n"");",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,730,"                stringBuilder.append(""] "").append(parameterTypes[i].getSimpleName()).append(""\n"");",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,733,        return stringBuilder;,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,737,        throw new WrongTypeOfReturnValue(join(,0.0,0,-1,0
org/mockito/exceptions/Reporter,22,759,"        throw new MockitoException(""defaultAnswer() does not accept null parameter"");",0.0,0,-1,0
org/mockito/exceptions/Reporter,22,763,        throw new MockitoException(join(,0.0,0,-1,0
