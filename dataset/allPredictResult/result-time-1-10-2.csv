dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,time,org/joda/time/chrono/BaseChronology,11,265,        return values;,2,0,0,0,0,1,0,0,0,2,14,4,1.0,0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,11,276,        int size = period.size();,2,0,0,1,2,0,4,0,0,6,25,5,1.0,0,0,1
defect4j,time,org/joda/time/chrono/BaseChronology,11,277,        int[] values = new int[size];,10,0,1,2,4,0,8,0,0,20,29,3,1.0,0,0,0
defect4j,time,org/joda/time/chrono/BaseChronology,11,278,        if (duration != 0) {,2,1,0,1,3,0,0,0,0,3,20,4,1.0,0,0,1
defect4j,time,org/joda/time/chrono/BaseChronology,11,289,        return values;,2,0,0,0,0,1,0,0,0,2,14,4,1.0,0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,225,    public DateTimeZoneBuilder() {,0,0,0,1,3,0,0,0,0,4,30,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,226,        iRuleSets = new ArrayList<RuleSet>(10);,2,0,0,1,2,0,8,4,0,15,39,3,1.0,0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,227,    },4,0,0,0,1,0,0,0,0,5,1,3,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,252,        if (iRuleSets.size() > 0) {,0,1,0,2,5,0,4,0,0,5,27,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,258,        iRuleSets.add(new RuleSet());,0,0,0,2,4,0,6,2,0,8,29,1,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,259,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,268,        getLastRuleSet().setStandardOffset(standardOffset);,0,0,0,2,4,0,0,0,0,6,51,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,269,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,309,        if (fromYear <= toYear) {,4,1,0,1,3,0,0,0,0,5,25,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,310,            OfYear ofYear = new OfYear,2,0,0,0,0,0,0,4,0,6,26,6,1.0,0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,312,"            Recurrence recurrence = new Recurrence(ofYear, nameKey, saveMillis);",0,0,0,1,2,0,0,0,0,3,68,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,313,"            Rule rule = new Rule(recurrence, fromYear, toYear);",10,1,0,1,2,0,0,4,0,15,51,1,1.0,0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,314,            getLastRuleSet().addRule(rule);,0,0,0,2,4,0,6,0,0,6,31,7,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,316,        return this;,0,0,0,0,0,1,0,0,0,1,12,4,1.0,0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,320,        if (iRuleSets.size() == 0) {,0,0,0,2,5,0,0,0,0,7,28,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,323,        return iRuleSets.get(iRuleSets.size() - 1);,0,0,0,2,4,1,0,0,0,7,43,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,333,        if (id == null) {,0,0,0,1,3,0,0,0,0,4,17,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,339,        ArrayList<Transition> transitions = new ArrayList<Transition>();,0,0,0,1,2,0,0,0,0,3,64,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,343,        DSTZone tailZone = null;,0,0,0,0,0,0,0,0,0,0,24,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,345,        long millis = Long.MIN_VALUE;,6,0,0,0,0,0,0,0,0,6,29,5,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,346,        int saveMillis = 0;,0,0,0,0,0,0,0,0,0,0,19,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,348,        int ruleSetCount = iRuleSets.size();,0,0,0,1,2,0,0,0,0,3,36,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,349,        for (int i=0; i<ruleSetCount; i++) {,8,1,0,1,3,0,0,0,0,10,36,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,350,            RuleSet rs = iRuleSets.get(i);,2,0,0,1,2,0,6,2,0,10,30,6,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,351,            Transition next = rs.firstTransition(millis);,2,0,0,1,2,0,6,2,0,10,45,6,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,352,            if (next == null) {,2,1,0,1,3,0,0,0,0,3,19,6,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,355,"            addTransition(transitions, next);",0,0,0,1,2,0,6,0,0,6,33,7,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,356,            millis = next.getMillis();,0,0,0,1,2,0,0,0,0,3,26,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,357,            saveMillis = next.getSaveMillis();,2,0,0,1,2,0,4,0,0,7,34,6,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,360,            rs = new RuleSet(rs);,4,0,0,1,2,0,0,2,0,7,21,6,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,362,"            while ((next = rs.nextTransition(millis, saveMillis)) != null) {",0,0,0,3,7,0,0,0,0,10,64,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,363,"                if (addTransition(transitions, next)) {",0,0,0,2,5,0,6,0,0,6,39,9,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,364,                    if (tailZone != null) {,4,1,0,1,3,0,0,0,0,7,23,1,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,366,                        break;,0,0,0,0,0,0,0,0,0,0,6,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,369,                millis = next.getMillis();,0,0,0,1,2,0,0,0,0,3,26,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,370,                saveMillis = next.getSaveMillis();,0,0,0,1,2,0,0,0,0,3,34,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,371,                if (tailZone == null && i == ruleSetCount - 1) {,6,4,0,1,3,0,0,0,0,10,48,8,1.0,0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,372,                    tailZone = rs.buildTailZone(id);,2,0,0,1,2,0,6,0,0,9,32,10,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,379,            millis = rs.getUpperLimit(saveMillis);,2,0,0,1,2,0,6,0,0,9,38,6,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,383,        if (transitions.size() == 0) {,4,1,0,2,5,0,8,0,0,13,30,3,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,390,        if (transitions.size() == 1 && tailZone == null) {,0,0,0,2,5,0,0,0,0,7,50,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,396,"        PrecalculatedZone zone = PrecalculatedZone.create(id, outputID, transitions, tailZone);",2,0,0,1,2,0,12,2,0,16,87,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,397,        if (zone.isCachable()) {,0,0,0,2,5,0,0,0,0,7,24,4,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,398,            return CachedDateTimeZone.forZone(zone);,0,0,0,1,2,1,0,0,0,4,40,4,1.0,0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,404,        int size = transitions.size();,2,0,0,1,2,0,4,0,0,6,30,5,1.0,0,0,1
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,405,        if (size == 0) {,4,2,0,1,3,0,0,0,0,6,16,4,1.0,0,0,0
defect4j,time,org/joda/time/tz/DateTimeZoneBuilder,11,406,            transitions.add(tr);,0,0,0,1,2,0,6,0,0,6,20,7,1.0,0,0,1
