project_path,version,lines,statement,suspicious,faulty,predict,miss_line
org/apache/commons/lang3/StringUtils,30,1674,        if (cs == null || searchChars == null) {,1.6,1,1,1
org/apache/commons/lang3/StringUtils,30,1677,        int csLen = cs.length();,1.6,1,1,1
org/apache/commons/lang3/StringUtils,30,1678,        int searchLen = searchChars.length;,1.6,1,1,1
org/apache/commons/lang3/StringUtils,30,1679,        for (int i = 0; i < csLen; i++) {,1.6,1,1,1
org/apache/commons/lang3/StringUtils,30,1680,            char ch = cs.charAt(i);,1.6,1,1,1
org/apache/commons/lang3/StringUtils,30,1681,            for (int j = 0; j < searchLen; j++) {,1.6,1,1,1
org/apache/commons/lang3/StringUtils,30,1682,                if (searchChars[j] == ch) {,1.6,1,1,1
org/apache/commons/lang3/StringUtils,30,1685,                        return false;,1.6,1,1,1
org/apache/commons/lang3/ArrayUtils,30,3279,        if (array == null || array.length == 0) {,1.25,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3282,        return false;,1.25,0,-1,0
org/apache/commons/lang3/StringUtils,30,1715,        if (cs == null || invalidChars == null) {,0.44444,1,-1,1
org/apache/commons/lang3/StringUtils,30,1718,"        return containsNone(cs, invalidChars.toCharArray());",0.44444,1,-1,1
org/apache/commons/lang3/StringUtils,30,1372,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0.4,0,-1,0
org/apache/commons/lang3/StringUtils,30,1375,        int csLen = cs.length();,0.4,0,-1,0
org/apache/commons/lang3/StringUtils,30,1376,        int searchLen = searchChars.length;,0.4,0,-1,0
org/apache/commons/lang3/StringUtils,30,1377,        for (int i = 0; i < csLen; i++) {,0.4,0,-1,0
org/apache/commons/lang3/StringUtils,30,1378,            char ch = cs.charAt(i);,0.4,0,-1,0
org/apache/commons/lang3/StringUtils,30,1379,            for (int j = 0; j < searchLen; j++) {,0.4,0,-1,0
org/apache/commons/lang3/StringUtils,30,1380,                if (searchChars[j] == ch) {,0.4,0,-1,0
org/apache/commons/lang3/StringUtils,30,1382,                        return i;,0.4,0,-1,0
org/apache/commons/lang3/StringUtils,30,194,        return cs == null || cs.length() == 0;,0.37113,1,-1,1
org/apache/commons/lang3/StringUtils,30,1689,        return true;,0.33333,1,-1,1
org/apache/commons/lang3/StringUtils,30,1462,                        return true;,0.30769,0,-1,0
org/apache/commons/lang3/StringUtils,30,1444,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0.28571,0,-1,0
org/apache/commons/lang3/StringUtils,30,1447,        int csLength = cs.length();,0.28571,0,-1,0
org/apache/commons/lang3/StringUtils,30,1448,        int searchLength = searchChars.length;,0.28571,0,-1,0
org/apache/commons/lang3/StringUtils,30,1449,        int csLast = csLength - 1;,0.28571,0,-1,0
org/apache/commons/lang3/StringUtils,30,1450,        int searchLast = searchLength - 1;,0.28571,0,-1,0
org/apache/commons/lang3/StringUtils,30,1451,        for (int i = 0; i < csLength; i++) {,0.28571,0,-1,0
org/apache/commons/lang3/StringUtils,30,1452,            char ch = cs.charAt(i);,0.28571,0,-1,0
org/apache/commons/lang3/StringUtils,30,1453,            for (int j = 0; j < searchLength; j++) {,0.28571,0,-1,0
org/apache/commons/lang3/StringUtils,30,1454,                if (searchChars[j] == ch) {,0.28571,0,-1,0
org/apache/commons/lang3/StringUtils,30,1455,                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {,0.28571,1,-1,0
org/apache/commons/lang3/StringUtils,30,1467,        return false;,0.28571,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0.10684,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0.10684,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,0.10684,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0.10684,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,0.10684,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,0.10684,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,0.10684,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,0.10684,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,0.10684,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,0.10684,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,0.10684,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,0.10684,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0.10684,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,0.10684,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0.10684,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,0.10684,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,0.10684,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0.10684,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,0.10684,0,-1,0
org/apache/commons/lang3/StringUtils,30,1412,        if (isEmpty(cs) || isEmpty(searchChars)) {,0.1,0,-1,0
org/apache/commons/lang3/StringUtils,30,1415,"        return indexOfAny(cs, searchChars.toCharArray());",0.1,0,-1,0
org/apache/commons/lang3/StringUtils,30,1570,        if (isEmpty(str) || isEmpty(searchChars)) {,0.1,0,-1,0
org/apache/commons/lang3/StringUtils,30,1573,        int strLen = str.length();,0.1,0,-1,0
org/apache/commons/lang3/StringUtils,30,1574,        for (int i = 0; i < strLen; i++) {,0.1,0,-1,0
org/apache/commons/lang3/StringUtils,30,1575,            char ch = str.charAt(i);,0.1,0,-1,0
org/apache/commons/lang3/StringUtils,30,1576,            if (searchChars.indexOf(ch) < 0) {,0.1,1,-1,0
org/apache/commons/lang3/StringUtils,30,1577,                    return i;,0.1,0,-1,0
org/apache/commons/lang3/StringUtils,30,1498,        if (searchChars == null) {,0.09091,0,-1,0
org/apache/commons/lang3/StringUtils,30,1501,"        return containsAny(cs, searchChars.toCharArray());",0.09091,0,-1,0
org/apache/commons/lang3/StringUtils,30,1542,            return i;,0.08333,0,-1,0
org/apache/commons/lang3/StringUtils,30,1529,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0.06667,0,-1,0
org/apache/commons/lang3/StringUtils,30,1532,        int csLen = cs.length();,0.06667,0,-1,0
org/apache/commons/lang3/StringUtils,30,1533,        int searchLen = searchChars.length;,0.06667,0,-1,0
org/apache/commons/lang3/StringUtils,30,1535,        for (int i = 0; i < csLen; i++) {,0.06667,0,-1,0
org/apache/commons/lang3/StringUtils,30,1536,            char ch = cs.charAt(i);,0.06667,0,-1,0
org/apache/commons/lang3/StringUtils,30,1537,            for (int j = 0; j < searchLen; j++) {,0.06667,0,-1,0
org/apache/commons/lang3/StringUtils,30,1538,                if (searchChars[j] == ch) {,0.06667,0,-1,0
org/apache/commons/lang3/StringUtils,30,1539,                        continue outer;,0.06667,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,145,      super();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,146,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,162,"        return toString(array, ""{}"");",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,178,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,179,            return stringIfNull;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,181,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,195,"        return new EqualsBuilder().append(array1, array2).isEquals();",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,226,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,227,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,229,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,230,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,231,            Object object = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,232,"            if (object instanceof Map.Entry<?, ?>) {",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,233,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,234,"                map.put(entry.getKey(), entry.getValue());",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,235,            } else if (object instanceof Object[]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,236,                Object[] entry = (Object[]) object;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,237,                if (entry.length < 2) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,238,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,242,"                map.put(entry[0], entry[1]);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,243,            } else {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,244,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,249,        return map;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,294,        return items;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,312,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,313,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,315,        return array.clone();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,328,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,329,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,331,        return array.clone();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,344,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,345,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,347,        return array.clone();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,360,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,361,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,363,        return array.clone();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,376,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,377,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,379,        return array.clone();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,392,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,393,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,395,        return array.clone();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,408,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,409,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,411,        return array.clone();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,424,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,425,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,427,        return array.clone();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,440,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,441,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,443,        return array.clone();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,462,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,463,            return EMPTY_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,465,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,482,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,483,            return EMPTY_STRING_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,485,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,502,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,503,            return EMPTY_LONG_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,505,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,522,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,523,            return EMPTY_INT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,525,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,542,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,543,            return EMPTY_SHORT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,545,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,562,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,563,            return EMPTY_CHAR_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,565,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,582,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,583,            return EMPTY_BYTE_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,585,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,602,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,603,            return EMPTY_DOUBLE_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,605,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,622,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,623,            return EMPTY_FLOAT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,625,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,642,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,643,            return EMPTY_BOOLEAN_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,645,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,662,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,663,            return EMPTY_LONG_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,665,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,682,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,683,            return EMPTY_INTEGER_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,685,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,702,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,703,            return EMPTY_SHORT_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,705,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,722,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,723,            return EMPTY_CHARACTER_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,725,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,742,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,743,            return EMPTY_BYTE_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,745,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,762,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,763,            return EMPTY_DOUBLE_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,765,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,782,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,783,            return EMPTY_FLOAT_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,785,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,802,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,803,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,805,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,838,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,839,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,841,        if (startIndexInclusive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,842,            startIndexInclusive = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,844,        if (endIndexExclusive > array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,845,            endIndexExclusive = array.length;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,847,        int newSize = endIndexExclusive - startIndexInclusive;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,848,        Class<?> type = array.getClass().getComponentType();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,849,        if (newSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,851,"            final T[] emptyArray = (T[]) Array.newInstance(type, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,852,            return emptyArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,855,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,856,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,857,        return subarray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,880,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,881,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,883,        if (startIndexInclusive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,884,            startIndexInclusive = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,886,        if (endIndexExclusive > array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,887,            endIndexExclusive = array.length;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,889,        int newSize = endIndexExclusive - startIndexInclusive;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,890,        if (newSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,891,            return EMPTY_LONG_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,894,        long[] subarray = new long[newSize];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,895,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,896,        return subarray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,919,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,920,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,922,        if (startIndexInclusive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,923,            startIndexInclusive = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,925,        if (endIndexExclusive > array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,926,            endIndexExclusive = array.length;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,928,        int newSize = endIndexExclusive - startIndexInclusive;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,929,        if (newSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,930,            return EMPTY_INT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,933,        int[] subarray = new int[newSize];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,934,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,935,        return subarray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,958,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,959,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,961,        if (startIndexInclusive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,962,            startIndexInclusive = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,964,        if (endIndexExclusive > array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,965,            endIndexExclusive = array.length;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,967,        int newSize = endIndexExclusive - startIndexInclusive;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,968,        if (newSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,969,            return EMPTY_SHORT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,972,        short[] subarray = new short[newSize];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,973,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,974,        return subarray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,997,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,998,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1000,        if (startIndexInclusive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1001,            startIndexInclusive = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1003,        if (endIndexExclusive > array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1004,            endIndexExclusive = array.length;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1006,        int newSize = endIndexExclusive - startIndexInclusive;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1007,        if (newSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1008,            return EMPTY_CHAR_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1011,        char[] subarray = new char[newSize];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1012,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1013,        return subarray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1036,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1037,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1039,        if (startIndexInclusive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1040,            startIndexInclusive = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1042,        if (endIndexExclusive > array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1043,            endIndexExclusive = array.length;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1045,        int newSize = endIndexExclusive - startIndexInclusive;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1046,        if (newSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1047,            return EMPTY_BYTE_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1050,        byte[] subarray = new byte[newSize];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1051,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1052,        return subarray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1075,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1076,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1078,        if (startIndexInclusive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1079,            startIndexInclusive = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1081,        if (endIndexExclusive > array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1082,            endIndexExclusive = array.length;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1084,        int newSize = endIndexExclusive - startIndexInclusive;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1085,        if (newSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1086,            return EMPTY_DOUBLE_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1089,        double[] subarray = new double[newSize];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1090,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1091,        return subarray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1114,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1115,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1117,        if (startIndexInclusive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1118,            startIndexInclusive = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1120,        if (endIndexExclusive > array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1121,            endIndexExclusive = array.length;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1123,        int newSize = endIndexExclusive - startIndexInclusive;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1124,        if (newSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1125,            return EMPTY_FLOAT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1128,        float[] subarray = new float[newSize];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1129,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1130,        return subarray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1153,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1154,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1156,        if (startIndexInclusive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1157,            startIndexInclusive = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1159,        if (endIndexExclusive > array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1160,            endIndexExclusive = array.length;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1162,        int newSize = endIndexExclusive - startIndexInclusive;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1163,        if (newSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1164,            return EMPTY_BOOLEAN_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1167,        boolean[] subarray = new boolean[newSize];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1168,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1169,        return subarray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1186,        if ((array1 == null && array2 != null && array2.length > 0) ||,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1189,                return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1191,        return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1204,        if ((array1 == null && array2 != null && array2.length > 0) ||,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1207,                return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1209,        return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1222,        if ((array1 == null && array2 != null && array2.length > 0) ||,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1225,                return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1227,        return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1240,        if ((array1 == null && array2 != null && array2.length > 0) ||,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1243,                return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1245,        return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1258,        if ((array1 == null && array2 != null && array2.length > 0) ||,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1261,                return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1263,        return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1276,        if ((array1 == null && array2 != null && array2.length > 0) ||,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1279,                return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1281,        return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1294,        if ((array1 == null && array2 != null && array2.length > 0) ||,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1297,                return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1299,        return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1312,        if ((array1 == null && array2 != null && array2.length > 0) ||,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1315,                return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1317,        return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1330,        if ((array1 == null && array2 != null && array2.length > 0) ||,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1333,                return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1335,        return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1360,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1361,            return 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1363,        return Array.getLength(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1376,        if (array1 == null || array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1377,"            throw new IllegalArgumentException(""The Array must not be null"");",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1379,        return array1.getClass().getName().equals(array2.getClass().getName());,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1394,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1395,            return;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1397,        int i = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1398,        int j = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1400,        while (j > i) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1401,            tmp = array[j];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1402,            array[j] = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1403,            array[i] = tmp;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1404,            j--;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1405,            i++;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1407,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1417,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1418,            return;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1420,        int i = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1421,        int j = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1423,        while (j > i) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1424,            tmp = array[j];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1425,            array[j] = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1426,            array[i] = tmp;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1427,            j--;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1428,            i++;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1430,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1440,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1441,            return;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1443,        int i = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1444,        int j = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1446,        while (j > i) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1447,            tmp = array[j];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1448,            array[j] = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1449,            array[i] = tmp;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1450,            j--;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1451,            i++;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1453,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1463,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1464,            return;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1466,        int i = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1467,        int j = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1469,        while (j > i) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1470,            tmp = array[j];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1471,            array[j] = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1472,            array[i] = tmp;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1473,            j--;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1474,            i++;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1476,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1486,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1487,            return;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1489,        int i = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1490,        int j = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1492,        while (j > i) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1493,            tmp = array[j];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1494,            array[j] = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1495,            array[i] = tmp;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1496,            j--;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1497,            i++;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1499,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1509,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1510,            return;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1512,        int i = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1513,        int j = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1515,        while (j > i) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1516,            tmp = array[j];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1517,            array[j] = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1518,            array[i] = tmp;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1519,            j--;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1520,            i++;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1522,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1532,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1533,            return;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1535,        int i = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1536,        int j = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1538,        while (j > i) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1539,            tmp = array[j];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1540,            array[j] = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1541,            array[i] = tmp;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1542,            j--;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1543,            i++;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1545,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1555,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1556,            return;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1558,        int i = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1559,        int j = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1561,        while (j > i) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1562,            tmp = array[j];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1563,            array[j] = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1564,            array[i] = tmp;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1565,            j--;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1566,            i++;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1568,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1578,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1579,            return;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1581,        int i = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1582,        int j = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1584,        while (j > i) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1585,            tmp = array[j];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1586,            array[j] = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1587,            array[i] = tmp;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1588,            j--;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1589,            i++;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1591,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1609,"        return indexOf(array, objectToFind, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1627,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1628,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1630,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1631,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1633,        if (objectToFind == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1634,            for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1635,                if (array[i] == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1636,                    return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1639,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1640,            for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1641,                if (objectToFind.equals(array[i])) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1642,                    return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1646,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1660,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1678,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1679,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1681,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1682,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1683,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1684,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1686,        if (objectToFind == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1687,            for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1688,                if (array[i] == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1689,                    return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1692,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1693,            for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1694,                if (objectToFind.equals(array[i])) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1695,                    return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1699,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1712,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1728,"        return indexOf(array, valueToFind, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1746,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1747,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1749,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1750,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1752,        for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1753,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1754,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1757,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1771,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1789,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1790,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1792,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1793,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1794,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1795,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1797,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1798,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1799,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1802,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1815,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1831,"        return indexOf(array, valueToFind, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1849,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1850,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1852,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1853,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1855,        for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1856,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1857,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1860,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1874,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1892,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1893,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1895,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1896,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1897,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1898,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1900,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1901,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1902,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1905,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1918,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1934,"        return indexOf(array, valueToFind, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1952,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1953,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1955,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1956,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1958,        for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1959,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1960,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1963,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1977,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1995,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1996,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1998,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,1999,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2000,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2001,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2003,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2004,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2005,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2008,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2021,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2038,"        return indexOf(array, valueToFind, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2057,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2058,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2060,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2061,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2063,        for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2064,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2065,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2068,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2083,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2102,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2103,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2105,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2106,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2107,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2108,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2110,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2111,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2112,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2115,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2129,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2145,"        return indexOf(array, valueToFind, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2163,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2164,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2166,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2167,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2169,        for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2170,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2171,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2174,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2188,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2206,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2207,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2209,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2210,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2211,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2212,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2214,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2215,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2216,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2219,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2232,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2248,"        return indexOf(array, valueToFind, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2265,"        return indexOf(array, valueToFind, 0, tolerance);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2283,        if (ArrayUtils.isEmpty(array)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2284,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2286,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2287,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2289,        for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2290,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2291,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2294,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2315,        if (ArrayUtils.isEmpty(array)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2316,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2318,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2319,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2321,        double min = valueToFind - tolerance;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2322,        double max = valueToFind + tolerance;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2323,        for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2324,            if (array[i] >= min && array[i] <= max) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2325,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2328,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2342,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2359,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2377,        if (ArrayUtils.isEmpty(array)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2378,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2380,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2381,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2382,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2383,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2385,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2386,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2387,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2390,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2411,        if (ArrayUtils.isEmpty(array)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2412,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2414,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2415,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2416,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2417,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2419,        double min = valueToFind - tolerance;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2420,        double max = valueToFind + tolerance;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2421,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2422,            if (array[i] >= min && array[i] <= max) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2423,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2426,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2439,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2456,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2472,"        return indexOf(array, valueToFind, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2490,        if (ArrayUtils.isEmpty(array)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2491,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2493,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2494,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2496,        for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2497,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2498,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2501,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2515,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2533,        if (ArrayUtils.isEmpty(array)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2534,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2536,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2537,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2538,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2539,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2541,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2542,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2543,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2546,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2559,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2575,"        return indexOf(array, valueToFind, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2594,        if (ArrayUtils.isEmpty(array)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2595,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2597,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2598,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2600,        for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2601,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2602,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2605,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2620,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2638,        if (ArrayUtils.isEmpty(array)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2639,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2641,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2642,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2643,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2644,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2646,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2647,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2648,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2651,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2664,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2682,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2683,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2684,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2685,            return EMPTY_CHAR_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2687,        final char[] result = new char[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2688,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2689,            result[i] = array[i].charValue();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2691,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2704,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2705,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2706,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2707,            return EMPTY_CHAR_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2709,        final char[] result = new char[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2710,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2711,            Character b = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2712,            result[i] = (b == null ? valueForNull : b.charValue());,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2714,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2726,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2727,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2728,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2729,            return EMPTY_CHARACTER_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2731,        final Character[] result = new Character[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2732,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2733,            result[i] = Character.valueOf(array[i]);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2735,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2750,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2751,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2752,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2753,            return EMPTY_LONG_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2755,        final long[] result = new long[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2756,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2757,            result[i] = array[i].longValue();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2759,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2772,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2773,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2774,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2775,            return EMPTY_LONG_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2777,        final long[] result = new long[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2778,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2779,            Long b = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2780,            result[i] = (b == null ? valueForNull : b.longValue());,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2782,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2794,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2795,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2796,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2797,            return EMPTY_LONG_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2799,        final Long[] result = new Long[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2800,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2801,            result[i] = Long.valueOf(array[i]);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2803,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2818,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2819,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2820,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2821,            return EMPTY_INT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2823,        final int[] result = new int[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2824,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2825,            result[i] = array[i].intValue();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2827,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2840,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2841,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2842,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2843,            return EMPTY_INT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2845,        final int[] result = new int[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2846,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2847,            Integer b = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2848,            result[i] = (b == null ? valueForNull : b.intValue());,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2850,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2862,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2863,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2864,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2865,            return EMPTY_INTEGER_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2867,        final Integer[] result = new Integer[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2868,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2869,            result[i] = Integer.valueOf(array[i]);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2871,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2886,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2887,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2888,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2889,            return EMPTY_SHORT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2891,        final short[] result = new short[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2892,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2893,            result[i] = array[i].shortValue();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2895,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2908,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2909,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2910,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2911,            return EMPTY_SHORT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2913,        final short[] result = new short[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2914,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2915,            Short b = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2916,            result[i] = (b == null ? valueForNull : b.shortValue());,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2918,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2930,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2931,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2932,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2933,            return EMPTY_SHORT_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2935,        final Short[] result = new Short[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2936,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2937,            result[i] = Short.valueOf(array[i]);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2939,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2954,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2955,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2956,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2957,            return EMPTY_BYTE_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2959,        final byte[] result = new byte[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2960,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2961,            result[i] = array[i].byteValue();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2963,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2976,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2977,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2978,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2979,            return EMPTY_BYTE_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2981,        final byte[] result = new byte[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2982,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2983,            Byte b = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2984,            result[i] = (b == null ? valueForNull : b.byteValue());,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2986,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2998,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,2999,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3000,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3001,            return EMPTY_BYTE_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3003,        final Byte[] result = new Byte[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3004,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3005,            result[i] = Byte.valueOf(array[i]);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3007,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3022,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3023,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3024,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3025,            return EMPTY_DOUBLE_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3027,        final double[] result = new double[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3028,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3029,            result[i] = array[i].doubleValue();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3031,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3044,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3045,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3046,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3047,            return EMPTY_DOUBLE_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3049,        final double[] result = new double[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3050,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3051,            Double b = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3052,            result[i] = (b == null ? valueForNull : b.doubleValue());,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3054,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3066,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3067,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3068,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3069,            return EMPTY_DOUBLE_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3071,        final Double[] result = new Double[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3072,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3073,            result[i] = Double.valueOf(array[i]);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3075,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3090,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3091,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3092,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3093,            return EMPTY_FLOAT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3095,        final float[] result = new float[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3096,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3097,            result[i] = array[i].floatValue();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3099,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3112,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3113,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3114,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3115,            return EMPTY_FLOAT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3117,        final float[] result = new float[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3118,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3119,            Float b = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3120,            result[i] = (b == null ? valueForNull : b.floatValue());,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3122,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3134,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3135,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3136,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3137,            return EMPTY_FLOAT_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3139,        final Float[] result = new Float[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3140,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3141,            result[i] = Float.valueOf(array[i]);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3143,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3158,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3159,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3160,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3161,            return EMPTY_BOOLEAN_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3163,        final boolean[] result = new boolean[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3164,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3165,            result[i] = array[i].booleanValue();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3167,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3180,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3181,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3182,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3183,            return EMPTY_BOOLEAN_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3185,        final boolean[] result = new boolean[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3186,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3187,            Boolean b = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3188,            result[i] = (b == null ? valueForNull : b.booleanValue());,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3190,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3202,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3203,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3204,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3205,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3207,        final Boolean[] result = new Boolean[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3208,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3209,            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3211,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3223,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3224,            return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3226,        return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3237,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3238,            return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3240,        return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3251,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3252,            return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3254,        return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3265,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3266,            return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3268,        return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3280,            return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3293,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3294,            return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3296,        return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3307,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3308,            return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3310,        return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3321,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3322,            return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3324,        return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3335,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3336,            return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3338,        return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3350,         return (array != null && array.length != 0);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3361,        return (array != null && array.length != 0);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3372,        return (array != null && array.length != 0);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3383,        return (array != null && array.length != 0);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3394,        return (array != null && array.length != 0);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3405,        return (array != null && array.length != 0);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3416,        return (array != null && array.length != 0);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3427,        return (array != null && array.length != 0);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3438,        return (array != null && array.length != 0);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3465,        if (array1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3466,            return clone(array2);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3467,        } else if (array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3468,            return clone(array1);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3470,        final Class<?> type1 = array1.getClass().getComponentType();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3472,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3473,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3475,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3488,        },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3476,        } catch (ArrayStoreException ase) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3483,            final Class<?> type2 = array2.getClass().getComponentType();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3484,            if (!type1.isAssignableFrom(type2)){,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3485,"                throw new IllegalArgumentException(""Cannot store ""+type2.getName()+"" in an array of ""+type1.getName(), ase);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3487,"            throw ase; // No, so rethrow original",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3489,        return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3510,        if (array1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3511,            return clone(array2);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3512,        } else if (array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3513,            return clone(array1);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3515,        boolean[] joinedArray = new boolean[array1.length + array2.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3516,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3517,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3518,        return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3539,        if (array1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3540,            return clone(array2);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3541,        } else if (array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3542,            return clone(array1);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3544,        char[] joinedArray = new char[array1.length + array2.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3545,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3546,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3547,        return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3568,        if (array1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3569,            return clone(array2);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3570,        } else if (array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3571,            return clone(array1);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3573,        byte[] joinedArray = new byte[array1.length + array2.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3574,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3575,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3576,        return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3597,        if (array1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3598,            return clone(array2);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3599,        } else if (array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3600,            return clone(array1);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3602,        short[] joinedArray = new short[array1.length + array2.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3603,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3604,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3605,        return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3626,        if (array1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3627,            return clone(array2);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3628,        } else if (array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3629,            return clone(array1);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3631,        int[] joinedArray = new int[array1.length + array2.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3632,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3633,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3634,        return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3655,        if (array1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3656,            return clone(array2);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3657,        } else if (array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3658,            return clone(array1);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3660,        long[] joinedArray = new long[array1.length + array2.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3661,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3662,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3663,        return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3684,        if (array1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3685,            return clone(array2);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3686,        } else if (array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3687,            return clone(array1);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3689,        float[] joinedArray = new float[array1.length + array2.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3690,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3691,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3692,        return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3713,        if (array1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3714,            return clone(array2);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3715,        } else if (array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3716,            return clone(array1);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3718,        double[] joinedArray = new double[array1.length + array2.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3719,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3720,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3721,        return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3754,        if (array != null){,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3755,            type = array.getClass();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3756,        } else if (element != null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3757,            type = element.getClass();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3759,"            throw new IllegalArgumentException(""Arguments cannot both be null"");            ",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3762,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3763,        newArray[newArray.length - 1] = element;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3764,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3789,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3790,        newArray[newArray.length - 1] = element;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3791,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3816,"        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3817,        newArray[newArray.length - 1] = element;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3818,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3843,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3844,        newArray[newArray.length - 1] = element;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3845,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3870,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3871,        newArray[newArray.length - 1] = element;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3872,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3897,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3898,        newArray[newArray.length - 1] = element;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3899,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3924,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3925,        newArray[newArray.length - 1] = element;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3926,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3951,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3952,        newArray[newArray.length - 1] = element;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3953,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3978,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3979,        newArray[newArray.length - 1] = element;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3980,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3993,        if (array != null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3994,            int arrayLength = Array.getLength(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3995,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3996,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3997,            return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,3999,"        return Array.newInstance(newArrayComponentType, 1);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4032,        Class<?> clss = null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4033,        if (array != null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4034,            clss = array.getClass().getComponentType();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4035,        } else if (element != null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4036,            clss = element.getClass();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4038,"            throw new IllegalArgumentException(""Array and element cannot both be null"");            ",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4041,"        final T[] newArray = (T[]) add(array, index, element, clss);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4042,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4073,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4105,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4136,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4167,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4198,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4229,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4260,"        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4291,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4306,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4307,            if (index != 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4308,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4310,"            Object joinedArray = Array.newInstance(clss, 1);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4311,"            Array.set(joinedArray, 0, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4312,            return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4314,        int length = Array.getLength(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4315,        if (index > length || index < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4316,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4318,"        Object result = Array.newInstance(clss, length + 1);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4319,"        System.arraycopy(array, 0, result, 0, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4320,"        Array.set(result, index, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4321,        if (index < length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4322,"            System.arraycopy(array, index, result, index + 1, length - index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4324,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4357,"        return (T[]) remove((Object) array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4386,"        int index = indexOf(array, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4387,        if (index == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4388,            return clone(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4390,"        return remove(array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4422,"        return (boolean[]) remove((Object) array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4451,"        int index = indexOf(array, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4452,        if (index == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4453,            return clone(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4455,"        return remove(array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4487,"        return (byte[]) remove((Object) array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4516,"        int index = indexOf(array, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4517,        if (index == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4518,            return clone(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4520,"        return remove(array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4552,"        return (char[]) remove((Object) array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4581,"        int index = indexOf(array, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4582,        if (index == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4583,            return clone(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4585,"        return remove(array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4617,"        return (double[]) remove((Object) array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4646,"        int index = indexOf(array, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4647,        if (index == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4648,            return clone(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4650,"        return remove(array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4682,"        return (float[]) remove((Object) array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4711,"        int index = indexOf(array, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4712,        if (index == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4713,            return clone(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4715,"        return remove(array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4747,"        return (int[]) remove((Object) array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4776,"        int index = indexOf(array, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4777,        if (index == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4778,            return clone(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4780,"        return remove(array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4812,"        return (long[]) remove((Object) array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4841,"        int index = indexOf(array, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4842,        if (index == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4843,            return clone(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4845,"        return remove(array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4877,"        return (short[]) remove((Object) array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4906,"        int index = indexOf(array, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4907,        if (index == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4908,            return clone(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4910,"        return remove(array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4935,        int length = getLength(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4936,        if (index < 0 || index >= length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4937,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4940,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4941,"        System.arraycopy(array, 0, result, 0, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4942,        if (index < length - 1) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4943,"            System.arraycopy(array, index + 1, result, index, length - index - 1);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,30,4946,        return result;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,170,        super();,0.0,1,-1,1
org/apache/commons/lang3/StringUtils,30,171,    },0.0,1,-1,1
org/apache/commons/lang3/StringUtils,30,212,        return !StringUtils.isEmpty(cs);,0.0,1,-1,1
org/apache/commons/lang3/StringUtils,30,232,        if (cs == null || (strLen = cs.length()) == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,233,            return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,235,        for (int i = 0; i < strLen; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,236,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,237,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,240,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,260,        return !StringUtils.isBlank(cs);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,289,        return str == null ? null : str.trim();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,315,        String ts = trim(str);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,316,        return isEmpty(ts) ? null : ts;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,341,        return str == null ? EMPTY : str.trim();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,369,"        return strip(str, null);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,396,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,397,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,399,"        str = strip(str, null);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,400,        return str.length() == 0 ? null : str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,426,"        return str == null ? EMPTY : strip(str, null);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,456,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,457,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,459,"        str = stripStart(str, stripChars);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,460,"        return stripEnd(str, stripChars);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,489,        if (str == null || (strLen = str.length()) == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,490,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,492,        int start = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,493,        if (stripChars == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,494,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,495,                start++;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,497,        } else if (stripChars.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,498,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,500,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,501,                start++;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,504,        return str.substring(start);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,533,        if (str == null || (end = str.length()) == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,534,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,537,        if (stripChars == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,538,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,539,                end--;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,541,        } else if (stripChars.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,542,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,544,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,545,                end--;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,548,"        return str.substring(0, end);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,573,"        return stripAll(strs, null);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,603,        if (strs == null || (strsLen = strs.length) == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,604,            return strs;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,606,        String[] newArr = new String[strsLen];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,607,        for (int i = 0; i < strsLen; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,608,"            newArr[i] = strip(strs[i], stripChars);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,610,        return newArr;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,630,        if(input == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,631,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,633,        if(SystemUtils.isJavaVersionAtLeast(1.6f)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,640,"                Class<?> normalizerFormClass = ClassUtils.getClass(""java.text.Normalizer$Form"", false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,643,"                Class<?> normalizerClass = ClassUtils.getClass(""java.text.Normalizer"", false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,646,"                java.lang.reflect.Method method = normalizerClass.getMethod(""normalize"", CharSequence.class, normalizerFormClass );",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,649,"                java.lang.reflect.Field nfd = normalizerFormClass.getField(""NFD"");",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,652,"                String decomposed = (String) method.invoke( null, input, nfd.get(null) );",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,655,"                java.util.regex.Pattern accentPattern = java.util.regex.Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,656,"                return accentPattern.matcher(decomposed).replaceAll("""");",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,657,            } catch(ClassNotFoundException cnfe) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,658,"                throw new RuntimeException(""ClassNotFoundException occurred during 1.6 backcompat code"", cnfe);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,659,            } catch(NoSuchMethodException nsme) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,660,"                throw new RuntimeException(""NoSuchMethodException occurred during 1.6 backcompat code"", nsme);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,661,            } catch(NoSuchFieldException nsfe) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,662,"                throw new RuntimeException(""NoSuchFieldException occurred during 1.6 backcompat code"", nsfe);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,663,            } catch(IllegalAccessException iae) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,664,"                throw new RuntimeException(""IllegalAccessException occurred during 1.6 backcompat code"", iae);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,665,            } catch(IllegalArgumentException iae) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,666,"                throw new RuntimeException(""IllegalArgumentException occurred during 1.6 backcompat code"", iae);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,667,            } catch(java.lang.reflect.InvocationTargetException ite) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,668,"                throw new RuntimeException(""InvocationTargetException occurred during 1.6 backcompat code"", ite);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,669,            } catch(SecurityException se) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,670,"                throw new RuntimeException(""SecurityException occurred during 1.6 backcompat code"", se);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,673,"            throw new UnsupportedOperationException(""The stripAccents(String) method is not supported until Java 1.6"");",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,700,        return cs1 == null ? cs2 == null : cs1.equals(cs2);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,725,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,750,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,751,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,753,        return str.indexOf(searchChar);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,782,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,783,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,785,"        return str.indexOf(searchChar, startPos);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,812,        if (str == null || searchStr == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,813,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,815,        return str.indexOf(searchStr);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,851,        if (str == null || searchStr == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,852,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,854,"        return str.indexOf(searchStr, startPos);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,891,"        return ordinalIndexOf(str, searchStr, ordinal, false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,909,        if (str == null || searchStr == null || ordinal <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,910,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,912,        if (searchStr.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,913,            return lastIndex ? str.length() : 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,915,        int found = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,916,        int index = lastIndex ? str.length() : INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,918,            if(lastIndex) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,919,"                index = str.lastIndexOf(searchStr, index - 1);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,921,"                index = str.indexOf(searchStr, index + 1);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,923,            if (index < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,924,                return index;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,926,            found++;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,927,        } while (found < ordinal);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,928,        return index;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,956,"        return indexOfIgnoreCase(str, searchStr, 0);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,991,        if (str == null || searchStr == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,992,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,994,        if (startPos < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,995,            startPos = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,997,        int endLimit = (str.length() - searchStr.length()) + 1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,998,        if (startPos > endLimit) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,999,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1001,        if (searchStr.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1002,            return startPos;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1004,        for (int i = startPos; i < endLimit; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1005,"            if (str.regionMatches(true, i, searchStr, 0, searchStr.length())) {",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1006,                return i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1009,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1034,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1035,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1037,        return str.lastIndexOf(searchChar);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1068,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1069,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1071,"        return str.lastIndexOf(searchChar, startPos);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1097,        if (str == null || searchStr == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1098,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1100,        return str.lastIndexOf(searchStr);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1137,"        return ordinalIndexOf(str, searchStr, ordinal, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1169,        if (str == null || searchStr == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1170,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1172,"        return str.lastIndexOf(searchStr, startPos);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1198,        if (str == null || searchStr == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1199,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1201,"        return lastIndexOfIgnoreCase(str, searchStr, str.length());",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1233,        if (str == null || searchStr == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1234,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1236,        if (startPos > (str.length() - searchStr.length())) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1237,            startPos = str.length() - searchStr.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1239,        if (startPos < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1240,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1242,        if (searchStr.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1243,            return startPos;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1246,        for (int i = startPos; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1247,"            if (str.regionMatches(true, i, searchStr, 0, searchStr.length())) {",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1248,                return i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1251,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1276,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1277,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1279,        return str.indexOf(searchChar) >= 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1304,        if (str == null || searchStr == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1305,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1307,        return str.indexOf(searchStr) >= 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1334,        if (str == null || searchStr == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1335,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1337,        int len = searchStr.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1338,        int max = str.length() - len;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1339,        for (int i = 0; i <= max; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1340,"            if (str.regionMatches(true, i, searchStr, 0, len)) {",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1341,                return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1344,        return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1373,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1386,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1413,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1445,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1457,                        if (searchChars[j + 1] == cs.charAt(i + 1)) {,0.0,1,-1,0
org/apache/commons/lang3/StringUtils,30,1458,                            return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1499,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1530,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1544,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1571,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1580,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1608,        if (valid == null || cs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1609,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1611,        if (cs.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1612,            return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1614,        if (valid.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1615,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1617,"        return indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1643,        if (cs == null || validChars == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1644,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1646,"        return containsOnly(cs, validChars.toCharArray());",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1675,            return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1716,            return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1750,        if (str == null || searchStrs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1751,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1753,        int sz = searchStrs.length;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1756,        int ret = Integer.MAX_VALUE;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1758,        int tmp = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1759,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1760,            String search = searchStrs[i];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1761,            if (search == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1762,                continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1764,            tmp = str.indexOf(search);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1765,            if (tmp == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1766,                continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1769,            if (tmp < ret) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1770,                ret = tmp;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1774,        return (ret == Integer.MAX_VALUE) ? INDEX_NOT_FOUND : ret;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1803,        if (str == null || searchStrs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1804,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1806,        int sz = searchStrs.length;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1807,        int ret = INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1808,        int tmp = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1809,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1810,            String search = searchStrs[i];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1811,            if (search == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1812,                continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1814,            tmp = str.lastIndexOf(search);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1815,            if (tmp > ret) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1816,                ret = tmp;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1819,        return ret;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1849,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1850,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1854,        if (start < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1855,            start = str.length() + start; // remember start is negative,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1858,        if (start < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1859,            start = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1861,        if (start > str.length()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1862,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1865,        return str.substring(start);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1904,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1905,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1909,        if (end < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1910,            end = str.length() + end; // remember end is negative,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1912,        if (start < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1913,            start = str.length() + start; // remember start is negative,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1917,        if (end > str.length()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1918,            end = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1922,        if (start > end) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1923,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1926,        if (start < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1927,            start = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1929,        if (end < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1930,            end = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1933,"        return str.substring(start, end);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1959,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1960,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1962,        if (len < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1963,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1965,        if (str.length() <= len) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1966,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1968,"        return str.substring(0, len);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1992,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1993,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1995,        if (len < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1996,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1998,        if (str.length() <= len) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,1999,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2001,        return str.substring(str.length() - len);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2029,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2030,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2032,        if (len < 0 || pos > str.length()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2033,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2035,        if (pos < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2036,            pos = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2038,        if (str.length() <= (pos + len)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2039,            return str.substring(pos);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2041,"        return str.substring(pos, pos + len);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2074,        if (isEmpty(str) || separator == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2075,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2077,        if (separator.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2078,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2080,        int pos = str.indexOf(separator);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2081,        if (pos == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2082,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2084,"        return str.substring(0, pos);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2116,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2117,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2119,        if (separator == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2120,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2122,        int pos = str.indexOf(separator);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2123,        if (pos == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2124,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2126,        return str.substring(pos + separator.length());,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2157,        if (isEmpty(str) || isEmpty(separator)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2158,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2160,        int pos = str.lastIndexOf(separator);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2161,        if (pos == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2162,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2164,"        return str.substring(0, pos);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2197,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2198,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2200,        if (isEmpty(separator)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2201,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2203,        int pos = str.lastIndexOf(separator);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2204,        if (pos == INDEX_NOT_FOUND || pos == (str.length() - separator.length())) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2205,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2207,        return str.substring(pos + separator.length());,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2234,"        return substringBetween(str, tag, tag);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2265,        if (str == null || open == null || close == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2266,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2268,        int start = str.indexOf(open);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2269,        if (start != INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2270,"            int end = str.indexOf(close, start + open.length());",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2271,            if (end != INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2272,"                return str.substring(start + open.length(), end);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2275,        return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2301,        if (str == null || isEmpty(open) || isEmpty(close)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2302,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2304,        int strLen = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2305,        if (strLen == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2306,            return ArrayUtils.EMPTY_STRING_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2308,        int closeLen = close.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2309,        int openLen = open.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2310,        List<String> list = new ArrayList<String>();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2311,        int pos = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2312,        while (pos < (strLen - closeLen)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2313,"            int start = str.indexOf(open, pos);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2314,            if (start < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2315,                break;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2317,            start += openLen;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2318,"            int end = str.indexOf(close, start);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2319,            if (end < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2320,                break;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2322,"            list.add(str.substring(start, end));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2323,            pos = end + closeLen;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2324,        },0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2325,        if (list.isEmpty()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2326,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2328,        return list.toArray(new String [list.size()]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2359,"        return split(str, null, -1);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2387,"        return splitWorker(str, separatorChar, false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2416,"        return splitWorker(str, separatorChars, -1, false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2450,"        return splitWorker(str, separatorChars, max, false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2477,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2508,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2537,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2570,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2590,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2591,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2594,        int len = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2596,        if (len == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2597,            return ArrayUtils.EMPTY_STRING_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2600,        if ((separator == null) || (EMPTY.equals(separator))) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2602,"            return splitWorker(str, null, max, preserveAllTokens);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2605,        int separatorLength = separator.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2607,        ArrayList<String> substrings = new ArrayList<String>();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2608,        int numberOfSubstrings = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2609,        int beg = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2610,        int end = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2611,        while (end < len) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2612,"            end = str.indexOf(separator, beg);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2614,            if (end > -1) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2615,                if (end > beg) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2616,                    numberOfSubstrings += 1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2618,                    if (numberOfSubstrings == max) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2619,                        end = len;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2620,                        substrings.add(str.substring(beg));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2624,"                        substrings.add(str.substring(beg, end));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2629,                        beg = end + separatorLength;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2633,                    if (preserveAllTokens) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2634,                        numberOfSubstrings += 1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2635,                        if (numberOfSubstrings == max) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2636,                            end = len;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2637,                            substrings.add(str.substring(beg));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2639,                            substrings.add(EMPTY);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2642,                    beg = end + separatorLength;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2646,                substrings.add(str.substring(beg));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2647,                end = len;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2651,        return substrings.toArray(new String[substrings.size()]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2680,"        return splitWorker(str, null, -1, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2716,"        return splitWorker(str, separatorChar, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2734,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2735,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2737,        int len = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2738,        if (len == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2739,            return ArrayUtils.EMPTY_STRING_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2741,        List<String> list = new ArrayList<String>();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2742,"        int i = 0, start = 0;",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2743,        boolean match = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2744,        boolean lastMatch = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2745,        while (i < len) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2746,            if (str.charAt(i) == separatorChar) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2747,                if (match || preserveAllTokens) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2748,"                    list.add(str.substring(start, i));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2749,                    match = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2750,                    lastMatch = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2752,                start = ++i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2753,                continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2755,            lastMatch = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2756,            match = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2757,            i++;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2759,        if (match || (preserveAllTokens && lastMatch)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2760,"            list.add(str.substring(start, i));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2762,        return list.toArray(new String[list.size()]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2799,"        return splitWorker(str, separatorChars, -1, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2839,"        return splitWorker(str, separatorChars, max, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2861,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2862,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2864,        int len = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2865,        if (len == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2866,            return ArrayUtils.EMPTY_STRING_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2868,        List<String> list = new ArrayList<String>();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2869,        int sizePlus1 = 1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2870,"        int i = 0, start = 0;",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2871,        boolean match = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2872,        boolean lastMatch = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2873,        if (separatorChars == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2875,            while (i < len) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2876,                if (Character.isWhitespace(str.charAt(i))) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2877,                    if (match || preserveAllTokens) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2878,                        lastMatch = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2879,                        if (sizePlus1++ == max) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2880,                            i = len;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2881,                            lastMatch = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2883,"                        list.add(str.substring(start, i));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2884,                        match = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2886,                    start = ++i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2887,                    continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2889,                lastMatch = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2890,                match = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2891,                i++;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2893,        } else if (separatorChars.length() == 1) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2895,            char sep = separatorChars.charAt(0);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2896,            while (i < len) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2897,                if (str.charAt(i) == sep) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2898,                    if (match || preserveAllTokens) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2899,                        lastMatch = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2900,                        if (sizePlus1++ == max) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2901,                            i = len;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2902,                            lastMatch = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2904,"                        list.add(str.substring(start, i));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2905,                        match = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2907,                    start = ++i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2908,                    continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2910,                lastMatch = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2911,                match = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2912,                i++;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2914,        } else {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2916,            while (i < len) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2917,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2918,                    if (match || preserveAllTokens) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2919,                        lastMatch = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2920,                        if (sizePlus1++ == max) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2921,                            i = len;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2922,                            lastMatch = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2924,"                        list.add(str.substring(start, i));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2925,                        match = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2927,                    start = ++i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2928,                    continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2930,                lastMatch = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2931,                match = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2932,                i++;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2935,        if (match || (preserveAllTokens && lastMatch)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2936,"            list.add(str.substring(start, i));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2938,        return list.toArray(new String[list.size()]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2961,"        return splitByCharacterType(str, false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,2989,"        return splitByCharacterType(str, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3007,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3008,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3010,        if (str.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3011,            return ArrayUtils.EMPTY_STRING_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3013,        char[] c = str.toCharArray();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3014,        List<String> list = new ArrayList<String>();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3015,        int tokenStart = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3016,        int currentType = Character.getType(c[tokenStart]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3017,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3018,            int type = Character.getType(c[pos]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3019,            if (type == currentType) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3020,                continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3022,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3023,                int newTokenStart = pos - 1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3024,                if (newTokenStart != tokenStart) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3025,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3026,                    tokenStart = newTokenStart;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3028,            } else {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3029,"                list.add(new String(c, tokenStart, pos - tokenStart));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3030,                tokenStart = pos;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3032,            currentType = type;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3034,"        list.add(new String(c, tokenStart, c.length - tokenStart));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3035,        return list.toArray(new String[list.size()]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3061,"        return join(array, null);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3087,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3088,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3091,"        return join(array, separator, 0, array.length);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3121,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3122,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3124,        int bufSize = (endIndex - startIndex);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3125,        if (bufSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3126,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3129,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3130,        StringBuilder buf = new StringBuilder(bufSize);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3132,        for (int i = startIndex; i < endIndex; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3133,            if (i > startIndex) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3134,                buf.append(separator);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3136,            if (array[i] != null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3137,                buf.append(array[i]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3140,        return buf.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3168,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3169,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3171,"        return join(array, separator, 0, array.length);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3202,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3203,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3205,        if (separator == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3206,            separator = EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3211,        int bufSize = (endIndex - startIndex);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3212,        if (bufSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3213,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3216,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3219,        StringBuilder buf = new StringBuilder(bufSize);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3221,        for (int i = startIndex; i < endIndex; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3222,            if (i > startIndex) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3223,                buf.append(separator);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3225,            if (array[i] != null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3226,                buf.append(array[i]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3229,        return buf.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3249,        if (iterator == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3250,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3252,        if (!iterator.hasNext()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3253,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3255,        Object first = iterator.next();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3256,        if (!iterator.hasNext()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3257,            return ObjectUtils.toString(first);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3261,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3262,        if (first != null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3263,            buf.append(first);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3266,        while (iterator.hasNext()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3267,            buf.append(separator);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3268,            Object obj = iterator.next();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3269,            if (obj != null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3270,                buf.append(obj);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3272,        },0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3274,        return buf.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3293,        if (iterator == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3294,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3296,        if (!iterator.hasNext()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3297,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3299,        Object first = iterator.next();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3300,        if (!iterator.hasNext()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3301,            return ObjectUtils.toString(first);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3305,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3306,        if (first != null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3307,            buf.append(first);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3310,        while (iterator.hasNext()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3311,            if (separator != null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3312,                buf.append(separator);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3314,            Object obj = iterator.next();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3315,            if (obj != null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3316,                buf.append(obj);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3318,        },0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3319,        return buf.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3337,        if (iterable == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3338,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3340,"        return join(iterable.iterator(), separator);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3358,        if (iterable == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3359,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3361,"        return join(iterable.iterator(), separator);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3381,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3382,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3384,        int sz = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3385,        char[] chs = new char[sz];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3386,        int count = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3387,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3388,            if (!Character.isWhitespace(str.charAt(i))) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3389,                chs[count++] = str.charAt(i);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3392,        if (count == sz) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3393,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3395,"        return new String(chs, 0, count);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3425,        if (isEmpty(str) || isEmpty(remove)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3426,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3428,        if (str.startsWith(remove)){,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3429,            return str.substring(remove.length());,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3431,        return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3460,        if (isEmpty(str) || isEmpty(remove)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3461,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3463,"        if (startsWithIgnoreCase(str, remove)) {",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3464,            return str.substring(remove.length());,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3466,        return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3494,        if (isEmpty(str) || isEmpty(remove)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3495,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3497,        if (str.endsWith(remove)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3498,"            return str.substring(0, str.length() - remove.length());",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3500,        return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3530,        if (isEmpty(str) || isEmpty(remove)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3531,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3533,"        if (endsWithIgnoreCase(str, remove)) {",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3534,"            return str.substring(0, str.length() - remove.length());",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3536,        return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3563,        if (isEmpty(str) || isEmpty(remove)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3564,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3566,"        return replace(str, remove, EMPTY, -1);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3589,        if (isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3590,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3592,        char[] chars = str.toCharArray();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3593,        int pos = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3594,        for (int i = 0; i < chars.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3595,            if (chars[i] != remove) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3596,                chars[pos++] = chars[i];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3599,"        return new String(chars, 0, pos);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3628,"        return replace(text, searchString, replacement, 1);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3655,"        return replace(text, searchString, replacement, -1);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3687,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3688,            return text;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3690,        int start = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3691,"        int end = text.indexOf(searchString, start);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3692,        if (end == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3693,            return text;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3695,        int replLength = searchString.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3696,        int increase = replacement.length() - replLength;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3697,        increase = (increase < 0 ? 0 : increase);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3698,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3699,        StringBuilder buf = new StringBuilder(text.length() + increase);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3700,        while (end != INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3701,"            buf.append(text.substring(start, end)).append(replacement);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3702,            start = end + replLength;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3703,            if (--max == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3704,                break;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3706,"            end = text.indexOf(searchString, start);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3708,        buf.append(text.substring(start));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3709,        return buf.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3752,"        return replaceEach(text, searchList, replacementList, false, 0);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3803,        int timeToLive = searchList == null ? 0 : searchList.length;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3804,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3862,        if (text == null || text.length() == 0 || searchList == null || ,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3865,            return text;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3869,        if (timeToLive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3870,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3873,        int searchLength = searchList.length;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3874,        int replacementLength = replacementList.length;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3877,        if (searchLength != replacementLength) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3878,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3885,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3888,        int textIndex = -1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3889,        int replaceIndex = -1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3890,        int tempIndex = -1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3894,        for (int i = 0; i < searchLength; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3895,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3898,                continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3900,            tempIndex = text.indexOf(searchList[i]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3903,            if (tempIndex == -1) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3904,                noMoreMatchesForReplIndex[i] = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3906,                if (textIndex == -1 || tempIndex < textIndex) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3907,                    textIndex = tempIndex;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3908,                    replaceIndex = i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3915,        if (textIndex == -1) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3916,            return text;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3919,        int start = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3922,        int increase = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3925,        for (int i = 0; i < searchList.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3926,            if (searchList[i] == null || replacementList[i] == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3927,                continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3929,            int greater = replacementList[i].length() - searchList[i].length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3930,            if (greater > 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3931,                increase += 3 * greater; // assume 3 matches,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3935,"        increase = Math.min(increase, text.length() / 5);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3937,        StringBuilder buf = new StringBuilder(text.length() + increase);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3939,        while (textIndex != -1) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3941,            for (int i = start; i < textIndex; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3942,                buf.append(text.charAt(i));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3944,            buf.append(replacementList[replaceIndex]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3946,            start = textIndex + searchList[replaceIndex].length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3948,            textIndex = -1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3949,            replaceIndex = -1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3950,            tempIndex = -1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3953,            for (int i = 0; i < searchLength; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3954,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3957,                    continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3959,"                tempIndex = text.indexOf(searchList[i], start);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3962,                if (tempIndex == -1) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3963,                    noMoreMatchesForReplIndex[i] = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3965,                    if (textIndex == -1 || tempIndex < textIndex) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3966,                        textIndex = tempIndex;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3967,                        replaceIndex = i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3974,        int textLength = text.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3975,        for (int i = start; i < textLength; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3976,            buf.append(text.charAt(i));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3978,        String result = buf.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3979,        if (!repeat) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3980,            return result;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,3983,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4009,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4010,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4012,"        return str.replace(searchChar, replaceChar);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4052,        if (isEmpty(str) || isEmpty(searchChars)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4053,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4055,        if (replaceChars == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4056,            replaceChars = EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4058,        boolean modified = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4059,        int replaceCharsLength = replaceChars.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4060,        int strLength = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4061,        StringBuilder buf = new StringBuilder(strLength);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4062,        for (int i = 0; i < strLength; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4063,            char ch = str.charAt(i);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4064,            int index = searchChars.indexOf(ch);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4065,            if (index >= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4066,                modified = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4067,                if (index < replaceCharsLength) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4068,                    buf.append(replaceChars.charAt(index));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4071,                buf.append(ch);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4074,        if (modified) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4075,            return buf.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4077,        return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4112,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4113,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4115,        if (overlay == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4116,            overlay = EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4118,        int len = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4119,        if (start < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4120,            start = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4122,        if (start > len) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4123,            start = len;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4125,        if (end < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4126,            end = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4128,        if (end > len) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4129,            end = len;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4131,        if (start > end) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4132,            int temp = start;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4133,            start = end;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4134,            end = temp;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4136,        return new StringBuilder(len + start - end + overlay.length() + 1),0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4171,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4172,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4175,        if (str.length() == 1) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4176,            char ch = str.charAt(0);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4177,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4178,                return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4180,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4183,        int lastIdx = str.length() - 1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4184,        char last = str.charAt(lastIdx);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4186,        if (last == CharUtils.LF) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4187,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4188,                lastIdx--;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4190,        } else if (last != CharUtils.CR) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4191,            lastIdx++;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4193,"        return str.substring(0, lastIdx);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4223,        if (isEmpty(str) || separator == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4224,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4226,        if (str.endsWith(separator)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4227,"            return str.substring(0, str.length() - separator.length());",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4229,        return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4258,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4259,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4261,        int strLen = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4262,        if (strLen < 2) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4263,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4265,        int lastIdx = strLen - 1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4266,"        String ret = str.substring(0, lastIdx);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4267,        char last = str.charAt(lastIdx);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4268,        if (last == CharUtils.LF) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4269,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4270,"                return ret.substring(0, lastIdx - 1);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4273,        return ret;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4303,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4304,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4306,        if (repeat <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4307,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4309,        int inputLength = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4310,        if (repeat == 1 || inputLength == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4311,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4313,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4314,"            return padding(repeat, str.charAt(0));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4317,        int outputLength = inputLength * repeat;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4318,        switch (inputLength) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4320,                char ch = str.charAt(0);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4321,                char[] output1 = new char[outputLength];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4322,                for (int i = repeat - 1; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4323,                    output1[i] = ch;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4325,                return new String(output1);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4327,                char ch0 = str.charAt(0);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4328,                char ch1 = str.charAt(1);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4329,                char[] output2 = new char[outputLength];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4330,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4331,                    output2[i] = ch0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4332,                    output2[i + 1] = ch1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4334,                return new String(output2);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4336,                StringBuilder buf = new StringBuilder(outputLength);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4337,                for (int i = 0; i < repeat; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4338,                    buf.append(str);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4340,                return buf.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4364,        if(str == null || separator == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4365,"            return repeat(str, repeat);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4368,"            String result = repeat(str + separator, repeat);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4369,"            return removeEnd(result, separator);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4397,        if (repeat < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4398,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4400,        final char[] buf = new char[repeat];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4401,        for (int i = 0; i < buf.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4402,            buf[i] = padChar;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4404,        return new String(buf);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4427,"        return rightPad(str, size, ' ');",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4452,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4453,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4455,        int pads = size - str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4456,        if (pads <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4457,            return str; // returns original String when possible,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4459,        if (pads > PAD_LIMIT) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4460,"            return rightPad(str, size, String.valueOf(padChar));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4462,"        return str.concat(padding(pads, padChar));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4489,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4490,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4492,        if (isEmpty(padStr)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4493,"            padStr = "" "";",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4495,        int padLen = padStr.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4496,        int strLen = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4497,        int pads = size - strLen;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4498,        if (pads <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4499,            return str; // returns original String when possible,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4501,        if (padLen == 1 && pads <= PAD_LIMIT) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4502,"            return rightPad(str, size, padStr.charAt(0));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4505,        if (pads == padLen) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4506,            return str.concat(padStr);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4507,        } else if (pads < padLen) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4508,"            return str.concat(padStr.substring(0, pads));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4510,            char[] padding = new char[pads];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4511,            char[] padChars = padStr.toCharArray();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4512,            for (int i = 0; i < pads; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4513,                padding[i] = padChars[i % padLen];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4515,            return str.concat(new String(padding));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4539,"        return leftPad(str, size, ' ');",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4564,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4565,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4567,        int pads = size - str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4568,        if (pads <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4569,            return str; // returns original String when possible,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4571,        if (pads > PAD_LIMIT) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4572,"            return leftPad(str, size, String.valueOf(padChar));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4574,"        return padding(pads, padChar).concat(str);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4601,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4602,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4604,        if (isEmpty(padStr)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4605,"            padStr = "" "";",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4607,        int padLen = padStr.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4608,        int strLen = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4609,        int pads = size - strLen;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4610,        if (pads <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4611,            return str; // returns original String when possible,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4613,        if (padLen == 1 && pads <= PAD_LIMIT) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4614,"            return leftPad(str, size, padStr.charAt(0));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4617,        if (pads == padLen) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4618,            return padStr.concat(str);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4619,        } else if (pads < padLen) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4620,"            return padStr.substring(0, pads).concat(str);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4622,            char[] padding = new char[pads];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4623,            char[] padChars = padStr.toCharArray();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4624,            for (int i = 0; i < pads; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4625,                padding[i] = padChars[i % padLen];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4627,            return new String(padding).concat(str);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4643,		return CharSequenceUtils.length(cs);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4672,"        return center(str, size, ' ');",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4700,        if (str == null || size <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4701,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4703,        int strLen = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4704,        int pads = size - strLen;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4705,        if (pads <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4706,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4708,"        str = leftPad(str, strLen + pads / 2, padChar);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4709,"        str = rightPad(str, size, padChar);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4710,        return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4740,        if (str == null || size <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4741,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4743,        if (isEmpty(padStr)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4744,"            padStr = "" "";",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4746,        int strLen = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4747,        int pads = size - strLen;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4748,        if (pads <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4749,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4751,"        str = leftPad(str, strLen + pads / 2, padStr);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4752,"        str = rightPad(str, size, padStr);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4753,        return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4778,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4779,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4781,        return str.toUpperCase();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4801,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4802,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4804,        return str.toUpperCase(locale);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4827,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4828,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4830,        return str.toLowerCase();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4850,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4851,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4853,        return str.toLowerCase(locale);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4877,        if (cs == null ) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4878,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4881,        if ((strLen = cs.length()) == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4882,            return cs.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4884,        return new StringBuilder(strLen),0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4911,        if (cs == null ) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4912,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4915,        if ((strLen = cs.length()) == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4916,            return cs.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4918,        return new StringBuilder(strLen),0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4953,        if (str == null || (strLen = str.length()) == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4954,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4956,        StringBuilder buffer = new StringBuilder(strLen);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4958,        char ch = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4959,        for (int i = 0; i < strLen; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4960,            ch = str.charAt(i);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4961,            if (Character.isUpperCase(ch)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4962,                ch = Character.toLowerCase(ch);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4963,            } else if (Character.isTitleCase(ch)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4964,                ch = Character.toLowerCase(ch);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4965,            } else if (Character.isLowerCase(ch)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4966,                ch = Character.toUpperCase(ch);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4968,            buffer.append(ch);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4970,        return buffer.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4995,        if (isEmpty(str) || isEmpty(sub)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4996,            return 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4998,        int count = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,4999,        int idx = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5000,"        while ((idx = str.indexOf(sub, idx)) != INDEX_NOT_FOUND) {",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5001,            count++;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5002,            idx += sub.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5004,        return count;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5028,        if (cs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5029,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5031,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5032,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5033,            if (Character.isLetter(cs.charAt(i)) == false) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5034,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5037,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5062,        if (cs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5063,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5065,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5066,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5067,            if ((Character.isLetter(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5068,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5071,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5095,        if (cs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5096,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5098,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5099,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5100,            if (Character.isLetterOrDigit(cs.charAt(i)) == false) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5101,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5104,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5129,        if (cs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5130,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5132,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5133,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5134,            if ((Character.isLetterOrDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5135,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5138,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5167,        if (cs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5168,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5170,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5171,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5172,            if (CharUtils.isAsciiPrintable(cs.charAt(i)) == false) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5173,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5176,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5201,        if (cs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5202,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5204,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5205,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5206,            if (Character.isDigit(cs.charAt(i)) == false) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5207,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5210,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5237,        if (cs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5238,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5240,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5241,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5242,            if ((Character.isDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5243,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5246,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5269,        if (cs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5270,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5272,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5273,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5274,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5275,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5278,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5300,        if (cs == null || isEmpty(cs)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5301,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5303,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5304,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5305,            if (Character.isLowerCase(cs.charAt(i)) == false) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5306,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5309,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5331,        if (cs == null || isEmpty(cs)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5332,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5334,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5335,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5336,            if (Character.isUpperCase(cs.charAt(i)) == false) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5337,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5340,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5362,        return str == null ? EMPTY : str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5383,        return str == null ? defaultStr : str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5404,        return StringUtils.isEmpty(str) ? defaultStr : str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5424,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5425,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5427,		return new StringBuilder(str).reverse().toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5450,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5451,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5455,"        String[] strs = split(str, separatorChar);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5456,        ArrayUtils.reverse(strs);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5457,"        return join(strs, separatorChar);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5495,"        return abbreviate(str, 0, maxWidth);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5534,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5535,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5537,        if (maxWidth < 4) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5538,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5540,        if (str.length() <= maxWidth) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5541,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5543,        if (offset > str.length()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5544,            offset = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5546,        if ((str.length() - offset) < (maxWidth - 3)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5547,            offset = str.length() - (maxWidth - 3);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5549,"        final String abrevMarker = ""..."";",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5550,		if (offset <= 4) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5551,"            return str.substring(0, maxWidth - 3) + abrevMarker;",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5553,        if (maxWidth < 7) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5554,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5556,        if ((offset + (maxWidth - 3)) < str.length()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5557,"            return abrevMarker + abbreviate(str.substring(offset), maxWidth - 3);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5559,        return abrevMarker + str.substring(str.length() - (maxWidth - 3));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5592,        if (isEmpty(str) || isEmpty(middle)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5593,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5596,        if (length >= str.length() || length < (middle.length()+2)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5597,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5600,        int targetSting = length-middle.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5601,        int startOffset = targetSting/2+targetSting%2;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5602,        int endOffset = str.length()-targetSting/2;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5604,        StringBuilder builder = new StringBuilder(length);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5605,"        builder.append(str.substring(0,startOffset));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5606,        builder.append(middle);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5607,        builder.append(str.substring(endOffset));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5609,        return builder.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5640,        if (str1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5641,            return str2;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5643,        if (str2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5644,            return str1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5646,"        int at = indexOfDifference(str1, str2);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5647,        if (at == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5648,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5650,        return str2.substring(at);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5677,        if (cs1 == cs2) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5678,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5680,        if (cs1 == null || cs2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5681,            return 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5684,        for (i = 0; i < cs1.length() && i < cs2.length(); ++i) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5685,            if (cs1.charAt(i) != cs2.charAt(i)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5686,                break;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5689,        if (i < cs2.length() || i < cs1.length()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5690,            return i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5692,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5727,        if (css == null || css.length <= 1) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5728,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5730,        boolean anyStringNull = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5731,        boolean allStringsNull = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5732,        int arrayLen = css.length;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5733,        int shortestStrLen = Integer.MAX_VALUE;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5734,        int longestStrLen = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5739,        for (int i = 0; i < arrayLen; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5740,            if (css[i] == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5741,                anyStringNull = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5742,                shortestStrLen = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5744,                allStringsNull = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5745,"                shortestStrLen = Math.min(css[i].length(), shortestStrLen);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5746,"                longestStrLen = Math.max(css[i].length(), longestStrLen);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5751,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5752,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5756,        if (shortestStrLen == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5757,            return 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5761,        int firstDiff = -1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5762,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5763,            char comparisonChar = css[0].charAt(stringPos);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5764,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5765,                if (css[arrayPos].charAt(stringPos) != comparisonChar) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5766,                    firstDiff = stringPos;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5767,                    break;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5770,            if (firstDiff != -1) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5771,                break;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5775,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5779,            return shortestStrLen;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5781,        return firstDiff;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5818,        if (strs == null || strs.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5819,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5821,        int smallestIndexOfDiff = indexOfDifference(strs);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5822,        if (smallestIndexOfDiff == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5824,            if (strs[0] == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5825,                return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5827,            return strs[0];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5828,        } else if (smallestIndexOfDiff == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5830,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5833,"            return strs[0].substring(0, smallestIndexOfDiff);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5874,        if (s == null || t == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5875,"            throw new IllegalArgumentException(""Strings must not be null"");",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5895,        int n = s.length(); // length of s,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5896,        int m = t.length(); // length of t,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5898,        if (n == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5899,            return m;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5900,        } else if (m == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5901,            return n;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5904,        if (n > m) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5906,        	CharSequence tmp = s;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5907,            s = t;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5908,            t = tmp;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5909,            n = m;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5910,            m = t.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5913,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5914,"        int d[] = new int[n+1]; // cost array, horizontally",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5925,        for (i = 0; i<=n; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5926,            p[i] = i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5929,        for (j = 1; j<=m; j++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5930,            t_j = t.charAt(j-1);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5931,            d[0] = j;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5933,            for (i=1; i<=n; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5934,                cost = s.charAt(i-1)==t_j ? 0 : 1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5936,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5940,            _d = p;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5941,            p = d;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5942,            d = _d;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5947,        return p[n];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,5996,"        return startsWith(str, prefix, false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6021,"        return startsWith(str, prefix, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6036,        if (str == null || prefix == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6037,            return (str == null && prefix == null);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6039,        if (prefix.length() > str.length()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6040,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6042,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6064,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6065,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6067,        for (int i = 0; i < searchStrings.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6068,            String searchString = searchStrings[i];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6069,"            if (StringUtils.startsWith(string, searchString)) {",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6070,                return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6073,        return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6102,"        return endsWith(str, suffix, false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6128,"        return endsWith(str, suffix, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6143,        if (str == null || suffix == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6144,            return str == null && suffix == null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6146,        if (suffix.length() > str.length()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6147,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6149,        int strOffset = str.length() - suffix.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,30,6150,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",0.0,0,-1,0
