project_path,version,lines,statement,suspicious,faulty,predict,miss_line
org/apache/commons/lang3/StringUtils,31,1441,		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,1.0,0,1,0
org/apache/commons/lang3/StringUtils,31,1444,		int csLength = cs.length();,1.0,0,1,0
org/apache/commons/lang3/StringUtils,31,1445,		int searchLength = searchChars.length;,1.0,0,1,0
org/apache/commons/lang3/StringUtils,31,1446,		for (int i = 0; i < csLength; i++) {,1.0,1,1,1
org/apache/commons/lang3/StringUtils,31,1447,			char ch = cs.charAt(i);,1.0,0,1,0
org/apache/commons/lang3/StringUtils,31,1448,			for (int j = 0; j < searchLength; j++) {,1.0,0,1,0
org/apache/commons/lang3/StringUtils,31,1449,				if (searchChars[j] == ch) {,1.0,0,0,0
org/apache/commons/lang3/StringUtils,31,1452,						return true;,1.0,1,1,1
org/apache/commons/lang3/StringUtils,31,1487,        if (searchChars == null) {,0.5,1,-1,1
org/apache/commons/lang3/StringUtils,31,1490,"        return containsAny(cs, searchChars.toCharArray());",0.5,1,-1,1
org/apache/commons/lang3/ArrayUtils,31,3279,        if (array == null || array.length == 0) {,0.30769,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3282,        return false;,0.30769,0,-1,0
org/apache/commons/lang3/StringUtils,31,194,        return cs == null || cs.length() == 0;,0.04396,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,56,    public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];,0.01762,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,60,    public static final Class<?>[] EMPTY_CLASS_ARRAY = new Class[0];,0.01762,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,64,    public static final String[] EMPTY_STRING_ARRAY = new String[0];,0.01762,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,68,    public static final long[] EMPTY_LONG_ARRAY = new long[0];,0.01762,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,72,    public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];,0.01762,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,76,    public static final int[] EMPTY_INT_ARRAY = new int[0];,0.01762,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,80,    public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];,0.01762,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,84,    public static final short[] EMPTY_SHORT_ARRAY = new short[0];,0.01762,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,88,    public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];,0.01762,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,92,    public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];,0.01762,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,96,    public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];,0.01762,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,100,    public static final double[] EMPTY_DOUBLE_ARRAY = new double[0];,0.01762,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,104,    public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY = new Double[0];,0.01762,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,108,    public static final float[] EMPTY_FLOAT_ARRAY = new float[0];,0.01762,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,112,    public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY = new Float[0];,0.01762,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,116,    public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];,0.01762,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,120,    public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];,0.01762,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,124,    public static final char[] EMPTY_CHAR_ARRAY = new char[0];,0.01762,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,128,    public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];,0.01762,0,-1,0
org/apache/commons/lang3/StringUtils,31,170,        super();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,171,    },0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,212,        return !StringUtils.isEmpty(cs);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,232,        if (cs == null || (strLen = cs.length()) == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,233,            return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,235,        for (int i = 0; i < strLen; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,236,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,237,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,240,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,260,        return !StringUtils.isBlank(cs);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,289,        return str == null ? null : str.trim();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,315,        String ts = trim(str);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,316,        return isEmpty(ts) ? null : ts;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,341,        return str == null ? EMPTY : str.trim();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,369,"        return strip(str, null);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,396,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,397,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,399,"        str = strip(str, null);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,400,        return str.length() == 0 ? null : str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,426,"        return str == null ? EMPTY : strip(str, null);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,456,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,457,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,459,"        str = stripStart(str, stripChars);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,460,"        return stripEnd(str, stripChars);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,489,        if (str == null || (strLen = str.length()) == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,490,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,492,        int start = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,493,        if (stripChars == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,494,            while ((start != strLen) && Character.isWhitespace(str.charAt(start))) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,495,                start++;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,497,        } else if (stripChars.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,498,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,500,            while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,501,                start++;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,504,        return str.substring(start);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,533,        if (str == null || (end = str.length()) == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,534,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,537,        if (stripChars == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,538,            while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,539,                end--;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,541,        } else if (stripChars.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,542,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,544,            while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,545,                end--;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,548,"        return str.substring(0, end);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,573,"        return stripAll(strs, null);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,603,        if (strs == null || (strsLen = strs.length) == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,604,            return strs;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,606,        String[] newArr = new String[strsLen];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,607,        for (int i = 0; i < strsLen; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,608,"            newArr[i] = strip(strs[i], stripChars);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,610,        return newArr;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,630,        if(input == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,631,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,633,        if(SystemUtils.isJavaVersionAtLeast(1.6f)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,640,"                Class<?> normalizerFormClass = ClassUtils.getClass(""java.text.Normalizer$Form"", false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,643,"                Class<?> normalizerClass = ClassUtils.getClass(""java.text.Normalizer"", false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,646,"                java.lang.reflect.Method method = normalizerClass.getMethod(""normalize"", CharSequence.class, normalizerFormClass );",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,649,"                java.lang.reflect.Field nfd = normalizerFormClass.getField(""NFD"");",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,652,"                String decomposed = (String) method.invoke( null, input, nfd.get(null) );",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,655,"                java.util.regex.Pattern accentPattern = java.util.regex.Pattern.compile(""\\p{InCombiningDiacriticalMarks}+"");",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,656,"                return accentPattern.matcher(decomposed).replaceAll("""");",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,657,            } catch(ClassNotFoundException cnfe) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,658,"                throw new RuntimeException(""ClassNotFoundException occurred during 1.6 backcompat code"", cnfe);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,659,            } catch(NoSuchMethodException nsme) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,660,"                throw new RuntimeException(""NoSuchMethodException occurred during 1.6 backcompat code"", nsme);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,661,            } catch(NoSuchFieldException nsfe) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,662,"                throw new RuntimeException(""NoSuchFieldException occurred during 1.6 backcompat code"", nsfe);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,663,            } catch(IllegalAccessException iae) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,664,"                throw new RuntimeException(""IllegalAccessException occurred during 1.6 backcompat code"", iae);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,665,            } catch(IllegalArgumentException iae) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,666,"                throw new RuntimeException(""IllegalArgumentException occurred during 1.6 backcompat code"", iae);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,667,            } catch(java.lang.reflect.InvocationTargetException ite) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,668,"                throw new RuntimeException(""InvocationTargetException occurred during 1.6 backcompat code"", ite);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,669,            } catch(SecurityException se) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,670,"                throw new RuntimeException(""SecurityException occurred during 1.6 backcompat code"", se);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,673,"            throw new UnsupportedOperationException(""The stripAccents(String) method is not supported until Java 1.6"");",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,700,        return cs1 == null ? cs2 == null : cs1.equals(cs2);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,725,        return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,750,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,751,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,753,        return str.indexOf(searchChar);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,782,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,783,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,785,"        return str.indexOf(searchChar, startPos);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,812,        if (str == null || searchStr == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,813,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,815,        return str.indexOf(searchStr);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,851,        if (str == null || searchStr == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,852,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,854,"        return str.indexOf(searchStr, startPos);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,891,"        return ordinalIndexOf(str, searchStr, ordinal, false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,909,        if (str == null || searchStr == null || ordinal <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,910,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,912,        if (searchStr.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,913,            return lastIndex ? str.length() : 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,915,        int found = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,916,        int index = lastIndex ? str.length() : INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,918,            if(lastIndex) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,919,"                index = str.lastIndexOf(searchStr, index - 1);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,921,"                index = str.indexOf(searchStr, index + 1);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,923,            if (index < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,924,                return index;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,926,            found++;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,927,        } while (found < ordinal);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,928,        return index;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,956,"        return indexOfIgnoreCase(str, searchStr, 0);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,991,        if (str == null || searchStr == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,992,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,994,        if (startPos < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,995,            startPos = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,997,        int endLimit = (str.length() - searchStr.length()) + 1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,998,        if (startPos > endLimit) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,999,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1001,        if (searchStr.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1002,            return startPos;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1004,        for (int i = startPos; i < endLimit; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1005,"            if (str.regionMatches(true, i, searchStr, 0, searchStr.length())) {",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1006,                return i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1009,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1034,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1035,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1037,        return str.lastIndexOf(searchChar);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1068,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1069,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1071,"        return str.lastIndexOf(searchChar, startPos);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1097,        if (str == null || searchStr == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1098,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1100,        return str.lastIndexOf(searchStr);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1137,"        return ordinalIndexOf(str, searchStr, ordinal, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1169,        if (str == null || searchStr == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1170,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1172,"        return str.lastIndexOf(searchStr, startPos);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1198,        if (str == null || searchStr == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1199,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1201,"        return lastIndexOfIgnoreCase(str, searchStr, str.length());",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1233,        if (str == null || searchStr == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1234,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1236,        if (startPos > (str.length() - searchStr.length())) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1237,            startPos = str.length() - searchStr.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1239,        if (startPos < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1240,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1242,        if (searchStr.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1243,            return startPos;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1246,        for (int i = startPos; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1247,"            if (str.regionMatches(true, i, searchStr, 0, searchStr.length())) {",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1248,                return i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1251,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1276,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1277,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1279,        return str.indexOf(searchChar) >= 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1304,        if (str == null || searchStr == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1305,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1307,        return str.indexOf(searchStr) >= 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1334,        if (str == null || searchStr == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1335,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1337,        int len = searchStr.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1338,        int max = str.length() - len;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1339,        for (int i = 0; i <= max; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1340,"            if (str.regionMatches(true, i, searchStr, 0, len)) {",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1341,                return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1344,        return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1372,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1373,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1375,        for (int i = 0; i < cs.length(); i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1376,            char ch = cs.charAt(i);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1377,            for (int j = 0; j < searchChars.length; j++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1378,                if (searchChars[j] == ch) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1379,                    return i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1383,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1409,        if (isEmpty(cs) || isEmpty(searchChars)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1410,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1412,"        return indexOfAny(cs, searchChars.toCharArray());",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1442,			return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1456,		return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1488,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1518,        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1519,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1521,        outer : for (int i = 0; i < cs.length(); i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1522,            char ch = cs.charAt(i);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1523,            for (int j = 0; j < searchChars.length; j++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1524,                if (searchChars[j] == ch) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1525,                    continue outer;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1528,            return i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1530,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1556,        if (isEmpty(str) || isEmpty(searchChars)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1557,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1559,        for (int i = 0; i < str.length(); i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1560,            if (searchChars.indexOf(str.charAt(i)) < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1561,                return i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1564,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1592,        if (valid == null || cs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1593,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1595,        if (cs.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1596,            return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1598,        if (valid.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1599,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1601,"        return indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1627,        if (cs == null || validChars == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1628,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1630,"        return containsOnly(cs, validChars.toCharArray());",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1658,        if (cs == null || invalidChars == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1659,            return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1661,        int strSize = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1662,        int validSize = invalidChars.length;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1663,        for (int i = 0; i < strSize; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1664,            char ch = cs.charAt(i);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1665,            for (int j = 0; j < validSize; j++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1666,                if (invalidChars[j] == ch) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1667,                    return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1671,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1697,        if (cs == null || invalidChars == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1698,            return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1700,"        return containsNone(cs, invalidChars.toCharArray());",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1732,        if (str == null || searchStrs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1733,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1735,        int sz = searchStrs.length;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1738,        int ret = Integer.MAX_VALUE;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1740,        int tmp = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1741,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1742,            String search = searchStrs[i];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1743,            if (search == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1744,                continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1746,            tmp = str.indexOf(search);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1747,            if (tmp == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1748,                continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1751,            if (tmp < ret) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1752,                ret = tmp;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1756,        return (ret == Integer.MAX_VALUE) ? INDEX_NOT_FOUND : ret;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1785,        if (str == null || searchStrs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1786,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1788,        int sz = searchStrs.length;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1789,        int ret = INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1790,        int tmp = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1791,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1792,            String search = searchStrs[i];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1793,            if (search == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1794,                continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1796,            tmp = str.lastIndexOf(search);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1797,            if (tmp > ret) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1798,                ret = tmp;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1801,        return ret;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1831,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1832,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1836,        if (start < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1837,            start = str.length() + start; // remember start is negative,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1840,        if (start < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1841,            start = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1843,        if (start > str.length()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1844,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1847,        return str.substring(start);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1886,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1887,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1891,        if (end < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1892,            end = str.length() + end; // remember end is negative,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1894,        if (start < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1895,            start = str.length() + start; // remember start is negative,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1899,        if (end > str.length()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1900,            end = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1904,        if (start > end) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1905,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1908,        if (start < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1909,            start = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1911,        if (end < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1912,            end = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1915,"        return str.substring(start, end);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1941,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1942,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1944,        if (len < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1945,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1947,        if (str.length() <= len) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1948,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1950,"        return str.substring(0, len);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1974,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1975,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1977,        if (len < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1978,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1980,        if (str.length() <= len) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1981,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,1983,        return str.substring(str.length() - len);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2011,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2012,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2014,        if (len < 0 || pos > str.length()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2015,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2017,        if (pos < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2018,            pos = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2020,        if (str.length() <= (pos + len)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2021,            return str.substring(pos);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2023,"        return str.substring(pos, pos + len);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2056,        if (isEmpty(str) || separator == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2057,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2059,        if (separator.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2060,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2062,        int pos = str.indexOf(separator);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2063,        if (pos == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2064,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2066,"        return str.substring(0, pos);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2098,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2099,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2101,        if (separator == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2102,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2104,        int pos = str.indexOf(separator);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2105,        if (pos == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2106,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2108,        return str.substring(pos + separator.length());,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2139,        if (isEmpty(str) || isEmpty(separator)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2140,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2142,        int pos = str.lastIndexOf(separator);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2143,        if (pos == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2144,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2146,"        return str.substring(0, pos);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2179,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2180,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2182,        if (isEmpty(separator)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2183,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2185,        int pos = str.lastIndexOf(separator);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2186,        if (pos == INDEX_NOT_FOUND || pos == (str.length() - separator.length())) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2187,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2189,        return str.substring(pos + separator.length());,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2216,"        return substringBetween(str, tag, tag);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2247,        if (str == null || open == null || close == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2248,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2250,        int start = str.indexOf(open);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2251,        if (start != INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2252,"            int end = str.indexOf(close, start + open.length());",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2253,            if (end != INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2254,"                return str.substring(start + open.length(), end);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2257,        return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2283,        if (str == null || isEmpty(open) || isEmpty(close)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2284,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2286,        int strLen = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2287,        if (strLen == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2288,            return ArrayUtils.EMPTY_STRING_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2290,        int closeLen = close.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2291,        int openLen = open.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2292,        List<String> list = new ArrayList<String>();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2293,        int pos = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2294,        while (pos < (strLen - closeLen)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2295,"            int start = str.indexOf(open, pos);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2296,            if (start < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2297,                break;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2299,            start += openLen;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2300,"            int end = str.indexOf(close, start);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2301,            if (end < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2302,                break;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2304,"            list.add(str.substring(start, end));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2305,            pos = end + closeLen;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2306,        },0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2307,        if (list.isEmpty()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2308,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2310,        return list.toArray(new String [list.size()]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2341,"        return split(str, null, -1);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2369,"        return splitWorker(str, separatorChar, false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2398,"        return splitWorker(str, separatorChars, -1, false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2432,"        return splitWorker(str, separatorChars, max, false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2459,"        return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2490,"        return splitByWholeSeparatorWorker(str, separator, max, false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2519,"        return splitByWholeSeparatorWorker(str, separator, -1, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2552,"        return splitByWholeSeparatorWorker(str, separator, max, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2572,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2573,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2576,        int len = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2578,        if (len == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2579,            return ArrayUtils.EMPTY_STRING_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2582,        if ((separator == null) || (EMPTY.equals(separator))) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2584,"            return splitWorker(str, null, max, preserveAllTokens);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2587,        int separatorLength = separator.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2589,        ArrayList<String> substrings = new ArrayList<String>();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2590,        int numberOfSubstrings = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2591,        int beg = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2592,        int end = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2593,        while (end < len) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2594,"            end = str.indexOf(separator, beg);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2596,            if (end > -1) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2597,                if (end > beg) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2598,                    numberOfSubstrings += 1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2600,                    if (numberOfSubstrings == max) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2601,                        end = len;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2602,                        substrings.add(str.substring(beg));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2606,"                        substrings.add(str.substring(beg, end));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2611,                        beg = end + separatorLength;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2615,                    if (preserveAllTokens) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2616,                        numberOfSubstrings += 1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2617,                        if (numberOfSubstrings == max) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2618,                            end = len;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2619,                            substrings.add(str.substring(beg));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2621,                            substrings.add(EMPTY);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2624,                    beg = end + separatorLength;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2628,                substrings.add(str.substring(beg));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2629,                end = len;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2633,        return substrings.toArray(new String[substrings.size()]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2662,"        return splitWorker(str, null, -1, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2698,"        return splitWorker(str, separatorChar, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2716,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2717,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2719,        int len = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2720,        if (len == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2721,            return ArrayUtils.EMPTY_STRING_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2723,        List<String> list = new ArrayList<String>();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2724,"        int i = 0, start = 0;",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2725,        boolean match = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2726,        boolean lastMatch = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2727,        while (i < len) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2728,            if (str.charAt(i) == separatorChar) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2729,                if (match || preserveAllTokens) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2730,"                    list.add(str.substring(start, i));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2731,                    match = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2732,                    lastMatch = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2734,                start = ++i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2735,                continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2737,            lastMatch = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2738,            match = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2739,            i++;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2741,        if (match || (preserveAllTokens && lastMatch)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2742,"            list.add(str.substring(start, i));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2744,        return list.toArray(new String[list.size()]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2781,"        return splitWorker(str, separatorChars, -1, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2821,"        return splitWorker(str, separatorChars, max, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2843,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2844,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2846,        int len = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2847,        if (len == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2848,            return ArrayUtils.EMPTY_STRING_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2850,        List<String> list = new ArrayList<String>();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2851,        int sizePlus1 = 1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2852,"        int i = 0, start = 0;",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2853,        boolean match = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2854,        boolean lastMatch = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2855,        if (separatorChars == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2857,            while (i < len) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2858,                if (Character.isWhitespace(str.charAt(i))) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2859,                    if (match || preserveAllTokens) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2860,                        lastMatch = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2861,                        if (sizePlus1++ == max) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2862,                            i = len;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2863,                            lastMatch = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2865,"                        list.add(str.substring(start, i));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2866,                        match = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2868,                    start = ++i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2869,                    continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2871,                lastMatch = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2872,                match = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2873,                i++;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2875,        } else if (separatorChars.length() == 1) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2877,            char sep = separatorChars.charAt(0);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2878,            while (i < len) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2879,                if (str.charAt(i) == sep) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2880,                    if (match || preserveAllTokens) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2881,                        lastMatch = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2882,                        if (sizePlus1++ == max) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2883,                            i = len;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2884,                            lastMatch = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2886,"                        list.add(str.substring(start, i));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2887,                        match = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2889,                    start = ++i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2890,                    continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2892,                lastMatch = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2893,                match = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2894,                i++;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2896,        } else {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2898,            while (i < len) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2899,                if (separatorChars.indexOf(str.charAt(i)) >= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2900,                    if (match || preserveAllTokens) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2901,                        lastMatch = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2902,                        if (sizePlus1++ == max) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2903,                            i = len;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2904,                            lastMatch = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2906,"                        list.add(str.substring(start, i));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2907,                        match = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2909,                    start = ++i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2910,                    continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2912,                lastMatch = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2913,                match = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2914,                i++;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2917,        if (match || (preserveAllTokens && lastMatch)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2918,"            list.add(str.substring(start, i));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2920,        return list.toArray(new String[list.size()]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2943,"        return splitByCharacterType(str, false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2971,"        return splitByCharacterType(str, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2989,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2990,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2992,        if (str.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2993,            return ArrayUtils.EMPTY_STRING_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2995,        char[] c = str.toCharArray();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2996,        List<String> list = new ArrayList<String>();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2997,        int tokenStart = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2998,        int currentType = Character.getType(c[tokenStart]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,2999,        for (int pos = tokenStart + 1; pos < c.length; pos++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3000,            int type = Character.getType(c[pos]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3001,            if (type == currentType) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3002,                continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3004,            if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3005,                int newTokenStart = pos - 1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3006,                if (newTokenStart != tokenStart) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3007,"                    list.add(new String(c, tokenStart, newTokenStart - tokenStart));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3008,                    tokenStart = newTokenStart;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3010,            } else {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3011,"                list.add(new String(c, tokenStart, pos - tokenStart));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3012,                tokenStart = pos;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3014,            currentType = type;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3016,"        list.add(new String(c, tokenStart, c.length - tokenStart));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3017,        return list.toArray(new String[list.size()]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3043,"        return join(array, null);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3069,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3070,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3073,"        return join(array, separator, 0, array.length);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3103,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3104,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3106,        int bufSize = (endIndex - startIndex);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3107,        if (bufSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3108,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3111,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3112,        StringBuilder buf = new StringBuilder(bufSize);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3114,        for (int i = startIndex; i < endIndex; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3115,            if (i > startIndex) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3116,                buf.append(separator);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3118,            if (array[i] != null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3119,                buf.append(array[i]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3122,        return buf.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3150,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3151,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3153,"        return join(array, separator, 0, array.length);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3184,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3185,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3187,        if (separator == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3188,            separator = EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3193,        int bufSize = (endIndex - startIndex);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3194,        if (bufSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3195,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3198,        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()),0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3201,        StringBuilder buf = new StringBuilder(bufSize);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3203,        for (int i = startIndex; i < endIndex; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3204,            if (i > startIndex) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3205,                buf.append(separator);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3207,            if (array[i] != null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3208,                buf.append(array[i]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3211,        return buf.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3231,        if (iterator == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3232,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3234,        if (!iterator.hasNext()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3235,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3237,        Object first = iterator.next();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3238,        if (!iterator.hasNext()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3239,            return ObjectUtils.toString(first);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3243,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3244,        if (first != null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3245,            buf.append(first);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3248,        while (iterator.hasNext()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3249,            buf.append(separator);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3250,            Object obj = iterator.next();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3251,            if (obj != null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3252,                buf.append(obj);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3254,        },0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3256,        return buf.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3275,        if (iterator == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3276,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3278,        if (!iterator.hasNext()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3279,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3281,        Object first = iterator.next();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3282,        if (!iterator.hasNext()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3283,            return ObjectUtils.toString(first);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3287,"        StringBuilder buf = new StringBuilder(256); // Java default is 16, probably too small",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3288,        if (first != null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3289,            buf.append(first);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3292,        while (iterator.hasNext()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3293,            if (separator != null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3294,                buf.append(separator);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3296,            Object obj = iterator.next();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3297,            if (obj != null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3298,                buf.append(obj);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3300,        },0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3301,        return buf.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3319,        if (iterable == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3320,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3322,"        return join(iterable.iterator(), separator);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3340,        if (iterable == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3341,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3343,"        return join(iterable.iterator(), separator);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3363,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3364,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3366,        int sz = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3367,        char[] chs = new char[sz];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3368,        int count = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3369,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3370,            if (!Character.isWhitespace(str.charAt(i))) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3371,                chs[count++] = str.charAt(i);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3374,        if (count == sz) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3375,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3377,"        return new String(chs, 0, count);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3407,        if (isEmpty(str) || isEmpty(remove)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3408,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3410,        if (str.startsWith(remove)){,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3411,            return str.substring(remove.length());,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3413,        return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3442,        if (isEmpty(str) || isEmpty(remove)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3443,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3445,"        if (startsWithIgnoreCase(str, remove)) {",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3446,            return str.substring(remove.length());,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3448,        return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3476,        if (isEmpty(str) || isEmpty(remove)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3477,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3479,        if (str.endsWith(remove)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3480,"            return str.substring(0, str.length() - remove.length());",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3482,        return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3512,        if (isEmpty(str) || isEmpty(remove)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3513,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3515,"        if (endsWithIgnoreCase(str, remove)) {",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3516,"            return str.substring(0, str.length() - remove.length());",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3518,        return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3545,        if (isEmpty(str) || isEmpty(remove)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3546,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3548,"        return replace(str, remove, EMPTY, -1);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3571,        if (isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3572,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3574,        char[] chars = str.toCharArray();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3575,        int pos = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3576,        for (int i = 0; i < chars.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3577,            if (chars[i] != remove) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3578,                chars[pos++] = chars[i];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3581,"        return new String(chars, 0, pos);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3610,"        return replace(text, searchString, replacement, 1);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3637,"        return replace(text, searchString, replacement, -1);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3669,        if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3670,            return text;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3672,        int start = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3673,"        int end = text.indexOf(searchString, start);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3674,        if (end == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3675,            return text;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3677,        int replLength = searchString.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3678,        int increase = replacement.length() - replLength;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3679,        increase = (increase < 0 ? 0 : increase);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3680,        increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3681,        StringBuilder buf = new StringBuilder(text.length() + increase);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3682,        while (end != INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3683,"            buf.append(text.substring(start, end)).append(replacement);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3684,            start = end + replLength;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3685,            if (--max == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3686,                break;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3688,"            end = text.indexOf(searchString, start);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3690,        buf.append(text.substring(start));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3691,        return buf.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3734,"        return replaceEach(text, searchList, replacementList, false, 0);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3785,        int timeToLive = searchList == null ? 0 : searchList.length;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3786,"        return replaceEach(text, searchList, replacementList, true, timeToLive);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3844,        if (text == null || text.length() == 0 || searchList == null || ,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3847,            return text;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3851,        if (timeToLive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3852,"            throw new IllegalStateException(""TimeToLive of "" + timeToLive + "" is less than 0: "" + text);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3855,        int searchLength = searchList.length;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3856,        int replacementLength = replacementList.length;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3859,        if (searchLength != replacementLength) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3860,"            throw new IllegalArgumentException(""Search and Replace array lengths don't match: """,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3867,        boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3870,        int textIndex = -1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3871,        int replaceIndex = -1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3872,        int tempIndex = -1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3876,        for (int i = 0; i < searchLength; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3877,            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3880,                continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3882,            tempIndex = text.indexOf(searchList[i]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3885,            if (tempIndex == -1) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3886,                noMoreMatchesForReplIndex[i] = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3888,                if (textIndex == -1 || tempIndex < textIndex) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3889,                    textIndex = tempIndex;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3890,                    replaceIndex = i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3897,        if (textIndex == -1) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3898,            return text;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3901,        int start = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3904,        int increase = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3907,        for (int i = 0; i < searchList.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3908,            if (searchList[i] == null || replacementList[i] == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3909,                continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3911,            int greater = replacementList[i].length() - searchList[i].length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3912,            if (greater > 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3913,                increase += 3 * greater; // assume 3 matches,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3917,"        increase = Math.min(increase, text.length() / 5);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3919,        StringBuilder buf = new StringBuilder(text.length() + increase);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3921,        while (textIndex != -1) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3923,            for (int i = start; i < textIndex; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3924,                buf.append(text.charAt(i));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3926,            buf.append(replacementList[replaceIndex]);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3928,            start = textIndex + searchList[replaceIndex].length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3930,            textIndex = -1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3931,            replaceIndex = -1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3932,            tempIndex = -1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3935,            for (int i = 0; i < searchLength; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3936,                if (noMoreMatchesForReplIndex[i] || searchList[i] == null || ,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3939,                    continue;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3941,"                tempIndex = text.indexOf(searchList[i], start);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3944,                if (tempIndex == -1) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3945,                    noMoreMatchesForReplIndex[i] = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3947,                    if (textIndex == -1 || tempIndex < textIndex) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3948,                        textIndex = tempIndex;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3949,                        replaceIndex = i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3956,        int textLength = text.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3957,        for (int i = start; i < textLength; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3958,            buf.append(text.charAt(i));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3960,        String result = buf.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3961,        if (!repeat) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3962,            return result;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3965,"        return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3991,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3992,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,3994,"        return str.replace(searchChar, replaceChar);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4034,        if (isEmpty(str) || isEmpty(searchChars)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4035,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4037,        if (replaceChars == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4038,            replaceChars = EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4040,        boolean modified = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4041,        int replaceCharsLength = replaceChars.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4042,        int strLength = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4043,        StringBuilder buf = new StringBuilder(strLength);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4044,        for (int i = 0; i < strLength; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4045,            char ch = str.charAt(i);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4046,            int index = searchChars.indexOf(ch);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4047,            if (index >= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4048,                modified = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4049,                if (index < replaceCharsLength) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4050,                    buf.append(replaceChars.charAt(index));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4053,                buf.append(ch);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4056,        if (modified) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4057,            return buf.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4059,        return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4094,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4095,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4097,        if (overlay == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4098,            overlay = EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4100,        int len = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4101,        if (start < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4102,            start = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4104,        if (start > len) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4105,            start = len;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4107,        if (end < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4108,            end = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4110,        if (end > len) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4111,            end = len;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4113,        if (start > end) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4114,            int temp = start;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4115,            start = end;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4116,            end = temp;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4118,        return new StringBuilder(len + start - end + overlay.length() + 1),0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4153,        if (isEmpty(str)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4154,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4157,        if (str.length() == 1) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4158,            char ch = str.charAt(0);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4159,            if (ch == CharUtils.CR || ch == CharUtils.LF) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4160,                return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4162,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4165,        int lastIdx = str.length() - 1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4166,        char last = str.charAt(lastIdx);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4168,        if (last == CharUtils.LF) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4169,            if (str.charAt(lastIdx - 1) == CharUtils.CR) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4170,                lastIdx--;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4172,        } else if (last != CharUtils.CR) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4173,            lastIdx++;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4175,"        return str.substring(0, lastIdx);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4205,        if (isEmpty(str) || separator == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4206,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4208,        if (str.endsWith(separator)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4209,"            return str.substring(0, str.length() - separator.length());",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4211,        return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4240,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4241,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4243,        int strLen = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4244,        if (strLen < 2) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4245,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4247,        int lastIdx = strLen - 1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4248,"        String ret = str.substring(0, lastIdx);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4249,        char last = str.charAt(lastIdx);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4250,        if (last == CharUtils.LF) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4251,            if (ret.charAt(lastIdx - 1) == CharUtils.CR) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4252,"                return ret.substring(0, lastIdx - 1);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4255,        return ret;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4285,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4286,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4288,        if (repeat <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4289,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4291,        int inputLength = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4292,        if (repeat == 1 || inputLength == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4293,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4295,        if (inputLength == 1 && repeat <= PAD_LIMIT) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4296,"            return padding(repeat, str.charAt(0));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4299,        int outputLength = inputLength * repeat;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4300,        switch (inputLength) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4302,                char ch = str.charAt(0);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4303,                char[] output1 = new char[outputLength];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4304,                for (int i = repeat - 1; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4305,                    output1[i] = ch;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4307,                return new String(output1);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4309,                char ch0 = str.charAt(0);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4310,                char ch1 = str.charAt(1);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4311,                char[] output2 = new char[outputLength];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4312,"                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4313,                    output2[i] = ch0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4314,                    output2[i + 1] = ch1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4316,                return new String(output2);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4318,                StringBuilder buf = new StringBuilder(outputLength);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4319,                for (int i = 0; i < repeat; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4320,                    buf.append(str);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4322,                return buf.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4346,        if(str == null || separator == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4347,"            return repeat(str, repeat);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4350,"            String result = repeat(str + separator, repeat);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4351,"            return removeEnd(result, separator);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4379,        if (repeat < 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4380,"            throw new IndexOutOfBoundsException(""Cannot pad a negative amount: "" + repeat);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4382,        final char[] buf = new char[repeat];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4383,        for (int i = 0; i < buf.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4384,            buf[i] = padChar;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4386,        return new String(buf);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4409,"        return rightPad(str, size, ' ');",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4434,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4435,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4437,        int pads = size - str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4438,        if (pads <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4439,            return str; // returns original String when possible,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4441,        if (pads > PAD_LIMIT) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4442,"            return rightPad(str, size, String.valueOf(padChar));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4444,"        return str.concat(padding(pads, padChar));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4471,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4472,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4474,        if (isEmpty(padStr)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4475,"            padStr = "" "";",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4477,        int padLen = padStr.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4478,        int strLen = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4479,        int pads = size - strLen;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4480,        if (pads <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4481,            return str; // returns original String when possible,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4483,        if (padLen == 1 && pads <= PAD_LIMIT) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4484,"            return rightPad(str, size, padStr.charAt(0));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4487,        if (pads == padLen) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4488,            return str.concat(padStr);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4489,        } else if (pads < padLen) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4490,"            return str.concat(padStr.substring(0, pads));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4492,            char[] padding = new char[pads];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4493,            char[] padChars = padStr.toCharArray();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4494,            for (int i = 0; i < pads; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4495,                padding[i] = padChars[i % padLen];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4497,            return str.concat(new String(padding));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4521,"        return leftPad(str, size, ' ');",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4546,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4547,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4549,        int pads = size - str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4550,        if (pads <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4551,            return str; // returns original String when possible,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4553,        if (pads > PAD_LIMIT) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4554,"            return leftPad(str, size, String.valueOf(padChar));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4556,"        return padding(pads, padChar).concat(str);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4583,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4584,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4586,        if (isEmpty(padStr)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4587,"            padStr = "" "";",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4589,        int padLen = padStr.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4590,        int strLen = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4591,        int pads = size - strLen;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4592,        if (pads <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4593,            return str; // returns original String when possible,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4595,        if (padLen == 1 && pads <= PAD_LIMIT) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4596,"            return leftPad(str, size, padStr.charAt(0));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4599,        if (pads == padLen) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4600,            return padStr.concat(str);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4601,        } else if (pads < padLen) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4602,"            return padStr.substring(0, pads).concat(str);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4604,            char[] padding = new char[pads];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4605,            char[] padChars = padStr.toCharArray();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4606,            for (int i = 0; i < pads; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4607,                padding[i] = padChars[i % padLen];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4609,            return new String(padding).concat(str);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4625,		return CharSequenceUtils.length(cs);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4654,"        return center(str, size, ' ');",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4682,        if (str == null || size <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4683,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4685,        int strLen = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4686,        int pads = size - strLen;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4687,        if (pads <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4688,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4690,"        str = leftPad(str, strLen + pads / 2, padChar);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4691,"        str = rightPad(str, size, padChar);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4692,        return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4722,        if (str == null || size <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4723,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4725,        if (isEmpty(padStr)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4726,"            padStr = "" "";",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4728,        int strLen = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4729,        int pads = size - strLen;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4730,        if (pads <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4731,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4733,"        str = leftPad(str, strLen + pads / 2, padStr);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4734,"        str = rightPad(str, size, padStr);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4735,        return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4760,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4761,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4763,        return str.toUpperCase();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4783,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4784,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4786,        return str.toUpperCase(locale);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4809,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4810,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4812,        return str.toLowerCase();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4832,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4833,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4835,        return str.toLowerCase(locale);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4859,        if (cs == null ) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4860,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4863,        if ((strLen = cs.length()) == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4864,            return cs.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4866,        return new StringBuilder(strLen),0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4893,        if (cs == null ) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4894,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4897,        if ((strLen = cs.length()) == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4898,            return cs.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4900,        return new StringBuilder(strLen),0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4935,        if (str == null || (strLen = str.length()) == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4936,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4938,        StringBuilder buffer = new StringBuilder(strLen);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4940,        char ch = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4941,        for (int i = 0; i < strLen; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4942,            ch = str.charAt(i);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4943,            if (Character.isUpperCase(ch)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4944,                ch = Character.toLowerCase(ch);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4945,            } else if (Character.isTitleCase(ch)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4946,                ch = Character.toLowerCase(ch);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4947,            } else if (Character.isLowerCase(ch)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4948,                ch = Character.toUpperCase(ch);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4950,            buffer.append(ch);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4952,        return buffer.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4977,        if (isEmpty(str) || isEmpty(sub)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4978,            return 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4980,        int count = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4981,        int idx = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4982,"        while ((idx = str.indexOf(sub, idx)) != INDEX_NOT_FOUND) {",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4983,            count++;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4984,            idx += sub.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,4986,        return count;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5010,        if (cs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5011,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5013,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5014,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5015,            if (Character.isLetter(cs.charAt(i)) == false) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5016,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5019,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5044,        if (cs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5045,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5047,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5048,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5049,            if ((Character.isLetter(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5050,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5053,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5077,        if (cs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5078,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5080,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5081,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5082,            if (Character.isLetterOrDigit(cs.charAt(i)) == false) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5083,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5086,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5111,        if (cs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5112,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5114,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5115,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5116,            if ((Character.isLetterOrDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5117,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5120,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5149,        if (cs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5150,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5152,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5153,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5154,            if (CharUtils.isAsciiPrintable(cs.charAt(i)) == false) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5155,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5158,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5183,        if (cs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5184,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5186,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5187,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5188,            if (Character.isDigit(cs.charAt(i)) == false) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5189,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5192,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5219,        if (cs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5220,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5222,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5223,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5224,            if ((Character.isDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' ')) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5225,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5228,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5251,        if (cs == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5252,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5254,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5255,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5256,            if ((Character.isWhitespace(cs.charAt(i)) == false)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5257,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5260,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5282,        if (cs == null || isEmpty(cs)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5283,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5285,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5286,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5287,            if (Character.isLowerCase(cs.charAt(i)) == false) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5288,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5291,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5313,        if (cs == null || isEmpty(cs)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5314,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5316,        int sz = cs.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5317,        for (int i = 0; i < sz; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5318,            if (Character.isUpperCase(cs.charAt(i)) == false) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5319,                return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5322,        return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5344,        return str == null ? EMPTY : str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5365,        return str == null ? defaultStr : str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5386,        return StringUtils.isEmpty(str) ? defaultStr : str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5406,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5407,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5409,        return CharSequenceUtils.reverse(str).toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5432,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5433,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5437,"        String[] strs = split(str, separatorChar);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5438,        ArrayUtils.reverse(strs);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5439,"        return join(strs, separatorChar);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5477,"        return abbreviate(str, 0, maxWidth);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5516,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5517,            return null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5519,        if (maxWidth < 4) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5520,"            throw new IllegalArgumentException(""Minimum abbreviation width is 4"");",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5522,        if (str.length() <= maxWidth) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5523,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5525,        if (offset > str.length()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5526,            offset = str.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5528,        if ((str.length() - offset) < (maxWidth - 3)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5529,            offset = str.length() - (maxWidth - 3);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5531,"        final String abrevMarker = ""..."";",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5532,		if (offset <= 4) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5533,"            return str.substring(0, maxWidth - 3) + abrevMarker;",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5535,        if (maxWidth < 7) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5536,"            throw new IllegalArgumentException(""Minimum abbreviation width with offset is 7"");",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5538,        if ((offset + (maxWidth - 3)) < str.length()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5539,"            return abrevMarker + abbreviate(str.substring(offset), maxWidth - 3);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5541,        return abrevMarker + str.substring(str.length() - (maxWidth - 3));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5574,        if (isEmpty(str) || isEmpty(middle)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5575,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5578,        if (length >= str.length() || length < (middle.length()+2)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5579,            return str;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5582,        int targetSting = length-middle.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5583,        int startOffset = targetSting/2+targetSting%2;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5584,        int endOffset = str.length()-targetSting/2;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5586,        StringBuilder builder = new StringBuilder(length);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5587,"        builder.append(str.substring(0,startOffset));",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5588,        builder.append(middle);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5589,        builder.append(str.substring(endOffset));,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5591,        return builder.toString();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5622,        if (str1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5623,            return str2;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5625,        if (str2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5626,            return str1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5628,"        int at = indexOfDifference(str1, str2);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5629,        if (at == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5630,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5632,        return str2.substring(at);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5659,        if (cs1 == cs2) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5660,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5662,        if (cs1 == null || cs2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5663,            return 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5666,        for (i = 0; i < cs1.length() && i < cs2.length(); ++i) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5667,            if (cs1.charAt(i) != cs2.charAt(i)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5668,                break;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5671,        if (i < cs2.length() || i < cs1.length()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5672,            return i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5674,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5709,        if (css == null || css.length <= 1) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5710,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5712,        boolean anyStringNull = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5713,        boolean allStringsNull = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5714,        int arrayLen = css.length;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5715,        int shortestStrLen = Integer.MAX_VALUE;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5716,        int longestStrLen = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5721,        for (int i = 0; i < arrayLen; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5722,            if (css[i] == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5723,                anyStringNull = true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5724,                shortestStrLen = 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5726,                allStringsNull = false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5727,"                shortestStrLen = Math.min(css[i].length(), shortestStrLen);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5728,"                longestStrLen = Math.max(css[i].length(), longestStrLen);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5733,        if (allStringsNull || (longestStrLen == 0 && !anyStringNull)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5734,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5738,        if (shortestStrLen == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5739,            return 0;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5743,        int firstDiff = -1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5744,        for (int stringPos = 0; stringPos < shortestStrLen; stringPos++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5745,            char comparisonChar = css[0].charAt(stringPos);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5746,            for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5747,                if (css[arrayPos].charAt(stringPos) != comparisonChar) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5748,                    firstDiff = stringPos;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5749,                    break;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5752,            if (firstDiff != -1) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5753,                break;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5757,        if (firstDiff == -1 && shortestStrLen != longestStrLen) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5761,            return shortestStrLen;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5763,        return firstDiff;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5800,        if (strs == null || strs.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5801,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5803,        int smallestIndexOfDiff = indexOfDifference(strs);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5804,        if (smallestIndexOfDiff == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5806,            if (strs[0] == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5807,                return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5809,            return strs[0];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5810,        } else if (smallestIndexOfDiff == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5812,            return EMPTY;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5815,"            return strs[0].substring(0, smallestIndexOfDiff);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5856,        if (s == null || t == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5857,"            throw new IllegalArgumentException(""Strings must not be null"");",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5877,        int n = s.length(); // length of s,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5878,        int m = t.length(); // length of t,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5880,        if (n == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5881,            return m;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5882,        } else if (m == 0) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5883,            return n;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5886,        if (n > m) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5888,        	CharSequence tmp = s;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5889,            s = t;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5890,            t = tmp;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5891,            n = m;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5892,            m = t.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5895,"        int p[] = new int[n+1]; //'previous' cost array, horizontally",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5896,"        int d[] = new int[n+1]; // cost array, horizontally",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5907,        for (i = 0; i<=n; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5908,            p[i] = i;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5911,        for (j = 1; j<=m; j++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5912,            t_j = t.charAt(j-1);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5913,            d[0] = j;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5915,            for (i=1; i<=n; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5916,                cost = s.charAt(i-1)==t_j ? 0 : 1;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5918,"                d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5922,            _d = p;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5923,            p = d;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5924,            d = _d;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5929,        return p[n];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,5978,"        return startsWith(str, prefix, false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6003,"        return startsWith(str, prefix, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6018,        if (str == null || prefix == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6019,            return (str == null && prefix == null);,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6021,        if (prefix.length() > str.length()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6022,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6024,"        return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6046,        if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings)) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6047,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6049,        for (int i = 0; i < searchStrings.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6050,            String searchString = searchStrings[i];,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6051,"            if (StringUtils.startsWith(string, searchString)) {",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6052,                return true;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6055,        return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6084,"        return endsWith(str, suffix, false);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6110,"        return endsWith(str, suffix, true);",0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6125,        if (str == null || suffix == null) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6126,            return str == null && suffix == null;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6128,        if (suffix.length() > str.length()) {,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6129,            return false;,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6131,        int strOffset = str.length() - suffix.length();,0.0,0,-1,0
org/apache/commons/lang3/StringUtils,31,6132,"        return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,145,      super();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,146,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,162,"        return toString(array, ""{}"");",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,178,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,179,            return stringIfNull;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,181,"        return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,195,"        return new EqualsBuilder().append(array1, array2).isEquals();",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,226,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,227,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,229,"        final Map<Object, Object> map = new HashMap<Object, Object>((int) (array.length * 1.5));",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,230,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,231,            Object object = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,232,"            if (object instanceof Map.Entry<?, ?>) {",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,233,"                Map.Entry<?,?> entry = (Map.Entry<?,?>) object;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,234,"                map.put(entry.getKey(), entry.getValue());",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,235,            } else if (object instanceof Object[]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,236,                Object[] entry = (Object[]) object;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,237,                if (entry.length < 2) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,238,"                    throw new IllegalArgumentException(""Array element "" + i + "", '""",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,242,"                map.put(entry[0], entry[1]);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,243,            } else {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,244,"                throw new IllegalArgumentException(""Array element "" + i + "", '""",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,249,        return map;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,294,        return items;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,312,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,313,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,315,        return array.clone();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,328,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,329,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,331,        return array.clone();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,344,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,345,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,347,        return array.clone();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,360,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,361,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,363,        return array.clone();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,376,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,377,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,379,        return array.clone();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,392,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,393,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,395,        return array.clone();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,408,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,409,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,411,        return array.clone();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,424,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,425,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,427,        return array.clone();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,440,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,441,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,443,        return array.clone();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,462,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,463,            return EMPTY_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,465,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,482,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,483,            return EMPTY_STRING_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,485,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,502,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,503,            return EMPTY_LONG_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,505,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,522,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,523,            return EMPTY_INT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,525,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,542,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,543,            return EMPTY_SHORT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,545,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,562,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,563,            return EMPTY_CHAR_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,565,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,582,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,583,            return EMPTY_BYTE_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,585,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,602,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,603,            return EMPTY_DOUBLE_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,605,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,622,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,623,            return EMPTY_FLOAT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,625,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,642,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,643,            return EMPTY_BOOLEAN_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,645,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,662,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,663,            return EMPTY_LONG_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,665,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,682,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,683,            return EMPTY_INTEGER_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,685,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,702,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,703,            return EMPTY_SHORT_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,705,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,722,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,723,            return EMPTY_CHARACTER_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,725,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,742,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,743,            return EMPTY_BYTE_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,745,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,762,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,763,            return EMPTY_DOUBLE_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,765,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,782,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,783,            return EMPTY_FLOAT_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,785,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,802,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,803,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,805,        return array;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,838,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,839,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,841,        if (startIndexInclusive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,842,            startIndexInclusive = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,844,        if (endIndexExclusive > array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,845,            endIndexExclusive = array.length;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,847,        int newSize = endIndexExclusive - startIndexInclusive;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,848,        Class<?> type = array.getClass().getComponentType();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,849,        if (newSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,851,"            final T[] emptyArray = (T[]) Array.newInstance(type, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,852,            return emptyArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,855,"        T[] subarray = (T[]) Array.newInstance(type, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,856,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,857,        return subarray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,880,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,881,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,883,        if (startIndexInclusive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,884,            startIndexInclusive = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,886,        if (endIndexExclusive > array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,887,            endIndexExclusive = array.length;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,889,        int newSize = endIndexExclusive - startIndexInclusive;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,890,        if (newSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,891,            return EMPTY_LONG_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,894,        long[] subarray = new long[newSize];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,895,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,896,        return subarray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,919,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,920,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,922,        if (startIndexInclusive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,923,            startIndexInclusive = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,925,        if (endIndexExclusive > array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,926,            endIndexExclusive = array.length;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,928,        int newSize = endIndexExclusive - startIndexInclusive;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,929,        if (newSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,930,            return EMPTY_INT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,933,        int[] subarray = new int[newSize];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,934,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,935,        return subarray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,958,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,959,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,961,        if (startIndexInclusive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,962,            startIndexInclusive = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,964,        if (endIndexExclusive > array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,965,            endIndexExclusive = array.length;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,967,        int newSize = endIndexExclusive - startIndexInclusive;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,968,        if (newSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,969,            return EMPTY_SHORT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,972,        short[] subarray = new short[newSize];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,973,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,974,        return subarray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,997,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,998,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1000,        if (startIndexInclusive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1001,            startIndexInclusive = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1003,        if (endIndexExclusive > array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1004,            endIndexExclusive = array.length;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1006,        int newSize = endIndexExclusive - startIndexInclusive;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1007,        if (newSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1008,            return EMPTY_CHAR_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1011,        char[] subarray = new char[newSize];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1012,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1013,        return subarray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1036,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1037,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1039,        if (startIndexInclusive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1040,            startIndexInclusive = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1042,        if (endIndexExclusive > array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1043,            endIndexExclusive = array.length;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1045,        int newSize = endIndexExclusive - startIndexInclusive;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1046,        if (newSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1047,            return EMPTY_BYTE_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1050,        byte[] subarray = new byte[newSize];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1051,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1052,        return subarray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1075,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1076,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1078,        if (startIndexInclusive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1079,            startIndexInclusive = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1081,        if (endIndexExclusive > array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1082,            endIndexExclusive = array.length;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1084,        int newSize = endIndexExclusive - startIndexInclusive;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1085,        if (newSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1086,            return EMPTY_DOUBLE_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1089,        double[] subarray = new double[newSize];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1090,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1091,        return subarray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1114,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1115,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1117,        if (startIndexInclusive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1118,            startIndexInclusive = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1120,        if (endIndexExclusive > array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1121,            endIndexExclusive = array.length;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1123,        int newSize = endIndexExclusive - startIndexInclusive;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1124,        if (newSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1125,            return EMPTY_FLOAT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1128,        float[] subarray = new float[newSize];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1129,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1130,        return subarray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1153,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1154,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1156,        if (startIndexInclusive < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1157,            startIndexInclusive = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1159,        if (endIndexExclusive > array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1160,            endIndexExclusive = array.length;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1162,        int newSize = endIndexExclusive - startIndexInclusive;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1163,        if (newSize <= 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1164,            return EMPTY_BOOLEAN_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1167,        boolean[] subarray = new boolean[newSize];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1168,"        System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1169,        return subarray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1186,        if ((array1 == null && array2 != null && array2.length > 0) ||,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1189,                return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1191,        return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1204,        if ((array1 == null && array2 != null && array2.length > 0) ||,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1207,                return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1209,        return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1222,        if ((array1 == null && array2 != null && array2.length > 0) ||,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1225,                return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1227,        return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1240,        if ((array1 == null && array2 != null && array2.length > 0) ||,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1243,                return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1245,        return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1258,        if ((array1 == null && array2 != null && array2.length > 0) ||,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1261,                return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1263,        return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1276,        if ((array1 == null && array2 != null && array2.length > 0) ||,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1279,                return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1281,        return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1294,        if ((array1 == null && array2 != null && array2.length > 0) ||,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1297,                return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1299,        return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1312,        if ((array1 == null && array2 != null && array2.length > 0) ||,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1315,                return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1317,        return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1330,        if ((array1 == null && array2 != null && array2.length > 0) ||,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1333,                return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1335,        return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1360,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1361,            return 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1363,        return Array.getLength(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1376,        if (array1 == null || array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1377,"            throw new IllegalArgumentException(""The Array must not be null"");",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1379,        return array1.getClass().getName().equals(array2.getClass().getName());,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1394,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1395,            return;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1397,        int i = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1398,        int j = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1400,        while (j > i) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1401,            tmp = array[j];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1402,            array[j] = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1403,            array[i] = tmp;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1404,            j--;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1405,            i++;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1407,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1417,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1418,            return;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1420,        int i = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1421,        int j = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1423,        while (j > i) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1424,            tmp = array[j];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1425,            array[j] = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1426,            array[i] = tmp;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1427,            j--;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1428,            i++;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1430,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1440,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1441,            return;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1443,        int i = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1444,        int j = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1446,        while (j > i) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1447,            tmp = array[j];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1448,            array[j] = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1449,            array[i] = tmp;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1450,            j--;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1451,            i++;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1453,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1463,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1464,            return;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1466,        int i = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1467,        int j = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1469,        while (j > i) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1470,            tmp = array[j];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1471,            array[j] = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1472,            array[i] = tmp;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1473,            j--;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1474,            i++;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1476,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1486,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1487,            return;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1489,        int i = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1490,        int j = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1492,        while (j > i) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1493,            tmp = array[j];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1494,            array[j] = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1495,            array[i] = tmp;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1496,            j--;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1497,            i++;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1499,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1509,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1510,            return;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1512,        int i = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1513,        int j = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1515,        while (j > i) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1516,            tmp = array[j];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1517,            array[j] = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1518,            array[i] = tmp;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1519,            j--;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1520,            i++;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1522,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1532,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1533,            return;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1535,        int i = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1536,        int j = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1538,        while (j > i) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1539,            tmp = array[j];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1540,            array[j] = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1541,            array[i] = tmp;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1542,            j--;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1543,            i++;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1545,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1555,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1556,            return;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1558,        int i = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1559,        int j = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1561,        while (j > i) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1562,            tmp = array[j];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1563,            array[j] = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1564,            array[i] = tmp;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1565,            j--;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1566,            i++;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1568,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1578,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1579,            return;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1581,        int i = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1582,        int j = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1584,        while (j > i) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1585,            tmp = array[j];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1586,            array[j] = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1587,            array[i] = tmp;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1588,            j--;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1589,            i++;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1591,    },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1609,"        return indexOf(array, objectToFind, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1627,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1628,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1630,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1631,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1633,        if (objectToFind == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1634,            for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1635,                if (array[i] == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1636,                    return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1639,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1640,            for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1641,                if (objectToFind.equals(array[i])) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1642,                    return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1646,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1660,"        return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1678,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1679,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1681,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1682,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1683,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1684,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1686,        if (objectToFind == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1687,            for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1688,                if (array[i] == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1689,                    return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1692,        } else if (array.getClass().getComponentType().isInstance(objectToFind)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1693,            for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1694,                if (objectToFind.equals(array[i])) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1695,                    return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1699,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1712,"        return indexOf(array, objectToFind) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1728,"        return indexOf(array, valueToFind, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1746,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1747,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1749,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1750,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1752,        for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1753,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1754,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1757,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1771,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1789,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1790,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1792,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1793,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1794,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1795,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1797,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1798,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1799,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1802,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1815,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1831,"        return indexOf(array, valueToFind, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1849,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1850,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1852,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1853,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1855,        for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1856,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1857,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1860,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1874,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1892,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1893,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1895,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1896,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1897,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1898,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1900,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1901,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1902,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1905,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1918,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1934,"        return indexOf(array, valueToFind, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1952,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1953,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1955,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1956,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1958,        for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1959,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1960,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1963,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1977,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1995,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1996,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1998,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,1999,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2000,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2001,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2003,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2004,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2005,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2008,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2021,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2038,"        return indexOf(array, valueToFind, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2057,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2058,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2060,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2061,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2063,        for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2064,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2065,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2068,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2083,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2102,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2103,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2105,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2106,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2107,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2108,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2110,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2111,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2112,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2115,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2129,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2145,"        return indexOf(array, valueToFind, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2163,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2164,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2166,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2167,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2169,        for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2170,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2171,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2174,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2188,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2206,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2207,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2209,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2210,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2211,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2212,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2214,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2215,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2216,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2219,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2232,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2248,"        return indexOf(array, valueToFind, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2265,"        return indexOf(array, valueToFind, 0, tolerance);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2283,        if (ArrayUtils.isEmpty(array)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2284,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2286,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2287,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2289,        for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2290,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2291,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2294,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2315,        if (ArrayUtils.isEmpty(array)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2316,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2318,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2319,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2321,        double min = valueToFind - tolerance;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2322,        double max = valueToFind + tolerance;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2323,        for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2324,            if (array[i] >= min && array[i] <= max) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2325,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2328,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2342,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2359,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2377,        if (ArrayUtils.isEmpty(array)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2378,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2380,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2381,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2382,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2383,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2385,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2386,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2387,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2390,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2411,        if (ArrayUtils.isEmpty(array)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2412,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2414,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2415,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2416,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2417,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2419,        double min = valueToFind - tolerance;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2420,        double max = valueToFind + tolerance;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2421,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2422,            if (array[i] >= min && array[i] <= max) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2423,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2426,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2439,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2456,"        return indexOf(array, valueToFind, 0, tolerance) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2472,"        return indexOf(array, valueToFind, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2490,        if (ArrayUtils.isEmpty(array)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2491,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2493,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2494,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2496,        for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2497,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2498,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2501,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2515,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2533,        if (ArrayUtils.isEmpty(array)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2534,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2536,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2537,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2538,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2539,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2541,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2542,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2543,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2546,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2559,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2575,"        return indexOf(array, valueToFind, 0);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2594,        if (ArrayUtils.isEmpty(array)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2595,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2597,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2598,            startIndex = 0;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2600,        for (int i = startIndex; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2601,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2602,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2605,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2620,"        return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2638,        if (ArrayUtils.isEmpty(array)) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2639,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2641,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2642,            return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2643,        } else if (startIndex >= array.length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2644,            startIndex = array.length - 1;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2646,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2647,            if (valueToFind == array[i]) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2648,                return i;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2651,        return INDEX_NOT_FOUND;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2664,"        return indexOf(array, valueToFind) != INDEX_NOT_FOUND;",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2682,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2683,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2684,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2685,            return EMPTY_CHAR_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2687,        final char[] result = new char[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2688,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2689,            result[i] = array[i].charValue();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2691,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2704,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2705,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2706,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2707,            return EMPTY_CHAR_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2709,        final char[] result = new char[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2710,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2711,            Character b = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2712,            result[i] = (b == null ? valueForNull : b.charValue());,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2714,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2726,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2727,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2728,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2729,            return EMPTY_CHARACTER_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2731,        final Character[] result = new Character[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2732,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2733,            result[i] = Character.valueOf(array[i]);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2735,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2750,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2751,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2752,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2753,            return EMPTY_LONG_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2755,        final long[] result = new long[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2756,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2757,            result[i] = array[i].longValue();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2759,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2772,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2773,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2774,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2775,            return EMPTY_LONG_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2777,        final long[] result = new long[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2778,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2779,            Long b = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2780,            result[i] = (b == null ? valueForNull : b.longValue());,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2782,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2794,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2795,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2796,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2797,            return EMPTY_LONG_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2799,        final Long[] result = new Long[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2800,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2801,            result[i] = Long.valueOf(array[i]);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2803,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2818,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2819,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2820,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2821,            return EMPTY_INT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2823,        final int[] result = new int[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2824,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2825,            result[i] = array[i].intValue();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2827,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2840,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2841,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2842,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2843,            return EMPTY_INT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2845,        final int[] result = new int[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2846,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2847,            Integer b = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2848,            result[i] = (b == null ? valueForNull : b.intValue());,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2850,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2862,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2863,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2864,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2865,            return EMPTY_INTEGER_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2867,        final Integer[] result = new Integer[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2868,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2869,            result[i] = Integer.valueOf(array[i]);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2871,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2886,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2887,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2888,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2889,            return EMPTY_SHORT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2891,        final short[] result = new short[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2892,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2893,            result[i] = array[i].shortValue();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2895,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2908,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2909,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2910,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2911,            return EMPTY_SHORT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2913,        final short[] result = new short[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2914,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2915,            Short b = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2916,            result[i] = (b == null ? valueForNull : b.shortValue());,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2918,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2930,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2931,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2932,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2933,            return EMPTY_SHORT_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2935,        final Short[] result = new Short[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2936,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2937,            result[i] = Short.valueOf(array[i]);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2939,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2954,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2955,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2956,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2957,            return EMPTY_BYTE_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2959,        final byte[] result = new byte[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2960,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2961,            result[i] = array[i].byteValue();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2963,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2976,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2977,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2978,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2979,            return EMPTY_BYTE_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2981,        final byte[] result = new byte[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2982,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2983,            Byte b = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2984,            result[i] = (b == null ? valueForNull : b.byteValue());,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2986,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2998,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,2999,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3000,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3001,            return EMPTY_BYTE_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3003,        final Byte[] result = new Byte[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3004,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3005,            result[i] = Byte.valueOf(array[i]);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3007,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3022,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3023,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3024,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3025,            return EMPTY_DOUBLE_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3027,        final double[] result = new double[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3028,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3029,            result[i] = array[i].doubleValue();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3031,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3044,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3045,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3046,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3047,            return EMPTY_DOUBLE_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3049,        final double[] result = new double[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3050,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3051,            Double b = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3052,            result[i] = (b == null ? valueForNull : b.doubleValue());,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3054,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3066,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3067,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3068,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3069,            return EMPTY_DOUBLE_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3071,        final Double[] result = new Double[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3072,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3073,            result[i] = Double.valueOf(array[i]);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3075,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3090,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3091,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3092,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3093,            return EMPTY_FLOAT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3095,        final float[] result = new float[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3096,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3097,            result[i] = array[i].floatValue();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3099,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3112,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3113,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3114,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3115,            return EMPTY_FLOAT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3117,        final float[] result = new float[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3118,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3119,            Float b = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3120,            result[i] = (b == null ? valueForNull : b.floatValue());,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3122,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3134,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3135,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3136,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3137,            return EMPTY_FLOAT_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3139,        final Float[] result = new Float[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3140,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3141,            result[i] = Float.valueOf(array[i]);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3143,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3158,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3159,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3160,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3161,            return EMPTY_BOOLEAN_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3163,        final boolean[] result = new boolean[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3164,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3165,            result[i] = array[i].booleanValue();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3167,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3180,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3181,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3182,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3183,            return EMPTY_BOOLEAN_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3185,        final boolean[] result = new boolean[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3186,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3187,            Boolean b = array[i];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3188,            result[i] = (b == null ? valueForNull : b.booleanValue());,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3190,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3202,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3203,            return null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3204,        } else if (array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3205,            return EMPTY_BOOLEAN_OBJECT_ARRAY;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3207,        final Boolean[] result = new Boolean[array.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3208,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3209,            result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3211,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3223,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3224,            return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3226,        return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3237,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3238,            return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3240,        return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3251,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3252,            return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3254,        return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3265,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3266,            return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3268,        return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3280,            return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3293,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3294,            return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3296,        return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3307,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3308,            return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3310,        return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3321,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3322,            return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3324,        return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3335,        if (array == null || array.length == 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3336,            return true;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3338,        return false;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3350,         return (array != null && array.length != 0);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3361,        return (array != null && array.length != 0);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3372,        return (array != null && array.length != 0);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3383,        return (array != null && array.length != 0);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3394,        return (array != null && array.length != 0);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3405,        return (array != null && array.length != 0);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3416,        return (array != null && array.length != 0);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3427,        return (array != null && array.length != 0);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3438,        return (array != null && array.length != 0);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3465,        if (array1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3466,            return clone(array2);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3467,        } else if (array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3468,            return clone(array1);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3470,        final Class<?> type1 = array1.getClass().getComponentType();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3472,"        T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3473,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3475,"            System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3488,        },0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3476,        } catch (ArrayStoreException ase) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3483,            final Class<?> type2 = array2.getClass().getComponentType();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3484,            if (!type1.isAssignableFrom(type2)){,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3485,"                throw new IllegalArgumentException(""Cannot store ""+type2.getName()+"" in an array of ""+type1.getName(), ase);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3487,"            throw ase; // No, so rethrow original",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3489,        return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3510,        if (array1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3511,            return clone(array2);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3512,        } else if (array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3513,            return clone(array1);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3515,        boolean[] joinedArray = new boolean[array1.length + array2.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3516,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3517,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3518,        return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3539,        if (array1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3540,            return clone(array2);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3541,        } else if (array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3542,            return clone(array1);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3544,        char[] joinedArray = new char[array1.length + array2.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3545,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3546,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3547,        return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3568,        if (array1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3569,            return clone(array2);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3570,        } else if (array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3571,            return clone(array1);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3573,        byte[] joinedArray = new byte[array1.length + array2.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3574,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3575,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3576,        return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3597,        if (array1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3598,            return clone(array2);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3599,        } else if (array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3600,            return clone(array1);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3602,        short[] joinedArray = new short[array1.length + array2.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3603,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3604,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3605,        return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3626,        if (array1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3627,            return clone(array2);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3628,        } else if (array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3629,            return clone(array1);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3631,        int[] joinedArray = new int[array1.length + array2.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3632,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3633,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3634,        return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3655,        if (array1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3656,            return clone(array2);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3657,        } else if (array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3658,            return clone(array1);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3660,        long[] joinedArray = new long[array1.length + array2.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3661,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3662,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3663,        return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3684,        if (array1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3685,            return clone(array2);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3686,        } else if (array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3687,            return clone(array1);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3689,        float[] joinedArray = new float[array1.length + array2.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3690,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3691,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3692,        return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3713,        if (array1 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3714,            return clone(array2);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3715,        } else if (array2 == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3716,            return clone(array1);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3718,        double[] joinedArray = new double[array1.length + array2.length];,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3719,"        System.arraycopy(array1, 0, joinedArray, 0, array1.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3720,"        System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3721,        return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3754,        if (array != null){,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3755,            type = array.getClass();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3756,        } else if (element != null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3757,            type = element.getClass();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3759,"            throw new IllegalArgumentException(""Arguments cannot both be null"");            ",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3762,"        T[] newArray = (T[]) copyArrayGrow1(array, type);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3763,        newArray[newArray.length - 1] = element;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3764,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3789,"        boolean[] newArray = (boolean[])copyArrayGrow1(array, Boolean.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3790,        newArray[newArray.length - 1] = element;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3791,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3816,"        byte[] newArray = (byte[])copyArrayGrow1(array, Byte.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3817,        newArray[newArray.length - 1] = element;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3818,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3843,"        char[] newArray = (char[])copyArrayGrow1(array, Character.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3844,        newArray[newArray.length - 1] = element;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3845,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3870,"        double[] newArray = (double[])copyArrayGrow1(array, Double.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3871,        newArray[newArray.length - 1] = element;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3872,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3897,"        float[] newArray = (float[])copyArrayGrow1(array, Float.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3898,        newArray[newArray.length - 1] = element;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3899,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3924,"        int[] newArray = (int[])copyArrayGrow1(array, Integer.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3925,        newArray[newArray.length - 1] = element;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3926,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3951,"        long[] newArray = (long[])copyArrayGrow1(array, Long.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3952,        newArray[newArray.length - 1] = element;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3953,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3978,"        short[] newArray = (short[])copyArrayGrow1(array, Short.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3979,        newArray[newArray.length - 1] = element;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3980,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3993,        if (array != null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3994,            int arrayLength = Array.getLength(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3995,"            Object newArray = Array.newInstance(array.getClass().getComponentType(), arrayLength + 1);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3996,"            System.arraycopy(array, 0, newArray, 0, arrayLength);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3997,            return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,3999,"        return Array.newInstance(newArrayComponentType, 1);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4032,        Class<?> clss = null;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4033,        if (array != null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4034,            clss = array.getClass().getComponentType();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4035,        } else if (element != null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4036,            clss = element.getClass();,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4038,"            throw new IllegalArgumentException(""Array and element cannot both be null"");            ",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4041,"        final T[] newArray = (T[]) add(array, index, element, clss);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4042,        return newArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4073,"        return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4105,"        return (char[]) add(array, index, Character.valueOf(element), Character.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4136,"        return (byte[]) add(array, index, Byte.valueOf(element), Byte.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4167,"        return (short[]) add(array, index, Short.valueOf(element), Short.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4198,"        return (int[]) add(array, index, Integer.valueOf(element), Integer.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4229,"        return (long[]) add(array, index, Long.valueOf(element), Long.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4260,"        return (float[]) add(array, index, Float.valueOf(element), Float.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4291,"        return (double[]) add(array, index, Double.valueOf(element), Double.TYPE);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4306,        if (array == null) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4307,            if (index != 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4308,"                throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4310,"            Object joinedArray = Array.newInstance(clss, 1);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4311,"            Array.set(joinedArray, 0, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4312,            return joinedArray;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4314,        int length = Array.getLength(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4315,        if (index > length || index < 0) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4316,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4318,"        Object result = Array.newInstance(clss, length + 1);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4319,"        System.arraycopy(array, 0, result, 0, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4320,"        Array.set(result, index, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4321,        if (index < length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4322,"            System.arraycopy(array, index, result, index + 1, length - index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4324,        return result;,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4357,"        return (T[]) remove((Object) array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4386,"        int index = indexOf(array, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4387,        if (index == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4388,            return clone(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4390,"        return remove(array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4422,"        return (boolean[]) remove((Object) array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4451,"        int index = indexOf(array, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4452,        if (index == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4453,            return clone(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4455,"        return remove(array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4487,"        return (byte[]) remove((Object) array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4516,"        int index = indexOf(array, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4517,        if (index == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4518,            return clone(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4520,"        return remove(array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4552,"        return (char[]) remove((Object) array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4581,"        int index = indexOf(array, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4582,        if (index == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4583,            return clone(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4585,"        return remove(array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4617,"        return (double[]) remove((Object) array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4646,"        int index = indexOf(array, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4647,        if (index == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4648,            return clone(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4650,"        return remove(array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4682,"        return (float[]) remove((Object) array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4711,"        int index = indexOf(array, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4712,        if (index == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4713,            return clone(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4715,"        return remove(array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4747,"        return (int[]) remove((Object) array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4776,"        int index = indexOf(array, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4777,        if (index == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4778,            return clone(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4780,"        return remove(array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4812,"        return (long[]) remove((Object) array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4841,"        int index = indexOf(array, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4842,        if (index == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4843,            return clone(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4845,"        return remove(array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4877,"        return (short[]) remove((Object) array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4906,"        int index = indexOf(array, element);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4907,        if (index == INDEX_NOT_FOUND) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4908,            return clone(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4910,"        return remove(array, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4935,        int length = getLength(array);,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4936,        if (index < 0 || index >= length) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4937,"            throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4940,"        Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4941,"        System.arraycopy(array, 0, result, 0, index);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4942,        if (index < length - 1) {,0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4943,"            System.arraycopy(array, index + 1, result, index, length - index - 1);",0.0,0,-1,0
org/apache/commons/lang3/ArrayUtils,31,4946,        return result;,0.0,0,-1,0
