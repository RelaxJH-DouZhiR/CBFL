project_path,version,lines,statement,suspicious,faulty,predict,miss_line,predictions0,predictions1
org/apache/commons/lang/text/StrBuilder,61,1761,        startIndex = (startIndex < 0 ? 0 : startIndex);,0.57143,0,,0,0.489815171655308,0.5101848283446936
org/apache/commons/lang/text/StrBuilder,61,1762,        if (str == null || startIndex >= size) {,0.57143,0,,0,0.42494469815310776,0.5750553018468934
org/apache/commons/lang/text/StrBuilder,61,1765,        int strLen = str.length();,0.57143,0,,0,0.5223549233264856,0.4776450766735141
org/apache/commons/lang/text/StrBuilder,61,1766,        if (strLen == 1) {,0.57143,0,,0,0.4318328719479378,0.5681671280520616
org/apache/commons/lang/text/StrBuilder,61,1769,        if (strLen == 0) {,0.57143,0,,0,0.4318328719479378,0.5681671280520616
org/apache/commons/lang/text/StrBuilder,61,1772,        if (strLen > size) {,0.57143,0,,0,0.4292598156964815,0.5707401843035185
org/apache/commons/lang/text/StrBuilder,61,1775,        char[] thisBuf = buffer;,0.57143,0,,0,0.43494390782853853,0.5650560921714601
org/apache/commons/lang/text/StrBuilder,61,1776,        int len = thisBuf.length - strLen;,0.57143,1,,0,0.41877739483048926,0.5812226051695096
org/apache/commons/lang/text/StrBuilder,61,1778,        for (int i = startIndex; i < len; i++) {,0.57143,0,,0,0.47871434003389474,0.5212856599661064
org/apache/commons/lang/text/StrBuilder,61,1779,            for (int j = 0; j < strLen; j++) {,0.57143,0,,0,0.482159187329296,0.5178408126707054
org/apache/commons/lang/text/StrBuilder,61,1780,                if (str.charAt(j) != thisBuf[i + j]) {,0.57143,0,,0,0.025978500183002885,0.9740214998169966
org/apache/commons/lang/text/StrBuilder,61,1781,                    continue outer;,0.57143,0,,0,0.35331253600831675,0.646687463991682
org/apache/commons/lang/text/StrBuilder,61,1784,            return i;,0.57143,0,,0,0.35967293058860517,0.6403270694113952
org/apache/commons/lang/text/StrBuilder,61,1184,        int len = (str == null ? 0 : str.length());,0.5,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1185,        if (len > 0) {,0.5,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1186,"            int index = indexOf(str, 0);",0.5,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1187,            while (index >= 0) {,0.5,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1188,"                deleteImpl(index, index + len, len);",0.5,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1189,"                index = indexOf(str, index);",0.5,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1202,        int len = (str == null ? 0 : str.length());,0.5,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1203,        if (len > 0) {,0.5,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1204,"            int index = indexOf(str, 0);",0.5,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1205,            if (index >= 0) {,0.5,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1206,"                deleteImpl(index, index + len, len);",0.5,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1209,        return this;,0.5,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1747,"        return indexOf(str, 0);",0.5,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1114,"        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",0.30769,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1115,        size -= len;,0.30769,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1116,    },0.30769,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,121,        super();,0.05882,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,122,        if (str == null) {,0.05882,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,125,            buffer = new char[str.length() + CAPACITY];,0.05882,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,126,            append(str);,0.05882,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,128,    },0.05882,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,474,            int len = length();,0.03571,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,475,            ensureCapacity(len + strLen);,0.03571,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,476,"            str.getChars(0, strLen, buffer, len);",0.03571,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,477,            size += strLen;,0.03571,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,469,        if (str == null) {,0.0354,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,472,        int strLen = str.length();,0.0354,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,473,        if (strLen > 0) {,0.0354,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,479,        return this;,0.0354,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,260,            super();,0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,261,            this.chars = (char[]) chars.clone();,0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,262,            Arrays.sort(this.chars);,0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,263,        },0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,216,        super();,0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,217,    },0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,37,"    private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');",0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,41,    private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');,0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,45,    private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');,0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,50,"    private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());",0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,54,    private static final StrMatcher TRIM_MATCHER = new TrimMatcher();,0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,58,    private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');,0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,62,"    private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');",0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,66,"    private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());",0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,70,    private static final StrMatcher NONE_MATCHER = new NoMatcher();,0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,389,            super();,0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,390,        },0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,362,            super();,0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,363,        },0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,293,            super();,0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,294,            this.ch = ch;,0.02532,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,295,        },0.02532,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,182,        return size;,0.02367,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,228,        if (capacity > buffer.length) {,0.02367,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,233,        return this;,0.02367,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,275,"            return Arrays.binarySearch(chars, buffer[pos]) >= 0 ? 1 : 0;",0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,80,        return COMMA_MATCHER;,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,89,        return TAB_MATCHER;,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,98,        return SPACE_MATCHER;,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,108,        return SPLIT_MATCHER;,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,117,        return TRIM_MATCHER;,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,126,        return SINGLE_QUOTE_MATCHER;,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,135,        return DOUBLE_QUOTE_MATCHER;,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,144,        return QUOTE_MATCHER;,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,153,        return NONE_MATCHER;,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,163,        return new CharMatcher(ch);,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,173,        if (chars == null || chars.length == 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,174,            return NONE_MATCHER;,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,176,        if (chars.length == 1) {,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,177,            return new CharMatcher(chars[0]);,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,179,        return new CharSetMatcher(chars);,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,189,        if (chars == null || chars.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,190,            return NONE_MATCHER;,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,192,        if (chars.length() == 1) {,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,193,            return new CharMatcher(chars.charAt(0));,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,195,        return new CharSetMatcher(chars.toCharArray());,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,205,        if (str == null || str.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,206,            return NONE_MATCHER;,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,208,        return new StringMatcher(str);,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,402,            return buffer[pos] <= 32 ? 1 : 0;,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,375,            return 0;,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,325,            super();,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,326,            chars = str.toCharArray();,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,327,        },0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,339,            int len = chars.length;,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,340,            if (pos + len > bufferEnd) {,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,341,                return 0;,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,343,"            for (int i = 0; i < chars.length; i++, pos++) {",0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,344,                if (chars[i] != buffer[pos]) {,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,345,                    return 0;,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,348,            return len;,0.0,0,-1,0
org/apache/commons/lang/text/StrMatcher,61,307,            return ch == buffer[pos] ? 1 : 0;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2213,            super();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2212,        StrBuilderTokenizer() {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2214,        },0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2218,            if (chars == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2219,"                return super.tokenize(StrBuilder.this.buffer, 0, StrBuilder.this.size());",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2221,"                return super.tokenize(chars, offset, count);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2227,            String str = super.getContent();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2228,            if (str == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2229,                return StrBuilder.this.toString();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2231,                return str;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,241,        super();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,118,    private StrMatcher delimMatcher = StrMatcher.splitMatcher();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,120,    private StrMatcher quoteMatcher = StrMatcher.noneMatcher();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,122,    private StrMatcher ignoredMatcher = StrMatcher.noneMatcher();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,124,    private StrMatcher trimmerMatcher = StrMatcher.noneMatcher();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,127,    private boolean emptyAsNull = false;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,129,    private boolean ignoreEmptyTokens = true;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,242,        this.chars = null;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,243,    },0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,252,        super();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,253,        if (input != null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,254,            chars = input.toCharArray();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,256,            chars = null;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,258,    },0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,267,        this(input);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,268,        setDelimiterChar(delim);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,269,    },0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,278,        this(input);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,279,        setDelimiterString(delim);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,280,    },0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,289,        this(input);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,290,        setDelimiterMatcher(delim);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,291,    },0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,302,"        this(input, delim);",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,303,        setQuoteChar(quote);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,304,    },0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,315,"        this(input, delim);",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,316,        setQuoteMatcher(quote);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,317,    },0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,329,        super();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,330,        this.chars = input;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,331,    },0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,343,        this(input);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,344,        setDelimiterChar(delim);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,345,    },0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,357,        this(input);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,358,        setDelimiterString(delim);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,359,    },0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,371,        this(input);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,372,        setDelimiterMatcher(delim);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,373,    },0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,387,"        this(input, delim);",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,388,        setQuoteChar(quote);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,389,    },0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,403,"        this(input, delim);",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,404,        setQuoteMatcher(quote);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,405,    },0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,93,        CSV_TOKENIZER_PROTOTYPE = new StrTokenizer();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,94,        CSV_TOKENIZER_PROTOTYPE.setDelimiterMatcher(StrMatcher.commaMatcher());,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,95,        CSV_TOKENIZER_PROTOTYPE.setQuoteMatcher(StrMatcher.doubleQuoteMatcher());,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,96,        CSV_TOKENIZER_PROTOTYPE.setIgnoredMatcher(StrMatcher.noneMatcher());,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,97,        CSV_TOKENIZER_PROTOTYPE.setTrimmerMatcher(StrMatcher.trimMatcher());,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,98,        CSV_TOKENIZER_PROTOTYPE.setEmptyTokenAsNull(false);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,99,        CSV_TOKENIZER_PROTOTYPE.setIgnoreEmptyTokens(false);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,101,        TSV_TOKENIZER_PROTOTYPE = new StrTokenizer();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,102,        TSV_TOKENIZER_PROTOTYPE.setDelimiterMatcher(StrMatcher.tabMatcher());,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,103,        TSV_TOKENIZER_PROTOTYPE.setQuoteMatcher(StrMatcher.doubleQuoteMatcher());,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,104,        TSV_TOKENIZER_PROTOTYPE.setIgnoredMatcher(StrMatcher.noneMatcher());,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,105,        TSV_TOKENIZER_PROTOTYPE.setTrimmerMatcher(StrMatcher.trimMatcher());,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,106,        TSV_TOKENIZER_PROTOTYPE.setEmptyTokenAsNull(false);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,107,        TSV_TOKENIZER_PROTOTYPE.setIgnoreEmptyTokens(false);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,108,    },0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,139,        return (StrTokenizer) CSV_TOKENIZER_PROTOTYPE.clone();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,152,        return getCSVClone();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,165,        StrTokenizer tok = getCSVClone();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,166,        tok.reset(input);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,167,        return tok;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,180,        StrTokenizer tok = getCSVClone();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,181,        tok.reset(input);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,182,        return tok;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,191,        return (StrTokenizer) TSV_TOKENIZER_PROTOTYPE.clone();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,204,        return getTSVClone();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,215,        StrTokenizer tok = getTSVClone();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,216,        tok.reset(input);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,217,        return tok;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,228,        StrTokenizer tok = getTSVClone();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,229,        tok.reset(input);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,230,        return tok;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,415,        checkTokenized();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,416,        return tokens.length;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,425,        if (hasNext()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,426,            return tokens[tokenPos++];,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,428,        return null;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,437,        if (hasPrevious()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,438,            return tokens[--tokenPos];,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,440,        return null;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,449,        checkTokenized();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,450,        return (String[]) tokens.clone();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,459,        checkTokenized();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,460,        List list = new ArrayList(tokens.length);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,461,        for (int i = 0; i < tokens.length; i++) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,462,            list.add(tokens[i]);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,464,        return list;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,475,        tokenPos = 0;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,476,        tokens = null;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,477,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,489,        reset();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,490,        if (input != null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,491,            this.chars = input.toCharArray();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,493,            this.chars = null;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,495,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,510,        reset();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,511,        this.chars = input;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,512,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,523,        checkTokenized();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,524,        return tokenPos < tokens.length;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,533,        if (hasNext()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,534,            return tokens[tokenPos++];,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,536,        throw new NoSuchElementException();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,545,        return tokenPos;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,554,        checkTokenized();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,555,        return tokenPos > 0;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,564,        if (hasPrevious()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,565,            return tokens[--tokenPos];,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,567,        throw new NoSuchElementException();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,576,        return tokenPos - 1;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,585,"        throw new UnsupportedOperationException(""remove() is unsupported"");",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,594,"        throw new UnsupportedOperationException(""set() is unsupported"");",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,603,"        throw new UnsupportedOperationException(""add() is unsupported"");",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,612,        if (tokens == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,613,            if (chars == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,615,"                List split = tokenize(null, 0, 0);",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,616,                tokens = (String[]) split.toArray(new String[split.size()]);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,617,            } else {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,618,"                List split = tokenize(chars, 0, chars.length);",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,619,                tokens = (String[]) split.toArray(new String[split.size()]);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,622,    },0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,645,        if (chars == null || count == 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,646,            return Collections.EMPTY_LIST;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,648,        StrBuilder buf = new StrBuilder();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,649,        List tokens = new ArrayList();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,650,        int pos = offset;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,653,        while (pos >= 0 && pos < count) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,655,"            pos = readNextToken(chars, pos, count, buf, tokens);",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,658,            if (pos >= count) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,659,"                addToken(tokens, """");",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,662,        return tokens;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,672,        if (tok == null || tok.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,673,            if (isIgnoreEmptyTokens()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,674,                return;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,676,            if (isEmptyTokenAsNull()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,677,                tok = null;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,680,        list.add(tok);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,681,    },0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,697,        while (start < len) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,698,            int removeLen = Math.max(,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,701,            if (removeLen == 0 ||,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,704,                break;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,706,            start += removeLen;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,707,        },0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,710,        if (start >= len) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,711,"            addToken(tokens, """");",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,712,            return -1;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,716,"        int delimLen = getDelimiterMatcher().isMatch(chars, start, start, len);",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,717,        if (delimLen > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,718,"            addToken(tokens, """");",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,719,            return start + delimLen;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,723,"        int quoteLen = getQuoteMatcher().isMatch(chars, start, start, len);",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,724,        if (quoteLen > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,725,"            return readWithQuotes(chars, start + quoteLen, len, workArea, tokens, start, quoteLen);",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,727,"        return readWithQuotes(chars, start, len, workArea, tokens, 0, 0);",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,749,        workArea.clear();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,750,        int pos = start;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,751,        boolean quoting = (quoteLen > 0);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,752,        int trimStart = 0;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,754,        while (pos < len) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,758,            if (quoting) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,765,"                if (isQuote(chars, pos, len, quoteStart, quoteLen)) {",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,766,"                    if (isQuote(chars, pos + quoteLen, len, quoteStart, quoteLen)) {",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,768,"                        workArea.append(chars, pos, quoteLen);",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,769,                        pos += (quoteLen * 2);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,770,                        trimStart = workArea.size();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,771,                        continue;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,775,                    quoting = false;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,776,                    pos += quoteLen;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,777,                    continue;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,781,                workArea.append(chars[pos++]);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,782,                trimStart = workArea.size();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,788,"                int delimLen = getDelimiterMatcher().isMatch(chars, pos, start, len);",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,789,                if (delimLen > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,791,"                    addToken(tokens, workArea.substring(0, trimStart));",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,792,                    return pos + delimLen;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,796,                if (quoteLen > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,797,"                    if (isQuote(chars, pos, len, quoteStart, quoteLen)) {",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,798,                        quoting = true;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,799,                        pos += quoteLen;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,800,                        continue;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,805,"                int ignoredLen = getIgnoredMatcher().isMatch(chars, pos, start, len);",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,806,                if (ignoredLen > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,807,                    pos += ignoredLen;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,808,                    continue;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,814,"                int trimmedLen = getTrimmerMatcher().isMatch(chars, pos, start, len);",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,815,                if (trimmedLen > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,816,"                    workArea.append(chars, pos, trimmedLen);",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,817,                    pos += trimmedLen;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,818,                    continue;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,822,                workArea.append(chars[pos++]);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,823,                trimStart = workArea.size();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,824,            },0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,828,"        addToken(tokens, workArea.substring(0, trimStart));",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,829,        return -1;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,844,        for (int i = 0; i < quoteLen; i++) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,845,            if ((pos + i) >= len || chars[pos + i] != chars[quoteStart + i]) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,846,                return false;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,849,        return true;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,860,        return this.delimMatcher;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,872,        if (delim == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,873,            this.delimMatcher = StrMatcher.noneMatcher();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,875,            this.delimMatcher = delim;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,877,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,887,        return setDelimiterMatcher(StrMatcher.charMatcher(delim));,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,897,        return setDelimiterMatcher(StrMatcher.stringMatcher(delim));,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,912,        return quoteMatcher;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,925,        if (quote != null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,926,            this.quoteMatcher = quote;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,928,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,941,        return setQuoteMatcher(StrMatcher.charMatcher(quote));,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,956,        return ignoredMatcher;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,969,        if (ignored != null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,970,            this.ignoredMatcher = ignored;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,972,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,985,        return setIgnoredMatcher(StrMatcher.charMatcher(ignored));,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1000,        return trimmerMatcher;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1013,        if (trimmer != null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1014,            this.trimmerMatcher = trimmer;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1016,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1027,        return this.emptyAsNull;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1038,        this.emptyAsNull = emptyAsNull;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1039,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1050,        return ignoreEmptyTokens;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1061,        this.ignoreEmptyTokens = ignoreEmptyTokens;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1062,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1072,        if (chars == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1073,            return null;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1075,        return new String(chars);,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1088,            return cloneReset();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1089,        } catch (CloneNotSupportedException ex) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1090,            return null;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1102,        StrTokenizer cloned = (StrTokenizer) super.clone();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1103,        if (cloned.chars != null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1104,            cloned.chars = (char[]) cloned.chars.clone();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1106,        cloned.reset();,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1107,        return cloned;,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1117,        if (tokens == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1118,"            return ""StrTokenizer[not tokenized yet]"";",0.0,0,-1,0
org/apache/commons/lang/text/StrTokenizer,61,1120,"            return ""StrTokenizer"" + getTokenList();",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,98,        this(CAPACITY);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,99,    },0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,107,        super();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,108,        if (initialCapacity <= 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,109,            initialCapacity = CAPACITY;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,111,        buffer = new char[initialCapacity];,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,112,    },0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,123,            buffer = new char[CAPACITY];,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,137,        return newLine;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,147,        this.newLine = newLine;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,148,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,158,        return nullText;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,168,        if (nullText != null && nullText.length() == 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,169,            nullText = null;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,171,        this.nullText = nullText;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,172,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,194,        if (length < 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,195,            throw new StringIndexOutOfBoundsException(length);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,197,        if (length < size) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,198,            size = length;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,199,        } else if (length > size) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,200,            ensureCapacity(length);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,201,            int oldEnd = size;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,202,            int newEnd = length;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,203,            size = length;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,204,            for (int i = oldEnd; i < newEnd; i++) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,205,                buffer[i] = '\0';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,208,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,218,        return buffer.length;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,229,            char[] old = buffer;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,230,            buffer = new char[capacity];,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,231,"            System.arraycopy(old, 0, buffer, 0, size);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,242,        if (buffer.length > length()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,243,            char[] old = buffer;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,244,            buffer = new char[length()];,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,245,"            System.arraycopy(old, 0, buffer, 0, size);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,247,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,260,        return size;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,272,        return size == 0;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,287,        size = 0;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,288,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,302,        if (index < 0 || index >= length()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,303,            throw new StringIndexOutOfBoundsException(index);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,305,        return buffer[index];,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,319,        if (index < 0 || index >= length()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,320,            throw new StringIndexOutOfBoundsException(index);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,322,        buffer[index] = ch;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,323,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,336,        if (index < 0 || index >= size) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,337,            throw new StringIndexOutOfBoundsException(index);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,339,"        deleteImpl(index, index + 1, 1);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,340,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,350,        if (size == 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,351,            return ArrayUtils.EMPTY_CHAR_ARRAY;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,353,        char chars[] = new char[size];,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,354,"        System.arraycopy(buffer, 0, chars, 0, size);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,355,        return chars;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,369,"        endIndex = validateRange(startIndex, endIndex);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,370,        int len = endIndex - startIndex;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,371,        if (len == 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,372,            return ArrayUtils.EMPTY_CHAR_ARRAY;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,374,        char chars[] = new char[len];,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,375,"        System.arraycopy(buffer, startIndex, chars, 0, len);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,376,        return chars;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,386,        int len = length();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,387,        if (destination == null || destination.length < len) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,388,            destination = new char[len];,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,390,"        System.arraycopy(buffer, 0, destination, 0, len);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,391,        return destination;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,405,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,406,            throw new StringIndexOutOfBoundsException(startIndex);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,408,        if (endIndex < 0 || endIndex > length()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,409,            throw new StringIndexOutOfBoundsException(endIndex);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,411,        if (startIndex > endIndex) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,412,"            throw new StringIndexOutOfBoundsException(""end < start"");",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,414,"        System.arraycopy(buffer, startIndex, destination, destinationIndex, endIndex - startIndex);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,415,    },0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,428,        if (newLine == null)  {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,429,            append(SystemUtils.LINE_SEPARATOR);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,430,            return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,432,        return append(newLine);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,441,        if (nullText == null)  {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,442,            return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,444,        return append(nullText);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,455,        if (obj == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,456,            return appendNull();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,458,        return append(obj.toString());        ,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,470,            return appendNull();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,492,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,493,            return appendNull();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,495,        if (startIndex < 0 || startIndex > str.length()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,496,"            throw new StringIndexOutOfBoundsException(""startIndex must be valid"");",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,498,        if (length < 0 || (startIndex + length) > str.length()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,499,"            throw new StringIndexOutOfBoundsException(""length must be valid"");",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,501,        if (length > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,502,            int len = length();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,503,            ensureCapacity(len + length);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,504,"            str.getChars(startIndex, startIndex + length, buffer, len);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,505,            size += length;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,507,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,518,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,519,            return appendNull();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,521,        int strLen = str.length();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,522,        if (strLen > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,523,            int len = length();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,524,            ensureCapacity(len + strLen);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,525,"            str.getChars(0, strLen, buffer, len);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,526,            size += strLen;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,528,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,541,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,542,            return appendNull();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,544,        if (startIndex < 0 || startIndex > str.length()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,545,"            throw new StringIndexOutOfBoundsException(""startIndex must be valid"");",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,547,        if (length < 0 || (startIndex + length) > str.length()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,548,"            throw new StringIndexOutOfBoundsException(""length must be valid"");",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,550,        if (length > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,551,            int len = length();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,552,            ensureCapacity(len + length);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,553,"            str.getChars(startIndex, startIndex + length, buffer, len);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,554,            size += length;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,556,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,567,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,568,            return appendNull();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,570,        int strLen = str.length();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,571,        if (strLen > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,572,            int len = length();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,573,            ensureCapacity(len + strLen);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,574,"            System.arraycopy(str.buffer, 0, buffer, len, strLen);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,575,            size += strLen;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,577,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,590,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,591,            return appendNull();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,593,        if (startIndex < 0 || startIndex > str.length()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,594,"            throw new StringIndexOutOfBoundsException(""startIndex must be valid"");",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,596,        if (length < 0 || (startIndex + length) > str.length()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,597,"            throw new StringIndexOutOfBoundsException(""length must be valid"");",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,599,        if (length > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,600,            int len = length();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,601,            ensureCapacity(len + length);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,602,"            str.getChars(startIndex, startIndex + length, buffer, len);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,603,            size += length;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,605,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,616,        if (chars == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,617,            return appendNull();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,619,        int strLen = chars.length;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,620,        if (strLen > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,621,            int len = length();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,622,            ensureCapacity(len + strLen);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,623,"            System.arraycopy(chars, 0, buffer, len, strLen);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,624,            size += strLen;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,626,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,639,        if (chars == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,640,            return appendNull();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,642,        if (startIndex < 0 || startIndex > chars.length) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,643,"            throw new StringIndexOutOfBoundsException(""Invalid startIndex: "" + length);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,645,        if (length < 0 || (startIndex + length) > chars.length) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,646,"            throw new StringIndexOutOfBoundsException(""Invalid length: "" + length);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,648,        if (length > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,649,            int len = length();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,650,            ensureCapacity(len + length);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,651,"            System.arraycopy(chars, startIndex, buffer, len, length);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,652,            size += length;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,654,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,664,        if (value) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,665,            ensureCapacity(size + 4);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,666,            buffer[size++] = 't';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,667,            buffer[size++] = 'r';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,668,            buffer[size++] = 'u';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,669,            buffer[size++] = 'e';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,671,            ensureCapacity(size + 5);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,672,            buffer[size++] = 'f';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,673,            buffer[size++] = 'a';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,674,            buffer[size++] = 'l';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,675,            buffer[size++] = 's';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,676,            buffer[size++] = 'e';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,678,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,688,        int len = length();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,689,        ensureCapacity(len + 1);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,690,        buffer[size++] = ch;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,691,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,701,        return append(String.valueOf(value));,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,711,        return append(String.valueOf(value));,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,721,        return append(String.valueOf(value));,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,731,        return append(String.valueOf(value));,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,746,        if (array != null && array.length > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,747,"            separator = (separator == null ? """" : separator);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,748,            append(array[0]);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,749,            for (int i = 1; i < array.length; i++) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,750,                append(separator);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,751,                append(array[i]);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,754,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,768,        if (coll != null && coll.size() > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,769,"            separator = (separator == null ? """" : separator);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,770,            Iterator it = coll.iterator();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,771,            while (it.hasNext()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,772,                append(it.next());,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,773,                if (it.hasNext()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,774,                    append(separator);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,778,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,792,        if (it != null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,793,"            separator = (separator == null ? """" : separator);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,794,            while (it.hasNext()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,795,                append(it.next());,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,796,                if (it.hasNext()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,797,                    append(separator);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,801,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,813,        if (length >= 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,814,            ensureCapacity(size + length);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,815,            for (int i = 0; i < length; i++) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,816,                buffer[size++] = padChar;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,819,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,835,        if (width > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,836,            ensureCapacity(size + width);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,837,            String str = (obj == null ? getNullText() : obj.toString());,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,838,            int strLen = str.length();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,839,            if (strLen >= width) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,840,"                str.getChars(strLen - width, strLen, buffer, size);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,842,                int padLen = width - strLen;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,843,                for (int i = 0; i < padLen; i++) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,844,                    buffer[size + i] = padChar;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,846,"                str.getChars(0, strLen, buffer, size + padLen);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,848,            size += width;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,850,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,864,"        return appendFixedWidthPadLeft(String.valueOf(value), width, padChar);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,879,        if (width > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,880,            ensureCapacity(size + width);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,881,            String str = (obj == null ? getNullText() : obj.toString());,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,882,            int strLen = str.length();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,883,            if (strLen >= width) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,884,"                str.getChars(0, strLen, buffer, size);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,886,                int padLen = width - strLen;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,887,"                str.getChars(0, strLen, buffer, size);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,888,                for (int i = 0; i < padLen; i++) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,889,                    buffer[size + strLen + i] = padChar;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,892,            size += width;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,894,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,908,"        return appendFixedWidthPadRight(String.valueOf(value), width, padChar);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,922,        if (obj == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,923,"            return insert(index, nullText);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,925,"        return insert(index, obj.toString());",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,938,        validateIndex(index);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,939,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,940,            str = nullText;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,942,        int strLen = (str == null ? 0 : str.length());,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,943,        if (strLen > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,944,            int newSize = size + strLen;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,945,            ensureCapacity(newSize);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,946,"            System.arraycopy(buffer, index, buffer, index + strLen, size - index);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,947,            size = newSize;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,948,"            str.getChars(0, strLen, buffer, index);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,950,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,963,        validateIndex(index);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,964,        if (chars == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,965,"            return insert(index, nullText);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,967,        int len = chars.length;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,968,        if (len > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,969,            ensureCapacity(size + len);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,970,"            System.arraycopy(buffer, index, buffer, index + len, size - index);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,971,"            System.arraycopy(chars, 0, buffer, index, len);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,972,            size += len;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,974,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,989,        validateIndex(index);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,990,        if (chars == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,991,"            return insert(index, nullText);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,993,        if (offset < 0 || offset > chars.length) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,994,"            throw new StringIndexOutOfBoundsException(""Invalid offset: "" + offset);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,996,        if (length < 0 || offset + length > chars.length) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,997,"            throw new StringIndexOutOfBoundsException(""Invalid length: "" + length);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,999,        if (length > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1000,            ensureCapacity(size + length);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1001,"            System.arraycopy(buffer, index, buffer, index + length, size - index);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1002,"            System.arraycopy(chars, offset, buffer, index, length);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1003,            size += length;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1005,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1017,        validateIndex(index);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1018,        if (value) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1019,            ensureCapacity(size + 4);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1020,"            System.arraycopy(buffer, index, buffer, index + 4, size - index);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1021,            buffer[index++] = 't';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1022,            buffer[index++] = 'r';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1023,            buffer[index++] = 'u';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1024,            buffer[index] = 'e';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1025,            size += 4;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1027,            ensureCapacity(size + 5);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1028,"            System.arraycopy(buffer, index, buffer, index + 5, size - index);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1029,            buffer[index++] = 'f';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1030,            buffer[index++] = 'a';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1031,            buffer[index++] = 'l';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1032,            buffer[index++] = 's';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1033,            buffer[index] = 'e';,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1034,            size += 5;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1036,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1048,        validateIndex(index);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1049,        ensureCapacity(size + 1);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1050,"        System.arraycopy(buffer, index, buffer, index + 1, size - index);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1051,        buffer[index] = value;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1052,        size++;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1053,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1065,"        return insert(index, String.valueOf(value));",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1077,"        return insert(index, String.valueOf(value));",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1089,"        return insert(index, String.valueOf(value));",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1101,"        return insert(index, String.valueOf(value));",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1128,"        endIndex = validateRange(startIndex, endIndex);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1129,        int len = endIndex - startIndex;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1130,        if (len > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1131,"            deleteImpl(startIndex, endIndex, len);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1133,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1144,        for (int i = 0; i < size; i++) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1145,            if (buffer[i] == ch) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1146,                int start = i;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1147,                while (++i < size) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1148,                    if (buffer[i] != ch) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1149,                        break;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1152,                int len = i - start;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1153,"                deleteImpl(start, i, len);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1154,                i -= len;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1157,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1167,        for (int i = 0; i < size; i++) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1168,            if (buffer[i] == ch) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1169,"                deleteImpl(i, i + 1, 1);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1170,                break;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1173,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1192,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1224,"        return replace(matcher, null, 0, size, -1);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1238,"        return replace(matcher, null, 0, size, 1);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1253,        int newSize = size - removeLen + insertLen;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1254,        if (insertLen != removeLen) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1255,            ensureCapacity(newSize);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1256,"            System.arraycopy(buffer, endIndex, buffer, startIndex + insertLen, size - endIndex);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1257,            size = newSize;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1259,        if (insertLen > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1260,"            insertStr.getChars(0, insertLen, buffer, startIndex);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1262,    },0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1276,"        endIndex = validateRange(startIndex, endIndex);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1277,        int insertLen = (replaceStr == null ? 0 : replaceStr.length());,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1278,"        replaceImpl(startIndex, endIndex, endIndex - startIndex, replaceStr, insertLen);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1279,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1292,        if (search != replace) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1293,            for (int i = 0; i < size; i++) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1294,                if (buffer[i] == search) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1295,                    buffer[i] = replace;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1299,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1311,        if (search != replace) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1312,            for (int i = 0; i < size; i++) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1313,                if (buffer[i] == search) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1314,                    buffer[i] = replace;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1315,                    break;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1319,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1331,        int searchLen = (searchStr == null ? 0 : searchStr.length());,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1332,        if (searchLen > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1333,            int replaceLen = (replaceStr == null ? 0 : replaceStr.length());,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1334,"            int index = indexOf(searchStr, 0);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1335,            while (index >= 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1336,"                replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1337,"                index = indexOf(searchStr, index + replaceLen);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1340,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1351,        int searchLen = (searchStr == null ? 0 : searchStr.length());,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1352,        if (searchLen > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1353,"            int index = indexOf(searchStr, 0);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1354,            if (index >= 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1355,                int replaceLen = (replaceStr == null ? 0 : replaceStr.length());,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1356,"                replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1359,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1375,"        return replace(matcher, replaceStr, 0, size, -1);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1390,"        return replace(matcher, replaceStr, 0, size, 1);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1413,"        endIndex = validateRange(startIndex, endIndex);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1414,"        return replaceImpl(matcher, replaceStr, startIndex, endIndex, replaceCount);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1435,        if (matcher == null || size == 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1436,            return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1438,        int replaceLen = (replaceStr == null ? 0 : replaceStr.length());,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1439,        char[] buf = buffer;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1440,        for (int i = from; i < to && replaceCount != 0; i++) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1441,"            int removeLen = matcher.isMatch(buf, i, from, to);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1442,            if (removeLen > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1443,"                replaceImpl(i, i + removeLen, removeLen, replaceStr, replaceLen);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1444,                to = to - removeLen + replaceLen;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1445,                i = i + replaceLen - 1;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1446,                if (replaceCount > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1447,                    replaceCount--;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1451,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1461,        if (size == 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1462,            return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1465,        int half = size / 2;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1466,        char[] buf = buffer;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1467,"        for (int leftIdx = 0, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1468,            char swap = buf[leftIdx];,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1469,            buf[leftIdx] = buf[rightIdx];,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1470,            buf[rightIdx] = swap;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1472,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1483,        if (size == 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1484,            return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1486,        int len = size;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1487,        char[] buf = buffer;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1488,        int pos = 0;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1489,        while (pos < len && buf[pos] <= ' ') {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1490,            pos++;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1492,        while (pos < len && buf[len - 1] <= ' ') {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1493,            len--;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1495,        if (len < size) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1496,"            delete(len, size);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1498,        if (pos > 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1499,"            delete(0, pos);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1501,        return this;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1514,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1515,            return false;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1517,        int len = str.length();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1518,        if (len == 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1519,            return true;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1521,        if (len > size) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1522,            return false;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1524,        for (int i = 0; i < len; i++) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1525,            if (buffer[i] != str.charAt(i)) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1526,                return false;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1529,        return true;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1541,        if (str == null) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1542,            return false;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1544,        int len = str.length();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1545,        if (len == 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1546,            return true;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1548,        if (len > size) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1549,            return false;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1551,        int pos = size - len;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1552,"        for (int i = 0; i < len; i++,pos++) {",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1553,            if (buffer[pos] != str.charAt(i)) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1554,                return false;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1557,        return true;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1569,"        return substring(start, size);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1586,"        endIndex = validateRange(startIndex, endIndex);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1587,"        return new String(buffer, startIndex, endIndex - startIndex);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1603,        if (length <= 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1604,"            return """";",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1605,        } else if (length >= size) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1606,"            return new String(buffer, 0, size);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1608,"            return new String(buffer, 0, length);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1625,        if (length <= 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1626,"            return """";",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1627,        } else if (length >= size) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1628,"            return new String(buffer, 0, size);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1630,"            return new String(buffer, size - length, length);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1651,        if (index < 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1652,            index = 0;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1654,        if (length <= 0 || index >= size) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1655,"            return """";",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1657,        if (size <= index + length) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1658,"            return new String(buffer, index, size - index);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1660,"            return new String(buffer, index, length);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1672,        char[] thisBuf = buffer;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1673,        for (int i = 0; i < thisBuf.length; i++) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1674,            if (thisBuf[i] == ch) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1675,                return true;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1678,        return false;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1688,"        return indexOf(str, 0) >= 0;",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1703,"        return indexOf(matcher, 0) >= 0;",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1714,"        return indexOf(ch, 0);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1725,        startIndex = (startIndex < 0 ? 0 : startIndex);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1726,        if (startIndex >= size) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1727,            return -1;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1729,        char[] thisBuf = buffer;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1730,        for (int i = startIndex; i < thisBuf.length; i++) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1731,            if (thisBuf[i] == ch) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1732,                return i;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1735,        return -1;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1763,            return -1;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1767,"            return indexOf(str.charAt(0), startIndex);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1770,            return startIndex;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1773,            return -1;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1786,        return -1;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1800,"        return indexOf(matcher, 0);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1816,        startIndex = (startIndex < 0 ? 0 : startIndex);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1817,        if (matcher == null || startIndex >= size) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1818,            return -1;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1820,        int len = size;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1821,        char[] buf = buffer;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1822,        for (int i = startIndex; i < len; i++) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1823,"            if (matcher.isMatch(buf, i, startIndex, len) > 0) {",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1824,                return i;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1827,        return -1;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1838,"        return lastIndexOf(ch, size - 1);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1849,        startIndex = (startIndex >= size ? size - 1 : startIndex);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1850,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1851,            return -1;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1853,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1854,            if (buffer[i] == ch) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1855,                return i;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1858,        return -1;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1870,"        return lastIndexOf(str, size - 1);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1884,        startIndex = (startIndex >= size ? size - 1 : startIndex);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1885,        if (str == null || startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1886,            return -1;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1888,        int strLen = str.length();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1889,        if (strLen > 0 && strLen <= size) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1890,            if (strLen == 1) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1891,"                return lastIndexOf(str.charAt(0), startIndex);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1895,            for (int i = startIndex - strLen + 1; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1896,                for (int j = 0; j < strLen; j++) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1897,                    if (str.charAt(j) != buffer[i + j]) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1898,                        continue outer;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1901,                return i;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1904,        } else if (strLen == 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1905,            return startIndex;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1907,        return -1;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1921,"        return lastIndexOf(matcher, size);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1937,        startIndex = (startIndex >= size ? size - 1 : startIndex);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1938,        if (matcher == null || startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1939,            return -1;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1941,        char[] buf = buffer;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1942,        int endIndex = startIndex + 1;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1943,        for (int i = startIndex; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1944,"            if (matcher.isMatch(buf, i, 0, endIndex) > 0) {",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1945,                return i;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1948,        return -1;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,1985,        return new StrBuilderTokenizer();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2009,        return new StrBuilderReader();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2034,        return new StrBuilderWriter();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2076,        if (this == other) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2077,            return true;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2079,        if (this.size != other.size) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2080,            return false;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2082,        char thisBuf[] = this.buffer;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2083,        char otherBuf[] = other.buffer;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2084,        for (int i = size - 1; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2085,            char c1 = thisBuf[i];,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2086,            char c2 = otherBuf[i];,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2087,            if (c1 != c2 && Character.toUpperCase(c1) != Character.toUpperCase(c2)) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2088,                return false;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2091,        return true;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2102,        if (this == other) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2103,            return true;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2105,        if (this.size != other.size) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2106,            return false;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2108,        char thisBuf[] = this.buffer;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2109,        char otherBuf[] = other.buffer;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2110,        for (int i = size - 1; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2111,            if (thisBuf[i] != otherBuf[i]) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2112,                return false;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2115,        return true;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2126,        if (obj instanceof StrBuilder) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2127,            return equals((StrBuilder) obj);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2129,        return false;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2138,        char buf[] = buffer;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2139,        int hash = 0;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2140,        for (int i = size - 1; i >= 0; i--) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2141,            hash = 31 * hash + buf[i];,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2143,        return hash;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2157,"        return new String(buffer, 0, size);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2167,"        return new StringBuffer(size).append(buffer, 0, size);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2181,        if (startIndex < 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2182,            throw new StringIndexOutOfBoundsException(startIndex);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2184,        if (endIndex > size) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2185,            endIndex = size;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2187,        if (startIndex > endIndex) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2188,"            throw new StringIndexOutOfBoundsException(""end < start"");",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2190,        return endIndex;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2200,        if (index < 0 || index > size) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2201,            throw new StringIndexOutOfBoundsException(index);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2203,    },0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2325,            super();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2324,        StrBuilderWriter() {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2326,        },0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2331,        },0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2336,        },0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2340,            StrBuilder.this.append((char) c);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2341,        },0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2345,            StrBuilder.this.append(cbuf);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2346,        },0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2350,"            StrBuilder.this.append(cbuf, off, len);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2351,        },0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2355,            StrBuilder.this.append(str);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2356,        },0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2360,"            StrBuilder.this.append(str, off, len);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2361,        },0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2248,            super();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2247,        StrBuilderReader() {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2249,        },0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2254,        },0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2258,            if (ready() == false) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2259,                return -1;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2261,            return StrBuilder.this.charAt(pos++);,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2266,            if (off < 0 || len < 0 || off > b.length ||,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2268,                throw new IndexOutOfBoundsException();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2270,            if (len == 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2271,                return 0;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2273,            if (pos >= StrBuilder.this.size()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2274,                return -1;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2276,            if (pos + len > size()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2277,                len = StrBuilder.this.size() - pos;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2279,"            StrBuilder.this.getChars(pos, pos + len, b, off);",0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2280,            pos += len;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2281,            return len;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2286,            if (pos + n > StrBuilder.this.size()) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2287,                n = StrBuilder.this.size() - pos;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2289,            if (n < 0) {,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2290,                return 0;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2292,            pos += n;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2293,            return n;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2298,            return pos < StrBuilder.this.size();,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2303,            return true;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2308,            mark = pos;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2309,        },0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2313,            pos = mark;,0.0,0,-1,0
org/apache/commons/lang/text/StrBuilder,61,2314,        },0.0,0,-1,0
