dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict0,predict1
defect4j,math,org/apache/commons/math/dfp/Dfp,59,340,        final int rsize = 4;   // size of radix in decimal digits,1,0,0,0,0,2,0,0,1,3,57,4,0.03571,0,0,0.47312093827812923,0.5268790617218704
defect4j,math,org/apache/commons/math/dfp/Dfp,59,341,        final int offset = 4;  // Starting offset into Striped,1,0,0,0,0,2,0,0,1,3,54,4,0.03571,0,0,0.4664564643863468,0.5335435356136539
defect4j,math,org/apache/commons/math/dfp/Dfp,59,342,        final char[] striped = new char[getRadixDigits() * rsize + offset * 2];,3,3,0,1,6,4,1,0,2,7,71,4,0.03571,0,0,0.894456052927351,0.10554394707264719
defect4j,math,org/apache/commons/math/dfp/Dfp,59,345,        if (s.equals(POS_INFINITY_STRING)) {,0,0,0,2,5,1,3,0,0,4,36,5,0.03571,0,0,0.29290734193793927,0.7070926580620591
defect4j,math,org/apache/commons/math/dfp/Dfp,59,351,        if (s.equals(NEG_INFINITY_STRING)) {,0,0,0,2,5,1,3,0,0,4,36,5,0.03571,0,0,0.29290734193793927,0.7070926580620591
defect4j,math,org/apache/commons/math/dfp/Dfp,59,357,        if (s.equals(NAN_STRING)) {,0,0,0,2,5,1,3,0,0,4,27,5,0.03571,0,0,0.2871978966727159,0.7128021033272857
defect4j,math,org/apache/commons/math/dfp/Dfp,59,364,"        int p = s.indexOf(""e"");",1,0,0,1,2,1,2,0,1,6,23,5,0.03571,0,0,0.43572475810612776,0.5642752418938721
defect4j,math,org/apache/commons/math/dfp/Dfp,59,365,        if (p == -1) { // try upper case?,1,1,0,1,3,3,0,0,1,6,33,4,0.03571,0,0,0.6235832839761265,0.376416716023873
defect4j,math,org/apache/commons/math/dfp/Dfp,59,366,"            p = s.indexOf(""E"");",1,0,0,1,2,0,2,0,2,5,19,6,0.03571,0,0,0.5208134066918552,0.47918659330814445
defect4j,math,org/apache/commons/math/dfp/Dfp,59,370,        int sciexp = 0;,1,0,0,0,0,1,0,0,0,2,15,5,0.03571,0,0,0.30289969751151236,0.6971003024884882
defect4j,math,org/apache/commons/math/dfp/Dfp,59,371,        if (p != -1) {,1,1,0,1,3,1,0,0,1,6,14,4,0.03571,0,0,0.5025003766555101,0.49749962334449155
defect4j,math,org/apache/commons/math/dfp/Dfp,59,393,            fpdecimal = s;,2,0,0,0,0,0,0,0,1,2,14,6,0.03571,0,0,0.33328590086052384,0.6667140991394762
defect4j,math,org/apache/commons/math/dfp/Dfp,59,397,"        if (fpdecimal.indexOf(""-"") !=  -1) {",0,1,0,2,5,1,2,0,2,6,36,4,0.03571,0,0,0.5369514284361777,0.46304857156382184
defect4j,math,org/apache/commons/math/dfp/Dfp,59,402,        p = 0;,1,0,0,0,0,0,0,0,1,2,6,4,0.03571,0,0,0.3899746935735095,0.6100253064264907
defect4j,math,org/apache/commons/math/dfp/Dfp,59,405,        int decimalPos = 0;,1,0,0,0,0,1,0,0,0,2,19,5,0.03571,0,0,0.3025228903270506,0.6974771096729504
defect4j,math,org/apache/commons/math/dfp/Dfp,59,407,            if (fpdecimal.charAt(p) >= '1' && fpdecimal.charAt(p) <= '9') {,0,3,0,2,7,1,6,0,2,6,63,6,0.03571,0,0,0.32661061717968287,0.6733893828203176
defect4j,math,org/apache/commons/math/dfp/Dfp,59,408,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.03571,0,0,0.27472575835312046,0.7252742416468797
defect4j,math,org/apache/commons/math/dfp/Dfp,59,411,            if (decimalFound && fpdecimal.charAt(p) == '0') {,1,2,0,2,5,1,3,0,1,7,49,6,0.03571,0,0,0.436665086945958,0.5633349130540428
defect4j,math,org/apache/commons/math/dfp/Dfp,59,412,                decimalPos--;,1,0,0,0,0,0,0,0,1,2,13,8,0.03571,0,0,0.2454461168805273,0.7545538831194738
defect4j,math,org/apache/commons/math/dfp/Dfp,59,415,            if (fpdecimal.charAt(p) == '.') {,0,1,0,2,5,1,3,0,1,6,33,6,0.03571,0,0,0.32009197604900974,0.6799080239509903
defect4j,math,org/apache/commons/math/dfp/Dfp,59,416,                decimalFound = true;,1,0,0,0,0,0,0,0,2,2,20,8,0.03571,0,0,0.33230626296812094,0.6676937370318796
defect4j,math,org/apache/commons/math/dfp/Dfp,59,419,            p++;,1,0,0,0,0,0,0,0,1,2,4,6,0.03571,0,0,0.32527818134427194,0.674721818655728
defect4j,math,org/apache/commons/math/dfp/Dfp,59,421,            if (p == fpdecimal.length()) {,1,1,0,2,5,1,2,0,0,6,30,6,0.03571,0,0,0.3922007240689472,0.6077992759310543
defect4j,math,org/apache/commons/math/dfp/Dfp,59,427,        int q = offset;,2,0,0,0,0,1,0,0,0,2,15,5,0.03571,0,0,0.315755755415856,0.6842442445841435
defect4j,math,org/apache/commons/math/dfp/Dfp,59,428,        striped[0] = '0';,0,0,1,0,2,0,0,0,2,3,17,4,0.03571,0,0,0.7381967912765296,0.26180320872346996
defect4j,math,org/apache/commons/math/dfp/Dfp,59,429,        striped[1] = '0';,0,0,1,0,2,0,0,0,2,3,17,4,0.03571,0,0,0.7381967912765296,0.26180320872346996
defect4j,math,org/apache/commons/math/dfp/Dfp,59,430,        striped[2] = '0';,0,0,1,0,2,0,0,0,2,3,17,4,0.03571,0,0,0.7381967912765296,0.26180320872346996
defect4j,math,org/apache/commons/math/dfp/Dfp,59,431,        striped[3] = '0';,0,0,1,0,2,0,0,0,2,3,17,4,0.03571,0,0,0.7381967912765296,0.26180320872346996
defect4j,math,org/apache/commons/math/dfp/Dfp,59,432,        int significantDigits=0;,1,0,0,0,0,1,0,0,0,2,24,5,0.03571,0,0,0.30320730798805495,0.6967926920119457
defect4j,math,org/apache/commons/math/dfp/Dfp,59,434,            if (p == (fpdecimal.length())) {,1,1,0,3,7,1,2,0,0,6,32,6,0.03571,0,0,0.3931526746958738,0.6068473253041257
defect4j,math,org/apache/commons/math/dfp/Dfp,59,435,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.03571,0,0,0.27472575835312046,0.7252742416468797
defect4j,math,org/apache/commons/math/dfp/Dfp,59,439,            if (q == mant.length*rsize+offset+1) {,5,4,0,1,3,1,0,0,0,5,38,6,0.03571,0,0,0.34449179724565177,0.6555082027543475
defect4j,math,org/apache/commons/math/dfp/Dfp,59,440,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.03571,0,0,0.27472575835312046,0.7252742416468797
defect4j,math,org/apache/commons/math/dfp/Dfp,59,443,            if (fpdecimal.charAt(p) == '.') {,0,1,0,2,5,1,3,0,1,6,33,6,0.03571,0,0,0.32009197604900974,0.6799080239509903
defect4j,math,org/apache/commons/math/dfp/Dfp,59,444,                decimalFound = true;,1,0,0,0,0,0,0,0,2,2,20,8,0.03571,0,0,0.33230626296812094,0.6676937370318796
defect4j,math,org/apache/commons/math/dfp/Dfp,59,445,                decimalPos = significantDigits;,2,0,0,0,0,0,0,0,1,2,31,8,0.03571,0,0,0.2594154927198842,0.7405845072801174
defect4j,math,org/apache/commons/math/dfp/Dfp,59,446,                p++;,1,0,0,0,0,0,0,0,1,2,4,8,0.03571,0,0,0.2496603916064531,0.7503396083935479
defect4j,math,org/apache/commons/math/dfp/Dfp,59,447,                continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.03571,0,0,0.27308075015640393,0.7269192498435953
defect4j,math,org/apache/commons/math/dfp/Dfp,59,450,            if (fpdecimal.charAt(p) < '0' || fpdecimal.charAt(p) > '9') {,0,3,0,2,7,1,6,0,2,6,61,6,0.03571,0,0,0.3220089900642417,0.6779910099357599
defect4j,math,org/apache/commons/math/dfp/Dfp,59,455,            striped[q] = fpdecimal.charAt(p);,0,0,1,1,4,0,3,0,1,5,33,6,0.03571,0,0,0.5972264591875438,0.40277354081245703
defect4j,math,org/apache/commons/math/dfp/Dfp,59,456,            q++;,1,0,0,0,0,0,0,0,1,2,4,6,0.03571,0,0,0.32527818134427194,0.674721818655728
defect4j,math,org/apache/commons/math/dfp/Dfp,59,457,            p++;,1,0,0,0,0,0,0,0,1,2,4,6,0.03571,0,0,0.32527818134427194,0.674721818655728
defect4j,math,org/apache/commons/math/dfp/Dfp,59,458,            significantDigits++;,1,0,0,0,0,0,0,0,1,2,20,6,0.03571,0,0,0.31946750308751237,0.6805324969124863
defect4j,math,org/apache/commons/math/dfp/Dfp,59,463,        if (decimalFound && q != offset) {,3,2,0,1,3,1,0,0,0,5,34,4,0.03571,0,0,0.48178615695039123,0.5182138430496103
defect4j,math,org/apache/commons/math/dfp/Dfp,59,465,                q--;,1,0,0,0,0,0,0,0,1,2,4,8,0.03571,0,0,0.2496603916064531,0.7503396083935479
defect4j,math,org/apache/commons/math/dfp/Dfp,59,466,                if (q == offset) {,2,1,0,1,3,1,0,0,0,5,18,8,0.03571,0,0,0.3193948506571874,0.6806051493428136
defect4j,math,org/apache/commons/math/dfp/Dfp,59,469,                if (striped[q] == '0') {,0,1,1,1,5,1,0,0,1,6,24,8,0.03571,0,0,0.5592079902108337,0.4407920097891669
defect4j,math,org/apache/commons/math/dfp/Dfp,59,470,                    significantDigits--;,1,0,0,0,0,0,0,0,1,2,20,10,0.03571,0,0,0.17083764833292672,0.829162351667074
defect4j,math,org/apache/commons/math/dfp/Dfp,59,478,        if (decimalFound && significantDigits == 0) {,2,2,0,1,3,1,0,0,0,5,45,4,0.03571,0,0,0.5316432689547556,0.4683567310452461
defect4j,math,org/apache/commons/math/dfp/Dfp,59,483,        if (!decimalFound) {,1,0,0,1,3,1,0,0,1,5,20,4,0.03571,0,0,0.4806190002389739,0.5193809997610261
defect4j,math,org/apache/commons/math/dfp/Dfp,59,488,        q = offset;  // set q to point to first sig digit,2,0,0,0,0,0,0,0,1,2,49,4,0.03571,0,0,0.42638833129450227,0.573611668705499
defect4j,math,org/apache/commons/math/dfp/Dfp,59,489,        p = significantDigits-1+offset;,3,2,0,0,0,0,0,0,1,3,31,4,0.03571,0,0,0.4567413242343221,0.5432586757656768
defect4j,math,org/apache/commons/math/dfp/Dfp,59,491,        int trailingZeros = 0;,1,0,0,0,0,1,0,0,0,2,22,5,0.03571,0,0,0.302779363499894,0.6972206365001065
defect4j,math,org/apache/commons/math/dfp/Dfp,59,492,        while (p > q) {,2,1,0,1,3,1,0,0,0,5,15,4,0.03571,0,0,0.47623935047234794,0.5237606495276532
defect4j,math,org/apache/commons/math/dfp/Dfp,59,493,            if (striped[p] != '0') {,0,1,1,1,5,1,0,0,1,6,24,6,0.03571,0,0,0.6476562866535739,0.3523437133464247
defect4j,math,org/apache/commons/math/dfp/Dfp,59,494,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.03571,0,0,0.27472575835312046,0.7252742416468797
defect4j,math,org/apache/commons/math/dfp/Dfp,59,501,        int i = ((rsize * 100) - decimalPos - sciexp % rsize) % rsize;,6,4,0,2,4,1,0,0,0,5,62,5,0.03571,0,0,0.2644190879674196,0.7355809120325794
defect4j,math,org/apache/commons/math/dfp/Dfp,59,502,        q -= i;,2,0,0,0,0,0,0,0,1,2,7,4,0.03571,0,0,0.40366017140963334,0.5963398285903674
defect4j,math,org/apache/commons/math/dfp/Dfp,59,503,        decimalPos += i;,2,0,0,0,0,0,0,0,1,2,16,4,0.03571,0,0,0.39980094049704556,0.6001990595029536
defect4j,math,org/apache/commons/math/dfp/Dfp,59,506,        while ((p - q) < (mant.length * rsize)) {,5,3,0,2,7,1,0,0,0,5,41,4,0.03571,0,0,0.3421475202511908,0.6578524797488097
defect4j,math,org/apache/commons/math/dfp/Dfp,59,507,            for (i = 0; i < rsize; i++) {,4,1,0,1,3,1,0,0,2,6,29,6,0.03571,0,0,0.43218023850825027,0.5678197614917497
defect4j,math,org/apache/commons/math/dfp/Dfp,59,508,                striped[++p] = '0';,1,0,1,0,2,0,0,0,3,4,19,8,0.03571,0,0,0.8219859090972946,0.178014090902707
defect4j,math,org/apache/commons/math/dfp/Dfp,59,514,        for (i = mant.length - 1; i >= 0; i--) {,5,2,0,1,3,1,0,0,2,6,40,4,0.03571,0,0,0.41214481653314805,0.5878551834668508
defect4j,math,org/apache/commons/math/dfp/Dfp,59,515,            mant[i] = (striped[q]   - '0') * 1000 +,0,5,1,1,6,0,0,0,2,5,39,6,0.03571,0,0,0.9138525534010622,0.08614744659893821
defect4j,math,org/apache/commons/math/dfp/Dfp,59,519,            q += 4;,1,0,0,0,0,0,0,0,1,2,7,6,0.03571,0,0,0.3231461729278343,0.6768538270721667
defect4j,math,org/apache/commons/math/dfp/Dfp,59,523,        exp = (decimalPos+sciexp) / rsize;,4,2,0,1,2,0,0,0,1,5,34,4,0.03571,0,0,0.4531105641141902,0.5468894358858113
defect4j,math,org/apache/commons/math/dfp/Dfp,59,525,        if (q < striped.length) {,3,1,0,1,3,1,0,0,0,5,25,4,0.03571,0,0,0.4411204976344905,0.5588795023655098
defect4j,math,org/apache/commons/math/dfp/Dfp,59,527,            round((striped[q] - '0')*1000);,0,2,1,2,6,0,1,0,2,6,31,6,0.03571,0,0,0.7935118676683615,0.20648813233163724
defect4j,math,org/apache/commons/math/dfp/Dfp,59,530,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03571,0,0,0.3035428366406727,0.6964571633593266
defect4j,math,org/apache/commons/math/dfp/Dfp,59,594,        if (field.getRadixDigits() != d.field.getRadixDigits()) {,2,1,0,2,7,1,3,0,0,6,57,4,0.03571,0,0,0.4753262998453936,0.5246737001546078
defect4j,math,org/apache/commons/math/dfp/Dfp,59,601,        return new Dfp(d);,1,0,0,1,2,2,0,1,1,6,18,4,0.03571,0,0,0.8101127062003604,0.1898872937996391
defect4j,math,org/apache/commons/math/dfp/Dfp,59,632,        return field;,1,0,0,0,0,1,0,0,0,2,13,4,0.03571,0,0,0.3324901620159274,0.6675098379840732
defect4j,math,org/apache/commons/math/dfp/Dfp,59,639,        return field.getRadixDigits();,0,0,0,1,2,1,2,0,0,4,30,5,0.03571,0,0,0.31612562719742204,0.6838743728025765
defect4j,math,org/apache/commons/math/dfp/Dfp,59,646,        return field.getZero();,0,0,0,1,2,1,2,0,0,4,23,5,0.03571,0,0,0.3133107535390262,0.686689246460973
defect4j,math,org/apache/commons/math/dfp/Dfp,59,666,        for (int i = mant.length - 1; i > 0; i--) {,5,2,0,1,3,2,0,0,1,6,43,4,0.03571,0,0,0.342848742603542,0.6571512573964569
defect4j,math,org/apache/commons/math/dfp/Dfp,59,667,            mant[i] = mant[i-1];,1,1,1,0,4,0,0,0,1,5,20,6,0.03571,0,0,0.7015948151025179,0.298405184897483
defect4j,math,org/apache/commons/math/dfp/Dfp,59,669,        mant[0] = 0;,0,0,1,0,2,0,0,0,1,3,12,4,0.03571,0,0,0.6485421660533727,0.3514578339466276
defect4j,math,org/apache/commons/math/dfp/Dfp,59,670,        exp--;,1,0,0,0,0,0,0,0,1,2,6,4,0.03571,0,0,0.3899746935735095,0.6100253064264907
defect4j,math,org/apache/commons/math/dfp/Dfp,59,671,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03571,0,0,0.3035428366406727,0.6964571633593266
defect4j,math,org/apache/commons/math/dfp/Dfp,59,678,        for (int i = 0; i < mant.length - 1; i++) {,5,2,0,1,3,2,0,0,1,6,43,4,0.03571,0,0,0.342848742603542,0.6571512573964569
defect4j,math,org/apache/commons/math/dfp/Dfp,59,679,            mant[i] = mant[i+1];,1,1,1,0,4,0,0,0,1,5,20,6,0.03571,0,0,0.7015948151025179,0.298405184897483
defect4j,math,org/apache/commons/math/dfp/Dfp,59,681,        mant[mant.length - 1] = 0;,2,1,1,0,2,0,0,0,1,5,26,4,0.03571,0,0,0.7703159603525449,0.22968403964745432
defect4j,math,org/apache/commons/math/dfp/Dfp,59,682,        exp++;,1,0,0,0,0,0,0,0,1,2,6,4,0.03571,0,0,0.3899746935735095,0.6100253064264907
defect4j,math,org/apache/commons/math/dfp/Dfp,59,683,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03571,0,0,0.3035428366406727,0.6964571633593266
defect4j,math,org/apache/commons/math/dfp/Dfp,59,694,        int lostdigit = 0;,1,0,0,0,0,1,0,0,0,2,18,5,0.03571,0,0,0.3025400710021325,0.6974599289978658
defect4j,math,org/apache/commons/math/dfp/Dfp,59,695,        boolean inexact = false;,1,0,0,0,0,1,0,0,1,3,24,5,0.03571,0,0,0.3698280963133612,0.6301719036866376
defect4j,math,org/apache/commons/math/dfp/Dfp,59,697,        int diff = exp - e;,3,1,0,0,0,1,0,0,0,3,19,5,0.03571,0,0,0.3318772655168601,0.6681227344831389
defect4j,math,org/apache/commons/math/dfp/Dfp,59,699,        int adiff = diff;,2,0,0,0,0,1,0,0,0,2,17,5,0.03571,0,0,0.3154578769097255,0.6845421230902732
defect4j,math,org/apache/commons/math/dfp/Dfp,59,700,        if (adiff < 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.03571,0,0,0.4610523028561797,0.5389476971438212
defect4j,math,org/apache/commons/math/dfp/Dfp,59,701,            adiff = -adiff;,2,0,0,0,0,0,0,0,2,2,15,6,0.03571,0,0,0.43409496428651023,0.5659050357134909
defect4j,math,org/apache/commons/math/dfp/Dfp,59,704,        if (diff == 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.03571,0,0,0.4610523028561797,0.5389476971438212
defect4j,math,org/apache/commons/math/dfp/Dfp,59,705,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.03571,0,0,0.27308075015640393,0.7269192498435953
defect4j,math,org/apache/commons/math/dfp/Dfp,59,708,        if (adiff > (mant.length + 1)) {,3,2,0,2,5,1,0,0,0,5,32,4,0.03571,0,0,0.4904226887493643,0.5095773112506345
defect4j,math,org/apache/commons/math/dfp/Dfp,59,710,"            Arrays.fill(mant, 0);",0,0,0,0,2,0,3,0,0,2,21,7,0.03571,0,0,0.17073644014055334,0.8292635598594468
defect4j,math,org/apache/commons/math/dfp/Dfp,59,711,            exp = e;,2,0,0,0,0,0,0,0,1,2,8,6,0.03571,0,0,0.3358315634244951,0.6641684365755046
defect4j,math,org/apache/commons/math/dfp/Dfp,59,713,            field.setIEEEFlagsBits(DfpField.FLAG_INEXACT);,2,0,0,1,2,0,2,0,0,4,46,7,0.03571,0,0,0.3588429826443732,0.6411570173556274
defect4j,math,org/apache/commons/math/dfp/Dfp,59,714,"            dotrap(DfpField.FLAG_INEXACT, ALIGN_TRAP, this, this);",2,0,0,0,2,2,2,0,1,5,54,6,0.03571,0,0,0.4440652704304768,0.5559347295695238
defect4j,math,org/apache/commons/math/dfp/Dfp,59,716,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.03571,0,0,0.27308075015640393,0.7269192498435953
defect4j,math,org/apache/commons/math/dfp/Dfp,59,719,        for (int i = 0; i < adiff; i++) {,4,1,0,1,3,2,0,0,1,6,33,4,0.03571,0,0,0.42941169774124494,0.5705883022587535
defect4j,math,org/apache/commons/math/dfp/Dfp,59,720,            if (diff < 0) {,1,1,0,1,3,1,0,0,0,5,15,6,0.03571,0,0,0.390734106540994,0.6092658934590053
defect4j,math,org/apache/commons/math/dfp/Dfp,59,725,                if (lostdigit != 0) {,1,1,0,1,3,1,0,0,0,5,21,8,0.03571,0,0,0.3065601782974412,0.6934398217025586
defect4j,math,org/apache/commons/math/dfp/Dfp,59,726,                    inexact = true;,1,0,0,0,0,0,0,0,2,2,15,10,0.03571,0,0,0.2407034239348401,0.7592965760651588
defect4j,math,org/apache/commons/math/dfp/Dfp,59,729,                lostdigit = mant[0];,1,0,1,0,2,0,0,0,1,4,20,8,0.03571,0,0,0.5876489150793923,0.41235108492060624
defect4j,math,org/apache/commons/math/dfp/Dfp,59,731,                shiftRight();,0,0,0,1,2,0,1,0,1,4,13,8,0.03571,0,0,0.2721752283884255,0.7278247716115728
defect4j,math,org/apache/commons/math/dfp/Dfp,59,737,        if (inexact) {,1,0,0,1,3,1,0,0,0,4,14,4,0.03571,0,0,0.429452299904267,0.570547700095734
defect4j,math,org/apache/commons/math/dfp/Dfp,59,738,            field.setIEEEFlagsBits(DfpField.FLAG_INEXACT);,2,0,0,1,2,0,2,0,0,4,46,7,0.03571,0,0,0.3588429826443732,0.6411570173556274
defect4j,math,org/apache/commons/math/dfp/Dfp,59,739,"            dotrap(DfpField.FLAG_INEXACT, ALIGN_TRAP, this, this);",2,0,0,0,2,2,2,0,1,5,54,6,0.03571,0,0,0.4440652704304768,0.5559347295695238
defect4j,math,org/apache/commons/math/dfp/Dfp,59,742,        return lostdigit;,1,0,0,0,0,1,0,0,0,2,17,4,0.03571,0,0,0.33166259214145494,0.6683374078585451
defect4j,math,org/apache/commons/math/dfp/Dfp,59,753,        if (field.getRadixDigits() != x.field.getRadixDigits()) {,2,1,0,2,7,1,3,0,0,6,57,4,0.03571,0,0,0.4753262998453936,0.5246737001546078
defect4j,math,org/apache/commons/math/dfp/Dfp,59,762,        if (isNaN() || x.isNaN()) {,0,1,0,2,7,1,3,0,1,6,27,4,0.03571,0,0,0.3820837873852397,0.617916212614761
defect4j,math,org/apache/commons/math/dfp/Dfp,59,768,"        return compare(this, x) < 0;",0,1,0,0,2,2,2,0,1,5,28,4,0.03571,0,0,0.4089812966574636,0.591018703342536
defect4j,math,org/apache/commons/math/dfp/Dfp,59,778,        if (field.getRadixDigits() != x.field.getRadixDigits()) {,2,1,0,2,7,1,3,0,0,6,57,4,0.03571,0,0,0.4753262998453936,0.5246737001546078
defect4j,math,org/apache/commons/math/dfp/Dfp,59,787,        if (isNaN() || x.isNaN()) {,0,1,0,2,7,1,3,0,1,6,27,4,0.03571,0,0,0.3820837873852397,0.617916212614761
defect4j,math,org/apache/commons/math/dfp/Dfp,59,793,"        return compare(this, x) > 0;",0,1,0,0,2,2,2,0,1,5,28,4,0.03571,0,0,0.4089812966574636,0.591018703342536
defect4j,math,org/apache/commons/math/dfp/Dfp,59,807,        return (nans == QNAN) || (nans == SNAN);,4,3,0,1,4,1,0,0,0,5,40,4,0.03571,0,0,0.46329059988749227,0.5367094001125071
defect4j,math,org/apache/commons/math/dfp/Dfp,59,817,        if (other instanceof Dfp) {,1,0,0,1,3,2,0,1,0,5,27,5,0.03571,0,0,0.7613857633003154,0.2386142366996844
defect4j,math,org/apache/commons/math/dfp/Dfp,59,818,            final Dfp x = (Dfp) other;,2,0,0,1,2,1,0,2,1,6,26,6,0.03571,0,0,0.997724022684288,0.002275977315713245
defect4j,math,org/apache/commons/math/dfp/Dfp,59,819,            if (isNaN() || x.isNaN() || field.getRadixDigits() != x.field.getRadixDigits()) {,2,2,0,2,11,1,6,0,1,7,81,6,0.03571,0,0,0.30238275248672586,0.6976172475132753
defect4j,math,org/apache/commons/math/dfp/Dfp,59,823,"            return compare(this, x) == 0;",0,1,0,0,2,2,2,0,1,5,29,6,0.03571,0,0,0.34191795251549206,0.6580820474845077
defect4j,math,org/apache/commons/math/dfp/Dfp,59,844,        if (isNaN() || x.isNaN() || field.getRadixDigits() != x.field.getRadixDigits()) {,2,2,0,2,11,1,6,0,1,7,81,4,0.03571,0,0,0.366550174050788,0.6334498259492116
defect4j,math,org/apache/commons/math/dfp/Dfp,59,848,        return greaterThan(x) || lessThan(x);,0,1,0,1,4,1,4,0,2,6,37,4,0.03571,0,0,0.4222348405899834,0.5777651594100157
defect4j,math,org/apache/commons/math/dfp/Dfp,59,859,        if (a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 &&,10,7,0,0,5,1,0,0,0,4,71,4,0.03571,0,0,0.012484545655666241,0.9875154543443309
defect4j,math,org/apache/commons/math/dfp/Dfp,59,861,            return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.03571,0,0,0.27308075015640393,0.7269192498435953
defect4j,math,org/apache/commons/math/dfp/Dfp,59,864,        if (a.sign != b.sign) {,4,1,0,1,3,1,0,0,0,5,23,4,0.03571,0,0,0.35709792525819456,0.6429020747418042
defect4j,math,org/apache/commons/math/dfp/Dfp,59,873,        if (a.nans == INFINITE && b.nans == FINITE) {,6,3,0,1,3,1,0,0,0,5,45,4,0.03571,0,0,0.19316407636295208,0.8068359236370496
defect4j,math,org/apache/commons/math/dfp/Dfp,59,877,        if (a.nans == FINITE && b.nans == INFINITE) {,6,3,0,1,3,1,0,0,0,5,45,4,0.03571,0,0,0.19316407636295208,0.8068359236370496
defect4j,math,org/apache/commons/math/dfp/Dfp,59,881,        if (a.nans == INFINITE && b.nans == INFINITE) {,6,3,0,1,3,1,0,0,0,5,47,4,0.03571,0,0,0.19523211494761555,0.8047678850523856
defect4j,math,org/apache/commons/math/dfp/Dfp,59,886,        if (b.mant[b.mant.length-1] != 0 && a.mant[b.mant.length-1] != 0) {,10,5,0,1,7,1,0,0,0,5,67,4,0.03571,0,0,0.004119360410563488,0.9958806395894362
defect4j,math,org/apache/commons/math/dfp/Dfp,59,887,            if (a.exp < b.exp) {,4,1,0,1,3,1,0,0,0,5,20,6,0.03571,0,0,0.2934142941939348,0.7065857058060666
defect4j,math,org/apache/commons/math/dfp/Dfp,59,888,                return -a.sign;,2,0,0,0,0,1,0,0,1,3,15,8,0.03571,0,0,0.2689937868090823,0.7310062131909163
defect4j,math,org/apache/commons/math/dfp/Dfp,59,891,            if (a.exp > b.exp) {,4,1,0,1,3,1,0,0,0,5,20,6,0.03571,0,0,0.2934142941939348,0.7065857058060666
defect4j,math,org/apache/commons/math/dfp/Dfp,59,892,                return a.sign;,2,0,0,0,0,1,0,0,0,2,14,9,0.03571,0,0,0.18036141429194344,0.8196385857080561
defect4j,math,org/apache/commons/math/dfp/Dfp,59,897,        for (int i = a.mant.length - 1; i >= 0; i--) {,6,2,0,1,3,2,0,0,1,6,46,4,0.03571,0,0,0.19944207998582364,0.8005579200141764
defect4j,math,org/apache/commons/math/dfp/Dfp,59,898,            if (a.mant[i] > b.mant[i]) {,4,1,1,1,7,1,0,0,0,6,28,6,0.03571,0,0,0.5830793687369276,0.41692063126307266
defect4j,math,org/apache/commons/math/dfp/Dfp,59,899,                return a.sign;,2,0,0,0,0,1,0,0,0,2,14,9,0.03571,0,0,0.18036141429194344,0.8196385857080561
defect4j,math,org/apache/commons/math/dfp/Dfp,59,902,            if (a.mant[i] < b.mant[i]) {,4,1,1,1,7,1,0,0,0,6,28,6,0.03571,0,0,0.5830793687369276,0.41692063126307266
defect4j,math,org/apache/commons/math/dfp/Dfp,59,903,                return -a.sign;,2,0,0,0,0,1,0,0,1,3,15,8,0.03571,0,0,0.2689937868090823,0.7310062131909163
defect4j,math,org/apache/commons/math/dfp/Dfp,59,907,        return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.03571,0,0,0.27308075015640393,0.7269192498435953
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1144,        extra = RADIX-extra;,3,1,0,0,0,0,0,0,1,3,20,4,0.03571,0,0,0.4178313416834524,0.5821686583165492
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1145,        for (int i = 0; i < mant.length; i++) {,5,1,0,1,3,2,0,0,1,6,39,4,0.03571,0,0,0.30734291356837673,0.6926570864316239
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1146,            mant[i] = RADIX-mant[i]-1;,1,1,1,0,4,0,0,0,1,5,26,6,0.03571,0,0,0.7028659692869155,0.29713403071308486
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1149,        int rh = extra / RADIX;,3,1,0,0,0,1,0,0,0,3,23,5,0.03571,0,0,0.33234457372342435,0.6676554262765768
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1150,        extra = extra - rh * RADIX;,4,2,0,0,0,0,0,0,1,3,27,4,0.03571,0,0,0.370000956173599,0.6299990438264007
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1151,        for (int i = 0; i < mant.length; i++) {,5,1,0,1,3,2,0,0,1,6,39,4,0.03571,0,0,0.30734291356837673,0.6926570864316239
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1152,            final int r = mant[i] + rh;,2,1,1,0,2,2,0,0,1,6,27,6,0.03571,0,0,0.7252858416267961,0.2747141583732038
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1153,            rh = r / RADIX;,3,1,0,0,0,0,0,0,1,3,15,6,0.03571,0,0,0.35001105844303293,0.6499889415569661
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1154,            mant[i] = r - rh * RADIX;,3,2,1,0,2,0,0,0,1,5,25,6,0.03571,0,0,0.7141420541276162,0.2858579458723841
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1157,        return extra;,1,0,0,0,0,1,0,0,0,2,13,4,0.03571,0,0,0.3324901620159274,0.6675098379840732
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1167,        if (field.getRadixDigits() != x.field.getRadixDigits()) {,2,1,0,2,7,1,3,0,0,6,57,4,0.03571,0,0,0.4753262998453936,0.5246737001546078
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1175,        if (nans != FINITE || x.nans != FINITE) {,5,3,0,1,3,1,0,0,0,5,41,4,0.03571,0,0,0.3328764885097423,0.6671235114902577
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1206,        Dfp a = newInstance(this);,1,0,0,1,2,1,1,1,1,7,26,4,0.03571,0,0,0.791993590075726,0.20800640992427497
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1207,        Dfp b = newInstance(x);,1,0,0,1,2,0,2,1,1,6,23,4,0.03571,0,0,0.795154530913489,0.20484546908651036
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1210,        Dfp result = newInstance(getZero());,1,0,0,2,4,0,2,1,2,6,36,4,0.03571,0,0,0.8653812256169394,0.13461877438306155
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1213,        final byte asign = a.sign;,3,0,0,0,0,2,0,0,1,3,26,4,0.03571,0,0,0.41030992368600305,0.5896900763139986
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1214,        final byte bsign = b.sign;,3,0,0,0,0,2,0,0,1,3,26,4,0.03571,0,0,0.41030992368600305,0.5896900763139986
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1216,        a.sign = 1;,2,0,0,0,0,0,0,0,1,2,11,4,0.03571,0,0,0.40135886932884285,0.598641130671158
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1217,        b.sign = 1;,2,0,0,0,0,0,0,0,1,2,11,4,0.03571,0,0,0.40135886932884285,0.598641130671158
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1220,        byte rsign = bsign;,2,0,0,0,0,1,0,0,0,2,19,5,0.03571,0,0,0.3153701905467326,0.6846298094532657
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1221,"        if (compare(a, b) > 0) {",0,1,0,0,5,1,3,0,1,5,24,4,0.03571,0,0,0.33980732613564013,0.6601926738643584
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1222,            rsign = asign;,2,0,0,0,0,0,0,0,1,2,14,6,0.03571,0,0,0.33328590086052384,0.6667140991394762
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1228,        if (b.mant[mant.length-1] == 0) {,4,2,0,1,5,1,0,0,0,5,33,4,0.03571,0,0,0.3952471524106885,0.6047528475893129
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1229,            b.exp = a.exp;,4,0,0,0,0,0,0,0,1,2,14,6,0.03571,0,0,0.23387646701876666,0.7661235329812325
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1232,        if (a.mant[mant.length-1] == 0) {,4,2,0,1,5,1,0,0,0,5,33,4,0.03571,0,0,0.3952471524106885,0.6047528475893129
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1237,        int aextradigit = 0;,1,0,0,0,0,1,0,0,0,2,20,5,0.03571,0,0,0.3025570364949411,0.6974429635050584
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1238,        int bextradigit = 0;,1,0,0,0,0,1,0,0,0,2,20,5,0.03571,0,0,0.3025570364949411,0.6974429635050584
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1239,        if (a.exp < b.exp) {,4,1,0,1,3,1,0,0,0,5,20,4,0.03571,0,0,0.356651531750105,0.6433484682498952
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1240,            aextradigit = a.align(b.exp);,3,0,0,1,2,0,2,0,1,5,29,6,0.03571,0,0,0.397105452798911,0.6028945472010885
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1242,            bextradigit = b.align(a.exp);,3,0,0,1,2,0,2,0,1,5,29,6,0.03571,0,0,0.397105452798911,0.6028945472010885
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1246,        if (asign != bsign) {,2,1,0,1,3,1,0,0,0,5,21,4,0.03571,0,0,0.4759354790714757,0.5240645209285231
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1247,            if (asign == rsign) {,2,1,0,1,3,1,0,0,0,5,21,6,0.03571,0,0,0.40485788589890437,0.5951421141010961
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1248,                bextradigit = b.complement(bextradigit);,1,0,0,1,2,0,3,0,1,5,40,8,0.03571,0,0,0.3027820652418187,0.6972179347581811
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1250,                aextradigit = a.complement(aextradigit);,1,0,0,1,2,0,3,0,1,5,40,8,0.03571,0,0,0.3027820652418187,0.6972179347581811
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1255,        int rh = 0; /* acts as a carry */,1,0,0,0,0,1,0,0,0,2,33,5,0.03571,0,0,0.3076962112239843,0.6923037887760163
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1256,        for (int i = 0; i < mant.length; i++) {,5,1,0,1,3,2,0,0,1,6,39,4,0.03571,0,0,0.30734291356837673,0.6926570864316239
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1257,            final int r = a.mant[i]+b.mant[i]+rh;,6,1,1,0,4,2,0,0,1,6,37,6,0.03571,0,0,0.30968517735828965,0.6903148226417116
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1258,            rh = r / RADIX;,3,1,0,0,0,0,0,0,1,3,15,6,0.03571,0,0,0.35001105844303293,0.6499889415569661
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1259,            result.mant[i] = r - rh * RADIX;,5,2,1,0,2,0,0,0,1,5,32,6,0.03571,0,0,0.5074542103247189,0.4925457896752824
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1261,        result.exp = a.exp;,4,0,0,0,0,0,0,0,1,2,19,4,0.03571,0,0,0.28895631926573023,0.7110436807342699
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1262,        result.sign = rsign;,3,0,0,0,0,0,0,0,1,2,20,4,0.03571,0,0,0.3655297320224955,0.6344702679775054
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1267,        if (rh != 0 && (asign == bsign)) {,3,3,0,2,5,1,0,0,0,5,34,4,0.03571,0,0,0.5539651438565018,0.44603485614349997
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1268,            final int lostdigit = result.mant[0];,3,0,0,0,2,2,0,0,1,4,37,6,0.03571,0,0,0.38330182649946215,0.6166981735005376
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1269,            result.shiftRight();,0,0,0,1,2,0,2,0,0,3,20,7,0.03571,0,0,0.24286654065686614,0.7571334593431336
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1270,            result.mant[mant.length-1] = rh;,5,1,0,0,2,0,0,0,1,4,32,6,0.03571,0,0,0.20428036639788433,0.7957196336021154
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1271,            final int excp = result.round(lostdigit);,1,0,0,1,2,2,3,0,1,6,41,6,0.03571,0,0,0.3988630838364025,0.6011369161635988
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1272,            if (excp != 0) {,1,1,0,1,3,1,0,0,0,5,16,6,0.03571,0,0,0.3905410183571907,0.6094589816428078
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1273,"                result = dotrap(excp, ADD_TRAP, x, result);",1,0,0,0,2,0,5,0,2,4,43,8,0.03571,0,0,0.23927395004214846,0.7607260499578531
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1278,        for (int i = 0; i < mant.length; i++) {,5,1,0,1,3,2,0,0,1,6,39,4,0.03571,0,0,0.30734291356837673,0.6926570864316239
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1279,            if (result.mant[mant.length-1] != 0) {,4,2,0,1,5,1,0,0,0,5,38,6,0.03571,0,0,0.33315018971939087,0.6668498102806081
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1280,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.03571,0,0,0.27472575835312046,0.7252742416468797
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1282,            result.shiftLeft();,0,0,0,1,2,0,2,0,0,3,19,7,0.03571,0,0,0.24283678552031288,0.7571632144796879
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1283,            if (i == 0) {,1,1,0,1,3,1,0,0,0,5,13,6,0.03571,0,0,0.3912941826004775,0.6087058173995239
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1284,                result.mant[0] = aextradigit+bextradigit;,4,1,0,0,2,0,0,0,1,4,41,8,0.03571,0,0,0.24259333396852584,0.7574066660314754
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1285,                aextradigit = 0;,1,0,0,0,0,0,0,0,1,2,16,8,0.03571,0,0,0.24486075420354886,0.7551392457964504
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1286,                bextradigit = 0;,1,0,0,0,0,0,0,0,1,2,16,8,0.03571,0,0,0.24486075420354886,0.7551392457964504
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1291,        if (result.mant[mant.length-1] == 0) {,4,2,0,1,5,1,0,0,0,5,38,4,0.03571,0,0,0.4001020701842314,0.5998979298157703
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1292,            result.exp = 0;,2,0,0,0,0,0,0,0,1,2,15,6,0.03571,0,0,0.3330516466133684,0.6669483533866306
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1294,            if (asign != bsign) {,2,1,0,1,3,1,0,0,0,5,21,6,0.03571,0,0,0.40485788589890437,0.5951421141010961
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1296,                result.sign = 1;  // Per IEEE 854-1987 Section 6.3,2,0,0,0,0,0,0,0,1,2,50,8,0.03571,0,0,0.27911028539030547,0.7208897146096958
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1301,        final int excp = result.round(aextradigit + bextradigit);,3,1,0,1,2,2,2,0,1,7,57,4,0.03571,0,0,0.5308886535400293,0.4691113464599688
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1302,        if (excp != 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.03571,0,0,0.4610523028561797,0.5389476971438212
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1303,"            result = dotrap(excp, ADD_TRAP, x, result);",1,0,0,0,2,0,5,0,2,4,43,6,0.03571,0,0,0.31305839536230107,0.6869416046376997
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1306,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.03571,0,0,0.3322022236096176,0.6677977763903812
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1313,        Dfp result = newInstance(this);,1,0,0,1,2,1,1,1,1,7,31,4,0.03571,0,0,0.7939234858276036,0.2060765141723948
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1314,        result.sign = (byte) - result.sign;,4,0,0,1,2,1,0,0,2,5,35,4,0.03571,0,0,0.48757703780456235,0.512422962195437
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1315,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.03571,0,0,0.3322022236096176,0.6677977763903812
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1323,        return add(x.negate());,0,0,0,2,4,1,3,0,1,5,23,4,0.03571,0,0,0.3608680971150834,0.639131902884918
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1331,        boolean inc = false;,1,0,0,0,0,1,0,0,1,3,20,5,0.03571,0,0,0.3691106333885993,0.6308893666114024
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1332,        switch (field.getRoundingMode()) {,0,0,0,2,5,1,2,0,0,4,34,5,0.03571,0,0,0.3279745904216113,0.672025409578389
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1350,                inc = n > 5000 || (n == 5000 && (mant[0] & 1) == 1);  // round half-even,3,6,1,2,6,0,0,0,1,6,72,5,0.03571,0,0,0.9618380556963236,0.03816194430367537
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1351,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.03571,0,0,0.27472575835312046,0.7252742416468797
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1367,        if (inc) {,1,0,0,1,3,1,0,0,0,4,10,4,0.03571,0,0,0.43108247967089275,0.5689175203291081
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1369,            int rh = 1;,1,0,0,0,0,1,0,0,0,2,11,7,0.03571,0,0,0.2390820721716597,0.760917927828342
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1370,            for (int i = 0; i < mant.length; i++) {,5,1,0,1,3,2,0,0,1,6,39,6,0.03571,0,0,0.2494584673421997,0.7505415326578008
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1371,                final int r = mant[i] + rh;,2,1,1,0,2,2,0,0,1,6,27,8,0.03571,0,0,0.6456631881673186,0.35433681183268206
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1372,                rh = r / RADIX;,3,1,0,0,0,0,0,0,1,3,15,8,0.03571,0,0,0.27095252583773993,0.7290474741622607
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1373,                mant[i] = r - rh * RADIX;,3,2,1,0,2,0,0,0,1,5,25,8,0.03571,0,0,0.6329241939325297,0.3670758060674692
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1376,            if (rh != 0) {,1,1,0,1,3,1,0,0,0,5,14,6,0.03571,0,0,0.39098514800256795,0.609014851997433
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1383,        if (exp < MIN_EXP) {,2,1,0,1,3,1,0,0,0,5,20,4,0.03571,0,0,0.47583444754581034,0.5241655524541887
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1389,        if (exp > MAX_EXP) {,2,1,0,1,3,1,0,0,0,5,20,4,0.03571,0,0,0.47583444754581034,0.5241655524541887
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1395,        if (n != 0) {,1,1,0,1,3,1,0,0,0,5,13,4,0.03571,0,0,0.46183840410280963,0.5381615958971909
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1397,            field.setIEEEFlagsBits(DfpField.FLAG_INEXACT);,2,0,0,1,2,0,2,0,0,4,46,7,0.03571,0,0,0.3588429826443732,0.6411570173556274
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1398,            return DfpField.FLAG_INEXACT;,2,0,0,0,0,1,0,0,0,2,29,7,0.03571,0,0,0.2511600382617979,0.7488399617382019
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1401,        return 0;,0,0,0,0,0,1,0,0,0,1,9,2,0.03571,0,0,0.27308075015640393,0.7269192498435953
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1412,        if (field.getRadixDigits() != x.field.getRadixDigits()) {,2,1,0,2,7,1,3,0,0,6,57,4,0.03571,0,0,0.4753262998453936,0.5246737001546078
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1419,        Dfp result = newInstance(getZero());,1,0,0,2,4,0,2,1,2,6,36,4,0.03571,0,0,0.8653812256169394,0.13461877438306155
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1422,        if (nans != FINITE || x.nans != FINITE) {,5,3,0,1,3,1,0,0,0,5,41,4,0.03571,0,0,0.3328764885097423,0.6671235114902577
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1459,        int[] product = new int[mant.length*2];  // Big enough to hold even the largest result,3,1,0,0,4,3,0,0,0,4,86,5,0.03571,0,0,0.6140442671225324,0.3859557328774688
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1461,        for (int i = 0; i < mant.length; i++) {,5,1,0,1,3,2,0,0,1,6,39,4,0.03571,0,0,0.30734291356837673,0.6926570864316239
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1462,            int rh = 0;  // acts as a carry,1,0,0,0,0,1,0,0,0,2,31,7,0.03571,0,0,0.2410036680314684,0.7589963319685302
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1463,            for (int j=0; j<mant.length; j++) {,5,1,0,1,3,2,0,0,1,6,35,6,0.03571,0,0,0.24616396850691039,0.7538360314930888
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1464,                int r = mant[i] * x.mant[j];    // multiply the 2 digits,3,1,1,0,4,1,0,0,0,5,56,9,0.03571,0,0,0.5294748771307759,0.4705251228692232
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1465,                r = r + product[i+j] + rh;  // add to the product digit with carry in,5,2,1,0,2,0,0,0,1,5,69,8,0.03571,0,0,0.4860047658161372,0.5139952341838644
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1467,                rh = r / RADIX;,3,1,0,0,0,0,0,0,1,3,15,8,0.03571,0,0,0.27095252583773993,0.7290474741622607
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1468,                product[i+j] = r - rh * RADIX;,5,3,1,0,2,0,0,0,1,5,30,8,0.03571,0,0,0.47532592198351487,0.5246740780164866
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1470,            product[i+mant.length] = rh;,4,1,1,0,2,0,0,0,1,5,28,6,0.03571,0,0,0.6063385294027723,0.3936614705972264
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1474,"        int md = mant.length * 2 - 1;  // default, in case result is zero",3,2,0,0,0,3,0,0,0,3,65,5,0.03571,0,0,0.5431669138356687,0.4568330861643316
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1475,        for (int i = mant.length * 2 - 1; i >= 0; i--) {,5,3,0,1,3,2,0,0,1,6,48,4,0.03571,0,0,0.40852495296505814,0.5914750470349416
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1476,            if (product[i] != 0) {,0,1,1,1,5,1,0,0,0,5,22,6,0.03571,0,0,0.6088506511898367,0.391149348810162
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1477,                md = i;,2,0,0,0,0,0,0,0,1,2,7,8,0.03571,0,0,0.2592301786611656,0.7407698213388352
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1478,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.03571,0,0,0.27472575835312046,0.7252742416468797
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1483,        for (int i = 0; i < mant.length; i++) {,5,1,0,1,3,2,0,0,1,6,39,4,0.03571,0,0,0.30734291356837673,0.6926570864316239
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1484,            result.mant[mant.length - i - 1] = product[md - i];,7,2,1,0,4,0,0,0,1,5,51,6,0.03571,0,0,0.16998614401251702,0.8300138559874818
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1488,        result.exp = exp + x.exp + md - 2 * mant.length + 1;,8,4,0,0,0,0,0,0,1,3,52,4,0.03571,0,0,0.03757440538328706,0.9624255946167124
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1489,        result.sign = (byte)((sign == x.sign)?1:-1);,5,1,0,2,6,1,0,0,2,6,44,4,0.03571,0,0,0.3937726929980063,0.606227307001994
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1491,        if (result.mant[mant.length-1] == 0) {,4,2,0,1,5,1,0,0,0,5,38,4,0.03571,0,0,0.4001020701842314,0.5998979298157703
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1493,            result.exp = 0;,2,0,0,0,0,0,0,0,1,2,15,6,0.03571,0,0,0.3330516466133684,0.6669483533866306
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1497,        if (md > (mant.length-1)) {,3,2,0,2,5,1,0,0,0,5,27,4,0.03571,0,0,0.4871814795446164,0.5128185204553821
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1498,            excp = result.round(product[md-mant.length]);,4,1,1,1,4,0,2,0,1,7,45,6,0.03571,0,0,0.6337799652045145,0.36622003479548515
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1503,        if (excp != 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.03571,0,0,0.4610523028561797,0.5389476971438212
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1504,"            result = dotrap(excp, MULTIPLY_TRAP, x, result);",1,0,0,0,2,0,5,0,2,4,48,6,0.03571,0,0,0.3200747025771921,0.6799252974228086
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1507,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.03571,0,0,0.3322022236096176,0.6677977763903812
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1584,        int trial=0;    // trial quotient digit,1,0,0,0,0,1,0,0,0,2,39,5,0.03571,0,0,0.31305837317750124,0.6869416268224978
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1587,        int md=0;       // most sig digit in result,1,0,0,0,0,1,0,0,0,2,43,5,0.03571,0,0,0.31771488209066967,0.6822851179093306
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1591,        if (field.getRadixDigits() != divisor.field.getRadixDigits()) {,2,1,0,2,7,1,3,0,0,6,63,4,0.03571,0,0,0.49032734658073207,0.5096726534192683
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1598,        Dfp result = newInstance(getZero());,1,0,0,2,4,0,2,1,2,6,36,4,0.03571,0,0,0.8653812256169394,0.13461877438306155
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1601,        if (nans != FINITE || divisor.nans != FINITE) {,5,3,0,1,3,1,0,0,0,5,47,4,0.03571,0,0,0.34108211544075945,0.6589178845592399
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1632,        if (divisor.mant[mant.length-1] == 0) {,4,2,0,1,5,1,0,0,0,5,39,4,0.03571,0,0,0.4012507513895447,0.5987492486104559
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1641,        dividend = new int[mant.length+1];  // one extra digit needed,3,1,0,0,2,2,0,0,1,5,61,4,0.03571,0,0,0.5297948583618007,0.4702051416381978
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1642,"        quotient = new int[mant.length+2];  // two extra digits needed 1 for overflow, 1 for rounding",3,1,0,0,2,4,0,0,1,5,93,4,0.03571,0,0,0.8209746918552965,0.1790253081447041
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1643,        remainder = new int[mant.length+1]; // one extra digit needed,3,1,0,0,2,2,0,0,1,5,61,4,0.03571,0,0,0.5297948583618007,0.4702051416381978
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1647,        dividend[mant.length] = 0;,2,0,1,0,2,0,0,0,1,4,26,4,0.03571,0,0,0.7465415777931008,0.25345842220689885
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1648,        quotient[mant.length] = 0;,2,0,1,0,2,0,0,0,1,4,26,4,0.03571,0,0,0.7465415777931008,0.25345842220689885
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1649,        quotient[mant.length+1] = 0;,2,1,1,0,2,0,0,0,1,5,28,4,0.03571,0,0,0.7710180266949687,0.2289819733050325
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1650,        remainder[mant.length] = 0;,2,0,1,0,2,0,0,0,1,4,27,4,0.03571,0,0,0.7468942189533745,0.25310578104662435
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1655,        for (int i = 0; i < mant.length; i++) {,5,1,0,1,3,2,0,0,1,6,39,4,0.03571,0,0,0.30734291356837673,0.6926570864316239
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1656,            dividend[i] = mant[i];,0,0,1,0,4,0,0,0,1,3,22,6,0.03571,0,0,0.5791396968817989,0.4208603031182006
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1657,            quotient[i] = 0;,0,0,1,0,2,0,0,0,1,3,16,6,0.03571,0,0,0.5790809062320559,0.42091909376794295
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1658,            remainder[i] = 0;,0,0,1,0,2,0,0,0,1,3,17,6,0.03571,0,0,0.5789424732362026,0.4210575267637972
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1662,        nsqd = 0;,1,0,0,0,0,0,0,0,1,2,9,4,0.03571,0,0,0.3880087813103764,0.6119912186896245
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1663,        for (qd = mant.length+1; qd >= 0; qd--) {,5,2,0,1,3,1,0,0,2,6,41,4,0.03571,0,0,0.4134222230060805,0.5865777769939199
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1667,            final int divMsb = dividend[mant.length]*RADIX+dividend[mant.length-1];,6,3,1,0,4,2,0,0,1,6,71,6,0.03571,0,0,0.4694741140681285,0.5305258859318731
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1668,            int min = divMsb       / (divisor.mant[mant.length-1]+1);,6,3,0,1,4,1,0,0,0,5,57,7,0.03571,0,0,0.14187644823838777,0.8581235517616138
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1669,            int max = (divMsb + 1) / divisor.mant[mant.length-1];,6,3,0,1,4,1,0,0,0,5,53,7,0.03571,0,0,0.13764612398641055,0.8623538760135877
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1671,            trialgood = false;,1,0,0,0,0,0,0,0,2,2,18,6,0.03571,0,0,0.41895898014796695,0.5810410198520323
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1672,            while (!trialgood) {,1,0,0,1,3,1,0,0,1,5,20,6,0.03571,0,0,0.4093883527670585,0.5906116472329409
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1674,                trial = (min+max)/2;,3,2,0,1,2,0,0,0,1,5,20,8,0.03571,0,0,0.3712637061464484,0.6287362938535521
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1677,                int rh = 0;,1,0,0,0,0,1,0,0,0,2,11,9,0.03571,0,0,0.17229342204329764,0.8277065779567021
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1678,                for (int i = 0; i < mant.length + 1; i++) {,5,2,0,1,3,2,0,0,1,6,43,8,0.03571,0,0,0.21242642792934743,0.7875735720706515
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1679,                    int dm = (i<mant.length)?divisor.mant[i]:0;,6,1,1,1,4,1,0,0,0,6,43,11,0.03571,0,0,0.1196709144572643,0.8803290855427344
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1680,                    final int r = (dm * trial) + rh;,4,2,0,1,2,2,0,0,1,6,32,10,0.03571,0,0,0.2210410331081386,0.7789589668918632
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1681,                    rh = r / RADIX;,3,1,0,0,0,0,0,0,1,3,15,10,0.03571,0,0,0.19116270139141714,0.8088372986085824
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1682,                    remainder[i] = r - rh * RADIX;,3,2,1,0,2,0,0,0,1,5,30,10,0.03571,0,0,0.5256383839979806,0.47436161600201904
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1686,                rh = 1;  // carry in to aid the subtraction,1,0,0,0,0,0,0,0,1,2,43,8,0.03571,0,0,0.25804263333685473,0.7419573666631464
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1687,                for (int i = 0; i < mant.length + 1; i++) {,5,2,0,1,3,2,0,0,1,6,43,8,0.03571,0,0,0.21242642792934743,0.7875735720706515
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1688,                    final int r = ((RADIX-1) - remainder[i]) + dividend[i] + rh;,3,3,1,2,8,2,0,0,1,7,60,10,0.03571,0,0,0.6732963731508597,0.32670362684913923
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1689,                    rh = r / RADIX;,3,1,0,0,0,0,0,0,1,3,15,10,0.03571,0,0,0.19116270139141714,0.8088372986085824
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1690,                    remainder[i] = r - rh * RADIX;,3,2,1,0,2,0,0,0,1,5,30,10,0.03571,0,0,0.5256383839979806,0.47436161600201904
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1694,                if (rh == 0) {,1,1,0,1,3,1,0,0,0,5,14,8,0.03571,0,0,0.3070435185385108,0.6929564814614875
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1696,                    max = trial-1;,2,1,0,0,0,0,0,0,1,3,14,10,0.03571,0,0,0.2146564468610424,0.785343553138956
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1697,                    continue;,0,0,0,0,0,1,0,0,0,1,9,2,0.03571,0,0,0.27308075015640393,0.7269192498435953
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1701,                minadj = (remainder[mant.length] * RADIX)+remainder[mant.length-1];,6,3,1,1,6,0,0,0,1,6,67,8,0.03571,0,0,0.3887511850288993,0.6112488149710988
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1702,                minadj = minadj / (divisor.mant[mant.length-1]+1);,6,3,0,1,4,0,0,0,1,5,50,8,0.03571,0,0,0.13933523520784952,0.860664764792152
defect4j,math,org/apache/commons/math/dfp/Dfp,59,1704,                if (minadj >= 2) {,1,1,0,1,3,1,0,0,0,5,18,8,0.03571,0,0,0.3064569865717357,0.693543013428264
