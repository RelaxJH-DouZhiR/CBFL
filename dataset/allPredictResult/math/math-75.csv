project_path,version,lines,statement,suspicious,faulty,predict,miss_line
org/apache/commons/math/stat/Frequency,75,331,        return getPct(Long.valueOf(v));,1.0,0,1,0
org/apache/commons/math/stat/Frequency,75,386,            return getCumFreq(((Integer) v).longValue());,0.5,0,-1,0
org/apache/commons/math/stat/Frequency,75,444,        return getCumFreq(Long.valueOf(v));,0.5,0,-1,0
org/apache/commons/math/stat/Frequency,75,177,        addValue(Long.valueOf(v));,0.33333,0,-1,0
org/apache/commons/math/stat/Frequency,75,178,    },0.33333,0,-1,0
org/apache/commons/math/stat/Frequency,75,320,        return (double) getCount(v) / (double) sumFreq;,0.33333,0,-1,0
org/apache/commons/math/stat/Frequency,75,408,"            return getSumFreq();    // v is comparable, but greater than the last value",0.33333,0,-1,0
org/apache/commons/math/stat/Frequency,75,541,"    private static class NaturalComparator<T extends Comparable<T>> implements Comparator<Comparable<T>>, Serializable {",0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,561,            return o1.compareTo((T) o2);,0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,142,"                freqTable.put(obj, Long.valueOf(count.longValue() + 1));",0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,218,            result += iterator.next().longValue();,0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,251,                result = count.longValue();,0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,316,        final long sumFreq = getSumFreq();,0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,317,        if (sumFreq == 0) {,0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,385,        if (v instanceof Integer) {,0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,388,        Comparator<Comparable<?>> c = (Comparator<Comparable<?>>) freqTable.comparator();,0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,389,        if (c == null) {,0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,390,            c = new NaturalComparator();,0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,392,        long result = 0;,0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,395,            Long value = freqTable.get(v);,0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,396,            if (value != null) {,0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,397,                result = value.longValue();,0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,401,        },0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,403,"        if (c.compare(v, freqTable.firstKey()) < 0) {",0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,407,"        if (c.compare(v, freqTable.lastKey()) >= 0) {",0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,495,        return (double) getCumFreq(v) / (double) sumFreq;,0.25,0,-1,0
org/apache/commons/math/stat/Frequency,75,159,    },0.2,0,-1,0
org/apache/commons/math/stat/Frequency,75,215,        long result = 0;,0.2,0,-1,0
org/apache/commons/math/stat/Frequency,75,216,        Iterator<Long> iterator = freqTable.values().iterator();,0.2,0,-1,0
org/apache/commons/math/stat/Frequency,75,217,        while (iterator.hasNext())  {,0.2,0,-1,0
org/apache/commons/math/stat/Frequency,75,220,        return result;,0.2,0,-1,0
org/apache/commons/math/stat/Frequency,75,244,        if (v instanceof Integer) {,0.2,0,-1,0
org/apache/commons/math/stat/Frequency,75,247,        long result = 0;,0.2,0,-1,0
org/apache/commons/math/stat/Frequency,75,249,            Long count =  freqTable.get(v);,0.2,0,-1,0
org/apache/commons/math/stat/Frequency,75,250,            if (count != null) {,0.2,0,-1,0
org/apache/commons/math/stat/Frequency,75,255,        },0.2,0,-1,0
org/apache/commons/math/stat/Frequency,75,256,        return result;,0.2,0,-1,0
org/apache/commons/math/stat/Frequency,75,382,        if (getSumFreq() == 0) {,0.2,0,-1,0
org/apache/commons/math/stat/Frequency,75,491,        final long sumFreq = getSumFreq();,0.2,0,-1,0
org/apache/commons/math/stat/Frequency,75,492,        if (sumFreq == 0) {,0.2,0,-1,0
org/apache/commons/math/stat/Frequency,75,133,        Comparable<?> obj = v;,0.16667,0,-1,0
org/apache/commons/math/stat/Frequency,75,134,        if (v instanceof Integer) {,0.16667,0,-1,0
org/apache/commons/math/stat/Frequency,75,138,            Long count = freqTable.get(obj);,0.16667,0,-1,0
org/apache/commons/math/stat/Frequency,75,139,            if (count == null) {,0.16667,0,-1,0
org/apache/commons/math/stat/Frequency,75,140,"                freqTable.put(obj, Long.valueOf(1));",0.16667,0,-1,0
org/apache/commons/math/stat/Frequency,75,149,        },0.16667,0,-1,0
org/apache/commons/math/stat/Frequency,75,150,    },0.16667,0,-1,0
org/apache/commons/math/stat/Frequency,75,158,        addValue(Long.valueOf(v));,0.16667,0,-1,0
org/apache/commons/math/stat/Frequency,75,59,    public Frequency() {,0.14286,0,-1,0
org/apache/commons/math/stat/Frequency,75,60,"        freqTable = new TreeMap<Comparable<?>, Long>();",0.14286,0,-1,0
org/apache/commons/math/stat/Frequency,75,61,    },0.14286,0,-1,0
org/apache/commons/math/stat/Frequency,75,69,    public Frequency(Comparator<?> comparator) {,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,70,"        freqTable = new TreeMap<Comparable<?>, Long>((Comparator<? super Comparable<?>>) comparator);",0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,71,    },0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,81,        NumberFormat nf = NumberFormat.getPercentInstance();,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,82,        StringBuffer outBuffer = new StringBuffer();,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,83,"        outBuffer.append(""Value \t Freq. \t Pct. \t Cum Pct. \n"");",0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,84,        Iterator<Comparable<?>> iter = freqTable.keySet().iterator();,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,85,        while (iter.hasNext()) {,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,86,            Comparable<?> value = iter.next();,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,87,            outBuffer.append(value);,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,88,            outBuffer.append('\t');,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,89,            outBuffer.append(getCount(value));,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,90,            outBuffer.append('\t');,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,91,            outBuffer.append(nf.format(getPct(value)));,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,92,            outBuffer.append('\t');,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,93,            outBuffer.append(nf.format(getCumPct(value)));,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,94,            outBuffer.append('\n');,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,95,        },0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,96,        return outBuffer.toString();,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,113,        if (v instanceof Comparable<?>){,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,114,            addValue((Comparable<?>) v);,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,116,            throw MathRuntimeException.createIllegalArgumentException(,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,120,    },0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,135,           obj = Long.valueOf(((Integer) v).longValue());,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,144,        } catch (ClassCastException ex) {,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,146,            throw MathRuntimeException.createIllegalArgumentException(,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,168,        addValue(Long.valueOf(v.longValue()));,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,169,    },0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,186,        addValue(Character.valueOf(v));,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,187,    },0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,191,        freqTable.clear();,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,192,    },0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,204,        return freqTable.keySet().iterator();,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,233,        return getCount((Comparable<?>) v);,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,245,            return getCount(((Integer) v).longValue());,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,253,        } catch (ClassCastException ex) {,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,266,        return getCount(Long.valueOf(v));,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,276,        return getCount(Long.valueOf(v));,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,286,        return getCount(Character.valueOf(v));,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,303,        return getCumPct((Comparable<?>) v);,0.0,1,-1,0
org/apache/commons/math/stat/Frequency,75,318,            return Double.NaN;,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,342,        return getPct(Long.valueOf(v));,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,353,        return getPct(Character.valueOf(v));,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,369,        return getCumFreq((Comparable<?>) v);,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,383,            return 0;,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,399,        } catch (ClassCastException ex) {,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,400,            return result;   // v is not comparable,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,404,"            return 0;  // v is comparable, but less than first value",0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,411,        Iterator<Comparable<?>> values = valuesIterator();,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,412,        while (values.hasNext()) {,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,413,            Comparable<?> nextValue = values.next();,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,414,"            if (c.compare(v, nextValue) > 0) {",0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,415,                result += getCount(nextValue);,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,417,                return result;,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,419,        },0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,420,        return result;,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,432,        return getCumFreq(Long.valueOf(v));,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,456,        return getCumFreq(Character.valueOf(v));,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,475,        return getCumPct((Comparable<?>) v);,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,493,            return Double.NaN;,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,508,        return getCumPct(Long.valueOf(v));,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,521,        return getCumPct(Long.valueOf(v));,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,534,        return getCumPct(Character.valueOf(v));,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,568,        final int prime = 31;,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,569,        int result = 1;,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,570,        result = prime * result +,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,572,        return result;,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,578,        if (this == obj),0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,579,            return true;,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,580,        if (obj == null),0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,581,            return false;,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,582,        if (!(obj instanceof Frequency)),0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,583,            return false;,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,584,        Frequency other = (Frequency) obj;,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,585,        if (freqTable == null) {,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,586,            if (other.freqTable != null),0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,587,                return false;,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,588,        } else if (!freqTable.equals(other.freqTable)),0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,589,            return false;,0.0,0,-1,0
org/apache/commons/math/stat/Frequency,75,590,        return true;,0.0,0,-1,0
