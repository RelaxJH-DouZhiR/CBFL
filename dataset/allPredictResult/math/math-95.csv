project_path,version,lines,statement,suspicious,faulty,predict,miss_line,predictions0,predictions1
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,36,    private static UnivariateRealSolverFactory factory = null;,0.5,0,,0,0.7763659114479038,0.22363408855209685
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,128,"        return bracket( function, initial, lowerBound, upperBound,",0.5,0,,0,0.16236896208689477,0.8376310379131067
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,171,        if (function == null) {,0.5,0,,0,0.4630287136489784,0.5369712863510218
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,174,        if (maximumIterations <= 0)  {,0.5,0,,0,0.4752864849375183,0.5247135150624823
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,178,        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {,0.5,0,,0,0.9498855473918654,0.05011445260813566
org/apache/commons/math/distribution/FDistributionImpl,95,119,        return 0.0;,0.5,0,,0,0.13840473188729185,0.8615952681127068
org/apache/commons/math/distribution/FDistributionImpl,95,132,        return Double.MAX_VALUE;,0.5,0,,0,0.2354951036080958,0.7645048963919039
org/apache/commons/math/distribution/FDistributionImpl,95,145,        double d = getDenominatorDegreesOfFreedom();,0.5,0,,0,0.4788474555985715,0.5211525444014278
org/apache/commons/math/distribution/FDistributionImpl,95,147,            ret = d / (d - 2.0);,0.5,1,,1,0.6215928254459911,0.37840717455400735
org/apache/commons/math/distribution/FDistributionImpl,95,148,        return ret;,0.5,1,,1,0.21993943235778532,0.7800605676422131
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,67,        UnivariateRealFunction rootFindingFunction =,0.5,0,,0,0.4933248445681468,0.5066751554318523
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,80,        double lowerBound = getDomainLowerBound(p);,0.5,0,,0,0.441873185125979,0.5581268148740212
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,81,        double upperBound = getDomainUpperBound(p);,0.5,0,,0,0.441873185125979,0.5581268148740212
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,82,        double[] bracket = null;,0.5,0,,0,0.28545344411899065,0.7145465558810092
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,84,            bracket = UnivariateRealSolverUtils.bracket(,0.5,0,,0,0.34194810986665314,0.6580518901333462
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,68,            new UnivariateRealFunction() {,0.5,0,,0,0.6411274909263261,0.35887250907367385
org/apache/commons/math/distribution/FDistributionImpl,95,106,        return super.inverseCumulativeProbability(p);,0.33333,0,-1,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,61,        if (p < 0.0 || p > 1.0) {,0.33333,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,100,        if (p == 0) {,0.25,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,103,        if (p == 1) {,0.25,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,75,            double n = getNumeratorDegreesOfFreedom();,0.14286,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,76,            double m = getDenominatorDegreesOfFreedom();,0.14286,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,78,"            ret = Beta.regularizedBeta((n * x) / (m + n * x),",0.14286,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,72,        if (x <= 0.0) {,0.125,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,82,        return ret;,0.125,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,170,        return numeratorDegreesOfFreedom;,0.125,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,192,        return denominatorDegreesOfFreedom;,0.125,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,50,        super();,0.09091,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,51,        setNumeratorDegreesOfFreedom(numeratorDegreesOfFreedom);,0.09091,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,52,        setDenominatorDegreesOfFreedom(denominatorDegreesOfFreedom);,0.09091,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,53,    },0.09091,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,158,        if (degreesOfFreedom <= 0.0) {,0.09091,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,162,        this.numeratorDegreesOfFreedom = degreesOfFreedom;,0.09091,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,163,    },0.09091,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,180,        if (degreesOfFreedom <= 0.0) {,0.09091,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,184,        this.denominatorDegreesOfFreedom = degreesOfFreedom;,0.09091,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,185,    },0.09091,0,-1,0
org/apache/commons/math/special/Beta,95,59,"        return regularizedBeta(x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE);",0.07692,0,-1,0
org/apache/commons/math/special/Beta,95,126,        if (Double.isNaN(x) || Double.isNaN(a) || Double.isNaN(b) || (x < 0) ||,0.07692,0,-1,0
org/apache/commons/math/special/Beta,95,130,        } else if (x > (a + 1.0) / (a + b + 2.0)) {,0.07692,0,-1,0
org/apache/commons/math/special/Beta,95,133,            ContinuedFraction fraction = new ContinuedFraction() {,0.07692,0,-1,0
org/apache/commons/math/special/Beta,95,156,            ret = Math.exp((a * Math.log(x)) + (b * Math.log(1.0 - x)) -,0.07692,0,-1,0
org/apache/commons/math/special/Beta,95,161,        return ret;,0.07692,0,-1,0
org/apache/commons/math/special/Beta,95,197,        if (Double.isNaN(a) || Double.isNaN(b) || (a <= 0.0) || (b <= 0.0)) {,0.07692,0,-1,0
org/apache/commons/math/special/Beta,95,200,            ret = Gamma.logGamma(a) + Gamma.logGamma(b) -,0.07692,0,-1,0
org/apache/commons/math/special/Beta,95,204,        return ret;,0.07692,0,-1,0
org/apache/commons/math/special/Beta,95,133,            ContinuedFraction fraction = new ContinuedFraction() {,0.07692,0,-1,0
org/apache/commons/math/special/Beta,95,140,                    if (n % 2 == 0) { // even,0.07692,0,-1,0
org/apache/commons/math/special/Beta,95,141,                        m = n / 2.0;,0.07692,0,-1,0
org/apache/commons/math/special/Beta,95,142,                        ret = (m * (b - m) * x) /,0.07692,0,-1,0
org/apache/commons/math/special/Beta,95,145,                        m = (n - 1.0) / 2.0;,0.07692,0,-1,0
org/apache/commons/math/special/Beta,95,146,                        ret = -((a + m) * (a + b + m) * x) /,0.07692,0,-1,0
org/apache/commons/math/special/Beta,95,149,                    return ret;,0.07692,0,-1,0
org/apache/commons/math/special/Beta,95,153,                    return 1.0;,0.07692,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,51,        super();,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,52,    },0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,133,        double p0 = 1.0;,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,134,"        double p1 = getA(0, x);",0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,135,        double q0 = 0.0;,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,136,        double q1 = 1.0;,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,137,        double c = p1 / q1;,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,138,        int n = 0;,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,139,        double relativeError = Double.MAX_VALUE;,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,140,        while (n < maxIterations && relativeError > epsilon) {,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,141,            ++n;,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,142,"            double a = getA(n, x);",0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,143,"            double b = getB(n, x);",0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,144,            double p2 = a * p1 + b * p0;,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,145,            double q2 = a * q1 + b * q0;,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,146,            if (Double.isInfinite(p2) || Double.isInfinite(q2)) {,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,161,            double r = p2 / q2;,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,162,            relativeError = Math.abs(r / c - 1.0);,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,165,            c = p2 / q2;,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,166,            p0 = p1;,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,167,            p1 = p2;,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,168,            q0 = q1;,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,169,            q1 = q2;,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,170,        },0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,172,        if (n >= maxIterations) {,0.05882,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,178,        return c;,0.05882,0,-1,0
org/apache/commons/math/special/Gamma,95,40,    private static double[] lanczos =,0.05882,0,-1,0
org/apache/commons/math/special/Gamma,95,60,    private static final double HALF_LOG_2_PI = 0.5 * Math.log(2.0 * Math.PI);,0.05882,0,-1,0
org/apache/commons/math/special/Gamma,95,90,        if (Double.isNaN(x) || (x <= 0.0)) {,0.05882,0,-1,0
org/apache/commons/math/special/Gamma,95,93,            double g = 607.0 / 128.0;,0.05882,0,-1,0
org/apache/commons/math/special/Gamma,95,95,            double sum = 0.0;,0.05882,0,-1,0
org/apache/commons/math/special/Gamma,95,96,            for (int i = lanczos.length - 1; i > 0; --i) {,0.05882,0,-1,0
org/apache/commons/math/special/Gamma,95,97,                sum = sum + (lanczos[i] / (x + i));,0.05882,0,-1,0
org/apache/commons/math/special/Gamma,95,99,            sum = sum + lanczos[0];,0.05882,0,-1,0
org/apache/commons/math/special/Gamma,95,101,            double tmp = x + g + .5;,0.05882,0,-1,0
org/apache/commons/math/special/Gamma,95,102,            ret = ((x + .5) * Math.log(tmp)) - tmp +,0.05882,0,-1,0
org/apache/commons/math/special/Gamma,95,106,        return ret;,0.05882,0,-1,0
org/apache/commons/math/distribution/AbstractDistribution,95,38,        super();,0.04762,0,-1,0
org/apache/commons/math/distribution/AbstractDistribution,95,39,    },0.04762,0,-1,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,45,        super();,0.04762,0,-1,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,46,    },0.04762,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,87,        super();,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,61,    protected boolean resultComputed = false;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,89,        if (f == null) {,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,90,"            throw new IllegalArgumentException(""function can not be null."");",0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,93,        this.f = f;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,94,        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,95,        this.defaultRelativeAccuracy = 1E-14;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,96,        this.defaultFunctionValueAccuracy = 1E-15;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,97,        this.absoluteAccuracy = defaultAbsoluteAccuracy;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,98,        this.relativeAccuracy = defaultRelativeAccuracy;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,99,        this.functionValueAccuracy = defaultFunctionValueAccuracy;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,100,        this.defaultMaximalIterationCount = defaultMaximalIterationCount;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,101,        this.maximalIterationCount = defaultMaximalIterationCount;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,102,    },0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,111,        if (resultComputed) {,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,112,            return result;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,114,"            throw new IllegalStateException(""No result available"");",0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,126,        if (resultComputed) {,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,127,            return iterationCount;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,129,"            throw new IllegalStateException(""No result available"");",0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,140,        this.result = result;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,141,        this.iterationCount = iterationCount;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,142,        this.resultComputed = true;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,143,    },0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,149,        this.resultComputed = false;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,150,    },0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,160,        absoluteAccuracy = accuracy;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,161,    },0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,169,        return absoluteAccuracy;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,176,        absoluteAccuracy = defaultAbsoluteAccuracy;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,177,    },0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,185,        maximalIterationCount = count;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,186,    },0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,194,        return maximalIterationCount;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,201,        maximalIterationCount = defaultMaximalIterationCount;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,202,    },0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,212,        relativeAccuracy = accuracy;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,213,    },0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,220,        return relativeAccuracy;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,227,        relativeAccuracy = defaultRelativeAccuracy;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,228,    },0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,238,        functionValueAccuracy = accuracy;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,239,    },0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,246,        return functionValueAccuracy;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,253,        functionValueAccuracy = defaultFunctionValueAccuracy;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,254,    },0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,269,        double f1 = f.value(lower);,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,270,        double f2 = f.value(upper);,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,271,        return ((f1 > 0 && f2 < 0) || (f1 < 0 && f2 > 0));,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,283,        return (start < mid) && (mid < end);,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,295,        if (lower >= upper) {,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,296,            throw new IllegalArgumentException,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,300,    },0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,312,"        if (!isSequence(lower, initial, upper)) {",0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,313,            throw new IllegalArgumentException,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,317,    },0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,333,"        verifyInterval(lower, upper);",0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,334,"        if (!isBracketing(lower, upper, f)) {",0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,335,            throw new IllegalArgumentException,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverImpl,95,340,    },0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,32,        super();,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,33,    },0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,54,        setup(f);,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,55,"        return factory.newDefaultSolver(f).solve(x0, x1);",0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,78,        setup(f);,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,79,        UnivariateRealSolver solver = factory.newDefaultSolver(f);,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,80,        solver.setAbsoluteAccuracy(absoluteAccuracy);,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,81,"        return solver.solve(x0, x1);",0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,172,"            throw new IllegalArgumentException (""function is null."");",0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,175,            throw new IllegalArgumentException,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,179,            throw new IllegalArgumentException,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,183,        double a = initial;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,184,        double b = initial;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,187,        int numIterations = 0 ;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,190,"            a = Math.max(a - 1.0, lowerBound);",0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,191,"            b = Math.min(b + 1.0, upperBound);",0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,192,            fa = function.value(a);,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,194,            fb = function.value(b);,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,195,            numIterations++ ;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,196,        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && ,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,199,        if (fa * fb >= 0.0 ) {,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,200,            throw new ConvergenceException,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,207,"        return new double[]{a, b};",0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,218,        return (a + b) * .5;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,230,        if (f == null) {,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,231,"            throw new IllegalArgumentException(""function can not be null."");    ",0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,234,        if (factory == null) {,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,235,            factory = UnivariateRealSolverFactory.newInstance();,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverUtils,95,237,    },0.0,0,-1,0
org/apache/commons/math/ConvergenceException,95,34,"        super(""Convergence failed"", new Object[0]);",0.0,0,-1,0
org/apache/commons/math/ConvergenceException,95,35,    },0.0,0,-1,0
org/apache/commons/math/ConvergenceException,95,45,"        super(pattern, arguments);",0.0,0,-1,0
org/apache/commons/math/ConvergenceException,95,46,    },0.0,0,-1,0
org/apache/commons/math/ConvergenceException,95,53,        super(cause);,0.0,0,-1,0
org/apache/commons/math/ConvergenceException,95,54,    },0.0,0,-1,0
org/apache/commons/math/ConvergenceException,95,65,"        super(pattern, arguments, cause);",0.0,0,-1,0
org/apache/commons/math/ConvergenceException,95,66,    },0.0,0,-1,0
org/apache/commons/math/MathException,95,124,        super();,0.0,0,-1,0
org/apache/commons/math/MathException,95,125,        this.pattern   = null;,0.0,0,-1,0
org/apache/commons/math/MathException,95,126,        this.arguments = new Object[0];,0.0,0,-1,0
org/apache/commons/math/MathException,95,127,        this.rootCause = null;,0.0,0,-1,0
org/apache/commons/math/MathException,95,128,    },0.0,0,-1,0
org/apache/commons/math/MathException,95,138,"      super(buildMessage(pattern, arguments, Locale.US));",0.0,0,-1,0
org/apache/commons/math/MathException,95,139,      this.pattern   = pattern;,0.0,0,-1,0
org/apache/commons/math/MathException,95,140,      this.arguments = (Object[]) arguments.clone();,0.0,0,-1,0
org/apache/commons/math/MathException,95,141,      this.rootCause = null;,0.0,0,-1,0
org/apache/commons/math/MathException,95,142,    },0.0,0,-1,0
org/apache/commons/math/MathException,95,152,        super((rootCause == null ? null : rootCause.getMessage()));,0.0,0,-1,0
org/apache/commons/math/MathException,95,153,        this.pattern   = getMessage();,0.0,0,-1,0
org/apache/commons/math/MathException,95,154,        this.arguments = new Object[0];,0.0,0,-1,0
org/apache/commons/math/MathException,95,155,        this.rootCause = rootCause;,0.0,0,-1,0
org/apache/commons/math/MathException,95,156,    },0.0,0,-1,0
org/apache/commons/math/MathException,95,169,"      super(buildMessage(pattern, arguments, Locale.US));",0.0,0,-1,0
org/apache/commons/math/MathException,95,170,      this.pattern   = pattern;,0.0,0,-1,0
org/apache/commons/math/MathException,95,171,      this.arguments = (Object[]) arguments.clone();,0.0,0,-1,0
org/apache/commons/math/MathException,95,172,      this.rootCause = rootCause;,0.0,0,-1,0
org/apache/commons/math/MathException,95,173,    },0.0,0,-1,0
org/apache/commons/math/MathException,95,47,        boolean flag = false;,0.0,0,-1,0
org/apache/commons/math/MathException,95,49,"            Throwable.class.getDeclaredMethod(""getCause"", new Class[0]);",0.0,0,-1,0
org/apache/commons/math/MathException,95,50,            flag = true;,0.0,0,-1,0
org/apache/commons/math/MathException,95,53,        },0.0,0,-1,0
org/apache/commons/math/MathException,95,51,        } catch (NoSuchMethodException ex) {,0.0,0,-1,0
org/apache/commons/math/MathException,95,52,            flag = false;,0.0,0,-1,0
org/apache/commons/math/MathException,95,54,        JDK_SUPPORTS_NESTED = flag;,0.0,0,-1,0
org/apache/commons/math/MathException,95,58,    private static ResourceBundle cachedResources = null;,0.0,0,-1,0
org/apache/commons/math/MathException,95,84,            if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {,0.0,0,-1,0
org/apache/commons/math/MathException,95,86,                cachedResources =,0.0,0,-1,0
org/apache/commons/math/MathException,95,90,            if (cachedResources.getLocale().getLanguage().equals(locale.getLanguage())) {,0.0,0,-1,0
org/apache/commons/math/MathException,95,92,                return cachedResources.getString(s);,0.0,0,-1,0
org/apache/commons/math/MathException,95,97,        },0.0,0,-1,0
org/apache/commons/math/MathException,95,95,        } catch (MissingResourceException mre) {,0.0,0,-1,0
org/apache/commons/math/MathException,95,101,        return s;,0.0,0,-1,0
org/apache/commons/math/MathException,95,114,"        MessageFormat mf = new MessageFormat(translate(pattern, locale));",0.0,0,-1,0
org/apache/commons/math/MathException,95,115,        mf.setLocale(locale);,0.0,0,-1,0
org/apache/commons/math/MathException,95,116,        return mf.format(arguments);        ,0.0,0,-1,0
org/apache/commons/math/MathException,95,181,        return pattern;,0.0,0,-1,0
org/apache/commons/math/MathException,95,190,        return (Object[]) arguments.clone();,0.0,0,-1,0
org/apache/commons/math/MathException,95,201,"        return (pattern == null) ? null : buildMessage(pattern, arguments, locale);",0.0,0,-1,0
org/apache/commons/math/MathException,95,210,        return rootCause;,0.0,0,-1,0
org/apache/commons/math/MathException,95,217,        printStackTrace(System.err);,0.0,0,-1,0
org/apache/commons/math/MathException,95,218,    },0.0,0,-1,0
org/apache/commons/math/MathException,95,226,        synchronized (out) {,0.0,0,-1,0
org/apache/commons/math/MathException,95,227,"            PrintWriter pw = new PrintWriter(out, false);",0.0,0,-1,0
org/apache/commons/math/MathException,95,228,            printStackTrace(pw);,0.0,0,-1,0
org/apache/commons/math/MathException,95,230,            pw.flush();,0.0,0,-1,0
org/apache/commons/math/MathException,95,231,        },0.0,0,-1,0
org/apache/commons/math/MathException,95,232,    },0.0,0,-1,0
org/apache/commons/math/MathException,95,240,        synchronized (out) {,0.0,0,-1,0
org/apache/commons/math/MathException,95,241,            super.printStackTrace(out);,0.0,0,-1,0
org/apache/commons/math/MathException,95,242,            if (rootCause != null && JDK_SUPPORTS_NESTED == false) {,0.0,0,-1,0
org/apache/commons/math/MathException,95,243,"                out.print(""Caused by: "");",0.0,0,-1,0
org/apache/commons/math/MathException,95,244,                rootCause.printStackTrace(out);,0.0,0,-1,0
org/apache/commons/math/MathException,95,246,        },0.0,0,-1,0
org/apache/commons/math/MathException,95,247,    },0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,95,42,"        super(""Evaluation failed for argument = {0}"",",0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,95,33,    private double argument = Double.NaN;,0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,95,44,        this.argument = argument;,0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,95,45,    },0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,95,57,"        super(pattern, arguments);",0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,95,58,        this.argument = argument;,0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,95,59,    },0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,95,69,        super(cause);,0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,95,70,        this.argument = argument;,0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,95,71,    },0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,95,85,"        super(pattern, arguments, cause);",0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,95,86,        this.argument = argument;,0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,95,87,    },0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,95,95,        return this.argument;,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverFactory,95,44,    protected UnivariateRealSolverFactory() {,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverFactory,95,45,    },0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverFactory,95,52,        return new UnivariateRealSolverFactoryImpl();,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl,95,32,    public UnivariateRealSolverFactoryImpl() {,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl,95,33,    },0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl,95,45,        return newBrentSolver(f);,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl,95,55,        return new BisectionSolver(f);,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl,95,65,        return new BrentSolver(f);,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl,95,77,        return new NewtonSolver(f);,0.0,0,-1,0
org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl,95,87,        return new SecantSolver(f);,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,42,"        super(f, 100, 1E-6);",0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,43,    },0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,67,        if (((initial - min) * (max -initial)) < 0) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,68,"            throw new IllegalArgumentException(""Initial guess is not in search"" +",0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,74,        double yInitial = f.value(initial);,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,75,        if (Math.abs(yInitial) <= functionValueAccuracy) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,76,"            setResult(initial, 0);",0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,77,            return result;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,81,        double yMin = f.value(min);,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,82,        if (Math.abs(yMin) <= functionValueAccuracy) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,83,"            setResult(yMin, 0);",0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,84,            return result;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,88,        if (yInitial * yMin < 0) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,89,"            return solve(min, yMin, initial, yInitial, min, yMin);",0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,93,        double yMax = f.value(max);,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,94,        if (Math.abs(yMax) <= functionValueAccuracy) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,95,"            setResult(yMax, 0);",0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,96,            return result;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,100,        if (yInitial * yMax < 0) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,101,"            return solve(initial, yInitial, max, yMax, initial, yInitial);",0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,105,"        return solve(min, yMin, max, yMax, initial, yInitial);",0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,128,        clearResult();,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,129,"        verifyInterval(min, max);",0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,131,        double ret = Double.NaN;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,133,        double yMin = f.value(min);,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,134,        double yMax = f.value(max);,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,137,        double sign = yMin * yMax;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,138,        if (sign > 0) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,140,            if (Math.abs(yMin) <= functionValueAccuracy) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,141,"                setResult(min, 0);",0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,142,                ret = min;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,143,            } else if (Math.abs(yMax) <= functionValueAccuracy) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,144,"                setResult(max, 0);",0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,145,                ret = max;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,148,                throw new IllegalArgumentException,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,153,        } else if (sign < 0){,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,155,"            ret = solve(min, yMin, max, yMax, min, yMin);",0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,158,            if (yMin == 0.0) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,159,                ret = min;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,161,                ret = max;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,165,        return ret;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,189,        double delta = x1 - x0;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,190,        double oldDelta = delta;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,192,        int i = 0;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,193,        while (i < maximalIterationCount) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,194,            if (Math.abs(y2) < Math.abs(y1)) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,196,                x0 = x1;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,197,                x1 = x2;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,198,                x2 = x0;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,199,                y0 = y1;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,200,                y1 = y2;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,201,                y2 = y0;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,203,            if (Math.abs(y1) <= functionValueAccuracy) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,207,"                setResult(x1, i);",0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,208,                return result;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,210,            double dx = (x2 - x1);,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,211,            double tolerance =,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,213,            if (Math.abs(dx) <= tolerance) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,214,"                setResult(x1, i);",0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,215,                return result;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,217,            if ((Math.abs(oldDelta) < tolerance) ||,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,220,                delta = 0.5 * dx;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,221,                oldDelta = delta;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,223,                double r3 = y1 / y0;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,229,                if (x0 == x2) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,231,                    p = dx * r3;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,232,                    p1 = 1.0 - r3;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,235,                    double r1 = y0 / y2;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,236,                    double r2 = y1 / y2;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,237,                    p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,238,                    p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,240,                if (p > 0.0) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,241,                    p1 = -p1;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,243,                    p = -p;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,245,                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,250,                    delta = 0.5 * dx;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,251,                    oldDelta = delta;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,253,                    oldDelta = delta;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,254,                    delta = p / p1;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,258,            x0 = x1;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,259,            y0 = y1;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,261,            if (Math.abs(delta) > tolerance) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,262,                x1 = x1 + delta;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,263,            } else if (dx > 0.0) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,264,                x1 = x1 + 0.5 * tolerance;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,265,            } else if (dx <= 0.0) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,266,                x1 = x1 - 0.5 * tolerance;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,268,            y1 = f.value(x1);,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,269,            if ((y1 > 0) == (y2 > 0)) {,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,270,                x2 = x0;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,271,                y2 = y0;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,272,                delta = x1 - x0;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,273,                oldDelta = delta;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,275,            i++;,0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,276,        },0.0,0,-1,0
org/apache/commons/math/analysis/BrentSolver,95,277,        throw new MaxIterationsExceededException(maximalIterationCount);,0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,95,43,"        super(""Maximal number of iterations ({0}) exceeded"",",0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,95,45,        this.maxIterations = maxIterations;,0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,95,46,    },0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,95,57,"        super(pattern, arguments);",0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,95,58,        this.maxIterations = maxIterations;,0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,95,59,    },0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,95,65,        return maxIterations;,0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,79,"        return evaluate(x, DEFAULT_EPSILON, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,90,"        return evaluate(x, epsilon, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,101,"        return evaluate(x, DEFAULT_EPSILON, maxIterations);",0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,148,                if (a != 0.0) {,0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,149,                    p2 = p1 + (b / a * p0);,0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,150,                    q2 = q1 + (b / a * q0);,0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,151,                } else if (b != 0) {,0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,152,                    p2 = (a / b * p1) + p0;,0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,153,                    q2 = (a / b * q1) + q0;,0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,156,                    throw new ConvergenceException(,0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,95,173,"            throw new MaxIterationsExceededException(maxIterations,",0.0,0,-1,0
org/apache/commons/math/distribution/AbstractDistribution,95,60,        if (x0 > x1) {,0.0,0,-1,0
org/apache/commons/math/distribution/AbstractDistribution,95,61,            throw new IllegalArgumentException,0.0,0,-1,0
org/apache/commons/math/distribution/AbstractDistribution,95,64,        return cumulativeProbability(x1) - cumulativeProbability(x0);,0.0,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,73,            ret = 0.0;,0.0,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,101,            return 0d;,0.0,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,104,            return Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,159,            throw new IllegalArgumentException(,0.0,0,-1,0
org/apache/commons/math/distribution/FDistributionImpl,95,181,            throw new IllegalArgumentException(,0.0,0,-1,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,62,"            throw new IllegalArgumentException(""p must be between 0.0 and 1.0, inclusive."");",0.0,0,-1,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,104,        },0.0,0,-1,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,87,        }  catch (ConvergenceException ex) {,0.0,0,-1,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,96,            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {,0.0,0,-1,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,97,                return lowerBound;,0.0,0,-1,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,99,            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {,0.0,0,-1,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,100,                return upperBound;,0.0,0,-1,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,103,            throw new MathException(ex);,0.0,0,-1,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,107,"        double root = UnivariateRealSolverUtils.solve(rootFindingFunction,",0.0,0,-1,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,109,        return root;,0.0,0,-1,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,72,                    return cumulativeProbability(x) - p;,0.0,0,-1,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,73,                } catch (MathException ex) {,0.0,0,-1,0
org/apache/commons/math/distribution/AbstractContinuousDistribution,95,74,"                    throw new FunctionEvaluationException(x, ex.getPattern(), ex.getArguments(), ex);",0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,67,        super();,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,68,    },0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,91,            ret = Double.NaN;,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,120,"        return regularizedGammaP(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,158,        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,159,            ret = Double.NaN;,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,160,        } else if (x == 0.0) {,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,161,            ret = 0.0;,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,162,        } else if (a >= 1.0 && x > a) {,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,165,"            ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);",0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,168,            double n = 0.0; // current element index,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,169,            double an = 1.0 / a; // n-th element in the series,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,170,            double sum = an; // partial sum,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,171,            while (Math.abs(an) > epsilon && n < maxIterations) {,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,173,                n = n + 1.0;,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,174,                an = an * (x / (a + n));,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,177,                sum = sum + an;,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,179,            if (n >= maxIterations) {,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,180,                throw new MaxIterationsExceededException(maxIterations);,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,182,                ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,186,        return ret;,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,200,"        return regularizedGammaQ(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,233,        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,234,            ret = Double.NaN;,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,235,        } else if (x == 0.0) {,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,236,            ret = 1.0;,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,237,        } else if (x < a || a < 1.0) {,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,240,"            ret = 1.0 - regularizedGammaP(a, x, epsilon, maxIterations);",0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,243,            ContinuedFraction cf = new ContinuedFraction() {,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,256,"            ret = 1.0 / cf.evaluate(x, epsilon, maxIterations);",0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,257,            ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,260,        return ret;,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,243,            ContinuedFraction cf = new ContinuedFraction() {,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,248,                    return ((2.0 * n) + 1.0) - a + x;,0.0,0,-1,0
org/apache/commons/math/special/Gamma,95,252,                    return n * (a - n);,0.0,0,-1,0
org/apache/commons/math/special/Beta,95,42,        super();,0.0,0,-1,0
org/apache/commons/math/special/Beta,95,43,    },0.0,0,-1,0
org/apache/commons/math/special/Beta,95,79,"        return regularizedBeta(x, a, b, epsilon, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/math/special/Beta,95,95,"        return regularizedBeta(x, a, b, DEFAULT_EPSILON, maxIterations);",0.0,0,-1,0
org/apache/commons/math/special/Beta,95,129,            ret = Double.NaN;,0.0,0,-1,0
org/apache/commons/math/special/Beta,95,131,"            ret = 1.0 - regularizedBeta(1.0 - x, b, a, epsilon, maxIterations);",0.0,0,-1,0
org/apache/commons/math/special/Beta,95,172,"        return logBeta(a, b, DEFAULT_EPSILON, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/math/special/Beta,95,198,            ret = Double.NaN;,0.0,0,-1,0
