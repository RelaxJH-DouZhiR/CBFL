project_path,version,lines,statement,suspicious,faulty,predict,miss_line,predictions0,predictions1
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,180,                loop     = false;,1.0,1,,1,0.08097608281905909,0.9190239171809411
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,300,                  loop     = false;,1.0,1,,1,0.04078905029672043,0.9592109497032799
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,150,    if ((initialStepSize < minStep) || (initialStepSize > maxStep)) {,0.5,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,153,      initialStep = initialStepSize;,0.5,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,155,  },0.5,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,211,      return forward ? initialStep : -initialStep;,0.5,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,292,          filteredH = maxStep;,0.33333,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,335,                x1 = x1 + 0.5 * tolerance;,0.28571,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,107,"      System.arraycopy(currentState,      0, interpolatedState,       0, currentState.length);",0.18182,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,108,"      System.arraycopy(currentDerivative, 0, interpolatedDerivatives, 0, currentDerivative.length);",0.18182,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,109,  },0.18182,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,107,"  protected AbstractStepInterpolator(final double[] y, final boolean forward) {",0.17391,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,109,    previousTime      = Double.NaN;,0.17391,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,110,    currentTime       = Double.NaN;,0.17391,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,111,    h                 = Double.NaN;,0.17391,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,112,    interpolatedTime  = Double.NaN;,0.17391,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,114,    currentState            = y;,0.17391,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,115,    interpolatedState       = new double[y.length];,0.17391,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,116,    interpolatedDerivatives = new double[y.length];,0.17391,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,118,    finalized         = false;,0.17391,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,119,    this.forward      = forward;,0.17391,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,120,    this.dirtyState   = true;,0.17391,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,122,  },0.17391,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,72,"    super(y, forward);",0.17391,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,73,    currentDerivative = yDot;,0.17391,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,74,  },0.17391,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,128,        return false;,0.16,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,109,        return states.isEmpty();,0.16,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,123,"      interpolator = new DummyStepInterpolator(yTmp, yDotK[stages - 1], forward);",0.08333,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,217,"      interpolator = new DummyStepInterpolator(yTmp, yDotK[stages - 1], forward);",0.08333,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator,71,71,"    super(""classical Runge-Kutta"", STATIC_C, STATIC_A, STATIC_B,",0.07692,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator,71,73,  },0.07692,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator,71,49,  private static final double[] STATIC_C = {,0.07692,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator,71,54,  private static final double[][] STATIC_A = {,0.07692,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator,71,61,  private static final double[] STATIC_B = {,0.07692,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,64,    public ClassicalRungeKuttaStepInterpolator() {,0.07692,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,65,    },0.07692,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,336,            } else if (dx <= 0.0) {,0.06897,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,337,                x1 = x1 - 0.5 * tolerance;,0.06897,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,285,"                setResult(x1, i);",0.06349,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,286,                return result;,0.06349,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,314,                    p = -p;,0.06349,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,334,            } else if (dx > 0.0) {,0.06349,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,312,                    p1 = -p1;,0.0597,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,341,                x2 = x0;,0.05479,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,342,                y2 = y0;,0.05479,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,343,                delta = x1 - x0;,0.05479,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,344,                oldDelta = delta;,0.05479,0,-1,0
org/apache/commons/math/ode/events/EventState,71,334,        if (nextAction == EventHandler.RESET_STATE) {,0.05063,0,-1,0
org/apache/commons/math/ode/events/EventState,71,337,        pendingEvent      = false;,0.05063,0,-1,0
org/apache/commons/math/ode/events/EventState,71,338,        pendingEventTime  = Double.NaN;,0.05063,0,-1,0
org/apache/commons/math/ode/events/EventState,71,340,        return (nextAction == EventHandler.RESET_STATE) ||,0.05063,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,262,            return STOP;,0.04819,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,267,                x0 = x1;,0.04706,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,268,                x1 = x2;,0.04706,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,269,                x2 = x0;,0.04706,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,270,                y0 = y1;,0.04706,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,271,                y1 = y2;,0.04706,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,272,                y2 = y0;,0.04706,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,281,            double dx = x2 - x1;,0.04651,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,282,            double tolerance =,0.04651,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,284,            if (Math.abs(dx) <= tolerance) {,0.04651,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,288,            if ((Math.abs(oldDelta) < tolerance) ||,0.04651,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,294,                double r3 = y1 / y0;,0.04651,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,300,                if (x0 == x2) {,0.04651,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,302,                    p = dx * r3;,0.04651,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,303,                    p1 = 1.0 - r3;,0.04651,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,311,                if (p > 0.0) {,0.04651,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,316,                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||,0.04651,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,324,                    oldDelta = delta;,0.04651,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,325,                    delta = p / p1;,0.04651,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,329,            x0 = x1;,0.04651,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,330,            y0 = y1;,0.04651,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,332,            if (Math.abs(delta) > tolerance) {,0.04651,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,339,            y1 = f.value(x1);,0.04651,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,340,            if ((y1 > 0) == (y2 > 0)) {,0.04651,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,346,            i++;,0.04651,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,347,        },0.04651,0,-1,0
org/apache/commons/math/ode/events/EventState,71,230,                    if ((Math.abs(root - ta) <= convergence) &&,0.04598,0,-1,0
org/apache/commons/math/ode/events/EventState,71,235,                    } else if (Double.isNaN(previousEventTime) ||,0.04598,0,-1,0
org/apache/commons/math/ode/events/EventState,71,237,                        pendingEventTime = root;,0.04598,0,-1,0
org/apache/commons/math/ode/events/EventState,71,238,                        if (pendingEvent && (Math.abs(t1 - pendingEventTime) <= convergence)) {,0.04598,0,-1,0
org/apache/commons/math/ode/events/EventState,71,247,                        pendingEvent = true;,0.04598,0,-1,0
org/apache/commons/math/ode/events/EventState,71,248,                        return true;,0.04598,0,-1,0
org/apache/commons/math/ode/events/EventState,71,282,        return pendingEventTime;,0.04598,0,-1,0
org/apache/commons/math/ode/events/EventState,71,301,            previousEventTime = t;,0.04598,0,-1,0
org/apache/commons/math/ode/events/EventState,71,302,            g0Positive        = increasing;,0.04598,0,-1,0
org/apache/commons/math/ode/events/EventState,71,303,"            nextAction        = handler.eventOccurred(t, y, !(increasing ^ forward));",0.04598,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,153,                    if (first == null) {,0.04598,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,154,                        first = state;,0.04598,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,187,        return (first == null) ? Double.NaN : first.getEventTime();,0.04598,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,217,                return true;,0.04598,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,234,        return ret;,0.04598,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,141,        this.result         = newResult;,0.04598,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,142,        this.iterationCount = iterationCount;,0.04598,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,143,        this.resultComputed = true;,0.04598,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,144,    },0.04598,0,-1,0
org/apache/commons/math/ode/events/EventState,71,214,                    final UnivariateRealFunction f = new UnivariateRealFunction() {,0.04545,0,-1,0
org/apache/commons/math/ode/events/EventState,71,217,                                interpolator.setInterpolatedTime(t);,0.04545,0,-1,0
org/apache/commons/math/ode/events/EventState,71,218,"                                return handler.g(t, interpolator.getInterpolatedState());",0.04545,0,-1,0
org/apache/commons/math/ode/events/EventState,71,191,                    if (ga * gb > 0) {,0.04545,0,-1,0
org/apache/commons/math/ode/events/EventState,71,212,                    increasing = gb >= ga;,0.04545,0,-1,0
org/apache/commons/math/ode/events/EventState,71,214,                    final UnivariateRealFunction f = new UnivariateRealFunction() {,0.04545,0,-1,0
org/apache/commons/math/ode/events/EventState,71,226,                    final BrentSolver solver = new BrentSolver();,0.04545,0,-1,0
org/apache/commons/math/ode/events/EventState,71,227,                    solver.setAbsoluteAccuracy(convergence);,0.04545,0,-1,0
org/apache/commons/math/ode/events/EventState,71,228,                    solver.setMaximalIterationCount(maxIterationCount);,0.04545,0,-1,0
org/apache/commons/math/ode/events/EventState,71,229,"                    final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);",0.04545,0,-1,0
org/apache/commons/math/ode/events/EventState,71,42,public class EventState {,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,72,"        super(DEFAULT_MAXIMUM_ITERATIONS, DEFAULT_ABSOLUTE_ACCURACY);",0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,73,    },0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,199,        clearResult();,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,200,"        verifyInterval(min, max);",0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,202,        double ret = Double.NaN;,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,204,        double yMin = f.value(min);,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,205,        double yMax = f.value(max);,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,208,        double sign = yMin * yMax;,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,209,        if (sign > 0) {,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,222,        } else if (sign < 0){,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,224,"            ret = solve(f, min, yMin, max, yMax, min, yMin);",0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,260,        double delta = x1 - x0;,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,261,        double oldDelta = delta;,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,263,        int i = 0;,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,264,        while (i < maximalIterationCount) {,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,265,            if (Math.abs(y2) < Math.abs(y1)) {,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,274,            if (Math.abs(y1) <= functionValueAccuracy) {,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,41,    protected boolean resultComputed = false;,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,93,"        super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);",0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,94,        this.defaultFunctionValueAccuracy = 1.0e-15;,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,95,        this.functionValueAccuracy = defaultFunctionValueAccuracy;,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,96,    },0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,165,        this.iterationCount = 0;,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,166,        this.resultComputed = false;,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,167,    },0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,208,        if (lower >= upper) {,0.04545,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,213,    },0.04545,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,61,                                      final double defaultAbsoluteAccuracy) {,0.04545,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,62,        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;,0.04545,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,63,        this.defaultRelativeAccuracy = 1.0e-14;,0.04545,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,64,        this.absoluteAccuracy = defaultAbsoluteAccuracy;,0.04545,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,65,        this.relativeAccuracy = defaultRelativeAccuracy;,0.04545,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,66,        this.defaultMaximalIterationCount = defaultMaximalIterationCount;,0.04545,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,67,        this.maximalIterationCount = defaultMaximalIterationCount;,0.04545,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,68,        this.iterationCount = 0;,0.04545,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,69,    },0.04545,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,78,        absoluteAccuracy = accuracy;,0.04545,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,79,    },0.04545,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,93,        maximalIterationCount = count;,0.04545,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,94,    },0.04545,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,267,            return t - endTime;,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,151,        t0 = tStart;,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,152,"        g0 = handler.g(tStart, yStart);",0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,153,        g0Positive = g0 >= 0;,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,154,    },0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,172,            forward = interpolator.isForward();,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,173,            final double t1 = interpolator.getCurrentTime();,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,174,"            final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));",0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,175,            final double h  = (t1 - t0) / n;,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,177,            double ta = t0;,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,178,            double ga = g0;,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,179,            double tb = t0 + (interpolator.isForward() ? convergence : -convergence);,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,180,            for (int i = 0; i < n; ++i) {,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,183,                tb += h;,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,184,                interpolator.setInterpolatedTime(tb);,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,185,"                final double gb = handler.g(tb, interpolator.getInterpolatedState());",0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,188,                if (g0Positive ^ (gb >= 0)) {,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,253,                    ta = tb;,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,254,                    ga = gb;,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,260,            pendingEvent     = false;,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,261,            pendingEventTime = Double.NaN;,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,262,            return false;,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,296,        t0 = t;,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,297,"        g0 = handler.g(t, y);",0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,299,        if (pendingEvent) {,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,305,            g0Positive = g0 >= 0;,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,306,            nextAction = EventHandler.CONTINUE;,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,308,    },0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,315,        return nextAction == EventHandler.STOP;,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,330,        if (! pendingEvent) {,0.04396,0,-1,0
org/apache/commons/math/ode/events/EventState,71,331,            return false;,0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,127,            first = null;,0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,128,            if (states.isEmpty()) {,0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,135,            if (! initialized) {,0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,138,                final double t0 = interpolator.getPreviousTime();,0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,139,                interpolator.setInterpolatedTime(t0);,0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,140,                final double [] y = interpolator.getInterpolatedState();,0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,141,                for (EventState state : states) {,0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,142,"                    state.reinitializeBegin(t0, y);",0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,143,                },0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,145,                initialized = true;,0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,150,            for (EventState state : states) {,0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,152,                if (state.evaluateStep(interpolator)) {,0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,168,            },0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,170,            return first != null;,0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,202,            for (EventState state : states) {,0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,203,"                state.stepAccepted(t, y);",0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,204,            },0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,207,        },0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,208,    },0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,215,        for (EventState state : states) {,0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,216,            if (state.stop()) {,0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,219,        },0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,220,        return false;,0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,235,            boolean resetDerivatives = false;,0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,236,            for (EventState state : states) {,0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,237,"                if (state.reset(t, y)) {",0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,240,            },0.04396,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,241,            return resetDerivatives;,0.04396,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,251,    return forward;,0.04348,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,230,    return previousTime;,0.04301,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,235,    return currentTime;,0.04301,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,272,      if (dirtyState) {,0.04211,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,273,          final double oneMinusThetaH = currentTime - interpolatedTime;,0.04211,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,274,          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;,0.04211,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,275,"          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);",0.04211,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,276,          dirtyState = false;,0.04211,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,279,      return interpolatedState;,0.04211,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,183,    },0.04167,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,123,        for (StepHandler handler : stepHandlers) {,0.04124,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,167,        this.equations = equations;,0.04124,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,168,    },0.04124,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,179,        if (++evaluations > maxEvaluations) {,0.04124,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,182,"        equations.computeDerivatives(t, y, yDot);",0.04124,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,233,        CombinedEventsManager newManager = new CombinedEventsManager();,0.04124,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,234,        for (final EventState state : manager.getEventsStates()) {,0.04124,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,240,"        newManager.addEventHandler(new EndTimeChecker(endTime),",0.04124,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,244,        return newManager;,0.04124,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,256,        public EndTimeChecker(final double endTime) {,0.04124,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,257,            this.endTime = endTime;,0.04124,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,258,        },0.04124,0,-1,0
org/apache/commons/math/ode/events/EventState,71,95,"                      final double convergence, final int maxIterationCount) {",0.04124,0,-1,0
org/apache/commons/math/ode/events/EventState,71,96,        this.handler           = handler;,0.04124,0,-1,0
org/apache/commons/math/ode/events/EventState,71,97,        this.maxCheckInterval  = maxCheckInterval;,0.04124,0,-1,0
org/apache/commons/math/ode/events/EventState,71,98,        this.convergence       = Math.abs(convergence);,0.04124,0,-1,0
org/apache/commons/math/ode/events/EventState,71,99,        this.maxIterationCount = maxIterationCount;,0.04124,0,-1,0
org/apache/commons/math/ode/events/EventState,71,102,        t0                = Double.NaN;,0.04124,0,-1,0
org/apache/commons/math/ode/events/EventState,71,103,        g0                = Double.NaN;,0.04124,0,-1,0
org/apache/commons/math/ode/events/EventState,71,104,        g0Positive        = true;,0.04124,0,-1,0
org/apache/commons/math/ode/events/EventState,71,105,        pendingEvent      = false;,0.04124,0,-1,0
org/apache/commons/math/ode/events/EventState,71,106,        pendingEventTime  = Double.NaN;,0.04124,0,-1,0
org/apache/commons/math/ode/events/EventState,71,107,        previousEventTime = Double.NaN;,0.04124,0,-1,0
org/apache/commons/math/ode/events/EventState,71,108,        increasing        = true;,0.04124,0,-1,0
org/apache/commons/math/ode/events/EventState,71,109,        nextAction        = EventHandler.CONTINUE;,0.04124,0,-1,0
org/apache/commons/math/ode/events/EventState,71,111,    },0.04124,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,71,"        states.add(new EventState(handler, maxCheckInterval,",0.04124,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,73,    },0.04124,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,102,        return states;,0.04124,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,218,    },0.04082,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,205,        if (ode.getDimension() != y.length) {,0.04,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,212,"        if (Math.abs(t - t0) <= 1.0e-12 * Math.max(Math.abs(t0), Math.abs(t))) {",0.04,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,249,    double error1 = 0;,0.04,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,250,    double error2 = 0;,0.04,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,252,    for (int j = 0; j < y0.length; ++j) {,0.04,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,253,      final double errSum1 = E1_01 * yDotK[0][j]  + E1_06 * yDotK[5][j] +,0.04,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,257,      final double errSum2 = E2_01 * yDotK[0][j]  + E2_06 * yDotK[5][j] +,0.04,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,262,"      final double yScale = Math.max(Math.abs(y0[j]), Math.abs(y1[j]));",0.04,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,263,      final double tol = (vecAbsoluteTolerance == null) ?,0.04,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,266,      final double ratio1  = errSum1 / tol;,0.04,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,267,      error1        += ratio1 * ratio1;,0.04,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,268,      final double ratio2  = errSum2 / tol;,0.04,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,269,      error2        += ratio2 * ratio2;,0.04,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,272,    double den = error1 + 0.01 * error2;,0.04,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,273,    if (den <= 0.0) {,0.04,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,277,    return Math.abs(h) * error1 / Math.sqrt(y0.length * den);,0.04,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,211,    previousTime = currentTime;,0.0396,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,212,  },0.0396,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,219,    currentTime = t;,0.0396,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,220,    h           = currentTime - previousTime;,0.0396,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,221,    setInterpolatedTime(t);,0.0396,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,224,    finalized  = false;,0.0396,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,226,  },0.0396,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,245,      interpolatedTime = time;,0.0396,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,246,      dirtyState       = true;,0.0396,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,247,  },0.0396,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,216,"    super(METHOD_NAME, true, STATIC_C, STATIC_A, STATIC_B,",0.03846,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,219,  },0.03846,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,198,        if (ode.getDimension() != y0.length) {,0.03704,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,64,    public AbstractIntegrator(final String name) {,0.03571,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,65,        this.name = name;,0.03571,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,66,        stepHandlers = new ArrayList<StepHandler>();,0.03571,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,67,        stepStart = Double.NaN;,0.03571,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,68,        stepSize  = Double.NaN;,0.03571,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,69,        eventsHandlersManager = new CombinedEventsManager();,0.03571,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,70,        setMaxEvaluations(-1);,0.03571,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,71,        resetEvaluations();,0.03571,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,72,    },0.03571,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,143,        this.maxEvaluations = (maxEvaluations < 0) ? Integer.MAX_VALUE : maxEvaluations;,0.03571,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,144,    },0.03571,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,159,        evaluations = 0;,0.03571,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,160,    },0.03571,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,52,    public CombinedEventsManager() {,0.03571,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,53,        states      = new ArrayList<EventState>();,0.03571,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,54,        first       = null;,0.03571,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,55,        initialized = false;,0.03571,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,56,    },0.03571,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,57,    super();,0.03571,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,58,    yDotK      = null;,0.03571,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,59,    integrator = null;,0.03571,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,60,  },0.03571,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,89,  protected AbstractStepInterpolator() {,0.03571,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,90,    previousTime            = Double.NaN;,0.03571,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,91,    currentTime             = Double.NaN;,0.03571,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,92,    h                       = Double.NaN;,0.03571,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,93,    interpolatedTime        = Double.NaN;,0.03571,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,94,    currentState            = null;,0.03571,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,95,    interpolatedState       = null;,0.03571,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,96,    interpolatedDerivatives = null;,0.03571,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,97,    finalized               = false;,0.03571,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,98,    this.forward            = true;,0.03571,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,99,    this.dirtyState         = true;,0.03571,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,100,  },0.03571,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,152,              sum += a[k-1][l] * yDotK[l][j];,0.03448,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,61,  private static final double[] STATIC_C = {,0.03448,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,68,  private static final double[][] STATIC_A = {,0.03448,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,135,  private static final double[] STATIC_B = {,0.03448,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,241,    return 8;,0.03448,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,232,    super();,0.03448,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,233,    yDotKLast = null;,0.03448,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,234,    v         = null;,0.03448,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,235,    vectorsInitialized = false;,0.03448,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,236,  },0.03448,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,181,    private static final double[][] D = {,0.03448,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,335,"        System.arraycopy(yDotK[stages - 1], 0, yDotK[0], 0, y0.length);",0.03226,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,149,          for (int j = 0; j < y0.length; ++j) {,0.02778,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,150,            double sum = a[k-1][0] * yDotK[0][j];,0.02778,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,151,            for (int l = 1; l < k; ++l) {,0.02778,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,154,            yTmp[j] = y[j] + stepSize * sum;,0.02778,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,157,"          computeDerivatives(stepStart + c[k-1] * stepSize, yTmp, yDotK[k]);",0.02778,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,165,            sum    += b[l] * yDotK[l][j];,0.02778,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,293,              final double dt = manager.getEventTime() - stepStart;,0.02632,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,294,              if (Math.abs(dt) <= Math.ulp(stepStart)) {,0.02632,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,303,                  hNew = dt;,0.02632,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,305,          } else {,0.02632,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,362,    final double stopTime = stepStart;,0.02632,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,363,    resetInternalState();,0.02632,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,364,    return stopTime;,0.02632,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,331,      stepStart = nextStep;,0.025,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,333,      if (fsal) {,0.025,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,338,"      if (manager.reset(stepStart, y) && ! lastStep) {",0.025,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,344,      if (! lastStep) {,0.025,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,348,"          stepSize = filterStep(stepSize, forward, true);",0.025,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,351,"        final double factor = Math.min(maxGrowth,",0.025,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,354,        final double  scaledH    = stepSize * factor;,0.025,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,355,        final double  nextT      = stepStart + scaledH;,0.025,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,356,        final boolean nextIsLast = forward ? (nextT >= t) : (nextT <= t);,0.025,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,357,"        hNew = filterStep(scaledH, forward, nextIsLast);",0.025,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,360,    },0.025,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,101,    setEquations(equations);,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,102,    resetEvaluations();,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,103,    final boolean forward = t > t0;,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,106,    final int stages = c.length + 1;,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,107,    if (y != y0) {,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,108,"      System.arraycopy(y0, 0, y, 0, y0.length);",0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,110,    final double[][] yDotK = new double[stages][];,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,111,    for (int i = 0; i < stages; ++i) {,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,112,      yDotK [i] = new double[y0.length];,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,114,    final double[] yTmp = new double[y0.length];,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,118,    if (requiresDenseOutput() || (! eventsHandlersManager.isEmpty())) {,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,125,    interpolator.storeTime(t0);,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,128,    stepStart = t0;,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,129,    stepSize  = forward ? step : -step;,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,130,    for (StepHandler handler : stepHandlers) {,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,133,"    CombinedEventsManager manager = addEndTimeChecker(t0, t, eventsHandlersManager);",0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,134,    boolean lastStep = false;,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,137,    while (!lastStep) {,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,139,      interpolator.shift();,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,141,      for (boolean loop = true; loop;) {,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,144,"        computeDerivatives(stepStart, y, yDotK[0]);",0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,147,        for (int k = 1; k < stages; ++k) {,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,162,        for (int j = 0; j < y0.length; ++j) {,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,163,          double sum    = b[0] * yDotK[0][j];,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,164,          for (int l = 1; l < stages; ++l) {,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,167,          yTmp[j] = y[j] + stepSize * sum;,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,171,        interpolator.storeTime(stepStart + stepSize);,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,172,        if (manager.evaluateStep(interpolator)) {,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,173,            final double dt = manager.getEventTime() - stepStart;,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,174,            if (Math.abs(dt) <= Math.ulp(stepStart)) {,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,183,                stepSize = dt;,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,185,        } else {,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,186,          loop = false;,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,192,      final double nextStep = stepStart + stepSize;,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,193,"      System.arraycopy(yTmp, 0, y, 0, y0.length);",0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,194,"      manager.stepAccepted(nextStep, y);",0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,195,      lastStep = manager.stop();,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,198,      interpolator.storeTime(nextStep);,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,199,      for (StepHandler handler : stepHandlers) {,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,202,      stepStart = nextStep;,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,204,"      if (manager.reset(stepStart, y) && ! lastStep) {",0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,211,      stepSize = forward ? step : -step;,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,213,    },0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,215,    final double stopTime = stepStart;,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,216,    stepStart = Double.NaN;,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,217,    stepSize  = Double.NaN;,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,218,    return stopTime;,0.02326,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,100,"    sanityChecks(equations, t0, y0, t, y);",0.02083,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,247,              for (int i = 0; i < scale.length; ++i) {,0.02041,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,248,                scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * Math.abs(y[i]);,0.02041,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,291,      if (filteredH > maxStep) {,0.02,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,293,      } else if (filteredH < -maxStep) {,0.02,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,297,      return filteredH;,0.02,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,205,"      System.arraycopy(y0, 0, y, 0, y0.length);",0.02,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,291,          interpolator.storeTime(stepStart + stepSize);,0.02,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,292,          if (manager.evaluateStep(interpolator)) {,0.02,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,307,            loop = false;,0.02,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,321,      final double nextStep = stepStart + stepSize;,0.02,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,322,"      System.arraycopy(yTmp, 0, y, 0, y0.length);",0.02,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,323,"      manager.stepAccepted(nextStep, y);",0.02,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,324,      lastStep = manager.stop();,0.02,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,327,      interpolator.storeTime(nextStep);,0.02,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,328,      for (StepHandler handler : stepHandlers) {,0.02,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,86,    super(name);,0.01961,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,87,    this.c          = c;,0.01961,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,88,    this.a          = a;,0.01961,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,89,    this.b          = b;,0.01961,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,90,    this.prototype  = prototype;,0.01961,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,91,    this.step       = Math.abs(step);,0.01961,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,92,  },0.01961,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,209,    if (initialStep > 0) {,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,280,      double filteredH = h;,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,281,      if (Math.abs(h) < minStep) {,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,244,        if (firstTime) {,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,245,          final double[] scale = new double[y0.length];,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,246,          if (vecAbsoluteTolerance == null) {,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,255,"          hNew = initializeStep(equations, forward, getOrder(), scale,",0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,257,          firstTime = false;,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,260,        stepSize = hNew;,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,263,        for (int k = 1; k < stages; ++k) {,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,265,          for (int j = 0; j < y0.length; ++j) {,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,266,            double sum = a[k-1][0] * yDotK[0][j];,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,267,            for (int l = 1; l < k; ++l) {,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,268,              sum += a[k-1][l] * yDotK[l][j];,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,270,            yTmp[j] = y[j] + stepSize * sum;,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,273,"          computeDerivatives(stepStart + c[k-1] * stepSize, yTmp, yDotK[k]);",0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,278,        for (int j = 0; j < y0.length; ++j) {,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,279,          double sum    = b[0] * yDotK[0][j];,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,280,          for (int l = 1; l < stages; ++l) {,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,281,            sum    += b[l] * yDotK[l][j];,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,283,          yTmp[j] = y[j] + stepSize * sum;,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,287,"        error = estimateError(yDotK, y, yTmp, stepSize);",0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,288,        if (error <= 1.0) {,0.01818,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,93,    super(name);,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,95,    this.minStep     = Math.abs(minStep);,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,96,    this.maxStep     = Math.abs(maxStep);,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,97,    this.initialStep = -1.0;,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,99,    this.scalAbsoluteTolerance = scalAbsoluteTolerance;,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,100,    this.scalRelativeTolerance = scalRelativeTolerance;,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,101,    this.vecAbsoluteTolerance  = null;,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,102,    this.vecRelativeTolerance  = null;,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,104,    resetInternalState();,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,106,  },0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,187,  },0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,116,"    super(name, minStep, maxStep, scalAbsoluteTolerance, scalRelativeTolerance);",0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,118,    this.fsal      = fsal;,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,119,    this.c         = c;,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,120,    this.a         = a;,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,121,    this.b         = b;,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,122,    this.prototype = prototype;,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,124,    exp = -1.0 / getOrder();,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,127,    setSafety(0.9);,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,128,    setMinReduction(0.2);,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,129,    setMaxGrowth(10.0);,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,131,  },0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,198,    setEquations(equations);,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,199,    resetEvaluations();,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,200,    final boolean forward = t > t0;,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,203,    final int stages = c.length + 1;,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,204,    if (y != y0) {,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,207,    final double[][] yDotK = new double[stages][y0.length];,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,208,    final double[] yTmp = new double[y0.length];,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,212,    if (requiresDenseOutput() || (! eventsHandlersManager.isEmpty())) {,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,219,    interpolator.storeTime(t0);,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,222,    stepStart         = t0;,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,223,    double  hNew      = 0;,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,224,    boolean firstTime = true;,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,225,    for (StepHandler handler : stepHandlers) {,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,228,"    CombinedEventsManager manager = addEndTimeChecker(t0, t, eventsHandlersManager);",0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,229,    boolean lastStep = false;,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,232,    while (!lastStep) {,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,234,      interpolator.shift();,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,236,      double error = 0;,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,237,      for (boolean loop = true; loop;) {,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,239,        if (firstTime || !fsal) {,0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,241,"          computeDerivatives(stepStart, y, yDotK[0]);",0.01786,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,173,      if ((vecAbsoluteTolerance != null) && (vecAbsoluteTolerance.length != y0.length)) {,0.01754,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,180,      if ((vecRelativeTolerance != null) && (vecRelativeTolerance.length != y0.length)) {,0.01754,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,197,"    sanityChecks(equations, t0, y0, t, y);",0.01667,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,171,"      super.sanityChecks(equations, t0, y0, t, y);",0.01613,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,315,    stepStart = Double.NaN;,0.01587,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,316,    stepSize  = Math.sqrt(minStep * maxStep);,0.01587,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,317,  },0.01587,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,187,    this.safety = safety;,0.01587,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,188,  },0.01587,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,379,    this.minReduction = minReduction;,0.01587,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,380,  },0.01587,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,393,    this.maxGrowth = maxGrowth;,0.01587,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,394,  },0.01587,0,-1,0
org/apache/commons/math/MaxEvaluationsExceededException,71,43,"        super(""Maximal number of evaluations ({0}) exceeded"", maxEvaluations);",0.0,0,-1,0
org/apache/commons/math/MaxEvaluationsExceededException,71,44,        this.maxEvaluations = maxEvaluations;,0.0,0,-1,0
org/apache/commons/math/MaxEvaluationsExceededException,71,45,    },0.0,0,-1,0
org/apache/commons/math/MaxEvaluationsExceededException,71,56,"        super(pattern, arguments);",0.0,0,-1,0
org/apache/commons/math/MaxEvaluationsExceededException,71,57,        this.maxEvaluations = maxEvaluations;,0.0,0,-1,0
org/apache/commons/math/MaxEvaluationsExceededException,71,58,    },0.0,0,-1,0
org/apache/commons/math/MaxEvaluationsExceededException,71,64,        return maxEvaluations;,0.0,0,-1,0
org/apache/commons/math/ConvergenceException,71,34,"        super(""Convergence failed"");",0.0,0,-1,0
org/apache/commons/math/ConvergenceException,71,35,    },0.0,0,-1,0
org/apache/commons/math/ConvergenceException,71,45,"        super(pattern, arguments);",0.0,0,-1,0
org/apache/commons/math/ConvergenceException,71,46,    },0.0,0,-1,0
org/apache/commons/math/ConvergenceException,71,53,        super(cause);,0.0,0,-1,0
org/apache/commons/math/ConvergenceException,71,54,    },0.0,0,-1,0
org/apache/commons/math/ConvergenceException,71,65,"        super(cause, pattern, arguments);",0.0,0,-1,0
org/apache/commons/math/ConvergenceException,71,66,    },0.0,0,-1,0
org/apache/commons/math/MathException,71,55,    public MathException() {,0.0,0,-1,0
org/apache/commons/math/MathException,71,56,        this.pattern   = null;,0.0,0,-1,0
org/apache/commons/math/MathException,71,57,        this.arguments = new Object[0];,0.0,0,-1,0
org/apache/commons/math/MathException,71,58,    },0.0,0,-1,0
org/apache/commons/math/MathException,71,67,"    public MathException(String pattern, Object ... arguments) {",0.0,0,-1,0
org/apache/commons/math/MathException,71,68,      this.pattern   = pattern;,0.0,0,-1,0
org/apache/commons/math/MathException,71,69,      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();,0.0,0,-1,0
org/apache/commons/math/MathException,71,70,    },0.0,0,-1,0
org/apache/commons/math/MathException,71,80,        super(rootCause);,0.0,0,-1,0
org/apache/commons/math/MathException,71,81,        this.pattern   = getMessage();,0.0,0,-1,0
org/apache/commons/math/MathException,71,82,        this.arguments = new Object[0];,0.0,0,-1,0
org/apache/commons/math/MathException,71,83,    },0.0,0,-1,0
org/apache/commons/math/MathException,71,96,      super(rootCause);,0.0,0,-1,0
org/apache/commons/math/MathException,71,97,      this.pattern   = pattern;,0.0,0,-1,0
org/apache/commons/math/MathException,71,98,      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();,0.0,0,-1,0
org/apache/commons/math/MathException,71,99,    },0.0,0,-1,0
org/apache/commons/math/MathException,71,110,            ResourceBundle bundle =,0.0,0,-1,0
org/apache/commons/math/MathException,71,112,            if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {,0.0,0,-1,0
org/apache/commons/math/MathException,71,114,                return bundle.getString(s);,0.0,0,-1,0
org/apache/commons/math/MathException,71,119,        },0.0,0,-1,0
org/apache/commons/math/MathException,71,117,        } catch (MissingResourceException mre) {,0.0,0,-1,0
org/apache/commons/math/MathException,71,123,        return s;,0.0,0,-1,0
org/apache/commons/math/MathException,71,133,        return pattern;,0.0,0,-1,0
org/apache/commons/math/MathException,71,142,        return arguments.clone();,0.0,0,-1,0
org/apache/commons/math/MathException,71,153,"        return (pattern == null) ? """" : new MessageFormat(translate(pattern, locale), locale).format(arguments);",0.0,0,-1,0
org/apache/commons/math/MathException,71,159,        return getMessage(Locale.US);,0.0,0,-1,0
org/apache/commons/math/MathException,71,165,        return getMessage(Locale.getDefault());,0.0,0,-1,0
org/apache/commons/math/MathException,71,173,        printStackTrace(System.err);,0.0,0,-1,0
org/apache/commons/math/MathException,71,174,    },0.0,0,-1,0
org/apache/commons/math/MathException,71,183,        synchronized (out) {,0.0,0,-1,0
org/apache/commons/math/MathException,71,184,"            PrintWriter pw = new PrintWriter(out, false);",0.0,0,-1,0
org/apache/commons/math/MathException,71,185,            printStackTrace(pw);,0.0,0,-1,0
org/apache/commons/math/MathException,71,187,            pw.flush();,0.0,0,-1,0
org/apache/commons/math/MathException,71,188,        },0.0,0,-1,0
org/apache/commons/math/MathException,71,189,    },0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,77,        this(null);,0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,78,    },0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,82,        return name;,0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,87,        stepHandlers.add(handler);,0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,88,    },0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,92,        return Collections.unmodifiableCollection(stepHandlers);,0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,97,        stepHandlers.clear();,0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,98,    },0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,105,"        eventsHandlersManager.addEventHandler(function, maxCheckInterval,",0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,107,    },0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,111,        return eventsHandlersManager.getEventsHandlers();,0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,116,        eventsHandlersManager.clearEventsHandlers();,0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,117,    },0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,124,            if (handler.requiresDenseOutput()) {,0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,125,                return true;,0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,127,        },0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,133,        return stepStart;,0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,138,        return stepSize;,0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,148,        return maxEvaluations;,0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,153,        return evaluations;,0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,180,            throw new DerivativeException(new MaxEvaluationsExceededException(maxEvaluations));,0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,199,            throw new IntegratorException(,0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,206,            throw new IntegratorException(,0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,213,            throw new IntegratorException(,0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,235,"            newManager.addEventHandler(state.getEventHandler(),",0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,239,        },0.0,0,-1,0
org/apache/commons/math/ode/AbstractIntegrator,71,272,        },0.0,0,-1,0
org/apache/commons/math/ode/events/EventException,71,39,"        super(specifier, parts);",0.0,0,-1,0
org/apache/commons/math/ode/events/EventException,71,40,    },0.0,0,-1,0
org/apache/commons/math/ode/events/EventException,71,47,        super(cause);,0.0,0,-1,0
org/apache/commons/math/ode/events/EventException,71,48,    },0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,219,                            } catch (DerivativeException e) {,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,220,"                                throw new FunctionEvaluationException(e, t);",0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,221,                            } catch (EventException e) {,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,222,"                                throw new FunctionEvaluationException(e, t);",0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,117,        return handler;,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,124,        return maxCheckInterval;,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,131,        return convergence;,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,138,        return maxIterationCount;,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,199,                        final double epsilon = (forward ? 0.25 : -0.25) * convergence;,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,200,                        for (int k = 0; (k < 4) && (ga * gb > 0); ++k) {,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,201,                            ta += epsilon;,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,202,                            interpolator.setInterpolatedTime(ta);,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,203,"                            ga = handler.g(ta, interpolator.getInterpolatedState());",0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,205,                        if (ga * gb > 0) {,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,207,                            throw MathRuntimeException.createInternalError(null);,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,233,                        ta = tb;,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,234,                        ga = gb;,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,243,                            return false;,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,251,                } else {,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,264,        } catch (FunctionEvaluationException e) {,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,265,            final Throwable cause = e.getCause();,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,266,            if ((cause != null) && (cause instanceof DerivativeException)) {,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,267,                throw (DerivativeException) cause;,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,268,            } else if ((cause != null) && (cause instanceof EventException)) {,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,269,                throw (EventException) cause;,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,271,            throw new EventException(e);,0.0,0,-1,0
org/apache/commons/math/ode/events/EventState,71,335,"            handler.resetState(t, y);",0.0,0,-1,0
org/apache/commons/math/ode/DerivativeException,71,41,"    super(specifier, parts);",0.0,0,-1,0
org/apache/commons/math/ode/DerivativeException,71,42,  },0.0,0,-1,0
org/apache/commons/math/ode/DerivativeException,71,48,    super(cause);,0.0,0,-1,0
org/apache/commons/math/ode/DerivativeException,71,49,  },0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,48,"        super(FAILED_EVALUATION_MESSAGE, argument);",0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,49,        this.argument = new double[] { argument };,0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,50,    },0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,60,"        super(FAILED_EVALUATION_MESSAGE, new ArrayRealVector(argument));",0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,61,        this.argument = argument.clone();,0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,62,    },0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,74,"        super(pattern, arguments);",0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,75,        this.argument = new double[] { argument };,0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,76,    },0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,88,"        super(pattern, arguments);",0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,89,        this.argument = argument.clone();,0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,90,    },0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,100,        super(cause);,0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,101,        this.argument = new double[] { argument };,0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,102,    },0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,112,        super(cause);,0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,113,        this.argument = argument.clone();,0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,114,    },0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,128,"        super(cause, pattern, arguments);",0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,129,        this.argument = new double[] { argument };,0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,130,    },0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,144,"        super(cause, pattern, arguments);",0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,145,        this.argument = argument.clone();,0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,146,    },0.0,0,-1,0
org/apache/commons/math/FunctionEvaluationException,71,154,        return argument.clone();,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,82,        final List<EventHandler> list = new ArrayList<EventHandler>();,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,83,        for (EventState state : states) {,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,84,            list.add(state.getEventHandler());,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,85,        },0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,86,        return Collections.unmodifiableCollection(list);,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,94,        states.clear();,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,95,    },0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,132,                return false;,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,156,                        if (interpolator.isForward()) {,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,157,                            if (state.getEventTime() < first.getEventTime()) {,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,158,                                first = state;,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,161,                            if (state.getEventTime() > first.getEventTime()) {,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,162,                                first = state;,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,172,        } catch (EventException se) {,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,173,            throw new IntegratorException(se);,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,174,        } catch (ConvergenceException ce) {,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,175,            throw new IntegratorException(ce);,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,205,        } catch (EventException se) {,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,206,            throw new IntegratorException(se);,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,238,                    resetDerivatives = true;,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,242,        } catch (EventException se) {,0.0,0,-1,0
org/apache/commons/math/ode/events/CombinedEventsManager,71,243,            throw new IntegratorException(se);,0.0,0,-1,0
org/apache/commons/math/ode/IntegratorException,71,40,"    super(specifier, parts);",0.0,0,-1,0
org/apache/commons/math/ode/IntegratorException,71,41,  },0.0,0,-1,0
org/apache/commons/math/ode/IntegratorException,71,48,    super(cause);,0.0,0,-1,0
org/apache/commons/math/ode/IntegratorException,71,49,  },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,119,      final RungeKuttaStepInterpolator rki = (RungeKuttaStepInterpolator) prototype.copy();,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,120,"      rki.reinitialize(this, yTmp, yDotK, forward);",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,121,      interpolator = rki;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,122,    } else {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,131,        handler.reset();,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,132,    },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,200,"          handler.handleStep(interpolator, lastStep);",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,201,      },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator,71,207,"        computeDerivatives(stepStart, y, yDotK[0]);",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,123,    super(name);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,125,    this.minStep     = minStep;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,126,    this.maxStep     = maxStep;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,127,    this.initialStep = -1.0;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,129,    this.scalAbsoluteTolerance = 0;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,130,    this.scalRelativeTolerance = 0;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,131,    this.vecAbsoluteTolerance  = vecAbsoluteTolerance.clone();,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,132,    this.vecRelativeTolerance  = vecRelativeTolerance.clone();,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,134,    resetInternalState();,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,136,  },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,151,      initialStep = -1.0;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,174,          throw new IntegratorException(,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,181,          throw new IntegratorException(,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,217,    double yOnScale2 = 0;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,218,    double yDotOnScale2 = 0;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,219,    for (int j = 0; j < y0.length; ++j) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,220,      ratio         = y0[j] / scale[j];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,221,      yOnScale2    += ratio * ratio;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,222,      ratio         = yDot0[j] / scale[j];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,223,      yDotOnScale2 += ratio * ratio;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,226,    double h = ((yOnScale2 < 1.0e-10) || (yDotOnScale2 < 1.0e-10)) ?,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,228,    if (! forward) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,229,      h = -h;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,233,    for (int j = 0; j < y0.length; ++j) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,234,      y1[j] = y0[j] + h * yDot0[j];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,236,"    computeDerivatives(t0 + h, y1, yDot1);",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,239,    double yDDotOnScale = 0;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,240,    for (int j = 0; j < y0.length; ++j) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,241,      ratio         = (yDot1[j] - yDot0[j]) / scale[j];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,242,      yDDotOnScale += ratio * ratio;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,244,    yDDotOnScale = Math.sqrt(yDDotOnScale) / h;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,248,"    final double maxInv2 = Math.max(Math.sqrt(yDotOnScale2), yDDotOnScale);",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,249,    final double h1 = (maxInv2 < 1.0e-15) ?,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,252,"    h = Math.min(100.0 * Math.abs(h), h1);",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,253,"    h = Math.max(h, 1.0e-12 * Math.abs(t0));  // avoids cancellation when computing t1 - t0",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,254,    if (h < getMinStep()) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,255,      h = getMinStep();,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,257,    if (h > getMaxStep()) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,258,      h = getMaxStep();,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,260,    if (! forward) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,261,      h = -h;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,264,    return h;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,282,          if (acceptSmall) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,283,              filteredH = forward ? minStep : -minStep;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,285,              throw new IntegratorException(,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,294,          filteredH = -maxStep;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,310,    return stepStart;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,323,    return minStep;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,71,330,    return maxStep;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,81,    super(interpolator);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,83,    if (interpolator.currentState != null) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,84,      final int dimension = currentState.length;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,86,      yDotK = new double[interpolator.yDotK.length][];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,87,      for (int k = 0; k < interpolator.yDotK.length; ++k) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,88,        yDotK[k] = new double[dimension];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,89,"        System.arraycopy(interpolator.yDotK[k], 0,",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,93,    } else {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,94,      yDotK = null;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,99,    integrator = null;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,101,  },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,126,"    reinitialize(y, forward);",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,127,    this.yDotK = yDotArray;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,128,    this.integrator = rkIntegrator;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,129,  },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,137,    writeBaseExternal(out);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,140,    final int n = (currentState == null) ? -1 : currentState.length;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,141,    final int kMax = (yDotK == null) ? -1 : yDotK.length;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,142,    out.writeInt(kMax);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,143,    for (int k = 0; k < kMax; ++k) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,144,      for (int i = 0; i < n; ++i) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,145,        out.writeDouble(yDotK[k][i]);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,151,  },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,159,    final double t = readBaseExternal(in);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,162,    final int n = (currentState == null) ? -1 : currentState.length;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,163,    final int kMax = in.readInt();,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,164,    yDotK = (kMax < 0) ? null : new double[kMax][];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,165,    for (int k = 0; k < kMax; ++k) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,166,      yDotK[k] = (n < 0) ? null : new double[n];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,167,      for (int i = 0; i < n; ++i) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,168,        yDotK[k][i] = in.readDouble();,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,172,    integrator = null;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,174,    if (currentState != null) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,176,        setInterpolatedTime(t);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,178,        interpolatedTime = t;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator,71,181,  },0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,141,  protected AbstractStepInterpolator(final AbstractStepInterpolator interpolator) {,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,143,    previousTime      = interpolator.previousTime;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,144,    currentTime       = interpolator.currentTime;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,145,    h                 = interpolator.h;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,146,    interpolatedTime  = interpolator.interpolatedTime;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,148,    if (interpolator.currentState != null) {,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,149,      currentState            = interpolator.currentState.clone();,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,150,      interpolatedState       = interpolator.interpolatedState.clone();,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,151,      interpolatedDerivatives = interpolator.interpolatedDerivatives.clone();,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,153,      currentState            = null;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,154,      interpolatedState       = null;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,155,      interpolatedDerivatives = null;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,158,    finalized  = interpolator.finalized;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,159,    forward    = interpolator.forward;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,160,    dirtyState = interpolator.dirtyState;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,162,  },0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,171,    previousTime      = Double.NaN;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,172,    currentTime       = Double.NaN;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,173,    h                 = Double.NaN;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,174,    interpolatedTime  = Double.NaN;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,176,    currentState            = y;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,177,    interpolatedState       = new double[y.length];,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,178,    interpolatedDerivatives = new double[y.length];,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,180,    finalized         = false;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,181,    this.forward      = isForward;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,182,    this.dirtyState   = true;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,184,  },0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,190,     finalizeStep();,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,193,     return doCopy();,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,240,    return interpolatedTime;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,287,      if (dirtyState) {,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,288,          final double oneMinusThetaH = currentTime - interpolatedTime;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,289,          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,290,"          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);",0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,291,          dirtyState = false;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,294,      return interpolatedDerivatives;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,341,    if (! finalized) {,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,342,      doFinalize();,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,343,      finalized = true;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,345,  },0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,355,  },0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,374,    if (currentState == null) {,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,375,        out.writeInt(-1);,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,377,        out.writeInt(currentState.length);,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,379,    out.writeDouble(previousTime);,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,380,    out.writeDouble(currentTime);,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,381,    out.writeDouble(h);,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,382,    out.writeBoolean(forward);,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,384,    if (currentState != null) {,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,385,        for (int i = 0; i < currentState.length; ++i) {,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,386,            out.writeDouble(currentState[i]);,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,390,    out.writeDouble(interpolatedTime);,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,397,      finalizeStep();,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,400,    },0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,398,    } catch (DerivativeException e) {,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,399,      throw MathRuntimeException.createIOException(e);,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,402,  },0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,416,    final int dimension = in.readInt();,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,417,    previousTime  = in.readDouble();,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,418,    currentTime   = in.readDouble();,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,419,    h             = in.readDouble();,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,420,    forward       = in.readBoolean();,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,421,    dirtyState    = true;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,423,    if (dimension < 0) {,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,424,        currentState = null;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,426,        currentState  = new double[dimension];,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,427,        for (int i = 0; i < currentState.length; ++i) {,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,428,            currentState[i] = in.readDouble();,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,433,    interpolatedTime        = Double.NaN;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,434,    interpolatedState       = (dimension < 0) ? null : new double[dimension];,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,435,    interpolatedDerivatives = (dimension < 0) ? null : new double[dimension];,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,437,    finalized = true;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/AbstractStepInterpolator,71,439,    return in.readDouble();,0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,60,    super();,0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,61,    currentDerivative = null;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,62,  },0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,82,    super(interpolator);,0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,83,    currentDerivative = interpolator.currentDerivative.clone();,0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,84,  },0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,91,    return new DummyStepInterpolator(this);,0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,120,    writeBaseExternal(out);,0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,122,    if (currentDerivative != null) {,0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,123,        for (int i = 0; i < currentDerivative.length; ++i) {,0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,124,            out.writeDouble(currentDerivative[i]);,0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,128,  },0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,139,    final double t = readBaseExternal(in);,0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,141,    if (currentState == null) {,0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,142,        currentDerivative = null;,0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,144,        currentDerivative  = new double[currentState.length];,0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,145,        for (int i = 0; i < currentDerivative.length; ++i) {,0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,146,            currentDerivative[i] = in.readDouble();,0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,151,    setInterpolatedTime(t);,0.0,0,-1,0
org/apache/commons/math/ode/sampling/DummyStepInterpolator,71,153,  },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,73,        super(interpolator);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,74,    },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,79,        return new ClassicalRungeKuttaStepInterpolator(this);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,88,        final double fourTheta      = 4 * theta;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,89,        final double oneMinusTheta  = 1 - theta;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,90,        final double oneMinus2Theta = 1 - 2 * theta;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,91,        final double s             = oneMinusThetaH / 6.0;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,92,        final double coeff1        = s * ((-fourTheta + 5) * theta - 1);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,93,        final double coeff23       = s * (( fourTheta - 2) * theta - 2);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,94,        final double coeff4        = s * ((-fourTheta - 1) * theta - 1);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,95,        final double coeffDot1     = oneMinusTheta * oneMinus2Theta;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,96,        final double coeffDot23    = 2 * theta * oneMinusTheta;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,97,        final double coeffDot4     = -theta * oneMinus2Theta;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,98,        for (int i = 0; i < interpolatedState.length; ++i) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,99,            final double yDot1  = yDotK[0][i];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,100,            final double yDot23 = yDotK[1][i] + yDotK[2][i];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,101,            final double yDot4  = yDotK[3][i];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,102,            interpolatedState[i] =,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,104,            interpolatedDerivatives[i] =,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator,71,108,    },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,154,"    super(name, minStep, maxStep, vecAbsoluteTolerance, vecRelativeTolerance);",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,156,    this.fsal      = fsal;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,157,    this.c         = c;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,158,    this.a         = a;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,159,    this.b         = b;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,160,    this.prototype = prototype;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,162,    exp = -1.0 / getOrder();,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,165,    setSafety(0.9);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,166,    setMinReduction(0.2);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,167,    setMaxGrowth(10.0);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,169,  },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,180,    return safety;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,213,      final RungeKuttaStepInterpolator rki = (RungeKuttaStepInterpolator) prototype.copy();,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,214,"      rki.reinitialize(this, yTmp, yDotK, forward);",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,215,      interpolator = rki;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,216,    } else {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,226,        handler.reset();,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,227,    },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,251,              for (int i = 0; i < scale.length; ++i) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,252,                scale[i] = vecAbsoluteTolerance[i] + vecRelativeTolerance[i] * Math.abs(y[i]);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,312,          final double factor =,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,315,"          hNew = filterStep(stepSize * factor, forward, false);",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,316,        },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,329,"          handler.handleStep(interpolator, lastStep);",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,330,      },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,341,"        computeDerivatives(stepStart, y, yDotK[0]);",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,372,    return minReduction;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator,71,386,    return maxGrowth;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,233,"    super(METHOD_NAME, true, STATIC_C, STATIC_A, STATIC_B,",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,236,  },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator,71,274,      den = 1.0;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,245,    super(interpolator);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,247,    if (interpolator.currentState == null) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,249,      yDotKLast = null;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,250,      v         = null;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,251,      vectorsInitialized = false;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,255,      final int dimension = interpolator.currentState.length;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,257,      yDotKLast    = new double[3][];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,258,      for (int k = 0; k < yDotKLast.length; ++k) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,259,        yDotKLast[k] = new double[dimension];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,260,"        System.arraycopy(interpolator.yDotKLast[k], 0, yDotKLast[k], 0,",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,264,      v = new double[7][];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,265,      for (int k = 0; k < v.length; ++k) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,266,        v[k] = new double[dimension];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,267,"        System.arraycopy(interpolator.v[k], 0, v[k], 0, dimension);",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,270,      vectorsInitialized = interpolator.vectorsInitialized;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,274,  },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,279,    return new DormandPrince853StepInterpolator(this);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,287,"    super.reinitialize(integrator, y, yDotK, forward);",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,289,    final int dimension = currentState.length;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,291,    yDotKLast = new double[3][];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,292,    for (int k = 0; k < yDotKLast.length; ++k) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,293,      yDotKLast[k] = new double[dimension];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,296,    v = new double[7][];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,297,    for (int k = 0; k < v.length; ++k) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,298,      v[k]  = new double[dimension];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,301,    vectorsInitialized = false;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,303,  },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,308,    super.storeTime(t);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,309,    vectorsInitialized = false;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,310,  },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,318,    if (! vectorsInitialized) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,320,      if (v == null) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,321,        v = new double[7][];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,322,        for (int k = 0; k < 7; ++k) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,323,          v[k] = new double[interpolatedState.length];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,328,      finalizeStep();,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,331,      for (int i = 0; i < interpolatedState.length; ++i) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,332,          final double yDot1  = yDotK[0][i];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,333,          final double yDot6  = yDotK[5][i];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,334,          final double yDot7  = yDotK[6][i];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,335,          final double yDot8  = yDotK[7][i];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,336,          final double yDot9  = yDotK[8][i];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,337,          final double yDot10 = yDotK[9][i];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,338,          final double yDot11 = yDotK[10][i];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,339,          final double yDot12 = yDotK[11][i];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,340,          final double yDot13 = yDotK[12][i];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,341,          final double yDot14 = yDotKLast[0][i];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,342,          final double yDot15 = yDotKLast[1][i];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,343,          final double yDot16 = yDotKLast[2][i];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,344,          v[0][i] = B_01 * yDot1  + B_06 * yDot6 + B_07 * yDot7 +,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,347,          v[1][i] = yDot1 - v[0][i];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,348,          v[2][i] = v[0][i] - v[1][i] - yDotK[12][i];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,349,          for (int k = 0; k < D.length; ++k) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,350,              v[k+3][i] = D[k][0] * yDot1  + D[k][1]  * yDot6  + D[k][2]  * yDot7  +,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,357,      vectorsInitialized = true;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,361,    final double eta      = 1 - theta;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,362,    final double twoTheta = 2 * theta;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,363,    final double theta2   = theta * theta;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,364,    final double dot1 = 1 - twoTheta;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,365,    final double dot2 = theta * (2 - 3 * theta);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,366,    final double dot3 = twoTheta * (1 + theta * (twoTheta -3));,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,367,    final double dot4 = theta2 * (3 + theta * (5 * theta - 8));,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,368,    final double dot5 = theta2 * (3 + theta * (-12 + theta * (15 - 6 * theta)));,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,369,    final double dot6 = theta2 * theta * (4 + theta * (-15 + theta * (18 - 7 * theta)));,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,371,    for (int i = 0; i < interpolatedState.length; ++i) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,372,      interpolatedState[i] = currentState[i] -,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,380,      interpolatedDerivatives[i] =  v[0][i] + dot1 * v[1][i] + dot2 * v[2][i] +,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,385,  },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,392,    if (currentState == null) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,394,      return;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,398,    final double[] yTmp = new double[currentState.length];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,401,    for (int j = 0; j < currentState.length; ++j) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,402,      s = K14_01 * yDotK[0][j]  + K14_06 * yDotK[5][j]  + K14_07 * yDotK[6][j] +,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,405,      yTmp[j] = currentState[j] + h * s;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,407,"    integrator.computeDerivatives(previousTime + C14 * h, yTmp, yDotKLast[0]);",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,410,    for (int j = 0; j < currentState.length; ++j) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,411,     s = K15_01 * yDotK[0][j]  + K15_06 * yDotK[5][j]  + K15_07 * yDotK[6][j] +,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,415,     yTmp[j] = currentState[j] + h * s;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,417,"    integrator.computeDerivatives(previousTime + C15 * h, yTmp, yDotKLast[1]);",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,420,    for (int j = 0; j < currentState.length; ++j) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,421,      s = K16_01 * yDotK[0][j]  + K16_06 * yDotK[5][j]  + K16_07 * yDotK[6][j] +,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,425,      yTmp[j] = currentState[j] + h * s;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,427,"    integrator.computeDerivatives(previousTime + C16 * h, yTmp, yDotKLast[2]);",0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,429,  },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,438,      finalizeStep();,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,441,    },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,439,    } catch (DerivativeException e) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,440,      throw MathRuntimeException.createIOException(e);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,442,    final int dimension = (currentState == null) ? -1 : currentState.length;,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,443,    out.writeInt(dimension);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,444,    for (int i = 0; i < dimension; ++i) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,445,      out.writeDouble(yDotKLast[0][i]);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,446,      out.writeDouble(yDotKLast[1][i]);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,447,      out.writeDouble(yDotKLast[2][i]);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,451,    super.writeExternal(out);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,453,  },0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,461,    yDotKLast = new double[3][];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,462,    final int dimension = in.readInt();,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,463,    yDotKLast[0] = (dimension < 0) ? null : new double[dimension];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,464,    yDotKLast[1] = (dimension < 0) ? null : new double[dimension];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,465,    yDotKLast[2] = (dimension < 0) ? null : new double[dimension];,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,467,    for (int i = 0; i < dimension; ++i) {,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,468,      yDotKLast[0][i] = in.readDouble();,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,469,      yDotKLast[1][i] = in.readDouble();,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,470,      yDotKLast[2][i] = in.readDouble();,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,474,    super.readExternal(in);,0.0,0,-1,0
org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,71,476,  },0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,71,43,"        super(""Maximal number of iterations ({0}) exceeded"", maxIterations);",0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,71,44,        this.maxIterations = maxIterations;,0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,71,45,    },0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,71,56,"        super(pattern, arguments);",0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,71,57,        this.maxIterations = maxIterations;,0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,71,58,    },0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,71,64,        return maxIterations;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,65,"        super(f, DEFAULT_MAXIMUM_ITERATIONS, DEFAULT_ABSOLUTE_ACCURACY);",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,66,    },0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,82,"        super(DEFAULT_MAXIMUM_ITERATIONS, absoluteAccuracy);",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,83,    },0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,93,"        super(maximumIterations, absoluteAccuracy);",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,94,    },0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,100,"        return solve(f, min, max);",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,107,"        return solve(f, min, max, initial);",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,134,        clearResult();,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,135,        if ((initial < min) || (initial > max)) {,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,136,            throw MathRuntimeException.createIllegalArgumentException(,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,142,        double yInitial = f.value(initial);,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,143,        if (Math.abs(yInitial) <= functionValueAccuracy) {,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,144,"            setResult(initial, 0);",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,145,            return result;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,149,        double yMin = f.value(min);,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,150,        if (Math.abs(yMin) <= functionValueAccuracy) {,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,151,"            setResult(min, 0);",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,152,            return result;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,156,        if (yInitial * yMin < 0) {,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,157,"            return solve(f, min, yMin, initial, yInitial, min, yMin);",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,161,        double yMax = f.value(max);,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,162,        if (Math.abs(yMax) <= functionValueAccuracy) {,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,163,"            setResult(max, 0);",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,164,            return result;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,168,        if (yInitial * yMax < 0) {,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,169,"            return solve(f, initial, yInitial, max, yMax, initial, yInitial);",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,172,        throw MathRuntimeException.createIllegalArgumentException(,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,211,            if (Math.abs(yMin) <= functionValueAccuracy) {,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,212,"                setResult(min, 0);",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,213,                ret = min;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,214,            } else if (Math.abs(yMax) <= functionValueAccuracy) {,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,215,"                setResult(max, 0);",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,216,                ret = max;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,219,                throw MathRuntimeException.createIllegalArgumentException(,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,227,            if (yMin == 0.0) {,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,228,                ret = min;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,230,                ret = max;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,278,"                setResult(x1, i);",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,279,                return result;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,291,                delta = 0.5 * dx;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,292,                oldDelta = delta;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,306,                    double r1 = y0 / y2;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,307,                    double r2 = y1 / y2;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,308,                    p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,309,                    p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,321,                    delta = 0.5 * dx;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,322,                    oldDelta = delta;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,333,                x1 = x1 + delta;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/BrentSolver,71,348,        throw new MaxIterationsExceededException(maximalIterationCount);,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,74,"        super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,75,        if (f == null) {,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,76,"            throw MathRuntimeException.createIllegalArgumentException(""function to solve cannot be null"");",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,78,        this.f = f;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,79,        this.defaultFunctionValueAccuracy = 1.0e-15;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,80,        this.functionValueAccuracy = defaultFunctionValueAccuracy;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,81,    },0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,102,        if (!resultComputed) {,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,103,"            throw MathRuntimeException.createIllegalStateException(""no result available"");",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,105,    },0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,109,        checkResultComputed();,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,110,        return result;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,115,        checkResultComputed();,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,116,        return functionValue;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,121,        functionValueAccuracy = accuracy;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,122,    },0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,126,        return functionValueAccuracy;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,131,        functionValueAccuracy = defaultFunctionValueAccuracy;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,132,    },0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,155,        this.result         = x;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,156,        this.functionValue  = fx;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,157,        this.iterationCount = iterationCount;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,158,        this.resultComputed = true;,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,159,    },0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,182,        final double f1 = function.value(lower);,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,183,        final double f2 = function.value(upper);,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,184,        return (f1 > 0 && f2 < 0) || (f1 < 0 && f2 > 0);,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,196,        return (start < mid) && (mid < end);,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,209,            throw MathRuntimeException.createIllegalArgumentException(,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,225,"        if (!isSequence(lower, initial, upper)) {",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,226,            throw MathRuntimeException.createIllegalArgumentException(,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,230,    },0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,247,"        verifyInterval(lower, upper);",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,248,"        if (!isBracketing(lower, upper, function)) {",0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,249,            throw MathRuntimeException.createIllegalArgumentException(,0.0,0,-1,0
org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl,71,254,    },0.0,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,73,        return iterationCount;,0.0,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,83,        return absoluteAccuracy;,0.0,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,88,        absoluteAccuracy = defaultAbsoluteAccuracy;,0.0,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,89,    },0.0,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,98,        return maximalIterationCount;,0.0,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,103,        maximalIterationCount = defaultMaximalIterationCount;,0.0,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,104,    },0.0,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,108,        relativeAccuracy = accuracy;,0.0,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,109,    },0.0,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,113,        return relativeAccuracy;,0.0,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,118,        relativeAccuracy = defaultRelativeAccuracy;,0.0,0,-1,0
org/apache/commons/math/ConvergingAlgorithmImpl,71,119,    },0.0,0,-1,0
