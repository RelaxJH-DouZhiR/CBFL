project_path,version,lines,statement,suspicious,faulty,predict,miss_line,predictions0,predictions1
org/apache/commons/math/special/Gamma,104,200,"        return regularizedGammaQ(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);",0.16667,0,,0,0.3569088562592236,0.6430911437407747
org/apache/commons/math/special/Gamma,104,243,            ContinuedFraction cf = new ContinuedFraction() {,0.04,0,-1,0
org/apache/commons/math/special/Gamma,104,248,                    return ((2.0 * n) + 1.0) - a + x;,0.04,0,-1,0
org/apache/commons/math/special/Gamma,104,252,                    return n * (a - n);,0.04,0,-1,0
org/apache/commons/math/special/Gamma,104,237,        } else if (x < a || a < 1.0) {,0.04,0,-1,0
org/apache/commons/math/special/Gamma,104,243,            ContinuedFraction cf = new ContinuedFraction() {,0.04,0,-1,0
org/apache/commons/math/special/Gamma,104,256,"            ret = 1.0 / cf.evaluate(x, epsilon, maxIterations);",0.04,0,-1,0
org/apache/commons/math/special/Gamma,104,257,            ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;,0.04,0,-1,0
org/apache/commons/math/special/Gamma,104,235,        } else if (x == 0.0) {,0.03846,0,-1,0
org/apache/commons/math/special/Gamma,104,120,"        return regularizedGammaP(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);",0.03704,0,-1,0
org/apache/commons/math/special/Gamma,104,168,            double n = 0.0; // current element index,0.03226,0,-1,0
org/apache/commons/math/special/Gamma,104,169,            double an = 1.0 / a; // n-th element in the series,0.03226,0,-1,0
org/apache/commons/math/special/Gamma,104,170,            double sum = an; // partial sum,0.03226,0,-1,0
org/apache/commons/math/special/Gamma,104,171,            while (Math.abs(an) > epsilon && n < maxIterations) {,0.03226,0,-1,0
org/apache/commons/math/special/Gamma,104,173,                n = n + 1.0;,0.03226,0,-1,0
org/apache/commons/math/special/Gamma,104,174,                an = an * (x / (a + n));,0.03226,0,-1,0
org/apache/commons/math/special/Gamma,104,177,                sum = sum + an;,0.03226,0,-1,0
org/apache/commons/math/special/Gamma,104,179,            if (n >= maxIterations) {,0.03226,0,-1,0
org/apache/commons/math/special/Gamma,104,182,                ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;,0.03226,0,-1,0
org/apache/commons/math/special/Gamma,104,233,        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {,0.03226,0,-1,0
org/apache/commons/math/special/Gamma,104,260,        return ret;,0.03226,0,-1,0
org/apache/commons/math/special/Gamma,104,162,        } else if (a >= 1.0 && x > a) {,0.02703,0,-1,0
org/apache/commons/math/special/Gamma,104,160,        } else if (x == 0.0) {,0.02564,0,-1,0
org/apache/commons/math/special/Gamma,104,158,        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {,0.02273,0,-1,0
org/apache/commons/math/special/Gamma,104,186,        return ret;,0.02273,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,51,        super();,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,52,    },0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,133,        double p0 = 1.0;,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,134,"        double p1 = getA(0, x);",0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,135,        double q0 = 0.0;,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,136,        double q1 = 1.0;,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,137,        double c = p1 / q1;,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,138,        int n = 0;,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,139,        double relativeError = Double.MAX_VALUE;,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,140,        while (n < maxIterations && relativeError > epsilon) {,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,141,            ++n;,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,142,"            double a = getA(n, x);",0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,143,"            double b = getB(n, x);",0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,144,            double p2 = a * p1 + b * p0;,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,145,            double q2 = a * q1 + b * q0;,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,146,            if (Double.isInfinite(p2) || Double.isInfinite(q2)) {,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,161,            double r = p2 / q2;,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,162,            relativeError = Math.abs(r / c - 1.0);,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,165,            c = p2 / q2;,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,166,            p0 = p1;,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,167,            p1 = p2;,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,168,            q0 = q1;,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,169,            q1 = q2;,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,170,        },0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,172,        if (n >= maxIterations) {,0.01515,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,178,        return c;,0.01515,0,-1,0
org/apache/commons/math/special/Gamma,104,93,            double g = 607.0 / 128.0;,0.0125,0,-1,0
org/apache/commons/math/special/Gamma,104,95,            double sum = 0.0;,0.0125,0,-1,0
org/apache/commons/math/special/Gamma,104,96,            for (int i = lanczos.length - 1; i > 0; --i) {,0.0125,0,-1,0
org/apache/commons/math/special/Gamma,104,97,                sum = sum + (lanczos[i] / (x + i));,0.0125,0,-1,0
org/apache/commons/math/special/Gamma,104,99,            sum = sum + lanczos[0];,0.0125,0,-1,0
org/apache/commons/math/special/Gamma,104,101,            double tmp = x + g + .5;,0.0125,0,-1,0
org/apache/commons/math/special/Gamma,104,102,            ret = ((x + .5) * Math.log(tmp)) - tmp +,0.0125,0,-1,0
org/apache/commons/math/special/Gamma,104,90,        if (Double.isNaN(x) || (x <= 0.0)) {,0.01205,0,-1,0
org/apache/commons/math/special/Gamma,104,106,        return ret;,0.01205,0,-1,0
org/apache/commons/math/special/Gamma,104,40,    private static double[] lanczos =,0.01111,0,-1,0
org/apache/commons/math/special/Gamma,104,60,    private static final double HALF_LOG_2_PI = 0.5 * Math.log(2.0 * Math.PI);,0.01111,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,104,36,"        super(""Maximal number of iterations ({0}) exceeded"",",0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,104,38,        this.maxIterations = maxIterations;,0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,104,39,    },0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,104,50,"        super(pattern, arguments);",0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,104,51,        this.maxIterations = maxIterations;,0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,104,52,    },0.0,0,-1,0
org/apache/commons/math/MaxIterationsExceededException,104,58,        return maxIterations;,0.0,0,-1,0
org/apache/commons/math/ConvergenceException,104,34,"        super(""Convergence failed"", new Object[0]);",0.0,0,-1,0
org/apache/commons/math/ConvergenceException,104,35,    },0.0,0,-1,0
org/apache/commons/math/ConvergenceException,104,44,"        super(pattern, arguments);",0.0,0,-1,0
org/apache/commons/math/ConvergenceException,104,45,    },0.0,0,-1,0
org/apache/commons/math/ConvergenceException,104,52,        super(cause);,0.0,0,-1,0
org/apache/commons/math/ConvergenceException,104,53,    },0.0,0,-1,0
org/apache/commons/math/ConvergenceException,104,63,"        super(pattern, arguments, cause);",0.0,0,-1,0
org/apache/commons/math/ConvergenceException,104,64,    },0.0,0,-1,0
org/apache/commons/math/ConvergenceException,104,77,"        super(msg, rootCause);",0.0,0,-1,0
org/apache/commons/math/ConvergenceException,104,78,    },0.0,0,-1,0
org/apache/commons/math/ConvergenceException,104,89,        super(msg);,0.0,0,-1,0
org/apache/commons/math/ConvergenceException,104,90,    },0.0,0,-1,0
org/apache/commons/math/MathException,104,123,        super();,0.0,0,-1,0
org/apache/commons/math/MathException,104,124,        this.pattern   = null;,0.0,0,-1,0
org/apache/commons/math/MathException,104,125,        this.arguments = new Object[0];,0.0,0,-1,0
org/apache/commons/math/MathException,104,126,        this.rootCause = null;,0.0,0,-1,0
org/apache/commons/math/MathException,104,127,    },0.0,0,-1,0
org/apache/commons/math/MathException,104,137,        super(msg);,0.0,0,-1,0
org/apache/commons/math/MathException,104,138,        this.pattern   = msg;,0.0,0,-1,0
org/apache/commons/math/MathException,104,139,        this.arguments = new Object[0];,0.0,0,-1,0
org/apache/commons/math/MathException,104,140,        this.rootCause = null;,0.0,0,-1,0
org/apache/commons/math/MathException,104,141,    },0.0,0,-1,0
org/apache/commons/math/MathException,104,151,"      super(buildMessage(pattern, arguments, Locale.US));",0.0,0,-1,0
org/apache/commons/math/MathException,104,152,      this.pattern   = pattern;,0.0,0,-1,0
org/apache/commons/math/MathException,104,153,      this.arguments = arguments;,0.0,0,-1,0
org/apache/commons/math/MathException,104,154,      this.rootCause = null;,0.0,0,-1,0
org/apache/commons/math/MathException,104,155,    },0.0,0,-1,0
org/apache/commons/math/MathException,104,165,        super((rootCause == null ? null : rootCause.getMessage()));,0.0,0,-1,0
org/apache/commons/math/MathException,104,166,        this.pattern   = getMessage();,0.0,0,-1,0
org/apache/commons/math/MathException,104,167,        this.arguments = new Object[0];,0.0,0,-1,0
org/apache/commons/math/MathException,104,168,        this.rootCause = rootCause;,0.0,0,-1,0
org/apache/commons/math/MathException,104,169,    },0.0,0,-1,0
org/apache/commons/math/MathException,104,181,        super(msg);,0.0,0,-1,0
org/apache/commons/math/MathException,104,182,        this.pattern   = msg;,0.0,0,-1,0
org/apache/commons/math/MathException,104,183,        this.arguments = new Object[0];,0.0,0,-1,0
org/apache/commons/math/MathException,104,184,        this.rootCause = rootCause;,0.0,0,-1,0
org/apache/commons/math/MathException,104,185,    },0.0,0,-1,0
org/apache/commons/math/MathException,104,197,"      super(buildMessage(pattern, arguments, Locale.US));",0.0,0,-1,0
org/apache/commons/math/MathException,104,198,      this.pattern   = pattern;,0.0,0,-1,0
org/apache/commons/math/MathException,104,199,      this.arguments = arguments;,0.0,0,-1,0
org/apache/commons/math/MathException,104,200,      this.rootCause = rootCause;,0.0,0,-1,0
org/apache/commons/math/MathException,104,201,    },0.0,0,-1,0
org/apache/commons/math/MathException,104,47,        boolean flag = false;,0.0,0,-1,0
org/apache/commons/math/MathException,104,49,"            Throwable.class.getDeclaredMethod(""getCause"", new Class[0]);",0.0,0,-1,0
org/apache/commons/math/MathException,104,50,            flag = true;,0.0,0,-1,0
org/apache/commons/math/MathException,104,53,        },0.0,0,-1,0
org/apache/commons/math/MathException,104,51,        } catch (NoSuchMethodException ex) {,0.0,0,-1,0
org/apache/commons/math/MathException,104,52,            flag = false;,0.0,0,-1,0
org/apache/commons/math/MathException,104,54,        JDK_SUPPORTS_NESTED = flag;,0.0,0,-1,0
org/apache/commons/math/MathException,104,57,    private static ResourceBundle cachedResources = null;,0.0,0,-1,0
org/apache/commons/math/MathException,104,83,            if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {,0.0,0,-1,0
org/apache/commons/math/MathException,104,85,                cachedResources =,0.0,0,-1,0
org/apache/commons/math/MathException,104,89,            if (cachedResources.getLocale().getLanguage().equals(locale.getLanguage())) {,0.0,0,-1,0
org/apache/commons/math/MathException,104,91,                return cachedResources.getString(s);,0.0,0,-1,0
org/apache/commons/math/MathException,104,96,        },0.0,0,-1,0
org/apache/commons/math/MathException,104,94,        } catch (MissingResourceException mre) {,0.0,0,-1,0
org/apache/commons/math/MathException,104,100,        return s;,0.0,0,-1,0
org/apache/commons/math/MathException,104,113,"        MessageFormat mf = new MessageFormat(translate(pattern, locale));",0.0,0,-1,0
org/apache/commons/math/MathException,104,114,        mf.setLocale(locale);,0.0,0,-1,0
org/apache/commons/math/MathException,104,115,        return mf.format(arguments);        ,0.0,0,-1,0
org/apache/commons/math/MathException,104,208,        return pattern;,0.0,0,-1,0
org/apache/commons/math/MathException,104,216,        return arguments;,0.0,0,-1,0
org/apache/commons/math/MathException,104,226,"        return (pattern == null) ? null : buildMessage(pattern, arguments, locale);",0.0,0,-1,0
org/apache/commons/math/MathException,104,235,        return rootCause;,0.0,0,-1,0
org/apache/commons/math/MathException,104,242,        printStackTrace(System.err);,0.0,0,-1,0
org/apache/commons/math/MathException,104,243,    },0.0,0,-1,0
org/apache/commons/math/MathException,104,251,        synchronized (out) {,0.0,0,-1,0
org/apache/commons/math/MathException,104,252,"            PrintWriter pw = new PrintWriter(out, false);",0.0,0,-1,0
org/apache/commons/math/MathException,104,253,            printStackTrace(pw);,0.0,0,-1,0
org/apache/commons/math/MathException,104,255,            pw.flush();,0.0,0,-1,0
org/apache/commons/math/MathException,104,256,        },0.0,0,-1,0
org/apache/commons/math/MathException,104,257,    },0.0,0,-1,0
org/apache/commons/math/MathException,104,265,        synchronized (out) {,0.0,0,-1,0
org/apache/commons/math/MathException,104,266,            super.printStackTrace(out);,0.0,0,-1,0
org/apache/commons/math/MathException,104,267,            if (rootCause != null && JDK_SUPPORTS_NESTED == false) {,0.0,0,-1,0
org/apache/commons/math/MathException,104,268,"                out.print(""Caused by: "");",0.0,0,-1,0
org/apache/commons/math/MathException,104,269,                rootCause.printStackTrace(out);,0.0,0,-1,0
org/apache/commons/math/MathException,104,271,        },0.0,0,-1,0
org/apache/commons/math/MathException,104,272,    },0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,79,"        return evaluate(x, DEFAULT_EPSILON, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,90,"        return evaluate(x, epsilon, Integer.MAX_VALUE);",0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,101,"        return evaluate(x, DEFAULT_EPSILON, maxIterations);",0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,148,                if (a != 0.0) {,0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,149,                    p2 = p1 + (b / a * p0);,0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,150,                    q2 = q1 + (b / a * q0);,0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,151,                } else if (b != 0) {,0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,152,                    p2 = (a / b * p1) + p0;,0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,153,                    q2 = (a / b * q1) + q0;,0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,156,                    throw new ConvergenceException(,0.0,0,-1,0
org/apache/commons/math/util/ContinuedFraction,104,173,"            throw new MaxIterationsExceededException(maxIterations,",0.0,0,-1,0
org/apache/commons/math/special/Gamma,104,67,        super();,0.0,0,-1,0
org/apache/commons/math/special/Gamma,104,68,    },0.0,0,-1,0
org/apache/commons/math/special/Gamma,104,91,            ret = Double.NaN;,0.0,0,-1,0
org/apache/commons/math/special/Gamma,104,159,            ret = Double.NaN;,0.0,0,-1,0
org/apache/commons/math/special/Gamma,104,161,            ret = 0.0;,0.0,0,-1,0
org/apache/commons/math/special/Gamma,104,165,"            ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);",0.0,0,-1,0
org/apache/commons/math/special/Gamma,104,180,                throw new MaxIterationsExceededException(maxIterations);,0.0,0,-1,0
org/apache/commons/math/special/Gamma,104,234,            ret = Double.NaN;,0.0,0,-1,0
org/apache/commons/math/special/Gamma,104,236,            ret = 1.0;,0.0,0,-1,0
org/apache/commons/math/special/Gamma,104,240,"            ret = 1.0 - regularizedGammaP(a, x, epsilon, maxIterations);",0.0,0,-1,0
