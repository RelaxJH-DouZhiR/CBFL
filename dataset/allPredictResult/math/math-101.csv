project_path,version,lines,statement,suspicious,faulty,predict,miss_line
org/apache/commons/math/complex/ComplexFormat,101,349,            sign = 1;,0.33333,0,1,0
org/apache/commons/math/complex/ComplexFormat,101,350,            break;,0.33333,0,1,0
org/apache/commons/math/complex/ComplexFormat,101,58,"        this(DEFAULT_IMAGINARY_CHARACTER, getDefaultNumberFormat());",0.28571,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,59,    },0.28571,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,237,        return getDefaultNumberFormat(Locale.getDefault());,0.28571,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,361,"        parseAndIgnoreWhitespace(source, pos);",0.18182,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,364,"        Number im = parseNumber(source, getRealFormat(), pos);",0.18182,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,365,        if (im == null) {,0.18182,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,374,        int n = getImaginaryCharacter().length();,0.18182,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,375,        startIndex = pos.getIndex();,0.18182,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,376,        int endIndex = startIndex + n;,0.18182,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,377,        if (,0.18182,1,-1,0
org/apache/commons/math/complex/ComplexFormat,101,321,        int initialIndex = pos.getIndex();,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,324,"        parseAndIgnoreWhitespace(source, pos);",0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,327,"        Number re = parseNumber(source, getRealFormat(), pos);",0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,328,        if (re == null) {,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,337,        int startIndex = pos.getIndex();,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,338,"        char c = parseNextCharacter(source, pos);",0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,339,        int sign = 0;,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,340,        switch (c) {,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,399,"        parseNextCharacter(source, pos);",0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,400,        pos.setIndex(pos.getIndex() - 1);,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,401,    },0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,411,         int index = pos.getIndex();,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,412,         int n = source.length();,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,413,         char ret = 0;,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,415,         if (index < n) {,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,418,                 c = source.charAt(index++);,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,419,             } while (Character.isWhitespace(c) && index < n);,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,420,             pos.setIndex(index);,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,422,             if (index < n) {,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,423,                 ret = c;,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,427,         return ret;,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,471,        int startIndex = pos.getIndex();,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,472,"        Number number = format.parse(source, pos);",0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,473,        int endIndex = pos.getIndex();,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,476,        if (startIndex == endIndex) {,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,487,        return number;,0.16667,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,258,        return imaginaryCharacter;,0.08696,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,292,        return realFormat;,0.07143,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,67,"        this(DEFAULT_IMAGINARY_CHARACTER, format);",0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,68,    },0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,97,"        this(imaginaryCharacter, format, (NumberFormat)format.clone());",0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,98,    },0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,110,        super();,0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,111,        setImaginaryCharacter(imaginaryCharacter);,0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,112,        setImaginaryFormat(imaginaryFormat);,0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,113,        setRealFormat(realFormat);,0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,114,    },0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,248,        NumberFormat nf = NumberFormat.getInstance(locale);,0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,249,        nf.setMaximumFractionDigits(2);,0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,250,        return nf;,0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,283,        NumberFormat f = getDefaultNumberFormat(locale);,0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,284,        return new ComplexFormat(f);,0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,508,        if (imaginaryCharacter == null || imaginaryCharacter.length() == 0) {,0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,512,        this.imaginaryCharacter = imaginaryCharacter;,0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,513,    },0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,522,        if (imaginaryFormat == null) {,0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,526,        this.imaginaryFormat = imaginaryFormat;,0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,527,    },0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,536,        if (realFormat == null) {,0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,540,        this.realFormat = realFormat;,0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,541,    },0.05882,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,78,"        this(DEFAULT_IMAGINARY_CHARACTER, realFormat, imaginaryFormat);",0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,79,    },0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,87,"        this(imaginaryCharacter, getDefaultNumberFormat());",0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,88,    },0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,124,        return getInstance().format( c );,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,139,        pos.setBeginIndex(0);,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,140,        pos.setEndIndex(0);,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,143,        double re = complex.getReal();,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,144,"        formatDouble(re, getRealFormat(), toAppendTo, pos);",0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,147,        double im = complex.getImaginary();,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,148,        if (im < 0.0) {,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,149,"            toAppendTo.append("" - "");",0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,150,"            formatDouble(-im, getImaginaryFormat(), toAppendTo, pos);",0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,151,            toAppendTo.append(getImaginaryCharacter());,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,152,        } else if (im > 0.0 || Double.isNaN(im)) {,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,153,"            toAppendTo.append("" + "");",0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,154,"            formatDouble(im, getImaginaryFormat(), toAppendTo, pos);",0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,155,            toAppendTo.append(getImaginaryCharacter());,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,158,        return toAppendTo;,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,177,        StringBuffer ret = null;,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,179,        if (obj instanceof Complex) {,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,180,"            ret = format( (Complex)obj, toAppendTo, pos);",0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,181,        } else if (obj instanceof Number) {,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,182,"            ret = format( new Complex(((Number)obj).doubleValue(), 0.0),",0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,185,            throw new IllegalArgumentException(,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,189,        return ret;,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,211,        if( Double.isNaN(value) || Double.isInfinite(value) ) {,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,212,            toAppendTo.append('(');,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,213,            toAppendTo.append(value);,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,214,            toAppendTo.append(')');,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,216,"            format.format(value, toAppendTo, pos);",0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,218,        return toAppendTo;,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,227,        return NumberFormat.getAvailableLocales();,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,266,        return imaginaryFormat;,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,274,        return getInstance(Locale.getDefault());,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,304,        ParsePosition parsePosition = new ParsePosition(0);,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,305,"        Complex result = parse(source, parsePosition);",0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,306,        if (parsePosition.getIndex() == 0) {,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,307,"            throw new ParseException(""Unparseable complex number: \"""" + source +",0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,310,        return result;,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,332,            pos.setIndex(initialIndex);,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,333,            return null;,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,344,"            return new Complex(re.doubleValue(), 0.0);",0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,346,            sign = -1;,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,347,            break;,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,355,            pos.setIndex(initialIndex);,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,356,            pos.setErrorIndex(startIndex);,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,357,            return null;,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,369,            pos.setIndex(initialIndex);,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,370,            return null;,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,382,            pos.setIndex(initialIndex);,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,383,            pos.setErrorIndex(startIndex);,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,384,            return null;,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,386,        pos.setIndex(endIndex);,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,388,"        return new Complex(re.doubleValue(), im.doubleValue() * sign);",0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,440,        Number ret = null;,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,442,        StringBuffer sb = new StringBuffer();,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,443,        sb.append('(');,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,444,        sb.append(value);,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,445,        sb.append(')');,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,447,        int n = sb.length();,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,448,        int startIndex = pos.getIndex();,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,449,        int endIndex = startIndex + n;,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,450,        if (endIndex < source.length()) {,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,451,"            if (source.substring(startIndex, endIndex).compareTo(sb.toString()) == 0) {",0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,452,                ret = new Double(value);,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,453,                pos.setIndex(endIndex);,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,457,        return ret;,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,478,"            double[] special = {Double.NaN, Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY};",0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,479,            for (int i = 0; i < special.length; ++i) {,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,480,"                number = parseNumber(source, special[i], pos);",0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,481,                if (number != null) {,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,482,                    break;,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,499,"        return parse(source, pos);",0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,509,            throw new IllegalArgumentException(,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,523,            throw new IllegalArgumentException(,0.0,0,-1,0
org/apache/commons/math/complex/ComplexFormat,101,537,            throw new IllegalArgumentException(,0.0,0,-1,0
