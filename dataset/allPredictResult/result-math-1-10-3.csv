dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict0,predict1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,48,330,"    VECTOR_LENGTH_MISMATCH(""vector length mismatch: got {0} but expected {1}""),",1,0,0,1,6,0,0,0,1,4,75,2,0.25,0,0,0.5367354282674579,0.46326457173254354
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,48,331,"    VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT(""vector must have at least one element""),",1,0,0,1,2,0,0,0,1,4,79,2,0.25,0,0,0.56001551612261,0.4399844838773885
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,48,332,"    WEIGHT_AT_LEAST_ONE_NON_ZERO(""weigth array must contain at least one non-zero value""),",1,0,0,1,2,0,0,0,1,4,86,2,0.25,0,0,0.6037381466853531,0.3962618533146459
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,48,333,"    WRONG_BLOCK_LENGTH(""wrong array shape (block length = {0}, expected {1})""),",1,0,0,0,8,0,0,0,1,3,75,2,0.25,0,0,0.4542038884162694,0.5457961115837292
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,48,334,"    WRONG_NUMBER_OF_POINTS(""{0} points are required, got only {1}""),",1,0,0,0,6,0,0,0,1,3,64,2,0.25,0,0,0.39904530270969835,0.6009546972903033
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,48,335,"    NUMBER_OF_POINTS(""number of points ({0})""), /* keep */",1,0,0,2,6,0,0,0,1,4,54,2,0.25,0,0,0.4836861434208176,0.5163138565791822
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,48,336,"    ZERO_DENOMINATOR(""denominator must be different from 0""),",1,0,0,1,2,0,0,0,1,4,57,2,0.25,0,0,0.450873048372219,0.54912695162778
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,48,337,"    ZERO_DENOMINATOR_IN_FRACTION(""zero denominator in fraction {0}/{1}""),",1,0,0,1,6,0,0,0,1,4,69,2,0.25,0,0,0.5045270600583757,0.49547293994162395
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,48,338,"    ZERO_FRACTION_TO_DIVIDE_BY(""the fraction to divide by must not be zero: {0}/{1}""),",1,0,0,1,6,0,0,0,1,4,82,2,0.25,0,0,0.5783280615211567,0.42167193847884404
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,48,339,"    ZERO_NORM(""zero norm""),",1,0,0,1,2,0,0,0,1,4,23,2,0.25,0,0,0.3784621795549559,0.6215378204450445
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,48,340,"    ZERO_NORM_FOR_ROTATION_AXIS(""zero norm for rotation axis""),",1,0,0,1,2,1,0,0,1,5,59,2,0.25,0,0,0.458160553530855,0.5418394464691453
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,48,341,"    ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR(""zero norm for rotation defining vector""),",1,0,0,1,2,1,0,0,1,5,81,2,0.25,0,0,0.5715344624068188,0.4284655375931821
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,48,342,"    ZERO_NOT_ALLOWED(""zero not allowed here"");",1,0,0,1,2,0,0,0,1,4,42,2,0.25,0,0,0.40475532606671194,0.5952446739332887
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,48,39,public enum LocalizedFormats implements Localizable {,1,0,0,0,1,3,0,1,1,5,53,1,0.25,0,0,0.6480601051330039,0.35193989486699706
defect4j,math,org/apache/commons/math/exception/util/ArgUtils,48,42,        final List<Object> list = new ArrayList<Object>();,1,0,0,1,2,2,0,4,2,6,50,4,0.25,0,0,0.999999991204163,8.795835986441413e-09
defect4j,math,org/apache/commons/math/exception/util/ArgUtils,48,43,        if (array != null) {,1,1,0,1,3,1,0,0,0,5,20,4,0.25,0,0,0.32838426963308925,0.6716157303669109
defect4j,math,org/apache/commons/math/exception/util/ArgUtils,48,44,            for (Object o : array) {,2,0,0,1,3,1,0,1,0,5,24,6,0.25,0,0,0.4764123425637188,0.5235876574362804
defect4j,math,org/apache/commons/math/exception/util/ArgUtils,48,45,                if (o instanceof Object[]) {,1,0,0,1,5,2,0,1,0,5,28,9,0.25,0,0,0.3373701627993053,0.662629837200694
defect4j,math,org/apache/commons/math/exception/util/ArgUtils,48,46,                    for (Object oR : flatten((Object[]) o)) {,2,0,0,3,9,1,1,2,1,7,41,10,0.25,0,0,0.9664604626390453,0.03353953736095364
defect4j,math,org/apache/commons/math/exception/util/ArgUtils,48,50,                    list.add(o);,0,0,0,1,2,0,3,0,0,3,12,11,0.25,0,0,0.0737901719535544,0.9262098280464474
defect4j,math,org/apache/commons/math/exception/util/ArgUtils,48,54,        return list.toArray();,0,0,0,1,2,1,2,0,0,4,22,5,0.25,0,0,0.23308835547671816,0.766911644523282
defect4j,math,org/apache/commons/math/linear/AbstractRealVector,49,67,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.15799645565818587,0.8420035443418147
defect4j,math,org/apache/commons/math/linear/OpenMapRealVector,49,368,        checkVectorDimensions(v.getDimension());,0,0,0,2,4,0,3,0,1,4,40,4,1.0,0,0,0.310281687649472,0.6897183123505287
defect4j,math,org/apache/commons/math/linear/OpenMapRealVector,49,369,        OpenMapRealVector res = new OpenMapRealVector(this);,1,0,0,1,2,2,0,2,1,6,52,4,1.0,0,0,0.9789608821905315,0.02103911780946822
defect4j,math,org/apache/commons/math/linear/OpenMapRealVector,49,370,        Iterator iter = res.entries.iterator();,3,0,0,1,2,0,1,1,0,5,39,4,1.0,1,0,0.6423563633587246,0.357643636641277
defect4j,math,org/apache/commons/math/linear/OpenMapRealVector,49,371,        while (iter.hasNext()) {,0,0,0,2,5,1,2,0,0,4,24,5,1.0,0,0,0.2669491045109056,0.7330508954890943
defect4j,math,org/apache/commons/math/linear/OpenMapRealVector,49,372,            iter.advance();,0,0,0,1,2,0,2,0,0,3,15,7,1.0,0,0,0.17616204811787609,0.8238379518821226
defect4j,math,org/apache/commons/math/linear/OpenMapRealVector,49,373,"            res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));",0,1,0,2,10,0,10,0,0,4,64,7,1.0,0,0,0.0008765124023928346,0.9991234875976055
defect4j,math,org/apache/commons/math/analysis/solvers/BaseSecantSolver,50,239,                    return x1;,1,0,0,0,0,1,0,0,0,2,10,9,0.2,0,0,0.09188852881890766,0.9081114711810924
defect4j,math,org/apache/commons/math/analysis/solvers/RegulaFalsiSolver,51,43,"        super(DEFAULT_ABSOLUTE_ACCURACY, Method.REGULA_FALSI);",3,0,0,0,2,1,0,0,1,4,54,3,0.125,0,0,0.44501820002362136,0.5549817999763791
defect4j,math,org/apache/commons/math/analysis/solvers/RegulaFalsiSolver,51,44,    },0,0,0,0,1,0,0,0,0,1,1,2,0.125,0,0,0.15799645565818587,0.8420035443418147
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,313,"  public Rotation(Vector3D u1, Vector3D u2, Vector3D v1, Vector3D v2) {",5,0,0,0,3,1,0,4,1,5,69,2,1.0,0,0,0.9999999975118854,2.4881134767572665e-09
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,316,  double u1u1 = u1.getNormSq();,1,0,0,1,2,1,2,0,0,5,29,5,1.0,0,0,0.2617277906037137,0.7382722093962857
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,317,  double u2u2 = u2.getNormSq();,1,0,0,1,2,1,2,0,0,5,29,5,1.0,0,0,0.2617277906037137,0.7382722093962857
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,318,  double v1v1 = v1.getNormSq();,1,0,0,1,2,1,2,0,0,5,29,5,1.0,0,0,0.2617277906037137,0.7382722093962857
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,319,  double v2v2 = v2.getNormSq();,1,0,0,1,2,1,2,0,0,5,29,5,1.0,0,0,0.2617277906037137,0.7382722093962857
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,320,  if ((u1u1 == 0) || (u2u2 == 0) || (v1v1 == 0) || (v2v2 == 0)) {,4,5,0,2,11,1,0,0,0,5,63,4,1.0,0,0,0.9941384280209148,0.00586157197908605
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,325,"  v1 = new Vector3D(FastMath.sqrt(u1u1 / v1v1), v1);",4,1,0,1,4,1,2,1,2,8,50,4,1.0,0,0,0.7495578111205149,0.25044218887948577
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,328,  double u1u2   = u1.dotProduct(u2);,1,0,0,1,2,1,3,0,0,5,34,5,1.0,0,0,0.21510780834363888,0.7848921916563617
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,329,  double v1v2   = v1.dotProduct(v2);,1,0,0,1,2,1,3,0,0,5,34,5,1.0,0,0,0.21510780834363888,0.7848921916563617
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,330,  double coeffU = u1u2 / u1u1;,3,1,0,0,0,1,0,0,0,3,28,5,1.0,0,0,0.28286524978711264,0.717134750212889
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,331,  double coeffV = v1v2 / u1u1;,3,1,0,0,0,1,0,0,0,3,28,5,1.0,0,0,0.28286524978711264,0.717134750212889
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,332,  double beta   = FastMath.sqrt((u2u2 - u1u2 * coeffU) / (v2v2 - v1v2 * coeffV));,7,5,0,2,6,1,2,0,0,6,79,5,1.0,0,0,0.9990501688856371,0.0009498311143638218
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,333,  double alpha  = coeffU - beta * coeffV;,4,2,0,0,0,1,0,0,0,3,39,5,1.0,0,0,0.5007109959160462,0.499289004083955
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,334,"  v2 = new Vector3D(alpha, v1, beta, v2);",5,0,0,0,2,1,0,1,2,5,39,4,1.0,0,0,0.8162601529664915,0.18373984703350715
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,337,  Vector3D uRef  = u1;,2,0,0,0,0,0,0,1,0,2,20,4,1.0,0,0,0.3724453956118659,0.6275546043881339
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,338,  Vector3D vRef  = v1;,2,0,0,0,0,0,0,1,0,2,20,4,1.0,0,0,0.3724453956118659,0.6275546043881339
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,339,  Vector3D v1Su1 = v1.subtract(u1);,1,0,0,1,2,0,3,1,0,5,33,4,1.0,0,0,0.44691629278789435,0.553083707212105
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,340,  Vector3D v2Su2 = v2.subtract(u2);,1,0,0,1,2,0,3,1,0,5,33,4,1.0,0,0,0.44691629278789435,0.553083707212105
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,341,  Vector3D k     = v1Su1.crossProduct(v2Su2);,1,0,0,1,2,0,3,1,0,5,43,4,1.0,0,0,0.4667571025843472,0.5332428974156544
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,342,  Vector3D u3    = u1.crossProduct(u2);,1,0,0,1,2,0,3,1,0,5,37,4,1.0,0,0,0.453653032259757,0.5463469677402418
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,343,  double c       = k.dotProduct(u3);,1,0,0,1,2,1,3,0,0,5,34,5,1.0,0,0,0.21510780834363888,0.7848921916563617
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,344,  if (c == 0) {,1,1,0,1,3,1,0,0,0,5,13,4,1.0,1,0,0.3292370524190262,0.6707629475809732
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,378,  c = FastMath.sqrt(c);,1,0,0,1,2,0,3,0,1,5,21,4,1.0,0,0,0.2812932864605392,0.7187067135394617
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,379,  double inv = 1.0 / (c + c);,3,2,0,1,2,1,0,0,0,5,27,5,1.0,0,0,0.5147940480094073,0.485205951990592
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,380,  q1 = inv * k.getX();,2,1,0,1,2,0,2,0,1,6,20,4,1.0,0,0,0.40438604740002276,0.5956139525999765
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,381,  q2 = inv * k.getY();,2,1,0,1,2,0,2,0,1,6,20,4,1.0,0,0,0.40438604740002276,0.5956139525999765
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,382,  q3 = inv * k.getZ();,2,1,0,1,2,0,2,0,1,6,20,4,1.0,0,0,0.40438604740002276,0.5956139525999765
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,385,"   k = new Vector3D(uRef.getY() * q3 - uRef.getZ() * q2,",3,3,0,1,5,1,4,1,2,8,53,4,1.0,0,0,0.8257834441433187,0.1742165558566805
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,388,  q0 = vRef.dotProduct(k) / (2 * k.getNormSq());,1,2,0,2,6,0,5,0,1,6,46,4,1.0,0,0,0.2817958009456696,0.7182041990543303
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,390,  },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.15799645565818587,0.8420035443418147
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Rotation,52,481,    return q0;,1,0,0,0,0,1,0,0,0,2,10,4,1.0,0,0,0.1674616737950518,0.8325383262049465
defect4j,math,org/apache/commons/math/geometry/euclidean/threed/Vector3D,52,224,        return x * x + y * y + z * z;,6,5,0,0,0,1,0,0,0,3,29,4,1.0,0,0,0.9940523042653889,0.005947695734610688
defect4j,math,org/apache/commons/math/complex/Complex,53,152,        MathUtils.checkNotNull(rhs);,0,0,0,1,2,0,3,0,0,3,28,5,0.05263,0,0,0.17517619607451215,0.824823803925488
defect4j,math,org/apache/commons/math/complex/Complex,53,153,"        return createComplex(real + rhs.getReal(),",1,1,0,1,3,1,3,0,1,7,42,4,0.05263,1,1,0.297740759340405,0.7022592406595961
defect4j,math,org/apache/commons/math/dfp/Dfp,54,2119,            buffer[--q] = '-';,1,0,1,0,2,0,0,0,3,4,18,6,0.08333,0,0,0.6903473097907776,0.30965269020922387
defect4j,math,org/apache/commons/math/geometry/Vector3D,55,473,"      return new Vector3D(v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x);",24,9,0,0,2,2,0,1,1,6,101,4,0.33333,1,0,1.0,1.1246219817053316e-21
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,85,        Iterator() {,1,0,0,1,3,0,0,0,0,3,12,3,1.0,0,0,0.27694579724429913,0.7230542027557021
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,75,        private final int[] counter = new int[dimension];,1,0,1,0,4,5,0,0,2,5,49,3,1.0,0,0,0.8379932843262388,0.16200671567375993
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,79,        private int count = -1;,1,0,0,0,0,2,0,0,2,3,23,3,1.0,0,0,0.29999240257205734,0.7000075974279436
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,86,            counter[last] = -1;,0,0,1,0,2,0,0,0,2,3,19,5,1.0,0,0,0.6083255591255322,0.3916744408744695
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,87,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.15799645565818587,0.8420035443418147
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,147,            return counter[dim];,0,0,1,0,2,1,0,0,0,3,20,6,1.0,0,0,0.4521474893537202,0.5478525106462795
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,196,        return new Iterator();,0,0,0,1,2,2,0,1,1,5,22,4,1.0,0,0,0.5399413046801682,0.4600586953198318
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,205,        return dimension;,1,0,0,0,0,1,0,0,0,2,17,4,1.0,0,0,0.16576568788982507,0.834234312110174
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,217,        if (index < 0 ||,1,2,0,0,1,1,0,0,0,4,16,4,1.0,0,0,0.3956656105230516,0.6043343894769475
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,272,        return count + c[last];,1,1,1,0,2,1,0,0,0,5,23,4,1.0,0,0,0.6259608222256683,0.3740391777743319
defect4j,math,org/apache/commons/math/util/MultidimensionalCounter,56,46,public class MultidimensionalCounter implements Iterable<Integer> {,1,0,0,0,1,3,0,2,1,5,67,1,1.0,0,0,0.9860419949818614,0.013958005018140252
defect4j,math,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer,57,69,"        this(random, EmptyClusterStrategy.LARGEST_VARIANCE);",3,0,0,0,2,1,0,0,0,3,52,4,0.5,0,0,0.3252242236513671,0.6747757763486325
defect4j,math,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer,57,70,    },0,0,0,0,1,0,0,0,0,1,1,2,0.5,0,0,0.15799645565818587,0.8420035443418147
defect4j,math,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer,57,134,        return clusters;,1,0,0,0,0,1,0,0,0,2,16,4,0.5,0,0,0.16584203848749682,0.834157961512504
defect4j,math,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer,57,175,            int sum = 0;,1,0,0,0,0,1,0,0,0,2,12,7,0.5,1,0,0.12196903932061183,0.8780309606793871
defect4j,math,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer,57,176,            for (int i = 0; i < pointSet.size(); i++) {,3,1,0,2,5,2,2,0,1,7,43,6,0.5,0,0,0.42525997032213547,0.5747400296778645
defect4j,math,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer,57,177,                final T p = pointSet.get(i);,1,0,0,1,2,1,3,1,1,7,28,8,0.5,0,0,0.32274502682405504,0.6772549731759466
defect4j,math,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer,57,178,"                final Cluster<T> nearest = getNearestCluster(resultSet, p);",1,0,0,0,2,1,3,2,2,6,59,8,0.5,0,0,0.9588159547614702,0.04118404523853107
defect4j,math,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer,57,179,                final double d = p.distanceFrom(nearest.getCenter());,1,0,0,2,4,2,4,0,1,6,53,8,0.5,0,0,0.16978646583014,0.8302135341698604
defect4j,math,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer,57,180,                sum += d * d;,3,1,0,0,0,0,0,0,1,3,13,8,0.5,0,0,0.2577296867338298,0.7422703132661717
defect4j,math,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer,57,181,                dx2[i] = sum;,1,0,1,0,2,0,0,0,1,4,13,8,0.5,0,0,0.5119226719993857,0.4880773280006145
defect4j,math,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer,57,186,            final double r = random.nextDouble() * sum;,2,1,0,1,2,2,2,0,1,7,43,6,0.5,0,0,0.3314933005614726,0.6685066994385277
defect4j,math,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer,57,187,            for (int i = 0 ; i < dx2.length; i++) {,5,1,0,1,3,2,0,0,1,6,39,6,0.5,0,0,0.6093935303112196,0.39060646968878066
defect4j,math,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer,57,188,                if (dx2[i] >= r) {,1,1,1,1,5,1,0,0,0,6,18,8,0.5,0,0,0.5338990695433067,0.4661009304566944
defect4j,math,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer,57,189,                    final T p = pointSet.remove(i);,1,0,0,1,2,1,3,1,1,7,31,10,0.5,0,0,0.2532462435894431,0.7467537564105579
defect4j,math,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer,57,190,                    resultSet.add(new Cluster<T>(p));,1,0,0,2,4,1,2,2,1,7,33,11,0.5,0,0,0.93105145458641,0.06894854541359074
defect4j,math,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer,57,191,                    break;,0,0,0,0,0,1,0,0,0,1,6,2,0.5,0,0,0.1373908593496032,0.8626091406503953
defect4j,math,org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer,57,194,        },0,0,0,0,1,0,0,0,0,1,1,2,0.5,0,0,0.15799645565818587,0.8420035443418147
defect4j,math,org/apache/commons/math/optimization/fitting/GaussianFitter,58,182,            } catch (OutOfRangeException e) {,1,0,0,1,4,1,0,1,0,5,33,7,0.5,0,0,0.4241943083217099,0.5758056916782884
defect4j,math,org/apache/commons/math/optimization/fitting/GaussianFitter,58,183,                fwhmApprox = points[points.length - 1].getX() - points[0].getX();,3,2,1,1,8,0,2,0,1,7,65,8,0.5,0,0,0.8270698798374453,0.17293012016255518
defect4j,math,org/apache/commons/math/optimization/fitting/GaussianFitter,58,271,            double minY = Double.POSITIVE_INFINITY;,3,0,0,0,0,1,0,0,0,2,39,6,0.5,0,0,0.19472874822105068,0.8052712517789482
defect4j,math,org/apache/commons/math/optimization/fitting/GaussianFitter,58,272,            double maxY = Double.NEGATIVE_INFINITY;,3,0,0,0,0,1,0,0,0,2,39,6,0.5,0,0,0.19472874822105068,0.8052712517789482
defect4j,math,org/apache/commons/math/optimization/fitting/GaussianFitter,58,273,            for (final WeightedObservedPoint point : points) {,2,0,0,1,3,2,0,1,1,6,50,5,0.5,0,0,0.6003858719824983,0.3996141280175034
defect4j,math,org/apache/commons/math/optimization/fitting/GaussianFitter,58,274,"                minY = Math.min(minY, point.getY());",1,0,0,1,4,0,5,0,1,5,36,7,0.5,0,0,0.09498810557493191,0.9050118944250697
defect4j,math,org/apache/commons/math/optimization/fitting/GaussianFitter,58,275,"                maxY = Math.max(maxY, point.getY());",1,0,0,1,4,0,5,0,1,5,36,7,0.5,0,0,0.09498810557493191,0.9050118944250697
defect4j,math,org/apache/commons/math/optimization/fitting/GaussianFitter,58,277,"            throw new OutOfRangeException(y, minY, maxY);",3,0,0,0,2,2,0,1,1,5,45,5,0.5,0,0,0.6053131093049119,0.3946868906950894
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,58,52,"        this(null, wrong, min, boundIsAllowed);",3,0,0,0,2,1,0,0,0,3,39,4,0.5,0,0,0.2947145434077203,0.7052854565922785
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,58,53,    },0,0,0,0,1,0,0,0,0,1,1,2,0.5,0,0,0.15799645565818587,0.8420035443418147
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,58,67,"        super(specific,",1,0,0,0,1,1,0,0,1,4,15,3,0.5,0,0,0.30711596192152363,0.6928840380784754
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,58,73,        this.min = min;,2,0,0,0,0,1,0,0,1,3,15,4,0.5,0,0,0.2654082899024312,0.7345917100975677
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,58,74,        this.boundIsAllowed = boundIsAllowed;,2,0,0,0,0,1,0,0,1,3,37,4,0.5,0,0,0.27947134603597906,0.7205286539640204
defect4j,math,org/apache/commons/math/exception/NumberIsTooSmallException,58,75,    },0,0,0,0,1,0,0,0,0,1,1,2,0.5,0,0,0.15799645565818587,0.8420035443418147
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,58,46,"        this(null, wrong, lo, hi);",3,0,0,0,2,1,0,0,0,3,26,4,0.5,0,0,0.27926186399161773,0.7207381360083822
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,58,47,    },0,0,0,0,1,0,0,0,0,1,1,2,0.5,0,0,0.15799645565818587,0.8420035443418147
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,58,62,"        super(specific, LocalizedFormats.OUT_OF_RANGE_SIMPLE,",3,0,0,0,1,1,0,0,1,4,53,3,0.5,0,0,0.44152372453693917,0.5584762754630616
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,58,64,        this.lo = lo;,2,0,0,0,0,1,0,0,1,3,13,4,0.5,0,0,0.266011597266312,0.7339884027336876
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,58,65,        this.hi = hi;,2,0,0,0,0,1,0,0,1,3,13,4,0.5,0,0,0.266011597266312,0.7339884027336876
defect4j,math,org/apache/commons/math/exception/OutOfRangeException,58,66,    },0,0,0,0,1,0,0,0,0,1,1,2,0.5,0,0,0.15799645565818587,0.8420035443418147
defect4j,math,org/apache/commons/math/dfp/DfpField,59,174,"        this(decimalDigits, true);",1,0,0,0,2,1,0,0,1,4,26,4,0.03571,0,0,0.2906768172290298,0.7093231827709708
defect4j,math,org/apache/commons/math/dfp/DfpField,59,175,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03571,0,0,0.15799645565818587,0.8420035443418147
defect4j,math,org/apache/commons/math/dfp/DfpField,59,188,"    private DfpField(final int decimalDigits, final boolean computeConstants) {",3,0,0,0,3,5,0,0,3,4,75,2,0.03571,0,0,0.7861981292941072,0.21380187070589152
defect4j,math,org/apache/commons/math/dfp/DfpField,59,190,        this.radixDigits = (decimalDigits < 13) ? 4 : (decimalDigits + 3) / 4;,3,3,0,1,4,1,0,0,1,6,70,4,0.03571,0,0,0.8624230201093784,0.1375769798906207
defect4j,math,org/apache/commons/math/dfp/DfpField,59,191,        this.rMode       = RoundingMode.ROUND_HALF_EVEN;,3,0,0,0,0,1,0,0,1,3,48,4,0.03571,0,0,0.3507040619306987,0.6492959380693005
defect4j,math,org/apache/commons/math/dfp/DfpField,59,192,        this.ieeeFlags   = 0;,1,0,0,0,0,1,0,0,1,3,21,4,0.03571,0,0,0.24425350341101854,0.7557464965889819
defect4j,math,org/apache/commons/math/dfp/DfpField,59,193,"        this.zero        = new Dfp(this, 0);",1,0,0,0,2,3,0,1,2,5,36,4,0.03571,0,0,0.6033747075695666,0.39662529243043515
defect4j,math,org/apache/commons/math/dfp/DfpField,59,194,"        this.one         = new Dfp(this, 1);",1,0,0,0,2,3,0,1,2,5,36,4,0.03571,0,0,0.6033747075695666,0.39662529243043515
defect4j,math,org/apache/commons/math/dfp/DfpField,59,195,"        this.two         = new Dfp(this, 2);",1,0,0,0,2,3,0,1,2,5,36,4,0.03571,0,0,0.6033747075695666,0.39662529243043515
defect4j,math,org/apache/commons/math/dfp/DfpField,59,197,        if (computeConstants) {,1,0,0,1,3,1,0,0,0,4,23,4,0.03571,0,0,0.27681470782230844,0.7231852921776917
defect4j,math,org/apache/commons/math/dfp/DfpField,59,199,            synchronized (DfpField.class) {,0,0,0,1,3,2,0,1,0,4,31,8,0.03571,0,0,0.34868015815190434,0.6513198418480971
defect4j,math,org/apache/commons/math/dfp/DfpField,59,205,                computeStringConstants((decimalDigits < 67) ? 200 : (3 * decimalDigits));,2,2,0,2,6,0,1,0,1,6,73,8,0.03571,0,0,0.631805238890699,0.3681947611093
defect4j,math,org/apache/commons/math/dfp/DfpField,59,208,"                sqr2           = new Dfp(this, sqr2String);",2,0,0,0,2,2,0,1,2,5,43,8,0.03571,0,0,0.4955493279299131,0.5044506720700869
defect4j,math,org/apache/commons/math/dfp/DfpField,59,209,                sqr2Split      = split(sqr2String);,1,0,0,1,2,0,2,0,2,5,35,8,0.03571,0,0,0.28818142736274854,0.711818572637252
defect4j,math,org/apache/commons/math/dfp/DfpField,59,210,"                sqr2Reciprocal = new Dfp(this, sqr2ReciprocalString);",2,0,0,0,2,2,0,1,2,5,53,8,0.03571,0,0,0.5254603867598758,0.4745396132401229
defect4j,math,org/apache/commons/math/dfp/DfpField,59,211,"                sqr3           = new Dfp(this, sqr3String);",2,0,0,0,2,2,0,1,2,5,43,8,0.03571,0,0,0.4955493279299131,0.5044506720700869
defect4j,math,org/apache/commons/math/dfp/DfpField,59,212,"                sqr3Reciprocal = new Dfp(this, sqr3ReciprocalString);",2,0,0,0,2,2,0,1,2,5,53,8,0.03571,0,0,0.5254603867598758,0.4745396132401229
defect4j,math,org/apache/commons/math/dfp/DfpField,59,213,"                pi             = new Dfp(this, piString);",2,0,0,0,2,2,0,1,2,5,41,8,0.03571,0,0,0.4907565060841567,0.5092434939158422
defect4j,math,org/apache/commons/math/dfp/DfpField,59,214,                piSplit        = split(piString);,1,0,0,1,2,0,2,0,2,5,33,8,0.03571,0,0,0.2855602150290334,0.7144397849709654
defect4j,math,org/apache/commons/math/dfp/DfpField,59,215,"                e              = new Dfp(this, eString);",2,0,0,0,2,2,0,1,2,5,40,8,0.03571,0,0,0.488509708102322,0.5114902918976786
defect4j,math,org/apache/commons/math/dfp/DfpField,59,216,                eSplit         = split(eString);,1,0,0,1,2,0,2,0,2,5,32,8,0.03571,0,0,0.28437635391011806,0.7156236460898815
defect4j,math,org/apache/commons/math/dfp/DfpField,59,217,"                ln2            = new Dfp(this, ln2String);",2,0,0,0,2,2,0,1,2,5,42,8,0.03571,0,0,0.493103065506606,0.5068969344933925
defect4j,math,org/apache/commons/math/dfp/DfpField,59,218,                ln2Split       = split(ln2String);,1,0,0,1,2,0,2,0,2,5,34,8,0.03571,0,0,0.286828360926614,0.7131716390733843
defect4j,math,org/apache/commons/math/dfp/DfpField,59,219,"                ln5            = new Dfp(this, ln5String);",2,0,0,0,2,2,0,1,2,5,42,8,0.03571,0,0,0.493103065506606,0.5068969344933925
defect4j,math,org/apache/commons/math/dfp/DfpField,59,220,                ln5Split       = split(ln5String);,1,0,0,1,2,0,2,0,2,5,34,8,0.03571,0,0,0.286828360926614,0.7131716390733843
defect4j,math,org/apache/commons/math/dfp/DfpField,59,221,"                ln10           = new Dfp(this, ln10String);",2,0,0,0,2,2,0,1,2,5,43,8,0.03571,0,0,0.4955493279299131,0.5044506720700869
defect4j,math,org/apache/commons/math/dfp/DfpField,59,223,            },0,0,0,0,1,0,0,0,0,1,1,2,0.03571,0,0,0.15799645565818587,0.8420035443418147
defect4j,math,org/apache/commons/math/dfp/DfpField,59,226,            sqr2           = null;,1,0,0,0,0,0,0,0,1,2,22,6,0.03571,0,0,0.17657522744845666,0.8234247725515439
defect4j,math,org/apache/commons/math/dfp/DfpField,59,227,            sqr2Split      = null;,1,0,0,0,0,0,0,0,1,2,22,6,0.03571,0,0,0.17657522744845666,0.8234247725515439
defect4j,math,org/apache/commons/math/dfp/DfpField,59,228,            sqr2Reciprocal = null;,1,0,0,0,0,0,0,0,1,2,22,6,0.03571,0,0,0.17657522744845666,0.8234247725515439
defect4j,math,org/apache/commons/math/dfp/DfpField,59,229,            sqr3           = null;,1,0,0,0,0,0,0,0,1,2,22,6,0.03571,0,0,0.17657522744845666,0.8234247725515439
defect4j,math,org/apache/commons/math/dfp/DfpField,59,230,            sqr3Reciprocal = null;,1,0,0,0,0,0,0,0,1,2,22,6,0.03571,0,0,0.17657522744845666,0.8234247725515439
defect4j,math,org/apache/commons/math/dfp/DfpField,59,231,            pi             = null;,1,0,0,0,0,0,0,0,1,2,22,6,0.03571,0,0,0.17657522744845666,0.8234247725515439
defect4j,math,org/apache/commons/math/dfp/DfpField,59,232,            piSplit        = null;,1,0,0,0,0,0,0,0,1,2,22,6,0.03571,0,0,0.17657522744845666,0.8234247725515439
defect4j,math,org/apache/commons/math/dfp/DfpField,59,233,            e              = null;,1,0,0,0,0,0,0,0,1,2,22,6,0.03571,0,0,0.17657522744845666,0.8234247725515439
defect4j,math,org/apache/commons/math/dfp/DfpField,59,234,            eSplit         = null;,1,0,0,0,0,0,0,0,1,2,22,6,0.03571,0,0,0.17657522744845666,0.8234247725515439
defect4j,math,org/apache/commons/math/dfp/DfpField,59,235,            ln2            = null;,1,0,0,0,0,0,0,0,1,2,22,6,0.03571,0,0,0.17657522744845666,0.8234247725515439
defect4j,math,org/apache/commons/math/dfp/DfpField,59,236,            ln2Split       = null;,1,0,0,0,0,0,0,0,1,2,22,6,0.03571,0,0,0.17657522744845666,0.8234247725515439
defect4j,math,org/apache/commons/math/dfp/DfpField,59,237,            ln5            = null;,1,0,0,0,0,0,0,0,1,2,22,6,0.03571,0,0,0.17657522744845666,0.8234247725515439
defect4j,math,org/apache/commons/math/dfp/DfpField,59,238,            ln5Split       = null;,1,0,0,0,0,0,0,0,1,2,22,6,0.03571,0,0,0.17657522744845666,0.8234247725515439
defect4j,math,org/apache/commons/math/dfp/DfpField,59,239,            ln10           = null;,1,0,0,0,0,0,0,0,1,2,22,6,0.03571,0,0,0.17657522744845666,0.8234247725515439
defect4j,math,org/apache/commons/math/dfp/DfpField,59,242,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03571,0,0,0.15799645565818587,0.8420035443418147
defect4j,math,org/apache/commons/math/dfp/DfpField,59,248,        return radixDigits;,1,0,0,0,0,1,0,0,0,2,19,4,0.03571,0,0,0.16577797632160948,0.8342220236783923
defect4j,math,org/apache/commons/math/dfp/DfpField,59,266,        return rMode;,1,0,0,0,0,1,0,0,0,2,13,4,0.03571,0,0,0.16640193190480865,0.8335980680951911
defect4j,math,org/apache/commons/math/dfp/DfpField,59,328,        ieeeFlags |= bits & (FLAG_INVALID | FLAG_DIV_ZERO | FLAG_OVERFLOW | FLAG_UNDERFLOW | FLAG_INEXACT);,7,2,0,1,2,0,0,0,1,5,99,4,0.03571,0,0,0.9774320868843016,0.02256791311569899
defect4j,math,org/apache/commons/math/dfp/DfpField,59,329,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03571,0,0,0.15799645565818587,0.8420035443418147
defect4j,math,org/apache/commons/math/dfp/DfpField,59,400,        return zero;,1,0,0,0,0,1,0,0,0,2,12,4,0.03571,0,0,0.16669933936629983,0.8333006606337011
defect4j,math,org/apache/commons/math/dfp/DfpField,59,522,      Dfp result[] = new Dfp[2];,1,0,0,0,4,1,0,2,0,4,26,4,0.03571,0,0,0.9609108367999484,0.03908916320005323
defect4j,math,org/apache/commons/math/dfp/DfpField,59,523,      boolean leading = true;,1,0,0,0,0,1,0,0,1,3,23,5,0.03571,0,0,0.22583899658202108,0.7741610034179792
defect4j,math,org/apache/commons/math/dfp/DfpField,59,524,      int sp = 0;,1,0,0,0,0,1,0,0,0,2,11,5,0.03571,0,0,0.1528539034779847,0.8471460965220162
defect4j,math,org/apache/commons/math/dfp/DfpField,59,525,      int sig = 0;,1,0,0,0,0,1,0,0,0,2,12,5,0.03571,0,0,0.15252526965949917,0.8474747303405024
defect4j,math,org/apache/commons/math/dfp/DfpField,59,527,      char[] buf = new char[a.length()];,1,0,0,1,6,3,2,0,0,5,34,5,0.03571,0,0,0.2807553092416597,0.719244690758339
defect4j,math,org/apache/commons/math/dfp/DfpField,59,529,      for (int i = 0; i < buf.length; i++) {,5,1,0,1,3,2,0,0,1,6,38,4,0.03571,0,0,0.6601284189350168,0.3398715810649837
defect4j,math,org/apache/commons/math/dfp/DfpField,59,530,        buf[i] = a.charAt(i);,0,0,1,1,4,0,3,0,1,5,21,6,0.03571,0,0,0.5412754972749511,0.4587245027250505
defect4j,math,org/apache/commons/math/dfp/DfpField,59,532,        if (buf[i] >= '1' && buf[i] <= '9') {,0,3,1,1,7,1,0,0,2,6,37,6,0.03571,0,0,0.9127462111025445,0.08725378889745428
defect4j,math,org/apache/commons/math/dfp/DfpField,59,533,            leading = false;,1,0,0,0,0,0,0,0,2,2,16,8,0.03571,0,0,0.16492817366446794,0.8350718263355336
defect4j,math,org/apache/commons/math/dfp/DfpField,59,536,        if (buf[i] == '.') {,0,1,1,1,5,1,0,0,1,6,20,6,0.03571,0,0,0.6439157948255005,0.35608420517450057
defect4j,math,org/apache/commons/math/dfp/DfpField,59,537,          sig += (400 - sig) % 4;,2,2,0,1,2,0,0,0,1,5,23,8,0.03571,0,0,0.42860639129012534,0.5713936087098754
defect4j,math,org/apache/commons/math/dfp/DfpField,59,538,          leading = false;,1,0,0,0,0,0,0,0,2,2,16,8,0.03571,0,0,0.16492817366446794,0.8350718263355336
defect4j,math,org/apache/commons/math/dfp/DfpField,59,541,        if (sig == (radixDigits / 2) * 4) {,2,3,0,2,5,1,0,0,0,5,35,6,0.03571,0,0,0.7058775003335764,0.29412249966642356
defect4j,math,org/apache/commons/math/dfp/DfpField,59,542,          sp = i;,2,0,0,0,0,0,0,0,1,2,7,8,0.03571,0,0,0.15466588329970368,0.8453341167002951
defect4j,math,org/apache/commons/math/dfp/DfpField,59,543,          break;,0,0,0,0,0,1,0,0,0,1,6,2,0.03571,0,0,0.1373908593496032,0.8626091406503953
defect4j,math,org/apache/commons/math/dfp/DfpField,59,546,        if (buf[i] >= '0' && buf[i] <= '9' && !leading) {,1,4,1,1,7,1,0,0,3,7,49,6,0.03571,0,0,0.9824773742502088,0.0175226257497898
defect4j,math,org/apache/commons/math/dfp/DfpField,59,547,            sig ++;,1,0,0,0,0,0,0,0,1,2,7,8,0.03571,0,0,0.140615743682194,0.8593842563178069
defect4j,math,org/apache/commons/math/dfp/DfpField,59,551,"      result[0] = new Dfp(this, new String(buf, 0, sp));",2,0,1,0,6,3,0,2,3,6,50,4,0.03571,0,0,0.9967015421771641,0.003298457822836421
defect4j,math,org/apache/commons/math/dfp/DfpField,59,553,      for (int i = 0; i < buf.length; i++) {,5,1,0,1,3,2,0,0,1,6,38,4,0.03571,0,0,0.6601284189350168,0.3398715810649837
defect4j,math,org/apache/commons/math/dfp/DfpField,59,554,        buf[i] = a.charAt(i);,0,0,1,1,4,0,3,0,1,5,21,6,0.03571,0,0,0.5412754972749511,0.4587245027250505
defect4j,math,org/apache/commons/math/dfp/DfpField,59,555,        if (buf[i] >= '0' && buf[i] <= '9' && i < sp) {,2,5,1,1,7,1,0,0,2,7,47,6,0.03571,0,0,0.9964124915414595,0.0035875084585389977
defect4j,math,org/apache/commons/math/dfp/DfpField,59,556,            buf[i] = '0';,0,0,1,0,2,0,0,0,2,3,13,8,0.03571,0,0,0.508135397580034,0.4918646024199662
defect4j,math,org/apache/commons/math/dfp/DfpField,59,560,"      result[1] = new Dfp(this, new String(buf));",1,0,1,1,6,3,0,2,3,7,43,4,0.03571,0,0,0.996204896659001,0.0037951033409972237
defect4j,math,org/apache/commons/math/dfp/DfpField,59,562,      return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.03571,0,0,0.16616003375346228,0.8338399662465388
defect4j,math,org/apache/commons/math/dfp/DfpField,59,570,        if (sqr2String == null || sqr2String.length() < highPrecisionDecimalDigits - 3) {,2,4,0,2,5,1,2,0,0,6,81,4,0.03571,0,0,0.9572553193360738,0.042744680663924985
defect4j,math,org/apache/commons/math/dfp/DfpField,59,573,"            final DfpField highPrecisionField = new DfpField(highPrecisionDecimalDigits, false);",2,0,0,0,2,2,0,2,3,5,84,6,0.03571,0,0,0.9908629866800429,0.0091370133199581
defect4j,math,org/apache/commons/math/dfp/DfpField,59,574,"            final Dfp highPrecisionOne        = new Dfp(highPrecisionField, 1);",2,0,0,0,2,2,0,2,2,5,67,6,0.03571,0,0,0.9827021099914014,0.01729789000859699
defect4j,math,org/apache/commons/math/dfp/DfpField,59,575,"            final Dfp highPrecisionTwo        = new Dfp(highPrecisionField, 2);",2,0,0,0,2,2,0,2,2,5,67,6,0.03571,0,0,0.9827021099914014,0.01729789000859699
defect4j,math,org/apache/commons/math/dfp/DfpField,59,576,"            final Dfp highPrecisionThree      = new Dfp(highPrecisionField, 3);",2,0,0,0,2,2,0,2,2,5,67,6,0.03571,0,0,0.9827021099914014,0.01729789000859699
defect4j,math,org/apache/commons/math/dfp/DfpField,59,578,            final Dfp highPrecisionSqr2 = highPrecisionTwo.sqrt();,1,0,0,1,2,1,2,1,1,7,54,6,0.03571,0,0,0.5182125443310875,0.4817874556689141
defect4j,math,org/apache/commons/math/dfp/DfpField,59,579,            sqr2String           = highPrecisionSqr2.toString();,1,0,0,1,2,0,2,0,1,5,52,6,0.03571,0,0,0.34265713445737656,0.6573428655426233
defect4j,math,org/apache/commons/math/dfp/DfpField,59,580,            sqr2ReciprocalString = highPrecisionOne.divide(highPrecisionSqr2).toString();,1,0,0,1,4,0,4,0,1,5,77,6,0.03571,0,0,0.2878920155046445,0.7121079844953567
defect4j,math,org/apache/commons/math/dfp/DfpField,59,582,            final Dfp highPrecisionSqr3 = highPrecisionThree.sqrt();,1,0,0,1,2,1,2,1,1,7,56,6,0.03571,0,0,0.5255766052874208,0.47442339471257955
defect4j,math,org/apache/commons/math/dfp/DfpField,59,583,            sqr3String           = highPrecisionSqr3.toString();,1,0,0,1,2,0,2,0,1,5,52,6,0.03571,0,0,0.34265713445737656,0.6573428655426233
defect4j,math,org/apache/commons/math/dfp/DfpField,59,584,            sqr3ReciprocalString = highPrecisionOne.divide(highPrecisionSqr3).toString();,1,0,0,1,4,0,4,0,1,5,77,6,0.03571,0,0,0.2878920155046445,0.7121079844953567
defect4j,math,org/apache/commons/math/dfp/DfpField,59,586,"            piString   = computePi(highPrecisionOne, highPrecisionTwo, highPrecisionThree).toString();",1,0,0,1,4,0,5,0,2,5,90,6,0.03571,0,0,0.28148496026284614,0.718515039737152
defect4j,math,org/apache/commons/math/dfp/DfpField,59,587,"            eString    = computeExp(highPrecisionOne, highPrecisionOne).toString();",1,0,0,1,4,0,4,0,2,5,71,6,0.03571,0,0,0.3039676329344443,0.6960323670655553
defect4j,math,org/apache/commons/math/dfp/DfpField,59,588,"            ln2String  = computeLn(highPrecisionTwo, highPrecisionOne, highPrecisionTwo).toString();",1,0,0,1,4,0,5,0,2,5,88,6,0.03571,0,0,0.27018981798306396,0.7298101820169366
defect4j,math,org/apache/commons/math/dfp/DfpField,59,589,"            ln5String  = computeLn(new Dfp(highPrecisionField, 5),  highPrecisionOne, highPrecisionTwo).toString();",2,0,0,1,6,1,4,1,3,7,103,6,0.03571,0,0,0.7532738977546716,0.24672610224532976
defect4j,math,org/apache/commons/math/dfp/DfpField,59,590,"            ln10String = computeLn(new Dfp(highPrecisionField, 10), highPrecisionOne, highPrecisionTwo).toString();",2,0,0,1,6,1,4,1,3,7,103,6,0.03571,0,0,0.7532738977546716,0.24672610224532976
defect4j,math,org/apache/commons/math/dfp/DfpField,59,593,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03571,0,0,0.15799645565818587,0.8420035443418147
defect4j,math,org/apache/commons/math/dfp/DfpField,59,603,        Dfp sqrt2   = two.sqrt();,1,0,0,1,2,0,2,1,0,5,25,4,0.03571,0,0,0.5089932070182098,0.49100679298178923
defect4j,math,org/apache/commons/math/dfp/DfpField,59,604,        Dfp yk      = sqrt2.subtract(one);,1,0,0,1,2,0,3,1,0,5,34,4,0.03571,0,0,0.44845121924916687,0.5515487807508317
defect4j,math,org/apache/commons/math/dfp/DfpField,59,605,        Dfp four    = two.add(two);,1,0,0,1,2,0,3,1,0,5,27,4,0.03571,0,0,0.43978519392351856,0.5602148060764812
defect4j,math,org/apache/commons/math/dfp/DfpField,59,606,        Dfp two2kp3 = two;,2,0,0,0,0,0,0,1,0,2,18,4,0.03571,0,0,0.3722387746441914,0.6277612253558069
defect4j,math,org/apache/commons/math/dfp/DfpField,59,607,        Dfp ak      = two.multiply(three.subtract(two.multiply(sqrt2)));,1,0,0,3,6,0,7,1,0,5,64,4,0.03571,0,0,0.11566754183041214,0.8843324581695896
defect4j,math,org/apache/commons/math/dfp/DfpField,59,615,        for (int i = 1; i < 20; i++) {,3,1,0,1,3,2,0,0,1,6,30,4,0.03571,0,0,0.45768306384719687,0.5423169361528024
defect4j,math,org/apache/commons/math/dfp/DfpField,59,616,            final Dfp ykM1 = yk;,2,0,0,0,0,1,0,1,1,4,20,6,0.03571,0,0,0.45674872970554353,0.5432512702944571
defect4j,math,org/apache/commons/math/dfp/DfpField,59,618,            final Dfp y2         = yk.multiply(yk);,1,0,0,1,2,1,3,1,1,7,39,6,0.03571,0,0,0.4055887420697511,0.594411257930249
defect4j,math,org/apache/commons/math/dfp/DfpField,59,619,            final Dfp oneMinusY4 = one.subtract(y2.multiply(y2));,1,0,0,2,4,1,5,1,1,7,53,6,0.03571,0,0,0.25659739235150997,0.743402607648489
defect4j,math,org/apache/commons/math/dfp/DfpField,59,620,            final Dfp s          = oneMinusY4.sqrt().sqrt();,1,0,0,1,4,1,3,1,1,7,48,6,0.03571,0,0,0.42786283020951793,0.5721371697904833
defect4j,math,org/apache/commons/math/dfp/DfpField,59,621,            yk = one.subtract(s).divide(one.add(s));,1,0,0,2,6,0,7,0,1,5,40,6,0.03571,0,0,0.028827233319530573,0.9711727666804713
defect4j,math,org/apache/commons/math/dfp/DfpField,59,623,            two2kp3 = two2kp3.multiply(four);,1,0,0,1,2,0,3,0,1,5,33,6,0.03571,0,0,0.24566325357599986,0.7543367464239994
defect4j,math,org/apache/commons/math/dfp/DfpField,59,625,            final Dfp p = one.add(yk);,1,0,0,1,2,1,3,1,1,7,26,6,0.03571,0,0,0.3875168012173876,0.612483198782614
defect4j,math,org/apache/commons/math/dfp/DfpField,59,626,            final Dfp p2 = p.multiply(p);,1,0,0,1,2,1,3,1,1,7,29,6,0.03571,0,0,0.3902416417718776,0.6097583582281235
defect4j,math,org/apache/commons/math/dfp/DfpField,59,627,            ak = ak.multiply(p2.multiply(p2)).subtract(two2kp3.multiply(yk).multiply(one.add(yk).add(yk.multiply(yk))));,1,0,0,4,16,0,17,0,1,5,108,6,0.03571,0,0,1.02919549619395e-08,0.9999999897080443
defect4j,math,org/apache/commons/math/dfp/DfpField,59,629,            if (yk.equals(ykM1)) {,0,0,0,2,5,1,3,0,0,4,22,7,0.03571,0,0,0.17398157960387872,0.8260184203961203
defect4j,math,org/apache/commons/math/dfp/DfpField,59,630,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.03571,0,0,0.1373908593496032,0.8626091406503953
defect4j,math,org/apache/commons/math/dfp/DfpField,59,634,        return one.divide(ak);,0,0,0,1,2,1,3,0,0,4,22,5,0.03571,0,0,0.18612087779396166,0.8138791222060378
defect4j,math,org/apache/commons/math/dfp/DfpField,59,645,        Dfp y  = new Dfp(one);,2,0,0,1,2,1,0,2,1,6,22,4,0.03571,0,0,0.9769298768077233,0.023070123192277622
defect4j,math,org/apache/commons/math/dfp/DfpField,59,646,        Dfp py = new Dfp(one);,2,0,0,1,2,1,0,2,1,6,22,4,0.03571,0,0,0.9769298768077233,0.023070123192277622
defect4j,math,org/apache/commons/math/dfp/DfpField,59,647,        Dfp f  = new Dfp(one);,2,0,0,1,2,1,0,2,1,6,22,4,0.03571,0,0,0.9769298768077233,0.023070123192277622
defect4j,math,org/apache/commons/math/dfp/DfpField,59,648,        Dfp fi = new Dfp(one);,2,0,0,1,2,1,0,2,1,6,22,4,0.03571,0,0,0.9769298768077233,0.023070123192277622
defect4j,math,org/apache/commons/math/dfp/DfpField,59,649,        Dfp x  = new Dfp(one);,2,0,0,1,2,1,0,2,1,6,22,4,0.03571,0,0,0.9769298768077233,0.023070123192277622
defect4j,math,org/apache/commons/math/dfp/DfpField,59,651,        for (int i = 0; i < 10000; i++) {,3,1,0,1,3,2,0,0,1,6,33,4,0.03571,0,0,0.46171598123865903,0.5382840187613417
defect4j,math,org/apache/commons/math/dfp/DfpField,59,652,            x = x.multiply(a);,1,0,0,1,2,0,3,0,1,5,18,6,0.03571,0,0,0.2373475632547396,0.7626524367452612
defect4j,math,org/apache/commons/math/dfp/DfpField,59,653,            y = y.add(x.divide(f));,1,0,0,2,4,0,5,0,1,5,23,6,0.03571,0,0,0.11919510312790467,0.8808048968720966
defect4j,math,org/apache/commons/math/dfp/DfpField,59,654,            fi = fi.add(one);,1,0,0,1,2,0,3,0,1,5,17,6,0.03571,0,0,0.23737551015872388,0.7626244898412768
defect4j,math,org/apache/commons/math/dfp/DfpField,59,655,            f = f.multiply(fi);,1,0,0,1,2,0,3,0,1,5,19,6,0.03571,0,0,0.2373915965144892,0.7626084034855102
defect4j,math,org/apache/commons/math/dfp/DfpField,59,656,            if (y.equals(py)) {,0,0,0,2,5,1,3,0,0,4,19,7,0.03571,0,0,0.17353429919592844,0.8264657008040714
defect4j,math,org/apache/commons/math/dfp/DfpField,59,657,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.03571,0,0,0.1373908593496032,0.8626091406503953
defect4j,math,org/apache/commons/math/dfp/DfpField,59,659,            py = new Dfp(y);,2,0,0,1,2,1,0,1,2,6,16,6,0.03571,0,0,0.5779269916885357,0.4220730083114645
defect4j,math,org/apache/commons/math/dfp/DfpField,59,662,        return y;,1,0,0,0,0,1,0,0,0,2,9,4,0.03571,0,0,0.16792720724844348,0.8320727927515567
defect4j,math,org/apache/commons/math/dfp/DfpField,59,728,        int den = 1;,1,0,0,0,0,1,0,0,0,2,12,5,0.03571,0,0,0.15252526965949917,0.8474747303405024
defect4j,math,org/apache/commons/math/dfp/DfpField,59,729,"        Dfp x = a.add(new Dfp(a.getField(), -1)).divide(a.add(one));",1,0,0,2,10,1,8,2,2,7,60,4,0.03571,0,0,0.5641925548842959,0.4358074451157038
defect4j,math,org/apache/commons/math/dfp/DfpField,59,731,        Dfp y = new Dfp(x);,2,0,0,1,2,1,0,2,1,6,19,4,0.03571,0,0,0.9768595555127849,0.02314044448721388
defect4j,math,org/apache/commons/math/dfp/DfpField,59,732,        Dfp num = new Dfp(x);,2,0,0,1,2,1,0,2,1,6,21,4,0.03571,0,0,0.976897487297625,0.02310251270237342
defect4j,math,org/apache/commons/math/dfp/DfpField,59,733,        Dfp py = new Dfp(y);,2,0,0,1,2,1,0,2,1,6,20,4,0.03571,0,0,0.9768740379817908,0.023125962018209135
defect4j,math,org/apache/commons/math/dfp/DfpField,59,734,        for (int i = 0; i < 10000; i++) {,3,1,0,1,3,2,0,0,1,6,33,4,0.03571,0,0,0.46171598123865903,0.5382840187613417
defect4j,math,org/apache/commons/math/dfp/DfpField,59,735,            num = num.multiply(x);,1,0,0,1,2,0,3,0,1,5,22,6,0.03571,0,0,0.23795607859679557,0.762043921403204
defect4j,math,org/apache/commons/math/dfp/DfpField,59,736,            num = num.multiply(x);,1,0,0,1,2,0,3,0,1,5,22,6,0.03571,0,0,0.23795607859679557,0.762043921403204
defect4j,math,org/apache/commons/math/dfp/DfpField,59,737,            den = den + 2;,2,1,0,0,0,0,0,0,1,3,14,6,0.03571,0,0,0.2704446215399054,0.7295553784600954
defect4j,math,org/apache/commons/math/dfp/DfpField,59,738,            Dfp t = num.divide(den);,1,0,0,1,2,0,3,1,0,5,24,6,0.03571,0,0,0.38262705903332833,0.6173729409666728
defect4j,math,org/apache/commons/math/dfp/DfpField,59,739,            y = y.add(t);,1,0,0,1,2,0,3,0,1,5,13,6,0.03571,0,0,0.23820812589999696,0.7617918741000037
defect4j,math,org/apache/commons/math/dfp/DfpField,59,740,            if (y.equals(py)) {,0,0,0,2,5,1,3,0,0,4,19,7,0.03571,0,0,0.17353429919592844,0.8264657008040714
defect4j,math,org/apache/commons/math/dfp/DfpField,59,741,                break;,0,0,0,0,0,1,0,0,0,1,6,2,0.03571,0,0,0.1373908593496032,0.8626091406503953
defect4j,math,org/apache/commons/math/dfp/DfpField,59,743,            py = new Dfp(y);,2,0,0,1,2,1,0,1,2,6,16,6,0.03571,0,0,0.5779269916885357,0.4220730083114645
defect4j,math,org/apache/commons/math/dfp/DfpField,59,746,        return y.multiply(two);,0,0,0,1,2,1,3,0,0,4,23,5,0.03571,0,0,0.18639881516404,0.8136011848359592
defect4j,math,org/apache/commons/math/dfp/DfpField,59,29,    public enum RoundingMode {,1,0,0,0,1,2,0,0,1,4,26,2,0.03571,0,0,0.32077775948553566,0.6792222405144641
defect4j,math,org/apache/commons/math/dfp/DfpField,59,32,"        ROUND_DOWN,",1,0,0,0,0,0,0,0,0,1,11,3,0.03571,0,0,0.1425127734530828,0.8574872265469168
defect4j,math,org/apache/commons/math/dfp/DfpField,59,35,"        ROUND_UP,",1,0,0,0,0,0,0,0,0,1,9,3,0.03571,0,0,0.14328109687376617,0.8567189031262351
defect4j,math,org/apache/commons/math/dfp/DfpField,59,38,"        ROUND_HALF_UP,",1,0,0,0,0,0,0,0,0,1,14,3,0.03571,0,0,0.1417291076619281,0.8582708923380702
defect4j,math,org/apache/commons/math/dfp/DfpField,59,41,"        ROUND_HALF_DOWN,",1,0,0,0,0,0,0,0,0,1,16,3,0.03571,0,0,0.14144993655980326,0.858550063440195
defect4j,math,org/apache/commons/math/dfp/DfpField,59,46,"        ROUND_HALF_EVEN,",1,0,0,0,0,0,0,0,0,1,16,3,0.03571,0,0,0.14144993655980326,0.858550063440195
defect4j,math,org/apache/commons/math/dfp/DfpField,59,49,"        ROUND_HALF_ODD,",1,0,0,0,0,0,0,0,0,1,15,3,0.03571,0,0,0.14156530211311658,0.8584346978868829
defect4j,math,org/apache/commons/math/dfp/DfpField,59,52,"        ROUND_CEIL,",1,0,0,0,0,0,0,0,0,1,11,3,0.03571,0,0,0.1425127734530828,0.8574872265469168
defect4j,math,org/apache/commons/math/dfp/DfpField,59,55,        ROUND_FLOOR;,1,0,0,0,0,0,0,0,0,1,12,3,0.03571,0,0,0.14220264082561151,0.8577973591743869
defect4j,math,org/apache/commons/math/dfp/Dfp,59,202,"        this(field, (long) x);",2,0,0,1,4,2,0,0,0,4,22,4,0.03571,0,0,0.29474281424939963,0.7052571857506001
defect4j,math,org/apache/commons/math/dfp/Dfp,59,203,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03571,0,0,0.15799645565818587,0.8420035443418147
defect4j,math,org/apache/commons/math/dfp/Dfp,59,209,"    protected Dfp(final DfpField field, long x) {",3,0,0,0,3,3,0,1,2,5,45,2,0.03571,0,0,0.7309808637411805,0.2690191362588206
defect4j,math,org/apache/commons/math/dfp/Dfp,59,212,        mant = new int[field.getRadixDigits()];,1,0,0,1,4,2,2,0,1,6,39,4,0.03571,0,0,0.3351740936574787,0.6648259063425211
defect4j,math,org/apache/commons/math/dfp/Dfp,59,213,        nans = FINITE;,2,0,0,0,0,0,0,0,1,2,14,4,0.03571,0,0,0.23128643816682554,0.7687135618331754
defect4j,math,org/apache/commons/math/dfp/Dfp,59,214,        this.field = field;,2,0,0,0,0,1,0,0,1,3,19,4,0.03571,0,0,0.2651329328966836,0.734867067103316
defect4j,math,org/apache/commons/math/dfp/Dfp,59,216,        boolean isLongMin = false;,1,0,0,0,0,1,0,0,1,3,26,5,0.03571,0,0,0.22722091502678646,0.772779084973214
defect4j,math,org/apache/commons/math/dfp/Dfp,59,217,        if (x == Long.MIN_VALUE) {,3,1,0,1,3,1,0,0,0,5,26,4,0.03571,0,0,0.4090011605294539,0.5909988394705468
defect4j,math,org/apache/commons/math/dfp/Dfp,59,225,        if (x < 0) {,1,1,0,1,3,1,0,0,0,5,12,4,0.03571,0,0,0.3297103812602119,0.6702896187397891
defect4j,math,org/apache/commons/math/dfp/Dfp,59,226,            sign = -1;,1,0,0,0,0,0,0,0,2,2,10,6,0.03571,0,0,0.21087215017970637,0.7891278498202943
defect4j,math,org/apache/commons/math/dfp/Dfp,59,227,            x = -x;,2,0,0,0,0,0,0,0,2,2,7,6,0.03571,0,0,0.23205267560371876,0.7679473243962821
defect4j,math,org/apache/commons/math/dfp/Dfp,59,229,            sign = 1;,1,0,0,0,0,0,0,0,1,2,9,6,0.03571,0,0,0.1783773691640355,0.8216226308359644
defect4j,math,org/apache/commons/math/dfp/Dfp,59,232,        exp = 0;,1,0,0,0,0,0,0,0,1,2,8,4,0.03571,0,0,0.21478026562326752,0.7852197343767332
defect4j,math,org/apache/commons/math/dfp/Dfp,59,233,        while (x != 0) {,1,1,0,1,3,1,0,0,0,5,16,4,0.03571,0,0,0.3283450755210443,0.6716549244789553
defect4j,math,org/apache/commons/math/dfp/Dfp,59,234,"            System.arraycopy(mant, mant.length - exp, mant, mant.length - 1 - exp, exp);",6,2,0,0,2,0,5,0,0,4,76,7,0.03571,0,0,0.5675139830798517,0.4324860169201499
defect4j,math,org/apache/commons/math/dfp/Dfp,59,235,            mant[mant.length - 1] = (int) (x % RADIX);,4,2,1,1,6,1,0,0,1,7,42,6,0.03571,0,0,0.8644853159991244,0.13551468400087602
defect4j,math,org/apache/commons/math/dfp/Dfp,59,236,            x /= RADIX;,2,0,0,0,0,0,0,0,1,2,11,6,0.03571,0,0,0.19435879245685794,0.805641207543142
defect4j,math,org/apache/commons/math/dfp/Dfp,59,237,            exp++;,1,0,0,0,0,0,0,0,1,2,6,6,0.03571,0,0,0.1802007724803471,0.8197992275196535
defect4j,math,org/apache/commons/math/dfp/Dfp,59,240,        if (isLongMin) {,1,0,0,1,3,1,0,0,0,4,16,4,0.03571,0,0,0.2759175415344026,0.7240824584655969
defect4j,math,org/apache/commons/math/dfp/Dfp,59,250,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03571,0,0,0.15799645565818587,0.8420035443418147
defect4j,math,org/apache/commons/math/dfp/Dfp,59,318,    public Dfp(final Dfp d) {,2,0,0,1,3,2,0,1,2,6,25,2,0.03571,0,0,0.6665925794648324,0.3334074205351666
defect4j,math,org/apache/commons/math/dfp/Dfp,59,319,        mant  = d.mant.clone();,3,0,0,1,2,0,1,0,1,5,23,4,0.03571,0,0,0.45530663853485415,0.544693361465145
defect4j,math,org/apache/commons/math/dfp/Dfp,59,320,        sign  = d.sign;,3,0,0,0,0,0,0,0,1,2,15,4,0.03571,0,0,0.2731063647077726,0.7268936352922292
defect4j,math,org/apache/commons/math/dfp/Dfp,59,321,        exp   = d.exp;,3,0,0,0,0,0,0,0,1,2,14,4,0.03571,0,0,0.2733739056280049,0.7266260943719963
defect4j,math,org/apache/commons/math/dfp/Dfp,59,322,        nans  = d.nans;,3,0,0,0,0,0,0,0,1,2,15,4,0.03571,0,0,0.2731063647077726,0.7268936352922292
defect4j,math,org/apache/commons/math/dfp/Dfp,59,323,        field = d.field;,3,0,0,0,0,0,0,0,1,2,16,4,0.03571,0,0,0.2729178830933461,0.7270821169066538
defect4j,math,org/apache/commons/math/dfp/Dfp,59,324,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03571,0,0,0.15799645565818587,0.8420035443418147
defect4j,math,org/apache/commons/math/dfp/Dfp,59,330,"    protected Dfp(final DfpField field, final String s) {",3,0,0,0,3,3,0,2,3,5,53,2,0.03571,0,0,0.9915771723048309,0.008422827695169928
defect4j,math,org/apache/commons/math/dfp/Dfp,59,333,        mant = new int[field.getRadixDigits()];,1,0,0,1,4,2,2,0,1,6,39,4,0.03571,0,0,0.3351740936574787,0.6648259063425211
defect4j,math,org/apache/commons/math/dfp/Dfp,59,334,        sign = 1;,1,0,0,0,0,0,0,0,1,2,9,4,0.03571,0,0,0.21415135955431985,0.7858486404456818
defect4j,math,org/apache/commons/math/dfp/Dfp,59,335,        exp = 0;,1,0,0,0,0,0,0,0,1,2,8,4,0.03571,0,0,0.21478026562326752,0.7852197343767332
defect4j,math,org/apache/commons/math/dfp/Dfp,59,336,        nans = FINITE;,2,0,0,0,0,0,0,0,1,2,14,4,0.03571,0,0,0.23128643816682554,0.7687135618331754
defect4j,math,org/apache/commons/math/dfp/Dfp,59,337,        this.field = field;,2,0,0,0,0,1,0,0,1,3,19,4,0.03571,0,0,0.2651329328966836,0.734867067103316
defect4j,math,org/apache/commons/math/dfp/Dfp,59,339,        boolean decimalFound = false;,1,0,0,0,0,1,0,0,1,3,29,5,0.03571,0,0,0.22924049005510283,0.7707595099448972
