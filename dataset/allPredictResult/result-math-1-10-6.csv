dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,196,"    NOT_POSITIVE_UPPER_BOUND(""upper bound must be positive ({0})""),",2,0,0,3,6,0,0,0,0,3,63,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,197,"    NOT_POSITIVE_WINDOW_SIZE(""window size must be positive ({0})""),",0,0,0,3,6,0,0,0,0,9,63,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,198,"    NOT_POWER_OF_TWO(""{0} is not a power of 2""),",2,0,0,2,4,0,0,0,0,3,44,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,199,"    NOT_POWER_OF_TWO_CONSIDER_PADDING(""{0} is not a power of 2, consider padding for fix""),",2,0,0,2,4,0,0,0,0,3,87,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,200,"    NOT_POWER_OF_TWO_PLUS_ONE(""{0} is not a power of 2 plus one""),",2,0,0,2,4,0,0,0,0,3,62,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,201,"    NOT_STRICTLY_DECREASING_NUMBER_OF_POINTS(""points {0} and {1} are not strictly decreasing ({2} <= {3})""),",0,0,0,6,12,0,0,0,0,18,104,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,202,"    NOT_STRICTLY_DECREASING_SEQUENCE(""points {3} and {2} are not strictly decreasing ({1} <= {0})""), /* keep */",0,0,0,6,12,0,0,0,0,18,107,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,203,"    NOT_STRICTLY_INCREASING_KNOT_VALUES(""knot values must be strictly increasing""),",2,0,0,1,2,0,0,0,0,3,79,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,204,"    NOT_STRICTLY_INCREASING_NUMBER_OF_POINTS(""points {0} and {1} are not strictly increasing ({2} >= {3})""),",4,0,0,6,12,0,0,0,0,7,104,0,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,205,"    NOT_STRICTLY_INCREASING_SEQUENCE(""points {3} and {2} are not strictly increasing ({1} >= {0})""), /* keep */",2,0,0,6,12,0,0,0,0,3,107,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,206,"    NOT_SUBTRACTION_COMPATIBLE_MATRICES(""{0}x{1} and {2}x{3} matrices are not subtraction compatible""),",2,0,0,5,10,0,0,0,0,3,99,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,207,"    NOT_SYMMETRIC_MATRIX(""not symmetric matrix""),",2,0,0,1,2,0,0,0,0,3,45,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,208,"    NO_BIN_SELECTED(""no bin selected""),",2,0,0,1,2,0,4,0,0,7,35,0,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,209,"    NO_CONVERGENCE_WITH_ANY_START_POINT(""none of the {0} start points lead to convergence""), /* keep */",2,0,0,2,4,0,0,0,0,3,99,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,210,"    NO_DATA(""no data""), /* keep */",2,0,0,1,2,0,0,0,0,3,30,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,211,"    NO_DEGREES_OF_FREEDOM(""no degrees of freedom ({0} measurements, {1} parameters)""),",0,0,0,4,8,0,0,0,0,12,82,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,212,"    NO_DENSITY_FOR_THIS_DISTRIBUTION(""This distribution does not have a density function implemented""),",4,0,0,1,2,1,4,0,0,10,99,0,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,213,"    NO_FEASIBLE_SOLUTION(""no feasible solution""),",2,0,0,1,2,0,0,0,0,3,45,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,214,"    NO_OPTIMUM_COMPUTED_YET(""no optimum computed yet""), /* keep */",2,0,0,1,2,0,0,0,0,3,62,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,215,"    NO_RESULT_AVAILABLE(""no result available""),",10,1,0,1,2,1,6,2,0,21,43,0,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,216,"    NO_SUCH_MATRIX_ENTRY(""no entry at indices ({0}, {1}) in a {2}x{3} matrix""),",2,0,0,6,12,0,0,0,0,3,75,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,217,"    NULL_NOT_ALLOWED(""null is not allowed""), /* keep */",4,1,0,1,2,0,0,0,0,6,51,0,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,218,"    COVARIANCE_MATRIX(""covariance matrix""), /* keep */",2,0,0,1,2,0,0,0,0,3,50,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,219,"    DENOMINATOR(""denominator""), /* keep */",2,0,0,1,2,0,0,0,0,3,38,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,220,"    DENOMINATOR_FORMAT(""denominator format""), /* keep */",0,0,0,1,2,0,0,0,0,3,52,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,221,"    FRACTION(""fraction""), /* keep */",0,0,0,1,2,0,0,0,0,3,32,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,222,"    FUNCTION(""function""), /* keep */",2,0,0,1,2,0,0,0,0,3,32,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,223,"    IMAGINARY_FORMAT(""imaginary format""), /* keep */",2,0,0,1,2,0,0,0,0,3,48,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,224,"    INPUT_ARRAY(""input array""), /* keep */",2,0,1,1,2,0,0,0,0,8,38,0,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,225,"    NUMERATOR(""numerator""), /* keep */",2,0,0,1,2,0,0,0,0,3,34,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,226,"    NUMERATOR_FORMAT(""numerator format""), /* keep */",0,0,0,1,2,0,0,0,0,3,48,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,227,"    OBJECT_TRANSFORMATION(""conversion exception in transformation""), /* keep */",0,0,0,1,2,0,0,0,0,3,75,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,228,"    REAL_FORMAT(""real format""), /* keep */",2,0,0,1,2,0,4,0,0,7,38,0,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,229,"    WHOLE_FORMAT(""whole format""), /* keep */",2,0,0,1,2,0,0,0,0,3,40,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,230,"    NUMBER_TOO_LARGE(""{0} is larger than the maximum ({1})""), /* keep */",0,0,0,4,8,0,0,0,0,12,68,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,231,"    NUMBER_TOO_SMALL(""{0} is smaller than the minimum ({1})""), /* keep */",4,0,0,4,8,0,0,0,0,6,69,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,232,"    NUMBER_TOO_LARGE_BOUND_EXCLUDED(""{0} is larger than, or equal to, the maximum ({1})""), /* keep */",2,0,0,4,8,0,0,0,0,3,97,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,233,"    NUMBER_TOO_SMALL_BOUND_EXCLUDED(""{0} is smaller than, or equal to, the minimum ({1})""), /* keep */",2,0,0,4,8,0,0,0,0,3,98,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,234,"    NUMBER_OF_SUCCESS_LARGER_THAN_POPULATION_SIZE(""number of successes ({0}) must be less than or equal to population size ({1})""),",4,0,0,5,10,0,0,0,0,6,127,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,235,"    NUMERATOR_OVERFLOW_AFTER_MULTIPLY(""overflow, numerator too large after multiply: {0}""),",2,0,0,2,4,0,0,0,0,3,87,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,236,"    N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED(""{0} points Legendre-Gauss integrator not supported, number of points must be in the {1}-{2} range""),",2,0,0,4,8,0,0,0,0,3,150,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,237,"    OBSERVED_COUNTS_ALL_ZERO(""observed counts are all 0 in observed array {0}""),",2,0,0,2,4,0,0,0,0,3,76,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,238,"    OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY(""observed counts are both zero for entry {0}""),",2,0,0,2,4,0,0,0,0,3,84,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,239,"    OUT_OF_BOUNDS_QUANTILE_VALUE(""out of bounds quantile value: {0}, must be in (0, 100]""),",2,0,0,3,6,0,0,0,0,3,87,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,240,"    OUT_OF_BOUND_SIGNIFICANCE_LEVEL(""out of bounds significance level {0}, must be between {1} and {2}""),",2,0,0,4,8,0,0,0,0,3,101,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,241,"    OUT_OF_ORDER_ABSCISSA_ARRAY(""the abscissae array must be sorted in a strictly increasing order, but the {0}-th element is {1} whereas {2}-th is {3}""),",2,0,0,5,10,0,0,0,0,3,150,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,242,"    OUT_OF_RANGE_ROOT_OF_UNITY_INDEX(""out of range root of unity index {0} (must be in [{1};{2}])""),",0,0,0,6,12,0,0,0,0,18,96,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,243,"    OUT_OF_RANGE_SIMPLE(""{0} out of [{1}, {2}] range""), /* keep */",2,0,0,5,10,0,0,0,0,3,62,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,244,"    OVERFLOW_IN_FRACTION(""overflow in fraction {0}/{1}, cannot negate""),",0,0,0,3,6,0,0,0,0,9,68,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,245,"    OVERFLOW_IN_ADDITION(""overflow in addition: {0} + {1}""),",2,0,0,3,6,0,0,0,0,3,56,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,246,"    OVERFLOW_IN_SUBTRACTION(""overflow in subtraction: {0} - {1}""),",2,0,0,3,6,0,0,0,0,3,62,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,247,"    PERCENTILE_IMPLEMENTATION_CANNOT_ACCESS_METHOD(""cannot access {0} method in percentile implementation {1}""),",8,1,0,3,6,0,0,0,0,10,108,0,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,248,"    PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD(""percentile implementation {0} does not support {1}""),",2,0,0,3,6,0,0,0,0,3,99,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,249,"    PERMUTATION_EXCEEDS_N(""permutation size ({0}) exceeds permuation domain ({1})""), /* keep */",2,0,0,5,10,0,0,0,0,3,91,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,250,"    POLYNOMIAL_INTERPOLANTS_MISMATCH_SEGMENTS(""number of polynomial interpolants must match the number of segments ({0} != {1} - 1)""),",2,0,0,4,8,0,0,0,0,3,130,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,251,"    POPULATION_LIMIT_NOT_POSITIVE(""population limit has to be positive""),",4,0,0,1,2,0,0,0,0,5,69,0,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,252,"    POSITION_SIZE_MISMATCH_INPUT_ARRAY(""position {0} and size {1} don't fit to the size of the input array {2}""),",2,0,0,4,8,0,0,0,0,3,109,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,253,"    POWER_NEGATIVE_PARAMETERS(""cannot raise an integral value to a negative power ({0}^{1})""),",4,0,0,4,8,1,2,4,0,12,90,0,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,254,"    PROPAGATION_DIRECTION_MISMATCH(""propagation direction mismatch""),",2,0,0,1,2,0,0,0,0,3,65,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,255,"    RANDOMKEY_MUTATION_WRONG_CLASS(""RandomKeyMutation works only with RandomKeys, not {0}""),",0,0,0,2,4,0,0,0,0,6,88,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,256,"    ROOTS_OF_UNITY_NOT_COMPUTED_YET(""roots of unity have not been computed yet""),",2,0,0,1,2,0,0,0,0,3,77,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,257,"    ROTATION_MATRIX_DIMENSIONS(""a {0}x{1} matrix cannot be a rotation matrix""),",2,0,0,3,6,0,0,2,0,6,75,0,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,258,"    ROW_INDEX_OUT_OF_RANGE(""row index {0} out of allowed range [{1}, {2}]""),",2,0,0,5,10,0,0,0,0,3,72,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,259,"    SAME_SIGN_AT_ENDPOINTS(""function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]""),",4,0,0,7,14,1,6,2,0,14,126,0,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,260,"    SAMPLE_SIZE_EXCEEDS_COLLECTION_SIZE(""sample size ({0}) exceeds collection size ({1})""), /* keep */",4,0,0,5,10,0,4,0,0,10,98,0,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,261,"    SAMPLE_SIZE_LARGER_THAN_POPULATION_SIZE(""sample size ({0}) must be less than or equal to population size ({1})""),",2,0,0,5,10,0,0,0,0,3,113,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,262,"    SIMPLEX_NEED_ONE_POINT(""simplex must contain at least one point""),",4,0,0,1,2,0,0,0,0,5,66,0,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,263,"    SIMPLE_MESSAGE(""{0}""),",0,0,0,2,4,0,0,0,0,6,22,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,264,"    SINGULAR_MATRIX(""matrix is singular""),",2,0,0,1,2,0,0,0,0,3,38,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,265,"    SUBARRAY_ENDS_AFTER_ARRAY_END(""subarray ends after array end""),",0,0,0,1,2,0,0,0,0,3,63,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,266,"    TOO_LARGE_CUTOFF_SINGULAR_VALUE(""cutoff singular value is {0}, should be at most {1}""),",2,0,0,3,6,0,0,0,0,3,87,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,267,"    TOO_MANY_ELEMENTS_TO_DISCARD_FROM_ARRAY(""cannot discard {0} elements from a {1} elements array""),",2,0,0,3,6,0,0,0,0,3,97,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,268,"    TOO_SMALL_BANDWIDTH(""the bandwidth must be large enough to accomodate at least 2 points. There are {0}  data points, and bandwidth must be at least {1}  but it is only {2}""),",4,1,0,4,8,0,10,0,0,17,174,0,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,269,"    TOO_SMALL_COST_RELATIVE_TOLERANCE(""cost relative tolerance is too small ({0}), no further reduction in the sum of squares is possible""),",2,0,0,3,6,0,0,0,0,3,136,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,270,"    TOO_SMALL_INTEGRATION_INTERVAL(""too small integration interval: length = {0}""),",2,0,0,2,4,0,0,0,0,3,79,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,271,"    TOO_SMALL_ORTHOGONALITY_TOLERANCE(""orthogonality tolerance is too small ({0}), solution is orthogonal to the jacobian""),",0,0,0,3,6,0,0,0,0,9,120,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,272,"    TOO_SMALL_PARAMETERS_RELATIVE_TOLERANCE(""parameters relative tolerance is too small ({0}), no further improvement in the approximate solution is possible""),",4,0,0,3,6,0,0,0,0,6,156,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,273,"    TWO_OR_MORE_CATEGORIES_REQUIRED(""two or more categories required, got {0}""),",2,0,0,2,4,0,0,0,0,3,76,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,274,"    TWO_OR_MORE_VALUES_IN_CATEGORY_REQUIRED(""two or more values required in each category, one has {0}""),",2,0,0,2,4,0,0,0,0,3,101,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,275,"    UNABLE_TO_BRACKET_OPTIMUM_IN_LINE_SEARCH(""unable to bracket optimum in line search""),",0,0,0,1,2,0,0,0,0,3,85,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,276,"    UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM(""unable to compute covariances: singular problem""),",2,0,0,1,2,0,0,0,0,3,97,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,277,"    UNABLE_TO_FIRST_GUESS_HARMONIC_COEFFICIENTS(""unable to first guess the harmonic coefficients""),",4,0,0,1,2,1,0,0,0,6,95,0,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,278,"    UNABLE_TO_ORTHOGONOLIZE_MATRIX(""unable to orthogonalize matrix in {0} iterations""),",2,0,0,2,4,0,0,0,0,3,83,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,279,"    UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN(""unable to perform Q.R decomposition on the {0}x{1} jacobian matrix""),",2,0,0,3,6,0,0,0,0,3,117,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,280,"    UNABLE_TO_SOLVE_SINGULAR_PROBLEM(""unable to solve: singular problem""),",10,2,0,1,2,3,0,0,0,18,70,0,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,281,"    UNBOUNDED_SOLUTION(""unbounded solution""),",0,0,0,1,2,0,0,0,0,3,41,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,282,"    UNKNOWN_MODE(""unknown mode {0}, known modes: {1} ({2}), {3} ({4}), {5} ({6}), {7} ({8}), {9} ({10}) and {11} ({12})""),",0,0,0,20,40,0,0,0,0,60,118,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,283,"    UNPARSEABLE_3D_VECTOR(""unparseable 3D vector: \""{0}\""""),",2,0,0,2,4,0,0,0,0,3,56,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,284,"    UNPARSEABLE_COMPLEX_NUMBER(""unparseable complex number: \""{0}\""""),",2,0,0,2,4,0,0,0,0,3,66,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,285,"    UNPARSEABLE_FRACTION_NUMBER(""unparseable fraction number: \""{0}\""""),",2,0,0,2,4,0,0,0,0,3,68,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,286,"    UNPARSEABLE_REAL_VECTOR(""unparseable real vector: \""{0}\""""),",2,0,0,2,4,0,0,0,0,3,60,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,287,"    UNSUPPORTED_EXPANSION_MODE(""unsupported expansion mode {0}, supported modes are {1} ({2}) and {3} ({4})""),",2,0,0,8,16,0,0,0,0,3,106,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,288,"    UNSUPPORTED_OPERATION(""unsupported operation""), /* keep */",2,0,0,1,2,0,0,0,0,3,58,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,289,"    URL_CONTAINS_NO_DATA(""URL {0} contains no data""),",4,0,0,2,4,0,0,0,0,5,49,0,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,290,"    VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC(""{0} values have been added before statistic is configured""),",2,0,0,2,4,0,0,0,0,3,103,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,291,"    VECTOR_LENGTH_MISMATCH(""vector length mismatch: got {0} but expected {1}""),",6,0,1,3,6,0,6,2,0,18,75,0,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,292,"    VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT(""vector must have at least one element""),",4,0,0,1,2,1,0,0,0,6,79,0,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,293,"    WEIGHT_AT_LEAST_ONE_NON_ZERO(""weigth array must contain at least one non-zero value""),",2,0,0,1,2,0,0,0,0,3,86,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,294,"    WRONG_BLOCK_LENGTH(""wrong array shape (block length = {0}, expected {1})""),",2,0,0,4,8,0,0,0,0,3,75,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,295,"    WRONG_NUMBER_OF_POINTS(""{0} points are required, got only {1}""),",2,0,0,3,6,0,0,0,0,3,64,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,296,"    NUMBER_OF_POINTS(""number of points ({0})""), /* keep */",2,0,0,3,6,0,0,0,0,3,54,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,297,"    ZERO_DENOMINATOR(""denominator must be different from 0""),",2,0,0,1,2,0,0,0,0,3,57,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,298,"    ZERO_DENOMINATOR_IN_FRACTION(""zero denominator in fraction {0}/{1}""),",2,0,0,3,6,0,0,0,0,3,69,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,299,"    ZERO_FRACTION_TO_DIVIDE_BY(""the fraction to divide by must not be zero: {0}/{1}""),",0,0,0,3,6,0,0,0,0,9,82,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,300,"    ZERO_NORM(""zero norm""),",2,0,0,1,2,0,0,0,0,3,23,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,301,"    ZERO_NORM_FOR_ROTATION_AXIS(""zero norm for rotation axis""),",2,0,0,1,2,0,0,0,0,3,59,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,302,"    ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR(""zero norm for rotation defining vector""),",0,0,0,1,2,0,0,0,0,3,81,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,303,"    ZERO_NOT_ALLOWED(""zero not allowed here"");",2,0,0,1,2,0,0,0,0,3,42,2,1.0,0,0,1
defect4j,math,org/apache/commons/math/exception/util/LocalizedFormats,61,39,public enum LocalizedFormats implements Localizable {,2,0,0,0,1,1,0,2,0,5,53,1,1.0,0,0,0
defect4j,math,org/apache/commons/math/MathRuntimeException,61,387,        return new IllegalArgumentException() {,0,0,0,1,3,1,0,2,0,2,39,6,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,35,    private static final double EXP_INT_TABLE_A[] = new double[1500];,6,0,0,2,4,5,0,0,0,12,65,1,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,40,    private static final double EXP_INT_TABLE_B[] = new double[1500];,2,0,0,2,4,0,0,0,0,2,65,5,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,45,    private static final double EXP_FRAC_TABLE_A[] = new double[1025];,2,0,0,2,4,1,6,2,0,11,66,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,50,    private static final double EXP_FRAC_TABLE_B[] = new double[1025];,2,0,0,2,4,0,0,2,0,4,66,6,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,53,    private static final double FACT[] = new double[20];,2,0,0,2,4,3,0,0,0,5,52,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,56,    private static final double LN_MANT[][] = new double[1024][];,0,0,0,4,8,0,0,0,0,12,61,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,65,    private static final double LN_SPLIT_COEF[][] = {,2,0,0,2,5,3,0,0,0,5,49,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,85,    private static final double LN_QUICK_COEF[][] = {,6,0,0,2,5,5,0,0,0,11,49,1,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,98,    private static final double LN_HI_PREC_COEF[][] = {,2,0,0,2,5,3,0,0,0,5,51,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,108,    private static final double SINE_TABLE_A[] = new double[14];,8,1,0,2,4,3,0,0,0,12,60,1,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,111,    private static final double SINE_TABLE_B[] = new double[14];,2,0,0,2,4,3,0,0,0,5,60,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,114,    private static final double COSINE_TABLE_A[] = new double[14];,0,0,0,2,4,0,0,0,0,6,62,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,117,    private static final double COSINE_TABLE_B[] = new double[14];,2,0,0,2,4,3,0,0,0,5,62,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,120,    private static final double TANGENT_TABLE_A[] = new double[14];,2,0,0,2,4,3,0,0,0,5,63,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,123,    private static final double TANGENT_TABLE_B[] = new double[14];,0,0,0,2,4,0,0,0,0,6,63,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,126,    private static long RECIP_2PI[] = new long[] {,0,0,0,2,5,0,0,0,0,7,46,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,147,    private static long PI_O_4_BITS[] = new long[] {,2,1,0,2,5,2,8,0,0,13,48,1,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,155,"    private static final double EIGHTHES[] = {0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 1.125, 1.25, 1.375, 1.5, 1.625};",6,0,0,2,4,3,0,2,0,11,127,1,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,158,"    private static final double CBRTTWO[] = { 0.6299605249474366,",2,0,0,1,3,3,0,0,0,5,61,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,169,        FACT[0] = 1.0;,6,0,1,1,2,0,0,0,0,9,14,1,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,170,        for (i = 1; i < 20; i++) {,0,0,0,1,3,0,0,0,0,4,26,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,171,            FACT[i] = FACT[i-1] * i;,4,2,1,2,4,0,0,0,0,13,24,6,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,174,        double tmp[] = new double[2];,2,0,0,2,4,0,0,0,0,2,29,5,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,175,        double recip[] = new double[2];,2,0,0,2,4,0,0,0,0,2,31,5,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,178,        for (i = 0; i < 750; i++) {,6,1,0,1,3,0,0,0,0,9,27,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,179,"            expint(i, tmp);",2,0,1,1,2,0,0,0,0,6,15,9,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,180,            EXP_INT_TABLE_A[i+750] = tmp[0];,0,0,0,2,4,0,0,0,0,6,32,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,181,            EXP_INT_TABLE_B[i+750] = tmp[1];,0,0,0,2,4,0,0,0,0,6,32,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,183,            if (i != 0) {,2,1,0,1,3,0,0,0,0,3,13,6,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,185,"                splitReciprocal(tmp, recip);",0,0,0,1,2,0,0,0,0,3,28,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,186,                EXP_INT_TABLE_A[750-i] = recip[0];,2,1,1,2,4,0,0,0,0,8,34,8,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,187,                EXP_INT_TABLE_B[750-i] = recip[1];,0,0,0,2,4,0,0,0,0,6,34,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,192,        for (i = 0; i < 1025; i++) {,6,1,0,1,3,0,0,0,0,9,28,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,193,"            slowexp(i/1024.0, tmp);",0,0,0,1,2,0,0,0,0,3,23,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,194,            EXP_FRAC_TABLE_A[i] = tmp[0];,0,0,1,2,4,0,0,0,0,7,29,6,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,195,            EXP_FRAC_TABLE_B[i] = tmp[1];,6,2,0,2,4,0,0,0,0,10,29,6,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,199,        for (i = 0; i < 1024; i++) {,6,1,0,1,3,0,0,0,0,9,28,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,200,            double d = Double.longBitsToDouble( (((long) i) << 42) | 0x3ff0000000000000L );,0,0,0,4,8,0,0,0,0,12,79,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,201,            LN_MANT[i] = slowLog(d);,0,0,0,2,4,0,0,0,0,6,24,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,205,        buildSinCosTables();,0,0,0,1,2,0,2,0,0,2,20,5,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,206,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,219,        return Math.sqrt(a);,0,0,0,1,2,1,0,0,0,4,20,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,680,        final double xs[] = new double[2];,2,0,0,2,4,1,0,0,0,3,34,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,681,        final double ys[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,682,        final double facts[] = new double[2];,2,0,0,2,4,0,0,2,0,4,37,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,683,        final double as[] = new double[2];,2,0,0,2,4,1,0,0,0,3,34,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,684,"        split(x, xs);",0,0,0,1,2,0,0,0,0,3,13,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,685,        ys[0] = ys[1] = 0.0;,8,1,1,2,4,1,0,0,0,12,20,3,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,687,        for (int i = 19; i >= 0; i--) {,6,1,0,1,3,0,0,0,0,8,31,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,688,"            splitMult(xs, ys, as);",0,0,0,1,2,0,8,0,0,8,22,7,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,689,            ys[0] = as[0];,2,0,1,2,4,0,0,0,0,8,14,0,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,690,            ys[1] = as[1];,0,0,0,2,4,0,0,0,0,6,14,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,692,"            split(FACT[i], as);",0,0,0,2,4,0,0,0,0,6,19,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,693,"            splitReciprocal(as, facts);",0,0,0,1,2,0,0,0,0,3,27,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,695,"            splitAdd(ys, facts, as);",0,0,0,1,2,0,0,0,0,3,24,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,696,            ys[0] = as[0];,0,0,1,2,4,0,0,0,0,5,14,6,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,697,            ys[1] = as[1];,0,0,0,2,4,0,0,0,0,6,14,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,700,        if (result != null) {,0,0,0,1,3,0,6,0,0,6,21,7,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,701,            result[0] = ys[0];,0,0,0,2,4,0,0,0,0,6,18,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,702,            result[1] = ys[1];,2,0,1,2,4,0,0,0,0,7,18,3,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,705,        return ys[0] + ys[1];,0,0,0,2,4,1,0,0,0,7,21,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,714,        if (d < 8e298 && d > -8e298) {,4,3,0,1,3,0,0,0,0,8,30,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,715,            final double a = d * 1073741824.0;,0,0,0,0,0,0,0,0,0,0,34,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,716,            split[0] = (d + a) - a;,6,2,1,2,4,0,0,0,0,11,23,6,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,717,            split[1] = d - split[0];,2,2,1,2,4,0,2,0,0,11,24,3,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,718,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,723,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,730,        final double c = a[0] + a[1];,6,3,1,2,4,1,0,0,0,14,29,3,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,731,        final double d = -(c - a[0] - a[1]);,4,1,1,3,6,1,0,0,0,11,36,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,733,        if (c < 8e298 && c > -8e298) {,4,3,0,1,3,0,0,0,0,8,30,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,734,            double z = c * 1073741824.0;,4,1,0,0,0,0,0,0,0,5,28,7,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,735,            a[0] = (c + z) - z;,0,0,0,2,4,0,0,0,0,6,19,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,736,            a[1] = c - a[0] + d;,0,0,0,2,4,0,0,0,0,6,20,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,737,        } else {,0,0,0,0,2,0,0,0,0,2,8,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,738,            double z = c * 9.31322574615478515625E-10;,0,0,0,0,0,0,6,0,0,6,42,5,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,739,            a[0] = (c + z - c) * 1073741824.0;,0,0,0,2,4,0,0,0,0,6,34,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,740,            a[1] = c - a[0] + d;,10,1,0,2,4,0,0,0,0,13,20,0,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,742,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,750,        ans[0] = a[0] * b[0];,0,0,0,3,6,0,0,0,0,9,21,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,751,        ans[1] = a[0] * b[1] + a[1] * b[0] + a[1] * b[1];,0,5,1,7,14,0,0,0,0,20,49,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,754,        resplit(ans);,0,0,0,1,2,0,4,0,0,4,13,5,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,755,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,763,        ans[0] = a[0] + b[0];,0,1,1,3,6,0,0,0,0,8,21,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,764,        ans[1] = a[1] + b[1];,0,1,1,3,6,0,6,0,0,14,21,3,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,766,        resplit(ans);,0,0,0,1,2,0,0,0,0,3,13,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,767,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,788,        final double b = 1.0/4194304.0;,0,0,0,0,0,0,0,0,0,0,31,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,789,        final double a = 1.0 - b;,4,1,0,0,0,1,0,0,0,6,25,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,791,        if (in[0] == 0.0) {,2,0,0,2,5,1,0,0,0,3,19,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,796,        result[0] = a / in[0];,0,0,0,2,4,0,0,0,0,6,22,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,797,        result[1] = (b*in[0]-a*in[1]) / (in[0]*in[0] + in[0]*in[1]);,8,7,1,9,18,0,0,0,0,31,60,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,799,        if (result[1] != result[1]) { // can happen if result[1] is NAN,0,1,1,4,9,0,0,0,0,5,63,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,800,            result[1] = 0.0;,0,0,0,1,2,0,0,0,0,3,16,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,804,        resplit(result);,0,0,0,1,2,0,4,0,0,4,16,5,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,806,        for (int i = 0; i < 2; i++) {,0,0,0,1,3,0,0,0,0,4,29,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,808,            double err = 1.0 - result[0] * in[0] - result[0] * in[1] -,2,6,1,4,8,0,0,0,0,16,58,7,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,811,            err = err * (result[0] + result[1]);,4,2,1,3,6,0,0,0,0,11,36,6,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,813,            result[1] += err;,2,0,1,1,2,0,0,0,0,5,17,6,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,815,    },0,0,0,0,1,0,0,0,0,1,1,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,823,        final double xs[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,824,        final double ys[] = new double[2];,2,0,0,2,4,1,0,0,0,3,34,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,825,        final double zs[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,828,"        split(a[0], xs);",0,0,1,2,4,0,4,0,0,6,16,5,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,829,"        split(b[0], ys);",0,0,0,2,4,0,0,0,0,6,16,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,830,"        splitMult(xs, ys, zs);",0,0,0,1,2,0,8,0,0,8,22,5,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,832,        result[0] = zs[0];,8,3,1,2,4,0,8,0,0,26,18,3,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,833,        result[1] = zs[1];,0,0,1,2,4,0,0,0,0,5,18,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,836,"        split(b[1], ys);",0,0,1,2,4,0,4,0,0,6,16,5,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,837,"        splitMult(xs, ys, zs);",0,0,0,1,2,0,0,0,0,3,22,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,839,        double tmp = result[0] + zs[0];,2,1,1,2,4,0,0,0,0,7,31,5,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,840,        result[1] = result[1] - (tmp - result[0] - zs[0]);,2,2,1,5,10,0,0,0,0,13,50,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,841,        result[0] = tmp;,0,0,0,1,2,0,0,0,0,3,16,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,842,        tmp = result[0] + zs[1];,2,1,1,2,4,0,0,0,0,8,24,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,843,        result[1] = result[1] - (tmp - result[0] - zs[1]);,2,2,1,5,10,0,0,0,0,13,50,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,844,        result[0] = tmp;,2,0,1,1,2,0,0,0,0,5,16,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,847,"        split(a[1], xs);",0,0,0,2,4,0,0,0,0,6,16,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,848,"        split(b[0], ys);",0,0,0,2,4,0,0,0,0,6,16,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,849,"        splitMult(xs, ys, zs);",8,1,0,1,2,0,0,0,0,11,22,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,851,        tmp = result[0] + zs[0];,0,0,0,2,4,0,0,0,0,6,24,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,852,        result[1] = result[1] - (tmp - result[0] - zs[0]);,0,0,0,5,10,0,0,0,0,15,50,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,853,        result[0] = tmp;,0,0,0,1,2,0,0,0,0,3,16,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,854,        tmp = result[0] + zs[1];,2,1,1,2,4,0,6,0,0,15,24,3,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,855,        result[1] = result[1] - (tmp - result[0] - zs[1]);,0,0,0,5,10,0,0,0,0,15,50,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,856,        result[0] = tmp;,4,1,0,1,2,0,0,0,0,5,16,6,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,859,"        split(a[1], xs);",0,0,1,2,4,0,4,0,0,6,16,5,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,860,"        split(b[1], ys);",0,0,0,2,4,0,0,0,0,6,16,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,861,"        splitMult(xs, ys, zs);",0,0,0,1,2,0,8,0,0,8,22,5,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,863,        tmp = result[0] + zs[0];,2,1,1,2,4,0,0,0,0,8,24,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,864,        result[1] = result[1] - (tmp - result[0] - zs[0]);,2,2,1,5,10,0,0,0,0,13,50,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,865,        result[0] = tmp;,0,0,0,1,2,0,0,0,0,3,16,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,866,        tmp = result[0] + zs[1];,0,0,0,2,4,0,0,0,0,6,24,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,867,        result[1] = result[1] - (tmp - result[0] - zs[1]);,0,0,0,5,10,0,6,0,0,6,50,5,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,868,        result[0] = tmp;,2,0,1,1,2,0,0,0,0,5,16,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,869,    },2,0,0,0,1,0,0,0,0,3,1,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,878,        final double xs[] = new double[2];,0,0,0,2,4,0,0,0,0,6,34,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,879,        final double as[] = new double[2];,4,0,0,2,4,1,0,0,0,5,34,3,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,880,        final double ys[] = new double[2];,6,0,0,2,4,1,0,0,0,7,34,3,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,889,        xs[0] = 2.718281828459045;,8,1,1,1,2,0,0,0,0,13,26,3,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,890,        xs[1] = 1.4456468917292502E-16;,0,0,1,1,2,0,0,0,0,3,31,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,892,"        split(1.0, ys);",6,4,0,1,2,0,4,0,0,14,15,3,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,894,        while (p > 0) {,2,2,0,1,3,0,4,0,0,10,15,3,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,895,            if ((p & 1) != 0) {,0,0,0,2,5,0,0,0,0,7,19,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,896,"                quadMult(ys, xs, as);",0,0,0,1,2,0,0,0,0,3,21,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,897,                ys[0] = as[0]; ys[1] = as[1];,2,0,1,4,8,0,0,0,0,7,29,10,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,900,"            quadMult(xs, xs, as);",0,0,0,1,2,0,0,0,0,3,21,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,901,            xs[0] = as[0]; xs[1] = as[1];,0,0,1,4,8,0,0,0,0,10,29,6,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,903,            p >>= 1;,0,0,0,0,0,0,0,0,0,0,8,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,906,        if (result != null) {,2,0,0,1,3,3,0,0,0,5,21,2,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,907,            result[0] = ys[0];,0,0,0,2,4,0,0,0,0,6,18,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,908,            result[1] = ys[1];,2,0,1,2,4,3,0,0,0,10,18,1,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,910,            resplit(result);,2,0,1,1,2,0,4,0,0,10,16,3,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,913,        return ys[0] + ys[1];,6,1,1,2,4,2,0,0,0,15,21,1,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1396,        double x[] = new double[2];,0,0,0,2,4,0,0,0,0,6,27,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1397,        double x2[] = new double[2];,8,2,0,2,4,0,0,0,0,11,28,3,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1398,        double y[] = new double[2];,2,0,0,2,4,0,2,0,0,4,27,1,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1399,        double a[] = new double[2];,0,0,0,2,4,0,0,0,0,6,27,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1401,"        split(xi, x);",0,0,0,1,2,0,0,0,0,3,13,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1404,        x[0] += 1.0;,0,0,1,1,2,0,0,0,0,3,12,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1405,        resplit(x);,0,0,0,1,2,0,0,0,0,3,11,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1406,"        splitReciprocal(x, a);",2,0,0,1,2,1,10,2,0,15,22,3,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1407,        x[0] -= 2.0;,0,0,0,1,2,0,0,0,0,3,12,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1408,        resplit(x);,0,0,0,1,2,0,4,0,0,4,11,5,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1409,"        splitMult(x, a, y);",0,0,0,1,2,0,0,0,0,3,19,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1410,        x[0] = y[0];,6,1,1,2,4,0,0,0,0,13,12,3,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1411,        x[1] = y[1];,0,0,0,2,4,0,0,0,0,6,12,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1414,"        splitMult(x, x, x2);",0,0,0,1,2,0,0,0,0,3,20,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1420,        y[0] = LN_SPLIT_COEF[LN_SPLIT_COEF.length-1][0];,4,1,1,3,6,0,0,0,0,10,48,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1421,        y[1] = LN_SPLIT_COEF[LN_SPLIT_COEF.length-1][1];,0,0,0,3,6,0,0,0,0,9,48,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1423,        for (int i = LN_SPLIT_COEF.length-2; i >= 0; i--) {,10,2,0,1,3,0,0,0,0,13,51,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1424,"            splitMult(y, x2, a);",0,0,0,1,2,0,0,0,0,3,20,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1425,            y[0] = a[0];,12,3,1,2,4,0,0,0,0,20,12,3,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1426,            y[1] = a[1];,0,0,0,2,4,0,6,0,0,6,12,7,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1427,"            splitAdd(y, LN_SPLIT_COEF[i], a);",2,1,1,2,4,0,6,0,0,13,33,3,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1428,            y[0] = a[0];,6,0,1,2,4,0,0,0,0,14,12,3,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1429,            y[1] = a[1];,6,1,0,2,4,0,0,0,0,8,12,8,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1432,"        splitMult(y, x, a);",4,0,0,1,2,0,8,0,0,13,19,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1433,        y[0] = a[0];,0,0,0,2,4,0,0,0,0,6,12,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1434,        y[1] = a[1];,0,0,0,2,4,0,0,0,0,6,12,4,1.0,0,0,1
defect4j,math,org/apache/commons/math/util/FastMath,62,1436,        return y;,8,0,0,0,0,2,6,2,0,17,9,3,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1446,        final double xs[] = new double[2];,6,0,0,2,4,1,0,0,0,8,34,3,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1447,        final double ys[] = new double[2];,2,0,0,2,4,1,0,0,0,3,34,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1448,        final double facts[] = new double[2];,2,0,0,2,4,1,0,0,0,3,37,4,1.0,0,0,0
defect4j,math,org/apache/commons/math/util/FastMath,62,1449,        final double as[] = new double[2];,8,2,0,2,4,1,0,0,0,13,34,3,1.0,0,0,0
