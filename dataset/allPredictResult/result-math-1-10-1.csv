dataset,project,path,version,codeLine,statement,varTotal,optTotal,array,bracketDepth,bracketTotal,keywordTotal,methodTotal,typeTotal,logic,lengthEle,lengthWord,depth,suspicious,accuracy,miss_line,predict0,predict1
defect4j,math,org/apache/commons/math3/util/FastMath,16,393,      if (x > 20) {,1,1,0,1,3,1,0,0,0,5,13,4,0.15385,0,0,0.3854623368129877,0.614537663187013
defect4j,math,org/apache/commons/math3/dfp/Dfp,17,1510,            if (isNaN()) {,0,0,0,2,5,1,1,0,1,5,14,6,1.0,0,0,0.3827886483581554,0.6172113516418455
defect4j,math,org/apache/commons/math3/dfp/Dfp,17,1511,                return this;,0,0,0,0,0,2,0,0,0,1,12,2,1.0,0,0,0.11232280838168913,0.8876771916183126
defect4j,math,org/apache/commons/math3/dfp/Dfp,17,1514,            if (x.isNaN()) {,0,0,0,2,5,1,2,0,0,4,16,7,1.0,0,0,0.25189561534309,0.7481043846569108
defect4j,math,org/apache/commons/math3/dfp/Dfp,17,1515,                return x;,1,0,0,0,0,1,0,0,0,2,9,8,1.0,0,0,0.11144962956924567,0.8885503704307534
defect4j,math,org/apache/commons/math3/dfp/Dfp,17,1518,            if (nans == INFINITE && x.nans == FINITE && x.mant[mant.length-1] != 0) {,9,6,0,1,5,1,0,0,0,5,73,6,1.0,0,0,0.9525258700020224,0.047474129997976885
defect4j,math,org/apache/commons/math3/dfp/Dfp,17,1519,                result = newInstance(this);,1,0,0,1,2,1,1,0,2,6,27,8,1.0,0,0,0.2993814076334294,0.7006185923665716
defect4j,math,org/apache/commons/math3/dfp/Dfp,17,1520,                result.sign = (byte) (sign * x.sign);,5,1,0,1,4,1,0,0,1,6,37,8,1.0,0,0,0.2996908154143947,0.7003091845856042
defect4j,math,org/apache/commons/math3/dfp/Dfp,17,1521,                return result;,1,0,0,0,0,1,0,0,0,2,14,8,1.0,0,0,0.10702048942980515,0.8929795105701934
defect4j,math,org/apache/commons/math3/optimization/direct/CMAESOptimizer,18,583,            lambda = 4 + (int) (3. * Math.log(dimension));,1,2,0,2,6,1,3,0,1,7,46,6,1.0,0,0,0.5177708226580938,0.4822291773419078
defect4j,math,org/apache/commons/math3/optimization/direct/CMAESOptimizer,18,751,                    negccov = negcovMax;,2,0,0,0,0,0,0,0,1,2,20,10,1.0,0,0,0.08823941393689043,0.9117605860631093
defect4j,math,org/apache/commons/math3/optimization/direct/CMAESOptimizer,19,246,        this(0);,0,0,0,1,2,1,0,0,0,3,8,2,1.0,0,0,0.24826322266119233,0.7517367773388074
defect4j,math,org/apache/commons/math3/optimization/direct/CMAESOptimizer,19,247,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math3/optimization/direct/CMAESOptimizer,19,253,"        this(lambda, null, DEFAULT_MAXITERATIONS, DEFAULT_STOPFITNESS,",3,0,0,0,1,1,0,0,0,3,62,4,1.0,0,0,0.32128796485320915,0.6787120351467923
defect4j,math,org/apache/commons/math3/optimization/direct/CMAESOptimizer,19,256,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math3/optimization/direct/CMAESOptimizer,19,570,            lambda = 4 + (int) (3. * Math.log(dimension));,1,2,0,2,6,1,3,0,1,7,46,6,1.0,1,1,0.5177708226580938,0.4822291773419078
defect4j,math,org/apache/commons/math3/optimization/direct/CMAESOptimizer,20,423,                            break generationLoop;,1,0,0,0,0,1,0,0,0,2,21,13,1.0,0,0,0.019822216180438546,0.9801777838195602
defect4j,math,org/apache/commons/math3/optimization/direct/CMAESOptimizer,20,995,                    repaired[i] = 1.0;,0,0,1,0,2,0,0,0,1,3,18,10,1.0,0,0,0.268201902706124,0.7317980972938773
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,97,"        MatrixUtils.checkSubtractionCompatible(this, m);",0,0,0,0,2,1,3,0,0,3,48,5,4.0,0,0,0.1599923602015207,0.8400076397984801
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,99,        final int rowCount    = getRowDimension();,1,0,0,1,2,2,1,0,2,6,42,4,4.0,0,0,0.46088663457213985,0.5391133654278599
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,100,        final int columnCount = getColumnDimension();,1,0,0,1,2,2,1,0,2,6,45,4,4.0,0,0,0.46848896221695835,0.5315110377830415
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,101,"        final RealMatrix out = createMatrix(rowCount, columnCount);",1,0,0,0,2,1,3,1,2,6,59,4,4.0,0,0,0.6613851894653204,0.3386148105346802
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,102,        for (int row = 0; row < rowCount; ++row) {,4,1,0,1,3,2,0,0,1,6,42,4,4.0,0,0,0.4824919855189703,0.5175080144810291
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,103,            for (int col = 0; col < columnCount; ++col) {,4,1,0,1,3,2,0,0,1,6,45,6,4.0,0,0,0.4414183477031975,0.5585816522968028
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,104,"                out.setEntry(row, col, getEntry(row, col) - m.getEntry(row, col));",0,1,0,0,6,0,11,0,1,4,66,9,4.0,0,0,0.015869023924889137,0.9841309760751097
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,108,        return out;,1,0,0,0,0,1,0,0,0,2,11,4,4.0,0,0,0.17913402676094936,0.8208659732390504
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,241,        return walkInColumnOrder(new RealMatrixPreservingVisitor() {,0,0,0,1,4,2,1,1,2,6,60,4,4.0,0,0,0.7319075775319532,0.268092422468047
defect4j,math,org/apache/commons/math3/linear/Array2DRowRealMatrix,21,456,        final int rows    = getRowDimension();,1,0,0,1,2,2,1,0,2,6,38,4,4.0,0,0,0.4528695477733144,0.5471304522266849
defect4j,math,org/apache/commons/math3/linear/Array2DRowRealMatrix,21,457,        final int columns = getColumnDimension();,1,0,0,1,2,2,1,0,2,6,41,4,4.0,0,0,0.45865575511145296,0.5413442448885458
defect4j,math,org/apache/commons/math3/linear/Array2DRowRealMatrix,21,458,"        visitor.start(rows, columns, 0, rows - 1, 0, columns - 1);",2,2,0,0,2,0,4,0,0,4,58,5,4.0,0,0,0.35881229651275875,0.6411877034872419
defect4j,math,org/apache/commons/math3/linear/Array2DRowRealMatrix,21,459,        for (int j = 0; j < columns; ++j) {,4,1,0,1,3,2,0,0,1,6,35,4,4.0,0,0,0.4699682442318314,0.5300317557681701
defect4j,math,org/apache/commons/math3/linear/Array2DRowRealMatrix,21,460,            for (int i = 0; i < rows; ++i) {,4,1,0,1,3,2,0,0,1,6,32,6,4.0,0,0,0.4185674512304597,0.581432548769542
defect4j,math,org/apache/commons/math3/linear/Array2DRowRealMatrix,21,461,"                visitor.visit(i, j, data[i][j]);",0,0,1,0,6,0,4,0,0,3,32,9,4.0,0,0,0.20593967196821775,0.7940603280317837
defect4j,math,org/apache/commons/math3/linear/Array2DRowRealMatrix,21,464,        return visitor.end();,0,0,0,1,2,1,2,0,0,4,21,5,4.0,0,0,0.23396342825762365,0.7660365717423767
defect4j,math,org/apache/commons/math3/linear/MatrixUtils,21,130,        if (data == null ||,1,2,0,0,1,1,0,0,0,4,19,4,4.0,0,0,0.3703002128367106,0.62969978716329
defect4j,math,org/apache/commons/math3/linear/MatrixUtils,21,134,        return (data.length * data[0].length <= 4096) ?,3,2,1,1,4,1,0,0,0,6,47,6,4.0,0,0,0.7743038417419016,0.22569615825809955
defect4j,math,org/apache/commons/math3/linear/MatrixUtils,21,523,        if ((left.getRowDimension()    != right.getRowDimension()) ||,0,2,0,2,7,1,4,0,0,5,61,4,4.0,0,0,0.4733370107079765,0.5266629892920235
defect4j,math,org/apache/commons/math3/linear/MatrixUtils,21,528,    },0,0,0,0,1,0,0,0,0,1,1,2,4.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,241,        return walkInColumnOrder(new RealMatrixPreservingVisitor() {,0,0,0,1,4,2,1,1,2,6,60,4,4.0,0,0,0.7319075775319532,0.268092422468047
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,256,                this.endRow = endRow;,2,0,0,0,0,1,0,0,1,3,21,10,4.0,0,0,0.10705838882952165,0.8929416111704771
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,257,                columnSum   = 0;,1,0,0,0,0,0,0,0,1,2,16,10,4.0,0,0,0.08204098563177928,0.9179590143682199
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,258,                maxColSum   = 0;,1,0,0,0,0,0,0,0,1,2,16,10,4.0,0,0,0.08204098563177928,0.9179590143682199
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,259,            },0,0,0,0,1,0,0,0,0,1,1,2,4.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,263,                columnSum += FastMath.abs(value);,1,0,0,1,2,0,3,0,1,5,33,10,4.0,0,0,0.1476481300827132,0.852351869917288
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,264,                if (row == endRow) {,2,1,0,1,3,1,0,0,0,5,20,10,4.0,0,0,0.1761849056472803,0.8238150943527203
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,265,"                    maxColSum = FastMath.max(maxColSum, columnSum);",1,0,0,0,2,0,4,0,1,4,47,12,4.0,0,0,0.050076540233084506,0.9499234597669163
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,266,                    columnSum = 0;,1,0,0,0,0,0,0,0,1,2,14,12,4.0,0,0,0.041374652489027976,0.9586253475109725
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,268,            },0,0,0,0,1,0,0,0,0,1,1,2,4.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math3/linear/AbstractRealMatrix,21,272,                return maxColSum;,1,0,0,0,0,1,0,0,0,2,17,10,4.0,0,0,0.06288381213100828,0.9371161878689906
defect4j,math,org/apache/commons/math3/util/FastMath,21,3508,            return a;,1,0,0,0,0,1,0,0,0,2,9,6,4.0,0,0,0.15471143269615956,0.8452885673038387
defect4j,math,org/apache/commons/math3/util/FastMath,21,3511,            return b;,1,0,0,0,0,1,0,0,0,2,9,6,4.0,0,0,0.15471143269615956,0.8452885673038387
defect4j,math,org/apache/commons/math3/util/FastMath,21,3514,        if (a != b) {,2,1,0,1,3,1,0,0,0,5,13,4,4.0,0,0,0.40949052182584184,0.5905094781741582
defect4j,math,org/apache/commons/math3/util/FastMath,21,3519,        long bits = Double.doubleToRawLongBits(a);,1,0,0,1,2,1,3,0,0,5,42,5,4.0,0,0,0.28576758396623486,0.7142324160337652
defect4j,math,org/apache/commons/math3/util/FastMath,21,3520,        if (bits == 0x8000000000000000L) {,1,1,0,1,3,1,0,0,0,5,34,4,4.0,0,0,0.3762013881036755,0.6237986118963237
defect4j,math,org/apache/commons/math3/util/FastMath,21,3523,        return a;,1,0,0,0,0,1,0,0,0,2,9,4,4.0,0,0,0.1820965858999821,0.8179034141000183
defect4j,math,org/apache/commons/math3/distribution/FDistribution,22,275,        return true;,0,0,0,0,0,1,0,0,1,2,12,4,1.0,1,0,0.17536277809053585,0.824637221909465
defect4j,math,org/apache/commons/math3/distribution/UniformRealDistribution,22,184,        return false;,0,0,0,0,0,1,0,0,1,2,13,4,1.0,1,0,0.17413668121872822,0.8258633187812716
defect4j,math,org/apache/commons/math3/util/MathArrays,23,234,        double previous = val[0];,1,0,1,0,2,1,0,0,0,4,25,5,1.0,0,0,0.5460855516689352,0.4539144483310632
defect4j,math,org/apache/commons/math3/util/MathArrays,23,235,        final int max = val.length;,3,0,0,0,0,2,0,0,1,3,27,4,1.0,0,0,0.2847597837120793,0.7152402162879195
defect4j,math,org/apache/commons/math3/util/MathArrays,23,239,        for (index = 1; index < max; index++) {,4,1,0,1,3,1,0,0,2,6,39,5,1.0,0,0,0.4820905511473211,0.5179094488526799
defect4j,math,org/apache/commons/math3/util/MathArrays,23,240,            switch (dir) {,1,0,0,1,3,1,0,0,0,4,14,7,1.0,0,0,0.2482055403053113,0.7517944596946892
defect4j,math,org/apache/commons/math3/util/MathArrays,23,242,                if (strict) {,1,0,0,1,3,1,0,0,0,4,13,8,1.0,0,0,0.2121512292181751,0.7878487707818242
defect4j,math,org/apache/commons/math3/util/MathArrays,23,243,                    if (val[index] <= previous) {,1,1,1,1,5,1,0,0,0,6,29,10,1.0,0,0,0.42379672924190775,0.576203270758091
defect4j,math,org/apache/commons/math3/util/MathArrays,23,268,            previous = val[index];,1,0,1,0,2,0,0,0,1,4,22,7,1.0,0,0,0.5458870692152233,0.45411293078477716
defect4j,math,org/apache/commons/math3/util/MathArrays,23,271,        if (index == max) {,2,1,0,1,3,1,0,0,0,5,19,4,1.0,0,0,0.4002499772490717,0.5997500227509284
defect4j,math,org/apache/commons/math3/util/MathArrays,23,273,            return true;,0,0,0,0,0,1,0,0,1,2,12,6,1.0,0,0,0.1488060654902937,0.8511939345097054
defect4j,math,org/apache/commons/math3/util/MathArrays,23,295,"        checkOrder(val, dir, strict, true);",0,0,0,0,2,0,4,0,2,3,35,4,1.0,0,0,0.18899061541632217,0.811009384583679
defect4j,math,org/apache/commons/math3/util/MathArrays,23,296,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math3/util/MathArrays,23,306,"        checkOrder(val, OrderDirection.INCREASING, true);",2,0,0,0,2,0,2,0,2,4,49,4,1.0,0,0,0.3849198385002859,0.6150801614997149
defect4j,math,org/apache/commons/math3/util/MathArrays,23,307,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math3/util/MathArrays,23,143,    public static enum OrderDirection {,1,0,0,0,1,3,0,0,2,4,35,2,1.0,0,0,0.40441069926297357,0.5955893007370251
defect4j,math,org/apache/commons/math3/util/MathArrays,23,145,"        INCREASING,",1,0,0,0,0,0,0,0,0,1,11,3,1.0,0,0,0.1426657930697078,0.8573342069302916
defect4j,math,org/apache/commons/math3/util/MathArrays,23,147,        DECREASING,1,0,0,0,0,0,0,0,0,1,10,3,1.0,0,0,0.14385730404122882,0.8561426959587715
defect4j,math,org/apache/commons/math3/util/MathArrays,23,166,            switch (dir) {,1,0,0,1,3,1,0,0,0,4,14,6,1.0,0,0,0.28049576781076896,0.719504232189231
defect4j,math,org/apache/commons/math3/analysis/FunctionUtils,23,141,        return new UnivariateFunction() {,0,0,0,1,3,2,0,1,1,5,33,4,1.0,0,0,0.6213758943603399,0.3786241056396607
defect4j,math,org/apache/commons/math3/analysis/FunctionUtils,23,141,        return new UnivariateFunction() {,0,0,0,1,3,2,0,1,1,5,33,4,1.0,0,0,0.6213758943603399,0.3786241056396607
defect4j,math,org/apache/commons/math3/analysis/FunctionUtils,23,144,                double r = f[0].value(x);,1,0,1,1,4,1,2,0,0,6,25,10,1.0,0,0,0.3642238605910961,0.635776139408905
defect4j,math,org/apache/commons/math3/analysis/FunctionUtils,23,145,                for (int i = 1; i < f.length; i++) {,5,1,0,1,3,2,0,0,1,6,36,9,1.0,0,0,0.2566033447165007,0.7433966552834993
defect4j,math,org/apache/commons/math3/analysis/FunctionUtils,23,146,                    r += f[i].value(x);,1,0,1,1,4,0,2,0,1,6,19,11,1.0,0,0,0.35248573728941107,0.647514262710589
defect4j,math,org/apache/commons/math3/analysis/FunctionUtils,23,148,                return r;,1,0,0,0,0,1,0,0,0,2,9,9,1.0,0,0,0.08840905287014393,0.9115909471298574
defect4j,math,org/apache/commons/math3/analysis/function/StepFunction,23,64,               DimensionMismatchException {,1,0,0,0,1,0,0,0,0,2,28,2,1.0,0,0,0.18893936852930548,0.8110606314706956
defect4j,math,org/apache/commons/math3/analysis/function/StepFunction,23,65,        if (x == null ||,1,2,0,0,1,1,0,0,0,4,16,4,1.0,0,0,0.3741471172234099,0.6258528827765897
defect4j,math,org/apache/commons/math3/analysis/function/StepFunction,23,69,        if (x.length == 0 ||,2,2,0,0,1,1,0,0,0,4,20,4,1.0,0,0,0.39296732318356414,0.6070326768164376
defect4j,math,org/apache/commons/math3/analysis/function/StepFunction,23,73,        if (y.length != x.length) {,4,1,0,1,3,1,0,0,0,5,27,4,1.0,0,0,0.3919259799453547,0.6080740200546441
defect4j,math,org/apache/commons/math3/analysis/function/StepFunction,23,76,        MathArrays.checkOrder(x);,0,0,0,1,2,0,3,0,0,3,25,5,1.0,0,0,0.1868149058668581,0.8131850941331414
defect4j,math,org/apache/commons/math3/analysis/function/StepFunction,23,78,        abscissa = MathArrays.copyOf(x);,1,0,0,1,2,0,3,0,1,5,32,4,1.0,0,0,0.349095681763498,0.650904318236502
defect4j,math,org/apache/commons/math3/analysis/function/StepFunction,23,79,        ordinate = MathArrays.copyOf(y);,1,0,0,1,2,0,3,0,1,5,32,4,1.0,0,0,0.349095681763498,0.650904318236502
defect4j,math,org/apache/commons/math3/analysis/function/StepFunction,23,80,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math3/analysis/function/StepFunction,23,84,"        int index = Arrays.binarySearch(abscissa, x);",1,0,0,0,2,1,4,0,0,4,45,5,1.0,0,0,0.19056801877365226,0.8094319812263462
defect4j,math,org/apache/commons/math3/analysis/function/StepFunction,23,85,        double fx = 0;,1,0,0,0,0,1,0,0,0,2,14,5,1.0,0,0,0.1648001729607785,0.8351998270392218
defect4j,math,org/apache/commons/math3/analysis/function/StepFunction,23,87,        if (index < -1) {,1,1,0,1,3,1,0,0,1,6,17,4,1.0,0,0,0.4390784184362035,0.5609215815637958
defect4j,math,org/apache/commons/math3/analysis/function/StepFunction,23,89,            fx = ordinate[-index-2];,2,1,1,0,2,0,0,0,2,5,24,6,1.0,0,0,0.7037084428716327,0.29629155712836686
defect4j,math,org/apache/commons/math3/analysis/function/StepFunction,23,90,        } else if (index >= 0) {,1,1,0,1,4,2,0,0,0,5,24,5,1.0,0,0,0.36653135302067164,0.6334686469793288
defect4j,math,org/apache/commons/math3/analysis/function/StepFunction,23,96,            fx = ordinate[0];,1,0,1,0,2,0,0,0,1,4,17,7,1.0,0,0,0.5511888868382804,0.4488111131617198
defect4j,math,org/apache/commons/math3/analysis/function/StepFunction,23,99,        return fx;,1,0,0,0,0,1,0,0,0,2,10,4,1.0,0,0,0.18056596445651568,0.8194340355434849
defect4j,math,org/apache/commons/math3/util/MathArrays,24,532,"         return copyOf(source, source.length);",2,0,0,0,2,1,2,0,1,5,37,4,0.25,0,0,0.33573390253192464,0.664266097468076
defect4j,math,org/apache/commons/math3/util/MathArrays,24,560,         final double[] output = new double[len];,1,0,1,0,4,4,0,0,1,5,40,4,0.25,0,0,0.7871512786930198,0.21284872130697882
defect4j,math,org/apache/commons/math3/util/MathArrays,24,561,"         System.arraycopy(source, 0, output, 0, FastMath.min(len, source.length));",2,0,0,0,4,0,7,0,0,3,73,5,0.25,0,0,0.14871029305616773,0.8512897069438335
defect4j,math,org/apache/commons/math3/util/MathArrays,24,562,         return output;,1,0,0,0,0,1,0,0,0,2,14,4,0.25,0,0,0.17541411621266575,0.8245858837873355
defect4j,math,org/apache/commons/math3/analysis/function/Sin,24,33,"public class Sin implements UnivariateDifferentiable, DifferentiableUnivariateFunction {",1,0,0,0,1,3,0,2,1,5,88,1,0.25,0,0,0.9968076831669002,0.0031923168331002933
defect4j,math,org/apache/commons/math3/analysis/function/Sin,24,36,        return FastMath.sin(x);,0,0,0,1,2,1,3,0,0,4,23,5,0.25,0,0,0.2086972679587407,0.79130273204126
defect4j,math,org/apache/commons/math3/optimization/fitting/HarmonicFitter,25,326,                a = FastMath.sqrt(c1 / c2);,3,1,0,1,2,0,2,0,1,6,27,7,0.33333,1,1,0.36915014642892763,0.6308498535710729
defect4j,math,org/apache/commons/math3/optimization/fitting/HarmonicFitter,25,327,                omega = FastMath.sqrt(c2 / c3);,3,1,0,1,2,0,2,0,1,6,31,7,0.33333,1,1,0.37049774225165494,0.6295022577483455
defect4j,math,org/apache/commons/math3/exception/ConvergenceException,26,48,                                Object ... args) {,1,0,0,0,2,0,0,1,0,3,18,3,1.0,0,0,0.49800754642691364,0.5019924535730859
defect4j,math,org/apache/commons/math3/exception/ConvergenceException,26,49,"        getContext().addMessage(pattern, args);",0,0,0,1,4,0,4,0,1,4,39,5,1.0,0,0,0.23252868737401333,0.7674713126259858
defect4j,math,org/apache/commons/math3/exception/ConvergenceException,26,50,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math3/fraction/Fraction,27,597,        return multiply(100).doubleValue();,0,0,0,1,4,1,2,0,1,5,35,5,1.0,1,0,0.3011525904562239,0.6988474095437766
defect4j,math,org/apache/commons/math3/optimization/linear/SimplexSolver,28,138,                Integer minRow = null;,1,0,0,0,0,0,0,1,0,2,22,7,0.33333,1,1,0.3191350036961691,0.6808649963038294
defect4j,math,org/apache/commons/math3/optimization/linear/SimplexSolver,28,139,                int minIndex = tableau.getWidth();,1,0,0,1,2,1,2,0,0,5,34,8,0.33333,1,1,0.20941974445291234,0.7905802555470872
defect4j,math,org/apache/commons/math3/optimization/linear/SimplexSolver,28,140,                for (Integer row : minRatioPositions) {,2,0,0,1,3,1,0,1,0,5,39,7,0.33333,1,1,0.558764342339552,0.4412356576604488
defect4j,math,org/apache/commons/math3/optimization/linear/SimplexSolver,28,141,                    int i = tableau.getNumObjectiveFunctions();,1,0,0,1,2,1,2,0,0,5,43,10,0.33333,0,0,0.13898278083720084,0.8610172191628005
defect4j,math,org/apache/commons/math3/optimization/linear/SimplexSolver,28,142,                    for (; i < tableau.getWidth() - 1 && minRow != row; i++) {,4,4,0,2,5,1,2,0,1,7,58,9,0.33333,0,0,0.7874255666615805,0.2125744333384204
defect4j,math,org/apache/commons/math3/optimization/linear/SimplexSolver,28,143,                        if (row == tableau.getBasicRow(i)) {,1,1,0,2,5,1,3,0,0,6,36,11,0.33333,0,0,0.13958595458299242,0.8604140454170074
defect4j,math,org/apache/commons/math3/optimization/linear/SimplexSolver,28,144,                            if (i < minIndex) {,2,1,0,1,3,1,0,0,0,5,19,13,0.33333,0,0,0.06184933696543877,0.9381506630345603
defect4j,math,org/apache/commons/math3/optimization/linear/SimplexSolver,28,145,                                minIndex = i;,2,0,0,0,0,0,0,0,1,2,13,15,0.33333,0,0,0.011111004428824728,0.9888889955711765
defect4j,math,org/apache/commons/math3/optimization/linear/SimplexSolver,28,146,                                minRow = row;,2,0,0,0,0,0,0,0,1,2,13,15,0.33333,0,0,0.011111004428824728,0.9888889955711765
defect4j,math,org/apache/commons/math3/optimization/linear/SimplexSolver,28,150,                },0,0,0,0,1,0,0,0,0,1,1,2,0.33333,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math3/optimization/linear/SimplexSolver,28,151,                return minRow;,1,0,0,0,0,1,0,0,0,2,14,7,0.33333,0,0,0.12899847604571768,0.871001523954283
defect4j,math,org/apache/commons/math3/linear/OpenMapRealVector,29,361,        OpenMapRealVector res = new OpenMapRealVector(this);,1,0,0,1,2,2,0,2,1,6,52,4,2.0,0,0,0.992770435888906,0.007229564111094166
defect4j,math,org/apache/commons/math3/linear/OpenMapRealVector,29,362,        Iterator iter = entries.iterator();,1,0,0,1,2,0,2,1,0,5,35,4,2.0,0,0,0.6091472636059496,0.3908527363940519
defect4j,math,org/apache/commons/math3/linear/OpenMapRealVector,29,363,        while (iter.hasNext()) {,0,0,0,2,5,1,2,0,0,4,24,5,2.0,0,0,0.3029128760871894,0.6970871239128122
defect4j,math,org/apache/commons/math3/linear/OpenMapRealVector,29,364,            iter.advance();,0,0,0,1,2,0,2,0,0,3,15,7,2.0,0,0,0.17125474110039807,0.8287452588996033
defect4j,math,org/apache/commons/math3/linear/OpenMapRealVector,29,365,"            res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));",0,1,0,2,10,0,10,0,0,4,64,7,2.0,0,0,0.05650911817890621,0.9434908818210936
defect4j,math,org/apache/commons/math3/linear/OpenMapRealVector,29,374,        return res;,1,0,0,0,0,1,0,0,0,2,11,4,2.0,1,1,0.17913402676094936,0.8208659732390504
defect4j,math,org/apache/commons/math3/special/Gamma,30,45,    private static final double[] LANCZOS = {,1,0,0,0,3,4,0,0,3,4,41,2,1.0,0,0,0.5460749611369828,0.45392503886301755
defect4j,math,org/apache/commons/math3/special/Gamma,30,63,    private static final double HALF_LOG_2_PI = 0.5 * FastMath.log(2.0 * FastMath.PI);,3,2,0,1,2,4,2,0,3,7,82,2,1.0,0,0,0.875268036660246,0.1247319633397526
defect4j,math,org/apache/commons/math3/special/Gamma,30,154,        if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {,2,3,0,2,11,1,6,0,0,6,68,4,1.0,0,0,0.6289403597242911,0.37105964027570987
defect4j,math,org/apache/commons/math3/special/Gamma,30,186,        return ret;,1,0,0,0,0,1,0,0,0,2,11,4,1.0,0,0,0.17913402676094936,0.8208659732390504
defect4j,math,org/apache/commons/math3/special/Erf,30,67,        if (FastMath.abs(x) > 40) {,0,1,0,2,5,1,3,0,0,5,27,4,1.0,0,0,0.3475862286992821,0.6524137713007193
defect4j,math,org/apache/commons/math3/special/Erf,30,70,"        final double ret = Gamma.regularizedGammaP(0.5, x * x, 1.0e-15, 10000);",3,1,0,0,2,2,2,0,1,6,71,4,1.0,0,0,0.5359231234910674,0.4640768765089326
defect4j,math,org/apache/commons/math3/special/Erf,30,71,        return x < 0 ? -ret : ret;,3,1,0,0,0,1,0,0,1,4,26,5,1.0,0,0,0.33411384548568945,0.6658861545143107
defect4j,math,org/apache/commons/math3/util/FastMath,30,375,        return Math.sqrt(a);,0,0,0,1,2,1,3,0,0,4,20,5,1.0,0,0,0.21022533756535855,0.7897746624346403
defect4j,math,org/apache/commons/math3/util/FastMath,30,3020,        return (x < 0.0) ? -x : (x == 0.0) ? 0.0 : x; // -0.0 => +0.0,4,2,0,1,4,1,0,0,1,6,61,5,1.0,0,0,0.6087817625974946,0.39121823740250555
defect4j,math,org/apache/commons/math3/util/FastMath,30,3535,        if (a > b) {,2,1,0,1,3,1,0,0,0,5,12,4,1.0,0,0,0.41154795868057237,0.5884520413194261
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,82,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,90,        final double[] z = new double[x.length + y.length];,5,1,0,0,4,4,0,0,1,5,51,4,1.0,0,0,0.5597542172820846,0.440245782717914
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,92,"        System.arraycopy(x, 0, z, 0, x.length);",2,0,0,0,2,0,4,0,0,3,39,5,1.0,0,0,0.17703382160753917,0.8229661783924601
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,93,"        System.arraycopy(y, 0, z, x.length, y.length);",4,0,0,0,2,0,4,0,0,3,46,5,1.0,0,0,0.1843862103439594,0.8156137896560395
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,95,        return z;,1,0,0,0,0,1,0,0,0,2,9,4,1.0,0,0,0.1820965858999821,0.8179034141000183
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,129,"        ensureDataConformance(x, y);",0,0,0,0,2,0,3,0,1,3,28,4,1.0,0,0,0.19154279096394616,0.8084572090360547
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,131,"        final double[] z = concatenateSamples(x, y);",1,0,0,0,4,2,3,0,2,5,44,4,1.0,0,0,0.33848819345946374,0.661511806540535
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,132,        final double[] ranks = naturalRanking.rank(z);,1,0,0,1,4,2,3,0,1,6,46,4,1.0,0,0,0.3772757512287738,0.622724248771227
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,134,        double sumRankX = 0;,1,0,0,0,0,1,0,0,0,2,20,5,1.0,0,0,0.16007478657095112,0.8399252134290497
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,140,        for (int i = 0; i < x.length; ++i) {,5,1,0,1,3,2,0,0,1,6,36,4,1.0,0,0,0.4420889848644942,0.5579110151355072
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,141,            sumRankX += ranks[i];,1,0,1,0,2,0,0,0,1,4,21,6,1.0,0,0,0.5874283214703422,0.4125716785296578
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,148,        final double U1 = sumRankX - (x.length * (x.length + 1)) / 2;,6,4,0,2,4,2,0,0,1,6,61,4,1.0,0,0,0.8892392185281016,0.11076078147189815
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,153,        final double U2 = x.length * y.length - U1;,6,2,0,0,0,2,0,0,1,4,43,4,1.0,0,0,0.3803429319239028,0.6196570680760969
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,155,"        return FastMath.max(U1, U2);",0,0,0,0,2,1,4,0,0,3,28,5,1.0,0,0,0.12132695645948269,0.8786730435405186
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,173,        final int n1n2prod = n1 * n2;,3,1,0,0,0,2,0,0,1,4,29,4,1.0,1,0,0.3624908006874324,0.6375091993125679
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,176,        final double EU = n1n2prod / 2.0;,2,1,0,0,0,2,0,0,1,4,33,4,1.0,0,0,0.35856288496136657,0.6414371150386341
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,177,        final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;,4,3,0,1,2,2,0,0,1,6,52,4,1.0,0,0,0.732781772546407,0.2672182274535916
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,179,        final double z = (Umin - EU) / FastMath.sqrt(VarU);,3,2,0,1,4,2,3,0,1,7,51,4,1.0,0,0,0.5372429619243263,0.46275703807567453
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,181,"        final NormalDistribution standardNormal = new NormalDistribution(0, 1);",1,0,0,0,2,2,0,2,2,5,71,4,1.0,0,0,0.994377509075038,0.005622490924960737
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,183,        return 2 * standardNormal.cumulativeProbability(z);,0,1,0,1,2,1,3,0,0,5,51,4,1.0,0,0,0.30782684470919175,0.692173155290808
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,224,"        final double Umax = mannWhitneyU(x, y);",1,0,0,0,2,2,3,0,2,5,39,4,1.0,0,0,0.328506657923982,0.6714933420760192
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,229,        final double Umin = x.length * y.length - Umax;,6,2,0,0,0,2,0,0,1,4,47,4,1.0,0,0,0.39085354793914107,0.6091464520608588
defect4j,math,org/apache/commons/math3/stat/inference/MannWhitneyUTest,30,231,"        return calculateAsymptoticPValue(Umin, x.length, y.length);",4,0,0,0,2,1,2,0,1,5,59,4,1.0,0,0,0.39747904529768563,0.6025209547023145
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,432,"        public IntDoublePair(double value, int position) {",3,0,0,0,3,3,0,0,1,4,50,3,1.0,0,0,0.43867638725578256,0.5613236127442165
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,433,            this.value = value;,2,0,0,0,0,1,0,0,1,3,19,5,1.0,0,0,0.25832645968794643,0.741673540312055
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,434,            this.position = position;,2,0,0,0,0,1,0,0,1,3,25,5,1.0,0,0,0.255149702997141,0.7448502970028594
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,435,        },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,445,"            return Double.compare(value, other.value);",2,0,0,0,2,1,3,0,0,4,42,6,1.0,0,0,0.21198069554611357,0.7880193044538856
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,453,            return value;,1,0,0,0,0,1,0,0,0,2,13,5,1.0,0,0,0.1658903041344915,0.8341096958655071
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,461,            return position;,1,0,0,0,0,1,0,0,0,2,16,5,1.0,0,0,0.16288363691815377,0.8371163630818456
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,419,    private static class IntDoublePair implements Comparable<IntDoublePair>  {,1,0,0,0,1,4,0,2,2,5,74,2,1.0,0,0,0.9972296660487656,0.0027703339512332582
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,334,        switch (tiesStrategy) {,1,0,0,1,3,1,0,0,0,4,23,4,1.0,0,0,0.31215643418129047,0.6878435658187111
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,200,        switch (nanStrategy) {,1,0,0,1,3,1,0,0,0,4,22,4,1.0,0,0,0.31268771006194745,0.6873122899380513
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,193,        IntDoublePair[] ranks = new IntDoublePair[data.length];,3,0,0,0,4,1,0,2,0,4,55,4,1.0,0,0,0.9881625343868563,0.011837465613145123
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,194,        for (int i = 0; i < data.length; i++) {,5,1,0,1,3,2,0,0,1,6,39,4,1.0,0,0,0.44695587459800773,0.5530441254019914
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,195,"            ranks[i] = new IntDoublePair(data[i], i);",1,0,1,0,6,1,0,1,2,6,41,6,1.0,0,0,0.8541954452446201,0.14580455475538037
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,199,        List<Integer> nanPositions = null;,1,0,0,0,0,0,0,2,0,2,34,4,1.0,0,0,0.9732221271702578,0.026777872829742137
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,200,        switch (nanStrategy) {,1,0,0,1,3,1,0,0,0,4,22,4,1.0,0,0,0.31268771006194745,0.6873122899380513
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,211,                nanPositions = getNanPositions(ranks);,1,0,0,1,2,0,2,0,2,5,38,5,1.0,0,0,0.4062014122245131,0.593798587775487
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,212,                break;,0,0,0,0,0,1,0,0,0,1,6,2,1.0,0,0,0.1138710123506104,0.8861289876493885
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,218,        Arrays.sort(ranks);,0,0,0,1,2,0,3,0,0,3,19,5,1.0,0,0,0.18935714958432487,0.810642850415676
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,222,        double[] out = new double[ranks.length];,3,0,0,0,4,3,0,0,0,3,40,5,1.0,0,0,0.29364063189992146,0.7063593681000779
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,223,        int pos = 1;  // position in sorted array,1,0,0,0,0,1,0,0,0,2,41,5,1.0,0,0,0.166821498954298,0.8331785010457026
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,224,        out[ranks[0].getPosition()] = pos;,1,0,1,1,6,0,1,0,1,6,34,4,1.0,0,0,0.7253191154081142,0.27468088459188666
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,225,        List<Integer> tiesTrace = new ArrayList<Integer>();,1,0,0,1,2,1,0,4,1,6,51,4,1.0,0,0,0.9999999995597548,4.402458805966978e-10
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,226,        tiesTrace.add(ranks[0].getPosition());,0,0,1,2,6,0,3,0,0,4,38,5,1.0,0,0,0.6083615993130455,0.39163840068695593
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,227,        for (int i = 1; i < ranks.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,1.0,0,0,0.44887875429471646,0.551121245705283
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,228,"            if (Double.compare(ranks[i].getValue(), ranks[i - 1].getValue()) > 0) {",1,2,1,1,13,1,4,0,0,7,71,6,1.0,0,0,0.7512180651811702,0.24878193481883087
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,230,                pos = i + 1;,2,1,0,0,0,0,0,0,1,3,12,8,1.0,0,0,0.21642434133705968,0.7835756586629394
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,231,"                if (tiesTrace.size() > 1) {  // if seq is nontrivial, resolve",0,1,0,2,5,2,2,0,0,5,61,8,1.0,0,0,0.34131583508001057,0.6586841649199883
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,234,                tiesTrace = new ArrayList<Integer>();,1,0,0,1,2,1,0,2,2,6,37,8,1.0,0,0,0.9864187161748414,0.01358128382515817
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,235,                tiesTrace.add(ranks[i].getPosition());,0,0,1,2,6,0,3,0,0,4,38,9,1.0,0,0,0.42180357436249494,0.578196425637505
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,240,            out[ranks[i].getPosition()] = pos;,1,0,1,1,6,0,1,0,1,6,34,6,1.0,0,0,0.6846214333425572,0.3153785666574424
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,242,        if (tiesTrace.size() > 1) {  // handle tie sequence at end,0,1,0,2,5,1,2,0,0,5,58,4,1.0,0,0,0.4523046550837052,0.5476953449162956
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,245,        if (nanStrategy == NaNStrategy.FIXED) {,3,1,0,1,3,1,0,0,0,5,39,4,1.0,0,0,0.41389926289224893,0.5861007371077515
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,246,"            restoreNaNs(out, nanPositions);",0,0,0,0,2,0,3,0,1,3,31,6,1.0,0,0,0.16373656783535578,0.8362634321646456
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,248,        return out;,1,0,0,0,0,1,0,0,0,2,11,4,1.0,0,0,0.17913402676094936,0.8208659732390504
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,387,        if (nanPositions.size() == 0) {,0,1,0,2,5,1,2,0,0,5,31,4,1.0,0,0,0.3816142114645137,0.6183857885354874
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,388,            return;,0,0,0,0,0,1,0,0,1,2,7,5,1.0,0,0,0.17196866624977714,0.8280313337502239
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,404,        ArrayList<Integer> out = new ArrayList<Integer>();,1,0,0,1,2,1,0,4,1,6,50,4,1.0,0,0,0.999999999553367,4.4663470780762425e-10
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,405,        for (int i = 0; i < ranks.length; i++) {,5,1,0,1,3,2,0,0,1,6,40,4,1.0,0,0,0.44887875429471646,0.551121245705283
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,406,            if (Double.isNaN(ranks[i].getValue())) {,0,0,1,3,9,1,3,0,0,5,40,7,1.0,0,0,0.6769877890928311,0.3230122109071677
defect4j,math,org/apache/commons/math3/stat/ranking/NaturalRanking,30,410,        return out;,1,0,0,0,0,1,0,0,0,2,11,4,1.0,0,0,0.17913402676094936,0.8208659732390504
defect4j,math,org/apache/commons/math3/distribution/AbstractRealDistribution,30,53,    protected AbstractRealDistribution() { },1,0,0,1,4,1,0,0,1,5,40,2,1.0,0,0,0.40287726038889204,0.5971227396111077
defect4j,math,org/apache/commons/math3/distribution/AbstractRealDistribution,30,47,    protected final RandomDataImpl randomData = new RandomDataImpl();,1,0,0,1,2,3,0,2,3,6,65,2,1.0,0,0,0.9966368313322721,0.00336316866772763
defect4j,math,org/apache/commons/math3/distribution/AbstractRealDistribution,30,50,    private double solverAbsoluteAccuracy = SOLVER_DEFAULT_ABSOLUTE_ACCURACY;,2,0,0,0,0,2,0,0,1,3,73,2,1.0,0,0,0.42902927548428715,0.5709707245157137
defect4j,math,org/apache/commons/math3/distribution/NormalDistribution,30,61,"        this(mean, sd, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);",3,0,0,0,2,1,0,0,0,3,50,4,1.0,0,0,0.2767697636673583,0.7232302363326424
defect4j,math,org/apache/commons/math3/distribution/NormalDistribution,30,62,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math3/distribution/NormalDistribution,30,75,        throws NotStrictlyPositiveException {,1,0,0,0,1,1,0,0,0,3,37,2,1.0,0,0,0.230221734164138,0.7697782658358637
defect4j,math,org/apache/commons/math3/distribution/NormalDistribution,30,76,        if (sd <= 0) {,1,1,0,1,3,1,0,0,0,5,14,4,1.0,0,0,0.3835928734388497,0.6164071265611519
defect4j,math,org/apache/commons/math3/distribution/NormalDistribution,30,80,        this.mean = mean;,2,0,0,0,0,1,0,0,1,3,17,4,1.0,0,0,0.2750585145164101,0.7249414854835886
defect4j,math,org/apache/commons/math3/distribution/NormalDistribution,30,81,        standardDeviation = sd;,2,0,0,0,0,0,0,0,1,2,23,4,1.0,0,0,0.22955150953614506,0.7704484904638538
defect4j,math,org/apache/commons/math3/distribution/NormalDistribution,30,82,        solverAbsoluteAccuracy = inverseCumAccuracy;,2,0,0,0,0,0,0,0,1,2,44,4,1.0,0,0,0.2453598232236465,0.7546401767763531
defect4j,math,org/apache/commons/math3/distribution/NormalDistribution,30,83,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math3/distribution/NormalDistribution,30,42,    private static final double SQRT2PI = FastMath.sqrt(2 * FastMath.PI);,3,1,0,1,2,4,2,0,3,7,69,2,1.0,0,0,0.7711166025945809,0.22888339740542013
defect4j,math,org/apache/commons/math3/distribution/NormalDistribution,30,44,    private static final double SQRT2 = FastMath.sqrt(2.0);,1,0,0,1,2,4,2,0,3,6,55,2,1.0,0,0,0.6641819443473584,0.3358180556526419
defect4j,math,org/apache/commons/math3/distribution/NormalDistribution,30,137,        final double dev = x - mean;,3,1,0,0,0,2,0,0,1,4,28,4,1.0,0,0,0.362226441701473,0.637773558298527
defect4j,math,org/apache/commons/math3/distribution/NormalDistribution,30,138,        if (FastMath.abs(dev) > 40 * standardDeviation) {,1,2,0,2,5,1,3,0,0,6,49,4,1.0,0,0,0.5345114492229901,0.46548855077700974
defect4j,math,org/apache/commons/math3/distribution/NormalDistribution,30,141,        return 0.5 * (1 + Erf.erf(dev / (standardDeviation * SQRT2)));,3,4,0,3,6,1,2,0,0,6,62,4,1.0,0,0,0.9320790856582329,0.06792091434176803
defect4j,math,org/apache/commons/math3/exception/MathIllegalStateException,31,80,        return context.getMessage();,0,0,0,1,2,1,2,0,0,4,28,5,1.0,0,0,0.23237712598094332,0.767622874019057
defect4j,math,org/apache/commons/math3/exception/MathIllegalStateException,31,86,        return context.getLocalizedMessage();,0,0,0,1,2,1,2,0,0,4,37,5,1.0,0,0,0.23813425034805763,0.7618657496519429
defect4j,math,org/apache/commons/math3/util/FastMath,32,2480,            final double denom = 1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]));,3,5,1,2,10,2,0,0,1,7,91,6,1.0,0,0,0.995982200421706,0.004017799578294517
defect4j,math,org/apache/commons/math3/util/FastMath,32,2482,            ya = epsA * denom;,3,1,0,0,0,0,0,0,1,3,18,6,1.0,0,0,0.28433673542158105,0.7156632645784191
defect4j,math,org/apache/commons/math3/util/FastMath,32,2483,            yb = epsB * denom;,3,1,0,0,0,0,0,0,1,3,18,6,1.0,0,0,0.28433673542158105,0.7156632645784191
defect4j,math,org/apache/commons/math3/util/FastMath,32,2484,        } else {,0,0,0,0,2,1,0,0,0,2,8,2,1.0,0,0,0.1610490196660457,0.8389509803339537
defect4j,math,org/apache/commons/math3/optimization/linear/Relationship,33,59,            return GEQ;,1,0,0,0,0,1,0,0,0,2,11,5,1.0,0,0,0.16834095084466047,0.8316590491553397
defect4j,math,org/apache/commons/math3/genetics/ListPopulation,34,112,        this.chromosomes.addAll(chromosomeColl);,1,0,0,1,2,1,2,0,0,5,40,5,1.0,0,0,0.3116946559256992,0.6883053440743007
defect4j,math,org/apache/commons/math3/genetics/ListPopulation,34,113,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math3/genetics/ListPopulation,34,209,        return chromosomes.iterator();,0,0,0,1,2,1,2,0,0,4,30,5,1.0,1,0,0.23289324545214202,0.7671067545478589
defect4j,math,org/apache/commons/math3/genetics/ElitisticListPopulation,35,36,    private double elitismRate = 0.9;,1,0,0,0,0,2,0,0,1,3,33,2,2.0,0,0,0.2644895932536751,0.7355104067463233
defect4j,math,org/apache/commons/math/fraction/BigFraction,36,732,        float result = numerator.floatValue() / denominator.floatValue();,1,1,0,1,4,1,4,0,0,6,65,5,0.5,1,1,0.36855003881348236,0.631449961186517
defect4j,math,org/apache/commons/math/fraction/BigFraction,36,735,        return result;,1,0,0,0,0,1,0,0,0,2,14,4,0.5,1,1,0.17541411621266575,0.8245858837873355
defect4j,math,org/apache/commons/math/util/FastMath,37,393,          return exp(x)/2.0;,0,1,0,1,2,1,2,0,1,6,18,6,4.0,0,0,0.31590573148092294,0.6840942685190768
defect4j,math,org/apache/commons/math/util/FastMath,37,453,          return exp(x)/2.0;,0,1,0,1,2,1,2,0,1,6,18,6,4.0,0,0,0.31590573148092294,0.6840942685190768
defect4j,math,org/apache/commons/math/optimization/direct/BOBYQAOptimizer,38,2413,            initialTrustRegionRadius = minDiff / 3.0;,2,1,0,0,0,0,0,0,1,3,41,6,0.5,0,0,0.28689511266563933,0.7131048873343602
defect4j,math,org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer,38,126,            lowerBound = lower.clone();,1,0,0,1,2,0,2,0,1,5,27,6,0.5,0,0,0.3348166598369129,0.6651833401630869
defect4j,math,org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer,38,134,            upperBound = upper.clone();,1,0,0,1,2,0,2,0,1,5,27,6,0.5,0,0,0.3348166598369129,0.6651833401630869
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,244,    super(interpolator);,1,0,0,1,2,1,0,0,1,5,20,3,0.03571,0,0,0.39683520697900565,0.603164793020994
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,246,    if (interpolator.currentState == null) {,2,1,0,1,3,1,0,0,0,5,40,4,0.03571,0,0,0.4090881777139343,0.5909118222860649
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,248,      yDotKLast = null;,1,0,0,0,0,0,0,0,1,2,17,6,0.03571,0,0,0.184940474989677,0.8150595250103236
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,249,      v         = null;,1,0,0,0,0,0,0,0,1,2,17,6,0.03571,0,0,0.184940474989677,0.8150595250103236
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,250,      vectorsInitialized = false;,1,0,0,0,0,0,0,0,2,2,27,6,0.03571,0,0,0.20359076470015358,0.7964092352998465
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,273,  },0,0,0,0,1,0,0,0,0,1,1,2,0.03571,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,278,    return new DormandPrince853StepInterpolator(this);,0,0,0,1,2,3,0,1,1,5,50,4,0.03571,0,0,0.7044835364192699,0.29551646358073075
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,288,"    super.reinitialize(integrator, y, yDotK, forward, primaryMapper, secondaryMappers);",7,0,0,0,2,1,0,0,0,3,83,5,0.03571,0,0,0.2976492724573475,0.7023507275426543
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,290,    final int dimension = currentState.length;,3,0,0,0,0,2,0,0,1,3,42,4,0.03571,0,0,0.2995271513847683,0.7004728486152304
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,292,    yDotKLast = new double[3][];,1,0,0,0,4,2,0,0,1,4,28,4,0.03571,0,0,0.31231074317644136,0.6876892568235594
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,293,    for (int k = 0; k < yDotKLast.length; ++k) {,5,1,0,1,3,2,0,0,1,6,44,4,0.03571,0,0,0.4580812433393936,0.5419187566606047
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,294,      yDotKLast[k] = new double[dimension];,0,0,1,0,4,2,0,0,1,4,37,6,0.03571,0,0,0.531822222074574,0.4681777779254257
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,297,    v = new double[7][];,1,0,0,0,4,2,0,0,1,4,20,4,0.03571,0,0,0.31501264839722815,0.6849873516027707
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,298,    for (int k = 0; k < v.length; ++k) {,5,1,0,1,3,2,0,0,1,6,36,4,0.03571,0,0,0.4420889848644942,0.5579110151355072
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,299,      v[k]  = new double[dimension];,0,0,1,0,4,2,0,0,1,4,30,6,0.03571,0,0,0.5245679840851494,0.47543201591485074
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,302,    vectorsInitialized = false;,1,0,0,0,0,0,0,0,2,2,27,4,0.03571,0,0,0.23720006468853824,0.7627999353114624
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,304,  },0,0,0,0,1,0,0,0,0,1,1,2,0.03571,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,309,    super.storeTime(t);,2,0,0,1,2,1,0,0,0,4,19,5,0.03571,0,0,0.3205168211845653,0.6794831788154347
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,310,    vectorsInitialized = false;,1,0,0,0,0,0,0,0,2,2,27,4,0.03571,0,0,0.23720006468853824,0.7627999353114624
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,311,  },0,0,0,0,1,0,0,0,0,1,1,2,0.03571,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,407,    if (currentState == null) {,1,1,0,1,3,1,0,0,0,5,27,4,0.03571,0,0,0.3723490749408574,0.6276509250591431
defect4j,math,org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator,39,409,      return;,0,0,0,0,0,1,0,0,1,2,7,5,0.03571,0,0,0.17196866624977714,0.8280313337502239
defect4j,math,org/apache/commons/math/exception/TooManyEvaluationsException,40,37,        super(max);,1,0,0,1,2,1,0,0,1,5,11,3,1.0,0,0,0.4113399663829662,0.5886600336170349
defect4j,math,org/apache/commons/math/exception/TooManyEvaluationsException,40,38,        getContext().addMessage(LocalizedFormats.EVALUATIONS);,2,0,0,1,4,0,2,0,1,5,54,5,1.0,0,0,0.44048505246069736,0.5595149475393034
defect4j,math,org/apache/commons/math/exception/TooManyEvaluationsException,40,39,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,40,42,"        this(LocalizedFormats.MAX_COUNT_EXCEEDED, max);",3,0,0,0,2,1,0,0,0,3,47,4,1.0,0,0,0.2689124622791648,0.7310875377208359
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,40,43,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,40,53,                                     Object ... args) {,1,0,0,0,2,0,0,1,0,3,18,3,1.0,0,0,0.49800754642691364,0.5019924535730859
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,40,54,"        getContext().addMessage(specific, max, args);",0,0,0,1,4,0,5,0,1,4,45,5,1.0,0,0,0.20332804928280268,0.7966719507171969
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,40,55,        this.max = max;,2,0,0,0,0,1,0,0,1,3,15,4,1.0,0,0,0.27761495874563474,0.7223850412543665
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,40,56,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math/exception/MaxCountExceededException,40,62,        return max;,1,0,0,0,0,1,0,0,0,2,11,4,1.0,0,0,0.17913402676094936,0.8208659732390504
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,40,45,                                     Object ... args) {,1,0,0,0,2,0,0,1,0,3,18,3,1.0,0,0,0.49800754642691364,0.5019924535730859
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,40,46,        context = new ExceptionContext(this);,1,0,0,1,2,2,0,1,2,6,37,4,1.0,0,0,0.7168470518944289,0.28315294810557035
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,40,47,"        context.addMessage(pattern, args);",0,0,0,0,2,0,4,0,0,2,34,5,1.0,0,0,0.10139028372319721,0.8986097162768042
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,40,48,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,40,69,        this(LocalizedFormats.ILLEGAL_STATE);,2,0,0,1,2,1,0,0,0,4,37,5,1.0,0,0,0.3238292651198074,0.6761707348801925
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,40,70,    },0,0,0,0,1,0,0,0,0,1,1,2,1.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math/exception/MathIllegalStateException,40,74,        return context;,1,0,0,0,0,1,0,0,0,2,15,4,1.0,0,0,0.17436125067876326,0.8256387493212365
defect4j,math,org/apache/commons/math/util/Incrementor,40,151,            maxCountCallback.trigger(maximalCount);,0,0,0,1,2,0,3,0,0,3,39,7,1.0,0,0,0.15288029399153552,0.8471197060084656
defect4j,math,org/apache/commons/math/util/Incrementor,40,65,                     throw new MaxCountExceededException(max);,1,0,0,1,2,2,0,1,1,6,41,9,1.0,0,0,0.49519789184625257,0.5048021081537484
defect4j,math,org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver,40,393,        this.allowed = allowedSolution;,2,0,0,0,0,1,0,0,1,3,31,4,1.0,0,0,0.27070057965280847,0.7292994203471928
defect4j,math,org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver,40,394,"        return super.solve(maxEval, f, min, max, startValue);",6,0,0,0,2,2,0,0,0,3,53,5,1.0,0,0,0.21486931491139305,0.785130685088608
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,40,295,        } catch (MaxCountExceededException e) {,1,0,0,1,4,1,0,1,0,5,39,6,1.0,0,0,0.5749303599962952,0.42506964000370323
defect4j,math,org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver,40,296,            throw new TooManyEvaluationsException(e.getMax());,0,0,0,2,4,2,2,1,1,6,50,7,1.0,0,0,0.6424230113574055,0.3575769886425956
defect4j,math,org/apache/commons/math/stat/descriptive/moment/Variance,41,370,"        return evaluate(values, weights, 0, values.length);",2,0,0,0,2,1,3,0,1,5,51,4,1.0,0,0,0.3369980130682512,0.6630019869317482
defect4j,math,org/apache/commons/math/optimization/RealPointValuePair,42,68,        return (point == null) ? null : point.clone();,1,1,0,1,4,1,2,0,0,6,46,5,0.07143,0,0,0.3672406055547537,0.6327593944452465
defect4j,math,org/apache/commons/math/stat/descriptive/SummaryStatistics,43,647,    },0,0,0,0,1,0,0,0,0,1,1,2,9.0,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,44,209,    if ((initialStepSize < minStep) || (initialStepSize > maxStep)) {,4,3,0,2,7,1,0,0,0,5,65,4,0.5,0,0,0.7893581226976565,0.21064187730234266
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,44,212,      initialStep = initialStepSize;,2,0,0,0,0,0,0,0,1,2,30,6,0.5,0,0,0.19667824654754582,0.8033217534524546
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,44,214,  },0,0,0,0,1,0,0,0,0,1,1,2,0.5,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator,44,252,      return forward ? initialStep : -initialStep;,3,0,0,0,0,1,0,0,1,3,44,7,0.5,0,0,0.22441372789667438,0.7755862721033254
defect4j,math,org/apache/commons/math/linear/OpenMapRealMatrix,45,49,"        super(rowDimension, columnDimension);",2,0,0,0,2,1,0,0,1,4,37,3,0.03333,0,0,0.33726349574181846,0.6627365042581822
defect4j,math,org/apache/commons/math/linear/OpenMapRealMatrix,45,50,        this.rows = rowDimension;,2,0,0,0,0,1,0,0,1,3,25,4,0.03333,1,1,0.2697035386298121,0.7302964613701872
defect4j,math,org/apache/commons/math/linear/OpenMapRealMatrix,45,51,        this.columns = columnDimension;,2,0,0,0,0,1,0,0,1,3,31,4,0.03333,0,0,0.27070057965280847,0.7292994203471928
defect4j,math,org/apache/commons/math/linear/OpenMapRealMatrix,45,52,        this.entries = new OpenIntToDoubleHashMap(0.0);,1,0,0,1,2,2,0,1,2,6,47,4,0.03333,0,0,0.73530486916053,0.2646951308394716
defect4j,math,org/apache/commons/math/linear/OpenMapRealMatrix,45,53,    },0,0,0,0,1,0,0,0,0,1,1,2,0.03333,0,0,0.1349395776598359,0.8650604223401637
defect4j,math,org/apache/commons/math/complex/Complex,46,260,            return isZero ? NaN : INF;,3,0,0,0,0,1,0,0,0,2,26,7,2.0,1,0,0.13828470928676792,0.8617152907132327
defect4j,math,org/apache/commons/math/complex/Complex,47,257,            return NaN;,1,0,0,0,0,1,0,0,0,2,11,6,2.0,1,0,0.15211154792623383,0.8478884520737674
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,48,39,public class ExceptionContext implements Serializable {,1,0,0,0,1,3,0,1,1,5,55,1,0.25,0,0,0.705160567502283,0.2948394324977185
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,48,45,    private List<Localizable> msgPatterns = new ArrayList<Localizable>();,1,0,0,1,2,2,0,4,2,6,69,2,0.25,0,0,0.9999999997514166,2.4858255609199234e-10
defect4j,math,org/apache/commons/math/exception/util/ExceptionContext,48,51,    private List<Object[]> msgArguments = new ArrayList<Object[]>();,1,0,0,1,6,2,0,4,2,6,64,2,0.25,0,0,0.9999999997196483,2.803515372443201e-10
