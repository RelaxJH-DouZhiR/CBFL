project_path,version,lines,statement,suspicious,faulty,predict,miss_line
org/jfree/chart/util/ShapeList,6,121,        return super.hashCode();,1.0,0,1,0
org/jfree/chart/util/ShapeList,6,137,            Shape shape = getShape(i);,1.0,0,1,0
org/jfree/chart/util/ShapeList,6,138,            if (shape != null) {,1.0,0,1,0
org/jfree/chart/util/ShapeList,6,139,                stream.writeInt(i);,1.0,0,1,0
org/jfree/chart/util/ShapeList,6,140,"                SerialUtilities.writeShape(shape, stream);",1.0,0,1,0
org/jfree/chart/util/ShapeList,6,143,                stream.writeInt(-1);,1.0,0,1,0
org/jfree/chart/util/ShapeList,6,163,            int index = stream.readInt();,1.0,0,1,0
org/jfree/chart/util/ShapeList,6,164,            if (index != -1) {,1.0,0,1,0
org/jfree/chart/util/ShapeList,6,165,"                setShape(index, SerialUtilities.readShape(stream));",1.0,0,1,0
org/jfree/chart/util/AbstractObjectList,6,212,"            result = HashUtilities.hashCode(result, this.objects[0]);",1.0,0,1,0
org/jfree/chart/util/AbstractObjectList,6,213,            if (size > 1) {,1.0,0,1,0
org/jfree/chart/util/AbstractObjectList,6,214,"                result = HashUtilities.hashCode(result, this.objects[size - 1]);",1.0,0,1,0
org/jfree/chart/util/AbstractObjectList,6,215,                if (size > 2) {,1.0,0,1,0
org/jfree/chart/util/AbstractObjectList,6,216,"                    result = HashUtilities.hashCode(result, ",1.0,0,1,0
org/jfree/chart/util/AbstractObjectList,6,194,               return false;,0.2,0,-1,0
org/jfree/chart/util/ShapeList,6,81,"        set(index, shape);",0.16,0,-1,0
org/jfree/chart/util/ShapeList,6,82,    },0.16,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,265,                stream.writeInt(-1);,0.14286,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,193,"           if (!ObjectUtilities.equal(get(i), other.get(i))) {",0.08,0,-1,0
org/jfree/chart/util/SerialUtilities,6,271,                double x1 = stream.readDouble();,0.0625,0,-1,0
org/jfree/chart/util/SerialUtilities,6,272,                double y1 = stream.readDouble();,0.0625,0,-1,0
org/jfree/chart/util/SerialUtilities,6,273,                double x2 = stream.readDouble();,0.0625,0,-1,0
org/jfree/chart/util/SerialUtilities,6,274,                double y2 = stream.readDouble();,0.0625,0,-1,0
org/jfree/chart/util/SerialUtilities,6,275,"                result = new Line2D.Double(x1, y1, x2, y2);",0.0625,0,-1,0
org/jfree/chart/util/SerialUtilities,6,276,            },0.0625,0,-1,0
org/jfree/chart/util/SerialUtilities,6,361,                Line2D line = (Line2D) shape;,0.0625,0,-1,0
org/jfree/chart/util/SerialUtilities,6,362,                stream.writeObject(Line2D.class);,0.0625,0,-1,0
org/jfree/chart/util/SerialUtilities,6,363,                stream.writeDouble(line.getX1());,0.0625,0,-1,0
org/jfree/chart/util/SerialUtilities,6,364,                stream.writeDouble(line.getY1());,0.0625,0,-1,0
org/jfree/chart/util/SerialUtilities,6,365,                stream.writeDouble(line.getX2());,0.0625,0,-1,0
org/jfree/chart/util/SerialUtilities,6,366,                stream.writeDouble(line.getY2());,0.0625,0,-1,0
org/jfree/chart/util/SerialUtilities,6,367,            },0.0625,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,261,                stream.writeInt(i);,0.05882,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,262,                stream.writeObject(object);,0.05882,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,288,"                set(index, stream.readObject());",0.05882,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,259,            final Object object = get(i);,0.05556,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,260,            if (object != null && object instanceof Serializable) {,0.05556,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,286,            int index = stream.readInt();,0.05556,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,287,            if (index != -1) {,0.05556,0,-1,0
org/jfree/chart/util/ShapeList,6,70,        return (Shape) get(index);,0.04545,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,206,    	int result = 127;,0.02174,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,207,    	int size = size();,0.02174,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,208,"    	result = HashUtilities.hashCode(result, size());",0.02174,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,211,        if (size > 0) {,0.02174,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,221,        return result;,0.02174,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,109,        Object result = null;,0.01869,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,110,        if (index >= 0 && index < this.size) {,0.01869,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,111,            result = this.objects[index];,0.01869,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,113,        return result;,0.01869,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,123,        if (index < 0) {,0.0186,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,126,        if (index >= this.objects.length) {,0.0186,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,131,        this.objects[index] = object;,0.0186,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,132,"        this.size = Math.max(this.size, index + 1);",0.0186,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,133,    },0.0186,0,-1,0
org/jfree/chart/util/ShapeList,6,105,        if (obj == this) {,0.0181,0,-1,0
org/jfree/chart/util/ShapeList,6,108,        if (!(obj instanceof ShapeList)) {,0.0181,0,-1,0
org/jfree/chart/util/ShapeList,6,111,        return super.equals(obj);,0.0181,1,-1,0
org/jfree/chart/util/AbstractObjectList,6,178,        if (obj == null) {,0.01739,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,182,        if (obj == this) {,0.01739,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,186,        if (!(obj instanceof AbstractObjectList)) {,0.01739,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,190,        AbstractObjectList other = (AbstractObjectList) obj;,0.01739,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,191,        int listSize = size();,0.01739,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,192,        for (int i = 0; i < listSize; i++) {,0.01739,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,128,        if (o1 != null) {,0.01619,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,129,            return o1.equals(o2);,0.01619,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,125,        if (o1 == o2) {,0.01575,0,-1,0
org/jfree/chart/util/ShapeList,6,133,        stream.defaultWriteObject();,0.01515,0,-1,0
org/jfree/chart/util/ShapeList,6,134,        int count = size();,0.01515,0,-1,0
org/jfree/chart/util/ShapeList,6,135,        stream.writeInt(count);,0.01515,0,-1,0
org/jfree/chart/util/ShapeList,6,136,        for (int i = 0; i < count; i++) {,0.01515,0,-1,0
org/jfree/chart/util/ShapeList,6,147,    },0.01515,0,-1,0
org/jfree/chart/util/ShapeList,6,160,        stream.defaultReadObject();,0.01515,0,-1,0
org/jfree/chart/util/ShapeList,6,161,        int count = stream.readInt();,0.01515,0,-1,0
org/jfree/chart/util/ShapeList,6,162,        for (int i = 0; i < count; i++) {,0.01515,0,-1,0
org/jfree/chart/util/ShapeList,6,169,    },0.01515,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,255,        stream.defaultWriteObject();,0.01471,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,256,        int count = size();,0.01471,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,257,        stream.writeInt(count);,0.01471,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,258,        for (int i = 0; i < count; i++) {,0.01471,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,269,    },0.01471,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,282,        stream.defaultReadObject();,0.01471,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,283,        this.objects = new Object[this.size];,0.01471,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,284,        int count = stream.readInt();,0.01471,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,285,        for (int i = 0; i < count; i++) {,0.01471,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,292,    },0.01471,0,-1,0
org/jfree/chart/util/SerialUtilities,6,278,                double x = stream.readDouble();,0.01449,0,-1,0
org/jfree/chart/util/SerialUtilities,6,279,                double y = stream.readDouble();,0.01449,0,-1,0
org/jfree/chart/util/SerialUtilities,6,280,                double w = stream.readDouble();,0.01449,0,-1,0
org/jfree/chart/util/SerialUtilities,6,281,                double h = stream.readDouble();,0.01449,0,-1,0
org/jfree/chart/util/SerialUtilities,6,282,"                result = new Rectangle2D.Double(x, y, w, h);",0.01449,0,-1,0
org/jfree/chart/util/SerialUtilities,6,283,            },0.01449,0,-1,0
org/jfree/chart/util/SerialUtilities,6,369,                Rectangle2D rectangle = (Rectangle2D) shape;,0.01449,0,-1,0
org/jfree/chart/util/SerialUtilities,6,370,                stream.writeObject(Rectangle2D.class);,0.01449,0,-1,0
org/jfree/chart/util/SerialUtilities,6,371,                stream.writeDouble(rectangle.getX());,0.01449,0,-1,0
org/jfree/chart/util/SerialUtilities,6,372,                stream.writeDouble(rectangle.getY());,0.01449,0,-1,0
org/jfree/chart/util/SerialUtilities,6,373,                stream.writeDouble(rectangle.getWidth());,0.01449,0,-1,0
org/jfree/chart/util/SerialUtilities,6,374,                stream.writeDouble(rectangle.getHeight());,0.01449,0,-1,0
org/jfree/chart/util/SerialUtilities,6,375,            },0.01449,0,-1,0
org/jfree/chart/util/SerialUtilities,6,263,        if (stream == null) {,0.01408,0,-1,0
org/jfree/chart/util/SerialUtilities,6,266,        Shape result = null;,0.01408,0,-1,0
org/jfree/chart/util/SerialUtilities,6,267,        boolean isNull = stream.readBoolean();,0.01408,0,-1,0
org/jfree/chart/util/SerialUtilities,6,268,        if (!isNull) {,0.01408,0,-1,0
org/jfree/chart/util/SerialUtilities,6,269,            Class c = (Class) stream.readObject();,0.01408,0,-1,0
org/jfree/chart/util/SerialUtilities,6,270,            if (c.equals(Line2D.class)) {,0.01408,0,-1,0
org/jfree/chart/util/SerialUtilities,6,277,            else if (c.equals(Rectangle2D.class)) {,0.01408,0,-1,0
org/jfree/chart/util/SerialUtilities,6,340,        return result;,0.01408,0,-1,0
org/jfree/chart/util/SerialUtilities,6,355,        if (stream == null) {,0.01408,0,-1,0
org/jfree/chart/util/SerialUtilities,6,358,        if (shape != null) {,0.01408,0,-1,0
org/jfree/chart/util/SerialUtilities,6,359,            stream.writeBoolean(false);,0.01408,0,-1,0
org/jfree/chart/util/SerialUtilities,6,360,            if (shape instanceof Line2D) {,0.01408,0,-1,0
org/jfree/chart/util/SerialUtilities,6,368,            else if (shape instanceof Rectangle2D) {,0.01408,0,-1,0
org/jfree/chart/util/SerialUtilities,6,421,    },0.01408,0,-1,0
org/jfree/chart/util/SerialUtilities,6,92,        return Serializable.class.isAssignableFrom(c);,0.01389,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,80,    private static String classLoaderSource = THREAD_CONTEXT;,0.01294,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,149,        return this.size;,0.01015,0,-1,0
org/jfree/chart/util/ShapeList,6,59,        super();,0.00932,0,-1,0
org/jfree/chart/util/ShapeList,6,60,    },0.00932,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,77,        this(DEFAULT_INITIAL_CAPACITY);,0.00868,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,78,    },0.00868,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,86,"        this (initialCapacity, initialCapacity);",0.00868,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,87,    },0.00868,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,95,"    protected AbstractObjectList(int initialCapacity, int increment) {",0.00868,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,68,    private int size = 0;,0.00868,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,71,    private int increment = DEFAULT_INITIAL_CAPACITY;,0.00868,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,96,        this.objects = new Object[initialCapacity];,0.00868,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,97,        this.increment = increment;,0.00868,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,98,    },0.00868,0,-1,0
org/jfree/chart/util/SerialUtilities,6,80,    private SerialUtilities() {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,81,    },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,109,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,110,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,112,        Paint result = null;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,113,        boolean isNull = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,114,        if (!isNull) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,115,            Class c = (Class) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,116,            if (isSerializable(c)) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,117,                result = (Paint) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,119,            else if (c.equals(GradientPaint.class)) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,120,                float x1 = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,121,                float y1 = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,122,                Color c1 = (Color) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,123,                float x2 = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,124,                float y2 = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,125,                Color c2 = (Color) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,126,                boolean isCyclic = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,127,"                result = new GradientPaint(x1, y1, c1, x2, y2, c2, isCyclic);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,130,        return result;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,145,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,146,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,148,        if (paint != null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,149,            stream.writeBoolean(false);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,150,            stream.writeObject(paint.getClass());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,151,            if (paint instanceof Serializable) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,152,                stream.writeObject(paint);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,154,            else if (paint instanceof GradientPaint) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,155,                GradientPaint gp = (GradientPaint) paint;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,156,                stream.writeFloat((float) gp.getPoint1().getX());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,157,                stream.writeFloat((float) gp.getPoint1().getY());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,158,                stream.writeObject(gp.getColor1());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,159,                stream.writeFloat((float) gp.getPoint2().getX());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,160,                stream.writeFloat((float) gp.getPoint2().getY());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,161,                stream.writeObject(gp.getColor2());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,162,                stream.writeBoolean(gp.isCyclic());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,163,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,166,            stream.writeBoolean(true);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,169,    },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,185,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,186,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,188,        Stroke result = null;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,189,        boolean isNull = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,190,        if (!isNull) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,191,            Class c = (Class) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,192,            if (c.equals(BasicStroke.class)) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,193,                float width = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,194,                int cap = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,195,                int join = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,196,                float miterLimit = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,197,                float[] dash = (float[]) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,198,                float dashPhase = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,199,"                result = new BasicStroke(width, cap, join, miterLimit, dash,",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,201,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,203,                result = (Stroke) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,206,        return result;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,224,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,225,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,227,        if (stroke != null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,228,            stream.writeBoolean(false);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,229,            if (stroke instanceof BasicStroke) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,230,                BasicStroke s = (BasicStroke) stroke;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,231,                stream.writeObject(BasicStroke.class);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,232,                stream.writeFloat(s.getLineWidth());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,233,                stream.writeInt(s.getEndCap());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,234,                stream.writeInt(s.getLineJoin());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,235,                stream.writeFloat(s.getMiterLimit());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,236,                stream.writeObject(s.getDashArray());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,237,                stream.writeFloat(s.getDashPhase());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,238,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,240,                stream.writeObject(stroke.getClass());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,241,                stream.writeObject(stroke);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,245,            stream.writeBoolean(true);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,247,    },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,264,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,284,            else if (c.equals(Ellipse2D.class)) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,285,                double x = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,286,                double y = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,287,                double w = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,288,                double h = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,289,"                result = new Ellipse2D.Double(x, y, w, h);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,290,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,291,            else if (c.equals(Arc2D.class)) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,292,                double x = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,293,                double y = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,294,                double w = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,295,                double h = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,296,                double as = stream.readDouble(); // Angle Start,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,297,                double ae = stream.readDouble(); // Angle Extent,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,298,                int at = stream.readInt();       // Arc type,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,299,"                result = new Arc2D.Double(x, y, w, h, as, ae, at);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,300,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,301,            else if (c.equals(GeneralPath.class)) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,302,                GeneralPath gp = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,303,                float[] args = new float[6];,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,304,                boolean hasNext = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,305,                while (!hasNext) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,306,                    int type = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,307,                    for (int i = 0; i < 6; i++) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,308,                        args[i] = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,310,                    switch (type) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,312,"                            gp.moveTo(args[0], args[1]);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,313,                            break;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,315,"                            gp.lineTo(args[0], args[1]);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,316,                            break;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,318,"                            gp.curveTo(args[0], args[1], args[2],",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,320,                            break;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,322,"                            gp.quadTo(args[0], args[1], args[2], args[3]);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,323,                            break;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,325,                            gp.closePath();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,326,                            break;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,328,                            throw new RuntimeException(,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,331,                    gp.setWindingRule(stream.readInt());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,332,                    hasNext = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,333,                },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,334,                result = gp;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,335,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,337,                result = (Shape) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,356,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,376,            else if (shape instanceof Ellipse2D) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,377,                Ellipse2D ellipse = (Ellipse2D) shape;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,378,                stream.writeObject(Ellipse2D.class);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,379,                stream.writeDouble(ellipse.getX());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,380,                stream.writeDouble(ellipse.getY());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,381,                stream.writeDouble(ellipse.getWidth());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,382,                stream.writeDouble(ellipse.getHeight());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,383,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,384,            else if (shape instanceof Arc2D) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,385,                Arc2D arc = (Arc2D) shape;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,386,                stream.writeObject(Arc2D.class);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,387,                stream.writeDouble(arc.getX());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,388,                stream.writeDouble(arc.getY());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,389,                stream.writeDouble(arc.getWidth());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,390,                stream.writeDouble(arc.getHeight());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,391,                stream.writeDouble(arc.getAngleStart());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,392,                stream.writeDouble(arc.getAngleExtent());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,393,                stream.writeInt(arc.getArcType());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,394,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,395,            else if (shape instanceof GeneralPath) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,396,                stream.writeObject(GeneralPath.class);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,397,                PathIterator pi = shape.getPathIterator(null);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,398,                float[] args = new float[6];,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,399,                stream.writeBoolean(pi.isDone());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,400,                while (!pi.isDone()) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,401,                    int type = pi.currentSegment(args);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,402,                    stream.writeInt(type);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,405,                    for (int i = 0; i < 6; i++) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,406,                        stream.writeFloat(args[i]);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,408,                    stream.writeInt(pi.getWindingRule());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,409,                    pi.next();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,410,                    stream.writeBoolean(pi.isDone());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,411,                },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,412,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,414,                stream.writeObject(shape.getClass());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,415,                stream.writeObject(shape);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,419,            stream.writeBoolean(true);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,436,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,437,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,439,        Point2D result = null;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,440,        boolean isNull = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,441,        if (!isNull) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,442,            double x = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,443,            double y = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,444,"            result = new Point2D.Double(x, y);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,446,        return result;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,461,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,462,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,464,        if (p != null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,465,            stream.writeBoolean(false);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,466,            stream.writeDouble(p.getX());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,467,            stream.writeDouble(p.getY());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,470,            stream.writeBoolean(true);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,472,    },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,490,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,491,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,493,        AttributedString result = null;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,494,        boolean isNull = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,495,        if (!isNull) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,497,            String plainStr = (String) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,498,            result = new AttributedString(plainStr);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,499,            char c = stream.readChar();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,500,            int start = 0;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,501,            while (c != CharacterIterator.DONE) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,502,                int limit = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,503,                Map atts = (Map) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,504,"                result.addAttributes(atts, start, limit);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,505,                start = limit;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,506,                c = stream.readChar();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,507,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,509,        return result;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,523,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,524,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,526,        if (as != null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,527,            stream.writeBoolean(false);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,528,            AttributedCharacterIterator aci = as.getIterator();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,531,            StringBuffer plainStr = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,532,            char current = aci.first();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,533,            while (current != CharacterIterator.DONE) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,534,                plainStr = plainStr.append(current);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,535,                current = aci.next();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,537,            stream.writeObject(plainStr.toString());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,540,            current = aci.first();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,541,            int begin = aci.getBeginIndex();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,542,            while (current != CharacterIterator.DONE) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,546,                stream.writeChar(current);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,549,                int limit = aci.getRunLimit();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,550,                stream.writeInt(limit - begin);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,553,                Map atts = new HashMap(aci.getAttributes());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,554,                stream.writeObject(atts);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,555,                current = aci.setIndex(limit);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,556,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,559,            stream.writeChar(CharacterIterator.DONE);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,560,        },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,563,            stream.writeBoolean(true);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,6,566,    },0.0,0,-1,0
org/jfree/chart/util/ShapeList,6,93,        return super.clone();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,6,106,            return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeList,6,109,            return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,124,"            throw new IllegalArgumentException(""Requires index >= 0."");",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,127,            Object[] enlarged = new Object[index + this.increment];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,128,"            System.arraycopy(this.objects, 0, enlarged, 0, this.objects.length);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,129,            this.objects = enlarged;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,139,"        Arrays.fill(this.objects, null);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,140,        this.size = 0;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,141,    },0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,161,        for (int index = 0; index < this.size; index++) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,162,            if (this.objects[index] == object) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,163,                return (index);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,166,        return -1;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,179,            return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,183,            return true;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,187,            return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,197,        return true;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,235,        AbstractObjectList clone = (AbstractObjectList) super.clone();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,236,        if (this.objects != null) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,237,            clone.objects = new Object[this.objects.length];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,238,"            System.arraycopy(this.objects, 0, clone.objects, 0, ",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,6,241,        return clone;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,89,    private ObjectUtilities() {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,90,    },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,99,        return classLoaderSource;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,113,        ObjectUtilities.classLoaderSource = classLoaderSource;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,114,    },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,126,            return true;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,132,            return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,145,        int result = 0;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,146,        if (object != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,147,            result = object.hashCode();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,149,        return result;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,162,        if (object == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,163,"            throw new IllegalArgumentException(""Null 'object' argument."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,165,        if (object instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,166,            final PublicCloneable pc = (PublicCloneable) object;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,167,            return pc.clone();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,171,"                final Method method = object.getClass().getMethod(""clone"",",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,173,                if (Modifier.isPublic(method.getModifiers())) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,174,"                    return method.invoke(object, (Object[]) null);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,185,            },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,177,            catch (NoSuchMethodException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,178,                e.printStackTrace();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,180,            catch (IllegalAccessException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,181,                e.printStackTrace();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,183,            catch (InvocationTargetException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,184,                e.printStackTrace();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,187,"        throw new CloneNotSupportedException(""Failed to clone."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,203,        if (collection == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,204,"            throw new IllegalArgumentException(""Null 'collection' argument."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,209,        final Collection result,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,211,        result.clear();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,212,        final Iterator iterator = collection.iterator();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,213,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,214,            final Object item = iterator.next();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,215,            if (item != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,216,                result.add(clone(item));,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,219,                result.add(null);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,221,        },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,222,        return result;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,232,        ObjectUtilities.classLoader = classLoader;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,233,    },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,241,      return classLoader;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,255,        if (classLoader != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,256,            return classLoader;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,258,"        if (""ThreadContext"".equals(classLoaderSource)) {",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,259,            final ClassLoader threadLoader,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,261,            if (threadLoader != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,262,                return threadLoader;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,267,        final ClassLoader applicationCL = c.getClassLoader();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,268,        if (applicationCL == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,269,            return ClassLoader.getSystemClassLoader();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,272,            return applicationCL;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,285,        final ClassLoader cl = getClassLoader(c);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,286,        if (cl == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,287,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,289,        return cl.getResource(name);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,300,        final ClassLoader cl = getClassLoader(c);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,301,"        final String cname = convertName(name, c);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,302,        if (cl == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,303,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,305,        return cl.getResource(cname);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,319,"        if (name.startsWith(""/"")) {",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,321,            return name.substring(1);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,325,        while (c.isArray()) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,326,            c = c.getComponentType();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,329,        final String baseName = c.getName();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,330,        final int index = baseName.lastIndexOf('.');,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,331,        if (index == -1) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,332,            return name;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,335,"        final String pkgName = baseName.substring(0, index);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,336,"        return pkgName.replace('.', '/') + ""/"" + name;",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,349,"        final URL url = getResource(name, context);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,350,        if (url == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,351,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,355,            return url.openStream();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,357,        catch (IOException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,358,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,372,"        final URL url = getResourceRelative(name, context);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,373,        if (url == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,374,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,378,            return url.openStream();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,380,        catch (IOException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,381,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,396,            final ClassLoader loader = getClassLoader(source);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,397,            final Class c = loader.loadClass(className);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,398,            return c.newInstance();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,400,        catch (Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,401,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,421,            ClassLoader loader = getClassLoader(source);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,422,            Class c = loader.loadClass(className);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,423,            if (type.isAssignableFrom(c)) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,424,                return c.newInstance();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,429,        },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,427,        catch (Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,428,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,430,        return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,439,        ClassLoader loader = getClassLoader(ObjectUtilities.class);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,440,        if (loader != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,442,"              loader.loadClass(""java.util.RandomAccess"");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,443,              return true;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,445,            catch (ClassNotFoundException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,446,              return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,448,            catch(Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,455,            String version = System.getProperty(,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,458,            if (version == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,459,                return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,462,            String[] versions = parseVersions(version);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,463,"            String[] target = new String[]{ ""1"", ""4"" };",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,464,"            return (ArrayUtilities.compareVersionArrays(versions, target) >= 0);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,466,        catch(Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,467,            return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,472,      if (version == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,473,        return new String[0];,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,476,      ArrayList versions = new ArrayList();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,477,"      StringTokenizer strtok = new StringTokenizer(version, ""."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,478,      while (strtok.hasMoreTokens()) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,479,          versions.add (strtok.nextToken());,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,6,481,      return (String[]) versions.toArray(new String[versions.size()]);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,84,    private ShapeUtilities() {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,85,    },0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,389,"    private static final float SQRT2 = (float) Math.pow(2.0, 0.5);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,103,        if (shape instanceof Cloneable) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,105,                return (Shape) ObjectUtilities.clone(shape);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,107,            catch (CloneNotSupportedException cnse) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,110,        Shape result = null;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,111,        return result;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,128,        if (s1 instanceof Line2D && s2 instanceof Line2D) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,129,"            return equal((Line2D) s1, (Line2D) s2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,131,        else if (s1 instanceof Ellipse2D && s2 instanceof Ellipse2D) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,132,"            return equal((Ellipse2D) s1, (Ellipse2D) s2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,134,        else if (s1 instanceof Arc2D && s2 instanceof Arc2D) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,135,"            return equal((Arc2D) s1, (Arc2D) s2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,137,        else if (s1 instanceof Polygon && s2 instanceof Polygon) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,138,"            return equal((Polygon) s1, (Polygon) s2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,140,        else if (s1 instanceof GeneralPath && s2 instanceof GeneralPath) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,141,"            return equal((GeneralPath) s1, (GeneralPath) s2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,145,"            return ObjectUtilities.equal(s1, s2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,159,        if (l1 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,160,            return (l2 == null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,162,        if (l2 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,163,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,165,        if (!l1.getP1().equals(l2.getP1())) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,166,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,168,        if (!l1.getP2().equals(l2.getP2())) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,169,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,171,        return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,184,        if (e1 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,185,            return (e2 == null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,187,        if (e2 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,188,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,190,        if (!e1.getFrame().equals(e2.getFrame())) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,191,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,193,        return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,206,        if (a1 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,207,            return (a2 == null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,209,        if (a2 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,210,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,212,        if (!a1.getFrame().equals(a2.getFrame())) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,213,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,215,        if (a1.getAngleStart() != a2.getAngleStart()) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,216,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,218,        if (a1.getAngleExtent() != a2.getAngleExtent()) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,219,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,221,        if (a1.getArcType() != a2.getArcType()) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,222,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,224,        return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,237,        if (p1 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,238,            return (p2 == null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,240,        if (p2 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,241,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,243,        if (p1.npoints != p2.npoints) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,244,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,246,"        if (!Arrays.equals(p1.xpoints, p2.xpoints)) {",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,247,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,249,"        if (!Arrays.equals(p1.ypoints, p2.ypoints)) {",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,250,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,252,        return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,265,        if (p1 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,266,            return (p2 == null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,268,        if (p2 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,269,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,271,        if (p1.getWindingRule() != p2.getWindingRule()) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,272,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,274,        PathIterator iterator1 = p1.getPathIterator(null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,275,        PathIterator iterator2 = p2.getPathIterator(null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,276,        double[] d1 = new double[6];,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,277,        double[] d2 = new double[6];,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,278,        boolean done = iterator1.isDone() && iterator2.isDone();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,279,        while (!done) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,280,            if (iterator1.isDone() != iterator2.isDone()) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,281,                return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,283,            int seg1 = iterator1.currentSegment(d1);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,284,            int seg2 = iterator2.currentSegment(d2);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,285,            if (seg1 != seg2) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,286,                return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,288,"            if (!Arrays.equals(d1, d2)) {",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,289,                return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,291,            iterator1.next();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,292,            iterator2.next();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,293,            done = iterator1.isDone() && iterator2.isDone();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,294,        },0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,295,        return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,310,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,311,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,313,        AffineTransform transform = AffineTransform.getTranslateInstance(,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,315,        return transform.createTransformedShape(shape);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,334,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,335,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,337,        if (anchor == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,338,"            throw new IllegalArgumentException(""Null 'anchor' argument."");",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,340,"        Point2D anchorPoint = RectangleAnchor.coordinates(shape.getBounds2D(),",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,342,        AffineTransform transform = AffineTransform.getTranslateInstance(,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,344,        return transform.createTransformedShape(shape);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,360,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,361,            return null;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,363,"        AffineTransform rotate = AffineTransform.getRotateInstance(angle, x, y);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,364,        Shape result = rotate.createTransformedShape(base);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,365,        return result;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,380,        AffineTransform saved = g2.getTransform();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,381,"        AffineTransform rotate = AffineTransform.getRotateInstance(angle, x, y);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,382,        g2.transform(rotate);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,383,        g2.draw(shape);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,384,        g2.setTransform(saved);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,386,    },0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,400,        GeneralPath p0 = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,401,"        p0.moveTo(-l - t, -l + t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,402,"        p0.lineTo(-l + t, -l - t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,403,"        p0.lineTo(0.0f, -t * SQRT2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,404,"        p0.lineTo(l - t, -l - t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,405,"        p0.lineTo(l + t, -l + t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,406,"        p0.lineTo(t * SQRT2, 0.0f);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,407,"        p0.lineTo(l + t, l - t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,408,"        p0.lineTo(l - t, l + t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,409,"        p0.lineTo(0.0f, t * SQRT2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,410,"        p0.lineTo(-l + t, l + t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,411,"        p0.lineTo(-l - t, l - t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,412,"        p0.lineTo(-t * SQRT2, 0.0f);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,413,        p0.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,414,        return p0;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,426,        GeneralPath p0 = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,427,"        p0.moveTo(-l, t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,428,"        p0.lineTo(-t, t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,429,"        p0.lineTo(-t, l);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,430,"        p0.lineTo(t, l);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,431,"        p0.lineTo(t, t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,432,"        p0.lineTo(l, t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,433,"        p0.lineTo(l, -t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,434,"        p0.lineTo(t, -t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,435,"        p0.lineTo(t, -l);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,436,"        p0.lineTo(-t, -l);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,437,"        p0.lineTo(-t, -t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,438,"        p0.lineTo(-l, -t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,439,        p0.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,440,        return p0;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,451,        GeneralPath p0 = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,452,"        p0.moveTo(0.0f, -s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,453,"        p0.lineTo(s, 0.0f);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,454,"        p0.lineTo(0.0f, s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,455,"        p0.lineTo(-s, 0.0f);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,456,        p0.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,457,        return p0;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,468,        GeneralPath p0 = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,469,"        p0.moveTo(0.0f, -s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,470,"        p0.lineTo(s, s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,471,"        p0.lineTo(-s, s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,472,        p0.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,473,        return p0;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,484,        GeneralPath p0 = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,485,"        p0.moveTo(0.0f, s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,486,"        p0.lineTo(s, -s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,487,"        p0.lineTo(-s, -s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,488,        p0.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,489,        return p0;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,503,        GeneralPath result = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,504,        float x1 = (float) line.getX1();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,505,        float x2 = (float) line.getX2();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,506,        float y1 = (float) line.getY1();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,507,        float y2 = (float) line.getY2();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,508,        if ((x2 - x1) != 0.0) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,509,            double theta = Math.atan((y2 - y1) / (x2 - x1));,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,510,            float dx = (float) Math.sin(theta) * width;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,511,            float dy = (float) Math.cos(theta) * width;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,512,"            result.moveTo(x1 - dx, y1 + dy);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,513,"            result.lineTo(x1 + dx, y1 - dy);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,514,"            result.lineTo(x2 + dx, y2 - dy);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,515,"            result.lineTo(x2 - dx, y2 + dy);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,516,            result.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,517,        },0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,520,"            result.moveTo(x1 - width / 2.0f, y1);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,521,"            result.lineTo(x1 + width / 2.0f, y1);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,522,"            result.lineTo(x2 + width / 2.0f, y2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,523,"            result.lineTo(x2 - width / 2.0f, y2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,524,            result.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,526,        return result;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,545,"        x = Math.max(area.getMinX(), Math.min(x, area.getMaxX()));",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,546,"        y = Math.max(area.getMinY(), Math.min(y, area.getMaxY()));",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,547,"        return new Point2D.Double(x, y);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,562,        double x0 = rect1.getX();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,563,        double y0 = rect1.getY();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,564,        double x = rect2.getX();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,565,        double y = rect2.getY();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,566,        double w = rect2.getWidth();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,567,        double h = rect2.getHeight();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,569,        return ((x >= x0) && (y >= y0),0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,587,      double x0 = rect1.getX();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,588,      double y0 = rect1.getY();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,590,      double x = rect2.getX();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,591,      double width = rect2.getWidth();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,592,      double y = rect2.getY();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,593,      double height = rect2.getHeight();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,6,594,      return (x + width >= x0 && y + height >= y0 && x <= x0 + rect1.getWidth(),0.0,0,-1,0
