project_path,version,lines,statement,suspicious,faulty,predict,miss_line
org/jfree/chart/plot/Plot,26,1385,            if (orientation == PlotOrientation.HORIZONTAL) {,242.0,0,0,0
org/jfree/chart/axis/CategoryAxis,26,736,        if (space == null) {,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,741,        if (!isVisible()) {,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,746,        double tickLabelHeight = 0.0;,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,747,        double tickLabelWidth = 0.0;,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,748,        if (isTickLabelsVisible()) {,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,749,            g2.setFont(getTickLabelFont());,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,750,            AxisState state = new AxisState();,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,752,"            refreshTicks(g2, state, plotArea, edge);",242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,753,            if (edge == RectangleEdge.TOP) {,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,756,            else if (edge == RectangleEdge.BOTTOM) {,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,768,"        Rectangle2D labelEnclosure = getLabelEnclosure(g2, edge);",242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,769,        double labelHeight = 0.0;,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,770,        double labelWidth = 0.0;,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,771,        if (RectangleEdge.isTopOrBottom(edge)) {,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,781,        return space;,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,973,        List ticks = new java.util.ArrayList();,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,976,        if (dataArea.getHeight() <= 0.0 || dataArea.getWidth() < 0.0) {,242.0,0,0,0
org/jfree/chart/axis/CategoryAxis,26,980,        CategoryPlot plot = (CategoryPlot) getPlot();,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,981,        List categories = plot.getCategoriesForAxis(this);,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,982,        double max = 0.0;,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,984,        if (categories != null) {,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,985,            CategoryLabelPosition position ,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,987,            float r = this.maximumCategoryLabelWidthRatio;,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,988,            if (r <= 0.0) {,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,989,                r = position.getWidthRatio();   ,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,992,            float l = 0.0f;,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,993,            if (position.getWidthType() == CategoryLabelWidthType.CATEGORY) {,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,1005,            int categoryIndex = 0;,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,1006,            Iterator iterator = categories.iterator();,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,1007,            while (iterator.hasNext()) {,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,1026,        state.setMax(max);,242.0,0,1,0
org/jfree/chart/axis/CategoryAxis,26,1027,        return ticks;,242.0,0,0,0
org/jfree/chart/axis/AxisState,26,184,        return this.max;,242.0,0,0,0
org/jfree/chart/axis/AxisState,26,193,        this.max = max;,242.0,0,1,0
org/jfree/chart/axis/AxisState,26,194,    },242.0,0,1,0
org/jfree/chart/axis/CategoryLabelPositions,26,289,        CategoryLabelPosition result = null;,242.0,0,1,0
org/jfree/chart/axis/CategoryLabelPositions,26,290,        if (edge == RectangleEdge.TOP) {,242.0,0,1,0
org/jfree/chart/axis/CategoryLabelPositions,26,293,        else if (edge == RectangleEdge.BOTTOM) {,242.0,0,1,0
org/jfree/chart/axis/CategoryLabelPositions,26,302,        return result;,242.0,0,1,0
org/jfree/chart/axis/CategoryLabelPosition,26,219,        return this.widthType;   ,242.0,0,1,0
org/jfree/chart/axis/CategoryLabelPosition,26,228,        return this.widthRatio;   ,242.0,0,0,0
org/jfree/chart/plot/CategoryPlot,26,708,        return getDomainAxisLocation(0);,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,721,        AxisLocation result = null;,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,722,        if (index < this.domainAxisLocations.size()) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,723,            result = (AxisLocation) this.domainAxisLocations.get(index);,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,725,        if (result == null) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,728,        return result;,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,815,        RectangleEdge result = null;,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,816,        AxisLocation location = getDomainAxisLocation(index);,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,817,        if (location != null) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,818,"            result = Plot.resolveDomainAxisLocation(location, this.orientation);",242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,823,        return result;,242.0,0,0,0
org/jfree/chart/plot/CategoryPlot,26,976,        AxisLocation result = null;,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,977,        if (index < this.rangeAxisLocations.size()) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,978,            result = (AxisLocation) this.rangeAxisLocations.get(index);,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,980,        if (result == null) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,983,        return result;,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,1067,        AxisLocation location = getRangeAxisLocation(index);,242.0,0,0,0
org/jfree/chart/plot/CategoryPlot,26,1068,"        RectangleEdge result = Plot.resolveRangeAxisLocation(location, ",242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,1070,        if (result == null) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,1073,        return result;,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,1727,        LegendItemCollection result = this.fixedLegendItems;,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,1728,        if (result == null) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,1729,            result = new LegendItemCollection();,242.0,0,0,0
org/jfree/chart/plot/CategoryPlot,26,1731,            int count = this.datasets.size();,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,1732,            for (int datasetIndex = 0; datasetIndex < count; datasetIndex++) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,1733,                CategoryDataset dataset = getDataset(datasetIndex);,242.0,0,0,0
org/jfree/chart/plot/CategoryPlot,26,1734,                if (dataset != null) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,1749,        return result;,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2410,        if (space == null) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2415,        if (this.fixedDomainAxisSpace != null) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2431,            RectangleEdge domainEdge = Plot.resolveDomainAxisLocation(,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2433,            if (this.drawSharedDomainAxis) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2439,            for (int i = 0; i < this.domainAxes.size(); i++) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2440,                Axis xAxis = (Axis) this.domainAxes.get(i);,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2441,                if (xAxis != null) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2442,                    RectangleEdge edge = getDomainAxisEdge(i);,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2443,"                    space = xAxis.reserveSpace(g2, this, plotArea, edge, space);",242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2448,        return space;,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2465,        if (space == null) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2470,        if (this.fixedRangeAxisSpace != null) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2486,            for (int i = 0; i < this.rangeAxes.size(); i++) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2487,                Axis yAxis = (Axis) this.rangeAxes.get(i);,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2488,                if (yAxis != null) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2489,                    RectangleEdge edge = getRangeAxisEdge(i);,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2490,"                    space = yAxis.reserveSpace(g2, this, plotArea, edge, space);",242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2494,        return space;,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2508,        AxisSpace space = new AxisSpace();,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2509,"        space = calculateRangeAxisSpace(g2, plotArea, space);",242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2510,"        space = calculateDomainAxisSpace(g2, plotArea, space);",242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2511,        return space;,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2536,        boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2537,        boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2538,        if (b1 || b2) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2543,        if (state == null) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2549,        state.setPlotArea(area);,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2552,        RectangleInsets insets = getInsets();,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2553,        insets.trim(area);,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2556,"        AxisSpace space = calculateAxisSpace(g2, area);",242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2557,"        Rectangle2D dataArea = space.shrink(area, null);",242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2558,        this.axisOffset.trim(dataArea);,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2560,        state.setDataArea(dataArea);,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2564,        if (getRenderer() != null) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2565,"            getRenderer().drawBackground(g2, this, dataArea);",242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2571,"        Map axisStateMap = drawAxes(g2, area, dataArea, state);",242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2684,        AxisCollection axisCollection = new AxisCollection();,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2687,        for (int index = 0; index < this.domainAxes.size(); index++) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2688,            CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(index);,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2689,            if (xAxis != null) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2690,"                axisCollection.add(xAxis, getDomainAxisEdge(index));",242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2695,        for (int index = 0; index < this.rangeAxes.size(); index++) {,242.0,0,0,0
org/jfree/chart/plot/CategoryPlot,26,2696,            ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(index);,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2697,            if (yAxis != null) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2698,"                axisCollection.add(yAxis, getRangeAxisEdge(index));",242.0,0,0,0
org/jfree/chart/plot/CategoryPlot,26,2702,        Map axisStateMap = new HashMap();,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2705,        double cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2707,        Iterator iterator = axisCollection.getAxesAtTop().iterator();,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,2708,        while (iterator.hasNext()) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,3104,        List result = new ArrayList();,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,3105,        for (int datasetIndex = 0; datasetIndex < this.datasets.size(); ,242.0,0,0,0
org/jfree/chart/plot/CategoryPlot,26,3107,            Object dataset = this.datasets.get(datasetIndex);,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,3108,            if (dataset != null) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,3106,                datasetIndex++) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,3124,        return result;,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,3253,        List result = new ArrayList();,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,3254,        int axisIndex = this.domainAxes.indexOf(axis);,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,3255,        List datasets = datasetsMappedToDomainAxis(axisIndex);,242.0,0,0,0
org/jfree/chart/plot/CategoryPlot,26,3256,        Iterator iterator = datasets.iterator();,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,3257,        while (iterator.hasNext()) {,242.0,0,1,0
org/jfree/chart/plot/CategoryPlot,26,3267,        return result;,242.0,0,0,0
org/jfree/chart/axis/Axis,26,1191,            ChartRenderingInfo owner = plotState.getOwner();,161.33333,0,-1,0
org/jfree/chart/axis/Axis,26,1192,                EntityCollection entities = owner.getEntityCollection();,161.33333,1,-1,1
org/jfree/chart/plot/PlotRenderingInfo,26,103,        return this.owner;,161.33333,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,126,        this.plotArea = area;,161.33333,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,127,    },161.33333,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,149,        this.dataArea = area;,161.33333,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,150,    },161.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1735,                    CategoryItemRenderer renderer = getRenderer(datasetIndex);,147.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1736,                    if (renderer != null) {,147.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1737,                        int seriesCount = dataset.getRowCount();,147.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1738,                        for (int i = 0; i < seriesCount; i++) {,147.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3109,                Integer m = (Integer) this.datasetToDomainAxisMap.get(,147.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3111,                if (m == null) {  // a dataset with no mapping is assigned to ,147.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3118,                    if (m.intValue() == axisIndex) {,147.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3119,                        result.add(dataset);,147.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3258,            CategoryDataset dataset = (CategoryDataset) iterator.next();,147.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3260,            for (int i = 0; i < dataset.getColumnCount(); i++) {,147.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3266,        },147.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,91,    public PlotRenderingInfo(ChartRenderingInfo owner) {,80.66667,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,92,        this.owner = owner;        ,80.66667,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,93,        this.dataArea = new Rectangle2D.Double();,80.66667,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,94,        this.subplotInfo = new java.util.ArrayList();    ,80.66667,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,95,    },80.66667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2664,"        fillBackground(g2, area, this.orientation);",72.2,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2665,"        drawBackgroundImage(g2, area);",72.2,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2666,    },72.2,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,689,"        plot.drawBackground(g2, dataArea);",72.2,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,691,    },72.2,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,404,        if (category == null) {,54.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,407,        Font result = (Font) this.tickLabelFontMap.get(category);,54.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,409,        if (result == null) {,54.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,410,            result = getTickLabelFont();,54.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,412,        return result;,54.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,447,        if (category == null) {,54.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,450,        Paint result = (Paint) this.tickLabelPaintMap.get(category);,54.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,452,        if (result == null) {,54.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,453,            result = getTickLabelPaint();,54.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,455,        return result;,54.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1008,                Comparable category = (Comparable) iterator.next();,54.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1009,"                TextBlock label = createLabel(category, l * r, edge, g2);",54.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1010,                if (edge == RectangleEdge.TOP || edge == RectangleEdge.BOTTOM) {,54.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1019,"                Tick tick = new CategoryTick(category, label, ",54.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1022,                ticks.add(tick);,54.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1023,                categoryIndex = categoryIndex + 1;,54.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1024,            },54.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1043,"        TextBlock label = TextUtilities.createTextBlock(category.toString(), ",54.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1046,        return label; ,54.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,192,        return this.labelAnchor;,54.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,201,        return this.rotationAnchor;,54.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,210,        return this.angle;,54.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,81,"        super("""", TextAnchor.CENTER, rotationAnchor, angle);",54.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,82,        this.category = category;,54.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,83,        this.label = label;,54.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,84,        this.labelAnchor = labelAnchor;,54.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,86,    },54.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1739,                            LegendItem item = renderer.getLegendItem(,54.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1741,                            if (item != null) {,54.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1742,                                result.add(item);,54.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3261,                Comparable category = dataset.getColumnKey(i);,54.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3262,                if (!result.contains(category)) {,54.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3263,                    result.add(category);,54.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,362,        if (base == null) {,54.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,365,"        AffineTransform rotate = AffineTransform.getRotateInstance(angle, x, y);",54.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,366,        Shape result = rotate.createTransformedShape(base);,54.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,367,        return result;,54.0,0,-1,0
org/jfree/chart/text/TextBlock,26,276,            xAdj = (float) -width / 2.0f;,28.47059,0,-1,0
org/jfree/chart/text/G2TextMeasurer,26,63,    public G2TextMeasurer(Graphics2D g2) {,26.88889,0,-1,0
org/jfree/chart/text/G2TextMeasurer,26,64,        this.g2 = g2;,26.88889,0,-1,0
org/jfree/chart/text/G2TextMeasurer,26,65,    },26.88889,0,-1,0
org/jfree/chart/text/G2TextMeasurer,26,77,        FontMetrics fm = this.g2.getFontMetrics();,26.88889,0,-1,0
org/jfree/chart/text/G2TextMeasurer,26,78,"        Rectangle2D bounds = TextUtilities.getTextBounds(text.substring(start, ",26.88889,0,-1,0
org/jfree/chart/text/G2TextMeasurer,26,80,        float result = (float) bounds.getWidth();,26.88889,0,-1,0
org/jfree/chart/text/G2TextMeasurer,26,81,        return result;,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,188,        TextBlock result = new TextBlock();,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,189,        BreakIterator iterator = BreakIterator.getLineInstance();,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,190,        iterator.setText(text);,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,191,        int current = 0;,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,192,        int lines = 0;,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,193,        int length = text.length();,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,194,        while (current < length && lines < maxLines) {,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,195,"            int next = nextLineBreak(text, current, maxWidth, iterator, ",26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,197,            if (next == BreakIterator.DONE) {,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,198,"                result.addLine(text.substring(current), font, paint);",26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,199,                return result;,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,241,        int current = start;,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,243,        float x = 0.0f;,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,244,        boolean firstWord = true;,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,245,"        int newline = text.indexOf('\n', start);",26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,246,        if (newline < 0) {,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,247,            newline = Integer.MAX_VALUE;,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,249,        while (((end = iterator.next()) != BreakIterator.DONE)) {,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,250,            if (end > newline) {,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,253,"            x += measurer.getStringWidth(text, current, end);",26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,254,            if (x > width) {,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,270,            firstWord = false;,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,271,            current = end;,26.88889,0,-1,0
org/jfree/chart/text/TextUtilities,26,273,        return BreakIterator.DONE;,26.88889,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,99,        if (dataset == null) {,23.14286,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,102,"        String label = MessageFormat.format(this.formatPattern, ",23.14286,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,104,        return label;,23.14286,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,117,        Object[] result = new Object[1];,23.14286,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,118,        result[0] = dataset.getRowKey(series).toString();,23.14286,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,119,        return result;,23.14286,0,-1,0
org/jfree/chart/plot/Plot,26,1307,        if (location == null) {,22.0,0,-1,0
org/jfree/chart/plot/Plot,26,1310,        if (orientation == null) {,22.0,0,-1,0
org/jfree/chart/plot/Plot,26,1314,        RectangleEdge result = null;,22.0,0,-1,0
org/jfree/chart/plot/Plot,26,1316,        if (location == AxisLocation.TOP_OR_RIGHT) {,22.0,0,-1,0
org/jfree/chart/plot/Plot,26,1324,        else if (location == AxisLocation.TOP_OR_LEFT) {,22.0,0,-1,0
org/jfree/chart/plot/Plot,26,1332,        else if (location == AxisLocation.BOTTOM_OR_RIGHT) {,22.0,0,-1,0
org/jfree/chart/plot/Plot,26,1340,        else if (location == AxisLocation.BOTTOM_OR_LEFT) {,22.0,0,-1,0
org/jfree/chart/plot/Plot,26,1341,            if (orientation == PlotOrientation.HORIZONTAL) {,22.0,0,-1,0
org/jfree/chart/plot/Plot,26,1349,        if (result == null) {,22.0,0,-1,0
org/jfree/chart/plot/Plot,26,1352,        return result;,22.0,0,-1,0
org/jfree/chart/plot/Plot,26,1367,        if (location == null) {,22.0,0,-1,0
org/jfree/chart/plot/Plot,26,1370,        if (orientation == null) {,22.0,0,-1,0
org/jfree/chart/plot/Plot,26,1374,        RectangleEdge result = null;,22.0,0,-1,0
org/jfree/chart/plot/Plot,26,1376,        if (location == AxisLocation.TOP_OR_RIGHT) {,22.0,0,-1,0
org/jfree/chart/plot/Plot,26,1384,        else if (location == AxisLocation.TOP_OR_LEFT) {,22.0,0,-1,0
org/jfree/chart/plot/Plot,26,1410,        if (result == null) {,22.0,0,-1,0
org/jfree/chart/plot/Plot,26,1413,        return result;,22.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,71,    public AxisCollection() {,22.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,72,        this.axesAtTop = new java.util.ArrayList();,22.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,73,        this.axesAtBottom = new java.util.ArrayList();,22.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,74,        this.axesAtLeft = new java.util.ArrayList();,22.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,75,        this.axesAtRight = new java.util.ArrayList();,22.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,76,    },22.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,85,        return this.axesAtTop;,22.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,126,        if (axis == null) {,22.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,129,        if (edge == null) {,22.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,132,        if (edge == RectangleEdge.TOP) {,22.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,135,        else if (edge == RectangleEdge.BOTTOM) {,22.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,138,        else if (edge == RectangleEdge.LEFT) {,22.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,139,            this.axesAtLeft.add(axis);,22.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,144,    },22.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,564,                g2.setPaint(this.outlinePaint);,21.33333,0,-1,0
org/jfree/chart/title/LegendGraphic,26,565,                g2.setStroke(this.outlineStroke);,21.33333,0,-1,0
org/jfree/chart/title/LegendGraphic,26,566,                g2.draw(s);,21.33333,0,-1,0
org/jfree/chart/axis/Axis,26,314,        return this.visible;,21.04348,1,-1,1
org/jfree/chart/axis/Axis,26,381,        return this.labelFont;,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,410,        return this.labelPaint;,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,438,        return this.labelInsets;,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,467,        return this.labelAngle;,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,549,        return this.axisLineVisible;,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,631,        return this.tickLabelsVisible;,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,662,        return this.tickLabelFont;,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,721,        return this.tickLabelInsets;,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,911,        return this.fixedDimension;,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1056,        Rectangle2D result = new Rectangle2D.Double();,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1057,        String axisLabel = getLabel();,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1058,"        if (axisLabel != null && !axisLabel.equals("""")) {",21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1059,            FontMetrics fm = g2.getFontMetrics(getLabelFont());,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1060,"            Rectangle2D bounds = TextUtilities.getTextBounds(axisLabel, g2, fm);",21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1061,            RectangleInsets insets = getLabelInsets();,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1062,            bounds = insets.createOutsetRectangle(bounds);,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1063,            double angle = getLabelAngle();,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1064,            if (edge == RectangleEdge.LEFT || edge == RectangleEdge.RIGHT) {,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1065,                angle = angle - Math.PI / 2.0;,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1067,            double x = bounds.getCenterX();,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1068,            double y = bounds.getCenterY();,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1069,            AffineTransform transformer ,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1071,            Shape labelBounds = transformer.createTransformedShape(bounds);,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1072,            result = labelBounds.getBounds2D();,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1075,        return result;,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1097,        if (state == null) {,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1101,"        if ((label == null) || (label.equals(""""))) {",21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1105,        Font font = getLabelFont();,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1106,        RectangleInsets insets = getLabelInsets();,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1107,        g2.setFont(font);,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1108,        g2.setPaint(getLabelPaint());,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1109,        FontMetrics fm = g2.getFontMetrics();,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1110,"        Rectangle2D labelBounds = TextUtilities.getTextBounds(label, g2, fm);",21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1111,        Shape hotspot = null;,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1113,        if (edge == RectangleEdge.TOP) {,21.04348,0,-1,0
org/jfree/chart/axis/Axis,26,1190,        if (plotState != null && hotspot != null) {,21.04348,0,-1,0
org/jfree/chart/axis/AxisState,26,72,        this(0.0);,21.04348,0,-1,0
org/jfree/chart/axis/AxisState,26,73,    },21.04348,0,-1,0
org/jfree/chart/axis/AxisState,26,80,    public AxisState(double cursor) {,21.04348,0,-1,0
org/jfree/chart/axis/AxisState,26,81,        this.cursor = cursor;,21.04348,0,-1,0
org/jfree/chart/axis/AxisState,26,82,        this.ticks = new java.util.ArrayList();,21.04348,0,-1,0
org/jfree/chart/axis/AxisState,26,83,    },21.04348,0,-1,0
org/jfree/chart/axis/AxisState,26,91,        return this.cursor;,21.04348,0,-1,0
org/jfree/chart/axis/AxisState,26,175,        this.ticks = ticks;,21.04348,0,-1,0
org/jfree/chart/axis/AxisState,26,176,    },21.04348,0,-1,0
org/jfree/chart/axis/AxisSpace,26,167,        if (edge == null) {,21.04348,0,-1,0
org/jfree/chart/axis/AxisSpace,26,170,        if (edge == RectangleEdge.TOP) {     ,21.04348,0,-1,0
org/jfree/chart/axis/AxisSpace,26,173,        else if (edge == RectangleEdge.BOTTOM) {,21.04348,0,-1,0
org/jfree/chart/axis/AxisSpace,26,176,        else if (edge == RectangleEdge.LEFT) {,21.04348,0,-1,0
org/jfree/chart/axis/AxisSpace,26,177,            this.left += space;,21.04348,0,-1,0
org/jfree/chart/axis/AxisSpace,26,185,    },21.04348,0,-1,0
org/jfree/chart/axis/AxisSpace,26,243,        if (result == null) {,21.04348,0,-1,0
org/jfree/chart/axis/AxisSpace,26,244,            result = new Rectangle2D.Double();,21.04348,0,-1,0
org/jfree/chart/axis/AxisSpace,26,246,        result.setRect(,21.04348,0,-1,0
org/jfree/chart/axis/AxisSpace,26,252,        return result;,21.04348,0,-1,0
org/jfree/chart/util/RectangleInsets,26,120,        return this.top;,21.04348,0,-1,0
org/jfree/chart/util/RectangleInsets,26,129,        return this.bottom;,21.04348,0,-1,0
org/jfree/chart/util/RectangleInsets,26,138,        return this.left;,21.04348,0,-1,0
org/jfree/chart/util/RectangleInsets,26,147,        return this.right;,21.04348,0,-1,0
org/jfree/chart/util/RectangleInsets,26,312,"        return createOutsetRectangle(base, true, true);",21.04348,0,-1,0
org/jfree/chart/util/RectangleInsets,26,327,        if (base == null) {,21.04348,0,-1,0
org/jfree/chart/util/RectangleInsets,26,330,        double topMargin = 0.0;,21.04348,0,-1,0
org/jfree/chart/util/RectangleInsets,26,331,        double bottomMargin = 0.0;,21.04348,0,-1,0
org/jfree/chart/util/RectangleInsets,26,332,        if (vertical) {,21.04348,0,-1,0
org/jfree/chart/util/RectangleInsets,26,333,            topMargin = calculateTopOutset(base.getHeight());,21.04348,0,-1,0
org/jfree/chart/util/RectangleInsets,26,334,            bottomMargin = calculateBottomOutset(base.getHeight());,21.04348,0,-1,0
org/jfree/chart/util/RectangleInsets,26,336,        double leftMargin = 0.0;,21.04348,0,-1,0
org/jfree/chart/util/RectangleInsets,26,337,        double rightMargin = 0.0;,21.04348,0,-1,0
org/jfree/chart/util/RectangleInsets,26,338,        if (horizontal) {,21.04348,0,-1,0
org/jfree/chart/util/RectangleInsets,26,339,            leftMargin = calculateLeftOutset(base.getWidth());,21.04348,0,-1,0
org/jfree/chart/util/RectangleInsets,26,340,            rightMargin = calculateRightOutset(base.getWidth());,21.04348,0,-1,0
org/jfree/chart/util/RectangleInsets,26,342,        return new Rectangle2D.Double(,21.04348,0,-1,0
org/jfree/chart/axis/ValueAxis,26,321,        return this.verticalTickLabels;,21.04348,0,-1,0
org/jfree/chart/axis/ValueAxis,26,753,        if (space == null) {,21.04348,0,-1,0
org/jfree/chart/axis/ValueAxis,26,758,        if (!isVisible()) {,21.04348,0,-1,0
org/jfree/chart/axis/ValueAxis,26,763,        double dimension = getFixedDimension();,21.04348,0,-1,0
org/jfree/chart/axis/ValueAxis,26,764,        if (dimension > 0.0) {,21.04348,0,-1,0
org/jfree/chart/axis/ValueAxis,26,769,        double tickLabelHeight = 0.0;,21.04348,0,-1,0
org/jfree/chart/axis/ValueAxis,26,770,        double tickLabelWidth = 0.0;,21.04348,0,-1,0
org/jfree/chart/axis/ValueAxis,26,771,        if (isTickLabelsVisible()) {,21.04348,0,-1,0
org/jfree/chart/axis/ValueAxis,26,772,            g2.setFont(getTickLabelFont());,21.04348,0,-1,0
org/jfree/chart/axis/ValueAxis,26,773,"            List ticks = refreshTicks(g2, new AxisState(), plotArea, edge);",21.04348,0,-1,0
org/jfree/chart/axis/ValueAxis,26,774,            if (RectangleEdge.isTopOrBottom(edge)) {,21.04348,0,-1,0
org/jfree/chart/axis/ValueAxis,26,785,"        Rectangle2D labelEnclosure = getLabelEnclosure(g2, edge);",21.04348,0,-1,0
org/jfree/chart/axis/ValueAxis,26,786,        double labelHeight = 0.0;,21.04348,0,-1,0
org/jfree/chart/axis/ValueAxis,26,787,        double labelWidth = 0.0;,21.04348,0,-1,0
org/jfree/chart/axis/ValueAxis,26,788,        if (RectangleEdge.isTopOrBottom(edge)) {,21.04348,0,-1,0
org/jfree/chart/axis/ValueAxis,26,797,        return space;,21.04348,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1328,        return this.autoTickUnitSelection;,21.04348,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1371,        return this.standardTickUnits;,21.04348,0,-1,0
org/jfree/chart/axis/TickUnit,26,123,                return 0;,21.04348,0,-1,0
org/jfree/chart/axis/Tick,26,107,        return this.text;,21.04348,0,-1,0
org/jfree/chart/axis/TickUnits,26,159,"        int index = Collections.binarySearch(this.tickUnits, unit);",21.04348,0,-1,0
org/jfree/chart/axis/TickUnits,26,160,        if (index >= 0) {,21.04348,0,-1,0
org/jfree/chart/axis/TickUnits,26,161,            return (TickUnit) this.tickUnits.get(index);,21.04348,0,-1,0
org/jfree/chart/axis/TickUnits,26,164,            index = -(index + 1);,21.04348,0,-1,0
org/jfree/chart/axis/TickUnits,26,165,            return (TickUnit) this.tickUnits.get(,21.04348,0,-1,0
org/jfree/chart/axis/TickUnits,26,181,"        return getCeilingTickUnit(new NumberTickUnit(size, ",21.04348,0,-1,0
org/jfree/chart/title/LegendTitle,26,401,                for (int i = 0; i < legendItems.getItemCount(); i++) {,21.04348,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1265,        return getRenderer(0);,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,544,"        if (text == null || text.equals("""")) {",21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,547,"        float[] textAdj = deriveTextBoundsAnchorOffsets(g2, text, textAnchor);",21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,548,"        float[] rotateAdj = deriveRotationAnchorOffsets(g2, text, ",21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,550,"        drawRotatedString(text, g2, x + textAdj[0], y + textAdj[1],",21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,554,    },21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,623,            xAdj = (float) -bounds.getWidth() / 2.0f;,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,654,            yAdj = -descent - leading + (float) (bounds.getHeight() / 2.0);,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,691,        float[] result = new float[2];,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,692,        FontRenderContext frc = g2.getFontRenderContext();,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,693,"        LineMetrics metrics = g2.getFont().getLineMetrics(text, frc);",21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,694,        FontMetrics fm = g2.getFontMetrics();,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,695,"        Rectangle2D bounds = TextUtilities.getTextBounds(text, g2, fm);",21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,696,        float ascent = metrics.getAscent();,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,697,        float halfAscent = ascent / 2.0f;,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,698,        float descent = metrics.getDescent();,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,699,        float leading = metrics.getLeading();,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,700,        float xAdj = 0.0f;,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,701,        float yAdj = 0.0f;,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,703,        if (anchor == TextAnchor.TOP_LEFT,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,712,        else if (anchor == TextAnchor.TOP_CENTER,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,718,            xAdj = (float) bounds.getWidth() / 2.0f;,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,731,        if (anchor == TextAnchor.TOP_LEFT,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,738,        else if (anchor == TextAnchor.CENTER_LEFT,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,742,            yAdj = descent + leading - (float) (bounds.getHeight() / 2.0);,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,766,        result[0] = xAdj;,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,767,        result[1] = yAdj;,21.04348,0,-1,0
org/jfree/chart/text/TextUtilities,26,768,        return result;,21.04348,0,-1,0
org/jfree/chart/JFreeChart,26,1198,            Title currentTitle = (Title) iterator.next();,20.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1199,"            EntityCollection e = drawTitle(currentTitle, g2, nonTitleArea, ",20.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1201,            if (e != null) {,20.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1204,        },20.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1248,        else if (vAlign == VerticalAlignment.CENTER) {,20.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1251,        else if (vAlign == VerticalAlignment.BOTTOM) {,20.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1252,            y = frame.getMaxY() - dimensions.height;   ,20.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1307,        else if (position == RectangleEdge.BOTTOM) {,20.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1308,"            Size2D size = t.arrange(g2, constraint);",20.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1309,"            titleArea = createAlignedRectangle2D(size, area, ",20.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1311,"            retValue = t.draw(g2, titleArea, p);",20.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1312,"            area.setRect(area.getX(), area.getY(), area.getWidth(), ",20.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1314,        },20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,241,        return this.frame;,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,385,        double result = this.margin.trimWidth(fixedWidth);,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,386,        result = this.frame.getInsets().trimWidth(result);,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,387,        result = this.padding.trimWidth(result);,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,388,"        return Math.max(result, 0.0);",20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,403,        double result = this.margin.trimHeight(fixedHeight);,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,404,        result = this.frame.getInsets().trimHeight(result);,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,405,        result = this.padding.trimHeight(result);,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,406,"        return Math.max(result, 0.0);",20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,418,        if (c == null) {,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,421,        if (c.equals(RectangleConstraint.NONE)) {,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,424,        double w = c.getWidth();,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,425,        Range wr = c.getWidthRange();,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,426,        double h = c.getHeight();,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,427,        Range hr = c.getHeightRange();,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,428,        double ww = trimToContentWidth(w);,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,429,        double hh = trimToContentHeight(h);,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,430,        Range wwr = trimToContentWidth(wr);,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,431,        Range hhr = trimToContentHeight(hr);,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,432,        return new RectangleConstraint(,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,439,        if (r == null) {,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,442,        double lowerBound = 0.0;,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,443,        double upperBound = Double.POSITIVE_INFINITY;,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,444,        if (r.getLowerBound() > 0.0) {,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,447,        if (r.getUpperBound() < Double.POSITIVE_INFINITY) {,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,448,            upperBound = trimToContentWidth(r.getUpperBound());,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,450,"        return new Range(lowerBound, upperBound);",20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,454,        if (r == null) {,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,457,        double lowerBound = 0.0;,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,458,        double upperBound = Double.POSITIVE_INFINITY;,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,459,        if (r.getLowerBound() > 0.0) {,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,462,        if (r.getUpperBound() < Double.POSITIVE_INFINITY) {,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,463,            upperBound = trimToContentHeight(r.getUpperBound());,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,465,"        return new Range(lowerBound, upperBound);",20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,476,        double result = contentWidth;,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,477,        result = this.padding.extendWidth(result);,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,478,        result = this.frame.getInsets().extendWidth(result);,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,479,        result = this.margin.extendWidth(result);,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,480,        return result;,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,491,        double result = contentHeight;,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,492,        result = this.padding.extendHeight(result);,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,493,        result = this.frame.getInsets().extendHeight(result);,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,494,        result = this.margin.extendHeight(result);,20.16667,0,-1,0
org/jfree/chart/block/AbstractBlock,26,495,        return result;,20.16667,0,-1,0
org/jfree/chart/axis/AxisSpace,26,81,    public AxisSpace() {,20.16667,0,-1,0
org/jfree/chart/axis/AxisSpace,26,82,        this.top = 0.0;,20.16667,0,-1,0
org/jfree/chart/axis/AxisSpace,26,83,        this.bottom = 0.0;,20.16667,0,-1,0
org/jfree/chart/axis/AxisSpace,26,84,        this.left = 0.0;,20.16667,0,-1,0
org/jfree/chart/axis/AxisSpace,26,85,        this.right = 0.0;,20.16667,0,-1,0
org/jfree/chart/axis/AxisSpace,26,86,    },20.16667,0,-1,0
org/jfree/chart/util/RectangleInsets,26,478,        return width - calculateLeftInset(width) - calculateRightInset(width);   ,20.16667,0,-1,0
org/jfree/chart/util/RectangleInsets,26,489,        return width + calculateLeftOutset(width) + calculateRightOutset(width);   ,20.16667,0,-1,0
org/jfree/chart/util/RectangleInsets,26,500,        return height ,20.16667,0,-1,0
org/jfree/chart/util/RectangleInsets,26,512,        return height ,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,87,    public TextBlock() {,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,88,        this.lines = new java.util.ArrayList();,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,89,        this.lineAlignment = HorizontalAlignment.CENTER;,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,90,    },20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,121,"        addLine(new TextLine(text, font, paint));",20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,122,    },20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,130,        this.lines.add(line);    ,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,131,    },20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,164,        double width = 0.0;,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,165,        double height = 0.0;,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,166,        Iterator iterator = this.lines.iterator();,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,167,        while (iterator.hasNext()) {,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,168,            TextLine line = (TextLine) iterator.next();,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,169,            Size2D dimension = line.calculateDimensions(g2);,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,170,"            width = Math.max(width, dimension.getWidth());",20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,171,            height = height + dimension.getHeight();,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,172,        },20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,173,"        return new Size2D(width, height);",20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,212,"        draw(g2, x, y, anchor, 0.0f, 0.0f, 0.0);",20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,213,    },20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,232,        Size2D d = calculateDimensions(g2);,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,233,"        float[] offsets = calculateOffsets(anchor, d.getWidth(), d.getHeight());",20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,234,        Iterator iterator = this.lines.iterator();,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,235,        float yCursor = 0.0f;,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,236,        while (iterator.hasNext()) {,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,237,            TextLine line = (TextLine) iterator.next();,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,238,            Size2D dimension = line.calculateDimensions(g2);,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,239,            float lineOffset = 0.0f;,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,240,            if (this.lineAlignment == HorizontalAlignment.CENTER) {,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,241,                lineOffset = (float) (d.getWidth() - dimension.getWidth()) ,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,247,"            line.draw(g2, anchorX + offsets[0] + lineOffset, anchorY ",20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,250,            yCursor = yCursor + (float) dimension.getHeight();,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,251,        },20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,253,    },20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,268,        float[] result = new float[2];,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,269,        float xAdj = 0.0f;,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,270,        float yAdj = 0.0f;,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,272,        if (anchor == TextBlockAnchor.TOP_CENTER,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,287,        if (anchor == TextBlockAnchor.TOP_LEFT,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,291,            yAdj = 0.0f;,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,308,        result[0] = xAdj;,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,309,        result[1] = yAdj;,20.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,310,        return result;,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,390,        this.items.clear();,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,391,        RectangleEdge p = getPosition();,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,392,        if (RectangleEdge.isTopOrBottom(p)) {,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,393,            this.items.setArrangement(this.hLayout);   ,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,398,        for (int s = 0; s < this.sources.length; s++) {,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,399,            LegendItemCollection legendItems = this.sources[s].getLegendItems();,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,400,            if (legendItems != null) {,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,408,    },20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,471,        Size2D result = new Size2D();,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,472,        fetchLegendItems();,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,473,        if (this.items.isEmpty()) {,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,509,        Rectangle2D target = (Rectangle2D) area.clone();,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,510,        target = trimMargin(target);,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,511,        if (this.backgroundPaint != null) {,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,512,            g2.setPaint(this.backgroundPaint);,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,513,            g2.fill(target);,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,515,        BlockFrame border = getFrame();,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,516,"        border.draw(g2, target);",20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,517,        border.getInsets().trim(target);,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,518,        BlockContainer container = this.wrapper;,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,519,        if (container == null) {,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,520,            container = this.items; ,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,522,        target = trimPadding(target);,20.16667,0,-1,0
org/jfree/chart/title/LegendTitle,26,523,"        return container.draw(g2, target, params);   ",20.16667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1278,        CategoryItemRenderer result = null;,20.16667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1279,        if (this.renderers.size() > index) {,20.16667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1280,            result = (CategoryItemRenderer) this.renderers.get(index);,20.16667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1282,        return result;,20.16667,0,-1,0
org/jfree/chart/util/Size2D,26,49,"        this(0.0, 0.0);",20.16667,0,-1,0
org/jfree/chart/util/Size2D,26,50,    },20.16667,0,-1,0
org/jfree/chart/util/Size2D,26,69,        return this.width;,20.16667,0,-1,0
org/jfree/chart/util/Size2D,26,87,        return this.height;,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,120,        if (arrangement == null) {,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,123,        this.arrangement = arrangement;   ,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,124,    },20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,133,        return this.blocks.isEmpty();   ,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,170,        this.blocks.clear();,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,171,        this.arrangement.clear();,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,172,    },20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,209,        EntityBlockParams ebp = null;,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,210,        StandardEntityCollection sec = null;,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,211,        if (params instanceof EntityBlockParams) {,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,212,            ebp = (EntityBlockParams) params;,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,213,            if (ebp.getGenerateEntities()) {,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,217,        Rectangle2D contentArea = (Rectangle2D) area.clone();,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,218,        contentArea = trimMargin(contentArea);,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,219,"        drawBorder(g2, contentArea);",20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,220,        contentArea = trimBorder(contentArea);,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,221,        contentArea = trimPadding(contentArea);,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,222,        Iterator iterator = this.blocks.iterator();,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,223,        while (iterator.hasNext()) {,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,238,        BlockResult result = null;,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,239,        if (sec != null) {,20.16667,0,-1,0
org/jfree/chart/block/BlockContainer,26,243,        return result;,20.16667,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,172,        return this.width;,20.16667,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,181,        return this.widthRange;   ,20.16667,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,190,        return this.widthConstraintType;,20.16667,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,199,        return this.height;,20.16667,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,208,        return this.heightRange;   ,20.16667,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,217,        return this.heightConstraintType;,20.16667,0,-1,0
org/jfree/chart/block/LineBorder,26,125,        return this.insets;,20.16667,0,-1,0
org/jfree/chart/block/LineBorder,26,144,        double w = area.getWidth();,20.16667,0,-1,0
org/jfree/chart/block/LineBorder,26,145,        double h = area.getHeight();,20.16667,0,-1,0
org/jfree/chart/block/LineBorder,26,147,        if (w <= 0.0 || h <= 0.0) {,20.16667,0,-1,0
org/jfree/chart/block/FlowArrangement,26,418,    },20.16667,0,-1,0
org/jfree/chart/block/BlockResult,26,59,    public BlockResult() {,20.16667,0,-1,0
org/jfree/chart/block/BlockResult,26,60,        this.entities = null;    ,20.16667,0,-1,0
org/jfree/chart/block/BlockResult,26,61,    },20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,127,"        this(text, font, paint, 0.0f);",20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,128,    },20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,139,                        float baselineOffset) {,20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,140,        if (text == null) {,20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,143,        if (font == null) {,20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,146,        if (paint == null) {,20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,149,        this.text = text;,20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,150,        this.font = font;,20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,151,        this.paint = paint;,20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,152,        this.baselineOffset = baselineOffset;,20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,153,    },20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,80,"    public static final Font DEFAULT_FONT = new Font(""Serif"", Font.PLAIN, 12);",20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,83,    public static final Paint DEFAULT_PAINT = Color.black;,20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,208,        g2.setFont(this.font);,20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,209,        g2.setPaint(this.paint);,20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,210,"        TextUtilities.drawRotatedString(this.text, g2, anchorX, anchorY ",20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,213,    },20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,223,        FontMetrics fm = g2.getFontMetrics(this.font);,20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,224,"        Rectangle2D bounds = TextUtilities.getTextBounds(this.text, g2, fm);",20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,225,"        Size2D result = new Size2D(bounds.getWidth(), bounds.getHeight());",20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,226,        return result;,20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,239,        float result = 0.0f;,20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,240,        FontMetrics fm = g2.getFontMetrics(this.font);,20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,241,"        LineMetrics lm = fm.getLineMetrics(""ABCxyz"", g2);",20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,242,        if (anchor == TextAnchor.TOP_LEFT || anchor == TextAnchor.TOP_CENTER,20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,244,            result = lm.getAscent();,20.16667,0,-1,0
org/jfree/chart/text/TextFragment,26,251,        return result;                                             ,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,109,"    public TextLine(String text, Font font, Paint paint) {",20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,110,        if (text == null) {,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,113,        if (font == null) {,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,116,        if (paint == null) {,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,119,        this.fragments = new java.util.ArrayList();,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,120,"        TextFragment fragment = new TextFragment(text, font, paint);",20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,121,        this.fragments.add(fragment);,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,122,    },20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,158,        float x = anchorX;,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,159,"        float yOffset = calculateBaselineOffset(g2, anchor);",20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,160,        Iterator iterator = this.fragments.iterator();,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,161,        while (iterator.hasNext()) {,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,162,            TextFragment fragment = (TextFragment) iterator.next();,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,163,            Size2D d = fragment.calculateDimensions(g2);,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,164,"            fragment.draw(g2, x, anchorY + yOffset, TextAnchor.BASELINE_LEFT, ",20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,166,            x = x + (float) d.getWidth();,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,167,        },20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,169,    },20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,179,        double width = 0.0;,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,180,        double height = 0.0;,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,181,        Iterator iterator = this.fragments.iterator();,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,182,        while (iterator.hasNext()) {,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,183,            TextFragment fragment = (TextFragment) iterator.next();,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,184,            Size2D dimension = fragment.calculateDimensions(g2);,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,185,            width = width + dimension.getWidth();,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,186,"            height = Math.max(height, dimension.getHeight());",20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,187,        },20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,188,"        return new Size2D(width, height);",20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,229,        float result = 0.0f;,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,230,        Iterator iterator = this.fragments.iterator();,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,231,        while (iterator.hasNext()) {,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,232,            TextFragment fragment = (TextFragment) iterator.next();,20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,233,"            result = Math.max(result, ",20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,235,        },20.16667,0,-1,0
org/jfree/chart/text/TextLine,26,236,        return result;,20.16667,0,-1,0
org/jfree/chart/text/TextUtilities,26,520,"        if (text == null || text.equals("""")) {",20.16667,0,-1,0
org/jfree/chart/text/TextUtilities,26,523,"        float[] textAdj = deriveTextBoundsAnchorOffsets(g2, text, textAnchor);",20.16667,0,-1,0
org/jfree/chart/text/TextUtilities,26,524,"        drawRotatedString(text, g2, x + textAdj[0], y + textAdj[1], angle, ",20.16667,0,-1,0
org/jfree/chart/text/TextUtilities,26,526,    },20.16667,0,-1,0
org/jfree/chart/text/TextUtilities,26,657,        else if (anchor == TextAnchor.BASELINE_LEFT,20.16667,0,-1,0
org/jfree/chart/text/TextUtilities,26,661,            yAdj = 0.0f;,20.16667,0,-1,0
org/jfree/chart/JFreeChart,26,457,        return this.borderVisible;,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1130,"        notifyListeners(new ChartProgressEvent(this, this, ",19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1134,        if (info != null) {,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1140,        Shape savedClip = g2.getClip();,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1141,        g2.clip(chartArea);,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1143,        g2.addRenderingHints(this.renderingHints);,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1146,        if (this.backgroundPaint != null) {,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1147,            g2.setPaint(this.backgroundPaint);,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1148,            g2.fill(chartArea);,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1151,        if (this.backgroundImage != null) {,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1165,        if (isBorderVisible()) {,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1180,        Rectangle2D nonTitleArea = new Rectangle2D.Double();,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1181,        nonTitleArea.setRect(chartArea);,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1182,        this.padding.trim(nonTitleArea);,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1184,        EntityCollection entities = null;,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1185,        if (info != null) {,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1188,        if (this.title != null) {,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1196,        Iterator iterator = this.subtitles.iterator();,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1197,        while (iterator.hasNext()) {,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1206,        Rectangle2D plotArea = nonTitleArea;,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1209,        PlotRenderingInfo plotInfo = null;,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1210,        if (info != null) {,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1213,"        this.plot.draw(g2, plotArea, anchor, null, plotInfo);",19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1234,        double x = Double.NaN;,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1235,        double y = Double.NaN;,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1236,        if (hAlign == HorizontalAlignment.LEFT) {,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1239,        else if (hAlign == HorizontalAlignment.CENTER) {,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1240,            x = frame.getCenterX() - (dimensions.width / 2.0);   ,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1245,        if (vAlign == VerticalAlignment.TOP) {,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1255,"        return new Rectangle2D.Double(x, y, dimensions.width, ",19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1276,        if (t == null) {,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1279,        if (area == null) {,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1282,        Rectangle2D titleArea = new Rectangle2D.Double();,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1283,        RectangleEdge position = t.getPosition();,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1284,        double ww = area.getWidth();,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1285,        if (ww <= 0.0) {,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1288,        double hh = area.getHeight();,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1289,        if (hh <= 0.0) {,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1292,"        RectangleConstraint constraint = new RectangleConstraint(ww, ",19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1295,        Object retValue = null;,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1296,        BlockParams p = new BlockParams();,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1297,        p.setGenerateEntities(entities);,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1298,        if (position == RectangleEdge.TOP) {,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1335,        EntityCollection result = null;,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1336,        if (retValue instanceof EntityBlockResult) {,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1340,        return result;   ,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1533,        Object[] listeners = this.progressListeners.getListenerList();,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1534,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,19.36,0,-1,0
org/jfree/chart/JFreeChart,26,1540,    },19.36,0,-1,0
org/jfree/chart/title/Title,26,208,        return this.position;,19.36,0,-1,0
org/jfree/chart/title/Title,26,233,        return this.horizontalAlignment;,19.36,0,-1,0
org/jfree/chart/block/AbstractBlock,26,508,        this.margin.trim(area);,19.36,0,-1,0
org/jfree/chart/block/AbstractBlock,26,509,        return area;,19.36,0,-1,0
org/jfree/chart/block/AbstractBlock,26,522,        this.frame.getInsets().trim(area);,19.36,0,-1,0
org/jfree/chart/block/AbstractBlock,26,523,        return area;,19.36,0,-1,0
org/jfree/chart/block/AbstractBlock,26,536,        this.padding.trim(area);,19.36,0,-1,0
org/jfree/chart/block/AbstractBlock,26,537,        return area;,19.36,0,-1,0
org/jfree/chart/block/AbstractBlock,26,547,"        this.frame.draw(g2, area);",19.36,0,-1,0
org/jfree/chart/block/AbstractBlock,26,548,    },19.36,0,-1,0
org/jfree/chart/plot/Plot,26,492,        return this.insets;,19.36,0,-1,0
org/jfree/chart/event/ChartProgressEvent,26,79,        super(source);,19.36,0,-1,0
org/jfree/chart/event/ChartProgressEvent,26,80,        this.chart = chart;,19.36,0,-1,0
org/jfree/chart/event/ChartProgressEvent,26,81,        this.type = type;,19.36,0,-1,0
org/jfree/chart/event/ChartProgressEvent,26,82,    },19.36,0,-1,0
org/jfree/chart/util/RectangleEdge,26,126,        return (edge == RectangleEdge.LEFT || edge == RectangleEdge.RIGHT);    ,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,358,        double result = this.top;,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,359,        if (this.unitType == UnitType.RELATIVE) {,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,362,        return result;,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,373,        double result = this.top;,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,374,        if (this.unitType == UnitType.RELATIVE) {,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,377,        return result;,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,388,        double result = this.bottom;,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,389,        if (this.unitType == UnitType.RELATIVE) {,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,392,        return result;,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,403,        double result = this.bottom;,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,404,        if (this.unitType == UnitType.RELATIVE) {,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,407,        return result;,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,418,        double result = this.left;,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,419,        if (this.unitType == UnitType.RELATIVE) {,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,422,        return result;,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,433,        double result = this.left;,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,434,        if (this.unitType == UnitType.RELATIVE) {,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,437,        return result;,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,448,        double result = this.right;,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,449,        if (this.unitType == UnitType.RELATIVE) {,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,452,        return result;,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,463,        double result = this.right;,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,464,        if (this.unitType == UnitType.RELATIVE) {,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,467,        return result;,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,522,        double w = area.getWidth();,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,523,        double h = area.getHeight();,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,524,        double l = calculateLeftInset(w);,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,525,        double r = calculateRightInset(w);,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,526,        double t = calculateTopInset(h);,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,527,        double b = calculateBottomInset(h);,19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,528,"        area.setRect(area.getX() + l, area.getY() + t, w - l - r, h - t - b);    ",19.36,0,-1,0
org/jfree/chart/util/RectangleInsets,26,529,    },19.36,0,-1,0
org/jfree/chart/util/Size2D,26,58,"    public Size2D(double width, double height) {",19.36,0,-1,0
org/jfree/chart/util/Size2D,26,59,        this.width = width;,19.36,0,-1,0
org/jfree/chart/util/Size2D,26,60,        this.height = height;,19.36,0,-1,0
org/jfree/chart/util/Size2D,26,61,    },19.36,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,257,        if (classLoader != null) {,19.36,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,260,"        if (""ThreadContext"".equals(classLoaderSource)) {",19.36,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,261,            final ClassLoader threadLoader,19.36,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,263,            if (threadLoader != null) {,19.36,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,264,                return threadLoader;,19.36,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,441,        ClassLoader loader = getClassLoader(ObjectUtilities.class);,19.36,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,442,        if (loader != null) {,19.36,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,444,"              loader.loadClass(""java.util.RandomAccess"");",19.36,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,445,              return true;,19.36,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,151,                               LengthConstraintType heightConstraintType) {,19.36,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,152,        if (widthConstraintType == null) {,19.36,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,155,        if (heightConstraintType == null) {,19.36,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,158,        this.width = w;,19.36,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,159,        this.widthRange = widthRange;,19.36,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,160,        this.widthConstraintType = widthConstraintType;,19.36,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,161,        this.height = h;,19.36,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,162,        this.heightRange = heightRange;,19.36,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,163,        this.heightConstraintType = heightConstraintType;,19.36,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,164,    },19.36,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,62,    public static final RectangleConstraint NONE = new RectangleConstraint(,19.36,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,76,    private LengthConstraintType(String name) {,19.36,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,77,        this.name = name;,19.36,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,78,    },19.36,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,57,    public static final LengthConstraintType NONE ,19.36,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,61,    public static final LengthConstraintType RANGE ,19.36,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,65,    public static final LengthConstraintType FIXED ,19.36,0,-1,0
org/jfree/chart/block/BlockParams,26,74,    public BlockParams() {,19.36,0,-1,0
org/jfree/chart/block/BlockParams,26,75,        this.translateX = 0.0;,19.36,0,-1,0
org/jfree/chart/block/BlockParams,26,76,        this.translateY = 0.0;,19.36,0,-1,0
org/jfree/chart/block/BlockParams,26,77,        this.generateEntities = false;    ,19.36,0,-1,0
org/jfree/chart/block/BlockParams,26,78,    },19.36,0,-1,0
org/jfree/chart/block/BlockParams,26,87,        return this.generateEntities;   ,19.36,0,-1,0
org/jfree/chart/block/BlockParams,26,96,        this.generateEntities = generate;   ,19.36,0,-1,0
org/jfree/chart/block/BlockParams,26,97,    },19.36,0,-1,0
org/jfree/chart/block/BlockBorder,26,147,        return this.insets;,19.36,0,-1,0
org/jfree/chart/block/BlockBorder,26,168,        double t = this.insets.calculateTopInset(area.getHeight());,19.36,0,-1,0
org/jfree/chart/block/BlockBorder,26,169,        double b = this.insets.calculateBottomInset(area.getHeight());,19.36,0,-1,0
org/jfree/chart/block/BlockBorder,26,170,        double l = this.insets.calculateLeftInset(area.getWidth());,19.36,0,-1,0
org/jfree/chart/block/BlockBorder,26,171,        double r = this.insets.calculateRightInset(area.getWidth());,19.36,0,-1,0
org/jfree/chart/block/BlockBorder,26,172,        double x = area.getX();,19.36,0,-1,0
org/jfree/chart/block/BlockBorder,26,173,        double y = area.getY();,19.36,0,-1,0
org/jfree/chart/block/BlockBorder,26,174,        double w = area.getWidth();,19.36,0,-1,0
org/jfree/chart/block/BlockBorder,26,175,        double h = area.getHeight();,19.36,0,-1,0
org/jfree/chart/block/BlockBorder,26,176,        g2.setPaint(this.paint);,19.36,0,-1,0
org/jfree/chart/block/BlockBorder,26,177,        Rectangle2D rect = new Rectangle2D.Double();,19.36,0,-1,0
org/jfree/chart/block/BlockBorder,26,178,        if (t > 0.0) {,19.36,0,-1,0
org/jfree/chart/block/BlockBorder,26,182,        if (b > 0.0) {,19.36,0,-1,0
org/jfree/chart/block/BlockBorder,26,186,        if (l > 0.0) {,19.36,0,-1,0
org/jfree/chart/block/BlockBorder,26,190,        if (r > 0.0) {,19.36,0,-1,0
org/jfree/chart/block/BlockBorder,26,194,    },19.36,0,-1,0
org/jfree/chart/LegendItemCollection,26,67,    public LegendItemCollection() {,19.36,0,-1,0
org/jfree/chart/LegendItemCollection,26,68,        this.items = new java.util.ArrayList();,19.36,0,-1,0
org/jfree/chart/LegendItemCollection,26,69,    },19.36,0,-1,0
org/jfree/chart/LegendItemCollection,26,106,        return this.items.size();,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,93,        boolean isJava14 = ObjectUtilities.isJDK14();,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,94,        useDrawRotatedStringWorkaround = (isJava14 == false);,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,95,        useFontMetricsGetStringBounds = (isJava14 == true);,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,96,    },19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,290,        if (TextUtilities.useFontMetricsGetStringBounds) {,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,291,"            bounds = fm.getStringBounds(text, g2);",19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,295,"            LineMetrics lm = fm.getFont().getLineMetrics(text,",19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,297,"            bounds.setRect(bounds.getX(), bounds.getY(), bounds.getWidth(),",19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,299,        },19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,306,        return bounds;,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,478,"        if ((text == null) || (text.equals(""""))) {",19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,482,        AffineTransform saved = g2.getTransform();,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,485,        AffineTransform rotate = AffineTransform.getRotateInstance(,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,487,        g2.transform(rotate);,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,489,        if (useDrawRotatedStringWorkaround) {,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,497,"            g2.drawString(text, textX, textY);",19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,499,        g2.setTransform(saved);,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,501,    },19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,604,        float[] result = new float[2];,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,605,        FontRenderContext frc = g2.getFontRenderContext();,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,606,        Font f = g2.getFont();,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,607,        FontMetrics fm = g2.getFontMetrics(f);,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,608,"        Rectangle2D bounds = TextUtilities.getTextBounds(text, g2, fm);",19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,609,"        LineMetrics metrics = f.getLineMetrics(text, frc);",19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,610,        float ascent = metrics.getAscent();,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,611,        float halfAscent = ascent / 2.0f;,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,612,        float descent = metrics.getDescent();,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,613,        float leading = metrics.getLeading();,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,614,        float xAdj = 0.0f;,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,615,        float yAdj = 0.0f;,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,617,        if (anchor == TextAnchor.TOP_CENTER,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,626,        else if (anchor == TextAnchor.TOP_RIGHT,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,636,        if (anchor == TextAnchor.TOP_LEFT,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,643,        else if (anchor == TextAnchor.HALF_ASCENT_LEFT,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,650,        else if (anchor == TextAnchor.CENTER_LEFT,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,671,        result[0] = xAdj;,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,672,        result[1] = yAdj;,19.36,0,-1,0
org/jfree/chart/text/TextUtilities,26,673,        return result;,19.36,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,237,        return this.plot;,19.05882,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1258,        DrawingSupplier result = null;,19.05882,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1259,        CategoryPlot cp = getPlot();,19.05882,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1260,        if (cp != null) {,19.05882,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1261,            result = cp.getDrawingSupplier();,19.05882,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1263,        return result;,19.05882,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,163,        return this.data.getColumnKey(column);,18.77778,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,217,        return (Comparable) this.columnKeys.get(column);,18.77778,0,-1,0
org/jfree/chart/axis/ValueTick,26,69,"        super(label, textAnchor, rotationAnchor, angle);",18.61538,0,-1,0
org/jfree/chart/axis/ValueTick,26,70,        this.value = value;,18.61538,0,-1,0
org/jfree/chart/axis/ValueTick,26,72,    },18.61538,0,-1,0
org/jfree/chart/axis/Tick,26,86,                double angle) {,18.61538,0,-1,0
org/jfree/chart/axis/Tick,26,87,        if (textAnchor == null) {,18.61538,0,-1,0
org/jfree/chart/axis/Tick,26,90,        if (rotationAnchor == null) {,18.61538,0,-1,0
org/jfree/chart/axis/Tick,26,95,        this.text = text;,18.61538,0,-1,0
org/jfree/chart/axis/Tick,26,96,        this.textAnchor = textAnchor;,18.61538,0,-1,0
org/jfree/chart/axis/Tick,26,97,        this.rotationAnchor = rotationAnchor;,18.61538,0,-1,0
org/jfree/chart/axis/Tick,26,98,        this.angle = angle;,18.61538,0,-1,0
org/jfree/chart/axis/Tick,26,99,    },18.61538,0,-1,0
org/jfree/chart/axis/ValueAxis,26,899,        return this.inverted;,17.92593,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1463,        return this.legendItemLabelGenerator;,17.06667,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1491,        return this.legendItemToolTipGenerator;,17.06667,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1516,        return this.legendItemURLGenerator;,17.06667,0,-1,0
org/jfree/chart/util/RectangleEdge,26,114,        return (edge == RectangleEdge.TOP || edge == RectangleEdge.BOTTOM);    ,16.68966,0,-1,0
org/jfree/chart/block/FlowArrangement,26,288,            return s1;  // TODO: we didn't check the height yet,16.2,0,-1,0
org/jfree/chart/axis/Axis,26,342,        return this.label;,16.13333,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1420,"        double zero = valueToJava2D(0.0, area, edge);",16.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1421,"        double l = valueToJava2D(length, area, edge);",16.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1422,        return Math.abs(l - zero);,16.0,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,98,        return this.formatter.format(value);,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,309,        return this.tickUnit;,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,365,        return this.numberFormatOverride;,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,525,        Range range = getRange();,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,526,        double axisMin = range.getLowerBound();,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,527,        double axisMax = range.getUpperBound();,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,529,        double min = 0.0;,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,530,        double max = 0.0;,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,531,        if (RectangleEdge.isTopOrBottom(edge)) {,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,539,        if (isInverted()) {,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,544,            return min ,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,599,        double unit = getTickUnit().getSize();,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,600,        double index = Math.ceil(getRange().getLowerBound() / unit);,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,601,        return index * unit;,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,627,        double unit = getTickUnit().getSize();,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,628,        Range range = getRange();,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,629,        return (int) (Math.floor(range.getUpperBound() / unit),16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1049,        if (RectangleEdge.isTopOrBottom(edge)) {,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1056,    },16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1149,        List result = new java.util.ArrayList();,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1150,        if (RectangleEdge.isTopOrBottom(edge)) {,16.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1156,        return result;,16.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,295,"        setPadding(new RectangleInsets(top, left, bottom, right));",15.42857,0,-1,0
org/jfree/chart/block/AbstractBlock,26,296,    },15.42857,0,-1,0
org/jfree/chart/block/AbstractBlock,26,356,        return this.bounds;,15.42857,0,-1,0
org/jfree/chart/block/AbstractBlock,26,422,            return c;,15.42857,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,140,        Point2D result = new Point2D.Double();,15.42857,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,141,        if (anchor == RectangleAnchor.CENTER) {,15.42857,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,142,"            result.setLocation(rectangle.getCenterX(), rectangle.getCenterY());",15.42857,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,168,        return result;,15.42857,0,-1,0
org/jfree/chart/text/TextBlock,26,279,        else if (anchor == TextBlockAnchor.TOP_RIGHT,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,263,        return this.legendItemGraphicAnchor;,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,284,        return this.legendItemGraphicLocation;,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,402,                    LegendItem item = legendItems.get(i);,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,403,                    Block block = createLegendItemBlock(item);,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,404,                    this.items.add(block);,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,418,        BlockContainer result = null;,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,419,"        LegendGraphic lg = new LegendGraphic(item.getShape(), ",15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,421,        lg.setFillPaintTransformer(item.getFillPaintTransformer());,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,422,        lg.setShapeFilled(item.isShapeFilled());,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,423,        lg.setLine(item.getLine());,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,424,        lg.setLineStroke(item.getLineStroke());,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,425,        lg.setLinePaint(item.getLinePaint());,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,426,        lg.setLineVisible(item.isLineVisible());,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,427,        lg.setShapeVisible(item.isShapeVisible());,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,428,        lg.setShapeOutlineVisible(item.isShapeOutlineVisible());,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,429,        lg.setOutlinePaint(item.getOutlinePaint());,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,430,        lg.setOutlineStroke(item.getOutlineStroke());,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,431,        lg.setPadding(this.legendItemGraphicPadding);,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,433,        LegendItemBlockContainer legendItem = new LegendItemBlockContainer(,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,436,        lg.setShapeAnchor(getLegendItemGraphicAnchor());,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,437,        lg.setShapeLocation(getLegendItemGraphicLocation());,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,438,"        legendItem.add(lg, this.legendItemGraphicEdge);",15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,439,"        LabelBlock labelBlock = new LabelBlock(item.getLabel(), this.itemFont, ",15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,441,        labelBlock.setPadding(this.itemLabelPadding);,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,442,        legendItem.add(labelBlock);,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,443,        legendItem.setToolTipText(item.getToolTipText());,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,444,        legendItem.setURLText(item.getURLText());,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,446,        result = new BlockContainer(new CenterArrangement());,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,447,        result.add(legendItem);,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,449,        return result;,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,476,        BlockContainer container = this.wrapper;,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,477,        if (container == null) {,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,478,            container = this.items;,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,480,        RectangleConstraint c = toContentConstraint(constraint);,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,481,"        Size2D size = container.arrange(g2, c);",15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,482,        result.height = calculateTotalHeight(size.height);,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,483,        result.width = calculateTotalWidth(size.width);,15.42857,0,-1,0
org/jfree/chart/title/LegendTitle,26,484,        return result;,15.42857,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,336,        if (shape == null) {,15.42857,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,339,        if (anchor == null) {,15.42857,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,342,"        Point2D anchorPoint = RectangleAnchor.coordinates(shape.getBounds2D(), ",15.42857,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,344,        AffineTransform transform = AffineTransform.getTranslateInstance(,15.42857,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,346,        return transform.createTransformedShape(shape);   ,15.42857,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,100,        super(arrangement);,15.42857,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,101,        this.dataset = dataset;,15.42857,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,102,        this.seriesKey = seriesKey;,15.42857,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,103,    },15.42857,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,146,        this.toolTipText = text;   ,15.42857,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,147,    },15.42857,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,168,        this.urlText = text;   ,15.42857,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,169,    },15.42857,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,183,"        super.draw(g2, area, null);",15.42857,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,184,        EntityBlockParams ebp = null;,15.42857,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,185,        BlockResult r = new BlockResult();,15.42857,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,186,        if (params instanceof EntityBlockParams) {,15.42857,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,187,            ebp = (EntityBlockParams) params;,15.42857,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,188,            if (ebp.getGenerateEntities()) {,15.42857,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,200,        return r;,15.42857,0,-1,0
org/jfree/chart/block/BlockContainer,26,143,        return Collections.unmodifiableList(this.blocks);,15.42857,0,-1,0
org/jfree/chart/block/BlockContainer,26,152,"        add(block, null);",15.42857,0,-1,0
org/jfree/chart/block/BlockContainer,26,153,    },15.42857,0,-1,0
org/jfree/chart/block/BlockContainer,26,162,        this.blocks.add(block);,15.42857,0,-1,0
org/jfree/chart/block/BlockContainer,26,163,"        this.arrangement.add(block, key);",15.42857,0,-1,0
org/jfree/chart/block/BlockContainer,26,164,    },15.42857,0,-1,0
org/jfree/chart/block/BlockContainer,26,184,"        return this.arrangement.arrange(this, g2, constraint);",15.42857,0,-1,0
org/jfree/chart/block/BlockContainer,26,224,            Block block = (Block) iterator.next();,15.42857,0,-1,0
org/jfree/chart/block/BlockContainer,26,225,            Rectangle2D bounds = block.getBounds();,15.42857,0,-1,0
org/jfree/chart/block/BlockContainer,26,226,            Rectangle2D drawArea = new Rectangle2D.Double(bounds.getX() ,15.42857,0,-1,0
org/jfree/chart/block/BlockContainer,26,229,"            Object r = block.draw(g2, drawArea, params);",15.42857,0,-1,0
org/jfree/chart/block/BlockContainer,26,230,            if (sec != null) {,15.42857,0,-1,0
org/jfree/chart/block/BlockContainer,26,237,        },15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,153,"    public LegendGraphic(Shape shape, Paint fillPaint) {",15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,154,        if (shape == null) {,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,157,        if (fillPaint == null) {,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,160,        this.shapeVisible = true;,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,161,        this.shape = shape;,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,162,        this.shapeAnchor = RectangleAnchor.CENTER;,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,163,        this.shapeLocation = RectangleAnchor.CENTER;,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,164,        this.shapeFilled = true;,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,165,        this.fillPaint = fillPaint;,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,166,        this.fillPaintTransformer = new StandardGradientPaintTransformer();,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,167,"        setPadding(2.0, 2.0, 2.0, 2.0);",15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,168,    },15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,187,        this.shapeVisible = visible;,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,188,    },15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,225,        this.shapeFilled = filled;,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,226,    },15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,267,        if (transformer == null) {,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,270,        this.fillPaintTransformer = transformer;,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,271,    },15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,289,        this.shapeOutlineVisible = visible;,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,290,    },15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,307,        this.outlinePaint = paint;,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,308,    },15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,325,        this.outlineStroke = stroke;,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,326,    },15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,344,        if (anchor == null) {,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,347,        this.shapeAnchor = anchor;    ,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,348,    },15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,366,        if (location == null) {,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,369,        this.shapeLocation = location;,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,370,    },15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,387,        this.lineVisible = visible;,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,388,    },15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,406,        this.line = line;,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,407,    },15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,424,        this.linePaint = paint;,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,425,    },15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,442,        this.lineStroke = stroke;,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,443,    },15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,455,        RectangleConstraint contentConstraint = toContentConstraint(constraint);,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,456,        LengthConstraintType w = contentConstraint.getWidthConstraintType();,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,457,        LengthConstraintType h = contentConstraint.getHeightConstraintType();,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,458,        Size2D contentSize = null;,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,459,        if (w == LengthConstraintType.NONE) {,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,460,            if (h == LengthConstraintType.NONE) {,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,461,                contentSize = arrangeNN(g2);,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,495,        return new Size2D(,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,511,        Rectangle2D contentSize = new Rectangle2D.Double();,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,512,        if (this.line != null) {,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,513,            contentSize.setRect(this.line.getBounds2D());,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,515,        if (this.shape != null) {,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,516,            contentSize = contentSize.createUnion(this.shape.getBounds2D());,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,518,"        return new Size2D(contentSize.getWidth(), contentSize.getHeight());",15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,529,        area = trimMargin(area);,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,530,"        drawBorder(g2, area);",15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,531,        area = trimBorder(area);,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,532,        area = trimPadding(area);,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,534,        if (this.lineVisible) {,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,546,        if (this.shapeVisible) {,15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,570,    },15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,582,"        draw(g2, area);",15.42857,0,-1,0
org/jfree/chart/title/LegendGraphic,26,583,        return null;,15.42857,0,-1,0
org/jfree/chart/LegendItem,26,507,        return this.dataset;,15.42857,0,-1,0
org/jfree/chart/LegendItem,26,558,        return this.seriesKey;,15.42857,0,-1,0
org/jfree/chart/LegendItem,26,627,        return this.toolTipText;   ,15.42857,0,-1,0
org/jfree/chart/LegendItem,26,636,        return this.urlText; ,15.42857,0,-1,0
org/jfree/chart/LegendItem,26,645,        return this.shapeVisible;,15.42857,0,-1,0
org/jfree/chart/LegendItem,26,655,        return this.shape;,15.42857,0,-1,0
org/jfree/chart/LegendItem,26,664,        return this.shapeFilled;,15.42857,0,-1,0
org/jfree/chart/LegendItem,26,673,        return this.fillPaint;,15.42857,0,-1,0
org/jfree/chart/LegendItem,26,683,        return this.shapeOutlineVisible;,15.42857,0,-1,0
org/jfree/chart/LegendItem,26,692,        return this.lineStroke;,15.42857,0,-1,0
org/jfree/chart/LegendItem,26,701,        return this.linePaint;,15.42857,0,-1,0
org/jfree/chart/LegendItem,26,710,        return this.outlinePaint;,15.42857,0,-1,0
org/jfree/chart/LegendItem,26,719,        return this.outlineStroke;,15.42857,0,-1,0
org/jfree/chart/LegendItem,26,728,        return this.lineVisible;,15.42857,0,-1,0
org/jfree/chart/LegendItem,26,737,        return this.line;,15.42857,0,-1,0
org/jfree/chart/LegendItem,26,751,        return this.fillPaintTransformer;,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,116,        return this.paint;,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,134,        return this.stroke;,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,150,        double t = this.insets.calculateTopInset(h);,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,151,        double b = this.insets.calculateBottomInset(h);,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,152,        double l = this.insets.calculateLeftInset(w);,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,153,        double r = this.insets.calculateRightInset(w);,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,154,        double x = area.getX();,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,155,        double y = area.getY();,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,156,        double x0 = x + l / 2.0;,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,157,        double x1 = x + w - r / 2.0;,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,158,        double y0 = y + h - b / 2.0;,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,159,        double y1 = y + t / 2.0;,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,160,        g2.setPaint(getPaint());,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,161,        g2.setStroke(getStroke());,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,162,        Line2D line = new Line2D.Double();,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,163,        if (t > 0.0) {,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,164,"            line.setLine(x0, y1, x1, y1);",15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,165,            g2.draw(line);,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,167,        if (b > 0.0) {,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,168,"            line.setLine(x0, y0, x1, y0);",15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,169,            g2.draw(line);,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,171,        if (l > 0.0) {,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,172,"            line.setLine(x0, y0, x0, y1);",15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,173,            g2.draw(line);,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,175,        if (r > 0.0) {,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,176,"            line.setLine(x1, y0, x1, y1);",15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,177,            g2.draw(line);,15.42857,0,-1,0
org/jfree/chart/block/LineBorder,26,179,    }    ,15.42857,0,-1,0
org/jfree/chart/block/CenterArrangement,26,66,    public CenterArrangement() {   ,15.42857,0,-1,0
org/jfree/chart/block/CenterArrangement,26,67,    },15.42857,0,-1,0
org/jfree/chart/block/CenterArrangement,26,80,    },15.42857,0,-1,0
org/jfree/chart/block/CenterArrangement,26,97,        LengthConstraintType w = constraint.getWidthConstraintType();,15.42857,0,-1,0
org/jfree/chart/block/CenterArrangement,26,98,        LengthConstraintType h = constraint.getHeightConstraintType();,15.42857,0,-1,0
org/jfree/chart/block/CenterArrangement,26,99,        if (w == LengthConstraintType.NONE) {,15.42857,0,-1,0
org/jfree/chart/block/CenterArrangement,26,100,            if (h == LengthConstraintType.NONE) {,15.42857,0,-1,0
org/jfree/chart/block/CenterArrangement,26,101,"                return arrangeNN(container, g2);  ",15.42857,0,-1,0
org/jfree/chart/block/CenterArrangement,26,285,        List blocks = container.getBlocks();,15.42857,0,-1,0
org/jfree/chart/block/CenterArrangement,26,286,        Block b = (Block) blocks.get(0);,15.42857,0,-1,0
org/jfree/chart/block/CenterArrangement,26,287,"        Size2D s = b.arrange(g2, RectangleConstraint.NONE);",15.42857,0,-1,0
org/jfree/chart/block/CenterArrangement,26,288,"        b.setBounds(new Rectangle2D.Double(0.0, 0.0, s.width, s.height));",15.42857,0,-1,0
org/jfree/chart/block/CenterArrangement,26,289,"        return new Size2D(s.width, s.height);  ",15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,112,    },15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,129,        LengthConstraintType w = constraint.getWidthConstraintType();,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,130,        LengthConstraintType h = constraint.getHeightConstraintType();,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,131,        if (w == LengthConstraintType.NONE) {,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,142,        else if (w == LengthConstraintType.FIXED) {,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,153,        else if (w == LengthConstraintType.RANGE) {,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,154,            if (h == LengthConstraintType.NONE) {,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,157,            else if (h == LengthConstraintType.FIXED) {,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,160,            else if (h == LengthConstraintType.RANGE) {,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,161,"                return arrangeRR(container, g2, constraint);   ",15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,286,"        Size2D s1 = arrangeNN(container, g2);",15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,287,        if (constraint.getWidthRange().contains(s1.width)) {,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,359,        double x = 0.0;,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,360,        double width = 0.0;,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,361,        double maxHeight = 0.0;,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,362,        List blocks = container.getBlocks();,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,363,        int blockCount = blocks.size();,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,364,        if (blockCount > 0) {,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,365,            Size2D[] sizes = new Size2D[blocks.size()];,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,366,            for (int i = 0; i < blocks.size(); i++) {,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,367,                Block block = (Block) blocks.get(i);,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,368,"                sizes[i] = block.arrange(g2, RectangleConstraint.NONE);",15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,369,                width = width + sizes[i].getWidth();,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,370,"                maxHeight = Math.max(sizes[i].height, maxHeight);",15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,371,                block.setBounds(,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,376,                x = x + sizes[i].width + this.horizontalGap;,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,378,            if (blockCount > 1) {,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,381,            if (this.verticalAlignment != VerticalAlignment.TOP) {,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,382,                for (int i = 0; i < blocks.size(); i++) {,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,384,                    if (this.verticalAlignment == VerticalAlignment.CENTER) {,15.42857,0,-1,0
org/jfree/chart/block/FlowArrangement,26,394,"        return new Size2D(width, maxHeight);",15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,132,"    public LabelBlock(String text, Font font, Paint paint) {        ",15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,133,        this.text = text;,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,134,        this.paint = paint; ,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,135,"        this.label = TextUtilities.createTextBlock(text, font, this.paint); ",15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,136,        this.font = font;,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,137,        this.toolTipText = null;,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,138,        this.urlText = null;,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,139,    },15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,101,    public static final Paint DEFAULT_PAINT = Color.black;,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,248,        g2.setFont(this.font);,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,249,        Size2D s = this.label.calculateDimensions(g2);,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,250,"        return new Size2D(calculateTotalWidth(s.getWidth()), ",15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,274,        area = trimMargin(area);,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,275,"        drawBorder(g2, area);",15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,276,        area = trimBorder(area);,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,277,        area = trimPadding(area);,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,280,        EntityBlockParams ebp = null;,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,281,        StandardEntityCollection sec = null;,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,282,        Shape entityArea = null;,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,283,        if (params instanceof EntityBlockParams) {,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,290,        g2.setPaint(this.paint);,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,291,        g2.setFont(this.font);,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,292,"        this.label.draw(g2, (float) area.getX(), (float) area.getY(), ",15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,294,        BlockResult result = null;,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,295,        if (ebp != null && sec != null) {,15.42857,0,-1,0
org/jfree/chart/block/LabelBlock,26,304,        return result;,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,86,    public BorderArrangement() {,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,87,    },15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,98,        if (key == null) {,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,99,            this.centerBlock = block;,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,102,            RectangleEdge edge = (RectangleEdge) key;,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,103,            if (edge == RectangleEdge.TOP) {,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,106,            else if (edge == RectangleEdge.BOTTOM) {,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,109,            else if (edge == RectangleEdge.LEFT) {,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,110,                this.leftBlock = block;,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,116,    },15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,131,        RectangleConstraint contentConstraint ,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,133,        Size2D contentSize = null;,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,134,        LengthConstraintType w = contentConstraint.getWidthConstraintType();,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,135,        LengthConstraintType h = contentConstraint.getHeightConstraintType();,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,136,        if (w == LengthConstraintType.NONE) {,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,137,            if (h == LengthConstraintType.NONE) {,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,138,"                contentSize = arrangeNN(container, g2);  ",15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,172,        return new Size2D(,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,187,        double[] w = new double[5];,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,188,        double[] h = new double[5];,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,189,        if (this.topBlock != null) {,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,196,        if (this.bottomBlock != null) {,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,203,        if (this.leftBlock != null) {,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,204,            Size2D size = this.leftBlock.arrange(,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,207,            w[2] = size.width;,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,208,            h[2] = size.height;,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,210,        if (this.rightBlock != null) {,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,218,"        h[2] = Math.max(h[2], h[3]);",15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,219,        h[3] = h[2];,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,221,        if (this.centerBlock != null) {,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,222,            Size2D size = this.centerBlock.arrange(,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,225,            w[4] = size.width;,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,226,            h[4] = size.height;,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,228,"        double width = Math.max(w[0], Math.max(w[1], w[2] + w[4] + w[3]));",15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,229,"        double centerHeight = Math.max(h[2], Math.max(h[3], h[4]));",15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,230,        double height = h[0] + h[1] + centerHeight;,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,231,        if (this.topBlock != null) {,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,236,        if (this.bottomBlock != null) {,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,241,        if (this.leftBlock != null) {,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,242,            this.leftBlock.setBounds(,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,246,        if (this.rightBlock != null) {,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,252,        if (this.centerBlock != null) {,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,253,            this.centerBlock.setBounds(,15.42857,0,-1,0
org/jfree/chart/block/BorderArrangement,26,259,"        return new Size2D(width, height);",15.42857,0,-1,0
org/jfree/chart/LegendItemCollection,26,97,        return (LegendItem) this.items.get(index);,15.42857,0,-1,0
org/jfree/chart/text/TextUtilities,26,116,        if (text == null) {,15.42857,0,-1,0
org/jfree/chart/text/TextUtilities,26,119,        TextBlock result = new TextBlock();,15.42857,0,-1,0
org/jfree/chart/text/TextUtilities,26,120,        String input = text;,15.42857,0,-1,0
org/jfree/chart/text/TextUtilities,26,121,        boolean moreInputToProcess = (text.length() > 0);,15.42857,0,-1,0
org/jfree/chart/text/TextUtilities,26,122,        int start = 0;,15.42857,0,-1,0
org/jfree/chart/text/TextUtilities,26,123,        while (moreInputToProcess) {,15.42857,0,-1,0
org/jfree/chart/text/TextUtilities,26,124,"            int index = input.indexOf(""\n"");",15.42857,0,-1,0
org/jfree/chart/text/TextUtilities,26,125,            if (index > start) {,15.42857,0,-1,0
org/jfree/chart/text/TextUtilities,26,135,            else if (index == start) {,15.42857,0,-1,0
org/jfree/chart/text/TextUtilities,26,144,"                result.addLine(input, font, paint);",15.42857,0,-1,0
org/jfree/chart/text/TextUtilities,26,145,                moreInputToProcess = false;,15.42857,0,-1,0
org/jfree/chart/text/TextUtilities,26,147,        },15.42857,0,-1,0
org/jfree/chart/text/TextUtilities,26,148,        return result;,15.42857,0,-1,0
org/jfree/chart/axis/NumberAxis,26,343,        if (unit == null) {,15.38462,0,-1,0
org/jfree/chart/axis/NumberAxis,26,346,        this.tickUnit = unit;,15.38462,0,-1,0
org/jfree/chart/axis/NumberAxis,26,347,        if (turnOffAutoSelect) {,15.38462,0,-1,0
org/jfree/chart/axis/NumberAxis,26,350,        if (notify) {,15.38462,0,-1,0
org/jfree/chart/axis/NumberAxis,26,354,    },15.38462,0,-1,0
org/jfree/chart/block/AbstractBlock,26,367,        if (bounds == null) {,14.72727,0,-1,0
org/jfree/chart/block/AbstractBlock,26,370,        this.bounds = bounds;,14.72727,0,-1,0
org/jfree/chart/block/AbstractBlock,26,371,    },14.72727,0,-1,0
org/jfree/chart/axis/NumberTick,26,70,"        super(number.doubleValue(), label, textAnchor, rotationAnchor, angle);",14.28571,0,-1,0
org/jfree/chart/axis/NumberTick,26,71,        this.number = number;,14.28571,0,-1,0
org/jfree/chart/axis/NumberTick,26,73,    },14.28571,0,-1,0
org/jfree/chart/title/LegendGraphic,26,547,            Point2D location = RectangleAnchor.coordinates(,14.22222,0,-1,0
org/jfree/chart/title/LegendGraphic,26,551,            Shape s = ShapeUtilities.createTranslatedShape(,14.22222,0,-1,0
org/jfree/chart/title/LegendGraphic,26,554,            if (this.shapeFilled) {,14.22222,0,-1,0
org/jfree/chart/title/LegendGraphic,26,555,                Paint p = this.fillPaint;,14.22222,0,-1,0
org/jfree/chart/title/LegendGraphic,26,556,                if (p instanceof GradientPaint) {,14.22222,0,-1,0
org/jfree/chart/title/LegendGraphic,26,560,                g2.setPaint(p);,14.22222,0,-1,0
org/jfree/chart/title/LegendGraphic,26,561,                g2.fill(s);,14.22222,0,-1,0
org/jfree/chart/title/LegendGraphic,26,563,            if (this.shapeOutlineVisible) {,14.22222,0,-1,0
org/jfree/chart/LegendItemCollection,26,77,        this.items.add(item);,14.08696,0,-1,0
org/jfree/chart/LegendItemCollection,26,78,    },14.08696,0,-1,0
org/jfree/chart/axis/Axis,26,694,        return this.tickLabelPaint;,13.88462,0,-1,0
org/jfree/chart/plot/Plot,26,964,        if (orientation == null) {,12.89286,0,-1,0
org/jfree/chart/plot/Plot,26,967,        if (this.backgroundPaint == null) {,12.89286,0,-1,0
org/jfree/chart/plot/Plot,26,970,        Paint p = this.backgroundPaint;,12.89286,0,-1,0
org/jfree/chart/plot/Plot,26,971,        if (p instanceof GradientPaint) {,12.89286,0,-1,0
org/jfree/chart/plot/Plot,26,986,        Composite originalComposite = g2.getComposite();,12.89286,0,-1,0
org/jfree/chart/plot/Plot,26,987,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,",12.89286,0,-1,0
org/jfree/chart/plot/Plot,26,989,        g2.setPaint(p);,12.89286,0,-1,0
org/jfree/chart/plot/Plot,26,990,        g2.fill(area);,12.89286,0,-1,0
org/jfree/chart/plot/Plot,26,991,        g2.setComposite(originalComposite);        ,12.89286,0,-1,0
org/jfree/chart/plot/Plot,26,992,    },12.89286,0,-1,0
org/jfree/chart/plot/Plot,26,1006,        if (this.backgroundImage != null) {,12.89286,0,-1,0
org/jfree/chart/plot/Plot,26,1019,    },12.89286,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1231,        Stroke result = this.outlineStrokeList.getStroke(series);,11.57143,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1232,        if (result == null && this.autoPopulateSeriesOutlineStroke) {,11.57143,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1239,        if (result == null) {,11.57143,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1240,            result = this.baseOutlineStroke;,11.57143,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1242,        return result;,11.57143,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,503,        boolean result = this.baseSeriesVisibleInLegend;,11.17241,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,504,        Boolean b = this.seriesVisibleInLegendList.getBoolean(series);,11.17241,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,505,        if (b != null) {,11.17241,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,508,        return result;,11.17241,0,-1,0
org/jfree/chart/plot/Plot,26,1342,                result = RectangleEdge.LEFT;,10.08333,0,-1,0
org/jfree/chart/plot/Plot,26,1386,                result = RectangleEdge.TOP;,10.08333,0,-1,0
org/jfree/chart/plot/Plot,26,1388,            else if (orientation == PlotOrientation.VERTICAL) {,10.08333,0,-1,0
org/jfree/chart/plot/Plot,26,1389,                result = RectangleEdge.LEFT;,10.08333,0,-1,0
org/jfree/chart/axis/Axis,26,1114,            AffineTransform t = AffineTransform.getRotateInstance(,10.08333,0,-1,0
org/jfree/chart/axis/Axis,26,1117,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,10.08333,0,-1,0
org/jfree/chart/axis/Axis,26,1118,            labelBounds = rotatedLabelBounds.getBounds2D();,10.08333,0,-1,0
org/jfree/chart/axis/Axis,26,1119,            float w = (float) labelBounds.getWidth();,10.08333,0,-1,0
org/jfree/chart/axis/Axis,26,1120,            float h = (float) labelBounds.getHeight();,10.08333,0,-1,0
org/jfree/chart/axis/Axis,26,1121,            float labelx = (float) dataArea.getCenterX();,10.08333,0,-1,0
org/jfree/chart/axis/Axis,26,1122,            float labely = (float) (state.getCursor() - insets.getBottom() ,10.08333,0,-1,0
org/jfree/chart/axis/Axis,26,1124,"            TextUtilities.drawRotatedString(label, g2, labelx, labely, ",10.08333,0,-1,0
org/jfree/chart/axis/Axis,26,1126,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f, ",10.08333,0,-1,0
org/jfree/chart/axis/Axis,26,1128,            state.cursorUp(insets.getTop() + labelBounds.getHeight() ,10.08333,0,-1,0
org/jfree/chart/axis/Axis,26,1130,        },10.08333,0,-1,0
org/jfree/chart/axis/Axis,26,1219,"            axisLine = new Line2D.Double(dataArea.getX(), cursor, ",10.08333,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,669,            available = area.getWidth();,10.08333,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,757,                tickLabelHeight = state.getMax();,10.08333,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,759,            else if (edge == RectangleEdge.LEFT) {,10.08333,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,760,                tickLabelWidth = state.getMax(); ,10.08333,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,772,            labelHeight = labelEnclosure.getHeight();,10.08333,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,773,            space.add(labelHeight + tickLabelHeight ,10.08333,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,776,        else if (RectangleEdge.isLeftOrRight(edge)) {,10.08333,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,777,            labelWidth = labelEnclosure.getWidth();,10.08333,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,778,            space.add(labelWidth + tickLabelWidth ,10.08333,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,943,                double h = state.getMax() + this.categoryLabelPositionOffset;,10.08333,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,944,                state.cursorDown(h);,10.08333,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,945,            },10.08333,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,994,"                l = (float) calculateCategorySize(categories.size(), dataArea, ",10.08333,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,998,                if (RectangleEdge.isLeftOrRight(edge)) {,10.08333,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,999,                    l = (float) dataArea.getWidth();   ,10.08333,0,-1,0
org/jfree/chart/util/RectangleEdge,26,81,            return true;,10.08333,0,-1,0
org/jfree/chart/axis/AxisState,26,130,        this.cursor = this.cursor - units;,10.08333,0,-1,0
org/jfree/chart/axis/AxisState,26,131,    },10.08333,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,294,            result = this.positionForAxisAtBottom;,10.08333,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,296,        else if (edge == RectangleEdge.LEFT) {,10.08333,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,297,            result = this.positionForAxisAtLeft;,10.08333,0,-1,0
org/jfree/chart/axis/AxisSpace,26,171,            this.top += space;,10.08333,0,-1,0
org/jfree/chart/axis/ValueAxis,26,626,"            result[0] = (float) valueToJava2D(tick.getValue(), dataArea, edge);",10.08333,0,-1,0
org/jfree/chart/axis/ValueAxis,26,627,            result[1] = (float) (cursor - insets.getBottom() - 2.0);,10.08333,0,-1,0
org/jfree/chart/axis/ValueAxis,26,698,"                    mark = new Line2D.Double(xx, cursor - ol, xx, cursor + il);",10.08333,0,-1,0
org/jfree/chart/axis/ValueAxis,26,722,"                used = findMaximumTickLabelHeight(ticks, g2, plotArea, ",10.08333,0,-1,0
org/jfree/chart/axis/ValueAxis,26,724,                state.cursorUp(used);,10.08333,0,-1,0
org/jfree/chart/axis/AxisCollection,26,133,            this.axesAtTop.add(axis);,10.08333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2709,            Axis axis = (Axis) iterator.next();,10.08333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2710,            if (axis != null) {,10.08333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2711,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, ",10.08333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2723,            Axis axis = (Axis) iterator.next();,10.08333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2724,            if (axis != null) {,10.08333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2725,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,",10.08333,0,-1,0
org/jfree/chart/text/TextUtilities,26,664,        else if (anchor == TextAnchor.BOTTOM_LEFT,10.08333,0,-1,0
org/jfree/chart/text/TextUtilities,26,668,            yAdj = -metrics.getDescent() - metrics.getLeading();,10.08333,0,-1,0
org/jfree/chart/text/TextUtilities,26,745,        else if (anchor == TextAnchor.HALF_ASCENT_LEFT,10.08333,0,-1,0
org/jfree/chart/text/TextUtilities,26,752,        else if (anchor == TextAnchor.BASELINE_LEFT,10.08333,0,-1,0
org/jfree/chart/text/TextUtilities,26,759,        else if (anchor == TextAnchor.BOTTOM_LEFT,10.08333,0,-1,0
org/jfree/chart/text/TextUtilities,26,763,            yAdj = metrics.getDescent() + metrics.getLeading();,10.08333,0,-1,0
org/jfree/data/Range,26,140,        return (value >= this.lower && value <= this.upper);,9.81818,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,938,        Paint seriesOutlinePaint = this.outlinePaintList.getPaint(series);,9.78261,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,939,        if (seriesOutlinePaint == null && this.autoPopulateSeriesOutlinePaint) {,9.78261,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,946,        if (seriesOutlinePaint == null) {,9.78261,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,947,            seriesOutlinePaint = this.baseOutlinePaint;,9.78261,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,949,        return seriesOutlinePaint;,9.78261,0,-1,0
org/jfree/chart/util/BooleanList,26,73,        return (Boolean) get(index);,9.52941,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,400,        boolean result = this.baseSeriesVisible;,9.52941,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,401,        Boolean b = this.seriesVisibleList.getBoolean(series);,9.52941,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,402,        if (b != null) {,9.52941,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,405,        return result;,9.52941,0,-1,0
org/jfree/chart/axis/Axis,26,1213,        Line2D axisLine = null;,9.30769,0,-1,0
org/jfree/chart/axis/Axis,26,1214,        if (edge == RectangleEdge.TOP) {,9.30769,0,-1,0
org/jfree/chart/axis/Axis,26,1218,        else if (edge == RectangleEdge.BOTTOM) {,9.30769,0,-1,0
org/jfree/chart/axis/Axis,26,1230,        g2.setPaint(this.axisLinePaint);,9.30769,0,-1,0
org/jfree/chart/axis/Axis,26,1231,        g2.setStroke(this.axisLineStroke);,9.30769,0,-1,0
org/jfree/chart/axis/Axis,26,1232,        g2.draw(axisLine);,9.30769,0,-1,0
org/jfree/chart/axis/Axis,26,1234,    },9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,224,        return this.lowerMargin;,9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,250,        return this.upperMargin;,9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,665,        double result = 0.0;,9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,666,        double available = 0.0;,9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,668,        if ((edge == RectangleEdge.TOP) || (edge == RectangleEdge.BOTTOM)) {,9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,675,        if (categoryCount > 1) {,9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,683,        return result;,9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,816,        if (!isVisible()) {,9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,820,        if (isAxisLineVisible()) {,9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,821,"            drawAxisLine(g2, cursor, dataArea, edge);",9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,825,        AxisState state = new AxisState(cursor);,9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,826,"        state = drawCategoryLabels(g2, plotArea, dataArea, edge, state, ",9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,828,"        state = drawLabel(getLabel(), g2, plotArea, dataArea, edge, state,",9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,858,        if (state == null) {,9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,862,        if (isTickLabelsVisible()) {       ,9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,863,"            List ticks = refreshTicks(g2, state, plotArea, edge);       ",9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,864,            state.setTicks(ticks);        ,9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,866,            int categoryIndex = 0;,9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,867,            Iterator iterator = ticks.iterator();,9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,868,            while (iterator.hasNext()) {,9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,938,            if (edge.equals(RectangleEdge.TOP)) {,9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,942,            else if (edge.equals(RectangleEdge.BOTTOM)) {,9.30769,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,955,        return state;,9.30769,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2719,        cursor = dataArea.getMaxY() ,9.30769,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2721,        iterator = axisCollection.getAxesAtBottom().iterator();,9.30769,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2722,        while (iterator.hasNext()) {,9.30769,0,-1,0
org/jfree/chart/util/StrokeList,26,71,        return (Stroke) get(index);,9.0,0,-1,0
org/jfree/chart/LegendItem,26,600,        return this.label;,9.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,475,            domainAxis.setPlot(this);,8.8,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,476,            domainAxis.addChangeListener(this);,8.8,0,-1,0
org/jfree/chart/LegendItem,26,545,        this.datasetIndex = index;,8.52632,0,-1,0
org/jfree/chart/LegendItem,26,546,    },8.52632,0,-1,0
org/jfree/chart/LegendItem,26,569,        this.seriesKey = key;,8.52632,0,-1,0
org/jfree/chart/LegendItem,26,570,    },8.52632,0,-1,0
org/jfree/chart/LegendItem,26,591,        this.series = index;,8.52632,0,-1,0
org/jfree/chart/LegendItem,26,592,    },8.52632,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,790,    },8.49123,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1203,        return this.range;,8.49123,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,468,            renderer.setPlot(this);,8.49123,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,469,            renderer.addChangeListener(this);,8.49123,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,857,                axis.configure();,8.49123,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,483,            rangeAxis.setPlot(this);,8.34483,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,484,            rangeAxis.addChangeListener(this);,8.34483,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1390,        CategoryItemRenderer result = null;,8.32075,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1391,        for (int i = 0; i < this.datasets.size(); i++) {,8.32075,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1392,            if (this.datasets.get(i) == dataset) {,8.32075,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1393,                result = (CategoryItemRenderer) this.renderers.get(i);   ,8.32075,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1394,                break;,8.32075,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1397,        return result;,8.32075,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3083,            CategoryDataset d = (CategoryDataset) iterator.next();,8.32075,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3084,            CategoryItemRenderer r = getRendererForDataset(d);,8.32075,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3085,            if (r != null) {,8.32075,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3086,"                result = Range.combine(result, r.findRangeBounds(d));",8.32075,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3088,        },8.32075,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3140,                Integer m = (Integer) this.datasetToRangeAxisMap.get(i);,8.32075,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3141,                if (m == null) {  // a dataset with no mapping is assigned to ,8.32075,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3148,                    if (m.intValue() == index) {,8.32075,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3149,                        result.add(dataset);,8.32075,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3073,            mappedDatasets.addAll(datasetsMappedToRangeAxis(rangeIndex));,8.20339,0,-1,0
org/jfree/chart/JFreeChart,26,1189,"            EntityCollection e = drawTitle(this.title, g2, nonTitleArea, ",8.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1191,            if (e != null) {,8.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1246,            y = frame.getY();   ,8.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1299,"            Size2D size = t.arrange(g2, constraint);",8.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1300,"            titleArea = createAlignedRectangle2D(size, area, ",8.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1302,"            retValue = t.draw(g2, titleArea, p);",8.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1303,"            area.setRect(area.getX(), Math.min(area.getY() + size.height, ",8.16667,0,-1,0
org/jfree/chart/JFreeChart,26,1306,        },8.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,107,        if (alignment == null) {,8.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,110,        this.lineAlignment = alignment;   ,8.16667,0,-1,0
org/jfree/chart/text/TextBlock,26,111,    },8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,441,        RectangleConstraint cc = toContentConstraint(constraint);,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,442,        LengthConstraintType w = cc.getWidthConstraintType();,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,443,        LengthConstraintType h = cc.getHeightConstraintType();,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,444,        Size2D contentSize = null;,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,445,        if (w == LengthConstraintType.NONE) {,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,456,        else if (w == LengthConstraintType.RANGE) {,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,457,            if (h == LengthConstraintType.NONE) {,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,460,            else if (h == LengthConstraintType.RANGE) {,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,461,"                contentSize = arrangeRR(g2, cc.getWidthRange(), ",8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,479,"        return new Size2D(calculateTotalWidth(contentSize.getWidth()),",8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,496,        RectangleEdge position = getPosition();,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,497,        if (position == RectangleEdge.TOP || position == RectangleEdge.BOTTOM) {,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,498,            float maxWidth = (float) widthRange.getUpperBound();,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,499,            g2.setFont(this.font);,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,500,"            this.content = TextUtilities.createTextBlock(this.text, this.font, ",8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,502,            this.content.setLineAlignment(this.textAlignment);,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,503,            Size2D contentSize = this.content.calculateDimensions(g2);,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,504,            if (this.expandToFitSpace) {,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,508,                return contentSize;,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,557,        if (this.content == null) {,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,560,        area = trimMargin(area);,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,561,"        drawBorder(g2, area);",8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,562,"        if (this.text.equals("""")) {",8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,565,        ChartEntity entity = null;,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,566,        if (params instanceof EntityBlockParams) {,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,567,            EntityBlockParams p = (EntityBlockParams) params;,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,568,            if (p.getGenerateEntities()) {,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,572,        area = trimBorder(area);,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,573,        if (this.backgroundPaint != null) {,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,577,        area = trimPadding(area);,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,578,        RectangleEdge position = getPosition();,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,579,        if (position == RectangleEdge.TOP || position == RectangleEdge.BOTTOM) {,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,580,"            drawHorizontal(g2, area);",8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,586,        BlockResult result = new BlockResult();,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,587,        if (entity != null) {,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,592,        return result;,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,604,        Rectangle2D titleArea = (Rectangle2D) area.clone();,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,605,        g2.setFont(this.font);,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,606,        g2.setPaint(this.paint);,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,607,        TextBlockAnchor anchor = null;,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,608,        float x = 0.0f;,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,609,        HorizontalAlignment horizontalAlignment = getHorizontalAlignment();,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,610,        if (horizontalAlignment == HorizontalAlignment.LEFT) {,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,614,        else if (horizontalAlignment == HorizontalAlignment.RIGHT) {,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,618,        else if (horizontalAlignment == HorizontalAlignment.CENTER) {,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,619,            x = (float) titleArea.getCenterX();,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,620,            anchor = TextBlockAnchor.TOP_CENTER;,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,622,        float y = 0.0f;,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,623,        RectangleEdge position = getPosition();,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,624,        if (position == RectangleEdge.TOP) {,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,625,            y = (float) titleArea.getY();,8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,639,"        this.content.draw(g2, x, y, anchor);",8.16667,0,-1,0
org/jfree/chart/title/TextTitle,26,640,    },8.16667,0,-1,0
org/jfree/chart/text/TextUtilities,26,167,"        return createTextBlock(text, font, paint, maxWidth, Integer.MAX_VALUE, ",8.16667,0,-1,0
org/jfree/chart/LegendItem,26,291,"                      Stroke lineStroke, Paint linePaint) {",8.1,0,-1,0
org/jfree/chart/LegendItem,26,293,        if (label == null) {,8.1,0,-1,0
org/jfree/chart/LegendItem,26,296,        if (fillPaint == null) {,8.1,0,-1,0
org/jfree/chart/LegendItem,26,299,        if (lineStroke == null) {,8.1,0,-1,0
org/jfree/chart/LegendItem,26,302,        if (outlinePaint == null) {,8.1,0,-1,0
org/jfree/chart/LegendItem,26,305,        if (outlineStroke == null) {,8.1,0,-1,0
org/jfree/chart/LegendItem,26,309,        this.label = label;,8.1,0,-1,0
org/jfree/chart/LegendItem,26,310,        this.attributedLabel = null;,8.1,0,-1,0
org/jfree/chart/LegendItem,26,311,        this.description = description;,8.1,0,-1,0
org/jfree/chart/LegendItem,26,312,        this.shapeVisible = shapeVisible;,8.1,0,-1,0
org/jfree/chart/LegendItem,26,313,        this.shape = shape;,8.1,0,-1,0
org/jfree/chart/LegendItem,26,314,        this.shapeFilled = shapeFilled;,8.1,0,-1,0
org/jfree/chart/LegendItem,26,315,        this.fillPaint = fillPaint;,8.1,0,-1,0
org/jfree/chart/LegendItem,26,316,        this.fillPaintTransformer = new StandardGradientPaintTransformer();,8.1,0,-1,0
org/jfree/chart/LegendItem,26,317,        this.shapeOutlineVisible = shapeOutlineVisible;,8.1,0,-1,0
org/jfree/chart/LegendItem,26,318,        this.outlinePaint = outlinePaint;,8.1,0,-1,0
org/jfree/chart/LegendItem,26,319,        this.outlineStroke = outlineStroke;,8.1,0,-1,0
org/jfree/chart/LegendItem,26,320,        this.lineVisible = lineVisible;,8.1,0,-1,0
org/jfree/chart/LegendItem,26,321,        this.line = line;,8.1,0,-1,0
org/jfree/chart/LegendItem,26,322,        this.lineStroke = lineStroke;,8.1,0,-1,0
org/jfree/chart/LegendItem,26,323,        this.linePaint = linePaint;,8.1,0,-1,0
org/jfree/chart/LegendItem,26,324,        this.toolTipText = toolTipText;,8.1,0,-1,0
org/jfree/chart/LegendItem,26,325,        this.urlText = urlText;,8.1,0,-1,0
org/jfree/chart/LegendItem,26,326,    },8.1,0,-1,0
org/jfree/chart/LegendItem,26,175,    private static final Shape UNUSED_SHAPE = new Line2D.Float();,8.1,0,-1,0
org/jfree/chart/LegendItem,26,181,    private static final Stroke UNUSED_STROKE = new BasicStroke(0.0f);,8.1,0,-1,0
org/jfree/chart/LegendItem,26,518,        this.dataset = dataset;,8.1,0,-1,0
org/jfree/chart/LegendItem,26,519,    },8.1,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,629,        Paint seriesPaint = this.paintList.getPaint(series);,8.1,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,630,        if (seriesPaint == null && this.autoPopulateSeriesPaint) {,8.1,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,631,            DrawingSupplier supplier = getDrawingSupplier();,8.1,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,632,            if (supplier != null) {,8.1,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,633,                seriesPaint = supplier.getNextPaint();,8.1,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,634,"                this.paintList.setPaint(series, seriesPaint);",8.1,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,637,        if (seriesPaint == null) {,8.1,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,640,        return seriesPaint;,8.1,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1107,                axis.configure();,8.06667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1818,                yAxis.configure();,8.06667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3068,        Range result = null;,8.06667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3069,        List mappedDatasets = new ArrayList();,8.06667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3071,        int rangeIndex = this.rangeAxes.indexOf(axis);,8.06667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3072,        if (rangeIndex >= 0) {,8.06667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3081,        Iterator iterator = mappedDatasets.iterator();,8.06667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3082,        while (iterator.hasNext()) {,8.06667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3089,        return result;,8.06667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3136,        List result = new ArrayList();,8.06667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3137,        for (int i = 0; i < this.datasets.size(); i++) {,8.06667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3138,            Object dataset = this.datasets.get(i);,8.06667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3139,            if (dataset != null) {,8.06667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3154,        return result;    ,8.06667,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,250,        if (plot == null) {,8.06667,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,253,        this.plot = plot;,8.06667,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,254,    },8.06667,0,-1,0
org/jfree/chart/block/FlowArrangement,26,379,                width = width + this.horizontalGap * (blockCount - 1);   ,8.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1014,                else if (edge == RectangleEdge.LEFT ,7.69231,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1016,"                    max = Math.max(max, calculateTextBlockWidth(label, ",7.69231,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1062,        RectangleInsets insets = getTickLabelInsets();,7.69231,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1063,        Size2D size = block.calculateDimensions(g2);,7.69231,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1064,"        Rectangle2D box = new Rectangle2D.Double(0.0, 0.0, size.getWidth(), ",7.69231,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1066,"        Shape rotatedBox = ShapeUtilities.rotateShape(box, position.getAngle(),",7.69231,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1068,        double w = rotatedBox.getBounds2D().getWidth() + insets.getTop() ,7.69231,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1070,        return w;,7.69231,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,458,            dataset.addChangeListener(this);,7.54717,0,-1,0
org/jfree/chart/JFreeChart,26,1337,            EntityBlockResult ebr = (EntityBlockResult) retValue;,7.53846,0,-1,0
org/jfree/chart/JFreeChart,26,1338,            result = ebr.getEntityCollection();,7.53846,0,-1,0
org/jfree/chart/block/BlockResult,26,69,        return this.entities;   ,7.53846,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,215,        Paint result ,7.53488,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,217,        this.paintIndex++;,7.53488,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,218,        return result;,7.53488,0,-1,0
org/jfree/chart/util/SortOrder,26,51,    private SortOrder(String name) {,7.33333,0,-1,0
org/jfree/chart/util/SortOrder,26,52,        this.name = name;,7.33333,0,-1,0
org/jfree/chart/util/SortOrder,26,53,    },7.33333,0,-1,0
org/jfree/chart/util/SortOrder,26,36,    public static final SortOrder ASCENDING = new SortOrder(,7.33333,0,-1,0
org/jfree/chart/util/SortOrder,26,40,    public static final SortOrder DESCENDING = new SortOrder(,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,440,        super();,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,319,    private DatasetRenderingOrder renderingOrder ,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,326,    private SortOrder columnRenderingOrder = SortOrder.ASCENDING;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,332,    private SortOrder rowRenderingOrder = SortOrder.ASCENDING;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,380,    private boolean rangeCrosshairLockedOnData = true;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,442,        this.orientation = PlotOrientation.VERTICAL;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,445,        this.domainAxes = new ObjectList();,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,446,        this.domainAxisLocations = new ObjectList();,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,447,        this.rangeAxes = new ObjectList();,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,448,        this.rangeAxisLocations = new ObjectList();,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,450,        this.datasetToDomainAxisMap = new ObjectList();,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,451,        this.datasetToRangeAxisMap = new ObjectList();,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,453,        this.renderers = new ObjectList();,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,455,        this.datasets = new ObjectList();,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,456,"        this.datasets.set(0, dataset);",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,457,        if (dataset != null) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,461,        this.axisOffset = RectangleInsets.ZERO_INSETS;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,463,"        setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,464,"        setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,466,"        this.renderers.set(0, renderer);",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,467,        if (renderer != null) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,472,"        this.domainAxes.set(0, domainAxis);",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,473,"        this.mapDatasetToDomainAxis(0, 0);",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,474,        if (domainAxis != null) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,478,        this.drawSharedDomainAxis = false;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,480,"        this.rangeAxes.set(0, rangeAxis);",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,481,"        this.mapDatasetToRangeAxis(0, 0);",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,482,        if (rangeAxis != null) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,487,        configureDomainAxes();,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,488,        configureRangeAxes();,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,490,        this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,491,        this.domainGridlinePosition = CategoryAnchor.MIDDLE;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,492,        this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,493,        this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,495,        this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,496,        this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,497,        this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,499,        this.foregroundDomainMarkers = new HashMap();,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,500,        this.backgroundDomainMarkers = new HashMap();,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,501,        this.foregroundRangeMarkers = new HashMap();,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,502,        this.backgroundRangeMarkers = new HashMap();,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,504,"        Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, ",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,507,"        addRangeMarker(baseline, Layer.BACKGROUND);",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,509,        this.anchorValue = 0.0;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,511,        this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,512,        this.rangeCrosshairValue = 0.0;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,513,        this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,514,        this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,516,        this.annotations = new java.util.ArrayList();,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,518,    },7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,242,"    public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,250,    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.lightGray;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,253,    public static final Font DEFAULT_VALUE_LABEL_FONT ,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,268,    public static final Stroke DEFAULT_CROSSHAIR_STROKE,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,276,    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,279,    protected static ResourceBundle localizationResources ,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,754,"        setDomainAxisLocation(0, location, notify);",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,755,    },7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,787,        if (index == 0 && location == null) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,791,"        this.domainAxisLocations.set(index, location);",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,792,        if (notify) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,795,    },7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,854,        for (int i = 0; i < this.domainAxes.size(); i++) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,855,            CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,856,            if (axis != null) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,860,    },7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,881,        ValueAxis result = null;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,882,        if (index < this.rangeAxes.size()) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,883,            result = (ValueAxis) this.rangeAxes.get(index);,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,885,        if (result == null) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,892,        return result;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1010,"        setRangeAxisLocation(0, location, notify);",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1011,    },7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1040,        if (index == 0 && location == null) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1044,"        this.rangeAxisLocations.set(index, location);",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1045,        if (notify) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1048,    },7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1104,        for (int i = 0; i < this.rangeAxes.size(); i++) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1105,            ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1106,            if (axis != null) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1110,    },7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1133,        CategoryDataset result = null;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1134,        if (this.datasets.size() > index) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1135,            result = (CategoryDataset) this.datasets.get(index);,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1137,        return result;,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1200,"        this.datasetToDomainAxisMap.set(index, new Integer(axisIndex));  ",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1202,"        datasetChanged(new DatasetChangeEvent(this, getDataset(index)));  ",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1203,    },7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1233,"        this.datasetToRangeAxisMap.set(index, new Integer(axisIndex));",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1235,"        datasetChanged(new DatasetChangeEvent(this, getDataset(index)));  ",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1236,    },7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1814,        int count = this.rangeAxes.size();,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1815,        for (int axisIndex = 0; axisIndex < count; axisIndex++) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1816,            ValueAxis yAxis = getRangeAxis(axisIndex);,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1817,            if (yAxis != null) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1821,        if (getParent() != null) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1825,            PlotChangeEvent e = new PlotChangeEvent(this);,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1826,            e.setType(ChartChangeEventType.DATASET_UPDATED);,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1827,            notifyListeners(e);,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1830,    },7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2046,"        addRangeMarker(0, marker, layer);",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2047,    },7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2061,        if (layer == Layer.FOREGROUND) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2070,        else if (layer == Layer.BACKGROUND) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2071,            markers = (Collection) this.backgroundRangeMarkers.get(,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2073,            if (markers == null) {,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2074,                markers = new java.util.ArrayList();,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2075,"                this.backgroundRangeMarkers.put(new Integer(index), markers);",7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2077,            markers.add(marker);            ,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2079,        marker.addChangeListener(this);,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2080,        notifyListeners(new PlotChangeEvent(this));,7.33333,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2081,    },7.33333,0,-1,0
org/jfree/chart/plot/ValueMarker,26,95,"        super(paint, stroke, paint, stroke, alpha);",7.33333,0,-1,0
org/jfree/chart/plot/ValueMarker,26,96,        this.value = value;,7.33333,0,-1,0
org/jfree/chart/plot/ValueMarker,26,97,    },7.33333,0,-1,0
org/jfree/chart/plot/Plot,26,605,        DrawingSupplier result = null;,7.2,0,-1,0
org/jfree/chart/plot/Plot,26,606,        Plot p = getParent();,7.2,0,-1,0
org/jfree/chart/plot/Plot,26,607,        if (p != null) {,7.2,0,-1,0
org/jfree/chart/plot/Plot,26,611,            result = this.drawingSupplier;,7.2,0,-1,0
org/jfree/chart/plot/Plot,26,613,        return result;,7.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,658,        CategoryPlot cp = getPlot();,7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,659,        if (cp == null) {,7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,664,        if (!isSeriesVisible(series) || !isSeriesVisibleInLegend(series)) {,7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,668,        CategoryDataset dataset = cp.getDataset(datasetIndex);,7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,669,"        String label = getLegendItemLabelGenerator().generateLabel(dataset, ",7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,671,        String description = label;,7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,672,        String toolTipText = null; ,7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,673,        if (getLegendItemToolTipGenerator() != null) {,7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,677,        String urlText = null;,7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,678,        if (getLegendItemURLGenerator() != null) {,7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,682,"        Shape shape = new Rectangle2D.Double(-4.0, -4.0, 8.0, 8.0);",7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,683,        Paint paint = lookupSeriesPaint(series);,7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,684,        Paint outlinePaint = lookupSeriesOutlinePaint(series);,7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,685,        Stroke outlineStroke = lookupSeriesOutlineStroke(series);,7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,687,"        LegendItem result = new LegendItem(label, description, toolTipText, ",7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,691,        result.setDataset(dataset);,7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,692,        result.setDatasetIndex(datasetIndex);,7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,693,        result.setSeriesKey(dataset.getRowKey(series));,7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,694,        result.setSeriesIndex(series);,7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,695,        if (this.gradientPaintTransformer != null) {,7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,696,            result.setFillPaintTransformer(this.gradientPaintTransformer);,7.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,698,        return result;,7.14286,0,-1,0
org/jfree/chart/util/PaintList,26,72,        return (Paint) get(index);,7.04348,0,-1,0
org/jfree/chart/axis/Axis,26,764,        if (flag != this.tickMarksVisible) {,6.72222,0,-1,0
org/jfree/chart/axis/Axis,26,765,            this.tickMarksVisible = flag;,6.72222,0,-1,0
org/jfree/chart/axis/Axis,26,766,            notifyListeners(new AxisChangeEvent(this));,6.72222,0,-1,0
org/jfree/chart/axis/Axis,26,768,    },6.72222,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,197,        super(label);,6.72222,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,199,        this.lowerMargin = DEFAULT_AXIS_MARGIN;,6.72222,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,200,        this.upperMargin = DEFAULT_AXIS_MARGIN;,6.72222,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,201,        this.categoryMargin = DEFAULT_CATEGORY_MARGIN;,6.72222,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,202,        this.maximumCategoryLabelLines = 1;,6.72222,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,203,        this.maximumCategoryLabelWidthRatio = 0.0f;,6.72222,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,205,        setTickMarksVisible(false);  // not supported by this axis type yet,6.72222,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,207,        this.categoryLabelPositionOffset = 4;,6.72222,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,208,        this.categoryLabelPositions = CategoryLabelPositions.STANDARD;,6.72222,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,209,        this.tickLabelFontMap = new HashMap();,6.72222,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,210,        this.tickLabelPaintMap = new HashMap();,6.72222,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,211,        this.categoryLabelToolTips = new HashMap();,6.72222,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,213,    },6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,258,                                  CategoryLabelPosition right) {,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,260,        if (top == null) {,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,263,        if (bottom == null) {,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,266,        if (left == null) {,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,269,        if (right == null) {,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,273,        this.positionForAxisAtTop = top;,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,274,        this.positionForAxisAtBottom = bottom;,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,275,        this.positionForAxisAtLeft = left;,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,276,        this.positionForAxisAtRight = right;,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,278,    },6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,66,        STANDARD = new CategoryLabelPositions(,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,85,        UP_90 = new CategoryLabelPositions(,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,110,        DOWN_90 = new CategoryLabelPositions(,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,134,    public static final CategoryLabelPositions UP_45 ,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,138,    public static final CategoryLabelPositions DOWN_45 ,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,151,        return new CategoryLabelPositions(,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,185,        return new CategoryLabelPositions(,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,74,    private CategoryLabelWidthType(String name) {,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,75,        if (name == null) {,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,78,        this.name = name;,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,79,    },6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,58,        CATEGORY = new CategoryLabelWidthType(,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,64,"        RANGE = new CategoryLabelWidthType(""CategoryLabelWidthType.RANGE"");",6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,106,"        this(categoryAnchor, labelAnchor, TextAnchor.CENTER, 0.0, ",6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,108,    },6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,125,"        this(categoryAnchor, labelAnchor, TextAnchor.CENTER, 0.0, widthType, ",6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,127,    },6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,150,                                 float widthRatio) {,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,152,        if (categoryAnchor == null) {,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,156,        if (labelAnchor == null) {,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,160,        if (rotationAnchor == null) {,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,164,        if (widthType == null) {,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,168,        this.categoryAnchor = categoryAnchor;,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,169,        this.labelAnchor = labelAnchor;,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,170,        this.rotationAnchor = rotationAnchor;,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,171,        this.angle = angle;,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,172,        this.widthType = widthType;,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,173,        this.widthRatio = widthRatio;,6.72222,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,175,    },6.72222,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,267,        return this.drawBarOutline;    ,6.66667,0,-1,0
org/jfree/chart/util/PaintList,26,83,"        set(index, paint);",6.61224,0,-1,0
org/jfree/chart/util/PaintList,26,84,    },6.61224,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,77,    private CategoryAnchor(String name) {,6.54054,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,78,        this.name = name;,6.54054,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,79,    },6.54054,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,58,    public static final CategoryAnchor START ,6.54054,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,62,    public static final CategoryAnchor MIDDLE ,6.54054,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,66,    public static final CategoryAnchor END ,6.54054,0,-1,0
org/jfree/chart/LegendItem,26,765,        if (transformer == null) { ,6.25,0,-1,0
org/jfree/chart/LegendItem,26,768,        this.fillPaintTransformer = transformer;,6.25,0,-1,0
org/jfree/chart/LegendItem,26,769,    },6.25,0,-1,0
org/jfree/chart/JFreeChart,26,1367,"        return createBufferedImage(width, height, BufferedImage.TYPE_INT_RGB, ",6.05,0,-1,0
org/jfree/chart/JFreeChart,26,1385,"        BufferedImage image = new BufferedImage(width, height, imageType);",6.05,0,-1,0
org/jfree/chart/JFreeChart,26,1386,        Graphics2D g2 = image.createGraphics();,6.05,0,-1,0
org/jfree/chart/JFreeChart,26,1387,"        draw(g2, new Rectangle2D.Double(0, 0, width, height), null, info);",6.05,0,-1,0
org/jfree/chart/plot/Marker,26,174,                     float alpha) {,5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,116,    private String label = null;,5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,176,        if (paint == null) {,5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,179,        if (stroke == null) {,5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,182,        if (alpha < 0.0f || alpha > 1.0f),5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,186,        this.paint = paint;,5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,187,        this.stroke = stroke;,5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,188,        this.outlinePaint = outlinePaint;,5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,189,        this.outlineStroke = outlineStroke;,5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,190,        this.alpha = alpha;,5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,192,"        this.labelFont = new Font(""SansSerif"", Font.PLAIN, 9);",5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,193,        this.labelPaint = Color.black;,5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,194,        this.labelAnchor = RectangleAnchor.TOP_LEFT;,5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,195,"        this.labelOffset = new RectangleInsets(3.0, 3.0, 3.0, 3.0);",5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,196,        this.labelOffsetType = LengthAdjustmentType.CONTRACT;,5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,197,        this.labelTextAnchor = TextAnchor.CENTER;,5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,199,        this.listenerList = new EventListenerList();,5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,200,    },5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,533,"        this.listenerList.add(MarkerChangeListener.class, listener);",5.83133,0,-1,0
org/jfree/chart/plot/Marker,26,534,    },5.83133,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,78,    private LengthAdjustmentType(String name) {,5.83133,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,79,        this.name = name;,5.83133,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,80,    },5.83133,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,59,    public static final LengthAdjustmentType NO_CHANGE ,5.83133,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,63,    public static final LengthAdjustmentType EXPAND ,5.83133,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,67,    public static final LengthAdjustmentType CONTRACT ,5.83133,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1213,                        anchor = TextAnchor.BOTTOM_CENTER;,5.78571,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1214,                        rotationAnchor = TextAnchor.BOTTOM_CENTER;,5.78571,0,-1,0
org/jfree/chart/util/RectangleEdge,26,89,            return false;,5.7619,0,-1,0
org/jfree/chart/util/RectangleEdge,26,80,        if (this == obj) {,5.5,0,-1,0
org/jfree/chart/util/RectangleEdge,26,83,        if (!(obj instanceof RectangleEdge)) {,5.5,0,-1,0
org/jfree/chart/util/RectangleEdge,26,87,        RectangleEdge order = (RectangleEdge) obj;,5.5,0,-1,0
org/jfree/chart/util/RectangleEdge,26,88,        if (!this.name.equals(order.name)) {,5.5,0,-1,0
org/jfree/data/general/DatasetUtilities,26,725,"        return findRangeBounds(dataset, true);",5.44681,0,-1,0
org/jfree/data/general/DatasetUtilities,26,739,        if (dataset == null) {,5.44681,0,-1,0
org/jfree/data/general/DatasetUtilities,26,742,        Range result = null;,5.44681,0,-1,0
org/jfree/data/general/DatasetUtilities,26,743,        if (dataset instanceof RangeInfo) {,5.44681,0,-1,0
org/jfree/data/general/DatasetUtilities,26,750,        return result;,5.44681,0,-1,0
org/jfree/chart/util/Layer,26,46,    private Layer(String name) {,5.26087,0,-1,0
org/jfree/chart/util/Layer,26,47,        this.name = name;,5.26087,0,-1,0
org/jfree/chart/util/Layer,26,48,    },5.26087,0,-1,0
org/jfree/chart/util/Layer,26,33,"    public static final Layer FOREGROUND = new Layer(""Layer.FOREGROUND"");",5.26087,0,-1,0
org/jfree/chart/util/Layer,26,36,"    public static final Layer BACKGROUND = new Layer(""Layer.BACKGROUND"");",5.26087,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,102,    private TextBlockAnchor(String name) {,5.14894,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,103,        this.name = name;,5.14894,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,104,    },5.14894,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,59,    public static final TextBlockAnchor TOP_LEFT ,5.14894,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,63,    public static final TextBlockAnchor TOP_CENTER = new TextBlockAnchor(,5.14894,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,67,    public static final TextBlockAnchor TOP_RIGHT = new TextBlockAnchor(,5.14894,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,71,    public static final TextBlockAnchor CENTER_LEFT = new TextBlockAnchor(,5.14894,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,75,    public static final TextBlockAnchor CENTER = new TextBlockAnchor(,5.14894,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,79,    public static final TextBlockAnchor CENTER_RIGHT = new TextBlockAnchor(,5.14894,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,83,    public static final TextBlockAnchor BOTTOM_LEFT ,5.14894,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,87,    public static final TextBlockAnchor BOTTOM_CENTER ,5.14894,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,91,    public static final TextBlockAnchor BOTTOM_RIGHT ,5.14894,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,126,        return this.data.getRowKey(row);,5.12121,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,169,        return (Comparable) this.rowKeys.get(row);,5.12121,0,-1,0
org/jfree/chart/JFreeChart,26,393,            LegendTitle legend = new LegendTitle(this.plot);,4.79208,0,-1,0
org/jfree/chart/JFreeChart,26,394,"            legend.setMargin(new RectangleInsets(1.0, 1.0, 1.0, 1.0));",4.79208,0,-1,0
org/jfree/chart/JFreeChart,26,395,            legend.setFrame(new LineBorder());,4.79208,0,-1,0
org/jfree/chart/JFreeChart,26,396,            legend.setBackgroundPaint(Color.white);,4.79208,0,-1,0
org/jfree/chart/JFreeChart,26,397,            legend.setPosition(RectangleEdge.BOTTOM);,4.79208,0,-1,0
org/jfree/chart/JFreeChart,26,398,            this.subtitles.add(legend);,4.79208,0,-1,0
org/jfree/chart/JFreeChart,26,399,            legend.addChangeListener(this);,4.79208,0,-1,0
org/jfree/chart/title/Title,26,218,        if (position == null) {,4.79208,0,-1,0
org/jfree/chart/title/Title,26,221,        if (this.position != position) {,4.79208,0,-1,0
org/jfree/chart/title/Title,26,222,            this.position = position;,4.79208,0,-1,0
org/jfree/chart/title/Title,26,223,            notifyListeners(new TitleChangeEvent(this));,4.79208,0,-1,0
org/jfree/chart/title/Title,26,225,    },4.79208,0,-1,0
org/jfree/chart/block/AbstractBlock,26,211,        if (margin == null) {,4.79208,0,-1,0
org/jfree/chart/block/AbstractBlock,26,214,        this.margin = margin;,4.79208,0,-1,0
org/jfree/chart/block/AbstractBlock,26,215,    },4.79208,0,-1,0
org/jfree/chart/block/AbstractBlock,26,253,        if (frame == null) {,4.79208,0,-1,0
org/jfree/chart/block/AbstractBlock,26,256,        this.frame = frame;,4.79208,0,-1,0
org/jfree/chart/block/AbstractBlock,26,257,    },4.79208,0,-1,0
org/jfree/chart/block/LineBorder,26,84,"        this(Color.black, new BasicStroke(1.0f), new RectangleInsets(1.0, 1.0, ",4.79208,0,-1,0
org/jfree/chart/block/LineBorder,26,86,    },4.79208,0,-1,0
org/jfree/chart/block/LineBorder,26,95,"    public LineBorder(Paint paint, Stroke stroke, RectangleInsets insets) {",4.79208,0,-1,0
org/jfree/chart/block/LineBorder,26,96,        if (paint == null) {,4.79208,0,-1,0
org/jfree/chart/block/LineBorder,26,99,        if (stroke == null) {,4.79208,0,-1,0
org/jfree/chart/block/LineBorder,26,102,        if (insets == null) {,4.79208,0,-1,0
org/jfree/chart/block/LineBorder,26,105,        this.paint = paint;,4.79208,0,-1,0
org/jfree/chart/block/LineBorder,26,106,        this.stroke = stroke;,4.79208,0,-1,0
org/jfree/chart/block/LineBorder,26,107,        this.insets = insets;,4.79208,0,-1,0
org/jfree/chart/block/LineBorder,26,108,    }  ,4.79208,0,-1,0
org/jfree/chart/title/LegendTitle,26,231,        this.backgroundPaint = paint;   ,4.69903,0,-1,0
org/jfree/chart/title/LegendTitle,26,232,        notifyListeners(new TitleChangeEvent(this));,4.69903,0,-1,0
org/jfree/chart/title/LegendTitle,26,233,    },4.69903,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,98,        return this.data.getColumnCount();,4.65455,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,130,        return this.columnKeys.size();,4.65455,0,-1,0
org/jfree/chart/event/TitleChangeEvent,26,66,        super(title);,4.65385,0,-1,0
org/jfree/chart/event/TitleChangeEvent,26,67,        this.title = title;,4.65385,0,-1,0
org/jfree/chart/event/TitleChangeEvent,26,68,    },4.65385,0,-1,0
org/jfree/chart/title/Title,26,359,        if (this.notify) {,4.65385,0,-1,0
org/jfree/chart/title/Title,26,360,            Object[] listeners = this.listenerList.getListenerList();,4.65385,0,-1,0
org/jfree/chart/title/Title,26,361,            for (int i = listeners.length - 2; i >= 0; i -= 2) {,4.65385,0,-1,0
org/jfree/chart/title/Title,26,368,    },4.65385,0,-1,0
org/jfree/chart/title/LegendTitle,26,164,"        this(source, new FlowArrangement(), new ColumnArrangement());",4.60952,0,-1,0
org/jfree/chart/title/LegendTitle,26,165,    },4.60952,0,-1,0
org/jfree/chart/title/LegendTitle,26,177,"                       Arrangement hLayout, Arrangement vLayout) {",4.60952,0,-1,0
org/jfree/chart/title/LegendTitle,26,178,        this.sources = new LegendItemSource[] {source};,4.60952,0,-1,0
org/jfree/chart/title/LegendTitle,26,179,        this.items = new BlockContainer(hLayout);,4.60952,0,-1,0
org/jfree/chart/title/LegendTitle,26,180,        this.hLayout = hLayout;,4.60952,0,-1,0
org/jfree/chart/title/LegendTitle,26,181,        this.vLayout = vLayout;,4.60952,0,-1,0
org/jfree/chart/title/LegendTitle,26,182,        this.backgroundPaint = null;  ,4.60952,0,-1,0
org/jfree/chart/title/LegendTitle,26,183,        this.legendItemGraphicEdge = RectangleEdge.LEFT;,4.60952,0,-1,0
org/jfree/chart/title/LegendTitle,26,184,        this.legendItemGraphicAnchor = RectangleAnchor.CENTER;,4.60952,0,-1,0
org/jfree/chart/title/LegendTitle,26,185,        this.legendItemGraphicLocation = RectangleAnchor.CENTER;,4.60952,0,-1,0
org/jfree/chart/title/LegendTitle,26,186,"        this.legendItemGraphicPadding = new RectangleInsets(2.0, 2.0, 2.0, 2.0);",4.60952,0,-1,0
org/jfree/chart/title/LegendTitle,26,187,        this.itemFont = DEFAULT_ITEM_FONT;,4.60952,0,-1,0
org/jfree/chart/title/LegendTitle,26,188,        this.itemPaint = DEFAULT_ITEM_PAINT;,4.60952,0,-1,0
org/jfree/chart/title/LegendTitle,26,189,"        this.itemLabelPadding = new RectangleInsets(2.0, 2.0, 2.0, 2.0);",4.60952,0,-1,0
org/jfree/chart/title/LegendTitle,26,190,    },4.60952,0,-1,0
org/jfree/chart/title/LegendTitle,26,110,    public static final Font DEFAULT_ITEM_FONT ,4.60952,0,-1,0
org/jfree/chart/title/LegendTitle,26,114,    public static final Paint DEFAULT_ITEM_PAINT = Color.black;,4.60952,0,-1,0
org/jfree/chart/block/BlockContainer,26,97,    public BlockContainer(Arrangement arrangement) {,4.60952,0,-1,0
org/jfree/chart/block/BlockContainer,26,98,        if (arrangement == null) {,4.60952,0,-1,0
org/jfree/chart/block/BlockContainer,26,101,        this.arrangement = arrangement;,4.60952,0,-1,0
org/jfree/chart/block/BlockContainer,26,102,        this.blocks = new ArrayList();,4.60952,0,-1,0
org/jfree/chart/block/BlockContainer,26,103,    }    ,4.60952,0,-1,0
org/jfree/chart/block/FlowArrangement,26,82,"        this(HorizontalAlignment.CENTER, VerticalAlignment.CENTER, 2.0, 2.0);",4.60952,0,-1,0
org/jfree/chart/block/FlowArrangement,26,83,    },4.60952,0,-1,0
org/jfree/chart/block/FlowArrangement,26,94,"                           double hGap, double vGap) {   ",4.60952,0,-1,0
org/jfree/chart/block/FlowArrangement,26,95,        this.horizontalAlignment = hAlign;,4.60952,0,-1,0
org/jfree/chart/block/FlowArrangement,26,96,        this.verticalAlignment = vAlign;,4.60952,0,-1,0
org/jfree/chart/block/FlowArrangement,26,97,        this.horizontalGap = hGap;,4.60952,0,-1,0
org/jfree/chart/block/FlowArrangement,26,98,        this.verticalGap = vGap;,4.60952,0,-1,0
org/jfree/chart/block/FlowArrangement,26,99,    },4.60952,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,80,    public ColumnArrangement() {   ,4.60952,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,81,    },4.60952,0,-1,0
org/jfree/chart/title/Title,26,133,"        this(Title.DEFAULT_POSITION,",4.44037,0,-1,0
org/jfree/chart/title/Title,26,136,    },4.44037,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,594,            result = area.getX() + area.getWidth() * getLowerMargin();,4.26667,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,705,            available = area.getWidth();,4.26667,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,889,"                    x0 = getCategoryStart(categoryIndex, ticks.size(), ",4.26667,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,891,"                    x1 = getCategoryEnd(categoryIndex, ticks.size(), dataArea, ",4.26667,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,893,                    y0 = state.getCursor() + this.categoryLabelPositionOffset;,4.26667,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,894,                    y1 = y0 + state.getMax();,4.26667,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1011,"                    max = Math.max(max, calculateTextBlockHeight(label, ",4.26667,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1087,        RectangleInsets insets = getTickLabelInsets();,4.26667,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1088,        Size2D size = block.calculateDimensions(g2);,4.26667,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1089,"        Rectangle2D box = new Rectangle2D.Double(0.0, 0.0, size.getWidth(), ",4.26667,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1091,"        Shape rotatedBox = ShapeUtilities.rotateShape(box, position.getAngle(),",4.26667,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1093,        double h = rotatedBox.getBounds2D().getHeight() ,4.26667,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1095,        return h;,4.26667,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,145,"            result.setLocation(rectangle.getCenterX(), rectangle.getMinY());",4.26667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,521,"            axisLine = new Line2D.Double(dataArea.getX(), cursor, ",4.26667,0,-1,0
org/jfree/chart/JFreeChart,26,364,                      boolean createLegend) {,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,298,    private int backgroundImageAlignment = Align.FIT;,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,301,    private float backgroundImageAlpha = 0.5f;,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,366,        if (plot == null) {,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,371,        this.progressListeners = new EventListenerList();,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,372,        this.changeListeners = new EventListenerList();,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,373,        this.notify = true;  // default is to notify listeners when the ,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,376,        this.renderingHints = new RenderingHints(,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,380,        this.borderVisible = false;,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,381,        this.borderStroke = new BasicStroke(1.0f);,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,382,        this.borderPaint = Color.black;,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,384,        this.padding = RectangleInsets.ZERO_INSETS;,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,386,        this.plot = plot;,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,387,        plot.addChangeListener(this);,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,389,        this.subtitles = new ArrayList();,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,392,        if (createLegend) {,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,403,        if (title != null) {,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,411,        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,413,        this.backgroundImage = DEFAULT_BACKGROUND_IMAGE;,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,414,        this.backgroundImageAlignment = DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,415,        this.backgroundImageAlpha = DEFAULT_BACKGROUND_IMAGE_ALPHA;,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,417,    },4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,242,    public static final ProjectInfo INFO = new JFreeChartInfo();,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,245,    public static final Font DEFAULT_TITLE_FONT ,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,249,    public static final Paint DEFAULT_BACKGROUND_PAINT ,4.17241,0,-1,0
org/jfree/chart/JFreeChart,26,253,    public static final Image DEFAULT_BACKGROUND_IMAGE = null;,4.17241,0,-1,0
org/jfree/chart/title/Title,26,339,"        this.listenerList.add(TitleChangeListener.class, listener);",4.17241,0,-1,0
org/jfree/chart/title/Title,26,340,    },4.17241,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,69,    public ProjectInfo() {,4.17241,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,71,    },4.17241,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,113,        this.logo = logo;,4.17241,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,114,    },4.17241,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,131,        this.licenceText = licenceText;,4.17241,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,132,    },4.17241,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,149,        this.contributors = contributors;,4.17241,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,150,    },4.17241,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,147,    public BasicProjectInfo() {,4.17241,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,148,        this.libraries = new ArrayList();,4.17241,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,149,        this.optionalLibraries = new ArrayList();,4.17241,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,150,    },4.17241,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,200,        this.copyright = copyright;,4.17241,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,201,    },4.17241,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,209,        super.setInfo(info);,4.17241,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,210,    },4.17241,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,218,        super.setLicenceName(licence);,4.17241,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,219,    },4.17241,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,227,        super.setName(name);,4.17241,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,228,    },4.17241,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,236,        super.setVersion(version);,4.17241,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,237,    },4.17241,0,-1,0
org/jfree/chart/ui/Library,26,84,    protected Library() {,4.17241,0,-1,0
org/jfree/chart/ui/Library,26,86,    },4.17241,0,-1,0
org/jfree/chart/ui/Library,26,130,        this.info = info;,4.17241,0,-1,0
org/jfree/chart/ui/Library,26,131,    },4.17241,0,-1,0
org/jfree/chart/ui/Library,26,139,        this.licenceName = licenceName;,4.17241,0,-1,0
org/jfree/chart/ui/Library,26,140,    },4.17241,0,-1,0
org/jfree/chart/ui/Library,26,148,        this.name = name;,4.17241,0,-1,0
org/jfree/chart/ui/Library,26,149,    },4.17241,0,-1,0
org/jfree/chart/ui/Library,26,157,        this.version = version;,4.17241,0,-1,0
org/jfree/chart/ui/Library,26,158,    },4.17241,0,-1,0
org/jfree/chart/resources/JFreeChartResources,26,46,public class JFreeChartResources extends ListResourceBundle {,4.17241,0,-1,0
org/jfree/chart/resources/JFreeChartResources,26,58,    private static final Object[][] CONTENTS = {,4.17241,0,-1,0
org/jfree/chart/resources/JFreeChartResources,26,54,        return CONTENTS;,4.17241,0,-1,0
org/jfree/chart/ui/Contributor,26,65,"    public Contributor(String name, String email) {",4.17241,0,-1,0
org/jfree/chart/ui/Contributor,26,66,        this.name = name;,4.17241,0,-1,0
org/jfree/chart/ui/Contributor,26,67,        this.email = email;,4.17241,0,-1,0
org/jfree/chart/ui/Contributor,26,68,    },4.17241,0,-1,0
org/jfree/chart/ui/Licences,26,54,public class Licences {,4.17241,0,-1,0
org/jfree/chart/ui/Licences,26,801,        if (singleton == null) {,4.17241,0,-1,0
org/jfree/chart/ui/Licences,26,802,            singleton = new Licences();,4.17241,0,-1,0
org/jfree/chart/ui/Licences,26,804,        return singleton;,4.17241,0,-1,0
org/jfree/chart/ui/Licences,26,824,        return LGPL;,4.17241,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,592,        double result = 0.0;,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,593,        if ((edge == RectangleEdge.TOP) || (edge == RectangleEdge.BOTTOM)) {,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,601,"        double categorySize = calculateCategorySize(categoryCount, area, edge);",4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,602,"        double categoryGapWidth = calculateCategoryGapSize(categoryCount, area,",4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,605,        result = result + category * (categorySize + categoryGapWidth);,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,606,        return result;,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,647,"        return getCategoryStart(category, categoryCount, area, edge)",4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,701,        double result = 0.0;,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,702,        double available = 0.0;,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,704,        if ((edge == RectangleEdge.TOP) || (edge == RectangleEdge.BOTTOM)) {,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,712,        if (categoryCount > 1) {,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,716,        return result;,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,870,                CategoryTick tick = (CategoryTick) iterator.next();,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,871,                g2.setFont(getTickLabelFont(tick.getCategory()));,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,872,                g2.setPaint(getTickLabelPaint(tick.getCategory()));,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,874,                CategoryLabelPosition position ,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,876,                double x0 = 0.0;,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,877,                double x1 = 0.0;,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,878,                double y0 = 0.0;,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,879,                double y1 = 0.0;,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,880,                if (edge == RectangleEdge.TOP) {,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,888,                else if (edge == RectangleEdge.BOTTOM) {,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,912,"                Rectangle2D area = new Rectangle2D.Double(x0, y0, (x1 - x0), ",4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,914,"                Point2D anchorPoint = RectangleAnchor.coordinates(area, ",4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,916,                TextBlock block = tick.getLabel();,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,917,"                block.draw(g2, (float) anchorPoint.getX(), ",4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,921,"                Shape bounds = block.calculateBounds(g2, ",4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,925,                if (plotState != null && plotState.getOwner() != null) {,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,935,                categoryIndex++;,4.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,936,            },4.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,183,        return this.categoryAnchor;,4.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,144,        else if (anchor == RectangleAnchor.TOP) {,4.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,94,        return this.category;,4.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,103,        return this.label;,4.0,0,-1,0
org/jfree/chart/text/TextBlock,26,193,        Size2D d = calculateDimensions(g2);,4.0,0,-1,0
org/jfree/chart/text/TextBlock,26,194,"        float[] offsets = calculateOffsets(anchor, d.getWidth(), d.getHeight());",4.0,0,-1,0
org/jfree/chart/text/TextBlock,26,195,"        Rectangle2D bounds = new Rectangle2D.Double(anchorX + offsets[0], ",4.0,0,-1,0
org/jfree/chart/text/TextBlock,26,197,"        Shape rotatedBounds = ShapeUtilities.rotateShape(bounds, angle, ",4.0,0,-1,0
org/jfree/chart/text/TextBlock,26,199,        return rotatedBounds;   ,4.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,494,                        lower = lower - getLowerMargin() * range;,4.0,0,-1,0
org/jfree/chart/title/Title,26,174,                    RectangleInsets padding) {,3.90323,0,-1,0
org/jfree/chart/title/Title,26,177,        if (position == null) {,3.90323,0,-1,0
org/jfree/chart/title/Title,26,180,        if (horizontalAlignment == null) {,3.90323,0,-1,0
org/jfree/chart/title/Title,26,185,        if (verticalAlignment == null) {,3.90323,0,-1,0
org/jfree/chart/title/Title,26,189,        if (padding == null) {,3.90323,0,-1,0
org/jfree/chart/title/Title,26,193,        this.position = position;,3.90323,0,-1,0
org/jfree/chart/title/Title,26,194,        this.horizontalAlignment = horizontalAlignment;,3.90323,0,-1,0
org/jfree/chart/title/Title,26,195,        this.verticalAlignment = verticalAlignment;,3.90323,0,-1,0
org/jfree/chart/title/Title,26,196,        setPadding(padding);,3.90323,0,-1,0
org/jfree/chart/title/Title,26,197,        this.listenerList = new EventListenerList();,3.90323,0,-1,0
org/jfree/chart/title/Title,26,198,        this.notify = true;,3.90323,0,-1,0
org/jfree/chart/title/Title,26,200,    },3.90323,0,-1,0
org/jfree/chart/title/Title,26,98,    public static final RectangleEdge DEFAULT_POSITION = RectangleEdge.TOP;,3.90323,0,-1,0
org/jfree/chart/title/Title,26,102,            DEFAULT_HORIZONTAL_ALIGNMENT = HorizontalAlignment.CENTER;,3.90323,0,-1,0
org/jfree/chart/title/Title,26,106,            DEFAULT_VERTICAL_ALIGNMENT = VerticalAlignment.CENTER;,3.90323,0,-1,0
org/jfree/chart/title/Title,26,109,    public static final RectangleInsets DEFAULT_PADDING = new RectangleInsets(,3.90323,0,-1,0
org/jfree/chart/block/AbstractBlock,26,111,    protected AbstractBlock() {,3.90323,0,-1,0
org/jfree/chart/block/AbstractBlock,26,112,        this.id = null;,3.90323,0,-1,0
org/jfree/chart/block/AbstractBlock,26,113,        this.width = 0.0;,3.90323,0,-1,0
org/jfree/chart/block/AbstractBlock,26,114,        this.height = 0.0;,3.90323,0,-1,0
org/jfree/chart/block/AbstractBlock,26,115,        this.bounds = new Rectangle2D.Float();,3.90323,0,-1,0
org/jfree/chart/block/AbstractBlock,26,116,        this.margin = RectangleInsets.ZERO_INSETS;,3.90323,0,-1,0
org/jfree/chart/block/AbstractBlock,26,117,        this.frame = BlockBorder.NONE; ,3.90323,0,-1,0
org/jfree/chart/block/AbstractBlock,26,118,        this.padding = RectangleInsets.ZERO_INSETS;,3.90323,0,-1,0
org/jfree/chart/block/AbstractBlock,26,119,    },3.90323,0,-1,0
org/jfree/chart/block/AbstractBlock,26,279,        if (padding == null) {,3.90323,0,-1,0
org/jfree/chart/block/AbstractBlock,26,282,        this.padding = padding;,3.90323,0,-1,0
org/jfree/chart/block/AbstractBlock,26,283,    },3.90323,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,78,    private HorizontalAlignment(String name) {,3.90323,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,79,        this.name = name;,3.90323,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,80,    },3.90323,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,59,    public static final HorizontalAlignment LEFT ,3.90323,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,63,    public static final HorizontalAlignment RIGHT ,3.90323,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,67,    public static final HorizontalAlignment CENTER ,3.90323,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,78,    private VerticalAlignment(String name) {,3.90323,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,79,        this.name = name;,3.90323,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,80,    },3.90323,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,59,    public static final VerticalAlignment TOP ,3.90323,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,63,    public static final VerticalAlignment BOTTOM ,3.90323,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,67,    public static final VerticalAlignment CENTER ,3.90323,0,-1,0
org/jfree/chart/block/BlockBorder,26,130,"    public BlockBorder(RectangleInsets insets, Paint paint) {",3.90323,0,-1,0
org/jfree/chart/block/BlockBorder,26,131,        if (insets == null) {,3.90323,0,-1,0
org/jfree/chart/block/BlockBorder,26,134,        if (paint == null) {,3.90323,0,-1,0
org/jfree/chart/block/BlockBorder,26,137,        this.insets = insets;,3.90323,0,-1,0
org/jfree/chart/block/BlockBorder,26,138,        this.paint = paint;,3.90323,0,-1,0
org/jfree/chart/block/BlockBorder,26,139,    },3.90323,0,-1,0
org/jfree/chart/block/BlockBorder,26,73,    public static final BlockBorder NONE = new BlockBorder(,3.90323,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,163,                return (index);,3.81102,0,-1,0
org/jfree/chart/plot/Plot,26,1344,            else if (orientation == PlotOrientation.VERTICAL) {,3.78125,0,-1,0
org/jfree/chart/plot/Plot,26,1345,                result = RectangleEdge.BOTTOM;,3.78125,0,-1,0
org/jfree/chart/util/RectangleEdge,26,57,    private RectangleEdge(String name) {,3.78125,0,-1,0
org/jfree/chart/util/RectangleEdge,26,58,        this.name = name;,3.78125,0,-1,0
org/jfree/chart/util/RectangleEdge,26,59,    },3.78125,0,-1,0
org/jfree/chart/util/RectangleEdge,26,34,    public static final RectangleEdge TOP = new RectangleEdge(,3.78125,0,-1,0
org/jfree/chart/util/RectangleEdge,26,38,    public static final RectangleEdge BOTTOM = new RectangleEdge(,3.78125,0,-1,0
org/jfree/chart/util/RectangleEdge,26,42,    public static final RectangleEdge LEFT = new RectangleEdge(,3.78125,0,-1,0
org/jfree/chart/util/RectangleEdge,26,46,    public static final RectangleEdge RIGHT = new RectangleEdge(,3.78125,0,-1,0
org/jfree/chart/axis/AxisCollection,26,136,            this.axesAtBottom.add(axis);,3.78125,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,161,        for (int index = 0; index < this.size; index++) {,3.78125,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,162,            if (this.objects[index] == object) {,3.78125,0,-1,0
org/jfree/chart/util/ObjectList,26,109,        return super.indexOf(object);    ,3.78125,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,464,"        setBaseToolTipGenerator(generator, true);",3.75556,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,465,    },3.75556,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,480,        this.baseToolTipGenerator = generator;,3.75556,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,481,        if (notify) {,3.75556,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,482,            notifyListeners(new RendererChangeEvent(this));,3.75556,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,484,    },3.75556,0,-1,0
org/jfree/data/Range,26,199,        if (range1 == null) {,3.70588,0,-1,0
org/jfree/data/Range,26,200,            return range2;,3.70588,0,-1,0
org/jfree/chart/axis/Axis,26,1132,            AffineTransform t = AffineTransform.getRotateInstance(,3.66667,0,-1,0
org/jfree/chart/axis/Axis,26,1135,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,3.66667,0,-1,0
org/jfree/chart/axis/Axis,26,1136,            labelBounds = rotatedLabelBounds.getBounds2D();,3.66667,0,-1,0
org/jfree/chart/axis/Axis,26,1137,            float w = (float) labelBounds.getWidth();,3.66667,0,-1,0
org/jfree/chart/axis/Axis,26,1138,            float h = (float) labelBounds.getHeight();,3.66667,0,-1,0
org/jfree/chart/axis/Axis,26,1139,            float labelx = (float) dataArea.getCenterX();,3.66667,0,-1,0
org/jfree/chart/axis/Axis,26,1140,            float labely = (float) (state.getCursor() + insets.getTop() ,3.66667,0,-1,0
org/jfree/chart/axis/Axis,26,1142,"            TextUtilities.drawRotatedString(label, g2, labelx, labely, ",3.66667,0,-1,0
org/jfree/chart/axis/Axis,26,1144,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f, ",3.66667,0,-1,0
org/jfree/chart/axis/Axis,26,1146,            state.cursorDown(insets.getTop() + labelBounds.getHeight() ,3.66667,0,-1,0
org/jfree/chart/axis/Axis,26,1148,        },3.66667,0,-1,0
org/jfree/chart/axis/AxisState,26,139,        this.cursor = this.cursor + units;,3.66667,0,-1,0
org/jfree/chart/axis/AxisState,26,140,    },3.66667,0,-1,0
org/jfree/chart/axis/AxisSpace,26,174,            this.bottom += space;,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,694,                else if (edge == RectangleEdge.RIGHT) {,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,697,                else if (edge == RectangleEdge.TOP) {,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,716,            else if (edge == RectangleEdge.RIGHT) {,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,721,            else if (edge == RectangleEdge.TOP) {,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,775,"                tickLabelHeight = findMaximumTickLabelHeight(ticks, g2, ",3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,778,            else if (RectangleEdge.isLeftOrRight(edge)) {,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,779,"                tickLabelWidth = findMaximumTickLabelWidth(ticks, g2, plotArea,",3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,789,            labelHeight = labelEnclosure.getHeight();,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,790,"            space.add(labelHeight + tickLabelHeight, edge);",3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,792,        else if (RectangleEdge.isLeftOrRight(edge)) {,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,793,            labelWidth = labelEnclosure.getWidth();,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,794,"            space.add(labelWidth + tickLabelWidth, edge);",3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,817,        RectangleInsets insets = getTickLabelInsets();,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,818,        Font font = getTickLabelFont();,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,819,        double maxHeight = 0.0;,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,820,        if (vertical) {,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,835,"            LineMetrics metrics = font.getLineMetrics(""ABCxyz"", ",3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,837,            maxHeight = metrics.getHeight() ,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,840,        return maxHeight;,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,860,        RectangleInsets insets = getTickLabelInsets();,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,861,        Font font = getTickLabelFont();,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,862,        double maxWidth = 0.0;,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,863,        if (!vertical) {,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,864,            FontMetrics fm = g2.getFontMetrics(font);,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,865,            Iterator iterator = ticks.iterator();,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,866,            while (iterator.hasNext()) {,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,867,                Tick tick = (Tick) iterator.next();,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,868,                Rectangle2D labelBounds = TextUtilities.getTextBounds(,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,870,                if (labelBounds.getWidth() + insets.getLeft() ,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,872,                    maxWidth = labelBounds.getWidth() ,3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,875,            },3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,876,        },3.66667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,883,        return maxWidth;,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,535,        else if (RectangleEdge.isLeftOrRight(edge)) {,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,536,            max = area.getMinY();,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,537,            min = area.getMaxY();,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,974,        RectangleInsets tickLabelInsets = getTickLabelInsets();,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,975,        double result = tickLabelInsets.getTop() + tickLabelInsets.getBottom();,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,977,        Font tickLabelFont = getTickLabelFont();,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,978,        FontRenderContext frc = g2.getFontRenderContext();,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,979,"        result += tickLabelFont.getLineMetrics(""123"", frc).getHeight();",3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,980,        return result;,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1052,        else if (RectangleEdge.isLeftOrRight(edge)) {,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1053,"            selectVerticalAutoTickUnit(g2, dataArea, edge);",3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1109,        double tickLabelHeight = estimateMaximumTickLabelHeight(g2);,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1112,        TickUnitSource tickUnits = getStandardTickUnits();,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1113,        TickUnit unit1 = tickUnits.getCeilingTickUnit(getTickUnit());,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1114,"        double unitHeight = lengthToJava2D(unit1.getSize(), dataArea, edge);",3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1117,        double guess = (tickLabelHeight / unitHeight) * unit1.getSize();,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1119,        NumberTickUnit unit2 ,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1121,"        double unit2Height = lengthToJava2D(unit2.getSize(), dataArea, edge);",3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1123,        tickLabelHeight = estimateMaximumTickLabelHeight(g2);,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1124,        if (tickLabelHeight > unit2Height) {,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1128,"        setTickUnit(unit2, false, false);",3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1130,    },3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1153,        else if (RectangleEdge.isLeftOrRight(edge)) {,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1154,"            result = refreshTicksVertical(g2, dataArea, edge);",3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1246,        List result = new java.util.ArrayList();,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1247,        result.clear();,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1249,        Font tickLabelFont = getTickLabelFont();,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1250,        g2.setFont(tickLabelFont);,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1251,        if (isAutoTickUnitSelection()) {,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1252,"            selectAutoTickUnit(g2, dataArea, edge);",3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1255,        double size = getTickUnit().getSize();,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1256,        int count = calculateVisibleTickCount();,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1257,        double lowestTickValue = calculateLowestVisibleTickValue();,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1259,        if (count <= ValueAxis.MAXIMUM_TICK_COUNT) {,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1260,            for (int i = 0; i < count; i++) {,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1261,                double currentTickValue = lowestTickValue + (i * size);,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1263,                NumberFormat formatter = getNumberFormatOverride();,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1264,                if (formatter != null) {,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1268,                    tickLabel = getTickUnit().valueToString(currentTickValue);,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1271,                TextAnchor anchor = null;,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1272,                TextAnchor rotationAnchor = null;,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1273,                double angle = 0.0;,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1274,                if (isVerticalTickLabels()) {,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1287,                    if (edge == RectangleEdge.LEFT) {,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1288,                        anchor = TextAnchor.CENTER_RIGHT;,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1289,                        rotationAnchor = TextAnchor.CENTER_RIGHT;,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1297,                Tick tick = new NumberTick(,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1301,                result.add(tick);,3.66667,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1304,        return result;,3.66667,0,-1,0
org/jfree/chart/axis/AxisCollection,26,95,        return this.axesAtBottom;,3.66667,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2281,        if (listener == null) {,3.66667,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2284,"        this.listenerList.add(RendererChangeListener.class, listener);",3.66667,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2285,    },3.66667,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,549,        if (orientation == null) {,3.62963,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,552,        this.orientation = orientation;,3.62963,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,553,        notifyListeners(new PlotChangeEvent(this));,3.62963,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,554,    },3.62963,0,-1,0
org/jfree/chart/plot/Plot,26,871,"        this.listenerList.add(PlotChangeListener.class, listener);",3.61194,0,-1,0
org/jfree/chart/plot/Plot,26,872,    },3.61194,0,-1,0
org/jfree/data/general/DatasetUtilities,26,748,"            result = iterateCategoryRangeBounds(dataset, includeInterval);",3.59574,0,-1,0
org/jfree/data/general/DatasetUtilities,26,804,        double minimum = Double.POSITIVE_INFINITY;,3.59574,0,-1,0
org/jfree/data/general/DatasetUtilities,26,805,        double maximum = Double.NEGATIVE_INFINITY;,3.59574,0,-1,0
org/jfree/data/general/DatasetUtilities,26,806,        boolean interval = includeInterval ,3.59574,0,-1,0
org/jfree/data/general/DatasetUtilities,26,808,        int rowCount = dataset.getRowCount();,3.59574,0,-1,0
org/jfree/data/general/DatasetUtilities,26,809,        int columnCount = dataset.getColumnCount();,3.59574,0,-1,0
org/jfree/data/general/DatasetUtilities,26,810,        for (int row = 0; row < rowCount; row++) {,3.59574,0,-1,0
org/jfree/data/general/DatasetUtilities,26,832,        if (minimum == Double.POSITIVE_INFINITY) {,3.59574,0,-1,0
org/jfree/chart/axis/Axis,26,752,        return this.tickMarksVisible;,3.55882,0,-1,0
org/jfree/chart/axis/Axis,26,779,        return this.tickMarkInsideLength;,3.55882,0,-1,0
org/jfree/chart/axis/Axis,26,804,        return this.tickMarkOutsideLength;,3.55882,0,-1,0
org/jfree/chart/axis/Axis,26,828,        return this.tickMarkStroke;,3.55882,0,-1,0
org/jfree/chart/axis/Axis,26,857,        return this.tickMarkPaint;,3.55882,0,-1,0
org/jfree/chart/axis/Axis,26,1131,        else if (edge == RectangleEdge.BOTTOM) {,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,623,        RectangleInsets insets = getTickLabelInsets();,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,624,        float[] result = new float[2];,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,625,        if (edge == RectangleEdge.TOP) {,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,641,        return result;,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,661,        AxisState state = new AxisState(cursor);,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,663,        if (isAxisLineVisible()) {,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,667,        double ol = getTickMarkOutsideLength();,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,668,        double il = getTickMarkInsideLength();,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,670,"        List ticks = refreshTicks(g2, state, dataArea, edge);",3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,671,        state.setTicks(ticks);,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,672,        g2.setFont(getTickLabelFont());,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,673,        Iterator iterator = ticks.iterator();,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,674,        while (iterator.hasNext()) {,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,675,            ValueTick tick = (ValueTick) iterator.next();,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,676,            if (isTickLabelsVisible()) {,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,677,                g2.setPaint(getTickLabelPaint());,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,678,"                float[] anchorPoint = calculateAnchorPoint(tick, cursor, ",3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,680,"                TextUtilities.drawRotatedString(tick.getText(), g2, ",3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,685,            if (isTickMarksVisible()) {,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,686,"                float xx = (float) valueToJava2D(tick.getValue(), dataArea, ",3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,688,                Line2D mark = null;,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,689,                g2.setStroke(getTickMarkStroke());,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,690,                g2.setPaint(getTickMarkPaint());,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,691,                if (edge == RectangleEdge.LEFT) {,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,703,                g2.draw(mark);,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,705,        },3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,709,        double used = 0.0;,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,710,        if (isTickLabelsVisible()) {,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,711,            if (edge == RectangleEdge.LEFT) {,3.55882,0,-1,0
org/jfree/chart/axis/ValueAxis,26,733,        return state;,3.55882,0,-1,0
org/jfree/chart/axis/ValueTick,26,80,        return this.value;,3.55882,0,-1,0
org/jfree/chart/axis/Tick,26,116,        return this.textAnchor;,3.55882,0,-1,0
org/jfree/chart/axis/Tick,26,126,        return this.rotationAnchor;,3.55882,0,-1,0
org/jfree/chart/axis/Tick,26,135,        return this.angle;,3.55882,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,75,    public DefaultCategoryDataset() {,3.55556,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,76,        this.data = new DefaultKeyedValues2D();,3.55556,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,77,    },3.55556,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,87,        return this.data.getRowCount();,3.55556,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,96,        this(false);,3.55556,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,97,    },3.55556,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,104,    public DefaultKeyedValues2D(boolean sortRowKeys) {,3.55556,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,105,        this.rowKeys = new java.util.ArrayList();,3.55556,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,106,        this.columnKeys = new java.util.ArrayList();,3.55556,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,107,        this.rows = new java.util.ArrayList();,3.55556,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,108,        this.sortRowKeys = sortRowKeys;,3.55556,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,109,    },3.55556,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,119,        return this.rowKeys.size();,3.55556,0,-1,0
org/jfree/chart/axis/ValueAxis,26,974,        return this.autoRangeMinimumSize;,3.50725,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1058,        return this.lowerMargin;,3.50725,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1091,        return this.upperMargin;,3.50725,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1121,        return this.fixedAutoRange;,3.50725,0,-1,0
org/jfree/chart/axis/Axis,26,899,        this.plot = plot;,3.48201,0,-1,0
org/jfree/chart/axis/Axis,26,900,        configure();,3.48201,0,-1,0
org/jfree/chart/axis/Axis,26,901,    },3.48201,0,-1,0
org/jfree/chart/axis/Axis,26,1000,"        this.listenerList.add(AxisChangeListener.class, listener);",3.48201,0,-1,0
org/jfree/chart/axis/Axis,26,1001,    },3.48201,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,75,        this(DEFAULT_LABEL_FORMAT);,3.31507,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,76,    },3.31507,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,83,    public StandardCategorySeriesLabelGenerator(String format) {,3.31507,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,84,        if (format == null) {,3.31507,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,87,        this.formatPattern = format;,3.31507,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,88,    },3.31507,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,208,    protected AbstractCategoryItemRenderer() {,3.31507,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,209,        this.itemLabelGeneratorList = new ObjectList();,3.31507,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,210,        this.toolTipGeneratorList = new ObjectList();,3.31507,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,211,        this.urlGeneratorList = new ObjectList();,3.31507,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,212,        this.legendItemLabelGenerator,3.31507,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,214,    },3.31507,0,-1,0
org/jfree/data/Range,26,101,        return this.lower;,3.27027,0,-1,0
org/jfree/data/Range,26,110,        return this.upper;,3.27027,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,71,        this(GradientPaintTransformType.VERTICAL);,3.26667,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,72,    },3.26667,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,79,    public StandardGradientPaintTransformer(GradientPaintTransformType type) {,3.26667,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,80,        if (type == null) {,3.26667,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,83,        this.type = type;,3.26667,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,84,    },3.26667,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,84,    private GradientPaintTransformType(String name) {,3.26667,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,85,        this.name = name;,3.26667,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,86,    },3.26667,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,58,    public static final GradientPaintTransformType VERTICAL ,3.26667,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,62,    public static final GradientPaintTransformType HORIZONTAL ,3.26667,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,67,    public static final GradientPaintTransformType CENTER_VERTICAL ,3.26667,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,72,    public static final GradientPaintTransformType CENTER_HORIZONTAL ,3.26667,0,-1,0
org/jfree/data/general/AbstractDataset,26,128,"        this.listenerList.add(DatasetChangeListener.class, listener);",3.24265,0,-1,0
org/jfree/data/general/AbstractDataset,26,129,    },3.24265,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,81,    private DatasetRenderingOrder(String name) {,3.22667,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,82,        this.name = name;,3.22667,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,83,    },3.22667,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,63,    public static final DatasetRenderingOrder FORWARD,3.22667,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,70,    public static final DatasetRenderingOrder REVERSE,3.22667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,928,        return this.autoRange;,3.18421,0,-1,0
org/jfree/chart/event/ChartChangeEvent,26,133,        this.type = type;,3.1634,0,-1,0
org/jfree/chart/event/ChartChangeEvent,26,134,    },3.1634,0,-1,0
org/jfree/chart/plot/Plot,26,436,        return this.parent;,3.1634,0,-1,0
org/jfree/chart/axis/NumberAxis,26,447,"                lower = Math.min(lower, 0.0);",3.14961,0,-1,0
org/jfree/chart/axis/NumberAxis,26,448,"                upper = Math.max(upper, 0.0);",3.14961,0,-1,0
org/jfree/chart/axis/AxisLocation,26,86,    private AxisLocation(String name) {,3.14286,0,-1,0
org/jfree/chart/axis/AxisLocation,26,87,        this.name = name;,3.14286,0,-1,0
org/jfree/chart/axis/AxisLocation,26,88,    },3.14286,0,-1,0
org/jfree/chart/axis/AxisLocation,26,63,    public static final AxisLocation TOP_OR_LEFT = new AxisLocation(,3.14286,0,-1,0
org/jfree/chart/axis/AxisLocation,26,67,    public static final AxisLocation TOP_OR_RIGHT = new AxisLocation(,3.14286,0,-1,0
org/jfree/chart/axis/AxisLocation,26,71,    public static final AxisLocation BOTTOM_OR_LEFT = new AxisLocation(,3.14286,0,-1,0
org/jfree/chart/axis/AxisLocation,26,75,    public static final AxisLocation BOTTOM_OR_RIGHT = new AxisLocation(,3.14286,0,-1,0
org/jfree/chart/util/ObjectList,26,87,        return super.get(index);         ,3.14286,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,112,"        return this.data.getValue(row, column);",3.12963,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,144,        Number result = null;,3.12963,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,145,        DefaultKeyedValues rowData = (DefaultKeyedValues) this.rows.get(row);,3.12963,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,146,        if (rowData != null) {,3.12963,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,147,            Comparable columnKey = (Comparable) this.columnKeys.get(column);,3.12963,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,150,            int index = rowData.getIndex(columnKey);,3.12963,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,151,            if (index >= 0) {,3.12963,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,152,                result = rowData.getValue(index);,3.12963,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,155,        return result;,3.12963,0,-1,0
org/jfree/chart/util/ObjectList,26,97,"        super.set(index, object);        ",3.12258,0,-1,0
org/jfree/chart/util/ObjectList,26,98,    }    ,3.12258,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,73,    private PlotOrientation(String name) {,3.12258,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,74,        this.name = name;,3.12258,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,75,    },3.12258,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,58,    public static final PlotOrientation HORIZONTAL,3.12258,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,62,    public static final PlotOrientation VERTICAL,3.12258,0,-1,0
org/jfree/chart/axis/NumberAxis,26,424,"            return;  // no plot, no data",3.07692,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,83,        super(size);,3.025,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,84,        if (formatter == null) {,3.025,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,87,        this.formatter = formatter;,3.025,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,88,    },3.025,0,-1,0
org/jfree/chart/axis/TickUnit,26,119,            else if (this.size < other.getSize()) {,3.025,0,-1,0
org/jfree/chart/axis/TickUnit,26,120,                return -1;,3.025,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,571,"        setBaseURLGenerator(generator, true);",3.025,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,572,    },3.025,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,586,        this.baseURLGenerator = generator;,3.025,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,587,        if (notify) {,3.025,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,588,            notifyListeners(new RendererChangeEvent(this));,3.025,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,590,    },3.025,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,91,        super();,3.025,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,79,"    private String prefix = ""index.html"";",3.025,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,82,"    private String seriesParameterName = ""series"";",3.025,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,85,"    private String categoryParameterName = ""category"";",3.025,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,92,    },3.025,0,-1,0
org/jfree/data/general/AbstractDataset,26,159,"        notifyListeners(new DatasetChangeEvent(this, this));",2.93496,0,-1,0
org/jfree/data/general/AbstractDataset,26,160,    },2.93496,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,109,        Object result = null;,2.93333,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,110,        if (index >= 0 && index < this.size) {,2.93333,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,111,            result = this.objects[index];,2.93333,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,113,        return result;,2.93333,0,-1,0
org/jfree/chart/axis/NumberAxis,26,239,        return this.autoRangeIncludesZero;,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,274,        return this.autoRangeStickyZero;,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,412,        if (isAutoRange()) {,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,413,            autoAdjustRange();,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,415,    },2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,427,        if (plot instanceof ValueAxisPlot) {,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,428,            ValueAxisPlot vap = (ValueAxisPlot) plot;,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,430,            Range r = vap.getDataRange(this);,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,431,            if (r == null) {,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,435,            double upper = r.getUpperBound();,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,436,            double lower = r.getLowerBound();,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,437,            if (this.rangeType == RangeType.POSITIVE) {,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,441,            else if (this.rangeType == RangeType.NEGATIVE) {,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,446,            if (getAutoRangeIncludesZero()) {,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,450,            double range = upper - lower;,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,453,            double fixedAutoRange = getFixedAutoRange();,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,454,            if (fixedAutoRange > 0.0) {,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,459,                double minRange = getAutoRangeMinimumSize();,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,460,                if (range < minRange) {,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,483,                if (getAutoRangeStickyZero()) {,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,484,                    if (upper <= 0.0) {,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,488,                        upper = upper + getUpperMargin() * range;,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,490,                    if (lower >= 0.0) {,2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,503,"            setRange(new Range(lower, upper), false, false);",2.91971,0,-1,0
org/jfree/chart/axis/NumberAxis,26,506,    },2.91971,0,-1,0
org/jfree/chart/event/AxisChangeEvent,26,63,        super(axis);,2.91566,0,-1,0
org/jfree/chart/event/AxisChangeEvent,26,64,        this.axis = axis;,2.91566,0,-1,0
org/jfree/chart/event/AxisChangeEvent,26,65,    },2.91566,0,-1,0
org/jfree/chart/axis/Axis,26,1036,        Object[] listeners = this.listenerList.getListenerList();,2.91566,0,-1,0
org/jfree/chart/axis/Axis,26,1037,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,2.91566,0,-1,0
org/jfree/chart/axis/Axis,26,1043,    },2.91566,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,83,    private RectangleAnchor(final String name) {,2.91566,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,84,        this.name = name;,2.91566,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,85,    },2.91566,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,40,    public static final RectangleAnchor CENTER ,2.91566,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,44,    public static final RectangleAnchor TOP ,2.91566,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,48,    public static final RectangleAnchor TOP_LEFT ,2.91566,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,52,    public static final RectangleAnchor TOP_RIGHT ,2.91566,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,56,    public static final RectangleAnchor BOTTOM ,2.91566,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,60,    public static final RectangleAnchor BOTTOM_LEFT ,2.91566,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,64,    public static final RectangleAnchor BOTTOM_RIGHT ,2.91566,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,68,    public static final RectangleAnchor LEFT ,2.91566,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,72,    public static final RectangleAnchor RIGHT ,2.91566,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,123,        if (index < 0) {,2.91566,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,126,        if (index >= this.objects.length) {,2.91566,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,131,        this.objects[index] = object;,2.91566,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,132,"        this.size = Math.max(this.size, index + 1);",2.91566,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,133,    },2.91566,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1235,        if (range == null) {,2.8982,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1238,        if (turnOffAutoRange) {,2.8982,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1241,        this.range = range;,2.8982,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1242,        if (notify) {,2.8982,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1245,    },2.8982,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,681,            result = available * (1 - getLowerMargin() - getUpperMargin());,2.88235,0,-1,0
org/jfree/data/general/AbstractDataset,26,170,        Object[] listeners = this.listenerList.getListenerList();,2.86508,0,-1,0
org/jfree/data/general/AbstractDataset,26,171,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,2.86508,0,-1,0
org/jfree/data/general/AbstractDataset,26,179,    },2.86508,0,-1,0
org/jfree/data/general/AbstractDataset,26,96,    protected AbstractDataset() {,2.82692,0,-1,0
org/jfree/data/general/AbstractDataset,26,97,        this.group = new DatasetGroup();,2.82692,0,-1,0
org/jfree/data/general/AbstractDataset,26,98,        this.listenerList = new EventListenerList();,2.82692,0,-1,0
org/jfree/data/general/AbstractDataset,26,99,    },2.82692,0,-1,0
org/jfree/data/general/DatasetGroup,26,65,        super();,2.82692,0,-1,0
org/jfree/data/general/DatasetGroup,26,66,"        this.id = ""NOID"";",2.82692,0,-1,0
org/jfree/data/general/DatasetGroup,26,67,    },2.82692,0,-1,0
org/jfree/chart/axis/Axis,26,886,        return this.plot;,2.79769,0,-1,0
org/jfree/chart/axis/NumberAxis,26,422,        Plot plot = getPlot();,2.7972,0,-1,0
org/jfree/chart/axis/NumberAxis,26,423,        if (plot == null) {,2.7972,0,-1,0
org/jfree/chart/event/PlotChangeEvent,26,66,        super(plot);,2.68889,0,-1,0
org/jfree/chart/event/PlotChangeEvent,26,67,        this.plot = plot;,2.68889,0,-1,0
org/jfree/chart/event/PlotChangeEvent,26,68,    },2.68889,0,-1,0
org/jfree/chart/plot/Plot,26,891,        Object[] listeners = this.listenerList.getListenerList();,2.68889,0,-1,0
org/jfree/chart/plot/Plot,26,892,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,2.68889,0,-1,0
org/jfree/chart/plot/Plot,26,897,    },2.68889,0,-1,0
org/jfree/chart/labels/StandardCategoryToolTipGenerator,26,72,"        super(DEFAULT_TOOL_TIP_FORMAT_STRING, NumberFormat.getInstance());",2.68889,0,-1,0
org/jfree/chart/labels/StandardCategoryToolTipGenerator,26,73,    },2.68889,0,-1,0
org/jfree/data/general/DatasetChangeEvent,26,73,        super(source);,2.63043,0,-1,0
org/jfree/data/general/DatasetChangeEvent,26,74,        this.dataset = dataset;,2.63043,0,-1,0
org/jfree/data/general/DatasetChangeEvent,26,75,    },2.63043,0,-1,0
org/jfree/chart/axis/TickUnit,26,77,    public TickUnit(double size) {,2.63043,0,-1,0
org/jfree/chart/axis/TickUnit,26,78,        this.size = size;,2.63043,0,-1,0
org/jfree/chart/axis/TickUnit,26,79,    },2.63043,0,-1,0
org/jfree/chart/axis/TickUnit,26,87,        return this.size;,2.63043,0,-1,0
org/jfree/chart/axis/TickUnit,26,114,        if (object instanceof TickUnit) {,2.63043,0,-1,0
org/jfree/chart/axis/TickUnit,26,115,            TickUnit other = (TickUnit) object;,2.63043,0,-1,0
org/jfree/chart/axis/TickUnit,26,116,            if (this.size > other.getSize()) {,2.63043,0,-1,0
org/jfree/chart/axis/TickUnit,26,117,                return 1;,2.63043,0,-1,0
org/jfree/chart/axis/TickUnits,26,81,    public TickUnits() {,2.63043,0,-1,0
org/jfree/chart/axis/TickUnits,26,82,        this.tickUnits = new ArrayList();,2.63043,0,-1,0
org/jfree/chart/axis/TickUnits,26,83,    },2.63043,0,-1,0
org/jfree/chart/axis/TickUnits,26,94,        if (unit == null) {,2.63043,0,-1,0
org/jfree/chart/axis/TickUnits,26,97,        this.tickUnits.add(unit);,2.63043,0,-1,0
org/jfree/chart/axis/TickUnits,26,98,        Collections.sort(this.tickUnits);,2.63043,0,-1,0
org/jfree/chart/axis/TickUnits,26,100,    },2.63043,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,107,"        this(labelFormat, formatter, NumberFormat.getPercentInstance());",2.63043,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,108,    },2.63043,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,122,"            NumberFormat formatter, NumberFormat percentFormatter) {",2.63043,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,123,        if (labelFormat == null) {,2.63043,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,126,        if (formatter == null) {,2.63043,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,129,        if (percentFormatter == null) {,2.63043,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,133,        this.labelFormat = labelFormat;,2.63043,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,134,        this.numberFormat = formatter;,2.63043,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,135,        this.percentFormat = percentFormatter;,2.63043,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,136,        this.dateFormat = null;,2.63043,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,137,"        this.nullValueString = ""-"";",2.63043,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,138,    },2.63043,0,-1,0
org/jfree/chart/plot/Plot,26,287,    protected Plot() {,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,267,    private int backgroundImageAlignment = Align.FIT;,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,270,    private float backgroundImageAlpha = 0.5f;,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,289,        this.parent = null;,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,290,        this.insets = DEFAULT_INSETS;,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,291,        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,292,        this.backgroundAlpha = DEFAULT_BACKGROUND_ALPHA;,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,293,        this.backgroundImage = null;,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,294,        this.outlineVisible = true;,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,295,        this.outlineStroke = DEFAULT_OUTLINE_STROKE;,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,296,        this.outlinePaint = DEFAULT_OUTLINE_PAINT;,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,297,        this.foregroundAlpha = DEFAULT_FOREGROUND_ALPHA;,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,299,        this.noDataMessage = null;,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,300,"        this.noDataMessageFont = new Font(""SansSerif"", Font.PLAIN, 12);",2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,301,        this.noDataMessagePaint = Color.black;,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,303,        this.drawingSupplier = new DefaultDrawingSupplier();,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,305,        this.listenerList = new EventListenerList();,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,307,    },2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,194,    public static final Number ZERO = new Integer(0);,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,197,    public static final RectangleInsets DEFAULT_INSETS ,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,201,    public static final Stroke DEFAULT_OUTLINE_STROKE = new BasicStroke(0.5f);,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,204,    public static final Paint DEFAULT_OUTLINE_PAINT = Color.gray;,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,213,    public static final Paint DEFAULT_BACKGROUND_PAINT = Color.white;,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,222,    public static final Shape DEFAULT_LEGEND_ITEM_BOX ,2.58824,0,-1,0
org/jfree/chart/plot/Plot,26,226,    public static final Shape DEFAULT_LEGEND_ITEM_CIRCLE ,2.58824,0,-1,0
org/jfree/chart/ChartColor,26,61,"    public static final Color VERY_DARK_RED = new Color(0x80, 0x00, 0x00);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,64,"    public static final Color DARK_RED = new Color(0xc0, 0x00, 0x00);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,67,"    public static final Color LIGHT_RED = new Color(0xFF, 0x40, 0x40);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,70,"    public static final Color VERY_LIGHT_RED = new Color(0xFF, 0x80, 0x80);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,73,"    public static final Color VERY_DARK_YELLOW = new Color(0x80, 0x80, 0x00);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,76,"    public static final Color DARK_YELLOW = new Color(0xC0, 0xC0, 0x00);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,79,"    public static final Color LIGHT_YELLOW = new Color(0xFF, 0xFF, 0x40);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,82,"    public static final Color VERY_LIGHT_YELLOW = new Color(0xFF, 0xFF, 0x80);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,85,"    public static final Color VERY_DARK_GREEN = new Color(0x00, 0x80, 0x00);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,88,"    public static final Color DARK_GREEN = new Color(0x00, 0xC0, 0x00);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,91,"    public static final Color LIGHT_GREEN = new Color(0x40, 0xFF, 0x40);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,94,"    public static final Color VERY_LIGHT_GREEN = new Color(0x80, 0xFF, 0x80);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,97,"    public static final Color VERY_DARK_CYAN = new Color(0x00, 0x80, 0x80);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,100,"    public static final Color DARK_CYAN = new Color(0x00, 0xC0, 0xC0);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,103,"    public static final Color LIGHT_CYAN = new Color(0x40, 0xFF, 0xFF);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,106,"    public static final Color VERY_LIGHT_CYAN = new Color(0x80, 0xFF, 0xFF);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,109,"    public static final Color VERY_DARK_BLUE = new Color(0x00, 0x00, 0x80);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,112,"    public static final Color DARK_BLUE = new Color(0x00, 0x00, 0xC0);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,115,"    public static final Color LIGHT_BLUE = new Color(0x40, 0x40, 0xFF);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,118,"    public static final Color VERY_LIGHT_BLUE = new Color(0x80, 0x80, 0xFF);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,121,"    public static final Color VERY_DARK_MAGENTA = new Color(0x80, 0x00, 0x80);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,124,"    public static final Color DARK_MAGENTA = new Color(0xC0, 0x00, 0xC0);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,127,"    public static final Color LIGHT_MAGENTA = new Color(0xFF, 0x40, 0xFF);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,130,"    public static final Color VERY_LIGHT_MAGENTA = new Color(0xFF, 0x80, 0xFF);",2.58824,0,-1,0
org/jfree/chart/ChartColor,26,153,        return new Paint[] {,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,152,"        this(DEFAULT_PAINT_SEQUENCE, DEFAULT_FILL_PAINT_SEQUENCE,",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,158,    },2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,199,            Shape[] shapeSequence) {,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,201,        this.paintSequence = paintSequence;,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,202,        this.fillPaintSequence = fillPaintSequence;,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,203,        this.outlinePaintSequence = outlinePaintSequence;,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,204,        this.strokeSequence = strokeSequence;,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,205,        this.outlineStrokeSequence = outlineStrokeSequence;,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,206,        this.shapeSequence = shapeSequence;,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,207,    },2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,85,    public static final Paint[] DEFAULT_PAINT_SEQUENCE ,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,89,    public static final Paint[] DEFAULT_OUTLINE_PAINT_SEQUENCE = new Paint[] {,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,93,    public static final Paint[] DEFAULT_FILL_PAINT_SEQUENCE = new Paint[] {,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,97,    public static final Stroke[] DEFAULT_STROKE_SEQUENCE = new Stroke[] {,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,102,    public static final Stroke[] DEFAULT_OUTLINE_STROKE_SEQUENCE ,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,107,    public static final Shape[] DEFAULT_SHAPE_SEQUENCE ,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,291,        Shape[] result = new Shape[10];,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,293,        double size = 6.0;,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,294,        double delta = size / 2.0;,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,295,        int[] xpoints = null;,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,296,        int[] ypoints = null;,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,299,"        result[0] = new Rectangle2D.Double(-delta, -delta, size, size);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,301,"        result[1] = new Ellipse2D.Double(-delta, -delta, size, size);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,304,"        xpoints = intArray(0.0, delta, -delta);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,305,"        ypoints = intArray(-delta, delta, delta);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,306,"        result[2] = new Polygon(xpoints, ypoints, 3);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,309,"        xpoints = intArray(0.0, delta, 0.0, -delta);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,310,"        ypoints = intArray(-delta, 0.0, delta, 0.0);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,311,"        result[3] = new Polygon(xpoints, ypoints, 4);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,314,"        result[4] = new Rectangle2D.Double(-delta, -delta / 2, size, size / 2);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,317,"        xpoints = intArray(-delta, +delta, 0.0);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,318,"        ypoints = intArray(-delta, -delta, delta);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,319,"        result[5] = new Polygon(xpoints, ypoints, 3);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,322,"        result[6] = new Ellipse2D.Double(-delta, -delta / 2, size, size / 2);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,325,"        xpoints = intArray(-delta, delta, -delta);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,326,"        ypoints = intArray(-delta, 0.0, delta);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,327,"        result[7] = new Polygon(xpoints, ypoints, 3);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,330,"        result[8] = new Rectangle2D.Double(-delta / 2, -delta, size / 2, size);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,333,"        xpoints = intArray(-delta, delta, delta);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,334,"        ypoints = intArray(0.0, -delta, +delta);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,335,"        result[9] = new Polygon(xpoints, ypoints, 3);",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,337,        return result;,2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,519,"        return new int[] {(int) a, (int) b, (int) c};",2.58824,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,534,"        return new int[] {(int) a, (int) b, (int) c, (int) d};",2.58824,0,-1,0
org/jfree/chart/axis/ValueAxis,26,260,        super(label);,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,262,        this.positiveArrowVisible = false;,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,263,        this.negativeArrowVisible = false;,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,265,        this.range = DEFAULT_RANGE;,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,266,        this.autoRange = DEFAULT_AUTO_RANGE;,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,267,        this.defaultAutoRange = DEFAULT_RANGE;,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,269,        this.inverted = DEFAULT_INVERTED;,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,270,        this.autoRangeMinimumSize = DEFAULT_AUTO_RANGE_MINIMUM_SIZE;,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,272,        this.lowerMargin = DEFAULT_LOWER_MARGIN;,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,273,        this.upperMargin = DEFAULT_UPPER_MARGIN;,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,275,        this.fixedAutoRange = 0.0;,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,277,        this.autoTickUnitSelection = DEFAULT_AUTO_TICK_UNIT_SELECTION;,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,278,        this.standardTickUnits = standardTickUnits;,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,280,        Polygon p1 = new Polygon();,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,281,"        p1.addPoint(0, 0);",2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,282,"        p1.addPoint(-2, 2);",2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,283,"        p1.addPoint(2, 2);",2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,285,        this.upArrow = p1;,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,287,        Polygon p2 = new Polygon();,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,288,"        p2.addPoint(0, 0);",2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,289,"        p2.addPoint(-2, -2);",2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,290,"        p2.addPoint(2, -2);",2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,292,        this.downArrow = p2;,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,294,        Polygon p3 = new Polygon();,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,295,"        p3.addPoint(0, 0);",2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,296,"        p3.addPoint(-2, -2);",2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,297,"        p3.addPoint(-2, 2);",2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,299,        this.rightArrow = p3;,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,301,        Polygon p4 = new Polygon();,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,302,"        p4.addPoint(0, 0);",2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,303,"        p4.addPoint(2, -2);",2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,304,"        p4.addPoint(2, 2);",2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,306,        this.leftArrow = p4;,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,308,        this.verticalTickLabels = false;,2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,310,    },2.57447,0,-1,0
org/jfree/chart/axis/ValueAxis,26,145,"    public static final Range DEFAULT_RANGE = new Range(0.0, 1.0);",2.57447,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,218,"        this.data.addValue(value, rowKey, columnKey);",2.52239,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,219,        fireDatasetChanged();,2.52239,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,220,    },2.52239,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,304,"        setValue(value, rowKey, columnKey);",2.52239,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,305,    },2.52239,0,-1,0
org/jfree/data/Range,26,85,"    public Range(double lower, double upper) {",2.50777,0,-1,0
org/jfree/data/Range,26,86,        if (lower > upper) {,2.50777,0,-1,0
org/jfree/data/Range,26,91,        this.lower = lower;,2.50777,0,-1,0
org/jfree/data/Range,26,92,        this.upper = upper;,2.50777,0,-1,0
org/jfree/data/Range,26,93,    },2.50777,0,-1,0
org/jfree/data/RangeType,26,76,    private RangeType(String name) {,2.46914,0,-1,0
org/jfree/data/RangeType,26,77,        this.name = name;,2.46914,0,-1,0
org/jfree/data/RangeType,26,78,    },2.46914,0,-1,0
org/jfree/data/RangeType,26,58,"    public static final RangeType FULL = new RangeType(""RangeType.FULL"");",2.46914,0,-1,0
org/jfree/data/RangeType,26,61,    public static final RangeType POSITIVE ,2.46914,0,-1,0
org/jfree/data/RangeType,26,65,    public static final RangeType NEGATIVE ,2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,197,"        super(label, NumberAxis.createStandardTickUnits());",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,198,        this.rangeType = RangeType.FULL;,2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,199,        this.autoRangeIncludesZero = DEFAULT_AUTO_RANGE_INCLUDES_ZERO;,2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,200,        this.autoRangeStickyZero = DEFAULT_AUTO_RANGE_STICKY_ZERO;,2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,201,        this.tickUnit = DEFAULT_TICK_UNIT;,2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,202,        this.numberFormatOverride = null;,2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,203,        this.markerBand = null;,2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,204,    },2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,149,    public static final NumberTickUnit DEFAULT_TICK_UNIT = new NumberTickUnit(,2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,701,        TickUnits units = new TickUnits();,2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,702,"        DecimalFormat df0 = new DecimalFormat(""0.00000000"");",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,703,"        DecimalFormat df1 = new DecimalFormat(""0.0000000"");",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,704,"        DecimalFormat df2 = new DecimalFormat(""0.000000"");",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,705,"        DecimalFormat df3 = new DecimalFormat(""0.00000"");",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,706,"        DecimalFormat df4 = new DecimalFormat(""0.0000"");",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,707,"        DecimalFormat df5 = new DecimalFormat(""0.000"");",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,708,"        DecimalFormat df6 = new DecimalFormat(""0.00"");",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,709,"        DecimalFormat df7 = new DecimalFormat(""0.0"");",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,710,"        DecimalFormat df8 = new DecimalFormat(""#,##0"");",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,711,"        DecimalFormat df9 = new DecimalFormat(""#,###,##0"");",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,712,"        DecimalFormat df10 = new DecimalFormat(""#,###,###,##0"");",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,716,"        units.add(new NumberTickUnit(0.0000001, df1));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,717,"        units.add(new NumberTickUnit(0.000001, df2));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,718,"        units.add(new NumberTickUnit(0.00001, df3));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,719,"        units.add(new NumberTickUnit(0.0001, df4));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,720,"        units.add(new NumberTickUnit(0.001, df5));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,721,"        units.add(new NumberTickUnit(0.01, df6));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,722,"        units.add(new NumberTickUnit(0.1, df7));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,723,"        units.add(new NumberTickUnit(1, df8));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,724,"        units.add(new NumberTickUnit(10, df8));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,725,"        units.add(new NumberTickUnit(100, df8));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,726,"        units.add(new NumberTickUnit(1000, df8));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,727,"        units.add(new NumberTickUnit(10000, df8));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,728,"        units.add(new NumberTickUnit(100000, df8));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,729,"        units.add(new NumberTickUnit(1000000, df9));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,730,"        units.add(new NumberTickUnit(10000000, df9));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,731,"        units.add(new NumberTickUnit(100000000, df9));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,732,"        units.add(new NumberTickUnit(1000000000, df10));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,733,"        units.add(new NumberTickUnit(10000000000.0, df10));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,734,"        units.add(new NumberTickUnit(100000000000.0, df10));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,736,"        units.add(new NumberTickUnit(0.00000025, df0));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,737,"        units.add(new NumberTickUnit(0.0000025, df1));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,738,"        units.add(new NumberTickUnit(0.000025, df2));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,739,"        units.add(new NumberTickUnit(0.00025, df3));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,740,"        units.add(new NumberTickUnit(0.0025, df4));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,741,"        units.add(new NumberTickUnit(0.025, df5));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,742,"        units.add(new NumberTickUnit(0.25, df6));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,743,"        units.add(new NumberTickUnit(2.5, df7));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,744,"        units.add(new NumberTickUnit(25, df8));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,745,"        units.add(new NumberTickUnit(250, df8));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,746,"        units.add(new NumberTickUnit(2500, df8));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,747,"        units.add(new NumberTickUnit(25000, df8));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,748,"        units.add(new NumberTickUnit(250000, df8));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,749,"        units.add(new NumberTickUnit(2500000, df9));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,750,"        units.add(new NumberTickUnit(25000000, df9));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,751,"        units.add(new NumberTickUnit(250000000, df9));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,752,"        units.add(new NumberTickUnit(2500000000.0, df10));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,753,"        units.add(new NumberTickUnit(25000000000.0, df10));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,754,"        units.add(new NumberTickUnit(250000000000.0, df10));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,756,"        units.add(new NumberTickUnit(0.0000005, df1));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,757,"        units.add(new NumberTickUnit(0.000005, df2));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,758,"        units.add(new NumberTickUnit(0.00005, df3));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,759,"        units.add(new NumberTickUnit(0.0005, df4));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,760,"        units.add(new NumberTickUnit(0.005, df5));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,761,"        units.add(new NumberTickUnit(0.05, df6));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,762,"        units.add(new NumberTickUnit(0.5, df7));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,763,"        units.add(new NumberTickUnit(5L, df8));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,764,"        units.add(new NumberTickUnit(50L, df8));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,765,"        units.add(new NumberTickUnit(500L, df8));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,766,"        units.add(new NumberTickUnit(5000L, df8));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,767,"        units.add(new NumberTickUnit(50000L, df8));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,768,"        units.add(new NumberTickUnit(500000L, df8));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,769,"        units.add(new NumberTickUnit(5000000L, df9));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,770,"        units.add(new NumberTickUnit(50000000L, df9));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,771,"        units.add(new NumberTickUnit(500000000L, df9));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,772,"        units.add(new NumberTickUnit(5000000000L, df10));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,773,"        units.add(new NumberTickUnit(50000000000L, df10));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,774,"        units.add(new NumberTickUnit(500000000000L, df10));",2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,776,        return units;,2.46914,0,-1,0
org/jfree/chart/axis/NumberAxis,26,532,            min = area.getX();,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,533,            max = area.getMaxX();,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1000,        RectangleInsets tickLabelInsets = getTickLabelInsets();,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1001,        double result = tickLabelInsets.getLeft() + tickLabelInsets.getRight();,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1003,        if (isVerticalTickLabels()) {,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1012,            FontMetrics fm = g2.getFontMetrics(getTickLabelFont());,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1013,            Range range = getRange();,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1014,            double lower = range.getLowerBound();,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1015,            double upper = range.getUpperBound();,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1016,"            String lowerStr = """";",2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1017,"            String upperStr = """";",2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1018,            NumberFormat formatter = getNumberFormatOverride();,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1019,            if (formatter != null) {,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1024,                lowerStr = unit.valueToString(lower);,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1025,                upperStr = unit.valueToString(upper);                ,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1027,            double w1 = fm.stringWidth(lowerStr);,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1028,            double w2 = fm.stringWidth(upperStr);,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1029,"            result += Math.max(w1, w2);",2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1032,        return result;,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1050,"            selectHorizontalAutoTickUnit(g2, dataArea, edge);",2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1071,        double tickLabelWidth = estimateMaximumTickLabelWidth(,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1076,        TickUnitSource tickUnits = getStandardTickUnits();,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1077,        TickUnit unit1 = tickUnits.getCeilingTickUnit(getTickUnit());,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1078,"        double unit1Width = lengthToJava2D(unit1.getSize(), dataArea, edge);",2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1081,        double guess = (tickLabelWidth / unit1Width) * unit1.getSize();,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1083,        NumberTickUnit unit2 ,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1085,"        double unit2Width = lengthToJava2D(unit2.getSize(), dataArea, edge);",2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1087,"        tickLabelWidth = estimateMaximumTickLabelWidth(g2, unit2);",2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1088,        if (tickLabelWidth > unit2Width) {,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1092,"        setTickUnit(unit2, false, false);",2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1094,    },2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1151,"            result = refreshTicksHorizontal(g2, dataArea, edge);",2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1174,        List result = new java.util.ArrayList();,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1176,        Font tickLabelFont = getTickLabelFont();,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1177,        g2.setFont(tickLabelFont);,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1179,        if (isAutoTickUnitSelection()) {,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1180,"            selectAutoTickUnit(g2, dataArea, edge);",2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1183,        double size = getTickUnit().getSize();,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1184,        int count = calculateVisibleTickCount();,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1185,        double lowestTickValue = calculateLowestVisibleTickValue();,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1187,        if (count <= ValueAxis.MAXIMUM_TICK_COUNT) {,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1188,            for (int i = 0; i < count; i++) {,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1189,                double currentTickValue = lowestTickValue + (i * size);,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1191,                NumberFormat formatter = getNumberFormatOverride();,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1192,                if (formatter != null) {,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1196,                    tickLabel = getTickUnit().valueToString(currentTickValue);,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1198,                TextAnchor anchor = null;,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1199,                TextAnchor rotationAnchor = null;,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1200,                double angle = 0.0;,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1201,                if (isVerticalTickLabels()) {,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1212,                    if (edge == RectangleEdge.TOP) {,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1222,"                Tick tick = new NumberTick(new Double(currentTickValue), ",2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1224,                result.add(tick);,2.45455,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1227,        return result;,2.45455,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,183,        if (key == null) {,2.38028,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,186,        if (this.sortRowKeys) {,2.38028,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,190,            return this.rowKeys.indexOf(key);,2.38028,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,321,        int rowIndex = getRowIndex(rowKey);,2.38028,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,323,        if (rowIndex >= 0) {,2.38028,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,327,            row = new DefaultKeyedValues();,2.38028,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,328,            if (this.sortRowKeys) {,2.38028,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,334,                this.rowKeys.add(rowKey);,2.38028,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,335,                this.rows.add(row);,2.38028,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,338,"        row.setValue(columnKey, value);",2.38028,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,340,        int columnIndex = this.columnKeys.indexOf(columnKey);,2.38028,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,341,        if (columnIndex < 0) {,2.38028,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,342,            this.columnKeys.add(columnKey);,2.38028,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,344,    },2.38028,0,-1,0
org/jfree/chart/axis/Axis,26,273,    protected Axis(String label) {,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,275,        this.label = label;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,276,        this.visible = DEFAULT_AXIS_VISIBLE;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,277,        this.labelFont = DEFAULT_AXIS_LABEL_FONT;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,278,        this.labelPaint = DEFAULT_AXIS_LABEL_PAINT;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,279,        this.labelInsets = DEFAULT_AXIS_LABEL_INSETS;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,280,        this.labelAngle = 0.0;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,281,        this.labelToolTip = null;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,282,        this.labelURL = null;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,284,        this.axisLineVisible = true;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,285,        this.axisLinePaint = DEFAULT_AXIS_LINE_PAINT;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,286,        this.axisLineStroke = DEFAULT_AXIS_LINE_STROKE;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,288,        this.tickLabelsVisible = DEFAULT_TICK_LABELS_VISIBLE;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,289,        this.tickLabelFont = DEFAULT_TICK_LABEL_FONT;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,290,        this.tickLabelPaint = DEFAULT_TICK_LABEL_PAINT;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,291,        this.tickLabelInsets = DEFAULT_TICK_LABEL_INSETS;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,293,        this.tickMarksVisible = DEFAULT_TICK_MARKS_VISIBLE;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,294,        this.tickMarkStroke = DEFAULT_TICK_MARK_STROKE;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,295,        this.tickMarkPaint = DEFAULT_TICK_MARK_PAINT;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,296,        this.tickMarkInsideLength = DEFAULT_TICK_MARK_INSIDE_LENGTH;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,297,        this.tickMarkOutsideLength = DEFAULT_TICK_MARK_OUTSIDE_LENGTH;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,299,        this.plot = null;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,301,        this.listenerList = new EventListenerList();,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,303,    },2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,137,    public static final Font DEFAULT_AXIS_LABEL_FONT = new Font(,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,141,    public static final Paint DEFAULT_AXIS_LABEL_PAINT = Color.black;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,144,    public static final RectangleInsets DEFAULT_AXIS_LABEL_INSETS ,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,148,    public static final Paint DEFAULT_AXIS_LINE_PAINT = Color.gray;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,151,    public static final Stroke DEFAULT_AXIS_LINE_STROKE = new BasicStroke(1.0f);,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,157,"    public static final Font DEFAULT_TICK_LABEL_FONT = new Font(""SansSerif"", ",2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,161,    public static final Paint DEFAULT_TICK_LABEL_PAINT = Color.black;,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,164,    public static final RectangleInsets DEFAULT_TICK_LABEL_INSETS ,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,171,    public static final Stroke DEFAULT_TICK_MARK_STROKE = new BasicStroke(1);,2.37255,0,-1,0
org/jfree/chart/axis/Axis,26,174,    public static final Paint DEFAULT_TICK_MARK_PAINT = Color.gray;,2.37255,0,-1,0
org/jfree/data/DefaultKeyedValues,26,112,        Number result = null;,2.28378,0,-1,0
org/jfree/data/DefaultKeyedValues,26,113,        KeyedValue kval = (KeyedValue) this.data.get(item);,2.28378,0,-1,0
org/jfree/data/DefaultKeyedValues,26,114,        if (kval != null) {,2.28378,0,-1,0
org/jfree/data/DefaultKeyedValues,26,115,            result = kval.getValue();,2.28378,0,-1,0
org/jfree/data/DefaultKeyedValues,26,117,        return result;,2.28378,0,-1,0
org/jfree/data/DefaultKeyedValues,26,157,                return i;,2.28378,0,-1,0
org/jfree/data/DefaultKeyedValue,26,99,        return this.value;,2.28378,0,-1,0
org/jfree/data/general/DatasetUtilities,26,811,            for (int column = 0; column < columnCount; column++) {,2.17391,0,-1,0
org/jfree/data/general/DatasetUtilities,26,814,                if (interval) {,2.17391,0,-1,0
org/jfree/data/general/DatasetUtilities,26,824,                if (lvalue != null) {,2.17391,0,-1,0
org/jfree/data/general/DatasetUtilities,26,825,"                    minimum = Math.min(minimum, lvalue.doubleValue());",2.17391,0,-1,0
org/jfree/data/general/DatasetUtilities,26,827,                if (uvalue != null) {,2.17391,0,-1,0
org/jfree/data/general/DatasetUtilities,26,828,"                    maximum = Math.max(maximum, uvalue.doubleValue());",2.17391,0,-1,0
org/jfree/data/general/DatasetUtilities,26,836,"            return new Range(minimum, maximum);",2.17391,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,391,"    private static final float SQRT2 = (float) Math.pow(2.0, 0.5);",2.14881,0,-1,0
org/jfree/data/general/DatasetUtilities,26,378,        DefaultCategoryDataset result = new DefaultCategoryDataset();,2.07692,0,-1,0
org/jfree/data/general/DatasetUtilities,26,379,        for (int r = 0; r < data.length; r++) {,2.07692,0,-1,0
org/jfree/data/general/DatasetUtilities,26,380,            String rowKey = rowKeyPrefix + (r + 1);,2.07692,0,-1,0
org/jfree/data/general/DatasetUtilities,26,381,            for (int c = 0; c < data[r].length; c++) {,2.07692,0,-1,0
org/jfree/data/general/DatasetUtilities,26,382,                String columnKey = columnKeyPrefix + (c + 1);,2.07692,0,-1,0
org/jfree/data/general/DatasetUtilities,26,383,"                result.addValue(data[r][c], rowKey, columnKey);",2.07692,0,-1,0
org/jfree/data/general/DatasetUtilities,26,386,        return result;,2.07692,0,-1,0
org/jfree/chart/JFreeChart,26,404,            if (titleFont == null) {,2.06316,0,-1,0
org/jfree/chart/JFreeChart,26,407,"            this.title = new TextTitle(title, titleFont);",2.06316,0,-1,0
org/jfree/chart/JFreeChart,26,408,            this.title.addChangeListener(this);,2.06316,0,-1,0
org/jfree/chart/title/TextTitle,26,189,"        this(text, font, TextTitle.DEFAULT_TEXT_PAINT, Title.DEFAULT_POSITION,",2.02062,0,-1,0
org/jfree/chart/title/TextTitle,26,192,    },2.02062,0,-1,0
org/jfree/chart/title/TextTitle,26,213,"        super(position, horizontalAlignment, verticalAlignment, padding);",2.02062,0,-1,0
org/jfree/chart/title/TextTitle,26,162,    private boolean expandToFitSpace = false;,2.02062,0,-1,0
org/jfree/chart/title/TextTitle,26,215,        if (text == null) {,2.02062,0,-1,0
org/jfree/chart/title/TextTitle,26,218,        if (font == null) {,2.02062,0,-1,0
org/jfree/chart/title/TextTitle,26,221,        if (paint == null) {,2.02062,0,-1,0
org/jfree/chart/title/TextTitle,26,224,        this.text = text;,2.02062,0,-1,0
org/jfree/chart/title/TextTitle,26,225,        this.font = font;,2.02062,0,-1,0
org/jfree/chart/title/TextTitle,26,226,        this.paint = paint;,2.02062,0,-1,0
org/jfree/chart/title/TextTitle,26,230,        this.textAlignment = horizontalAlignment;,2.02062,0,-1,0
org/jfree/chart/title/TextTitle,26,231,        this.backgroundPaint = null;,2.02062,0,-1,0
org/jfree/chart/title/TextTitle,26,232,        this.content = null;,2.02062,0,-1,0
org/jfree/chart/title/TextTitle,26,233,        this.toolTipText = null;,2.02062,0,-1,0
org/jfree/chart/title/TextTitle,26,234,        this.urlText = null;,2.02062,0,-1,0
org/jfree/chart/title/TextTitle,26,236,    },2.02062,0,-1,0
org/jfree/chart/title/TextTitle,26,128,"    public static final Font DEFAULT_FONT = new Font(""SansSerif"", Font.BOLD, ",2.02062,0,-1,0
org/jfree/chart/title/TextTitle,26,132,    public static final Paint DEFAULT_TEXT_PAINT = Color.black;,2.02062,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,324,            row = (DefaultKeyedValues) this.rows.get(rowIndex);,2.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,89,    public DefaultKeyedValues() {,1.96512,0,-1,0
org/jfree/data/DefaultKeyedValues,26,90,        this.data = new java.util.ArrayList();,1.96512,0,-1,0
org/jfree/data/DefaultKeyedValues,26,91,    },1.96512,0,-1,0
org/jfree/data/DefaultKeyedValues,26,149,        if (key == null) {,1.96512,0,-1,0
org/jfree/data/DefaultKeyedValues,26,152,        int i = 0;,1.96512,0,-1,0
org/jfree/data/DefaultKeyedValues,26,153,        Iterator iterator = this.data.iterator();,1.96512,0,-1,0
org/jfree/data/DefaultKeyedValues,26,154,        while (iterator.hasNext()) {,1.96512,0,-1,0
org/jfree/data/DefaultKeyedValues,26,155,            KeyedValue kv = (KeyedValue) iterator.next();,1.96512,0,-1,0
org/jfree/data/DefaultKeyedValues,26,156,            if (kv.getKey().equals(key)) {,1.96512,0,-1,0
org/jfree/data/DefaultKeyedValues,26,161,        return -1;  // key not found,1.96512,0,-1,0
org/jfree/data/DefaultKeyedValues,26,239,        if (key == null) {,1.96512,0,-1,0
org/jfree/data/DefaultKeyedValues,26,242,        int keyIndex = getIndex(key);,1.96512,0,-1,0
org/jfree/data/DefaultKeyedValues,26,243,        if (keyIndex >= 0) {,1.96512,0,-1,0
org/jfree/data/DefaultKeyedValues,26,248,"            KeyedValue kv = new DefaultKeyedValue(key, value);",1.96512,0,-1,0
org/jfree/data/DefaultKeyedValues,26,249,            this.data.add(kv);,1.96512,0,-1,0
org/jfree/data/DefaultKeyedValues,26,251,    },1.96512,0,-1,0
org/jfree/data/DefaultKeyedValue,26,79,"    public DefaultKeyedValue(Comparable key, Number value) {",1.96512,0,-1,0
org/jfree/data/DefaultKeyedValue,26,80,        this.key = key;,1.96512,0,-1,0
org/jfree/data/DefaultKeyedValue,26,81,        this.value = value;,1.96512,0,-1,0
org/jfree/data/DefaultKeyedValue,26,82,    },1.96512,0,-1,0
org/jfree/data/DefaultKeyedValue,26,90,        return this.key;,1.96512,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,194,        super();,1.92045,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,195,        this.base = 0.0;,1.92045,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,196,        this.includeBaseInRange = true;,1.92045,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,197,        this.itemMargin = DEFAULT_ITEM_MARGIN;,1.92045,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,198,        this.drawBarOutline = true;,1.92045,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,199,        this.maximumBarWidth = 1.0;  ,1.92045,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,201,        this.positiveItemLabelPositionFallback = null;,1.92045,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,202,        this.negativeItemLabelPositionFallback = null;,1.92045,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,203,        this.gradientPaintTransformer = new StandardGradientPaintTransformer();,1.92045,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,204,        this.minimumBarLength = 0.0;,1.92045,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,205,    },1.92045,0,-1,0
org/jfree/chart/util/RectangleInsets,26,79,"        this(UnitType.ABSOLUTE, top, left, bottom, right);   ",1.83333,0,-1,0
org/jfree/chart/util/RectangleInsets,26,80,    },1.83333,0,-1,0
org/jfree/chart/util/RectangleInsets,26,93,"                           double bottom, double right) {",1.83333,0,-1,0
org/jfree/chart/util/RectangleInsets,26,94,        if (unitType == null) {,1.83333,0,-1,0
org/jfree/chart/util/RectangleInsets,26,97,        this.unitType = unitType;,1.83333,0,-1,0
org/jfree/chart/util/RectangleInsets,26,98,        this.top = top;,1.83333,0,-1,0
org/jfree/chart/util/RectangleInsets,26,99,        this.bottom = bottom;,1.83333,0,-1,0
org/jfree/chart/util/RectangleInsets,26,100,        this.left = left;,1.83333,0,-1,0
org/jfree/chart/util/RectangleInsets,26,101,        this.right = right;,1.83333,0,-1,0
org/jfree/chart/util/RectangleInsets,26,102,    },1.83333,0,-1,0
org/jfree/chart/util/RectangleInsets,26,42,    public static final RectangleInsets ZERO_INSETS = new RectangleInsets(,1.83333,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,639,        Range result = DatasetUtilities.findRangeBounds(dataset);,1.82857,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,640,        if (result != null) {,1.82857,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,645,        return result;,1.82857,0,-1,0
org/jfree/chart/util/UnitType,26,71,    private UnitType(String name) {,1.80597,0,-1,0
org/jfree/chart/util/UnitType,26,72,        this.name = name;,1.80597,0,-1,0
org/jfree/chart/util/UnitType,26,73,    },1.80597,0,-1,0
org/jfree/chart/util/UnitType,26,58,"    public static final UnitType ABSOLUTE = new UnitType(""UnitType.ABSOLUTE"");",1.80597,0,-1,0
org/jfree/chart/util/UnitType,26,61,"    public static final UnitType RELATIVE = new UnitType(""UnitType.RELATIVE"");",1.80597,0,-1,0
org/jfree/chart/axis/Axis,26,575,        return this.axisLinePaint;,1.72973,0,-1,0
org/jfree/chart/axis/Axis,26,602,        return this.axisLineStroke;,1.72973,0,-1,0
org/jfree/chart/axis/ValueAxis,26,519,        Line2D axisLine = null;,1.72973,0,-1,0
org/jfree/chart/axis/ValueAxis,26,520,        if (edge == RectangleEdge.TOP) {,1.72973,0,-1,0
org/jfree/chart/axis/ValueAxis,26,536,        g2.setPaint(getAxisLinePaint());,1.72973,0,-1,0
org/jfree/chart/axis/ValueAxis,26,537,        g2.setStroke(getAxisLineStroke());,1.72973,0,-1,0
org/jfree/chart/axis/ValueAxis,26,538,        g2.draw(axisLine);,1.72973,0,-1,0
org/jfree/chart/axis/ValueAxis,26,540,        boolean drawUpOrRight = false;  ,1.72973,0,-1,0
org/jfree/chart/axis/ValueAxis,26,541,        boolean drawDownOrLeft = false;,1.72973,0,-1,0
org/jfree/chart/axis/ValueAxis,26,542,        if (this.positiveArrowVisible) {,1.72973,0,-1,0
org/jfree/chart/axis/ValueAxis,26,550,        if (this.negativeArrowVisible) {,1.72973,0,-1,0
org/jfree/chart/axis/ValueAxis,26,558,        if (drawUpOrRight) {,1.72973,0,-1,0
org/jfree/chart/axis/ValueAxis,26,582,        if (drawDownOrLeft) {,1.72973,0,-1,0
org/jfree/chart/axis/ValueAxis,26,606,    },1.72973,0,-1,0
org/jfree/chart/axis/ValueAxis,26,664,"            drawAxisLine(g2, cursor, dataArea, edge);",1.72973,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,673,        return DatasetUtilities.findRangeBounds(dataset);,1.6,0,-1,0
org/jfree/data/DefaultKeyedValues,26,159,            i++;,1.5625,0,-1,0
org/jfree/data/DefaultKeyedValues,26,160,        },1.5625,0,-1,0
org/jfree/chart/util/ShapeList,26,60,        super();,1.5125,0,-1,0
org/jfree/chart/util/ShapeList,26,61,    },1.5125,0,-1,0
org/jfree/chart/util/PaintList,26,61,        super();,1.5125,0,-1,0
org/jfree/chart/util/PaintList,26,62,    },1.5125,0,-1,0
org/jfree/chart/util/StrokeList,26,60,        super();,1.5125,0,-1,0
org/jfree/chart/util/StrokeList,26,61,    },1.5125,0,-1,0
org/jfree/chart/util/BooleanList,26,62,    public BooleanList() {,1.5125,0,-1,0
org/jfree/chart/util/BooleanList,26,63,    },1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,169,    private ItemLabelAnchor(String name) {,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,170,        this.name = name;,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,171,    },1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,62,    public static final ItemLabelAnchor CENTER ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,66,    public static final ItemLabelAnchor INSIDE1 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,70,    public static final ItemLabelAnchor INSIDE2 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,74,    public static final ItemLabelAnchor INSIDE3 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,78,    public static final ItemLabelAnchor INSIDE4 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,82,    public static final ItemLabelAnchor INSIDE5 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,86,    public static final ItemLabelAnchor INSIDE6 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,90,    public static final ItemLabelAnchor INSIDE7 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,94,    public static final ItemLabelAnchor INSIDE8 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,98,    public static final ItemLabelAnchor INSIDE9 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,102,    public static final ItemLabelAnchor INSIDE10 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,106,    public static final ItemLabelAnchor INSIDE11 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,110,    public static final ItemLabelAnchor INSIDE12 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,114,    public static final ItemLabelAnchor OUTSIDE1 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,118,    public static final ItemLabelAnchor OUTSIDE2 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,122,    public static final ItemLabelAnchor OUTSIDE3 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,126,    public static final ItemLabelAnchor OUTSIDE4 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,130,    public static final ItemLabelAnchor OUTSIDE5 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,134,    public static final ItemLabelAnchor OUTSIDE6 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,138,    public static final ItemLabelAnchor OUTSIDE7 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,142,    public static final ItemLabelAnchor OUTSIDE8 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,146,    public static final ItemLabelAnchor OUTSIDE9 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,150,    public static final ItemLabelAnchor OUTSIDE10 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,154,    public static final ItemLabelAnchor OUTSIDE11 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,158,    public static final ItemLabelAnchor OUTSIDE12 ,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,92,"        this(itemLabelAnchor, textAnchor, TextAnchor.CENTER, 0.0);    ",1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,93,    },1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,111,                             double angle) {,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,113,        if (itemLabelAnchor == null) {,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,117,        if (textAnchor == null) {,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,120,        if (rotationAnchor == null) {,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,125,        this.itemLabelAnchor = itemLabelAnchor;,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,126,        this.textAnchor = textAnchor;,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,127,        this.rotationAnchor = rotationAnchor;,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,128,        this.angle = angle;,1.5125,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,130,    },1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,313,    public AbstractRenderer() {,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,290,    private double itemLabelAnchorOffset = 2.0;,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,315,        this.seriesVisibleList = new BooleanList();,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,316,        this.baseSeriesVisible = true;,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,318,        this.seriesVisibleInLegendList = new BooleanList();,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,319,        this.baseSeriesVisibleInLegend = true;,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,321,        this.paintList = new PaintList();,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,322,        this.basePaint = DEFAULT_PAINT;,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,323,        this.autoPopulateSeriesPaint = true;,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,325,        this.fillPaintList = new PaintList();,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,326,        this.baseFillPaint = Color.white;,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,327,        this.autoPopulateSeriesFillPaint = false;,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,329,        this.outlinePaintList = new PaintList();,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,330,        this.baseOutlinePaint = DEFAULT_OUTLINE_PAINT;,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,331,        this.autoPopulateSeriesOutlinePaint = false;,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,333,        this.strokeList = new StrokeList();,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,334,        this.baseStroke = DEFAULT_STROKE;,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,335,        this.autoPopulateSeriesStroke = false;,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,337,        this.outlineStrokeList = new StrokeList();,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,338,        this.baseOutlineStroke = DEFAULT_OUTLINE_STROKE;,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,339,        this.autoPopulateSeriesOutlineStroke = false;,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,341,        this.shapeList = new ShapeList();,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,342,        this.baseShape = DEFAULT_SHAPE;,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,343,        this.autoPopulateSeriesShape = true;,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,345,        this.itemLabelsVisibleList = new BooleanList();,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,346,        this.baseItemLabelsVisible = false;,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,348,        this.itemLabelFontList = new ObjectList();,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,349,"        this.baseItemLabelFont = new Font(""SansSerif"", Font.PLAIN, 10);",1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,351,        this.itemLabelPaintList = new PaintList();,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,352,        this.baseItemLabelPaint = Color.black;,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,354,        this.positiveItemLabelPositionList = new ObjectList();,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,355,        this.basePositiveItemLabelPosition = new ItemLabelPosition(,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,358,        this.negativeItemLabelPositionList = new ObjectList();,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,359,        this.baseNegativeItemLabelPosition = new ItemLabelPosition(,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,362,        this.createEntitiesList = new BooleanList();,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,363,        this.baseCreateEntities = true;,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,365,        this.listenerList = new EventListenerList();,1.5125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,367,    },1.5125,0,-1,0
org/jfree/chart/JFreeChart,26,327,"        this(null, null, plot, true);",1.45455,0,-1,0
org/jfree/chart/JFreeChart,26,328,    },1.45455,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,149,        return this.size;,1.44048,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,135,    public static final Double ZERO = new Double(0.0);,1.4362,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,138,    public static final Paint DEFAULT_PAINT = Color.blue;,1.4362,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,141,    public static final Paint DEFAULT_OUTLINE_PAINT = Color.gray;,1.4362,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,144,    public static final Stroke DEFAULT_STROKE = new BasicStroke(1.0f);,1.4362,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,147,    public static final Stroke DEFAULT_OUTLINE_STROKE = new BasicStroke(1.0f);,1.4362,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,150,    public static final Shape DEFAULT_SHAPE ,1.4362,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,154,    public static final Font DEFAULT_VALUE_LABEL_FONT ,1.4362,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,158,    public static final Paint DEFAULT_VALUE_LABEL_PAINT = Color.black;,1.4362,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2151,    private static final double ADJ = Math.cos(Math.PI / 6.0);,1.4362,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2154,    private static final double OPP = Math.sin(Math.PI / 6.0);,1.4362,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,82,    private static String classLoaderSource = THREAD_CONTEXT;,1.37892,0,-1,0
org/jfree/chart/event/ChartChangeEvent,26,71,"        this(source, null, ChartChangeEventType.GENERAL);",1.34444,0,-1,0
org/jfree/chart/event/ChartChangeEvent,26,72,    },1.34444,0,-1,0
org/jfree/chart/event/ChartChangeEvent,26,95,        super(source);,1.34444,0,-1,0
org/jfree/chart/event/ChartChangeEvent,26,96,        this.chart = chart;,1.34444,0,-1,0
org/jfree/chart/event/ChartChangeEvent,26,97,        this.type = type;,1.34444,0,-1,0
org/jfree/chart/event/ChartChangeEvent,26,98,    },1.34444,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,76,    private ChartChangeEventType(String name) {,1.34444,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,77,        this.name = name;,1.34444,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,78,    },1.34444,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,57,    public static final ChartChangeEventType GENERAL ,1.34444,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,61,    public static final ChartChangeEventType NEW_DATASET ,1.34444,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,65,    public static final ChartChangeEventType DATASET_UPDATED,1.34444,0,-1,0
org/jfree/data/general/DatasetUtilities,26,821,"                    lvalue = dataset.getValue(row, column);",1.33333,0,-1,0
org/jfree/data/general/DatasetUtilities,26,822,                    uvalue = lvalue;,1.33333,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,77,        this(DEFAULT_INITIAL_CAPACITY);,1.31522,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,78,    },1.31522,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,86,"        this (initialCapacity, initialCapacity);",1.31522,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,87,    },1.31522,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,95,"    protected AbstractObjectList(int initialCapacity, int increment) {",1.31522,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,68,    private int size = 0;,1.31522,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,71,    private int increment = DEFAULT_INITIAL_CAPACITY;,1.31522,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,96,        this.objects = new Object[initialCapacity];,1.31522,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,97,        this.increment = increment;,1.31522,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,98,    },1.31522,0,-1,0
org/jfree/chart/util/ObjectList,26,60,    public ObjectList() {,1.31522,0,-1,0
org/jfree/chart/util/ObjectList,26,61,    },1.31522,0,-1,0
org/jfree/chart/text/TextAnchor,26,126,    private TextAnchor(String name) {,1.28042,0,-1,0
org/jfree/chart/text/TextAnchor,26,127,        this.name = name;,1.28042,0,-1,0
org/jfree/chart/text/TextAnchor,26,128,    },1.28042,0,-1,0
org/jfree/chart/text/TextAnchor,26,60,    public static final TextAnchor TOP_LEFT = new TextAnchor(,1.28042,0,-1,0
org/jfree/chart/text/TextAnchor,26,64,    public static final TextAnchor TOP_CENTER = new TextAnchor(,1.28042,0,-1,0
org/jfree/chart/text/TextAnchor,26,68,    public static final TextAnchor TOP_RIGHT = new TextAnchor(,1.28042,0,-1,0
org/jfree/chart/text/TextAnchor,26,72,    public static final TextAnchor HALF_ASCENT_LEFT = new TextAnchor(,1.28042,0,-1,0
org/jfree/chart/text/TextAnchor,26,76,    public static final TextAnchor HALF_ASCENT_CENTER = new TextAnchor(,1.28042,0,-1,0
org/jfree/chart/text/TextAnchor,26,80,    public static final TextAnchor HALF_ASCENT_RIGHT = new TextAnchor(,1.28042,0,-1,0
org/jfree/chart/text/TextAnchor,26,84,    public static final TextAnchor CENTER_LEFT = new TextAnchor(,1.28042,0,-1,0
org/jfree/chart/text/TextAnchor,26,88,"    public static final TextAnchor CENTER = new TextAnchor(""TextAnchor.CENTER"");",1.28042,0,-1,0
org/jfree/chart/text/TextAnchor,26,91,    public static final TextAnchor CENTER_RIGHT = new TextAnchor(,1.28042,0,-1,0
org/jfree/chart/text/TextAnchor,26,95,    public static final TextAnchor BASELINE_LEFT = new TextAnchor(,1.28042,0,-1,0
org/jfree/chart/text/TextAnchor,26,99,    public static final TextAnchor BASELINE_CENTER = new TextAnchor(,1.28042,0,-1,0
org/jfree/chart/text/TextAnchor,26,103,    public static final TextAnchor BASELINE_RIGHT = new TextAnchor(,1.28042,0,-1,0
org/jfree/chart/text/TextAnchor,26,107,    public static final TextAnchor BOTTOM_LEFT = new TextAnchor(,1.28042,0,-1,0
org/jfree/chart/text/TextAnchor,26,111,    public static final TextAnchor BOTTOM_CENTER = new TextAnchor(,1.28042,0,-1,0
org/jfree/chart/text/TextAnchor,26,115,    public static final TextAnchor BOTTOM_RIGHT = new TextAnchor(,1.28042,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1893,"        setBasePositiveItemLabelPosition(position, true);",1.18519,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1894,    },1.18519,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1907,        if (position == null) {,1.18519,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1910,        this.basePositiveItemLabelPosition = position;,1.18519,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1911,        if (notify) {,1.18519,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1912,            fireChangeEvent();,1.18519,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1914,    },1.18519,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2009,"        setBaseNegativeItemLabelPosition(position, true);",1.18519,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2010,    },1.18519,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2023,        if (position == null) {,1.18519,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2026,        this.baseNegativeItemLabelPosition = position;,1.18519,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2027,        if (notify) {,1.18519,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2028,            fireChangeEvent();,1.18519,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2030,    },1.18519,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,641,            if (this.includeBaseInRange) {,1.09091,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2330,        notifyListeners(new RendererChangeEvent(this));,0.95522,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2331,    },0.95522,0,-1,0
org/jfree/chart/event/RendererChangeEvent,26,63,        super(renderer);,0.92453,0,-1,0
org/jfree/chart/event/RendererChangeEvent,26,64,        this.renderer = renderer;,0.92453,0,-1,0
org/jfree/chart/event/RendererChangeEvent,26,65,    },0.92453,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2339,        Object[] ls = this.listenerList.getListenerList();,0.92453,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2340,        for (int i = ls.length - 2; i >= 0; i -= 2) {,0.92453,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2345,    },0.92453,0,-1,0
org/jfree/chart/axis/NumberAxis,26,657,        AxisState state = null;,0.92308,0,-1,0
org/jfree/chart/axis/NumberAxis,26,659,        if (!isVisible()) {,0.92308,0,-1,0
org/jfree/chart/axis/NumberAxis,26,669,"        state = drawTickMarksAndLabels(g2, cursor, plotArea, dataArea, edge);",0.92308,0,-1,0
org/jfree/chart/axis/NumberAxis,26,680,"        state = drawLabel(getLabel(), g2, plotArea, dataArea, edge, state,",0.92308,0,-1,0
org/jfree/chart/LegendItem,26,228,"        this(label, description, toolTipText, urlText,",0.89286,0,-1,0
org/jfree/chart/LegendItem,26,235,    },0.89286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,275,        return this.categoryMargin;,0.88889,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,676,            result = available * (1 - getLowerMargin() - getUpperMargin() ,0.88889,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,678,            result = result / categoryCount;,0.88889,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,713,            result = available * getCategoryMargin() / (categoryCount - 1);,0.88889,0,-1,0
org/jfree/chart/util/ShapeList,26,71,        return (Shape) get(index);,0.78125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1380,        Shape result = this.shapeList.getShape(series);,0.78125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1381,        if (result == null && this.autoPopulateSeriesShape) {,0.78125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1382,            DrawingSupplier supplier = getDrawingSupplier();,0.78125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1383,            if (supplier != null) {,0.78125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1384,                result = supplier.getNextShape();,0.78125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1385,"                this.shapeList.setShape(series, result);",0.78125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1388,        if (result == null) {,0.78125,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1391,        return result;,0.78125,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,277,        Shape result = this.shapeSequence[,0.78125,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,279,        this.shapeIndex++;,0.78125,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,280,        return result;,0.78125,0,-1,0
org/jfree/data/Range,26,228,        if (range == null) {,0.73529,0,-1,0
org/jfree/data/Range,26,231,        if (value < range.getLowerBound()) {,0.73529,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,642,"                result = Range.expandToInclude(result, this.base);",0.73529,0,-1,0
org/jfree/chart/util/ShapeList,26,81,"        set(index, shape);",0.71429,0,-1,0
org/jfree/chart/util/ShapeList,26,82,    },0.71429,0,-1,0
org/jfree/chart/title/LegendTitle,26,474,            return result;   ,0.64,0,-1,0
org/jfree/chart/block/LineBorder,26,148,            return;,0.64,0,-1,0
org/jfree/chart/axis/NumberAxis,26,491,"                        lower = Math.max(0.0, lower - getLowerMargin() * range);",0.52033,0,-1,0
org/jfree/chart/plot/Plot,26,540,        return this.backgroundPaint;,0.47368,0,-1,0
org/jfree/chart/plot/Plot,26,579,        return this.backgroundAlpha;,0.47368,0,-1,0
org/jfree/chart/plot/Plot,26,640,        return this.backgroundImage;,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,133,        if (!isVisible()) {,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,143,        double xOffset = 0.0;,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,144,        double yOffset = 0.0;,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,145,        Plot plot = getPlot();,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,146,        if (plot instanceof CategoryPlot) {,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,147,            CategoryPlot cp = (CategoryPlot) plot;,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,148,            CategoryItemRenderer r = cp.getRenderer();,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,149,            if (r instanceof Effect3D) {,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,150,                Effect3D e3D = (Effect3D) r;,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,151,                xOffset = e3D.getXOffset();,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,152,                yOffset = e3D.getYOffset();,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,156,        double adjustedX = dataArea.getMinX();,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,157,        double adjustedY = dataArea.getMinY();,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,158,        double adjustedW = dataArea.getWidth() - xOffset;,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,159,        double adjustedH = dataArea.getHeight() - yOffset;,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,161,        if (edge == RectangleEdge.LEFT || edge == RectangleEdge.BOTTOM) {,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,164,        else if (edge == RectangleEdge.RIGHT || edge == RectangleEdge.TOP) {,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,165,            adjustedX += xOffset;,0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,167,"        Rectangle2D adjustedDataArea = new Rectangle2D.Double(adjustedX, ",0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,171,"        AxisState info = drawTickMarksAndLabels(g2, cursor, plotArea, ",0.47368,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,175,"        info = drawLabel(getLabel(), g2, plotArea, dataArea, edge, info, ",0.47368,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,210,        Boolean flag = getSeriesLinesVisible(series);,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,211,        if (flag != null) {,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,215,            return this.baseLinesVisible;   ,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,228,        return this.seriesLinesVisible.getBoolean(series);,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,283,        Boolean flag = getSeriesShapesVisible(series);,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,284,        if (flag != null) {,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,288,            return this.baseShapesVisible;   ,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,301,        return this.seriesShapesVisible.getBoolean(series);,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,405,        Boolean flag = getSeriesShapesFilled(series);,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,406,        if (flag != null) {,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,410,            return this.baseShapesFilled;   ,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,425,        return this.seriesShapesFilled.getBoolean(series);,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,511,        CategoryPlot cp = getPlot();,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,512,        if (cp == null) {,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,516,        if (isSeriesVisible(series) && isSeriesVisibleInLegend(series)) {,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,517,            CategoryDataset dataset = cp.getDataset(datasetIndex);,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,518,            String label = getLegendItemLabelGenerator().generateLabel(,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,520,            String description = label;,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,521,            String toolTipText = null; ,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,522,            if (getLegendItemToolTipGenerator() != null) {,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,526,            String urlText = null;,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,527,            if (getLegendItemURLGenerator() != null) {,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,531,            Shape shape = lookupSeriesShape(series);,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,532,            Paint paint = lookupSeriesPaint(series);,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,533,            Paint fillPaint = (this.useFillPaint ,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,535,            boolean shapeOutlineVisible = this.drawOutlines;,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,536,            Paint outlinePaint = (this.useOutlinePaint ,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,538,            Stroke outlineStroke = lookupSeriesOutlineStroke(series);,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,539,"            boolean lineVisible = getItemLineVisible(series, 0);",0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,540,"            boolean shapeVisible = getItemShapeVisible(series, 0);",0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,541,"            LegendItem result = new LegendItem(label, description, toolTipText, ",0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,546,            result.setDataset(dataset);,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,547,            result.setDatasetIndex(datasetIndex);,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,548,            result.setSeriesKey(dataset.getRowKey(series));,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,549,            result.setSeriesIndex(series);,0.45,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,550,            return result;,0.45,0,-1,0
org/jfree/data/KeyedObjects2D,26,86,        return this.rowKeys.size();,0.42857,0,-1,0
org/jfree/data/KeyedObjects2D,26,95,        return this.columnKeys.size();,0.42857,0,-1,0
org/jfree/data/KeyedObjects2D,26,159,        return (Comparable) this.columnKeys.get(column);,0.42857,0,-1,0
org/jfree/data/KeyedObjects2D,26,74,    public KeyedObjects2D() {,0.40909,0,-1,0
org/jfree/data/KeyedObjects2D,26,75,        this.rowKeys = new java.util.ArrayList();,0.40909,0,-1,0
org/jfree/data/KeyedObjects2D,26,76,        this.columnKeys = new java.util.ArrayList();,0.40909,0,-1,0
org/jfree/data/KeyedObjects2D,26,77,        this.rows = new java.util.ArrayList();,0.40909,0,-1,0
org/jfree/data/KeyedObjects2D,26,78,    },0.40909,0,-1,0
org/jfree/data/KeyedObjects2D,26,128,        return (Comparable) this.rowKeys.get(row);,0.40909,0,-1,0
org/jfree/data/KeyedObjects2D,26,212,"        setObject(object, rowKey, columnKey);",0.40909,0,-1,0
org/jfree/data/KeyedObjects2D,26,213,    },0.40909,0,-1,0
org/jfree/data/KeyedObjects2D,26,227,        int rowIndex = this.rowKeys.indexOf(rowKey);,0.40909,0,-1,0
org/jfree/data/KeyedObjects2D,26,228,        if (rowIndex >= 0) {,0.40909,0,-1,0
org/jfree/data/KeyedObjects2D,26,232,            this.rowKeys.add(rowKey);,0.40909,0,-1,0
org/jfree/data/KeyedObjects2D,26,233,            row = new KeyedObjects();,0.40909,0,-1,0
org/jfree/data/KeyedObjects2D,26,234,            this.rows.add(row);,0.40909,0,-1,0
org/jfree/data/KeyedObjects2D,26,236,"        row.setObject(columnKey, object);",0.40909,0,-1,0
org/jfree/data/KeyedObjects2D,26,237,        int columnIndex = this.columnKeys.indexOf(columnKey);,0.40909,0,-1,0
org/jfree/data/KeyedObjects2D,26,238,        if (columnIndex < 0) {,0.40909,0,-1,0
org/jfree/data/KeyedObjects2D,26,239,            this.columnKeys.add(columnKey);,0.40909,0,-1,0
org/jfree/data/KeyedObjects2D,26,242,    },0.40909,0,-1,0
org/jfree/data/KeyedObject,26,74,"    public KeyedObject(Comparable key, Object object) {",0.40909,0,-1,0
org/jfree/data/KeyedObject,26,75,        this.key = key;,0.40909,0,-1,0
org/jfree/data/KeyedObject,26,76,        this.object = object;,0.40909,0,-1,0
org/jfree/data/KeyedObject,26,77,    },0.40909,0,-1,0
org/jfree/data/KeyedObjects,26,67,    public KeyedObjects() {,0.40909,0,-1,0
org/jfree/data/KeyedObjects,26,68,        this.data = new java.util.ArrayList();,0.40909,0,-1,0
org/jfree/data/KeyedObjects,26,69,    },0.40909,0,-1,0
org/jfree/data/KeyedObjects,26,126,        int result = -1;,0.40909,0,-1,0
org/jfree/data/KeyedObjects,26,127,        int i = 0;,0.40909,0,-1,0
org/jfree/data/KeyedObjects,26,128,        Iterator iterator = this.data.iterator();,0.40909,0,-1,0
org/jfree/data/KeyedObjects,26,129,        while (iterator.hasNext()) {,0.40909,0,-1,0
org/jfree/data/KeyedObjects,26,136,        return result;,0.40909,0,-1,0
org/jfree/data/KeyedObjects,26,186,        int keyIndex = getIndex(key);,0.40909,0,-1,0
org/jfree/data/KeyedObjects,26,187,        if (keyIndex >= 0) {,0.40909,0,-1,0
org/jfree/data/KeyedObjects,26,192,"            KeyedObject ko = new KeyedObject(key, object);",0.40909,0,-1,0
org/jfree/data/KeyedObjects,26,193,            this.data.add(ko);,0.40909,0,-1,0
org/jfree/data/KeyedObjects,26,195,    },0.40909,0,-1,0
org/jfree/data/general/DatasetUtilities,26,744,            RangeInfo info = (RangeInfo) dataset;,0.40909,0,-1,0
org/jfree/data/general/DatasetUtilities,26,745,            result = info.getRangeBounds(includeInterval);,0.40909,0,-1,0
org/jfree/data/general/DatasetUtilities,26,746,        },0.40909,0,-1,0
org/jfree/chart/ChartFactory,26,615,            renderer.setBaseToolTipGenerator(,0.3913,0,-1,0
org/jfree/data/general/DatasetUtilities,26,833,            return null;,0.375,0,-1,0
org/jfree/chart/title/LegendGraphic,26,396,        return this.line;,0.375,0,-1,0
org/jfree/chart/title/LegendGraphic,26,535,            Point2D location = RectangleAnchor.coordinates(,0.375,0,-1,0
org/jfree/chart/title/LegendGraphic,26,538,            Shape aLine = ShapeUtilities.createTranslatedShape(,0.375,0,-1,0
org/jfree/chart/title/LegendGraphic,26,541,            g2.setPaint(this.linePaint);,0.375,0,-1,0
org/jfree/chart/title/LegendGraphic,26,542,            g2.setStroke(this.lineStroke);,0.375,0,-1,0
org/jfree/chart/title/LegendGraphic,26,543,            g2.draw(aLine);,0.375,0,-1,0
org/jfree/data/Range,26,234,        else if (value > range.getUpperBound()) {,0.36,0,-1,0
org/jfree/data/Range,26,238,            return range;,0.36,0,-1,0
org/jfree/chart/ChartFactory,26,591,        if (orientation == null) {,0.36,0,-1,0
org/jfree/chart/ChartFactory,26,594,        CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel);,0.36,0,-1,0
org/jfree/chart/ChartFactory,26,595,        ValueAxis valueAxis = new NumberAxis(valueAxisLabel);,0.36,0,-1,0
org/jfree/chart/ChartFactory,26,597,        BarRenderer renderer = new BarRenderer();,0.36,0,-1,0
org/jfree/chart/ChartFactory,26,598,        if (orientation == PlotOrientation.HORIZONTAL) {,0.36,0,-1,0
org/jfree/chart/ChartFactory,26,614,        if (tooltips) {,0.36,0,-1,0
org/jfree/chart/ChartFactory,26,618,        if (urls) {,0.36,0,-1,0
org/jfree/chart/ChartFactory,26,622,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.36,0,-1,0
org/jfree/chart/ChartFactory,26,624,        plot.setOrientation(orientation);,0.36,0,-1,0
org/jfree/chart/ChartFactory,26,625,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.36,0,-1,0
org/jfree/chart/ChartFactory,26,628,        return chart;,0.36,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,233,"        addValue(new Double(value), rowKey, columnKey);",0.32653,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,234,    },0.32653,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1259,        if (dataset == null) {,0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1262,        Range result = null;,0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1263,        double minimum = Double.POSITIVE_INFINITY;,0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1264,        double maximum = Double.NEGATIVE_INFINITY;,0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1265,        int categoryCount = dataset.getColumnCount();,0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1266,        for (int item = 0; item < categoryCount; item++) {,0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1267,            double positive = base;,0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1268,            double negative = base;,0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1269,            int seriesCount = dataset.getRowCount();,0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1270,            for (int series = 0; series < seriesCount; series++) {,0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1271,"                Number number = dataset.getValue(series, item);",0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1272,                if (number != null) {,0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1273,                    double value = number.doubleValue();,0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1274,                    if (value > 0.0) {,0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1275,                        positive = positive + value;,0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1277,                    if (value < 0.0) {,0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1278,                        negative = negative + value;  ,0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1283,"            minimum = Math.min(minimum, negative);",0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1284,"            maximum = Math.max(maximum, positive);",0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1286,        if (minimum <= maximum) {,0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1287,"            result = new Range(minimum, maximum);",0.32143,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1289,        return result;,0.32143,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,109,        super(label);,0.31034,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,110,        setAxisLineVisible(false);,0.31034,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,111,    },0.31034,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,92,        super(label);,0.3,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,93,    },0.3,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,103,        super();,0.3,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,104,    },0.3,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,186,        super();,0.2963,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,187,        this.seriesLinesVisible = new BooleanList();,0.2963,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,188,        this.baseLinesVisible = lines;,0.2963,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,189,        this.seriesShapesVisible = new BooleanList();,0.2963,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,190,        this.baseShapesVisible = shapes;,0.2963,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,191,        this.seriesShapesFilled = new BooleanList();,0.2963,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,192,        this.baseShapesFilled = true;,0.2963,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,193,        this.useFillPaint = false;,0.2963,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,194,        this.drawOutlines = true;,0.2963,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,195,        this.useOutlinePaint = false;,0.2963,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,196,    },0.2963,0,-1,0
org/jfree/chart/axis/Axis,26,563,        this.axisLineVisible = visible;,0.25714,0,-1,0
org/jfree/chart/axis/Axis,26,564,        notifyListeners(new AxisChangeEvent(this));,0.25714,0,-1,0
org/jfree/chart/axis/Axis,26,565,    },0.25714,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1071,        return lookupSeriesStroke(row);,0.25714,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,614,        return lookupSeriesPaint(row);,0.24324,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1086,        Stroke result = this.strokeList.getStroke(series);,0.225,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1087,        if (result == null && this.autoPopulateSeriesStroke) {,0.225,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1094,        if (result == null) {,0.225,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1095,            result = this.baseStroke;,0.225,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1097,        return result;,0.225,0,-1,0
org/jfree/data/KeyedObjects2D,26,229,            row = (KeyedObjects) this.rows.get(rowIndex);,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,90,    public DefaultStatisticalCategoryDataset() {,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,91,        this.data = new KeyedObjects2D();,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,92,        this.minimumRangeValue = Double.NaN;,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,93,        this.maximumRangeValue = Double.NaN;,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,94,        this.minimumRangeValueIncStdDev = Double.NaN;,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,95,        this.maximumRangeValueIncStdDev = Double.NaN;,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,96,    },0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,215,        return this.data.getColumnKey(column);,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,246,        return this.data.getRowKey(row);,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,264,        return this.data.getRowCount();,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,273,        return this.data.getColumnCount();,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,286,"        add(new Double(mean), new Double(standardDeviation), rowKey, columnKey);",0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,287,    },0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,299,        MeanAndStandardDeviation item = new MeanAndStandardDeviation(,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,301,"        this.data.addObject(item, rowKey, columnKey);",0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,302,        double m = 0.0;,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,303,        double sd = 0.0;,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,304,        if (mean != null) {,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,305,            m = mean.doubleValue();,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,307,        if (standardDeviation != null) {,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,308,            sd = standardDeviation.doubleValue();   ,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,311,        if (!Double.isNaN(m)) {,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,312,            if (Double.isNaN(this.maximumRangeValue) ,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,314,                this.maximumRangeValue = m;,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,318,        if (!Double.isNaN(m + sd)) {,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,319,            if (Double.isNaN(this.maximumRangeValueIncStdDev) ,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,321,                this.maximumRangeValueIncStdDev = m + sd;,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,325,        if (!Double.isNaN(m)) {,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,326,            if (Double.isNaN(this.minimumRangeValue) ,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,328,                this.minimumRangeValue = m;,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,332,        if (!Double.isNaN(m - sd)) {,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,333,            if (Double.isNaN(this.minimumRangeValueIncStdDev) ,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,335,                this.minimumRangeValueIncStdDev = m - sd;,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,339,        fireDatasetChanged();,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,340,    },0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,377,        Range result = null;,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,378,        if (includeInterval) {,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,379,            if (!Double.isNaN(this.minimumRangeValueIncStdDev) ,0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,381,"            result = new Range(this.minimumRangeValueIncStdDev, ",0.2,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,389,        return result;,0.2,0,-1,0
org/jfree/data/statistics/MeanAndStandardDeviation,26,84,"    public MeanAndStandardDeviation(Number mean, Number standardDeviation) {",0.2,0,-1,0
org/jfree/data/statistics/MeanAndStandardDeviation,26,85,        this.mean = mean;,0.2,0,-1,0
org/jfree/data/statistics/MeanAndStandardDeviation,26,86,        this.standardDeviation = standardDeviation;,0.2,0,-1,0
org/jfree/data/statistics/MeanAndStandardDeviation,26,87,    },0.2,0,-1,0
org/jfree/data/general/DatasetUtilities,26,815,                    IntervalCategoryDataset icd ,0.2,0,-1,0
org/jfree/data/general/DatasetUtilities,26,817,"                    lvalue = icd.getStartValue(row, column);",0.2,0,-1,0
org/jfree/data/general/DatasetUtilities,26,818,"                    uvalue = icd.getEndValue(row, column);",0.2,0,-1,0
org/jfree/data/general/DatasetUtilities,26,819,                },0.2,0,-1,0
org/jfree/chart/axis/DateAxis,26,1546,                        anchor = TextAnchor.BOTTOM_CENTER;,0.2,0,-1,0
org/jfree/chart/axis/DateAxis,26,1547,                        rotationAnchor = TextAnchor.BOTTOM_CENTER;,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,209,        return this.xOffset;,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,218,        return this.yOffset;,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,230,        return this.wallPaint;,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,289,        float x0 = (float) dataArea.getX();,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,290,        float x1 = x0 + (float) Math.abs(this.xOffset);,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,291,        float x3 = (float) dataArea.getMaxX();,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,292,        float x2 = x3 - (float) Math.abs(this.xOffset);,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,294,        float y0 = (float) dataArea.getMaxY();,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,295,        float y1 = y0 - (float) Math.abs(this.yOffset);,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,296,        float y3 = (float) dataArea.getMinY();,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,297,        float y2 = y3 + (float) Math.abs(this.yOffset);,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,299,        GeneralPath clip = new GeneralPath();,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,300,"        clip.moveTo(x0, y0);",0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,301,"        clip.lineTo(x0, y2);",0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,302,"        clip.lineTo(x1, y3);",0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,303,"        clip.lineTo(x3, y3);",0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,304,"        clip.lineTo(x3, y1);",0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,305,"        clip.lineTo(x2, y0);",0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,306,        clip.closePath();,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,308,        Composite originalComposite = g2.getComposite();,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,309,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,",0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,313,        Paint backgroundPaint = plot.getBackgroundPaint();,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,314,        if (backgroundPaint != null) {,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,315,            g2.setPaint(backgroundPaint);,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,316,            g2.fill(clip);,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,319,        GeneralPath leftWall = new GeneralPath();,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,320,"        leftWall.moveTo(x0, y0);",0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,321,"        leftWall.lineTo(x0, y2);",0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,322,"        leftWall.lineTo(x1, y3);",0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,323,"        leftWall.lineTo(x1, y1);",0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,324,        leftWall.closePath();,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,325,        g2.setPaint(getWallPaint());,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,326,        g2.fill(leftWall);,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,328,        GeneralPath bottomWall = new GeneralPath();,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,329,"        bottomWall.moveTo(x0, y0);",0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,330,"        bottomWall.lineTo(x1, y1);",0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,331,"        bottomWall.lineTo(x3, y1);",0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,332,"        bottomWall.lineTo(x2, y0);",0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,333,        bottomWall.closePath();,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,334,        g2.setPaint(getWallPaint());,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,335,        g2.fill(bottomWall);,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,338,        g2.setPaint(Color.lightGray);,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,339,"        Line2D corner = new Line2D.Double(x0, y0, x1, y1);",0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,340,        g2.draw(corner);,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,341,"        corner.setLine(x1, y1, x1, y3);",0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,342,        g2.draw(corner);,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,343,"        corner.setLine(x1, y1, x3, y1);",0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,344,        g2.draw(corner);,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,347,        Image backgroundImage = plot.getBackgroundImage();,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,348,        if (backgroundImage != null) {,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,356,        g2.setComposite(originalComposite);,0.2,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,358,    },0.2,0,-1,0
org/jfree/chart/JFreeChart,26,1560,        event.setChart(this);,0.19512,0,-1,0
org/jfree/chart/JFreeChart,26,1561,        notifyListeners(event);,0.19512,0,-1,0
org/jfree/chart/JFreeChart,26,1562,    },0.19512,0,-1,0
org/jfree/chart/event/ChartChangeEvent,26,115,        this.chart = chart;,0.19048,0,-1,0
org/jfree/chart/event/ChartChangeEvent,26,116,    },0.19048,0,-1,0
org/jfree/chart/plot/Plot,26,893,            if (listeners[i] == PlotChangeListener.class) {,0.19048,0,-1,0
org/jfree/chart/plot/Plot,26,894,                ((PlotChangeListener) listeners[i + 1]).plotChanged(event);,0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1148,        CategoryPlot p = getPlot();,0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1149,        if (p == null) {,0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1154,        if (!isSeriesVisible(series) || !isSeriesVisibleInLegend(series)) {,0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1158,        CategoryDataset dataset = p.getDataset(datasetIndex);,0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1159,"        String label = this.legendItemLabelGenerator.generateLabel(dataset,",0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1161,        String description = label;,0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1162,        String toolTipText = null;,0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1163,        if (this.legendItemToolTipGenerator != null) {,0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1167,        String urlText = null;,0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1168,        if (this.legendItemURLGenerator != null) {,0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1172,        Shape shape = lookupSeriesShape(series);,0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1173,        Paint paint = lookupSeriesPaint(series);,0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1174,        Paint outlinePaint = lookupSeriesOutlinePaint(series);,0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1175,        Stroke outlineStroke = lookupSeriesOutlineStroke(series);,0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1177,"        LegendItem item = new LegendItem(label, description, toolTipText,",0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1179,        item.setSeriesKey(dataset.getRowKey(series));,0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1180,        item.setSeriesIndex(series);,0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1181,        item.setDataset(dataset);,0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1182,        item.setDatasetIndex(datasetIndex);,0.19048,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1183,        return item;,0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,155,        CategoryPlot cp = getPlot();,0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,156,        if (cp == null) {,0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,161,        if (!isSeriesVisible(series) || !isSeriesVisibleInLegend(series)) {,0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,165,        CategoryDataset dataset = cp.getDataset(datasetIndex);,0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,166,"        String label = getLegendItemLabelGenerator().generateLabel(dataset, ",0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,168,        String description = label;,0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,169,        String toolTipText = null; ,0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,170,        if (getLegendItemToolTipGenerator() != null) {,0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,174,        String urlText = null;,0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,175,        if (getLegendItemURLGenerator() != null) {,0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,179,"        Shape shape = new Rectangle2D.Double(-4.0, -4.0, 8.0, 8.0);",0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,180,        Paint paint = lookupSeriesPaint(series);,0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,181,        Paint outlinePaint = lookupSeriesOutlinePaint(series);,0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,182,        Stroke outlineStroke = lookupSeriesOutlineStroke(series);,0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,184,"        LegendItem result = new LegendItem(label, description, toolTipText, ",0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,186,        result.setDataset(dataset);,0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,187,        result.setDatasetIndex(datasetIndex);,0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,188,        result.setSeriesKey(dataset.getRowKey(series));,0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,189,        result.setSeriesIndex(series);,0.19048,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,190,        return result;,0.19048,0,-1,0
org/jfree/data/KeyedObject,26,85,        return this.key;,0.18182,0,-1,0
org/jfree/data/KeyedObjects,26,130,            KeyedObject ko = (KeyedObject) iterator.next();,0.18182,0,-1,0
org/jfree/data/KeyedObjects,26,131,            if (ko.getKey().equals(key)) {,0.18182,0,-1,0
org/jfree/data/KeyedObjects,26,134,            i++;,0.18182,0,-1,0
org/jfree/data/KeyedObjects,26,135,        },0.18182,0,-1,0
org/jfree/chart/JFreeChart,26,1352,"        return createBufferedImage(width, height, null);",0.18182,0,-1,0
org/jfree/chart/JFreeChart,26,1491,        if (this.notify) {,0.18182,0,-1,0
org/jfree/chart/JFreeChart,26,1492,            Object[] listeners = this.changeListeners.getListenerList();,0.18182,0,-1,0
org/jfree/chart/JFreeChart,26,1493,            for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.18182,0,-1,0
org/jfree/chart/JFreeChart,26,1500,    },0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,422,        return this.tickUnit;,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,468,        return this.dateFormatOverride;,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,687,        return (!this.timeline.containsDomainValue(new Date(millis)));,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,704,        value = this.timeline.toTimelineValue((long) value);,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,706,        DateRange range = (DateRange) getRange();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,707,        double axisMin = this.timeline.toTimelineValue(range.getLowerDate());,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,708,        double axisMax = this.timeline.toTimelineValue(range.getUpperDate());,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,709,        double result = 0.0;,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,710,        if (RectangleEdge.isTopOrBottom(edge)) {,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,711,            double minX = area.getX();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,712,            double maxX = area.getMaxX();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,713,            if (isInverted()) {,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,718,                result = minX + ((value - axisMin) / (axisMax - axisMin)) ,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,721,        },0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,734,        return result;,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,806,"        return nextStandardDate(getMinimumDate(), unit);",0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1045,"        Date previous = previousStandardDate(date, unit);",0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1046,        Calendar calendar = Calendar.getInstance(this.timeZone);,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1047,        calendar.setTime(previous);,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1048,"        calendar.add(unit.getCalendarField(), unit.getCount());",0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1049,        return calendar.getTime();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1266,        if (RectangleEdge.isTopOrBottom(edge)) {,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1267,"            selectHorizontalAutoTickUnit(g2, dataArea, edge);",0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1273,    },0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1288,        long shift = 0;,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1289,        if (this.timeline instanceof SegmentedTimeline) {,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1292,"        double zero = valueToJava2D(shift + 0.0, dataArea, edge);",0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1293,        double tickLabelWidth ,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1297,        TickUnitSource tickUnits = getStandardTickUnits();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1298,        TickUnit unit1 = tickUnits.getCeilingTickUnit(getTickUnit());,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1299,"        double x1 = valueToJava2D(shift + unit1.getSize(), dataArea, edge);",0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1300,        double unit1Width = Math.abs(x1 - zero);,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1303,        double guess = (tickLabelWidth / unit1Width) * unit1.getSize();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1304,        DateTickUnit unit2 = (DateTickUnit) tickUnits.getCeilingTickUnit(guess);,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1305,"        double x2 = valueToJava2D(shift + unit2.getSize(), dataArea, edge);",0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1306,        double unit2Width = Math.abs(x2 - zero);,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1307,"        tickLabelWidth = estimateMaximumTickLabelWidth(g2, unit2);",0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1308,        if (tickLabelWidth > unit2Width) {,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1311,"        setTickUnit(unit2, false, false);",0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1312,    },0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1376,        RectangleInsets tickLabelInsets = getTickLabelInsets();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1377,        double result = tickLabelInsets.getLeft() + tickLabelInsets.getRight();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1379,        Font tickLabelFont = getTickLabelFont();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1380,        FontRenderContext frc = g2.getFontRenderContext();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1381,"        LineMetrics lm = tickLabelFont.getLineMetrics(""ABCxyz"", frc);",0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1382,        if (isVerticalTickLabels()) {,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1389,            DateRange range = (DateRange) getRange();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1390,            Date lower = range.getLowerDate();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1391,            Date upper = range.getUpperDate();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1392,            String lowerStr = null;,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1393,            String upperStr = null;,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1394,            DateFormat formatter = getDateFormatOverride();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1395,            if (formatter != null) {,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1400,                lowerStr = unit.dateToString(lower);,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1401,                upperStr = unit.dateToString(upper);,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1403,            FontMetrics fm = g2.getFontMetrics(tickLabelFont);,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1404,            double w1 = fm.stringWidth(lowerStr);,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1405,            double w2 = fm.stringWidth(upperStr);,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1406,"            result += Math.max(w1, w2);",0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1409,        return result;,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1482,        List result = null;,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1483,        if (RectangleEdge.isTopOrBottom(edge)) {,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1484,"            result = refreshTicksHorizontal(g2, dataArea, edge);",0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1489,        return result;,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1506,        List result = new java.util.ArrayList();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1508,        Font tickLabelFont = getTickLabelFont();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1509,        g2.setFont(tickLabelFont);,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1511,        if (isAutoTickUnitSelection()) {,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1512,"            selectAutoTickUnit(g2, dataArea, edge);",0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1515,        DateTickUnit unit = getTickUnit();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1516,        Date tickDate = calculateLowestVisibleTickValue(unit);,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1517,        Date upperDate = getMaximumDate();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1519,        while (tickDate.before(upperDate)) {,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1521,            if (!isHiddenValue(tickDate.getTime())) {,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1524,                DateFormat formatter = getDateFormatOverride();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1525,                if (formatter != null) {,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1529,                    tickLabel = this.tickUnit.dateToString(tickDate);,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1531,                TextAnchor anchor = null;,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1532,                TextAnchor rotationAnchor = null;,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1533,                double angle = 0.0;,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1534,                if (isVerticalTickLabels()) {,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1545,                    if (edge == RectangleEdge.TOP) {,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1555,"                Tick tick = new DateTick(tickDate, tickLabel, anchor, ",0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1557,                result.add(tick);,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1558,"                tickDate = unit.addToDate(tickDate, this.timeZone);",0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1559,            },0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1566,            switch (unit.getUnit()) {,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1588,        return result;,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1689,        if (!isVisible()) {,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1699,"        AxisState state = drawTickMarksAndLabels(g2, cursor, plotArea, ",0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1704,"        state = drawLabel(getLabel(), g2, plotArea, dataArea, edge, state,",0.18182,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,222,        return this.formatter.format(date);,0.18182,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,253,        Calendar calendar = Calendar.getInstance(zone);,0.18182,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,254,        calendar.setTime(base);,0.18182,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,255,"        calendar.add(getCalendarField(this.unit), this.count);",0.18182,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,256,        return calendar.getTime();,0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,259,            return true;,0.18182,0,-1,0
org/jfree/chart/axis/DateTick,26,74,"        super(date.getTime(), label, textAnchor, rotationAnchor, angle);",0.18182,0,-1,0
org/jfree/chart/axis/DateTick,26,75,        this.date = date;,0.18182,0,-1,0
org/jfree/chart/axis/DateTick,26,77,    },0.18182,0,-1,0
org/jfree/chart/axis/DateAxis,26,1213,                if (this.timeline instanceof SegmentedTimeline) { ,0.17391,0,-1,0
org/jfree/chart/axis/DateAxis,26,1221,                    r = new DateRange();,0.17391,0,-1,0
org/jfree/chart/axis/DateAxis,26,1237,                    long expand = (long) (minRange - range) / 2;,0.17391,0,-1,0
org/jfree/chart/axis/DateAxis,26,1238,                    upper = upper + expand;,0.17391,0,-1,0
org/jfree/chart/axis/DateAxis,26,1239,                    lower = lower - expand;,0.17391,0,-1,0
org/jfree/chart/axis/DateAxis,26,223,            return date.getTime();,0.17391,0,-1,0
org/jfree/chart/labels/StandardCategoryToolTipGenerator,26,96,"        super(labelFormat, formatter);",0.17391,0,-1,0
org/jfree/chart/labels/StandardCategoryToolTipGenerator,26,97,    },0.17391,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,148,                                                 DateFormat formatter) {,0.17391,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,149,        if (labelFormat == null) {,0.17391,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,152,        if (formatter == null) {,0.17391,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,155,        this.labelFormat = labelFormat;,0.17391,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,156,        this.numberFormat = null;,0.17391,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,157,        this.percentFormat = NumberFormat.getPercentInstance();,0.17391,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,158,        this.dateFormat = formatter;,0.17391,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,159,"        this.nullValueString = ""-"";",0.17391,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,160,    },0.17391,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,98,"        super(labelFormat, formatter);",0.17391,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,99,    },0.17391,0,-1,0
org/jfree/chart/ChartFactory,26,606,        else if (orientation == PlotOrientation.VERTICAL) {,0.17391,0,-1,0
org/jfree/chart/ChartFactory,26,607,            ItemLabelPosition position1 = new ItemLabelPosition(,0.17391,0,-1,0
org/jfree/chart/ChartFactory,26,609,            renderer.setBasePositiveItemLabelPosition(position1);,0.17391,0,-1,0
org/jfree/chart/ChartFactory,26,610,            ItemLabelPosition position2 = new ItemLabelPosition(,0.17391,0,-1,0
org/jfree/chart/ChartFactory,26,612,            renderer.setBaseNegativeItemLabelPosition(position2);,0.17391,0,-1,0
org/jfree/chart/ChartFactory,26,1058,        CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel);,0.17391,0,-1,0
org/jfree/chart/ChartFactory,26,1059,        DateAxis dateAxis = new DateAxis(dateAxisLabel);,0.17391,0,-1,0
org/jfree/chart/ChartFactory,26,1061,        CategoryItemRenderer renderer = new GanttRenderer();,0.17391,0,-1,0
org/jfree/chart/ChartFactory,26,1062,        if (tooltips) {,0.17391,0,-1,0
org/jfree/chart/ChartFactory,26,1063,            renderer.setBaseToolTipGenerator(,0.17391,0,-1,0
org/jfree/chart/ChartFactory,26,1067,        if (urls) {,0.17391,0,-1,0
org/jfree/chart/ChartFactory,26,1068,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.17391,0,-1,0
org/jfree/chart/ChartFactory,26,1071,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, dateAxis, ",0.17391,0,-1,0
org/jfree/chart/ChartFactory,26,1073,        plot.setOrientation(PlotOrientation.HORIZONTAL);,0.17391,0,-1,0
org/jfree/chart/ChartFactory,26,1074,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.17391,0,-1,0
org/jfree/chart/ChartFactory,26,1077,        return chart;,0.17391,0,-1,0
org/jfree/chart/axis/DateAxis,26,554,        Date result = null;,0.16667,0,-1,0
org/jfree/chart/axis/DateAxis,26,555,        Range range = getRange();,0.16667,0,-1,0
org/jfree/chart/axis/DateAxis,26,556,        if (range instanceof DateRange) {,0.16667,0,-1,0
org/jfree/chart/axis/DateAxis,26,557,            DateRange r = (DateRange) range;,0.16667,0,-1,0
org/jfree/chart/axis/DateAxis,26,558,            result = r.getLowerDate();,0.16667,0,-1,0
org/jfree/chart/axis/DateAxis,26,559,        },0.16667,0,-1,0
org/jfree/chart/axis/DateAxis,26,563,        return result;,0.16667,0,-1,0
org/jfree/chart/axis/DateAxis,26,604,        Date result = null;,0.16667,0,-1,0
org/jfree/chart/axis/DateAxis,26,605,        Range range = getRange();,0.16667,0,-1,0
org/jfree/chart/axis/DateAxis,26,606,        if (range instanceof DateRange) {,0.16667,0,-1,0
org/jfree/chart/axis/DateAxis,26,607,            DateRange r = (DateRange) range;,0.16667,0,-1,0
org/jfree/chart/axis/DateAxis,26,608,            result = r.getUpperDate();,0.16667,0,-1,0
org/jfree/chart/axis/DateAxis,26,609,        },0.16667,0,-1,0
org/jfree/chart/axis/DateAxis,26,613,        return result;,0.16667,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1026,        return this.defaultAutoRange;,0.16071,0,-1,0
org/jfree/chart/axis/NumberAxis,26,432,                r = getDefaultAutoRange();,0.16071,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2062,            markers = (Collection) this.foregroundRangeMarkers.get(,0.16,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2064,            if (markers == null) {,0.16,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2065,                markers = new java.util.ArrayList();,0.16,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2066,"                this.foregroundRangeMarkers.put(new Integer(index), markers);",0.16,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2068,            markers.add(marker);,0.16,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3650,                xAxis.setPlot(this);,0.16,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3651,                xAxis.addChangeListener(this);,0.16,0,-1,0
org/jfree/chart/ChartFactory,26,954,        if (orientation == null) {,0.16,0,-1,0
org/jfree/chart/ChartFactory,26,957,        CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel);,0.16,0,-1,0
org/jfree/chart/ChartFactory,26,958,        ValueAxis valueAxis = new NumberAxis(valueAxisLabel);,0.16,0,-1,0
org/jfree/chart/ChartFactory,26,960,"        LineAndShapeRenderer renderer = new LineAndShapeRenderer(true, false);",0.16,0,-1,0
org/jfree/chart/ChartFactory,26,961,        if (tooltips) {,0.16,0,-1,0
org/jfree/chart/ChartFactory,26,965,        if (urls) {,0.16,0,-1,0
org/jfree/chart/ChartFactory,26,968,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.16,0,-1,0
org/jfree/chart/ChartFactory,26,970,        plot.setOrientation(orientation);,0.16,0,-1,0
org/jfree/chart/ChartFactory,26,971,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.16,0,-1,0
org/jfree/chart/ChartFactory,26,974,        return chart;,0.16,0,-1,0
org/jfree/chart/util/SortOrder,26,61,        return this.name;,0.15385,0,-1,0
org/jfree/chart/util/SortOrder,26,74,        if (this == obj) {,0.15385,0,-1,0
org/jfree/chart/util/SortOrder,26,77,        if (!(obj instanceof SortOrder)) {,0.15385,0,-1,0
org/jfree/chart/util/SortOrder,26,81,        final SortOrder that = (SortOrder) obj;,0.15385,0,-1,0
org/jfree/chart/util/SortOrder,26,82,        if (!this.name.equals(that.toString())) {,0.15385,0,-1,0
org/jfree/chart/util/SortOrder,26,86,        return true;,0.15385,0,-1,0
org/jfree/chart/util/SortOrder,26,106,        if (this.equals(SortOrder.ASCENDING)) {,0.15385,0,-1,0
org/jfree/chart/util/SortOrder,26,107,            return SortOrder.ASCENDING;,0.15385,0,-1,0
org/jfree/data/time/DateRange,26,120,        return this.lowerDate;,0.15385,0,-1,0
org/jfree/data/time/DateRange,26,129,        return this.upperDate;,0.15385,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1245,"        return findStackedRangeBounds(dataset, 0.0);",0.15385,0,-1,0
org/jfree/chart/JFreeChart,26,1664,            getSubtitle(i).addChangeListener(this);,0.15385,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,289,        this.categoryMargin = margin;,0.15385,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,290,        notifyListeners(new AxisChangeEvent(this));,0.15385,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,291,    },0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3619,        stream.defaultWriteObject();,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3620,"        SerialUtilities.writeStroke(this.domainGridlineStroke, stream);",0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3621,"        SerialUtilities.writePaint(this.domainGridlinePaint, stream);",0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3622,"        SerialUtilities.writeStroke(this.rangeGridlineStroke, stream);",0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3623,"        SerialUtilities.writePaint(this.rangeGridlinePaint, stream);",0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3624,"        SerialUtilities.writeStroke(this.rangeCrosshairStroke, stream);",0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3625,"        SerialUtilities.writePaint(this.rangeCrosshairPaint, stream);",0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3626,    },0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3639,        stream.defaultReadObject();,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3640,        this.domainGridlineStroke = SerialUtilities.readStroke(stream);,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3641,        this.domainGridlinePaint = SerialUtilities.readPaint(stream);,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3642,        this.rangeGridlineStroke = SerialUtilities.readStroke(stream);,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3643,        this.rangeGridlinePaint = SerialUtilities.readPaint(stream);,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3644,        this.rangeCrosshairStroke = SerialUtilities.readStroke(stream);,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3645,        this.rangeCrosshairPaint = SerialUtilities.readPaint(stream);,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3647,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3648,            CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3649,            if (xAxis != null) {,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3654,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3655,            ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(i);,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3656,            if (yAxis != null) {,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3657,                yAxis.setPlot(this);   ,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3658,                yAxis.addChangeListener(this);,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3661,        int datasetCount = this.datasets.size();,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3662,        for (int i = 0; i < datasetCount; i++) {,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3663,            Dataset dataset = (Dataset) this.datasets.get(i);,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3664,            if (dataset != null) {,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3665,                dataset.addChangeListener(this);,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3668,        int rendererCount = this.renderers.size();,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3669,        for (int i = 0; i < rendererCount; i++) {,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3670,            CategoryItemRenderer renderer ,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3672,            if (renderer != null) {,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3673,                renderer.addChangeListener(this);,0.15385,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3677,    },0.15385,0,-1,0
org/jfree/chart/block/LineBorder,26,216,        stream.defaultWriteObject();,0.15385,0,-1,0
org/jfree/chart/block/LineBorder,26,217,"        SerialUtilities.writePaint(this.paint, stream);",0.15385,0,-1,0
org/jfree/chart/block/LineBorder,26,218,"        SerialUtilities.writeStroke(this.stroke, stream);",0.15385,0,-1,0
org/jfree/chart/block/LineBorder,26,219,    },0.15385,0,-1,0
org/jfree/chart/block/LineBorder,26,231,        stream.defaultReadObject();,0.15385,0,-1,0
org/jfree/chart/block/LineBorder,26,232,        this.paint = SerialUtilities.readPaint(stream);,0.15385,0,-1,0
org/jfree/chart/block/LineBorder,26,233,        this.stroke = SerialUtilities.readStroke(stream);,0.15385,0,-1,0
org/jfree/chart/block/LineBorder,26,234,    }    ,0.15385,0,-1,0
org/jfree/chart/JFreeChart,26,1632,        stream.defaultWriteObject();,0.14815,0,-1,0
org/jfree/chart/JFreeChart,26,1633,"        SerialUtilities.writeStroke(this.borderStroke, stream);",0.14815,0,-1,0
org/jfree/chart/JFreeChart,26,1634,"        SerialUtilities.writePaint(this.borderPaint, stream);",0.14815,0,-1,0
org/jfree/chart/JFreeChart,26,1635,"        SerialUtilities.writePaint(this.backgroundPaint, stream);",0.14815,0,-1,0
org/jfree/chart/JFreeChart,26,1636,    },0.14815,0,-1,0
org/jfree/chart/JFreeChart,26,1648,        stream.defaultReadObject();,0.14815,0,-1,0
org/jfree/chart/JFreeChart,26,1649,        this.borderStroke = SerialUtilities.readStroke(stream);,0.14815,0,-1,0
org/jfree/chart/JFreeChart,26,1650,        this.borderPaint = SerialUtilities.readPaint(stream);,0.14815,0,-1,0
org/jfree/chart/JFreeChart,26,1651,        this.backgroundPaint = SerialUtilities.readPaint(stream);,0.14815,0,-1,0
org/jfree/chart/JFreeChart,26,1652,        this.progressListeners = new EventListenerList();,0.14815,0,-1,0
org/jfree/chart/JFreeChart,26,1653,        this.changeListeners = new EventListenerList();,0.14815,0,-1,0
org/jfree/chart/JFreeChart,26,1654,        this.renderingHints = new RenderingHints(,0.14815,0,-1,0
org/jfree/chart/JFreeChart,26,1659,        if (this.title != null) {,0.14815,0,-1,0
org/jfree/chart/JFreeChart,26,1660,            this.title.addChangeListener(this);,0.14815,0,-1,0
org/jfree/chart/JFreeChart,26,1663,        for (int i = 0; i < getSubtitleCount(); i++) {,0.14815,0,-1,0
org/jfree/chart/JFreeChart,26,1666,        this.plot.addChangeListener(this);,0.14815,0,-1,0
org/jfree/chart/JFreeChart,26,1667,    },0.14815,0,-1,0
org/jfree/chart/plot/Marker,26,651,        stream.defaultWriteObject();,0.14815,0,-1,0
org/jfree/chart/plot/Marker,26,652,"        SerialUtilities.writePaint(this.paint, stream);",0.14815,0,-1,0
org/jfree/chart/plot/Marker,26,653,"        SerialUtilities.writeStroke(this.stroke, stream);",0.14815,0,-1,0
org/jfree/chart/plot/Marker,26,654,"        SerialUtilities.writePaint(this.outlinePaint, stream);",0.14815,0,-1,0
org/jfree/chart/plot/Marker,26,655,"        SerialUtilities.writeStroke(this.outlineStroke, stream);",0.14815,0,-1,0
org/jfree/chart/plot/Marker,26,656,"        SerialUtilities.writePaint(this.labelPaint, stream);",0.14815,0,-1,0
org/jfree/chart/plot/Marker,26,657,    },0.14815,0,-1,0
org/jfree/chart/plot/Marker,26,669,        stream.defaultReadObject();,0.14815,0,-1,0
org/jfree/chart/plot/Marker,26,670,        this.paint = SerialUtilities.readPaint(stream);,0.14815,0,-1,0
org/jfree/chart/plot/Marker,26,671,        this.stroke = SerialUtilities.readStroke(stream);,0.14815,0,-1,0
org/jfree/chart/plot/Marker,26,672,        this.outlinePaint = SerialUtilities.readPaint(stream);,0.14815,0,-1,0
org/jfree/chart/plot/Marker,26,673,        this.outlineStroke = SerialUtilities.readStroke(stream);,0.14815,0,-1,0
org/jfree/chart/plot/Marker,26,674,        this.labelPaint = SerialUtilities.readPaint(stream);,0.14815,0,-1,0
org/jfree/chart/plot/Marker,26,675,    },0.14815,0,-1,0
org/jfree/chart/util/RectangleEdge,26,192,            result = RectangleEdge.BOTTOM;,0.14815,0,-1,0
org/jfree/chart/util/RectangleEdge,26,194,        else if (this.equals(RectangleEdge.LEFT)) {,0.14815,0,-1,0
org/jfree/chart/util/RectangleEdge,26,195,            result = RectangleEdge.LEFT;,0.14815,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,261,        else if (this.equals(RectangleAnchor.TOP_LEFT)) {,0.14815,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,262,            result = RectangleAnchor.TOP_LEFT;,0.14815,0,-1,0
org/jfree/chart/title/TextTitle,26,759,        stream.defaultWriteObject();,0.14815,0,-1,0
org/jfree/chart/title/TextTitle,26,760,"        SerialUtilities.writePaint(this.paint, stream);",0.14815,0,-1,0
org/jfree/chart/title/TextTitle,26,761,"        SerialUtilities.writePaint(this.backgroundPaint, stream);",0.14815,0,-1,0
org/jfree/chart/title/TextTitle,26,762,    },0.14815,0,-1,0
org/jfree/chart/title/TextTitle,26,775,        stream.defaultReadObject();,0.14815,0,-1,0
org/jfree/chart/title/TextTitle,26,776,        this.paint = SerialUtilities.readPaint(stream);,0.14815,0,-1,0
org/jfree/chart/title/TextTitle,26,777,        this.backgroundPaint = SerialUtilities.readPaint(stream);,0.14815,0,-1,0
org/jfree/chart/title/TextTitle,26,778,    },0.14815,0,-1,0
org/jfree/chart/title/LegendTitle,26,588,        stream.defaultWriteObject();,0.14815,0,-1,0
org/jfree/chart/title/LegendTitle,26,589,"        SerialUtilities.writePaint(this.backgroundPaint, stream);",0.14815,0,-1,0
org/jfree/chart/title/LegendTitle,26,590,"        SerialUtilities.writePaint(this.itemPaint, stream);",0.14815,0,-1,0
org/jfree/chart/title/LegendTitle,26,591,    },0.14815,0,-1,0
org/jfree/chart/title/LegendTitle,26,603,        stream.defaultReadObject();,0.14815,0,-1,0
org/jfree/chart/title/LegendTitle,26,604,        this.backgroundPaint = SerialUtilities.readPaint(stream);,0.14815,0,-1,0
org/jfree/chart/title/LegendTitle,26,605,        this.itemPaint = SerialUtilities.readPaint(stream);,0.14815,0,-1,0
org/jfree/chart/title/LegendTitle,26,606,    },0.14815,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1465,        if (order == null) {,0.14815,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1468,        this.columnRenderingOrder = order;,0.14815,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1469,        notifyListeners(new PlotChangeEvent(this));,0.14815,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1470,    },0.14815,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,103,        if (!(obj instanceof LengthAdjustmentType)) {,0.14815,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,106,        final LengthAdjustmentType that = (LengthAdjustmentType) obj;,0.14815,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,107,        if (!this.name.equals(that.name)) {,0.14815,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,108,            return false;,0.14815,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,110,        return true;,0.14815,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,130,        if (this.equals(LengthAdjustmentType.NO_CHANGE)) {,0.14815,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,133,        else if (this.equals(LengthAdjustmentType.EXPAND)) {,0.14815,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,136,        else if (this.equals(LengthAdjustmentType.CONTRACT)) {,0.14815,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,137,            return LengthAdjustmentType.CONTRACT;,0.14815,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,112,        super();,0.14815,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,113,        setIncludeBaseInRange(false);,0.14815,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,114,        this.completePaint = Color.green;,0.14815,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,115,        this.incompletePaint = Color.red;,0.14815,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,116,        this.startPercent = 0.35;,0.14815,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,117,        this.endPercent = 0.65;,0.14815,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,118,    },0.14815,0,-1,0
org/jfree/chart/JFreeChart,26,719,        if ((index < 0) || (index >= getSubtitleCount())) {,0.14286,0,-1,0
org/jfree/chart/JFreeChart,26,722,        return (Title) this.subtitles.get(index);,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,110,        return true;,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,122,        if (this.equals(CategoryAnchor.START)) {,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,125,        else if (this.equals(CategoryAnchor.MIDDLE)) {,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,126,            return CategoryAnchor.MIDDLE;,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1190,        stream.defaultWriteObject();,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1191,"        writePaintMap(this.tickLabelPaintMap, stream);",0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1192,    },0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1204,        stream.defaultReadObject();,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1205,        this.tickLabelPaintMap = readPaintMap(stream);,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1206,    },0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1223,        boolean isNull = in.readBoolean();,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1224,        if (isNull) {,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1227,        Map result = new HashMap();,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1228,        int count = in.readInt();,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1229,        for (int i = 0; i < count; i++) {,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1234,        return result;,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1250,        if (map == null) {,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1254,            out.writeBoolean(false);,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1255,            Set keys = map.keySet();,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1256,            int count = keys.size();,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1257,            out.writeInt(count);,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1258,            Iterator iterator = keys.iterator();,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1259,            while (iterator.hasNext()) {,0.14286,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1265,    },0.14286,0,-1,0
org/jfree/chart/util/RectangleEdge,26,189,            result = RectangleEdge.TOP;,0.14286,0,-1,0
org/jfree/chart/util/RectangleEdge,26,191,        else if (this.equals(RectangleEdge.BOTTOM)) {,0.14286,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,87,        return this.name;,0.14286,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,100,        if (this == obj) {,0.14286,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,103,        if (!(obj instanceof CategoryLabelWidthType)) {,0.14286,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,106,        CategoryLabelWidthType t = (CategoryLabelWidthType) obj;,0.14286,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,107,        if (!this.name.equals(t.toString())) {,0.14286,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,108,            return false;,0.14286,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,110,        return true;,0.14286,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,122,        if (this.equals(CategoryLabelWidthType.CATEGORY)) {,0.14286,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,123,            return CategoryLabelWidthType.CATEGORY;,0.14286,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,125,        else if (this.equals(CategoryLabelWidthType.RANGE)) {,0.14286,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,126,            return CategoryLabelWidthType.RANGE;,0.14286,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,247,            result = RectangleAnchor.CENTER;,0.14286,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,250,            result = RectangleAnchor.TOP;,0.14286,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,253,            result = RectangleAnchor.BOTTOM;,0.14286,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,256,            result = RectangleAnchor.LEFT;,0.14286,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,259,            result = RectangleAnchor.RIGHT;,0.14286,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,137,        return true;,0.14286,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,157,        if (this.equals(TextBlockAnchor.TOP_CENTER)) {,0.14286,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,158,            return TextBlockAnchor.TOP_CENTER;,0.14286,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,160,        else if (this.equals(TextBlockAnchor.TOP_LEFT)) {,0.14286,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,163,        else if (this.equals(TextBlockAnchor.TOP_RIGHT)) {,0.14286,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,166,        else if (this.equals(TextBlockAnchor.CENTER)) {,0.14286,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,169,        else if (this.equals(TextBlockAnchor.CENTER_LEFT)) {,0.14286,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,170,            return TextBlockAnchor.CENTER_LEFT;,0.14286,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,172,        else if (this.equals(TextBlockAnchor.CENTER_RIGHT)) {,0.14286,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,173,            return TextBlockAnchor.CENTER_RIGHT;,0.14286,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,175,        else if (this.equals(TextBlockAnchor.BOTTOM_CENTER)) {,0.14286,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,176,            return TextBlockAnchor.BOTTOM_CENTER;,0.14286,0,-1,0
org/jfree/chart/axis/AxisLocation,26,179,            return AxisLocation.TOP_OR_LEFT;,0.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,444,        if (this.includeBaseInRange != include) {,0.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,445,            this.includeBaseInRange = include;,0.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,446,            notifyListeners(new RendererChangeEvent(this));,0.14286,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,448,    },0.14286,0,-1,0
org/jfree/chart/title/Title,26,425,        stream.defaultWriteObject();,0.13793,0,-1,0
org/jfree/chart/title/Title,26,426,    },0.13793,0,-1,0
org/jfree/chart/title/Title,26,438,        stream.defaultReadObject();,0.13793,0,-1,0
org/jfree/chart/title/Title,26,439,        this.listenerList = new EventListenerList();,0.13793,0,-1,0
org/jfree/chart/title/Title,26,440,    },0.13793,0,-1,0
org/jfree/chart/block/AbstractBlock,26,615,        stream.defaultWriteObject();,0.13793,0,-1,0
org/jfree/chart/block/AbstractBlock,26,616,"        SerialUtilities.writeShape(this.bounds, stream);",0.13793,0,-1,0
org/jfree/chart/block/AbstractBlock,26,617,    },0.13793,0,-1,0
org/jfree/chart/block/AbstractBlock,26,629,        stream.defaultReadObject();,0.13793,0,-1,0
org/jfree/chart/block/AbstractBlock,26,630,        this.bounds = (Rectangle2D) SerialUtilities.readShape(stream);,0.13793,0,-1,0
org/jfree/chart/block/AbstractBlock,26,631,    },0.13793,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,87,        return this.name;,0.13793,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,103,        if (!(obj instanceof CategoryAnchor)) {,0.13793,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,106,        CategoryAnchor position = (CategoryAnchor) obj;,0.13793,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,107,        if (!this.name.equals(position.toString())) {,0.13793,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,108,            return false;,0.13793,0,-1,0
org/jfree/chart/util/RectangleEdge,26,92,        return true;,0.13793,0,-1,0
org/jfree/chart/util/RectangleEdge,26,187,        RectangleEdge result = null;,0.13793,0,-1,0
org/jfree/chart/util/RectangleEdge,26,188,        if (this.equals(RectangleEdge.TOP)) {,0.13793,0,-1,0
org/jfree/chart/util/RectangleEdge,26,200,        return result;,0.13793,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,125,        if (this == obj) {,0.13793,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,128,        if (!(obj instanceof TextBlockAnchor)) {,0.13793,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,132,        TextBlockAnchor other = (TextBlockAnchor) obj;,0.13793,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,133,        if (!this.name.equals(other.name)) {,0.13793,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,134,            return false;,0.13793,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,100,        if (this == obj) {,0.13793,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,103,        if (!(obj instanceof HorizontalAlignment)) {,0.13793,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,106,        HorizontalAlignment that = (HorizontalAlignment) obj;,0.13793,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,107,        if (!this.name.equals(that.name)) {,0.13793,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,108,            return false;,0.13793,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,110,        return true;,0.13793,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,130,        HorizontalAlignment result = null;,0.13793,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,131,        if (this.equals(HorizontalAlignment.LEFT)) {,0.13793,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,134,        else if (this.equals(HorizontalAlignment.RIGHT)) {,0.13793,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,137,        else if (this.equals(HorizontalAlignment.CENTER)) {,0.13793,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,138,            result = HorizontalAlignment.CENTER;,0.13793,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,140,        return result;,0.13793,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,100,        if (this == obj) {,0.13793,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,103,        if (!(obj instanceof VerticalAlignment)) {,0.13793,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,107,        VerticalAlignment alignment = (VerticalAlignment) obj;,0.13793,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,108,        if (!this.name.equals(alignment.name)) {,0.13793,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,109,            return false;,0.13793,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,111,        return true;,0.13793,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,131,        if (this.equals(VerticalAlignment.TOP)) {,0.13793,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,134,        else if (this.equals(VerticalAlignment.BOTTOM)) {,0.13793,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,137,        else if (this.equals(VerticalAlignment.CENTER)) {,0.13793,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,138,            return VerticalAlignment.CENTER;,0.13793,0,-1,0
org/jfree/chart/block/BlockBorder,26,228,        stream.defaultWriteObject();,0.13793,0,-1,0
org/jfree/chart/block/BlockBorder,26,229,"        SerialUtilities.writePaint(this.paint, stream);",0.13793,0,-1,0
org/jfree/chart/block/BlockBorder,26,230,    },0.13793,0,-1,0
org/jfree/chart/block/BlockBorder,26,242,        stream.defaultReadObject();,0.13793,0,-1,0
org/jfree/chart/block/BlockBorder,26,243,        this.paint = SerialUtilities.readPaint(stream);,0.13793,0,-1,0
org/jfree/chart/block/BlockBorder,26,244,    },0.13793,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,249,        else if (this.equals(RectangleAnchor.TOP)) {,0.13333,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,252,        else if (this.equals(RectangleAnchor.BOTTOM)) {,0.13333,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,255,        else if (this.equals(RectangleAnchor.LEFT)) {,0.13333,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,258,        else if (this.equals(RectangleAnchor.RIGHT)) {,0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,673,        if (isAutoRange()) {,0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,674,            autoAdjustRange();,0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,676,    },0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,1208,        if (plot instanceof ValueAxisPlot) {,0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,1209,            ValueAxisPlot vap = (ValueAxisPlot) plot;,0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,1211,            Range r = vap.getDataRange(this);,0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,1212,            if (r == null) {,0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,1225,            long upper = this.timeline.toTimelineValue(,0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,1228,            long fixedAutoRange = (long) getFixedAutoRange();,0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,1229,            if (fixedAutoRange > 0.0) {,0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,1233,                lower = this.timeline.toTimelineValue((long) r.getLowerBound());,0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,1234,                double range = upper - lower;,0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,1235,                long minRange = (long) getAutoRangeMinimumSize();,0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,1236,                if (range < minRange) {,0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,1241,                upper = upper + (long) (range * getUpperMargin());,0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,1242,                lower = lower - (long) (range * getLowerMargin());,0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,1245,            upper = this.timeline.toMillisecond(upper);,0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,1246,            lower = this.timeline.toMillisecond(lower);,0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,1247,"            DateRange dr = new DateRange(new Date(lower), new Date(upper));",0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,1248,"            setRange(dr, false, false);",0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,1251,    },0.13333,0,-1,0
org/jfree/chart/axis/DateAxis,26,212,            return millisecond;,0.13333,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,143,        this(false);,0.13333,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,144,    },0.13333,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,153,        super();,0.13333,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,154,        this.renderAsPercentages = renderAsPercentages;,0.13333,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,158,"        ItemLabelPosition p = new ItemLabelPosition(ItemLabelAnchor.CENTER, ",0.13333,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,160,        setBasePositiveItemLabelPosition(p);,0.13333,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,161,        setBaseNegativeItemLabelPosition(p);,0.13333,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,162,        setPositiveItemLabelPositionFallback(null);,0.13333,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,163,        setNegativeItemLabelPositionFallback(null);,0.13333,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,164,    },0.13333,0,-1,0
org/jfree/data/Range,26,232,"            return new Range(value, range.getUpperBound());",0.12903,0,-1,0
org/jfree/chart/JFreeChart,26,706,        return this.subtitles.size();,0.12903,0,-1,0
org/jfree/chart/axis/DateAxis,26,235,            return value;,0.12903,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,384,        this.positiveItemLabelPositionFallback = position;,0.12903,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,385,        notifyListeners(new RendererChangeEvent(this));,0.12903,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,386,    },0.12903,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,411,        this.negativeItemLabelPositionFallback = position;,0.12903,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,412,        notifyListeners(new RendererChangeEvent(this));,0.12903,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,413,    },0.12903,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,100,        if (obj == this) {,0.125,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,105,            return false;,0.12121,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,124,        else if (this.equals(PlotOrientation.VERTICAL)) {,0.12121,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,125,            result = PlotOrientation.VERTICAL;,0.12121,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,176,"        this(DEFAULT_X_OFFSET, DEFAULT_Y_OFFSET);",0.12121,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,177,    },0.12121,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,115,            return false;,0.11765,0,-1,0
org/jfree/chart/axis/DateAxis,26,838,        Calendar calendar = Calendar.getInstance(this.timeZone);,0.11765,0,-1,0
org/jfree/chart/axis/DateAxis,26,839,        calendar.setTime(date);,0.11765,0,-1,0
org/jfree/chart/axis/DateAxis,26,840,        int count = unit.getCount();,0.11765,0,-1,0
org/jfree/chart/axis/DateAxis,26,841,        int current = calendar.get(unit.getCalendarField());,0.11765,0,-1,0
org/jfree/chart/axis/DateAxis,26,842,        int value = count * (current / count);,0.11765,0,-1,0
org/jfree/chart/axis/DateAxis,26,844,        switch (unit.getUnit()) {,0.11765,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,170,        return this.unit;,0.11765,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,179,        return this.count;,0.11765,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,302,        return getCalendarField(this.unit);,0.11765,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,317,        switch (tickUnit) {,0.11765,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,246,                stream.writeInt(i);,0.11765,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,247,                stream.writeObject(object);,0.11765,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,273,"                set(index, stream.readObject());",0.11765,0,-1,0
org/jfree/chart/util/SerialUtilities,26,167,            stream.writeBoolean(true);,0.11765,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,83,        return this.name;,0.11765,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,96,        if (this == o) {,0.11765,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,99,        if (!(o instanceof PlotOrientation)) {,0.11765,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,103,        PlotOrientation orientation = (PlotOrientation) o;,0.11765,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,104,        if (!this.name.equals(orientation.toString())) {,0.11765,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,108,        return true;,0.11765,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,120,        Object result = null;,0.11765,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,121,        if (this.equals(PlotOrientation.HORIZONTAL)) {,0.11765,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,127,        return result;,0.11765,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,187,        super();,0.11765,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,188,        this.xOffset = xOffset;,0.11765,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,189,        this.yOffset = yOffset;,0.11765,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,190,        this.wallPaint = DEFAULT_WALL_PAINT;,0.11765,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,192,"        ItemLabelPosition p1 = new ItemLabelPosition(ItemLabelAnchor.INSIDE12, ",0.11765,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,194,        setBasePositiveItemLabelPosition(p1);,0.11765,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,195,"        ItemLabelPosition p2 = new ItemLabelPosition(ItemLabelAnchor.INSIDE12, ",0.11765,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,197,        setBaseNegativeItemLabelPosition(p2);,0.11765,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,199,    },0.11765,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,91,        return this.name;,0.11765,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,104,        if (this == o) {,0.11765,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,107,        if (!(o instanceof DatasetRenderingOrder)) {,0.11765,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,111,        DatasetRenderingOrder order = (DatasetRenderingOrder) o;,0.11765,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,112,        if (!this.name.equals(order.toString())) {,0.11765,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,113,            return false;,0.11765,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,116,        return true;,0.11765,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,128,        if (this.equals(DatasetRenderingOrder.FORWARD)) {,0.11765,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,131,        else if (this.equals(DatasetRenderingOrder.REVERSE)) {,0.11765,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,132,            return DatasetRenderingOrder.REVERSE;,0.11765,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,100,        if (this == obj) {,0.11429,0,-1,0
org/jfree/chart/axis/AxisLocation,26,130,        return true;,0.11429,0,-1,0
org/jfree/chart/axis/AxisLocation,26,172,        if (this.equals(AxisLocation.TOP_OR_RIGHT)) {,0.11429,0,-1,0
org/jfree/chart/axis/AxisLocation,26,175,        else if (this.equals(AxisLocation.BOTTOM_OR_RIGHT)) {,0.11429,0,-1,0
org/jfree/chart/axis/AxisLocation,26,178,        else if (this.equals(AxisLocation.TOP_OR_LEFT)) {,0.11429,0,-1,0
org/jfree/chart/axis/AxisLocation,26,181,        else if (this.equals(AxisLocation.BOTTOM_OR_LEFT)) {,0.11429,0,-1,0
org/jfree/chart/axis/AxisLocation,26,182,            return AxisLocation.BOTTOM_OR_LEFT;,0.11429,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,244,            final Object object = get(i);,0.11429,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,245,            if (object != null && object instanceof Serializable) {,0.11429,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,271,            int index = stream.readInt();,0.11429,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,272,            if (index != -1) {,0.11429,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,118,        return true;,0.11111,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,245,        RectangleAnchor result = null;,0.11111,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,246,        if (this.equals(RectangleAnchor.CENTER)) {,0.11111,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,273,        return result;,0.11111,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,112,        super();,0.11111,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,113,        this.endType = AreaRendererEndType.TAPER;,0.11111,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,114,    },0.11111,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,85,    private AreaRendererEndType(String name) {,0.11111,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,86,        this.name = name;,0.11111,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,87,    },0.11111,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,59,    public static final AreaRendererEndType TAPER = new AreaRendererEndType(,0.11111,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,66,    public static final AreaRendererEndType TRUNCATE = new AreaRendererEndType(,0.11111,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,73,    public static final AreaRendererEndType LEVEL = new AreaRendererEndType(,0.11111,0,-1,0
org/jfree/data/general/AbstractDataset,26,205,        stream.defaultWriteObject();,0.10811,0,-1,0
org/jfree/data/general/AbstractDataset,26,206,    },0.10811,0,-1,0
org/jfree/data/general/AbstractDataset,26,218,        stream.defaultReadObject();,0.10811,0,-1,0
org/jfree/data/general/AbstractDataset,26,219,        this.listenerList = new EventListenerList();,0.10811,0,-1,0
org/jfree/data/general/AbstractDataset,26,220,"        stream.registerValidation(this, 10);  // see comments about priority of",0.10811,0,-1,0
org/jfree/data/general/AbstractDataset,26,222,    },0.10811,0,-1,0
org/jfree/data/general/AbstractDataset,26,242,       fireDatasetChanged();,0.10811,0,-1,0
org/jfree/data/general/AbstractDataset,26,243,    },0.10811,0,-1,0
org/jfree/chart/event/MarkerChangeEvent,26,67,        super(marker);,0.10811,0,-1,0
org/jfree/chart/event/MarkerChangeEvent,26,68,        this.marker = marker;,0.10811,0,-1,0
org/jfree/chart/event/MarkerChangeEvent,26,69,    },0.10811,0,-1,0
org/jfree/chart/plot/Marker,26,556,        Object[] listeners = this.listenerList.getListenerList();,0.10811,0,-1,0
org/jfree/chart/plot/Marker,26,557,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.10811,0,-1,0
org/jfree/chart/plot/Marker,26,563,    },0.10811,0,-1,0
org/jfree/chart/JFreeChart,26,801,        return this.plot;,0.10345,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,109,        if (!(obj instanceof RectangleAnchor)) {,0.10256,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,113,        final RectangleAnchor order = (RectangleAnchor) obj;,0.10256,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,114,        if (!this.name.equals(order.name)) {,0.10256,0,-1,0
org/jfree/chart/axis/AxisLocation,26,107,        return this.name;,0.10256,0,-1,0
org/jfree/chart/axis/AxisLocation,26,123,        if (!(obj instanceof AxisLocation)) {,0.10256,0,-1,0
org/jfree/chart/axis/AxisLocation,26,126,        AxisLocation location = (AxisLocation) obj;,0.10256,0,-1,0
org/jfree/chart/axis/AxisLocation,26,127,        if (!this.name.equals(location.toString())) {,0.10256,0,-1,0
org/jfree/chart/axis/AxisLocation,26,128,            return false;,0.10256,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,144,            result = GradientPaintTransformType.VERTICAL;,0.1,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,106,        if (this == obj) {,0.09756,0,-1,0
org/jfree/chart/axis/AxisLocation,26,120,        if (this == obj) {,0.09756,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,107,        if (this == obj) {,0.09756,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,110,        if (!(obj instanceof GradientPaintTransformType)) {,0.09756,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,114,        GradientPaintTransformType t = (GradientPaintTransformType) obj;,0.09756,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,115,        if (!this.name.equals(t.name)) {,0.09756,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,116,            return false;,0.09756,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,119,        return true;,0.09756,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,139,        GradientPaintTransformType result = null;,0.09756,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,140,        if (this.equals(GradientPaintTransformType.HORIZONTAL)) {,0.09756,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,143,        else if (this.equals(GradientPaintTransformType.VERTICAL)) {,0.09756,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,152,        return result;,0.09756,0,-1,0
org/jfree/data/RangeType,26,109,        return true;,0.09524,0,-1,0
org/jfree/data/RangeType,26,129,        if (this.equals(RangeType.FULL)) {,0.09524,0,-1,0
org/jfree/data/RangeType,26,130,            return RangeType.FULL;,0.09524,0,-1,0
org/jfree/chart/plot/Plot,26,1267,        stream.defaultWriteObject();,0.09524,0,-1,0
org/jfree/chart/plot/Plot,26,1268,"        SerialUtilities.writePaint(this.noDataMessagePaint, stream);",0.09524,0,-1,0
org/jfree/chart/plot/Plot,26,1269,"        SerialUtilities.writeStroke(this.outlineStroke, stream);",0.09524,0,-1,0
org/jfree/chart/plot/Plot,26,1270,"        SerialUtilities.writePaint(this.outlinePaint, stream);",0.09524,0,-1,0
org/jfree/chart/plot/Plot,26,1272,"        SerialUtilities.writePaint(this.backgroundPaint, stream);",0.09524,0,-1,0
org/jfree/chart/plot/Plot,26,1273,    },0.09524,0,-1,0
org/jfree/chart/plot/Plot,26,1285,        stream.defaultReadObject();,0.09524,0,-1,0
org/jfree/chart/plot/Plot,26,1286,        this.noDataMessagePaint = SerialUtilities.readPaint(stream);,0.09524,0,-1,0
org/jfree/chart/plot/Plot,26,1287,        this.outlineStroke = SerialUtilities.readStroke(stream);,0.09524,0,-1,0
org/jfree/chart/plot/Plot,26,1288,        this.outlinePaint = SerialUtilities.readPaint(stream);,0.09524,0,-1,0
org/jfree/chart/plot/Plot,26,1290,        this.backgroundPaint = SerialUtilities.readPaint(stream);,0.09524,0,-1,0
org/jfree/chart/plot/Plot,26,1292,        this.listenerList = new EventListenerList();,0.09524,0,-1,0
org/jfree/chart/plot/Plot,26,1294,    },0.09524,0,-1,0
org/jfree/chart/plot/Marker,26,145,        this(Color.gray);,0.09524,0,-1,0
org/jfree/chart/plot/Marker,26,146,    },0.09524,0,-1,0
org/jfree/chart/plot/Marker,26,154,"        this(paint, new BasicStroke(0.5f), Color.gray, new BasicStroke(0.5f), ",0.09524,0,-1,0
org/jfree/chart/plot/Marker,26,156,    },0.09524,0,-1,0
org/jfree/chart/util/SerialUtilities,26,286,                double x = stream.readDouble();,0.09524,0,-1,0
org/jfree/chart/util/SerialUtilities,26,287,                double y = stream.readDouble();,0.09524,0,-1,0
org/jfree/chart/util/SerialUtilities,26,288,                double w = stream.readDouble();,0.09524,0,-1,0
org/jfree/chart/util/SerialUtilities,26,289,                double h = stream.readDouble();,0.09524,0,-1,0
org/jfree/chart/util/SerialUtilities,26,290,"                result = new Ellipse2D.Double(x, y, w, h);",0.09524,0,-1,0
org/jfree/chart/util/SerialUtilities,26,291,            },0.09524,0,-1,0
org/jfree/chart/util/SerialUtilities,26,381,                Ellipse2D ellipse = (Ellipse2D) shape;,0.09524,0,-1,0
org/jfree/chart/util/SerialUtilities,26,382,                stream.writeObject(Ellipse2D.class);,0.09524,0,-1,0
org/jfree/chart/util/SerialUtilities,26,383,                stream.writeDouble(ellipse.getX());,0.09524,0,-1,0
org/jfree/chart/util/SerialUtilities,26,384,                stream.writeDouble(ellipse.getY());,0.09524,0,-1,0
org/jfree/chart/util/SerialUtilities,26,385,                stream.writeDouble(ellipse.getWidth());,0.09524,0,-1,0
org/jfree/chart/util/SerialUtilities,26,386,                stream.writeDouble(ellipse.getHeight());,0.09524,0,-1,0
org/jfree/chart/util/SerialUtilities,26,387,            },0.09524,0,-1,0
org/jfree/chart/plot/ValueMarker,26,68,        super();,0.09524,0,-1,0
org/jfree/chart/plot/ValueMarker,26,69,        this.value = value;,0.09524,0,-1,0
org/jfree/chart/plot/ValueMarker,26,70,    },0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,430,        stream.defaultWriteObject();,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,432,        int paintCount = this.paintSequence.length;,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,433,        stream.writeInt(paintCount);,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,434,        for (int i = 0; i < paintCount; i++) {,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,435,"            SerialUtilities.writePaint(this.paintSequence[i], stream);",0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,438,        int outlinePaintCount = this.outlinePaintSequence.length;,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,439,        stream.writeInt(outlinePaintCount);,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,440,        for (int i = 0; i < outlinePaintCount; i++) {,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,441,"            SerialUtilities.writePaint(this.outlinePaintSequence[i], stream);",0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,444,        int strokeCount = this.strokeSequence.length;,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,445,        stream.writeInt(strokeCount);,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,446,        for (int i = 0; i < strokeCount; i++) {,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,447,"            SerialUtilities.writeStroke(this.strokeSequence[i], stream);",0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,450,        int outlineStrokeCount = this.outlineStrokeSequence.length;,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,451,        stream.writeInt(outlineStrokeCount);,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,452,        for (int i = 0; i < outlineStrokeCount; i++) {,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,453,"            SerialUtilities.writeStroke(this.outlineStrokeSequence[i], stream);",0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,456,        int shapeCount = this.shapeSequence.length;,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,457,        stream.writeInt(shapeCount);,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,458,        for (int i = 0; i < shapeCount; i++) {,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,459,"            SerialUtilities.writeShape(this.shapeSequence[i], stream);",0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,462,    },0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,474,        stream.defaultReadObject();,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,476,        int paintCount = stream.readInt();,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,477,        this.paintSequence = new Paint[paintCount];,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,478,        for (int i = 0; i < paintCount; i++) {,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,479,            this.paintSequence[i] = SerialUtilities.readPaint(stream);,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,482,        int outlinePaintCount = stream.readInt();,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,483,        this.outlinePaintSequence = new Paint[outlinePaintCount];,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,484,        for (int i = 0; i < outlinePaintCount; i++) {,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,485,            this.outlinePaintSequence[i] = SerialUtilities.readPaint(stream);,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,488,        int strokeCount = stream.readInt();,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,489,        this.strokeSequence = new Stroke[strokeCount];,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,490,        for (int i = 0; i < strokeCount; i++) {,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,491,            this.strokeSequence[i] = SerialUtilities.readStroke(stream);,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,494,        int outlineStrokeCount = stream.readInt();,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,495,        this.outlineStrokeSequence = new Stroke[outlineStrokeCount];,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,496,        for (int i = 0; i < outlineStrokeCount; i++) {,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,497,            this.outlineStrokeSequence[i] = SerialUtilities.readStroke(stream);,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,500,        int shapeCount = stream.readInt();,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,501,        this.shapeSequence = new Shape[shapeCount];,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,502,        for (int i = 0; i < shapeCount; i++) {,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,503,            this.shapeSequence[i] = SerialUtilities.readShape(stream);,0.09524,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,506,    },0.09524,0,-1,0
org/jfree/data/RangeType,26,86,        return this.name;,0.09302,0,-1,0
org/jfree/data/RangeType,26,102,        if (!(obj instanceof RangeType)) {,0.09302,0,-1,0
org/jfree/data/RangeType,26,105,        RangeType that = (RangeType) obj;,0.09302,0,-1,0
org/jfree/data/RangeType,26,106,        if (!this.name.equals(that.toString())) {,0.09302,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1628,        stream.defaultWriteObject();,0.09091,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1629,"        SerialUtilities.writeShape(this.upArrow, stream);",0.09091,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1630,"        SerialUtilities.writeShape(this.downArrow, stream);",0.09091,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1631,"        SerialUtilities.writeShape(this.leftArrow, stream);",0.09091,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1632,"        SerialUtilities.writeShape(this.rightArrow, stream);",0.09091,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1633,    },0.09091,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1646,        stream.defaultReadObject();,0.09091,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1647,        this.upArrow = SerialUtilities.readShape(stream);,0.09091,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1648,        this.downArrow = SerialUtilities.readShape(stream);,0.09091,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1649,        this.leftArrow = SerialUtilities.readShape(stream);,0.09091,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1650,        this.rightArrow = SerialUtilities.readShape(stream);,0.09091,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1652,    },0.09091,0,-1,0
org/jfree/chart/axis/Axis,26,1343,        stream.defaultWriteObject();,0.08511,0,-1,0
org/jfree/chart/axis/Axis,26,1344,"        SerialUtilities.writePaint(this.labelPaint, stream);",0.08511,0,-1,0
org/jfree/chart/axis/Axis,26,1345,"        SerialUtilities.writePaint(this.tickLabelPaint, stream);",0.08511,0,-1,0
org/jfree/chart/axis/Axis,26,1346,"        SerialUtilities.writeStroke(this.axisLineStroke, stream);",0.08511,0,-1,0
org/jfree/chart/axis/Axis,26,1347,"        SerialUtilities.writePaint(this.axisLinePaint, stream);",0.08511,0,-1,0
org/jfree/chart/axis/Axis,26,1348,"        SerialUtilities.writeStroke(this.tickMarkStroke, stream);",0.08511,0,-1,0
org/jfree/chart/axis/Axis,26,1349,"        SerialUtilities.writePaint(this.tickMarkPaint, stream);",0.08511,0,-1,0
org/jfree/chart/axis/Axis,26,1350,    },0.08511,0,-1,0
org/jfree/chart/axis/Axis,26,1362,        stream.defaultReadObject();,0.08511,0,-1,0
org/jfree/chart/axis/Axis,26,1363,        this.labelPaint = SerialUtilities.readPaint(stream);,0.08511,0,-1,0
org/jfree/chart/axis/Axis,26,1364,        this.tickLabelPaint = SerialUtilities.readPaint(stream);,0.08511,0,-1,0
org/jfree/chart/axis/Axis,26,1365,        this.axisLineStroke = SerialUtilities.readStroke(stream);,0.08511,0,-1,0
org/jfree/chart/axis/Axis,26,1366,        this.axisLinePaint = SerialUtilities.readPaint(stream);,0.08511,0,-1,0
org/jfree/chart/axis/Axis,26,1367,        this.tickMarkStroke = SerialUtilities.readStroke(stream);,0.08511,0,-1,0
org/jfree/chart/axis/Axis,26,1368,        this.tickMarkPaint = SerialUtilities.readPaint(stream);,0.08511,0,-1,0
org/jfree/chart/axis/Axis,26,1369,        this.listenerList = new EventListenerList();,0.08511,0,-1,0
org/jfree/chart/axis/Axis,26,1370,    },0.08511,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3428,        if (obj == this) {,0.08511,0,-1,0
org/jfree/chart/util/SerialUtilities,26,341,                result = (Shape) stream.readObject();,0.08,0,-1,0
org/jfree/chart/util/SerialUtilities,26,418,                stream.writeObject(shape.getClass());,0.08,0,-1,0
org/jfree/chart/util/SerialUtilities,26,419,                stream.writeObject(shape);,0.08,0,-1,0
org/jfree/data/time/DateRange,26,72,"        this(new Date(0), new Date(1));",0.07843,0,-1,0
org/jfree/data/time/DateRange,26,73,    },0.07843,0,-1,0
org/jfree/data/time/DateRange,26,83,"        super(lower.getTime(), upper.getTime());",0.07843,0,-1,0
org/jfree/data/time/DateRange,26,84,        this.lowerDate = lower;,0.07843,0,-1,0
org/jfree/data/time/DateRange,26,85,        this.upperDate = upper;,0.07843,0,-1,0
org/jfree/data/time/DateRange,26,87,    },0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,331,"        this(label, TimeZone.getDefault());",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,332,    },0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,345,"        super(label, DateAxis.createStandardDateTickUnits(zone));",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,196,    private DateTickMarkPosition tickMarkPosition = DateTickMarkPosition.START;,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,346,"        setTickUnit(DateAxis.DEFAULT_DATE_TICK_UNIT, false, false);",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,347,        setAutoRangeMinimumSize(,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,349,"        setRange(DEFAULT_DATE_RANGE, false, false);",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,350,        this.dateFormatOverride = null;,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,351,        this.timeZone = zone;,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,352,        this.timeline = DEFAULT_TIMELINE;,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,353,    },0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,173,    public static final DateRange DEFAULT_DATE_RANGE = new DateRange();,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,180,    public static final DateTickUnit DEFAULT_DATE_TICK_UNIT,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,184,    public static final Date DEFAULT_ANCHOR_DATE = new Date();,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,310,    private static final Timeline DEFAULT_TIMELINE = new DefaultTimeline();,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,451,        this.tickUnit = unit;,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,452,        if (turnOffAutoSelection) {,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,455,        if (notify) {,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,459,    },0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,506,        if (range == null) {,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,511,        if (!(range instanceof DateRange)) {,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,514,"        super.setRange(range, turnOffAutoRange, notify);",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,515,    },0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1078,        if (zone == null) {,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1081,        TickUnits units = new TickUnits();,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1084,"        DateFormat f1 = new SimpleDateFormat(""HH:mm:ss.SSS"");",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1085,"        DateFormat f2 = new SimpleDateFormat(""HH:mm:ss"");",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1086,"        DateFormat f3 = new SimpleDateFormat(""HH:mm"");",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1087,"        DateFormat f4 = new SimpleDateFormat(""d-MMM, HH:mm"");",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1088,"        DateFormat f5 = new SimpleDateFormat(""d-MMM"");",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1089,"        DateFormat f6 = new SimpleDateFormat(""MMM-yyyy"");",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1090,"        DateFormat f7 = new SimpleDateFormat(""yyyy"");",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1092,        f1.setTimeZone(zone);,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1093,        f2.setTimeZone(zone);,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1094,        f3.setTimeZone(zone);,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1095,        f4.setTimeZone(zone);,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1096,        f5.setTimeZone(zone);,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1097,        f6.setTimeZone(zone);,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1098,        f7.setTimeZone(zone);,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1101,"        units.add(new DateTickUnit(DateTickUnit.MILLISECOND, 1, f1));",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1102,"        units.add(new DateTickUnit(DateTickUnit.MILLISECOND, 5, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1104,"        units.add(new DateTickUnit(DateTickUnit.MILLISECOND, 10, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1106,"        units.add(new DateTickUnit(DateTickUnit.MILLISECOND, 25, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1108,"        units.add(new DateTickUnit(DateTickUnit.MILLISECOND, 50, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1110,"        units.add(new DateTickUnit(DateTickUnit.MILLISECOND, 100, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1112,"        units.add(new DateTickUnit(DateTickUnit.MILLISECOND, 250, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1114,"        units.add(new DateTickUnit(DateTickUnit.MILLISECOND, 500, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1118,"        units.add(new DateTickUnit(DateTickUnit.SECOND, 1, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1120,"        units.add(new DateTickUnit(DateTickUnit.SECOND, 5, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1122,"        units.add(new DateTickUnit(DateTickUnit.SECOND, 10, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1124,"        units.add(new DateTickUnit(DateTickUnit.SECOND, 30, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1128,"        units.add(new DateTickUnit(DateTickUnit.MINUTE, 1, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1130,"        units.add(new DateTickUnit(DateTickUnit.MINUTE, 2, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1132,"        units.add(new DateTickUnit(DateTickUnit.MINUTE, 5, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1134,"        units.add(new DateTickUnit(DateTickUnit.MINUTE, 10, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1136,"        units.add(new DateTickUnit(DateTickUnit.MINUTE, 15, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1138,"        units.add(new DateTickUnit(DateTickUnit.MINUTE, 20, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1140,"        units.add(new DateTickUnit(DateTickUnit.MINUTE, 30, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1144,"        units.add(new DateTickUnit(DateTickUnit.HOUR, 1, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1146,"        units.add(new DateTickUnit(DateTickUnit.HOUR, 2, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1148,"        units.add(new DateTickUnit(DateTickUnit.HOUR, 4, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1150,"        units.add(new DateTickUnit(DateTickUnit.HOUR, 6, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1152,"        units.add(new DateTickUnit(DateTickUnit.HOUR, 12, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1156,"        units.add(new DateTickUnit(DateTickUnit.DAY, 1, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1158,"        units.add(new DateTickUnit(DateTickUnit.DAY, 2, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1160,"        units.add(new DateTickUnit(DateTickUnit.DAY, 7, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1162,"        units.add(new DateTickUnit(DateTickUnit.DAY, 15, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1166,"        units.add(new DateTickUnit(DateTickUnit.MONTH, 1, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1168,"        units.add(new DateTickUnit(DateTickUnit.MONTH, 2, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1170,"        units.add(new DateTickUnit(DateTickUnit.MONTH, 3, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1172,"        units.add(new DateTickUnit(DateTickUnit.MONTH, 4,  ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1174,"        units.add(new DateTickUnit(DateTickUnit.MONTH, 6,  ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1178,"        units.add(new DateTickUnit(DateTickUnit.YEAR, 1,  ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1180,"        units.add(new DateTickUnit(DateTickUnit.YEAR, 2,  ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1182,"        units.add(new DateTickUnit(DateTickUnit.YEAR, 5,  ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1184,"        units.add(new DateTickUnit(DateTickUnit.YEAR, 10,  ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1186,"        units.add(new DateTickUnit(DateTickUnit.YEAR, 25, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1188,"        units.add(new DateTickUnit(DateTickUnit.YEAR, 50, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1190,"        units.add(new DateTickUnit(DateTickUnit.YEAR, 100, ",0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1193,        return units;,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1202,        Plot plot = getPlot();,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1204,        if (plot == null) {,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,1205,"            return;  // no plot, no data",0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,133,"        this(unit, count, unit, count, formatter);",0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,135,    },0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,148,"        super(DateTickUnit.getMillisecondCount(unit, count));",0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,149,        this.unit = unit;,0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,150,        this.count = count;,0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,151,        this.rollUnit = rollUnit;,0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,152,        this.rollCount = rollCount;,0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,153,        this.formatter = formatter;,0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,154,        if (formatter == null) {,0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,157,    },0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,425,"    private static final String[] units = {""YEAR"", ""MONTH"", ""DAY"", ""HOUR"", ",0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,352,        switch (unit) {,0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,354,                return (365L * 24L * 60L * 60L * 1000L) * count;,0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,356,                return (31L * 24L * 60L * 60L * 1000L) * count;,0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,358,                return (24L * 60L * 60L * 1000L) * count;,0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,360,                return (60L * 60L * 1000L) * count;,0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,362,                return (60L * 1000L) * count;,0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,364,                return 1000L * count;,0.07843,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,366,                return count;,0.07843,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,77,    private DateTickMarkPosition(String name) {,0.07843,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,78,        this.name = name;,0.07843,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,79,    },0.07843,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,58,    public static final DateTickMarkPosition START,0.07843,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,62,    public static final DateTickMarkPosition MIDDLE,0.07843,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,66,    public static final DateTickMarkPosition END,0.07843,0,-1,0
org/jfree/chart/axis/DateAxis,26,202,"    private static class DefaultTimeline implements Timeline, Serializable {",0.07843,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,161,"    public static final Paint DEFAULT_WALL_PAINT = new Color(0xDD, 0xDD, 0xDD);",0.07843,0,-1,0
org/jfree/chart/axis/ValueAxis,26,986,"        setAutoRangeMinimumSize(size, true);",0.07692,0,-1,0
org/jfree/chart/axis/ValueAxis,26,987,    },0.07692,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1000,        if (size <= 0.0) {,0.07692,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1004,        if (this.autoRangeMinimumSize != size) {,0.07692,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1005,            this.autoRangeMinimumSize = size;,0.07692,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1006,            if (this.autoRange) {,0.07692,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1007,                autoAdjustRange();,0.07692,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1009,            if (notify) {,0.07692,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1010,                notifyListeners(new AxisChangeEvent(this));,0.07692,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1014,    },0.07692,0,-1,0
org/jfree/chart/util/UnitType,26,124,            return UnitType.ABSOLUTE;,0.07547,0,-1,0
org/jfree/chart/util/UnitType,26,93,        if (obj == this) {,0.07407,0,-1,0
org/jfree/chart/util/UnitType,26,96,        if (!(obj instanceof UnitType)) {,0.07407,0,-1,0
org/jfree/chart/util/UnitType,26,99,        UnitType that = (UnitType) obj;,0.07407,0,-1,0
org/jfree/chart/util/UnitType,26,100,        if (!this.name.equals(that.name)) {,0.07407,0,-1,0
org/jfree/chart/util/UnitType,26,103,        return true;,0.07407,0,-1,0
org/jfree/chart/util/UnitType,26,123,        if (this.equals(UnitType.ABSOLUTE)) {,0.07407,0,-1,0
org/jfree/chart/util/SerialUtilities,26,285,            else if (c.equals(Ellipse2D.class)) {,0.07407,0,-1,0
org/jfree/chart/util/SerialUtilities,26,292,            else if (c.equals(Arc2D.class)) {,0.07407,0,-1,0
org/jfree/chart/util/SerialUtilities,26,302,            else if (c.equals(GeneralPath.class)) {,0.07407,0,-1,0
org/jfree/chart/util/SerialUtilities,26,380,            else if (shape instanceof Ellipse2D) {,0.07407,0,-1,0
org/jfree/chart/util/SerialUtilities,26,388,            else if (shape instanceof Arc2D) {,0.07407,0,-1,0
org/jfree/chart/util/SerialUtilities,26,399,            else if (shape instanceof GeneralPath) {,0.07407,0,-1,0
org/jfree/data/general/AbstractDataset,26,172,            if (listeners[i] == DatasetChangeListener.class) {,0.06452,0,-1,0
org/jfree/data/general/AbstractDataset,26,173,                ((DatasetChangeListener) listeners[i + 1]).datasetChanged(,0.06452,0,-1,0
org/jfree/data/RangeType,26,99,        if (this == obj) {,0.05556,0,-1,0
org/jfree/chart/text/TextAnchor,26,195,            result = TextAnchor.BOTTOM_CENTER;,0.05333,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,256,        else if (this.equals(ItemLabelAnchor.OUTSIDE1)) {,0.05333,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,259,        else if (this.equals(ItemLabelAnchor.OUTSIDE2)) {,0.05333,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,262,        else if (this.equals(ItemLabelAnchor.OUTSIDE3)) {,0.05333,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,265,        else if (this.equals(ItemLabelAnchor.OUTSIDE4)) {,0.05333,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,268,        else if (this.equals(ItemLabelAnchor.OUTSIDE5)) {,0.05333,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,271,        else if (this.equals(ItemLabelAnchor.OUTSIDE6)) {,0.05333,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,272,            result = ItemLabelAnchor.OUTSIDE6;,0.05333,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,274,        else if (this.equals(ItemLabelAnchor.OUTSIDE7)) {,0.05333,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,277,        else if (this.equals(ItemLabelAnchor.OUTSIDE8)) {,0.05333,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,280,        else if (this.equals(ItemLabelAnchor.OUTSIDE9)) {,0.05333,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,283,        else if (this.equals(ItemLabelAnchor.OUTSIDE10)) {,0.05333,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,286,        else if (this.equals(ItemLabelAnchor.OUTSIDE11)) {,0.05333,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,289,        else if (this.equals(ItemLabelAnchor.OUTSIDE12)) {,0.05333,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,290,            result = ItemLabelAnchor.OUTSIDE12;,0.05333,0,-1,0
org/jfree/chart/text/TextAnchor,26,186,            result = TextAnchor.TOP_CENTER;,0.05195,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,220,        else if (this.equals(ItemLabelAnchor.INSIDE1)) {,0.05195,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,223,        else if (this.equals(ItemLabelAnchor.INSIDE2)) {,0.05195,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,226,        else if (this.equals(ItemLabelAnchor.INSIDE3)) {,0.05195,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,229,        else if (this.equals(ItemLabelAnchor.INSIDE4)) {,0.05195,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,232,        else if (this.equals(ItemLabelAnchor.INSIDE5)) {,0.05195,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,235,        else if (this.equals(ItemLabelAnchor.INSIDE6)) {,0.05195,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,238,        else if (this.equals(ItemLabelAnchor.INSIDE7)) {,0.05195,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,241,        else if (this.equals(ItemLabelAnchor.INSIDE8)) {,0.05195,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,244,        else if (this.equals(ItemLabelAnchor.INSIDE9)) {,0.05195,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,247,        else if (this.equals(ItemLabelAnchor.INSIDE10)) {,0.05195,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,250,        else if (this.equals(ItemLabelAnchor.INSIDE11)) {,0.05195,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,253,        else if (this.equals(ItemLabelAnchor.INSIDE12)) {,0.05195,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,201,            return false;,0.05128,0,-1,0
org/jfree/chart/util/ShapeList,26,138,        stream.defaultWriteObject();,0.05,0,-1,0
org/jfree/chart/util/ShapeList,26,139,        int count = size();,0.05,0,-1,0
org/jfree/chart/util/ShapeList,26,140,        stream.writeInt(count);,0.05,0,-1,0
org/jfree/chart/util/ShapeList,26,141,        for (int i = 0; i < count; i++) {,0.05,0,-1,0
org/jfree/chart/util/ShapeList,26,152,    },0.05,0,-1,0
org/jfree/chart/util/ShapeList,26,165,        stream.defaultReadObject();,0.05,0,-1,0
org/jfree/chart/util/ShapeList,26,166,        int count = stream.readInt();,0.05,0,-1,0
org/jfree/chart/util/ShapeList,26,167,        for (int i = 0; i < count; i++) {,0.05,0,-1,0
org/jfree/chart/util/ShapeList,26,174,    },0.05,0,-1,0
org/jfree/chart/util/PaintList,26,130,        stream.defaultWriteObject();,0.05,0,-1,0
org/jfree/chart/util/PaintList,26,131,        int count = size();,0.05,0,-1,0
org/jfree/chart/util/PaintList,26,132,        stream.writeInt(count);,0.05,0,-1,0
org/jfree/chart/util/PaintList,26,133,        for (int i = 0; i < count; i++) {,0.05,0,-1,0
org/jfree/chart/util/PaintList,26,144,    },0.05,0,-1,0
org/jfree/chart/util/PaintList,26,157,        stream.defaultReadObject();,0.05,0,-1,0
org/jfree/chart/util/PaintList,26,158,        int count = stream.readInt();,0.05,0,-1,0
org/jfree/chart/util/PaintList,26,159,        for (int i = 0; i < count; i++) {,0.05,0,-1,0
org/jfree/chart/util/PaintList,26,166,    },0.05,0,-1,0
org/jfree/chart/util/StrokeList,26,139,        stream.defaultWriteObject();,0.05,0,-1,0
org/jfree/chart/util/StrokeList,26,140,        int count = size();,0.05,0,-1,0
org/jfree/chart/util/StrokeList,26,141,        stream.writeInt(count);,0.05,0,-1,0
org/jfree/chart/util/StrokeList,26,142,        for (int i = 0; i < count; i++) {,0.05,0,-1,0
org/jfree/chart/util/StrokeList,26,153,    },0.05,0,-1,0
org/jfree/chart/util/StrokeList,26,166,        stream.defaultReadObject();,0.05,0,-1,0
org/jfree/chart/util/StrokeList,26,167,        int count = stream.readInt();,0.05,0,-1,0
org/jfree/chart/util/StrokeList,26,168,        for (int i = 0; i < count; i++) {,0.05,0,-1,0
org/jfree/chart/util/StrokeList,26,175,    },0.05,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,204,        return true;,0.05,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,216,        ItemLabelAnchor result = null;,0.05,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,217,        if (this.equals(ItemLabelAnchor.CENTER)) {,0.05,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,292,        return result;,0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2590,        stream.defaultWriteObject();,0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2591,"        SerialUtilities.writePaint(this.basePaint, stream);",0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2592,"        SerialUtilities.writePaint(this.baseFillPaint, stream);",0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2593,"        SerialUtilities.writePaint(this.baseOutlinePaint, stream);",0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2594,"        SerialUtilities.writeStroke(this.baseStroke, stream);",0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2595,"        SerialUtilities.writeStroke(this.baseOutlineStroke, stream);",0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2596,"        SerialUtilities.writeShape(this.baseShape, stream);",0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2597,"        SerialUtilities.writePaint(this.baseItemLabelPaint, stream);",0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2599,    },0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2612,        stream.defaultReadObject();,0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2613,        this.basePaint = SerialUtilities.readPaint(stream);,0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2614,        this.baseFillPaint = SerialUtilities.readPaint(stream);,0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2615,        this.baseOutlinePaint = SerialUtilities.readPaint(stream);,0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2616,        this.baseStroke = SerialUtilities.readStroke(stream);,0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2617,        this.baseOutlineStroke = SerialUtilities.readStroke(stream);,0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2618,        this.baseShape = SerialUtilities.readShape(stream);,0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2619,        this.baseItemLabelPaint = SerialUtilities.readPaint(stream);,0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2623,        this.listenerList = new EventListenerList();,0.05,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2625,    },0.05,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,179,        return this.name;,0.04938,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,195,        if (!(o instanceof ItemLabelAnchor)) {,0.04938,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,199,        ItemLabelAnchor order = (ItemLabelAnchor) o;,0.04938,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,200,        if (!this.name.equals(order.toString())) {,0.04938,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,88,"        this(DataUtilities.createNumberArray2D(starts),",0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,90,    },0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,104,"        this(null, null, starts, ends);",0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,105,    },0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,139,                                          Number[][] ends) {,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,141,        this.startData = starts;,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,142,        this.endData = ends;,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,144,        if (starts != null && ends != null) {,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,146,"            String baseName = ""org.jfree.data.resources.DataPackageResources"";",0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,147,            ResourceBundle resources = ResourceBundle.getBundle(baseName);,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,149,            int seriesCount = starts.length;,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,150,            if (seriesCount != ends.length) {,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,157,            if (seriesCount > 0) {,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,160,                if (seriesKeys != null) {,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,171,                    String prefix = resources.getString(,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,173,"                    this.seriesKeys = generateKeys(seriesCount, prefix);",0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,177,                int categoryCount = starts[0].length;,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,178,                if (categoryCount != ends[0].length) {,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,185,                if (categoryKeys != null) {,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,194,                    String prefix = resources.getString(,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,196,"                    this.categoryKeys = generateKeys(categoryCount, prefix);",0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,199,            },0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,206,    },0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,217,        int result = 0;,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,218,        if (this.startData != null) {,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,219,            result = this.startData.length;,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,221,        return result;,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,290,        int result = 0;,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,291,        if (this.startData != null) {,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,292,            if (getSeriesCount() > 0) {,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,293,                result = this.startData[0].length;,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,296,        return result;,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,426,        if ((series < 0) || (series >= getSeriesCount())) {,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,432,        if ((category < 0) || (category >= getCategoryCount())) {,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,439,        return this.startData[series][category];,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,476,        if ((series < 0) || (series >= getSeriesCount())) {,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,482,        if ((category < 0) || (category >= getCategoryCount())) {,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,488,        return this.endData[series][category];,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,587,        Comparable[] result = new Comparable[count];,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,589,        for (int i = 0; i < count; i++) {,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,590,            name = prefix + (i + 1);,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,591,            result[i] = name;,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,593,        return result;,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,606,        return this.categoryKeys[column];,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,667,        if ((row >= getRowCount()) || (row < 0)) {,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,671,        return this.seriesKeys[row];,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,684,        return this.categoryKeys.length;,0.04762,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,696,        return this.seriesKeys.length;,0.04762,0,-1,0
org/jfree/data/DataUtilities,26,108,        if (data == null) {,0.04762,0,-1,0
org/jfree/data/DataUtilities,26,111,        Number[] result = new Number[data.length];,0.04762,0,-1,0
org/jfree/data/DataUtilities,26,112,        for (int i = 0; i < data.length; i++) {,0.04762,0,-1,0
org/jfree/data/DataUtilities,26,113,            result[i] = new Double(data[i]);,0.04762,0,-1,0
org/jfree/data/DataUtilities,26,115,        return result;,0.04762,0,-1,0
org/jfree/data/DataUtilities,26,127,        if (data == null) {,0.04762,0,-1,0
org/jfree/data/DataUtilities,26,130,        int l1 = data.length;,0.04762,0,-1,0
org/jfree/data/DataUtilities,26,131,        Number[][] result = new Number[l1][];,0.04762,0,-1,0
org/jfree/data/DataUtilities,26,132,        for (int i = 0; i < l1; i++) {,0.04762,0,-1,0
org/jfree/data/DataUtilities,26,133,            result[i] = createNumberArray(data[i]);,0.04762,0,-1,0
org/jfree/data/DataUtilities,26,135,        return result;,0.04762,0,-1,0
org/jfree/data/resources/DataPackageResources,26,52,public class DataPackageResources extends ListResourceBundle {,0.04762,0,-1,0
org/jfree/data/resources/DataPackageResources,26,64,    private static final Object[][] CONTENTS = {,0.04762,0,-1,0
org/jfree/data/resources/DataPackageResources,26,60,        return CONTENTS;,0.04762,0,-1,0
org/jfree/data/KeyToGroupMap,26,107,        return this.groups.size() + 1;,0.04762,0,-1,0
org/jfree/data/KeyToGroupMap,26,139,        int result = this.groups.indexOf(group);,0.04762,0,-1,0
org/jfree/data/KeyToGroupMap,26,140,        if (result < 0) {,0.04762,0,-1,0
org/jfree/data/KeyToGroupMap,26,141,            if (this.defaultGroup.equals(group)) {,0.04762,0,-1,0
org/jfree/data/KeyToGroupMap,26,142,                result = 0;,0.04762,0,-1,0
org/jfree/data/KeyToGroupMap,26,148,        return result;   ,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,89,    public TaskSeriesCollection() {,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,90,        this.keys = new java.util.ArrayList();,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,91,        this.data = new java.util.ArrayList();,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,92,    },0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,158,        return this.data.size();,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,176,        return this.keys.size();,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,196,        return (Comparable) this.keys.get(index);,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,218,        int result = -1;,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,219,        int count = this.data.size();,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,220,        for (int i = 0; i < count; i++) {,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,221,            TaskSeries s = (TaskSeries) this.data.get(i);,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,222,            if (s.getKey().equals(rowKey)) {,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,223,                result = i;,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,224,                break;,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,227,        return result;,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,238,        TaskSeries series = (TaskSeries) this.data.get(index);,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,239,        return series.getKey();,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,250,        if (series == null) {,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,253,        this.data.add(series);,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,254,        series.addChangeListener(this);,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,257,        Iterator iterator = series.getTasks().iterator();,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,258,        while (iterator.hasNext()) {,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,259,            Task task = (Task) iterator.next();,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,260,            String key = task.getDescription();,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,261,            int index = this.keys.indexOf(key);,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,262,            if (index < 0) {,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,263,                this.keys.add(key);,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,265,        },0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,266,        fireDatasetChanged();,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,267,    },0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,363,        Number result = null;,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,364,        int row = getRowIndex(rowKey);,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,365,        TaskSeries series = (TaskSeries) this.data.get(row);,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,366,        Task task = series.get(columnKey.toString());,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,367,        if (task != null) {,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,368,            TimePeriod duration = task.getDuration();,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,369,            if (duration != null) {,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,370,                result = new Long(duration.getStart().getTime());,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,373,        return result;,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,385,        Comparable rowKey = getRowKey(row);,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,386,        Comparable columnKey = getColumnKey(column);,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,387,"        return getStartValue(rowKey, columnKey);",0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,400,        Number result = null;,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,401,        int row = getRowIndex(rowKey);,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,402,        TaskSeries series = (TaskSeries) this.data.get(row);,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,403,        Task task = series.get(columnKey.toString());,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,404,        if (task != null) {,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,405,            TimePeriod duration = task.getDuration();,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,406,            if (duration != null) {,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,407,                result = new Long(duration.getEnd().getTime());,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,410,        return result;,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,422,        Comparable rowKey = getRowKey(row);,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,423,        Comparable columnKey = getColumnKey(column);,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,424,"        return getEndValue(rowKey, columnKey);",0.04762,0,-1,0
org/jfree/data/gantt/TaskSeries,26,71,        super(name);,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeries,26,72,        this.tasks = new java.util.ArrayList();,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeries,26,73,    },0.04762,0,-1,0
org/jfree/data/gantt/TaskSeries,26,83,        if (task == null) {,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeries,26,86,        this.tasks.add(task);,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeries,26,87,        fireSeriesChanged();,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeries,26,88,    },0.04762,0,-1,0
org/jfree/data/gantt/TaskSeries,26,140,        Task result = null;,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeries,26,141,        int count = this.tasks.size();,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeries,26,142,        for (int i = 0; i < count; i++) {,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeries,26,143,            Task t = (Task) this.tasks.get(i);,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeries,26,144,            if (t.getDescription().equals(description)) {,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeries,26,145,                result = t;,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeries,26,146,                break;,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeries,26,149,        return result;,0.04762,0,-1,0
org/jfree/data/gantt/TaskSeries,26,158,        return Collections.unmodifiableList(this.tasks);,0.04762,0,-1,0
org/jfree/data/gantt/Task,26,86,"    public Task(String description, TimePeriod duration) {",0.04762,0,-1,0
org/jfree/data/gantt/Task,26,87,        if (description == null) {,0.04762,0,-1,0
org/jfree/data/gantt/Task,26,90,        this.description = description;,0.04762,0,-1,0
org/jfree/data/gantt/Task,26,91,        this.duration = duration;,0.04762,0,-1,0
org/jfree/data/gantt/Task,26,92,        this.percentComplete = null;,0.04762,0,-1,0
org/jfree/data/gantt/Task,26,93,        this.subtasks = new java.util.ArrayList();,0.04762,0,-1,0
org/jfree/data/gantt/Task,26,94,    },0.04762,0,-1,0
org/jfree/data/gantt/Task,26,114,        return this.description;,0.04762,0,-1,0
org/jfree/data/gantt/Task,26,135,        return this.duration;,0.04762,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,87,"    public SimpleTimePeriod(Date start, Date end) {",0.04762,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,88,        if (start.getTime() > end.getTime()) {,0.04762,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,91,        this.start = start;,0.04762,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,92,        this.end = end;,0.04762,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,93,    },0.04762,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,101,        return this.start;,0.04762,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,110,        return this.end;,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1306,        Range result = null;,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1307,        if (dataset != null) {,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1310,            int[] groupIndex = new int[dataset.getRowCount()];,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1311,            for (int i = 0; i < dataset.getRowCount(); i++) {,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1312,                groupIndex[i] = map.getGroupIndex(,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1318,            int groupCount = map.getGroupCount();,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1319,            double[] minimum = new double[groupCount];,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1320,            double[] maximum = new double[groupCount];,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1322,            int categoryCount = dataset.getColumnCount();,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1323,            for (int item = 0; item < categoryCount; item++) {,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1324,                double[] positive = new double[groupCount];,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1325,                double[] negative = new double[groupCount];,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1326,                int seriesCount = dataset.getRowCount();,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1327,                for (int series = 0; series < seriesCount; series++) {,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1328,"                    Number number = dataset.getValue(series, item);",0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1329,                    if (number != null) {,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1330,                        double value = number.doubleValue();,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1331,                        if (value > 0.0) {,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1332,                            positive[groupIndex[series]] ,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1335,                        if (value < 0.0) {,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1342,                for (int g = 0; g < groupCount; g++) {,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1343,"                    minimum[g] = Math.min(minimum[g], negative[g]);",0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1344,"                    maximum[g] = Math.max(maximum[g], positive[g]);",0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1347,            for (int j = 0; j < groupCount; j++) {,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1348,                result = Range.combine(,0.04762,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1353,        return result;,0.04762,0,-1,0
org/jfree/chart/axis/DateAxis,26,1575,"                    tickDate = calculateDateForPosition(new Month(tickDate,",0.04762,0,-1,0
org/jfree/chart/axis/DateAxis,26,1577,                    break;,0.04762,0,-1,0
org/jfree/chart/text/TextBlock,26,139,        TextLine last = null;,0.04762,0,-1,0
org/jfree/chart/text/TextBlock,26,140,        final int index = this.lines.size() - 1;,0.04762,0,-1,0
org/jfree/chart/text/TextBlock,26,141,        if (index >= 0) {,0.04762,0,-1,0
org/jfree/chart/text/TextBlock,26,142,            last = (TextLine) this.lines.get(index);,0.04762,0,-1,0
org/jfree/chart/text/TextBlock,26,144,        return last;,0.04762,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,118,        Range r = DatasetUtilities.findStackedRangeBounds(,0.04762,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,120,        return r;,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,134,        return this.xOffset;,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,146,        return this.yOffset;,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,184,        return this.wallPaint;,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,214,        float x0 = (float) dataArea.getX();,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,215,        float x1 = x0 + (float) Math.abs(this.xOffset);,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,216,        float x3 = (float) dataArea.getMaxX();,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,217,        float x2 = x3 - (float) Math.abs(this.xOffset);,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,219,        float y0 = (float) dataArea.getMaxY();,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,220,        float y1 = y0 - (float) Math.abs(this.yOffset);,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,221,        float y3 = (float) dataArea.getMinY();,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,222,        float y2 = y3 + (float) Math.abs(this.yOffset);,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,224,        GeneralPath clip = new GeneralPath();,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,225,"        clip.moveTo(x0, y0);",0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,226,"        clip.lineTo(x0, y2);",0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,227,"        clip.lineTo(x1, y3);",0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,228,"        clip.lineTo(x3, y3);",0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,229,"        clip.lineTo(x3, y1);",0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,230,"        clip.lineTo(x2, y0);",0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,231,        clip.closePath();,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,233,        Composite originalComposite = g2.getComposite();,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,234,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,",0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,238,        Paint backgroundPaint = plot.getBackgroundPaint();,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,239,        if (backgroundPaint != null) {,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,240,            g2.setPaint(backgroundPaint);,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,241,            g2.fill(clip);,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,244,        GeneralPath leftWall = new GeneralPath();,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,245,"        leftWall.moveTo(x0, y0);",0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,246,"        leftWall.lineTo(x0, y2);",0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,247,"        leftWall.lineTo(x1, y3);",0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,248,"        leftWall.lineTo(x1, y1);",0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,249,        leftWall.closePath();,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,250,        g2.setPaint(getWallPaint());,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,251,        g2.fill(leftWall);,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,253,        GeneralPath bottomWall = new GeneralPath();,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,254,"        bottomWall.moveTo(x0, y0);",0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,255,"        bottomWall.lineTo(x1, y1);",0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,256,"        bottomWall.lineTo(x3, y1);",0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,257,"        bottomWall.lineTo(x2, y0);",0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,258,        bottomWall.closePath();,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,259,        g2.setPaint(getWallPaint());,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,260,        g2.fill(bottomWall);,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,263,        g2.setPaint(Color.lightGray);,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,264,"        Line2D corner = new Line2D.Double(x0, y0, x1, y1);",0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,265,        g2.draw(corner);,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,266,"        corner.setLine(x1, y1, x1, y3);",0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,267,        g2.draw(corner);,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,268,"        corner.setLine(x1, y1, x3, y1);",0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,269,        g2.draw(corner);,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,272,        Image backgroundImage = plot.getBackgroundImage();,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,273,        if (backgroundImage != null) {,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,281,        g2.setComposite(originalComposite);,0.04762,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,283,    },0.04762,0,-1,0
org/jfree/chart/text/TextFragment,26,161,        return this.text;,0.04762,0,-1,0
org/jfree/chart/text/TextFragment,26,170,        return this.font;,0.04762,0,-1,0
org/jfree/chart/text/TextFragment,26,179,        return this.paint;,0.04762,0,-1,0
org/jfree/chart/text/TextFragment,26,262,        if (obj == null) {,0.04762,0,-1,0
org/jfree/chart/text/TextFragment,26,265,        if (obj == this) {,0.04762,0,-1,0
org/jfree/chart/text/TextFragment,26,266,            return true;   ,0.04762,0,-1,0
org/jfree/chart/text/TextLine,26,130,        this.fragments.add(fragment);        ,0.04762,0,-1,0
org/jfree/chart/text/TextLine,26,131,    },0.04762,0,-1,0
org/jfree/chart/text/TextLine,26,139,        this.fragments.remove(fragment);,0.04762,0,-1,0
org/jfree/chart/text/TextLine,26,140,    },0.04762,0,-1,0
org/jfree/chart/text/TextLine,26,210,        TextFragment result = null;,0.04762,0,-1,0
org/jfree/chart/text/TextLine,26,211,        if (this.fragments.size() > 0) {,0.04762,0,-1,0
org/jfree/chart/text/TextLine,26,212,            result = (TextFragment) this.fragments.get(this.fragments.size() ,0.04762,0,-1,0
org/jfree/chart/text/TextLine,26,215,        return result;,0.04762,0,-1,0
org/jfree/chart/text/TextUtilities,26,208,        if (current < length) {,0.04762,0,-1,0
org/jfree/chart/text/TextUtilities,26,209,            TextLine lastLine = result.getLastLine();,0.04762,0,-1,0
org/jfree/chart/text/TextUtilities,26,210,            TextFragment lastFragment = lastLine.getLastTextFragment();,0.04762,0,-1,0
org/jfree/chart/text/TextUtilities,26,211,            String oldStr = lastFragment.getText();,0.04762,0,-1,0
org/jfree/chart/text/TextUtilities,26,212,"            String newStr = ""..."";",0.04762,0,-1,0
org/jfree/chart/text/TextUtilities,26,213,            if (oldStr.length() > 3) {,0.04762,0,-1,0
org/jfree/chart/text/TextUtilities,26,214,"                newStr = oldStr.substring(0, oldStr.length() - 3) + ""..."";",0.04762,0,-1,0
org/jfree/chart/text/TextUtilities,26,217,            lastLine.removeFragment(lastFragment);,0.04762,0,-1,0
org/jfree/chart/text/TextUtilities,26,218,"            TextFragment newFragment = new TextFragment(newStr, ",0.04762,0,-1,0
org/jfree/chart/text/TextUtilities,26,220,            lastLine.addFragment(newFragment);,0.04762,0,-1,0
org/jfree/chart/text/TextUtilities,26,222,        return result;,0.04762,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,240,        stream.defaultWriteObject();,0.04706,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,241,        int count = size();,0.04706,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,242,        stream.writeInt(count);,0.04706,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,243,        for (int i = 0; i < count; i++) {,0.04706,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,254,    },0.04706,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,267,        stream.defaultReadObject();,0.04706,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,268,        this.objects = new Object[this.size];,0.04706,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,269,        int count = stream.readInt();,0.04706,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,270,        for (int i = 0; i < count; i++) {,0.04706,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,277,    },0.04706,0,-1,0
org/jfree/data/general/AbstractSeriesDataset,26,67,        super();,0.04545,0,-1,0
org/jfree/data/general/AbstractSeriesDataset,26,68,    },0.04545,0,-1,0
org/jfree/data/KeyToGroupMap,26,160,        if (key == null) {,0.04545,0,-1,0
org/jfree/data/KeyToGroupMap,26,163,        Comparable result = this.defaultGroup;,0.04545,0,-1,0
org/jfree/data/KeyToGroupMap,26,164,        Comparable group = (Comparable) this.keyToGroupMap.get(key);,0.04545,0,-1,0
org/jfree/data/KeyToGroupMap,26,165,        if (group != null) {,0.04545,0,-1,0
org/jfree/data/KeyToGroupMap,26,168,        return result;,0.04545,0,-1,0
org/jfree/chart/text/TextAnchor,26,161,        return true;,0.04545,0,-1,0
org/jfree/chart/text/TextAnchor,26,181,        TextAnchor result = null;,0.04545,0,-1,0
org/jfree/chart/text/TextAnchor,26,182,        if (this.equals(TextAnchor.TOP_LEFT)) {,0.04545,0,-1,0
org/jfree/chart/text/TextAnchor,26,185,        else if (this.equals(TextAnchor.TOP_CENTER)) {,0.04545,0,-1,0
org/jfree/chart/text/TextAnchor,26,188,        else if (this.equals(TextAnchor.TOP_RIGHT)) {,0.04545,0,-1,0
org/jfree/chart/text/TextAnchor,26,191,        else if (this.equals(TextAnchor.BOTTOM_LEFT)) {,0.04545,0,-1,0
org/jfree/chart/text/TextAnchor,26,194,        else if (this.equals(TextAnchor.BOTTOM_CENTER)) {,0.04545,0,-1,0
org/jfree/chart/text/TextAnchor,26,197,        else if (this.equals(TextAnchor.BOTTOM_RIGHT)) {,0.04545,0,-1,0
org/jfree/chart/text/TextAnchor,26,200,        else if (this.equals(TextAnchor.BASELINE_LEFT)) {,0.04545,0,-1,0
org/jfree/chart/text/TextAnchor,26,203,        else if (this.equals(TextAnchor.BASELINE_CENTER)) {,0.04545,0,-1,0
org/jfree/chart/text/TextAnchor,26,206,        else if (this.equals(TextAnchor.BASELINE_RIGHT)) {,0.04545,0,-1,0
org/jfree/chart/text/TextAnchor,26,209,        else if (this.equals(TextAnchor.CENTER_LEFT)) {,0.04545,0,-1,0
org/jfree/chart/text/TextAnchor,26,212,        else if (this.equals(TextAnchor.CENTER)) {,0.04545,0,-1,0
org/jfree/chart/text/TextAnchor,26,213,            result = TextAnchor.CENTER;,0.04545,0,-1,0
org/jfree/chart/text/TextAnchor,26,227,        return result;,0.04545,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,85,"        this(start, end, Color.gray, new BasicStroke(0.5f), Color.gray, ",0.04545,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,87,    },0.04545,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,105,"        super(paint, stroke, outlinePaint, outlineStroke, alpha);",0.04545,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,106,        this.startValue = start;,0.04545,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,107,        this.endValue = end;,0.04545,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,108,        this.gradientPaintTransformer = null;,0.04545,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,109,        setLabelOffsetType(LengthAdjustmentType.CONTRACT);,0.04545,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,111,    },0.04545,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,186,        if (obj == this) {,0.04545,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,189,        if (!(obj instanceof IntervalMarker)) {,0.04545,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,192,        if (!super.equals(obj)) {,0.04545,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,195,        IntervalMarker that = (IntervalMarker) obj;,0.04545,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,196,        if (this.startValue != that.startValue) {,0.04545,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,199,        if (this.endValue != that.endValue) {,0.04545,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,202,"        if (!ObjectUtilities.equal(this.gradientPaintTransformer, ",0.04545,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,206,        return true;,0.04545,0,-1,0
org/jfree/chart/text/TextUtilities,26,201,"            result.addLine(text.substring(current, next), font, paint);",0.04545,0,-1,0
org/jfree/chart/text/TextUtilities,26,202,            lines++;,0.04545,0,-1,0
org/jfree/chart/text/TextUtilities,26,203,            current = next;,0.04545,0,-1,0
org/jfree/chart/text/TextUtilities,26,204,            while (current < text.length()&& text.charAt(current) == '\n') {,0.04545,0,-1,0
org/jfree/chart/text/TextUtilities,26,207,        },0.04545,0,-1,0
org/jfree/chart/text/TextUtilities,26,255,                if (firstWord) {,0.04545,0,-1,0
org/jfree/chart/text/TextUtilities,26,265,                    end = iterator.previous();,0.04545,0,-1,0
org/jfree/chart/text/TextUtilities,26,266,                    return end;,0.04545,0,-1,0
org/jfree/chart/text/TextAnchor,26,152,        if (!(obj instanceof TextAnchor)) {,0.04494,0,-1,0
org/jfree/chart/text/TextAnchor,26,156,        TextAnchor order = (TextAnchor) obj;,0.04494,0,-1,0
org/jfree/chart/text/TextAnchor,26,157,        if (!this.name.equals(order.name)) {,0.04494,0,-1,0
org/jfree/chart/text/TextAnchor,26,158,            return false;,0.04494,0,-1,0
org/jfree/chart/util/SerialUtilities,26,279,                double x = stream.readDouble();,0.04396,0,-1,0
org/jfree/chart/util/SerialUtilities,26,280,                double y = stream.readDouble();,0.04396,0,-1,0
org/jfree/chart/util/SerialUtilities,26,281,                double w = stream.readDouble();,0.04396,0,-1,0
org/jfree/chart/util/SerialUtilities,26,282,                double h = stream.readDouble();,0.04396,0,-1,0
org/jfree/chart/util/SerialUtilities,26,283,"                result = new Rectangle2D.Double(x, y, w, h);",0.04396,0,-1,0
org/jfree/chart/util/SerialUtilities,26,284,            },0.04396,0,-1,0
org/jfree/chart/util/SerialUtilities,26,373,                Rectangle2D rectangle = (Rectangle2D) shape;,0.04396,0,-1,0
org/jfree/chart/util/SerialUtilities,26,374,                stream.writeObject(Rectangle2D.class);,0.04396,0,-1,0
org/jfree/chart/util/SerialUtilities,26,375,                stream.writeDouble(rectangle.getX());,0.04396,0,-1,0
org/jfree/chart/util/SerialUtilities,26,376,                stream.writeDouble(rectangle.getY());,0.04396,0,-1,0
org/jfree/chart/util/SerialUtilities,26,377,                stream.writeDouble(rectangle.getWidth());,0.04396,0,-1,0
org/jfree/chart/util/SerialUtilities,26,378,                stream.writeDouble(rectangle.getHeight());,0.04396,0,-1,0
org/jfree/chart/util/SerialUtilities,26,379,            },0.04396,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,354,        return this.data.getColumnKey(column);,0.04348,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,403,        return this.data.getRowCount();,0.04348,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,412,        return this.data.getColumnCount();,0.04348,0,-1,0
org/jfree/data/time/Month,26,147,"    public Month(Date time, TimeZone zone) {",0.04348,0,-1,0
org/jfree/data/time/Month,26,148,        Calendar calendar = Calendar.getInstance(zone);,0.04348,0,-1,0
org/jfree/data/time/Month,26,149,        calendar.setTime(time);,0.04348,0,-1,0
org/jfree/data/time/Month,26,150,        this.month = calendar.get(Calendar.MONTH) + 1;,0.04348,0,-1,0
org/jfree/data/time/Month,26,151,        this.year = calendar.get(Calendar.YEAR);,0.04348,0,-1,0
org/jfree/data/time/Month,26,152,        peg(calendar);,0.04348,0,-1,0
org/jfree/data/time/Month,26,153,    },0.04348,0,-1,0
org/jfree/data/time/Month,26,193,        return this.firstMillisecond;,0.04348,0,-1,0
org/jfree/data/time/Month,26,219,        this.firstMillisecond = getFirstMillisecond(calendar);,0.04348,0,-1,0
org/jfree/data/time/Month,26,220,        this.lastMillisecond = getLastMillisecond(calendar);,0.04348,0,-1,0
org/jfree/data/time/Month,26,221,    },0.04348,0,-1,0
org/jfree/data/time/Month,26,382,"        calendar.set(this.year, this.month - 1, 1, 0, 0, 0);",0.04348,0,-1,0
org/jfree/data/time/Month,26,383,"        calendar.set(Calendar.MILLISECOND, 0);",0.04348,0,-1,0
org/jfree/data/time/Month,26,386,        return calendar.getTime().getTime();,0.04348,0,-1,0
org/jfree/data/time/Month,26,401,"        int eom = SerialDate.lastDayOfMonth(this.month, this.year);",0.04348,0,-1,0
org/jfree/data/time/Month,26,402,"        calendar.set(this.year, this.month - 1, eom, 23, 59, 59);",0.04348,0,-1,0
org/jfree/data/time/Month,26,403,"        calendar.set(Calendar.MILLISECOND, 999);",0.04348,0,-1,0
org/jfree/data/time/Month,26,406,        return calendar.getTime().getTime();,0.04348,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1523,        if (dataset == null) {,0.04348,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1527,        boolean allItemsNull = true; // we'll set this to false if there is at ,0.04348,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1529,        double minimum = 0.0;,0.04348,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1530,        double maximum = 0.0;,0.04348,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1531,        for (int row = 0; row < dataset.getRowCount(); row++) {,0.04348,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1532,            double runningTotal = 0.0;,0.04348,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1533,            for (int column = 0; column < dataset.getColumnCount() - 1; ,0.04348,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1535,"                Number n = dataset.getValue(row, column);",0.04348,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1536,                if (n != null) {,0.04348,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1537,                    allItemsNull = false;,0.04348,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1538,                    double value = n.doubleValue();,0.04348,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1539,                    runningTotal = runningTotal + value;,0.04348,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1540,"                    minimum = Math.min(minimum, runningTotal);",0.04348,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1541,"                    maximum = Math.max(maximum, runningTotal);",0.04348,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1534,                 column++) {,0.04348,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1545,        if (!allItemsNull) {,0.04348,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1546,"            return new Range(minimum, maximum);",0.04348,0,-1,0
org/jfree/chart/axis/DateAxis,26,964,                years = calendar.get(Calendar.YEAR);,0.04348,0,-1,0
org/jfree/chart/axis/DateAxis,26,965,                calendar.clear(Calendar.MILLISECOND);,0.04348,0,-1,0
org/jfree/chart/axis/DateAxis,26,966,"                calendar.set(years, value, 1, 0, 0, 0);",0.04348,0,-1,0
org/jfree/chart/axis/DateAxis,26,967,"                Month month = new Month(calendar.getTime(), this.timeZone);",0.04348,0,-1,0
org/jfree/chart/axis/DateAxis,26,968,                Date standardDate = calculateDateForPosition(,0.04348,0,-1,0
org/jfree/chart/axis/DateAxis,26,970,                long millis = standardDate.getTime();,0.04348,0,-1,0
org/jfree/chart/axis/DateAxis,26,971,                if (millis >= date.getTime()) {,0.04348,0,-1,0
org/jfree/chart/axis/DateAxis,26,976,                return standardDate;,0.04348,0,-1,0
org/jfree/chart/axis/DateAxis,26,1018,        if (position == null) {,0.04348,0,-1,0
org/jfree/chart/axis/DateAxis,26,1021,        Date result = null;,0.04348,0,-1,0
org/jfree/chart/axis/DateAxis,26,1022,        if (position == DateTickMarkPosition.START) {,0.04348,0,-1,0
org/jfree/chart/axis/DateAxis,26,1023,            result = new Date(period.getFirstMillisecond());,0.04348,0,-1,0
org/jfree/chart/axis/DateAxis,26,1031,        return result;,0.04348,0,-1,0
org/jfree/chart/axis/DateAxis,26,1573,                    break;,0.04348,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,321,                return Calendar.MONTH;,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1110,        if (orientation == null) {,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1113,        CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel);,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1114,        categoryAxis.setCategoryMargin(0.0);,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1116,        ValueAxis valueAxis = new NumberAxis(valueAxisLabel);,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1118,        WaterfallBarRenderer renderer = new WaterfallBarRenderer();,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1119,        if (orientation == PlotOrientation.HORIZONTAL) {,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1120,            ItemLabelPosition position = new ItemLabelPosition(,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1123,            renderer.setBasePositiveItemLabelPosition(position);,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1124,            renderer.setBaseNegativeItemLabelPosition(position);,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1125,         },0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1133,        if (tooltips) {,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1134,            StandardCategoryToolTipGenerator generator ,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1136,            renderer.setBaseToolTipGenerator(generator);,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1138,        if (urls) {,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1139,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1142,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1144,        plot.clearRangeMarkers();,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1145,        Marker baseline = new ValueMarker(0.0);,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1146,        baseline.setPaint(Color.black);,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1147,"        plot.addRangeMarker(baseline, Layer.FOREGROUND);",0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1148,        plot.setOrientation(orientation);,0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1149,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, ",0.04348,0,-1,0
org/jfree/chart/ChartFactory,26,1152,        return chart;,0.04348,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,176,        return DatasetUtilities.findCumulativeRangeBounds(dataset);   ,0.04348,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,88,    public DefaultBoxAndWhiskerCategoryDataset() {,0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,89,        this.data = new KeyedObjects2D();,0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,90,        this.minimumRangeValue = null;,0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,91,        this.maximumRangeValue = null;,0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,92,"        this.rangeBounds = new Range(0.0, 0.0);",0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,93,    },0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,122,"        this.data.addObject(item, rowKey, columnKey);",0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,123,        double minval = Double.NaN;,0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,124,        if (item.getMinOutlier() != null) {,0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,125,            minval = item.getMinOutlier().doubleValue();,0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,127,        double maxval = Double.NaN;,0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,128,        if (item.getMaxOutlier() != null) {,0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,129,            maxval = item.getMaxOutlier().doubleValue();,0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,132,        if (this.maximumRangeValue == null) {,0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,133,            this.maximumRangeValue = new Double(maxval);,0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,139,        if (this.minimumRangeValue == null) {,0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,140,            this.minimumRangeValue = new Double(minval);,0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,146,"        this.rangeBounds = new Range(this.minimumRangeValue.doubleValue(),",0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,149,        fireDatasetChanged();,0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,151,    },0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,385,        return this.data.getRowKey(row);,0.04167,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,456,        return this.rangeBounds;,0.04167,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,114,                             List outliers) {,0.04167,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,116,        this.mean = mean;,0.04167,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,117,        this.median = median;    ,0.04167,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,118,        this.q1 = q1;,0.04167,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,119,        this.q3 = q3;,0.04167,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,120,        this.minRegularValue = minRegularValue;,0.04167,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,121,        this.maxRegularValue = maxRegularValue;,0.04167,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,122,        this.minOutlier = minOutlier;,0.04167,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,123,        this.maxOutlier = maxOutlier;,0.04167,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,124,        this.outliers = outliers;,0.04167,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,126,    },0.04167,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,188,        return this.minOutlier;,0.04167,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,197,        return this.maxOutlier;,0.04167,0,-1,0
org/jfree/data/KeyToGroupMap,26,84,"        this(""Default Group"");",0.04167,0,-1,0
org/jfree/data/KeyToGroupMap,26,85,    },0.04167,0,-1,0
org/jfree/data/KeyToGroupMap,26,92,    public KeyToGroupMap(Comparable defaultGroup) {,0.04167,0,-1,0
org/jfree/data/KeyToGroupMap,26,93,        if (defaultGroup == null) {,0.04167,0,-1,0
org/jfree/data/KeyToGroupMap,26,96,        this.defaultGroup = defaultGroup;,0.04167,0,-1,0
org/jfree/data/KeyToGroupMap,26,97,        this.groups = new ArrayList();,0.04167,0,-1,0
org/jfree/data/KeyToGroupMap,26,98,        this.keyToGroupMap = new HashMap();,0.04167,0,-1,0
org/jfree/data/KeyToGroupMap,26,99,    },0.04167,0,-1,0
org/jfree/chart/plot/Marker,26,222,        if (paint == null) {,0.04167,0,-1,0
org/jfree/chart/plot/Marker,26,225,        this.paint = paint;,0.04167,0,-1,0
org/jfree/chart/plot/Marker,26,226,        notifyListeners(new MarkerChangeEvent(this));,0.04167,0,-1,0
org/jfree/chart/plot/Marker,26,227,    },0.04167,0,-1,0
org/jfree/chart/axis/DateAxis,26,857,"                    calendar.set(Calendar.MILLISECOND, value - 1);",0.04167,0,-1,0
org/jfree/chart/axis/DateAxis,26,858,                    mm = calendar.getTime();,0.04167,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1330,"        setRenderer(index, renderer, true);   ",0.04167,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1331,    },0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,599,            ItemLabelPosition position1 = new ItemLabelPosition(,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,601,            renderer.setBasePositiveItemLabelPosition(position1);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,602,            ItemLabelPosition position2 = new ItemLabelPosition(,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,604,            renderer.setBaseNegativeItemLabelPosition(position2);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,605,         },0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,619,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,662,        if (orientation == null) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,666,        CategoryAxis categoryAxis = new CategoryAxis(domainAxisLabel);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,667,        ValueAxis valueAxis = new NumberAxis(rangeAxisLabel);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,669,        StackedBarRenderer renderer = new StackedBarRenderer();,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,670,        if (tooltips) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,671,            renderer.setBaseToolTipGenerator(,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,674,        if (urls) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,675,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,678,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,680,        plot.setOrientation(orientation);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,681,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,684,        return chart;,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,717,        if (orientation == null) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,720,        CategoryAxis categoryAxis = new CategoryAxis3D(categoryAxisLabel);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,721,        ValueAxis valueAxis = new NumberAxis3D(valueAxisLabel);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,723,        BarRenderer3D renderer = new BarRenderer3D();,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,724,        if (tooltips) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,725,            renderer.setBaseToolTipGenerator(,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,728,        if (urls) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,729,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,732,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,734,        plot.setOrientation(orientation);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,735,        if (orientation == PlotOrientation.HORIZONTAL) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,738,            plot.setRowRenderingOrder(SortOrder.DESCENDING);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,739,            plot.setColumnRenderingOrder(SortOrder.DESCENDING);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,741,        plot.setForegroundAlpha(0.75f);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,743,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,746,        return chart;,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,780,        if (orientation == null) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,783,        CategoryAxis categoryAxis = new CategoryAxis3D(categoryAxisLabel);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,784,        ValueAxis valueAxis = new NumberAxis3D(valueAxisLabel);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,787,        CategoryItemRenderer renderer = new StackedBarRenderer3D();,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,788,        if (tooltips) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,789,            renderer.setBaseToolTipGenerator(,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,792,        if (urls) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,793,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,797,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,799,        plot.setOrientation(orientation);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,800,        if (orientation == PlotOrientation.HORIZONTAL) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,803,            plot.setColumnRenderingOrder(SortOrder.DESCENDING);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,807,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, ",0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,810,        return chart;,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,843,        if (orientation == null) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,846,        CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,847,        categoryAxis.setCategoryMargin(0.0);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,849,        ValueAxis valueAxis = new NumberAxis(valueAxisLabel);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,851,        AreaRenderer renderer = new AreaRenderer();,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,852,        if (tooltips) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,853,            renderer.setBaseToolTipGenerator(,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,856,        if (urls) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,857,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,860,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,862,        plot.setOrientation(orientation);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,863,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,866,        return chart;,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,900,        if (orientation == null) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,903,        CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,904,        ValueAxis valueAxis = new NumberAxis(valueAxisLabel);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,906,        StackedAreaRenderer renderer = new StackedAreaRenderer();,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,907,        if (tooltips) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,908,            renderer.setBaseToolTipGenerator(,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,911,        if (urls) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,912,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,915,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,917,        plot.setOrientation(orientation);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,918,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, ",0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,921,        return chart;,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,962,            renderer.setBaseToolTipGenerator(,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,966,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,1007,        if (orientation == null) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,1010,        CategoryAxis categoryAxis = new CategoryAxis3D(categoryAxisLabel);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,1011,        ValueAxis valueAxis = new NumberAxis3D(valueAxisLabel);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,1013,        LineRenderer3D renderer = new LineRenderer3D();,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,1014,        if (tooltips) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,1015,            renderer.setBaseToolTipGenerator(,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,1018,        if (urls) {,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,1019,            renderer.setBaseURLGenerator(new StandardCategoryURLGenerator());,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,1021,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,1023,        plot.setOrientation(orientation);,0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,1024,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.04167,0,-1,0
org/jfree/chart/ChartFactory,26,1027,        return chart;,0.04167,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,216,        return this.base;    ,0.04167,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,91,        super();,0.04167,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,92,        this.seriesToGroupMap = new KeyToGroupMap();,0.04167,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,93,    },0.04167,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,213,        if (this.renderAsPercentages) {,0.04167,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,217,"            return DatasetUtilities.findStackedRangeBounds(dataset, getBase());",0.04167,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,216,        if (this.renderAsPercentages) {,0.04167,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,220,            return DatasetUtilities.findStackedRangeBounds(dataset);,0.04167,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,166,        if (this.renderAsPercentages) {,0.04167,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,170,            return DatasetUtilities.findStackedRangeBounds(dataset);,0.04167,0,-1,0
org/jfree/chart/util/SerialUtilities,26,264,        if (stream == null) {,0.04082,0,-1,0
org/jfree/chart/util/SerialUtilities,26,267,        Shape result = null;,0.04082,0,-1,0
org/jfree/chart/util/SerialUtilities,26,268,        boolean isNull = stream.readBoolean();,0.04082,0,-1,0
org/jfree/chart/util/SerialUtilities,26,269,        if (!isNull) {,0.04082,0,-1,0
org/jfree/chart/util/SerialUtilities,26,270,            Class c = (Class) stream.readObject();,0.04082,0,-1,0
org/jfree/chart/util/SerialUtilities,26,271,            if (c.equals(Line2D.class)) {,0.04082,0,-1,0
org/jfree/chart/util/SerialUtilities,26,278,            else if (c.equals(Rectangle2D.class)) {,0.04082,0,-1,0
org/jfree/chart/util/SerialUtilities,26,344,        return result;,0.04082,0,-1,0
org/jfree/chart/util/SerialUtilities,26,359,        if (stream == null) {,0.04082,0,-1,0
org/jfree/chart/util/SerialUtilities,26,362,        if (shape != null) {,0.04082,0,-1,0
org/jfree/chart/util/SerialUtilities,26,363,            stream.writeBoolean(false);,0.04082,0,-1,0
org/jfree/chart/util/SerialUtilities,26,364,            if (shape instanceof Line2D) {,0.04082,0,-1,0
org/jfree/chart/util/SerialUtilities,26,372,            else if (shape instanceof Rectangle2D) {,0.04082,0,-1,0
org/jfree/chart/util/SerialUtilities,26,425,    },0.04082,0,-1,0
org/jfree/chart/plot/Marker,26,491,        if (adj == null) {,0.04,0,-1,0
org/jfree/chart/plot/Marker,26,494,        this.labelOffsetType = adj;    ,0.04,0,-1,0
org/jfree/chart/plot/Marker,26,495,        notifyListeners(new MarkerChangeEvent(this));,0.04,0,-1,0
org/jfree/chart/plot/Marker,26,496,    },0.04,0,-1,0
org/jfree/chart/axis/DateAxis,26,847,                years = calendar.get(Calendar.YEAR);,0.04,0,-1,0
org/jfree/chart/axis/DateAxis,26,848,                months = calendar.get(Calendar.MONTH);,0.04,0,-1,0
org/jfree/chart/axis/DateAxis,26,849,                days = calendar.get(Calendar.DATE);,0.04,0,-1,0
org/jfree/chart/axis/DateAxis,26,850,                hours = calendar.get(Calendar.HOUR_OF_DAY);,0.04,0,-1,0
org/jfree/chart/axis/DateAxis,26,851,                minutes = calendar.get(Calendar.MINUTE);,0.04,0,-1,0
org/jfree/chart/axis/DateAxis,26,852,                seconds = calendar.get(Calendar.SECOND);,0.04,0,-1,0
org/jfree/chart/axis/DateAxis,26,853,"                calendar.set(years, months, days, hours, minutes, seconds);",0.04,0,-1,0
org/jfree/chart/axis/DateAxis,26,854,"                calendar.set(Calendar.MILLISECOND, value);",0.04,0,-1,0
org/jfree/chart/axis/DateAxis,26,855,                Date mm = calendar.getTime();,0.04,0,-1,0
org/jfree/chart/axis/DateAxis,26,856,                if (mm.getTime() >= date.getTime()) {,0.04,0,-1,0
org/jfree/chart/axis/DateAxis,26,860,                return calendar.getTime();,0.04,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,331,                return Calendar.MILLISECOND;,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1496,        if (order == null) {,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1499,        this.rowRenderingOrder = order;,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1500,        notifyListeners(new PlotChangeEvent(this));,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1501,    },0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2090,        if (this.backgroundRangeMarkers != null) {,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2091,            Set keys = this.backgroundRangeMarkers.keySet();,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2092,            Iterator iterator = keys.iterator();,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2093,            while (iterator.hasNext()) {,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2094,                Integer key = (Integer) iterator.next();,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2095,                clearRangeMarkers(key.intValue());,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2096,            },0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2097,            this.backgroundRangeMarkers.clear();,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2099,        if (this.foregroundRangeMarkers != null) {,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2100,            Set keys = this.foregroundRangeMarkers.keySet();,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2101,            Iterator iterator = keys.iterator();,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2102,            while (iterator.hasNext()) {,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2106,            this.foregroundRangeMarkers.clear();,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2108,        notifyListeners(new PlotChangeEvent(this));,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2109,    },0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2156,        Integer key = new Integer(index);,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2157,        if (this.backgroundRangeMarkers != null) {,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2158,            Collection markers ,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2160,            if (markers != null) {,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2161,                Iterator iterator = markers.iterator();,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2162,                while (iterator.hasNext()) {,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2163,                    Marker m = (Marker) iterator.next();,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2164,                    m.removeChangeListener(this);,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2165,                },0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2166,                markers.clear();,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2169,        if (this.foregroundRangeMarkers != null) {,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2170,            Collection markers ,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2172,            if (markers != null) {,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2181,        notifyListeners(new PlotChangeEvent(this));,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2182,    },0.04,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,92,        super();,0.04,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,93,        this.seriesBarWidthList = new ObjectList();,0.04,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,94,    },0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,228,        CategoryPlot cp = getPlot();,0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,229,        if (cp == null) {,0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,234,        if (!isSeriesVisible(series) || !isSeriesVisibleInLegend(series)) {,0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,238,        CategoryDataset dataset = cp.getDataset(datasetIndex);,0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,239,"        String label = getLegendItemLabelGenerator().generateLabel(dataset, ",0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,241,        String description = label;,0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,242,        String toolTipText = null; ,0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,243,        if (getLegendItemToolTipGenerator() != null) {,0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,247,        String urlText = null;,0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,248,        if (getLegendItemURLGenerator() != null) {,0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,252,"        Shape shape = new Rectangle2D.Double(-4.0, -4.0, 8.0, 8.0);",0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,253,        Paint paint = lookupSeriesPaint(series);,0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,254,        Paint outlinePaint = lookupSeriesOutlinePaint(series);,0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,255,        Stroke outlineStroke = lookupSeriesOutlineStroke(series);,0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,256,"        LegendItem result = new LegendItem(label, description, toolTipText, ",0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,258,        result.setDataset(dataset);,0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,259,        result.setDatasetIndex(datasetIndex);,0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,260,        result.setSeriesKey(dataset.getRowKey(series));,0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,261,        result.setSeriesIndex(series);,0.04,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,262,        return result;,0.04,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,103,        super();,0.04,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,104,        this.errorIndicatorPaint = Color.gray;,0.04,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,105,    },0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,446,      return new Icon() {,0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,144,        super();,0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,107,    private boolean plotLines = false;,0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,112,    private transient Paint groupPaint = Color.black;,0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,117,    private transient Stroke groupStroke = new BasicStroke(1.0f);,0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,120,"    private transient Icon minIcon = getIcon(new Arc2D.Double(-4, -4, 8, 8, 0,",0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,124,"    private transient Icon maxIcon = getIcon(new Arc2D.Double(-4, -4, 8, 8, 0,",0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,128,"    private transient Icon objectIcon = getIcon(new Line2D.Double(-4, 0, 4, 0),",0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,132,    private int lastCategory = -1;,0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,145,    },0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,443,      final int width = shape.getBounds().width;,0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,444,      final int height = shape.getBounds().height;,0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,445,      final GeneralPath path = new GeneralPath(shape);,0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,446,      return new Icon() {,0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,483,        final int width = shape.getBounds().width;,0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,484,        final int height = shape.getBounds().height;,0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,485,        final GeneralPath path = new GeneralPath(shape);,0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,486,        return new Icon() {,0.04,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,99,"        this(true, true);",0.04,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,100,    },0.04,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,486,        return new Icon() {,0.04,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1347,        CategoryItemRenderer existing ,0.03846,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1349,        if (existing != null) {,0.03846,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1354,"        this.renderers.set(index, renderer);",0.03846,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1355,        if (renderer != null) {,0.03846,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1356,            renderer.setPlot(this);,0.03846,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1357,            renderer.addChangeListener(this);,0.03846,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1360,        configureDomainAxes();,0.03846,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1361,        configureRangeAxes();,0.03846,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1363,        if (notify) {,0.03846,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1364,            notifyListeners(new PlotChangeEvent(this));,0.03846,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1366,    },0.03846,0,-1,0
org/jfree/chart/labels/StandardCategoryToolTipGenerator,26,123,        if (obj == this) {,0.03846,0,-1,0
org/jfree/chart/labels/StandardCategoryToolTipGenerator,26,126,        if (!(obj instanceof StandardCategoryToolTipGenerator)) {,0.03846,0,-1,0
org/jfree/chart/labels/StandardCategoryToolTipGenerator,26,129,        return super.equals(obj);,0.03846,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,95,        super();,0.03846,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,96,        this.itemMargin = DEFAULT_ITEM_MARGIN;,0.03846,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,97,"        this.maxItemWidth = 1.0;  // 100 percent, so it will not apply unless ",0.03846,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,99,    },0.03846,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,110,"        super(linesVisible, shapesVisible);",0.03846,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,111,        this.errorIndicatorPaint = null;,0.03846,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,112,    },0.03846,0,-1,0
org/jfree/chart/util/SerialUtilities,26,186,        if (stream == null) {,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,189,        Stroke result = null;,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,190,        boolean isNull = stream.readBoolean();,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,191,        if (!isNull) {,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,192,            Class c = (Class) stream.readObject();,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,193,            if (c.equals(BasicStroke.class)) {,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,194,                float width = stream.readFloat();,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,195,                int cap = stream.readInt();,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,196,                int join = stream.readInt();,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,197,                float miterLimit = stream.readFloat();,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,198,                float[] dash = (float[]) stream.readObject();,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,199,                float dashPhase = stream.readFloat();,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,200,"                result = new BasicStroke(width, cap, join, miterLimit, dash, ",0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,202,            },0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,207,        return result;,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,225,        if (stream == null) {,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,228,        if (stroke != null) {,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,229,            stream.writeBoolean(false);,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,230,            if (stroke instanceof BasicStroke) {,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,231,                BasicStroke s = (BasicStroke) stroke;,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,232,                stream.writeObject(BasicStroke.class);,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,233,                stream.writeFloat(s.getLineWidth());,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,234,                stream.writeInt(s.getEndCap());,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,235,                stream.writeInt(s.getLineJoin());,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,236,                stream.writeFloat(s.getMiterLimit());,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,237,                stream.writeObject(s.getDashArray());,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,238,                stream.writeFloat(s.getDashPhase());,0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,239,            },0.03738,0,-1,0
org/jfree/chart/util/SerialUtilities,26,248,    },0.03738,0,-1,0
org/jfree/chart/plot/Plot,26,846,        if (this.foregroundAlpha != alpha) {,0.03704,0,-1,0
org/jfree/chart/plot/Plot,26,847,            this.foregroundAlpha = alpha;,0.03704,0,-1,0
org/jfree/chart/plot/Plot,26,848,            notifyListeners(new PlotChangeEvent(this));,0.03704,0,-1,0
org/jfree/chart/plot/Plot,26,850,    },0.03704,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,278,        if (obj == this) {,0.03704,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,281,        if (!(obj instanceof AbstractCategoryItemLabelGenerator)) {,0.03704,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,285,        AbstractCategoryItemLabelGenerator that ,0.03704,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,287,        if (!this.labelFormat.equals(that.labelFormat)) {,0.03704,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,290,"        if (!ObjectUtilities.equal(this.dateFormat, that.dateFormat)) {",0.03704,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,293,"        if (!ObjectUtilities.equal(this.numberFormat, that.numberFormat)) {",0.03704,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,296,        return true;,0.03704,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,117,"        this(new GradientPaint(0.0f, 0.0f, new Color(0x22, 0x22, 0xFF), ",0.03704,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,125,    },0.03704,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,143,        super();,0.03704,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,144,        if (firstBarPaint == null) {,0.03704,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,147,        if (positiveBarPaint == null) {,0.03704,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,151,        if (negativeBarPaint == null) {,0.03704,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,155,        if (lastBarPaint == null) {,0.03704,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,158,        this.firstBarPaint = firstBarPaint;,0.03704,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,159,        this.lastBarPaint = lastBarPaint;,0.03704,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,160,        this.positiveBarPaint = positiveBarPaint;,0.03704,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,161,        this.negativeBarPaint = negativeBarPaint;,0.03704,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,162,        setGradientPaintTransformer(new StandardGradientPaintTransformer(,0.03704,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,164,        setMinimumBarLength(1.0);,0.03704,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,165,    },0.03704,0,-1,0
org/jfree/chart/util/SerialUtilities,26,93,        return Serializable.class.isAssignableFrom(c);,0.0367,0,-1,0
org/jfree/chart/util/SerialUtilities,26,110,        if (stream == null) {,0.0367,0,-1,0
org/jfree/chart/util/SerialUtilities,26,113,        Paint result = null;,0.0367,0,-1,0
org/jfree/chart/util/SerialUtilities,26,114,        boolean isNull = stream.readBoolean();,0.0367,0,-1,0
org/jfree/chart/util/SerialUtilities,26,115,        if (!isNull) {,0.0367,0,-1,0
org/jfree/chart/util/SerialUtilities,26,116,            Class c = (Class) stream.readObject();,0.0367,0,-1,0
org/jfree/chart/util/SerialUtilities,26,117,            if (isSerializable(c)) {,0.0367,0,-1,0
org/jfree/chart/util/SerialUtilities,26,118,                result = (Paint) stream.readObject();,0.0367,0,-1,0
org/jfree/chart/util/SerialUtilities,26,131,        return result;,0.0367,0,-1,0
org/jfree/chart/util/SerialUtilities,26,146,        if (stream == null) {,0.0367,0,-1,0
org/jfree/chart/util/SerialUtilities,26,149,        if (paint != null) {,0.0367,0,-1,0
org/jfree/chart/util/SerialUtilities,26,150,            stream.writeBoolean(false);,0.0367,0,-1,0
org/jfree/chart/util/SerialUtilities,26,151,            stream.writeObject(paint.getClass());,0.0367,0,-1,0
org/jfree/chart/util/SerialUtilities,26,152,            if (paint instanceof Serializable) {,0.0367,0,-1,0
org/jfree/chart/util/SerialUtilities,26,153,                stream.writeObject(paint);,0.0367,0,-1,0
org/jfree/chart/util/SerialUtilities,26,170,    },0.0367,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,331,        this.minimumBarLength = min;,0.03571,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,332,        notifyListeners(new RendererChangeEvent(this));,0.03571,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,333,    },0.03571,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,357,        this.gradientPaintTransformer = transformer;,0.03571,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,358,        notifyListeners(new RendererChangeEvent(this));,0.03571,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,359,    },0.03571,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,138,        this(false);,0.03571,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,139,    },0.03571,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,160,        super();,0.03571,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,161,        this.renderAsPercentages = renderAsPercentages;,0.03571,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,162,    },0.03571,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,119,"        super(true, false);  //Create a line renderer only",0.03571,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,120,        this.xOffset = DEFAULT_X_OFFSET;,0.03571,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,121,        this.yOffset = DEFAULT_Y_OFFSET;,0.03571,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,122,        this.wallPaint = DEFAULT_WALL_PAINT;,0.03571,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,123,    },0.03571,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,104,"    public static final Paint DEFAULT_WALL_PAINT = new Color(0xDD, 0xDD, 0xDD);",0.03571,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,105,        this(false);,0.03571,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,106,    },0.03571,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,115,        super();,0.03571,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,116,        this.renderAsPercentages = renderAsPercentages;,0.03571,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,117,    },0.03571,0,-1,0
org/jfree/chart/plot/Marker,26,544,"        this.listenerList.remove(MarkerChangeListener.class, listener);",0.03448,0,-1,0
org/jfree/chart/plot/Marker,26,545,    },0.03448,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,434,        if (!this.positionForAxisAtBottom.equals(,0.03448,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,438,        if (!this.positionForAxisAtLeft.equals(that.positionForAxisAtLeft)) {,0.03448,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,441,        if (!this.positionForAxisAtRight.equals(that.positionForAxisAtRight)) {,0.03448,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,445,        return true;,0.03448,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,252,        if (!this.rotationAnchor.equals(that.rotationAnchor)) {,0.03448,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,255,        if (this.angle != that.angle) {,0.03448,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,258,        if (this.widthType != that.widthType) {,0.03448,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,261,        if (this.widthRatio != that.widthRatio) {,0.03448,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,264,        return true;,0.03448,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,126,            return true;,0.03448,0,-1,0
org/jfree/chart/block/LineBorder,26,189,        if (obj == this) {,0.03448,0,-1,0
org/jfree/chart/block/LineBorder,26,192,        if (!(obj instanceof LineBorder)) {,0.03448,0,-1,0
org/jfree/chart/block/LineBorder,26,195,        LineBorder that = (LineBorder) obj;,0.03448,0,-1,0
org/jfree/chart/block/LineBorder,26,196,"        if (!PaintUtilities.equal(this.paint, that.paint)) {",0.03448,0,-1,0
org/jfree/chart/block/LineBorder,26,199,"        if (!ObjectUtilities.equal(this.stroke, that.stroke)){",0.03448,0,-1,0
org/jfree/chart/block/LineBorder,26,202,        if (!this.insets.equals(that.insets)) {,0.03448,0,-1,0
org/jfree/chart/block/LineBorder,26,205,        return true;,0.03448,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,135,    public BoxAndWhiskerRenderer() {,0.03448,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,136,        this.artifactPaint = Color.black;,0.03448,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,137,        this.fillBox = true;,0.03448,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,138,        this.itemMargin = 0.20;,0.03448,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,139,    },0.03448,0,-1,0
org/jfree/chart/JFreeChart,26,1600,"        if (!ObjectUtilities.equal(this.plot, that.plot)) {",0.03333,0,-1,0
org/jfree/chart/JFreeChart,26,1603,        if (!PaintUtilities.equal(,0.03333,0,-1,0
org/jfree/chart/JFreeChart,26,1608,"        if (!ObjectUtilities.equal(this.backgroundImage, ",0.03333,0,-1,0
org/jfree/chart/JFreeChart,26,1612,        if (this.backgroundImageAlignment != that.backgroundImageAlignment) {,0.03333,0,-1,0
org/jfree/chart/JFreeChart,26,1615,        if (this.backgroundImageAlpha != that.backgroundImageAlpha) {,0.03333,0,-1,0
org/jfree/chart/JFreeChart,26,1618,        if (this.notify != that.notify) {,0.03333,0,-1,0
org/jfree/chart/JFreeChart,26,1621,        return true;,0.03333,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,423,        if (this == obj) {,0.03333,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,426,        if (!(obj instanceof CategoryLabelPositions)) {,0.03333,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,430,        CategoryLabelPositions that = (CategoryLabelPositions) obj;,0.03333,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,431,        if (!this.positionForAxisAtTop.equals(that.positionForAxisAtTop)) {,0.03333,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,239,        if (obj == this) {,0.03333,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,242,        if (!(obj instanceof CategoryLabelPosition)) {,0.03333,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,245,        CategoryLabelPosition that = (CategoryLabelPosition) obj;,0.03333,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,246,        if (!this.categoryAnchor.equals(that.categoryAnchor)) {,0.03333,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,249,        if (!this.labelAnchor.equals(that.labelAnchor)) {,0.03333,0,-1,0
org/jfree/chart/block/BlockBorder,26,207,        if (!(obj instanceof BlockBorder)) {,0.03333,0,-1,0
org/jfree/chart/block/BlockBorder,26,210,        BlockBorder that = (BlockBorder) obj;,0.03333,0,-1,0
org/jfree/chart/block/BlockBorder,26,211,        if (!this.insets.equals(that.insets)) {,0.03333,0,-1,0
org/jfree/chart/block/BlockBorder,26,214,"        if (!PaintUtilities.equal(this.paint, that.paint)) {",0.03333,0,-1,0
org/jfree/chart/block/BlockBorder,26,217,        return true;,0.03333,0,-1,0
org/jfree/chart/JFreeChart,26,1572,        if (obj == this) {,0.03226,0,-1,0
org/jfree/chart/JFreeChart,26,1575,        if (!(obj instanceof JFreeChart)) {,0.03226,0,-1,0
org/jfree/chart/JFreeChart,26,1578,        JFreeChart that = (JFreeChart) obj;,0.03226,0,-1,0
org/jfree/chart/JFreeChart,26,1579,        if (!this.renderingHints.equals(that.renderingHints)) {,0.03226,0,-1,0
org/jfree/chart/JFreeChart,26,1582,        if (this.borderVisible != that.borderVisible) {,0.03226,0,-1,0
org/jfree/chart/JFreeChart,26,1585,"        if (!ObjectUtilities.equal(this.borderStroke, that.borderStroke)) {",0.03226,0,-1,0
org/jfree/chart/JFreeChart,26,1588,"        if (!PaintUtilities.equal(this.borderPaint, that.borderPaint)) {",0.03226,0,-1,0
org/jfree/chart/JFreeChart,26,1591,        if (!this.padding.equals(that.padding)) {,0.03226,0,-1,0
org/jfree/chart/JFreeChart,26,1594,"        if (!ObjectUtilities.equal(this.title, that.title)) {",0.03226,0,-1,0
org/jfree/chart/JFreeChart,26,1597,"        if (!ObjectUtilities.equal(this.subtitles, that.subtitles)) {",0.03226,0,-1,0
org/jfree/chart/title/TextTitle,26,700,        if (!(obj instanceof TextTitle)) {,0.03226,0,-1,0
org/jfree/chart/title/TextTitle,26,703,        if (!super.equals(obj)) {,0.03226,0,-1,0
org/jfree/chart/title/TextTitle,26,706,        TextTitle that = (TextTitle) obj;,0.03226,0,-1,0
org/jfree/chart/title/TextTitle,26,707,"        if (!ObjectUtilities.equal(this.text, that.text)) {",0.03226,0,-1,0
org/jfree/chart/title/TextTitle,26,710,"        if (!ObjectUtilities.equal(this.font, that.font)) {",0.03226,0,-1,0
org/jfree/chart/title/TextTitle,26,713,"        if (!PaintUtilities.equal(this.paint, that.paint)) {",0.03226,0,-1,0
org/jfree/chart/title/TextTitle,26,716,        if (this.textAlignment != that.textAlignment) {,0.03226,0,-1,0
org/jfree/chart/title/TextTitle,26,719,"        if (!PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)) {",0.03226,0,-1,0
org/jfree/chart/title/TextTitle,26,722,        return true;,0.03226,0,-1,0
org/jfree/chart/plot/Marker,26,586,        if (obj == this) {,0.03125,0,-1,0
org/jfree/chart/plot/Marker,26,589,        if (!(obj instanceof Marker)) {,0.03125,0,-1,0
org/jfree/chart/plot/Marker,26,592,        Marker that = (Marker) obj;,0.03125,0,-1,0
org/jfree/chart/plot/Marker,26,593,"        if (!PaintUtilities.equal(this.paint, that.paint)) {",0.03125,0,-1,0
org/jfree/chart/plot/Marker,26,596,"        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {",0.03125,0,-1,0
org/jfree/chart/plot/Marker,26,599,"        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {",0.03125,0,-1,0
org/jfree/chart/plot/Marker,26,602,"        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {",0.03125,0,-1,0
org/jfree/chart/plot/Marker,26,605,        if (this.alpha != that.alpha) {,0.03125,0,-1,0
org/jfree/chart/plot/Marker,26,608,"        if (!ObjectUtilities.equal(this.label, that.label)) {",0.03125,0,-1,0
org/jfree/chart/plot/Marker,26,611,"        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {",0.03125,0,-1,0
org/jfree/chart/plot/Marker,26,614,"        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {",0.03125,0,-1,0
org/jfree/chart/plot/Marker,26,617,        if (this.labelAnchor != that.labelAnchor) {,0.03125,0,-1,0
org/jfree/chart/plot/Marker,26,620,        if (this.labelTextAnchor != that.labelTextAnchor) {,0.03125,0,-1,0
org/jfree/chart/plot/Marker,26,623,"        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {",0.03125,0,-1,0
org/jfree/chart/plot/Marker,26,626,        if (!this.labelOffsetType.equals(that.labelOffsetType)) {,0.03125,0,-1,0
org/jfree/chart/plot/Marker,26,629,        return true;,0.03125,0,-1,0
org/jfree/chart/title/TextTitle,26,697,        if (obj == this) {,0.03125,0,-1,0
org/jfree/chart/block/FlowArrangement,26,431,        if (!(obj instanceof FlowArrangement)) {,0.03125,0,-1,0
org/jfree/chart/block/FlowArrangement,26,434,        FlowArrangement that = (FlowArrangement) obj;,0.03125,0,-1,0
org/jfree/chart/block/FlowArrangement,26,435,        if (this.horizontalAlignment != that.horizontalAlignment) {,0.03125,0,-1,0
org/jfree/chart/block/FlowArrangement,26,438,        if (this.verticalAlignment != that.verticalAlignment) {,0.03125,0,-1,0
org/jfree/chart/block/FlowArrangement,26,441,        if (this.horizontalGap != that.horizontalGap) {,0.03125,0,-1,0
org/jfree/chart/block/FlowArrangement,26,444,        if (this.verticalGap != that.verticalGap) {,0.03125,0,-1,0
org/jfree/chart/block/FlowArrangement,26,447,        return true;,0.03125,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,361,        if (!(obj instanceof ColumnArrangement)) {,0.03125,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,364,        ColumnArrangement that = (ColumnArrangement) obj;,0.03125,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,365,        if (this.horizontalAlignment != that.horizontalAlignment) {,0.03125,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,368,        if (this.verticalAlignment != that.verticalAlignment) {,0.03125,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,371,        if (this.horizontalGap != that.horizontalGap) {,0.03125,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,374,        if (this.verticalGap != that.verticalGap) {,0.03125,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,377,        return true;,0.03125,0,-1,0
org/jfree/chart/plot/ValueMarker,26,140,        if (!super.equals(obj)) {,0.03125,0,-1,0
org/jfree/chart/plot/ValueMarker,26,143,        if (!(obj instanceof ValueMarker)) {,0.03125,0,-1,0
org/jfree/chart/plot/ValueMarker,26,146,        ValueMarker that = (ValueMarker) obj;,0.03125,0,-1,0
org/jfree/chart/plot/ValueMarker,26,147,        if (this.value != that.value) {,0.03125,0,-1,0
org/jfree/chart/plot/ValueMarker,26,150,        return true;,0.03125,0,-1,0
org/jfree/chart/title/LegendTitle,26,546,        if (!(obj instanceof LegendTitle)) {,0.0303,0,-1,0
org/jfree/chart/title/LegendTitle,26,549,        if (!super.equals(obj)) {,0.0303,0,-1,0
org/jfree/chart/title/LegendTitle,26,552,        LegendTitle that = (LegendTitle) obj;,0.0303,0,-1,0
org/jfree/chart/title/LegendTitle,26,553,"        if (!PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)) {",0.0303,0,-1,0
org/jfree/chart/title/LegendTitle,26,556,        if (this.legendItemGraphicEdge != that.legendItemGraphicEdge) {,0.0303,0,-1,0
org/jfree/chart/title/LegendTitle,26,559,        if (this.legendItemGraphicAnchor != that.legendItemGraphicAnchor) {,0.0303,0,-1,0
org/jfree/chart/title/LegendTitle,26,562,        if (this.legendItemGraphicLocation != that.legendItemGraphicLocation) {,0.0303,0,-1,0
org/jfree/chart/title/LegendTitle,26,565,        if (!this.itemFont.equals(that.itemFont)) {,0.0303,0,-1,0
org/jfree/chart/title/LegendTitle,26,568,        if (!this.itemPaint.equals(that.itemPaint)) {,0.0303,0,-1,0
org/jfree/chart/title/LegendTitle,26,571,        if (!this.hLayout.equals(that.hLayout)) {,0.0303,0,-1,0
org/jfree/chart/title/LegendTitle,26,574,        if (!this.vLayout.equals(that.vLayout)) {,0.0303,0,-1,0
org/jfree/chart/title/LegendTitle,26,577,        return true;,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1152,"        setDataset(0, dataset);",0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1153,    },0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3431,        if (!(obj instanceof CategoryPlot)) {,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3434,        if (!super.equals(obj)) {,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3438,        CategoryPlot that = (CategoryPlot) obj;,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3440,        if (this.orientation != that.orientation) {,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3443,"        if (!ObjectUtilities.equal(this.axisOffset, that.axisOffset)) {",0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3446,        if (!this.domainAxes.equals(that.domainAxes)) {,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3449,        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3452,        if (this.drawSharedDomainAxis != that.drawSharedDomainAxis) {,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3455,        if (!this.rangeAxes.equals(that.rangeAxes)) {,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3458,        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3461,"        if (!ObjectUtilities.equal(this.datasetToDomainAxisMap, ",0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3465,"        if (!ObjectUtilities.equal(this.datasetToRangeAxisMap, ",0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3469,"        if (!ObjectUtilities.equal(this.renderers, that.renderers)) {",0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3472,        if (this.renderingOrder != that.renderingOrder) {,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3475,        if (this.columnRenderingOrder != that.columnRenderingOrder) {,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3478,        if (this.rowRenderingOrder != that.rowRenderingOrder) {,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3481,        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3484,        if (this.domainGridlinePosition != that.domainGridlinePosition) {,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3487,"        if (!ObjectUtilities.equal(this.domainGridlineStroke, ",0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3491,"        if (!PaintUtilities.equal(this.domainGridlinePaint, ",0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3495,        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3498,"        if (!ObjectUtilities.equal(this.rangeGridlineStroke, ",0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3502,"        if (!PaintUtilities.equal(this.rangeGridlinePaint, ",0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3506,        if (this.anchorValue != that.anchorValue) {,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3509,        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3512,        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3515,"        if (!ObjectUtilities.equal(this.rangeCrosshairStroke, ",0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3519,"        if (!PaintUtilities.equal(this.rangeCrosshairPaint, ",0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3523,        if (this.rangeCrosshairLockedOnData ,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3527,"        if (!ObjectUtilities.equal(this.foregroundRangeMarkers, ",0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3531,"        if (!ObjectUtilities.equal(this.backgroundRangeMarkers, ",0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3535,"        if (!ObjectUtilities.equal(this.annotations, that.annotations)) {",0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3538,        if (this.weight != that.weight) {,0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3541,"        if (!ObjectUtilities.equal(this.fixedDomainAxisSpace, ",0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3545,"        if (!ObjectUtilities.equal(this.fixedRangeAxisSpace, ",0.0303,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3550,        return true;,0.0303,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,101,            return true;,0.0303,0,-1,0
org/jfree/chart/block/FlowArrangement,26,428,        if (obj == this) {,0.0303,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,358,        if (obj == this) {,0.0303,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,107,            return true;,0.02857,0,-1,0
org/jfree/chart/title/LegendTitle,26,543,        if (obj == this) {,0.02857,0,-1,0
org/jfree/data/time/SerialDate,26,94,        DATE_FORMAT_SYMBOLS = new SimpleDateFormat().getDateFormatSymbols();,0.02703,0,-1,0
org/jfree/data/time/SerialDate,26,139,    static final int[] LAST_DAY_OF_MONTH =,0.02703,0,-1,0
org/jfree/data/time/SerialDate,26,143,    static final int[] AGGREGATE_DAYS_TO_END_OF_MONTH =,0.02703,0,-1,0
org/jfree/data/time/SerialDate,26,147,    static final int[] AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH =,0.02703,0,-1,0
org/jfree/data/time/SerialDate,26,151,    static final int[] LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_MONTH =,0.02703,0,-1,0
org/jfree/data/time/SerialDate,26,158,        LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH =,0.02703,0,-1,0
org/jfree/data/time/SerialDate,26,546,        final int result = LAST_DAY_OF_MONTH[month];,0.02703,0,-1,0
org/jfree/data/time/SerialDate,26,547,        if (month != FEBRUARY) {,0.02703,0,-1,0
org/jfree/data/time/SerialDate,26,548,            return result;,0.02703,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,72,"public abstract class RegularTimePeriod implements TimePeriod, Comparable, ",0.02564,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,163,    public static final TimeZone DEFAULT_TIME_ZONE = TimeZone.getDefault();,0.02564,0,-1,0
org/jfree/chart/title/Title,26,378,        if (obj == this) {,0.02564,0,-1,0
org/jfree/chart/title/Title,26,381,        if (!(obj instanceof Title)) {,0.02564,0,-1,0
org/jfree/chart/title/Title,26,384,        if (!super.equals(obj)) {,0.02564,0,-1,0
org/jfree/chart/title/Title,26,387,        Title that = (Title) obj;,0.02564,0,-1,0
org/jfree/chart/title/Title,26,388,        if (this.position != that.position) {,0.02564,0,-1,0
org/jfree/chart/title/Title,26,391,        if (this.horizontalAlignment != that.horizontalAlignment) {,0.02564,0,-1,0
org/jfree/chart/title/Title,26,394,        if (this.verticalAlignment != that.verticalAlignment) {,0.02564,0,-1,0
org/jfree/chart/title/Title,26,397,        if (this.notify != that.notify) {,0.02564,0,-1,0
org/jfree/chart/title/Title,26,400,        return true;,0.02564,0,-1,0
org/jfree/chart/block/AbstractBlock,26,558,        if (obj == this) {,0.02564,0,-1,0
org/jfree/chart/block/AbstractBlock,26,561,        if (!(obj instanceof AbstractBlock)) {,0.02564,0,-1,0
org/jfree/chart/block/AbstractBlock,26,564,        AbstractBlock that = (AbstractBlock) obj;,0.02564,0,-1,0
org/jfree/chart/block/AbstractBlock,26,565,"        if (!ObjectUtilities.equal(this.id, that.id)) {",0.02564,0,-1,0
org/jfree/chart/block/AbstractBlock,26,568,        if (!this.frame.equals(that.frame)) {,0.02564,0,-1,0
org/jfree/chart/block/AbstractBlock,26,571,        if (!this.bounds.equals(that.bounds)) {,0.02564,0,-1,0
org/jfree/chart/block/AbstractBlock,26,574,        if (!this.margin.equals(that.margin)) {,0.02564,0,-1,0
org/jfree/chart/block/AbstractBlock,26,577,        if (!this.padding.equals(that.padding)) {,0.02564,0,-1,0
org/jfree/chart/block/AbstractBlock,26,580,        if (this.height != that.height) {,0.02564,0,-1,0
org/jfree/chart/block/AbstractBlock,26,583,        if (this.width != that.width) {,0.02564,0,-1,0
org/jfree/chart/block/AbstractBlock,26,586,        return true;,0.02564,0,-1,0
org/jfree/chart/block/BlockBorder,26,204,        if (obj == this) {,0.02564,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1171,            dataset.addChangeListener(this);,0.025,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3429,            return true;,0.025,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,176,"        this(true, true);",0.025,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,177,    },0.025,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1165,        CategoryDataset existing = (CategoryDataset) this.datasets.get(index);,0.02439,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1166,        if (existing != null) {,0.02439,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1169,"        this.datasets.set(index, dataset);",0.02439,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1170,        if (dataset != null) {,0.02439,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1175,"        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);",0.02439,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1176,        datasetChanged(event);,0.02439,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1178,    },0.02439,0,-1,0
org/jfree/data/general/Series,26,131,        return this.key;,0.02326,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,192,        if (this == o) {,0.02312,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1123,        if (obj == this) {,0.02273,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1126,        if (!(obj instanceof CategoryAxis)) {,0.02273,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1129,        if (!super.equals(obj)) {,0.02273,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1132,        CategoryAxis that = (CategoryAxis) obj;,0.02273,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1133,        if (that.lowerMargin != this.lowerMargin) {,0.02273,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1136,        if (that.upperMargin != this.upperMargin) {,0.02273,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1139,        if (that.categoryMargin != this.categoryMargin) {,0.02273,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1142,        if (that.maximumCategoryLabelWidthRatio ,0.02273,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1146,        if (that.categoryLabelPositionOffset ,0.02273,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1150,"        if (!ObjectUtilities.equal(that.categoryLabelPositions, ",0.02273,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1154,"        if (!ObjectUtilities.equal(that.categoryLabelToolTips, ",0.02273,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1158,"        if (!ObjectUtilities.equal(this.tickLabelFontMap, ",0.02273,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1162,"        if (!equalPaintMaps(this.tickLabelPaintMap, that.tickLabelPaintMap)) {",0.02273,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1165,        return true;,0.02273,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1277,        if (map1.size() != map2.size()) {,0.02273,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1280,        Set keys = map1.keySet();,0.02273,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1281,        Iterator iterator = keys.iterator();,0.02273,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1282,        while (iterator.hasNext()) {,0.02273,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1290,        return true;,0.02273,0,-1,0
org/jfree/chart/plot/ValueMarker,26,137,        if (obj == this) {,0.02273,0,-1,0
org/jfree/chart/text/TextAnchor,26,149,        if (this == obj) {,0.02083,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,109,        if (obj == this) {,0.01667,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,112,        if (!(obj instanceof NumberTickUnit)) {,0.01667,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,115,        if (!super.equals(obj)) {,0.01667,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,118,        NumberTickUnit that = (NumberTickUnit) obj;,0.01667,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,119,        if (!this.formatter.equals(that.formatter)) {,0.01667,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,122,        return true;,0.01667,0,-1,0
org/jfree/chart/util/PaintUtilities,26,79,            return (p2 == null);   ,0.01639,0,-1,0
org/jfree/chart/axis/TickUnit,26,141,        if (obj == null) {,0.01563,0,-1,0
org/jfree/chart/axis/TickUnit,26,144,        if (obj == this) {,0.01563,0,-1,0
org/jfree/chart/axis/TickUnit,26,147,        if (obj instanceof TickUnit) {,0.01563,0,-1,0
org/jfree/chart/axis/TickUnit,26,148,            TickUnit tu = (TickUnit) obj;,0.01563,0,-1,0
org/jfree/chart/axis/TickUnit,26,149,            return this.size == tu.size;,0.01563,0,-1,0
org/jfree/chart/axis/TickUnits,26,207,        if (object == null) {,0.01563,0,-1,0
org/jfree/chart/axis/TickUnits,26,210,        if (object == this) {,0.01563,0,-1,0
org/jfree/chart/axis/TickUnits,26,213,        if (object instanceof TickUnits) {,0.01563,0,-1,0
org/jfree/chart/axis/TickUnits,26,214,            TickUnits tu = (TickUnits) object;,0.01563,0,-1,0
org/jfree/chart/axis/TickUnits,26,215,            return tu.tickUnits.equals(this.tickUnits);,0.01563,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,193,"           if (!ObjectUtilities.equal(get(i), other.get(i))) {",0.01563,0,-1,0
org/jfree/chart/util/RectangleInsets,26,171,        if (this.right != that.right) {,0.01538,0,-1,0
org/jfree/chart/util/RectangleInsets,26,174,        if (this.top != that.top) {,0.01538,0,-1,0
org/jfree/chart/util/RectangleInsets,26,177,        if (this.bottom != that.bottom) {,0.01538,0,-1,0
org/jfree/chart/util/RectangleInsets,26,180,        return true;   ,0.01538,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1034,        if (obj == this) {,0.01429,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1037,        if (!(obj instanceof BarRenderer)) {,0.01429,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1040,        if (!super.equals(obj)) {,0.01429,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1043,        BarRenderer that = (BarRenderer) obj;,0.01429,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1044,        if (this.base != that.base) {,0.01429,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1047,        if (this.itemMargin != that.itemMargin) {,0.01429,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1050,        if (this.drawBarOutline != that.drawBarOutline) {,0.01429,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1053,        if (this.maximumBarWidth != that.maximumBarWidth) {,0.01429,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1056,        if (this.minimumBarLength != that.minimumBarLength) {,0.01429,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1059,"        if (!ObjectUtilities.equal(this.gradientPaintTransformer, ",0.01429,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1063,"        if (!ObjectUtilities.equal(this.positiveItemLabelPositionFallback, ",0.01429,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1067,"        if (!ObjectUtilities.equal(this.negativeItemLabelPositionFallback, ",0.01429,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1071,        return true;,0.01429,0,-1,0
org/jfree/data/RangeType,26,100,            return true;,0.0137,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1336,        if (!(obj instanceof NumberAxis)) {,0.0137,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1339,        if (!super.equals(obj)) {,0.0137,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1342,        NumberAxis that = (NumberAxis) obj;        ,0.0137,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1343,        if (this.autoRangeIncludesZero != that.autoRangeIncludesZero) {,0.0137,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1346,        if (this.autoRangeStickyZero != that.autoRangeStickyZero) {,0.0137,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1349,"        if (!ObjectUtilities.equal(this.tickUnit, that.tickUnit)) {",0.0137,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1352,"        if (!ObjectUtilities.equal(this.numberFormatOverride, ",0.0137,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1356,        if (!this.rangeType.equals(that.rangeType)) {,0.0137,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1359,        return true; ,0.0137,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1333,        if (obj == this) {,0.01351,0,-1,0
org/jfree/data/general/SeriesChangeEvent,26,63,        super(source);,0.01333,0,-1,0
org/jfree/data/general/SeriesChangeEvent,26,64,    },0.01333,0,-1,0
org/jfree/data/general/Series,26,103,"        this(key, null);",0.01333,0,-1,0
org/jfree/data/general/Series,26,104,    },0.01333,0,-1,0
org/jfree/data/general/Series,26,112,"    protected Series(Comparable key, String description) {",0.01333,0,-1,0
org/jfree/data/general/Series,26,113,        if (key == null) {,0.01333,0,-1,0
org/jfree/data/general/Series,26,116,        this.key = key;,0.01333,0,-1,0
org/jfree/data/general/Series,26,117,        this.description = description;,0.01333,0,-1,0
org/jfree/data/general/Series,26,118,        this.listeners = new EventListenerList();,0.01333,0,-1,0
org/jfree/data/general/Series,26,119,        this.propertyChangeSupport = new PropertyChangeSupport(this);,0.01333,0,-1,0
org/jfree/data/general/Series,26,120,        this.notify = true;   ,0.01333,0,-1,0
org/jfree/data/general/Series,26,121,    },0.01333,0,-1,0
org/jfree/data/general/Series,26,277,"        this.listeners.add(SeriesChangeListener.class, listener);",0.01333,0,-1,0
org/jfree/data/general/Series,26,278,    },0.01333,0,-1,0
org/jfree/data/general/Series,26,295,        if (this.notify) {,0.01333,0,-1,0
org/jfree/data/general/Series,26,296,            notifyListeners(new SeriesChangeEvent(this));,0.01333,0,-1,0
org/jfree/data/general/Series,26,298,    },0.01333,0,-1,0
org/jfree/data/general/Series,26,308,        Object[] listenerList = this.listeners.getListenerList();,0.01333,0,-1,0
org/jfree/data/general/Series,26,309,        for (int i = listenerList.length - 2; i >= 0; i -= 2) {,0.01333,0,-1,0
org/jfree/data/general/Series,26,316,    },0.01333,0,-1,0
org/jfree/chart/plot/Plot,26,1179,        if (obj == this) {,0.01333,0,-1,0
org/jfree/chart/plot/Plot,26,1182,        if (!(obj instanceof Plot)) {,0.01333,0,-1,0
org/jfree/chart/plot/Plot,26,1185,        Plot that = (Plot) obj;,0.01333,0,-1,0
org/jfree/chart/plot/Plot,26,1186,"        if (!ObjectUtilities.equal(this.noDataMessage, that.noDataMessage)) {",0.01333,0,-1,0
org/jfree/chart/plot/Plot,26,1189,        if (!ObjectUtilities.equal(,0.01333,0,-1,0
org/jfree/chart/plot/Plot,26,1194,"        if (!PaintUtilities.equal(this.noDataMessagePaint, ",0.01333,0,-1,0
org/jfree/chart/plot/Plot,26,1198,"        if (!ObjectUtilities.equal(this.insets, that.insets)) {",0.01333,0,-1,0
org/jfree/chart/plot/Plot,26,1201,        if (this.outlineVisible != that.outlineVisible) {,0.01333,0,-1,0
org/jfree/chart/plot/Plot,26,1204,"        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {",0.01333,0,-1,0
org/jfree/chart/plot/Plot,26,1207,"        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {",0.01333,0,-1,0
org/jfree/chart/plot/Plot,26,1210,"        if (!PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)) {",0.01333,0,-1,0
org/jfree/chart/plot/Plot,26,1213,"        if (!ObjectUtilities.equal(this.backgroundImage, ",0.01333,0,-1,0
org/jfree/chart/plot/Plot,26,1217,        if (this.backgroundImageAlignment != that.backgroundImageAlignment) {,0.01333,0,-1,0
org/jfree/chart/plot/Plot,26,1220,        if (this.backgroundImageAlpha != that.backgroundImageAlpha) {,0.01333,0,-1,0
org/jfree/chart/plot/Plot,26,1223,        if (this.foregroundAlpha != that.foregroundAlpha) {,0.01333,0,-1,0
org/jfree/chart/plot/Plot,26,1226,        if (this.backgroundAlpha != that.backgroundAlpha) {,0.01333,0,-1,0
org/jfree/chart/plot/Plot,26,1229,        if (!this.drawingSupplier.equals(that.drawingSupplier)) {,0.01333,0,-1,0
org/jfree/chart/plot/Plot,26,1232,        return true;,0.01333,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,146,        if (obj == this) {,0.01333,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,149,        if (!(obj instanceof StandardGradientPaintTransformer)) {,0.01333,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,152,        StandardGradientPaintTransformer that ,0.01333,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,154,        if (this.type != that.type) {,0.01333,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,157,        return true;,0.01333,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,134,"            return equal((Ellipse2D) s1, (Ellipse2D) s2);",0.01333,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,140,"            return equal((Polygon) s1, (Polygon) s2);   ",0.01333,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,186,        if (e1 == null) {,0.01333,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,189,        if (e2 == null) {,0.01333,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,192,        if (!e1.getFrame().equals(e2.getFrame())) {,0.01333,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,195,        return true;,0.01333,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,239,        if (p1 == null) {,0.01333,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,242,        if (p2 == null) {,0.01333,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,245,        if (p1.npoints != p2.npoints) {,0.01333,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,248,"        if (!Arrays.equals(p1.xpoints, p2.xpoints)) {",0.01333,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,251,"        if (!Arrays.equals(p1.ypoints, p2.ypoints)) {",0.01333,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,254,        return true;,0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,350,        if (obj == this) {,0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,354,        if (!(obj instanceof DefaultDrawingSupplier)) {,0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,358,        DefaultDrawingSupplier that = (DefaultDrawingSupplier) obj;,0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,360,"        if (!Arrays.equals(this.paintSequence, that.paintSequence)) {",0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,363,        if (this.paintIndex != that.paintIndex) {,0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,366,"        if (!Arrays.equals(this.outlinePaintSequence, ",0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,370,        if (this.outlinePaintIndex != that.outlinePaintIndex) {,0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,373,"        if (!Arrays.equals(this.strokeSequence, that.strokeSequence)) {",0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,376,        if (this.strokeIndex != that.strokeIndex) {,0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,379,"        if (!Arrays.equals(this.outlineStrokeSequence, ",0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,383,        if (this.outlineStrokeIndex != that.outlineStrokeIndex) {,0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,386,"        if (!equalShapes(this.shapeSequence, that.shapeSequence)) {",0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,389,        if (this.shapeIndex != that.shapeIndex) {,0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,392,        return true;,0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,405,        if (s1 == null) {,0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,408,        if (s2 == null) {,0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,411,        if (s1.length != s2.length) {,0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,414,        for (int i = 0; i < s1.length; i++) {,0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,415,"            if (!ShapeUtilities.equal(s1[i], s2[i])) {",0.01333,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,419,        return true;,0.01333,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1553,        if (obj == this) {,0.0122,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1556,        if (!(obj instanceof ValueAxis)) {,0.0122,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1560,        ValueAxis that = (ValueAxis) obj;,0.0122,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1562,        if (this.positiveArrowVisible != that.positiveArrowVisible) {,0.0122,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1565,        if (this.negativeArrowVisible != that.negativeArrowVisible) {,0.0122,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1568,        if (this.inverted != that.inverted) {,0.0122,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1571,"        if (!ObjectUtilities.equal(this.range, that.range)) {",0.0122,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1574,        if (this.autoRange != that.autoRange) {,0.0122,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1577,        if (this.autoRangeMinimumSize != that.autoRangeMinimumSize) {,0.0122,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1580,        if (!this.defaultAutoRange.equals(that.defaultAutoRange)) {,0.0122,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1583,        if (this.upperMargin != that.upperMargin) {,0.0122,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1586,        if (this.lowerMargin != that.lowerMargin) {,0.0122,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1589,        if (this.fixedAutoRange != that.fixedAutoRange) {,0.0122,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1592,        if (this.autoTickUnitSelection != that.autoTickUnitSelection) {,0.0122,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1595,"        if (!ObjectUtilities.equal(this.standardTickUnits, ",0.0122,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1599,        if (this.verticalTickLabels != that.verticalTickLabels) {,0.0122,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1603,        return super.equals(obj);,0.0122,0,-1,0
org/jfree/chart/util/RectangleInsets,26,161,        if (!(obj instanceof RectangleInsets)) {,0.01205,0,-1,0
org/jfree/chart/util/RectangleInsets,26,164,        final RectangleInsets that = (RectangleInsets) obj;,0.01205,0,-1,0
org/jfree/chart/util/RectangleInsets,26,165,        if (that.unitType != this.unitType) {,0.01205,0,-1,0
org/jfree/chart/util/RectangleInsets,26,168,        if (this.left != that.left) {,0.01205,0,-1,0
org/jfree/data/Range,26,330,        if (!(obj instanceof Range)) {,0.0119,0,-1,0
org/jfree/data/Range,26,333,        Range range = (Range) obj;,0.0119,0,-1,0
org/jfree/data/Range,26,334,        if (!(this.lower == range.lower)) {,0.0119,0,-1,0
org/jfree/data/Range,26,337,        if (!(this.upper == range.upper)) {,0.0119,0,-1,0
org/jfree/data/Range,26,340,        return true;,0.0119,0,-1,0
org/jfree/chart/util/RectangleInsets,26,158,        if (obj == this) {,0.01099,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,147,"            return ObjectUtilities.equal(s1, s2);",0.01064,0,-1,0
org/jfree/chart/axis/Axis,26,1260,        if (obj == this) {,0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1263,        if (!(obj instanceof Axis)) {,0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1266,        Axis that = (Axis) obj;,0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1267,        if (this.visible != that.visible) {,0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1270,"        if (!ObjectUtilities.equal(this.label, that.label)) {",0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1273,"        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {",0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1276,"        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {",0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1279,"        if (!ObjectUtilities.equal(this.labelInsets, that.labelInsets)) {",0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1282,        if (this.labelAngle != that.labelAngle) {,0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1285,"        if (!ObjectUtilities.equal(this.labelToolTip, that.labelToolTip)) {",0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1288,"        if (!ObjectUtilities.equal(this.labelURL, that.labelURL)) {",0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1291,        if (this.axisLineVisible != that.axisLineVisible) {,0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1294,"        if (!ObjectUtilities.equal(this.axisLineStroke, that.axisLineStroke)) {",0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1297,"        if (!PaintUtilities.equal(this.axisLinePaint, that.axisLinePaint)) {",0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1300,        if (this.tickLabelsVisible != that.tickLabelsVisible) {,0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1303,"        if (!ObjectUtilities.equal(this.tickLabelFont, that.tickLabelFont)) {",0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1306,"        if (!PaintUtilities.equal(this.tickLabelPaint, that.tickLabelPaint)) {",0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1309,        if (!ObjectUtilities.equal(,0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1314,        if (this.tickMarksVisible != that.tickMarksVisible) {,0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1317,        if (this.tickMarkInsideLength != that.tickMarkInsideLength) {,0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1320,        if (this.tickMarkOutsideLength != that.tickMarkOutsideLength) {,0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1323,"        if (!PaintUtilities.equal(this.tickMarkPaint, that.tickMarkPaint)) {",0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1326,"        if (!ObjectUtilities.equal(this.tickMarkStroke, that.tickMarkStroke)) {",0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1329,        if (this.fixedDimension != that.fixedDimension) {,0.01031,0,-1,0
org/jfree/chart/axis/Axis,26,1332,        return true;,0.01031,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,133,        else if (s1 instanceof Ellipse2D && s2 instanceof Ellipse2D) {,0.00943,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,136,        else if (s1 instanceof Arc2D && s2 instanceof Arc2D) {,0.00943,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,139,        else if (s1 instanceof Polygon && s2 instanceof Polygon) {,0.00943,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,142,        else if (s1 instanceof GeneralPath && s2 instanceof GeneralPath) {,0.00943,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,141,        if (obj == this) {,0.00893,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,144,        if (!(obj instanceof StandardCategorySeriesLabelGenerator)) {,0.00893,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,147,        StandardCategorySeriesLabelGenerator that ,0.00893,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,149,        if (!this.formatPattern.equals(that.formatPattern)) {,0.00893,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,152,        return true;,0.00893,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1195,        if (obj == this) {,0.00893,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1198,        if (!(obj instanceof AbstractCategoryItemRenderer)) {,0.00893,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1201,        AbstractCategoryItemRenderer that = (AbstractCategoryItemRenderer) obj;,0.00893,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1203,"        if (!ObjectUtilities.equal(this.itemLabelGeneratorList,",0.00893,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1207,"        if (!ObjectUtilities.equal(this.baseItemLabelGenerator,",0.00893,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1211,"        if (!ObjectUtilities.equal(this.toolTipGeneratorList,",0.00893,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1215,"        if (!ObjectUtilities.equal(this.baseToolTipGenerator,",0.00893,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1219,"        if (!ObjectUtilities.equal(this.urlGeneratorList, ",0.00893,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1223,"        if (!ObjectUtilities.equal(this.baseURLGenerator,",0.00893,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1227,"        if (!ObjectUtilities.equal(this.legendItemLabelGenerator,",0.00893,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1231,"        if (!ObjectUtilities.equal(this.legendItemToolTipGenerator,",0.00893,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1235,"        if (!ObjectUtilities.equal(this.legendItemURLGenerator,",0.00893,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1239,        return super.equals(obj);,0.00893,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,130,        if (s1 instanceof Line2D && s2 instanceof Line2D) {,0.00752,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,193,            return true;,0.00581,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,176,        if (obj == this) {,0.00581,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,179,        if (!(obj instanceof ItemLabelPosition)) {,0.00581,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,182,        ItemLabelPosition that = (ItemLabelPosition) obj;,0.00581,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,183,        if (!this.itemLabelAnchor.equals(that.itemLabelAnchor)) {,0.00581,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,186,        if (!this.textAnchor.equals(that.textAnchor)) {,0.00581,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,189,        if (!this.rotationAnchor.equals(that.rotationAnchor)) {,0.00581,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,192,        if (this.angle != that.angle) {,0.00581,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,195,        return true;,0.00581,0,-1,0
org/jfree/chart/text/TextAnchor,26,150,            return true;,0.00532,0,-1,0
org/jfree/chart/util/ShapeList,26,104,        if (obj == null) {,0.00452,0,-1,0
org/jfree/chart/util/ShapeList,26,108,        if (obj == this) {,0.00452,0,-1,0
org/jfree/chart/util/ShapeList,26,112,        if (obj instanceof ShapeList) {,0.00452,0,-1,0
org/jfree/chart/util/ShapeList,26,113,            return super.equals(obj);,0.00452,0,-1,0
org/jfree/chart/util/PaintList,26,94,        if (obj == null) {,0.00452,0,-1,0
org/jfree/chart/util/PaintList,26,97,        if (obj == this) {,0.00452,0,-1,0
org/jfree/chart/util/PaintList,26,100,        if (obj instanceof PaintList) {,0.00452,0,-1,0
org/jfree/chart/util/PaintList,26,101,            PaintList that = (PaintList) obj;,0.00452,0,-1,0
org/jfree/chart/util/PaintList,26,102,            int listSize = size();,0.00452,0,-1,0
org/jfree/chart/util/PaintList,26,103,            for (int i = 0; i < listSize; i++) {,0.00452,0,-1,0
org/jfree/chart/util/PaintList,26,109,        return true;,0.00452,0,-1,0
org/jfree/chart/util/StrokeList,26,105,        if (obj == null) {,0.00452,0,-1,0
org/jfree/chart/util/StrokeList,26,109,        if (obj == this) {,0.00452,0,-1,0
org/jfree/chart/util/StrokeList,26,113,        if (obj instanceof StrokeList) {,0.00452,0,-1,0
org/jfree/chart/util/StrokeList,26,114,            return super.equals(obj);,0.00452,0,-1,0
org/jfree/chart/util/BooleanList,26,95,        if (obj instanceof BooleanList) {,0.00452,0,-1,0
org/jfree/chart/util/BooleanList,26,96,            return super.equals(obj);,0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2355,        if (obj == this) {,0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2358,        if (!(obj instanceof AbstractRenderer)) {,0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2361,        AbstractRenderer that = (AbstractRenderer) obj;,0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2362,        if (!this.seriesVisibleList.equals(that.seriesVisibleList)) {,0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2365,        if (this.baseSeriesVisible != that.baseSeriesVisible) {,0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2368,        if (!this.seriesVisibleInLegendList.equals(,0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2372,        if (this.baseSeriesVisibleInLegend != that.baseSeriesVisibleInLegend) {,0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2375,"        if (!ObjectUtilities.equal(this.paintList, that.paintList)) {",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2378,"        if (!PaintUtilities.equal(this.basePaint, that.basePaint)) {",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2381,"        if (!ObjectUtilities.equal(this.fillPaintList, that.fillPaintList)) {",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2384,"        if (!PaintUtilities.equal(this.baseFillPaint, that.baseFillPaint)) {",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2387,"        if (!ObjectUtilities.equal(this.outlinePaintList,",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2391,"        if (!PaintUtilities.equal(this.baseOutlinePaint, ",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2395,"        if (!ObjectUtilities.equal(this.strokeList, that.strokeList)) {",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2398,"        if (!ObjectUtilities.equal(this.baseStroke, that.baseStroke)) {",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2401,"        if (!ObjectUtilities.equal(this.outlineStrokeList, ",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2405,        if (!ObjectUtilities.equal(,0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2410,"        if (!ObjectUtilities.equal(this.shapeList, that.shapeList)) {",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2413,"        if (!ObjectUtilities.equal(this.baseShape, that.baseShape)) {",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2416,"        if (!ObjectUtilities.equal(this.itemLabelsVisibleList, ",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2420,        if (this.baseItemLabelsVisible != that.baseItemLabelsVisible) {,0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2423,"        if (!ObjectUtilities.equal(this.itemLabelFontList, ",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2427,"        if (!ObjectUtilities.equal(this.baseItemLabelFont, ",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2431,"        if (!ObjectUtilities.equal(this.itemLabelPaintList, ",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2435,"        if (!PaintUtilities.equal(this.baseItemLabelPaint, ",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2439,"        if (!ObjectUtilities.equal(this.positiveItemLabelPositionList, ",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2443,"        if (!ObjectUtilities.equal(this.basePositiveItemLabelPosition, ",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2447,"        if (!ObjectUtilities.equal(this.negativeItemLabelPositionList, ",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2451,"        if (!ObjectUtilities.equal(this.baseNegativeItemLabelPosition, ",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2455,        if (this.itemLabelAnchorOffset != that.itemLabelAnchorOffset) {,0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2458,"        if (!ObjectUtilities.equal(this.createEntitiesList, ",0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2462,        if (this.baseCreateEntities != that.baseCreateEntities) {,0.00452,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2465,        return true;,0.00452,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,186,        if (!(obj instanceof AbstractObjectList)) {,0.00426,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,190,        AbstractObjectList other = (AbstractObjectList) obj;,0.00426,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,191,        int listSize = size();,0.00426,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,192,        for (int i = 0; i < listSize; i++) {,0.00426,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,197,        return true;,0.00426,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,178,        if (obj == null) {,0.00415,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,182,        if (obj == this) {,0.00415,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,130,        if (o1 != null) {,0.00317,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,131,            return o1.equals(o2);,0.00317,0,-1,0
org/jfree/chart/util/PaintUtilities,26,98,            result = p1.equals(p2);,0.003,0,-1,0
org/jfree/chart/util/PaintUtilities,26,81,        if (p2 == null) {,0.00298,0,-1,0
org/jfree/chart/util/PaintUtilities,26,85,        boolean result = false;,0.00298,0,-1,0
org/jfree/chart/util/PaintUtilities,26,87,        if (p1 instanceof GradientPaint && p2 instanceof GradientPaint) {,0.00298,0,-1,0
org/jfree/chart/util/PaintUtilities,26,100,        return result;,0.00298,0,-1,0
org/jfree/chart/util/PaintUtilities,26,78,        if (p1 == null) {,0.00295,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,128,            return true;,0.00292,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,127,        if (o1 == o2) {,0.00287,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,139,        return this.data.getRowIndex(key);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,150,        return this.data.getRowKeys();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,176,        return this.data.getColumnIndex(key);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,187,        return this.data.getColumnKeys();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,203,"        return this.data.getValue(rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,248,"        this.data.setValue(value, rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,249,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,250,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,264,"        setValue(new Double(value), rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,265,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,280,        double existing = 0.0;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,281,"        Number n = getValue(rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,282,        if (n != null) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,283,            existing = n.doubleValue();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,285,"        setValue(existing + value, rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,286,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,298,"        this.data.removeValue(rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,299,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,300,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,311,        this.data.removeRow(rowIndex);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,312,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,313,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,324,        this.data.removeRow(rowKey);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,325,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,326,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,337,        this.data.removeColumn(columnIndex);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,338,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,339,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,350,        this.data.removeColumn(columnKey);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,351,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,352,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,359,        this.data.clear();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,360,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,361,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,372,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,373,            return true;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,376,        if (!(obj instanceof CategoryDataset)) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,377,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,380,        CategoryDataset that = (CategoryDataset) obj;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,381,        if (!getRowKeys().equals(that.getRowKeys())) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,382,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,385,        if (!getColumnKeys().equals(that.getColumnKeys())) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,386,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,389,        int rowCount = getRowCount();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,390,        int colCount = getColumnCount();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,391,        for (int r = 0; r < rowCount; r++) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,392,            for (int c = 0; c < colCount; c++) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,393,"                Number v1 = getValue(r, c);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,394,"                Number v2 = that.getValue(r, c);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,395,                if (v1 == null) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,396,                    if (v2 != null) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,397,                        return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,400,                else if (!v1.equals(v2)) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,401,                    return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,405,        return true;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,414,        return this.data.hashCode();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,426,        DefaultCategoryDataset clone = (DefaultCategoryDataset) super.clone();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,427,        clone.data = (DefaultKeyedValues2D) this.data.clone();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,26,428,        return clone;,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,26,107,        return this.group;,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,26,116,        if (group == null) {,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,26,117,"            throw new IllegalArgumentException(""Null 'group' argument."");",0.0,0,-1,0
org/jfree/data/general/AbstractDataset,26,119,        this.group = group;,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,26,120,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,26,138,"        this.listenerList.remove(DatasetChangeListener.class, listener);",0.0,0,-1,0
org/jfree/data/general/AbstractDataset,26,139,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,26,151,        List list = Arrays.asList(this.listenerList.getListenerList());,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,26,152,        return list.contains(listener);,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,26,192,        AbstractDataset clone = (AbstractDataset) super.clone();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,26,193,        clone.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,26,194,        return clone;    ,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,184,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,187,"            return Collections.binarySearch(this.rowKeys, key);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,202,        return Collections.unmodifiableList(this.rowKeys);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,231,        if (key == null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,232,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,234,        return this.columnKeys.indexOf(key);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,245,        return Collections.unmodifiableList(this.columnKeys);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,262,        if (rowKey == null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,263,"            throw new IllegalArgumentException(""Null 'rowKey' argument."");",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,265,        if (columnKey == null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,266,"            throw new IllegalArgumentException(""Null 'columnKey' argument."");",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,270,        if (!(this.columnKeys.contains(columnKey))) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,271,"            throw new UnknownKeyException(""Unrecognised columnKey: "" ",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,278,        int row = getRowIndex(rowKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,279,        if (row >= 0) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,280,            DefaultKeyedValues rowData ,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,282,            int col = rowData.getIndex(columnKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,283,            return (col >= 0 ? rowData.getValue(col) : null);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,286,"            throw new UnknownKeyException(""Unrecognised rowKey: "" + rowKey);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,329,                rowIndex = -rowIndex - 1;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,330,"                this.rowKeys.add(rowIndex, rowKey);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,331,"                this.rows.add(rowIndex, row);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,357,"        setValue(null, rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,360,        boolean allNull = true;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,361,        int rowIndex = getRowIndex(rowKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,362,        DefaultKeyedValues row = (DefaultKeyedValues) this.rows.get(rowIndex);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,364,"        for (int item = 0, itemCount = row.getItemCount(); item < itemCount; ",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,366,            if (row.getValue(item) != null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,367,                allNull = false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,368,                break;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,365,             item++) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,372,        if (allNull) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,373,            this.rowKeys.remove(rowIndex);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,374,            this.rows.remove(rowIndex);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,378,        allNull = true;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,381,"        for (int item = 0, itemCount = this.rows.size(); item < itemCount; ",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,383,            row = (DefaultKeyedValues) this.rows.get(item);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,384,            int columnIndex = row.getIndex(columnKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,385,            if (columnIndex >= 0 && row.getValue(columnIndex) != null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,386,                allNull = false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,387,                break;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,382,             item++) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,391,        if (allNull) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,392,"            for (int item = 0, itemCount = this.rows.size(); item < itemCount; ",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,394,                row = (DefaultKeyedValues) this.rows.get(item);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,395,                int columnIndex = row.getIndex(columnKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,396,                if (columnIndex >= 0) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,397,                    row.removeValue(columnIndex);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,393,                 item++) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,400,            this.columnKeys.remove(columnKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,402,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,413,        this.rowKeys.remove(rowIndex);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,414,        this.rows.remove(rowIndex);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,415,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,426,        removeRow(getRowIndex(rowKey));,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,427,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,438,        Comparable columnKey = getColumnKey(columnIndex);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,439,        removeColumn(columnKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,440,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,451,        Iterator iterator = this.rows.iterator();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,452,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,453,            DefaultKeyedValues rowData = (DefaultKeyedValues) iterator.next();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,454,            rowData.removeValue(columnKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,455,        },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,456,        this.columnKeys.remove(columnKey);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,457,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,463,        this.rowKeys.clear();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,464,        this.columnKeys.clear();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,465,        this.rows.clear();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,466,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,477,        if (o == null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,478,            return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,480,        if (o == this) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,481,            return true;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,484,        if (!(o instanceof KeyedValues2D)) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,485,            return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,487,        KeyedValues2D kv2D = (KeyedValues2D) o;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,488,        if (!getRowKeys().equals(kv2D.getRowKeys())) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,489,            return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,491,        if (!getColumnKeys().equals(kv2D.getColumnKeys())) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,492,            return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,494,        int rowCount = getRowCount();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,495,        if (rowCount != kv2D.getRowCount()) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,496,            return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,499,        int colCount = getColumnCount();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,500,        if (colCount != kv2D.getColumnCount()) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,501,            return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,504,        for (int r = 0; r < rowCount; r++) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,505,            for (int c = 0; c < colCount; c++) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,506,"                Number v1 = getValue(r, c);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,507,"                Number v2 = kv2D.getValue(r, c);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,508,                if (v1 == null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,509,                    if (v2 != null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,510,                        return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,514,                    if (!v1.equals(v2)) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,515,                        return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,520,        return true;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,530,        result = this.rowKeys.hashCode();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,531,        result = 29 * result + this.columnKeys.hashCode();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,532,        result = 29 * result + this.rows.hashCode();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,533,        return result;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,545,        DefaultKeyedValues2D clone = (DefaultKeyedValues2D) super.clone();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,548,        clone.columnKeys = new java.util.ArrayList(this.columnKeys);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,549,        clone.rowKeys = new java.util.ArrayList(this.rowKeys);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,552,        clone.rows = (List) ObjectUtilities.deepClone(this.rows);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues2D,26,553,        return clone;,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,26,74,    public DatasetGroup(String id) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,26,75,        if (id == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,26,76,"            throw new IllegalArgumentException(""Null 'id' argument."");   ",0.0,0,-1,0
org/jfree/data/general/DatasetGroup,26,78,        this.id = id;   ,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,26,79,    },0.0,0,-1,0
org/jfree/data/general/DatasetGroup,26,87,        return this.id;   ,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,26,98,        return super.clone();    ,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,26,109,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,26,110,            return true;   ,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,26,112,        if (!(obj instanceof DatasetGroup)) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,26,113,            return false;   ,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,26,115,        DatasetGroup that = (DatasetGroup) obj;,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,26,116,        if (!this.id.equals(that.id)) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,26,117,            return false;   ,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,26,119,        return true;,0.0,0,-1,0
org/jfree/data/general/DatasetChangeEvent,26,85,        return this.dataset;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,122,"        this(seriesNames, null, starts, ends);",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,124,    },0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,151,"                String errMsg = ""DefaultIntervalCategoryDataset: the number """,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,155,                throw new IllegalArgumentException(errMsg);,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,162,                    if (seriesKeys.length != seriesCount) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,163,                        throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,168,                    this.seriesKeys = seriesKeys;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,179,"                    String errMsg = ""DefaultIntervalCategoryDataset: the """,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,183,                    throw new IllegalArgumentException(errMsg);,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,186,                    if (categoryKeys.length != categoryCount) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,187,                        throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,191,                    this.categoryKeys = categoryKeys;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,201,                this.seriesKeys = null;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,202,                this.categoryKeys = null;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,235,        int result = -1;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,236,        for (int i = 0; i < this.seriesKeys.length; i++) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,237,            if (seriesKey.equals(this.seriesKeys[i])) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,238,                result = i;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,239,                break;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,242,        return result;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,255,        if ((series >= getSeriesCount()) || (series < 0)) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,256,"            throw new IllegalArgumentException(""No such series : "" + series);",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,258,        return this.seriesKeys[series];,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,271,        if (seriesKeys == null) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,272,"            throw new IllegalArgumentException(""Null 'seriesKeys' argument."");",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,274,        if (seriesKeys.length != getSeriesCount()) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,275,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,278,        this.seriesKeys = seriesKeys;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,279,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,280,    },0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,310,        if (this.categoryKeys == null) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,311,            return new ArrayList();,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,314,            return Collections.unmodifiableList(Arrays.asList(,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,329,        if (categoryKeys == null) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,330,"            throw new IllegalArgumentException(""Null 'categoryKeys' argument."");",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,332,        if (categoryKeys.length != this.startData[0].length) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,333,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,336,        for (int i = 0; i < categoryKeys.length; i++) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,337,            if (categoryKeys[i] == null) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,338,                throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,343,        this.categoryKeys = categoryKeys;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,344,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,345,    },0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,361,        int seriesIndex = getSeriesIndex(series);,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,362,        if (seriesIndex < 0) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,363,"            throw new UnknownKeyException(""Unknown 'series' key."");",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,365,        int itemIndex = getColumnIndex(category);,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,366,        if (itemIndex < 0) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,367,"            throw new UnknownKeyException(""Unknown 'category' key."");",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,369,"        return getValue(seriesIndex, itemIndex);",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,386,"        return getEndValue(series, category);",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,401,        int seriesIndex = getSeriesIndex(series);,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,402,        if (seriesIndex < 0) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,403,"            throw new UnknownKeyException(""Unknown 'series' key."");",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,405,        int itemIndex = getColumnIndex(category);,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,406,        if (itemIndex < 0) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,407,"            throw new UnknownKeyException(""Unknown 'category' key."");",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,409,"        return getStartValue(seriesIndex, itemIndex);",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,427,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,433,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,454,        int seriesIndex = getSeriesIndex(series);,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,455,        if (seriesIndex < 0) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,456,"            throw new UnknownKeyException(""Unknown 'series' key."");",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,458,        int itemIndex = getColumnIndex(category);,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,459,        if (itemIndex < 0) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,460,"            throw new UnknownKeyException(""Unknown 'category' key."");",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,462,"        return getEndValue(seriesIndex, itemIndex);",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,477,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,483,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,504,        if ((series < 0) || (series > getSeriesCount() - 1)) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,505,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,511,        int categoryIndex = getCategoryIndex(category);,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,512,        if (categoryIndex < 0) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,513,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,519,        this.startData[series][categoryIndex] = value;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,520,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,522,    },0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,537,        if ((series < 0) || (series > getSeriesCount() - 1)) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,538,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,544,        int categoryIndex = getCategoryIndex(category);,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,545,        if (categoryIndex < 0) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,546,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,552,        this.endData[series][categoryIndex] = value;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,553,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,555,    },0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,567,        int result = -1;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,568,        for (int i = 0; i < this.categoryKeys.length; i++) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,569,            if (category.equals(this.categoryKeys[i])) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,570,                result = i;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,571,                break;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,574,        return result;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,619,        if (columnKey == null) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,620,"            throw new IllegalArgumentException(""Null 'columnKey' argument."");",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,622,        return getCategoryIndex(columnKey);,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,635,        return getSeriesIndex(rowKey);,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,649,        if (this.seriesKeys == null) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,650,            return new java.util.ArrayList();,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,653,            return Collections.unmodifiableList(Arrays.asList(this.seriesKeys));,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,668,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,707,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,708,            return true;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,710,        if (!(obj instanceof DefaultIntervalCategoryDataset)) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,711,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,713,        DefaultIntervalCategoryDataset that ,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,715,"        if (!Arrays.equals(this.seriesKeys, that.seriesKeys)) {",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,716,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,718,"        if (!Arrays.equals(this.categoryKeys, that.categoryKeys)) {",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,719,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,721,"        if (!equal(this.startData, that.startData)) {",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,722,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,724,"        if (!equal(this.endData, that.endData)) {",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,725,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,728,        return true;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,740,        DefaultIntervalCategoryDataset clone ,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,742,        clone.categoryKeys = (Comparable[]) this.categoryKeys.clone();,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,743,        clone.seriesKeys = (Comparable[]) this.seriesKeys.clone();,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,744,        clone.startData = clone(this.startData);,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,745,        clone.endData = clone(this.endData);,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,746,        return clone;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,758,        if (array1 == null) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,759,            return (array2 == null);,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,761,        if (array2 == null) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,762,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,764,        if (array1.length != array2.length) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,765,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,767,        for (int i = 0; i < array1.length; i++) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,768,"            if (!Arrays.equals(array1[i], array2[i])) {",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,769,                return false;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,772,        return true;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,783,        if (array == null) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,784,"            throw new IllegalArgumentException(""Null 'array' argument."");",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,786,        Number[][] result = new Number[array.length][];,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,787,        for (int i = 0; i < array.length; i++) {,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,788,            Number[] child = array[i];,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,789,            Number[] copychild = new Number[child.length];,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,790,"            System.arraycopy(child, 0, copychild, 0, child.length);",0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,791,            result[i] = copychild;,0.0,0,-1,0
org/jfree/data/category/DefaultIntervalCategoryDataset,26,793,        return result;,0.0,0,-1,0
org/jfree/data/general/AbstractSeriesDataset,26,99,        int seriesCount = getSeriesCount();,0.0,0,-1,0
org/jfree/data/general/AbstractSeriesDataset,26,100,        for (int s = 0; s < seriesCount; s++) {,0.0,0,-1,0
org/jfree/data/general/AbstractSeriesDataset,26,101,           if (getSeriesKey(s).equals(seriesKey)) {,0.0,0,-1,0
org/jfree/data/general/AbstractSeriesDataset,26,102,               return s;,0.0,0,-1,0
org/jfree/data/general/AbstractSeriesDataset,26,105,        return -1;,0.0,0,-1,0
org/jfree/data/general/AbstractSeriesDataset,26,114,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/general/AbstractSeriesDataset,26,115,    },0.0,0,-1,0
org/jfree/data/UnknownKeyException,26,56,        super(message);,0.0,0,-1,0
org/jfree/data/UnknownKeyException,26,57,    },0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,108,        Object result = null;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,109,        KeyedObjects rowData = (KeyedObjects) this.rows.get(row);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,110,        if (rowData != null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,111,            Comparable columnKey = (Comparable) this.columnKeys.get(column);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,112,            if (columnKey != null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,113,                result = rowData.getObject(columnKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,116,        return result;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,139,        return this.rowKeys.indexOf(key);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,148,        return Collections.unmodifiableList(this.rowKeys);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,170,        return this.columnKeys.indexOf(key);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,179,        return Collections.unmodifiableList(this.columnKeys);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,192,        Object result = null;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,193,        int row = this.rowKeys.indexOf(rowKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,194,        if (row >= 0) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,195,            KeyedObjects rowData = (KeyedObjects) this.rows.get(row);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,196,            result = rowData.getObject(columnKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,198,        return result;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,251,"        setObject(null, rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,254,    },0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,262,        this.rowKeys.remove(rowIndex);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,263,        this.rows.remove(rowIndex);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,264,    },0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,272,        removeRow(getRowIndex(rowKey));,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,273,    },0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,281,        Comparable columnKey = getColumnKey(columnIndex);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,282,        removeColumn(columnKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,283,    },0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,291,        Iterator iterator = this.rows.iterator();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,292,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,293,            KeyedObjects rowData = (KeyedObjects) iterator.next();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,294,            rowData.removeValue(columnKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,295,        },0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,296,        this.columnKeys.remove(columnKey);,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,297,    },0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,308,        if (obj == null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,309,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,312,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,313,            return true;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,316,        if (!(obj instanceof KeyedObjects2D)) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,317,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,320,        KeyedObjects2D ko2D = (KeyedObjects2D) obj;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,321,        if (!getRowKeys().equals(ko2D.getRowKeys())) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,322,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,324,        if (!getColumnKeys().equals(ko2D.getColumnKeys())) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,325,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,327,        int rowCount = getRowCount();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,328,        if (rowCount != ko2D.getRowCount()) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,329,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,332,        int colCount = getColumnCount();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,333,        if (colCount != ko2D.getColumnCount()) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,334,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,337,        for (int r = 0; r < rowCount; r++) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,338,            for (int c = 0; c < colCount; c++) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,339,"                Object v1 = getObject(r, c);",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,340,"                Object v2 = ko2D.getObject(r, c);",0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,341,                if (v1 == null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,342,                    if (v2 != null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,343,                        return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,347,                    if (!v1.equals(v2)) {,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,348,                        return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,353,        return true;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,363,        result = this.rowKeys.hashCode();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,364,        result = 29 * result + this.columnKeys.hashCode();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,365,        result = 29 * result + this.rows.hashCode();,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,366,        return result;,0.0,0,-1,0
org/jfree/data/KeyedObjects2D,26,378,        return super.clone();,0.0,0,-1,0
org/jfree/data/DataUtilities,26,55,public abstract class DataUtilities {,0.0,0,-1,0
org/jfree/data/DataUtilities,26,67,        double total = 0.0;,0.0,0,-1,0
org/jfree/data/DataUtilities,26,68,        int rowCount = data.getRowCount();,0.0,0,-1,0
org/jfree/data/DataUtilities,26,69,        for (int r = 0; r < rowCount; r++) {,0.0,0,-1,0
org/jfree/data/DataUtilities,26,70,"            Number n = data.getValue(r, column);",0.0,0,-1,0
org/jfree/data/DataUtilities,26,71,            if (n != null) {,0.0,0,-1,0
org/jfree/data/DataUtilities,26,72,                total += n.doubleValue();   ,0.0,0,-1,0
org/jfree/data/DataUtilities,26,75,        return total;,0.0,0,-1,0
org/jfree/data/DataUtilities,26,88,        double total = 0.0;,0.0,0,-1,0
org/jfree/data/DataUtilities,26,89,        int columnCount = data.getColumnCount();,0.0,0,-1,0
org/jfree/data/DataUtilities,26,90,        for (int c = 0; c < columnCount; c++) {,0.0,0,-1,0
org/jfree/data/DataUtilities,26,91,"            Number n = data.getValue(row, c);",0.0,0,-1,0
org/jfree/data/DataUtilities,26,92,            if (n != null) {,0.0,0,-1,0
org/jfree/data/DataUtilities,26,93,                total += n.doubleValue();   ,0.0,0,-1,0
org/jfree/data/DataUtilities,26,96,        return total;,0.0,0,-1,0
org/jfree/data/DataUtilities,26,109,"            throw new IllegalArgumentException(""Null 'data' argument."");   ",0.0,0,-1,0
org/jfree/data/DataUtilities,26,128,"            throw new IllegalArgumentException(""Null 'data' argument."");   ",0.0,0,-1,0
org/jfree/data/DataUtilities,26,149,        if (data == null) {,0.0,0,-1,0
org/jfree/data/DataUtilities,26,150,"            throw new IllegalArgumentException(""Null 'data' argument."");   ",0.0,0,-1,0
org/jfree/data/DataUtilities,26,152,        DefaultKeyedValues result = new DefaultKeyedValues();,0.0,0,-1,0
org/jfree/data/DataUtilities,26,153,        double total = 0.0;,0.0,0,-1,0
org/jfree/data/DataUtilities,26,154,        for (int i = 0; i < data.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/data/DataUtilities,26,155,            Number v = data.getValue(i);,0.0,0,-1,0
org/jfree/data/DataUtilities,26,156,            if (v != null) {,0.0,0,-1,0
org/jfree/data/DataUtilities,26,157,                total = total + v.doubleValue();,0.0,0,-1,0
org/jfree/data/DataUtilities,26,160,        double runningTotal = 0.0;,0.0,0,-1,0
org/jfree/data/DataUtilities,26,161,        for (int i = 0; i < data.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/data/DataUtilities,26,162,            Number v = data.getValue(i);,0.0,0,-1,0
org/jfree/data/DataUtilities,26,163,            if (v != null) {,0.0,0,-1,0
org/jfree/data/DataUtilities,26,164,                runningTotal = runningTotal + v.doubleValue();,0.0,0,-1,0
org/jfree/data/DataUtilities,26,166,"            result.addValue(data.getKey(i), new Double(runningTotal / total));",0.0,0,-1,0
org/jfree/data/DataUtilities,26,168,        return result;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,99,        return this.data.size();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,130,        Comparable result = null;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,131,        KeyedValue item = (KeyedValue) this.data.get(index);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,132,        if (item != null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,133,            result = item.getKey();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,135,        return result;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,150,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,170,        List result = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,171,        Iterator iterator = this.data.iterator();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,172,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,173,            KeyedValue kv = (KeyedValue) iterator.next();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,174,            result.add(kv.getKey());,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,175,        },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,176,        return result;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,191,        int index = getIndex(key);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,192,        if (index < 0) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,193,"            throw new UnknownKeyException(""Key not found: "" + key);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,195,        return getValue(index);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,207,"        addValue(key, new Double(value)); ",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,208,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,219,"        setValue(key, value);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,220,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,229,"        setValue(key, new Double(value));   ",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,230,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,240,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,244,            DefaultKeyedValue kv = (DefaultKeyedValue) this.data.get(keyIndex);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,245,            kv.setValue(value);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,246,        },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,265,"        insertValue(position, key, new Double(value));",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,266,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,280,        if (position < 0 || position > this.data.size()) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,281,"            throw new IllegalArgumentException(""'position' out of bounds."");",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,283,        if (key == null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,284,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,286,        int pos = this.getIndex(key);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,287,        if (pos >= 0) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,288,            this.data.remove(pos);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,290,"        KeyedValue kv = new DefaultKeyedValue(key, value);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,291,        if (position <= this.data.size()) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,292,"            this.data.add(position, kv);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,295,            this.data.add(kv);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,297,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,309,        this.data.remove(index);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,310,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,322,        int index = getIndex(key);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,323,        if (index >= 0) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,324,            removeValue(index);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,326,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,334,        this.data.clear();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,335,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,343,        Comparator comparator = new KeyedValueComparator(,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,345,"        Collections.sort(this.data, comparator);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,346,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,356,        Comparator comparator = new KeyedValueComparator(,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,358,"        Collections.sort(this.data, comparator);",0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,359,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,369,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,370,            return true;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,373,        if (!(obj instanceof KeyedValues)) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,374,            return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,377,        KeyedValues that = (KeyedValues) obj;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,378,        int count = getItemCount();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,379,        if (count != that.getItemCount()) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,380,            return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,383,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,384,            Comparable k1 = getKey(i);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,385,            Comparable k2 = that.getKey(i);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,386,            if (!k1.equals(k2)) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,387,                return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,389,            Number v1 = getValue(i);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,390,            Number v2 = that.getValue(i);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,391,            if (v1 == null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,392,                if (v2 != null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,393,                    return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,397,                if (!v1.equals(v2)) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,398,                    return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,402,        return true;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,411,        return (this.data != null ? this.data.hashCode() : 0);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,423,        DefaultKeyedValues clone = (DefaultKeyedValues) super.clone();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,424,        clone.data = (List) ObjectUtilities.deepClone(this.data);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValues,26,425,        return clone;    ,0.0,0,-1,0
org/jfree/chart/util/SortOrder,26,75,            return true;,0.0,0,-1,0
org/jfree/chart/util/SortOrder,26,78,            return false;,0.0,0,-1,0
org/jfree/chart/util/SortOrder,26,83,            return false;,0.0,0,-1,0
org/jfree/chart/util/SortOrder,26,95,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/SortOrder,26,109,        else if (this.equals(SortOrder.DESCENDING)) {,0.0,0,-1,0
org/jfree/chart/util/SortOrder,26,110,            return SortOrder.DESCENDING;,0.0,0,-1,0
org/jfree/chart/util/SortOrder,26,112,        return null;,0.0,0,-1,0
org/jfree/data/RangeType,26,103,            return false;,0.0,0,-1,0
org/jfree/data/RangeType,26,107,            return false;,0.0,0,-1,0
org/jfree/data/RangeType,26,118,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/data/RangeType,26,132,        else if (this.equals(RangeType.POSITIVE)) {,0.0,0,-1,0
org/jfree/data/RangeType,26,133,            return RangeType.POSITIVE;,0.0,0,-1,0
org/jfree/data/RangeType,26,135,        else if (this.equals(RangeType.NEGATIVE)) {,0.0,0,-1,0
org/jfree/data/RangeType,26,136,            return RangeType.NEGATIVE;,0.0,0,-1,0
org/jfree/data/RangeType,26,138,        return null;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValue,26,108,        this.value = value;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValue,26,109,    },0.0,0,-1,0
org/jfree/data/DefaultKeyedValue,26,119,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValue,26,120,            return true;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValue,26,122,        if (!(obj instanceof DefaultKeyedValue)) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValue,26,123,            return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValue,26,127,        DefaultKeyedValue that = (DefaultKeyedValue) obj;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValue,26,131,        if (this.key != null ? !this.key.equals(that.key) : that.key != null) {,0.0,0,-1,0
org/jfree/data/DefaultKeyedValue,26,132,            return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValue,26,134,        if (this.value != null ,0.0,0,-1,0
org/jfree/data/DefaultKeyedValue,26,136,            return false;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValue,26,138,        return true;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValue,26,148,        result = (this.key != null ? this.key.hashCode() : 0);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValue,26,149,        result = 29 * result + (this.value != null ? this.value.hashCode() : 0);,0.0,0,-1,0
org/jfree/data/DefaultKeyedValue,26,150,        return result;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValue,26,164,        DefaultKeyedValue clone = (DefaultKeyedValue) super.clone();,0.0,0,-1,0
org/jfree/data/DefaultKeyedValue,26,165,        return clone;,0.0,0,-1,0
org/jfree/data/DefaultKeyedValue,26,175,"        return ""("" + this.key.toString() + "", "" + this.value.toString() + "")"";",0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,107,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,108,        MeanAndStandardDeviation masd ,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,110,        if (masd != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,111,            result = masd.getMean();,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,113,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,126,"        return getMeanValue(row, column);",0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,139,"        return getMeanValue(rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,151,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,152,        MeanAndStandardDeviation masd,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,154,        if (masd != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,155,            result = masd.getMean();,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,157,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,169,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,170,        MeanAndStandardDeviation masd ,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,172,        if (masd != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,173,            result = masd.getStandardDeviation();,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,175,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,187,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,188,        MeanAndStandardDeviation masd,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,190,        if (masd != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,191,            result = masd.getStandardDeviation();,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,193,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,204,        return this.data.getColumnIndex(key);,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,224,        return this.data.getColumnKeys();,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,235,        return this.data.getRowIndex(key);,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,255,        return this.data.getRowKeys();,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,352,        return this.minimumRangeValue;        ,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,365,        return this.maximumRangeValue;        ,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,385,            if (!Double.isNaN(this.minimumRangeValue) ,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,387,"            result = new Range(this.minimumRangeValue, this.maximumRangeValue);            ",0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,400,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,401,            return true;   ,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,403,        if (!(obj instanceof DefaultStatisticalCategoryDataset)) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,404,            return false;   ,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,406,        DefaultStatisticalCategoryDataset that ,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,408,        if (!this.data.equals(that.data)) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,409,            return false;   ,0.0,0,-1,0
org/jfree/data/statistics/DefaultStatisticalCategoryDataset,26,411,        return true;,0.0,0,-1,0
org/jfree/data/Range,26,87,"            String msg = ""Range(double, double): require lower ("" + lower ",0.0,0,-1,0
org/jfree/data/Range,26,89,            throw new IllegalArgumentException(msg);,0.0,0,-1,0
org/jfree/data/Range,26,119,        return this.upper - this.lower;,0.0,0,-1,0
org/jfree/data/Range,26,128,        return this.lower / 2.0 + this.upper / 2.0;,0.0,0,-1,0
org/jfree/data/Range,26,153,        if (b0 <= this.lower) {,0.0,0,-1,0
org/jfree/data/Range,26,154,            return (b1 > this.lower);,0.0,0,-1,0
org/jfree/data/Range,26,157,            return (b0 < this.upper && b1 >= b0);,0.0,0,-1,0
org/jfree/data/Range,26,170,        double result = value;,0.0,0,-1,0
org/jfree/data/Range,26,171,        if (!contains(value)) {,0.0,0,-1,0
org/jfree/data/Range,26,172,            if (value > this.upper) {,0.0,0,-1,0
org/jfree/data/Range,26,173,                result = this.upper;   ,0.0,0,-1,0
org/jfree/data/Range,26,175,            else if (value < this.lower) {,0.0,0,-1,0
org/jfree/data/Range,26,176,                result = this.lower;   ,0.0,0,-1,0
org/jfree/data/Range,26,179,        return result;,0.0,0,-1,0
org/jfree/data/Range,26,203,            if (range2 == null) {,0.0,0,-1,0
org/jfree/data/Range,26,204,                return range1;,0.0,0,-1,0
org/jfree/data/Range,26,207,"                double l = Math.min(range1.getLowerBound(), ",0.0,0,-1,0
org/jfree/data/Range,26,209,"                double u = Math.max(range1.getUpperBound(), ",0.0,0,-1,0
org/jfree/data/Range,26,211,"                return new Range(l, u);",0.0,0,-1,0
org/jfree/data/Range,26,229,"            return new Range(value, value);",0.0,0,-1,0
org/jfree/data/Range,26,235,"            return new Range(range.getLowerBound(), value);",0.0,0,-1,0
org/jfree/data/Range,26,255,        if (range == null) {,0.0,0,-1,0
org/jfree/data/Range,26,256,"            throw new IllegalArgumentException(""Null 'range' argument."");   ",0.0,0,-1,0
org/jfree/data/Range,26,258,        double length = range.getLength();,0.0,0,-1,0
org/jfree/data/Range,26,259,        double lower = length * lowerMargin;,0.0,0,-1,0
org/jfree/data/Range,26,260,        double upper = length * upperMargin;,0.0,0,-1,0
org/jfree/data/Range,26,261,"        return new Range(range.getLowerBound() - lower, ",0.0,0,-1,0
org/jfree/data/Range,26,274,"        return shift(base, delta, false);",0.0,0,-1,0
org/jfree/data/Range,26,290,        if (allowZeroCrossing) {,0.0,0,-1,0
org/jfree/data/Range,26,291,"            return new Range(base.getLowerBound() + delta, ",0.0,0,-1,0
org/jfree/data/Range,26,295,"            return new Range(shiftWithNoZeroCrossing(base.getLowerBound(), ",0.0,0,-1,0
org/jfree/data/Range,26,311,        if (value > 0.0) {,0.0,0,-1,0
org/jfree/data/Range,26,312,"            return Math.max(value + delta, 0.0);  ",0.0,0,-1,0
org/jfree/data/Range,26,314,        else if (value < 0.0) {,0.0,0,-1,0
org/jfree/data/Range,26,315,"            return Math.min(value + delta, 0.0);",0.0,0,-1,0
org/jfree/data/Range,26,318,            return value + delta;   ,0.0,0,-1,0
org/jfree/data/Range,26,331,            return false;,0.0,0,-1,0
org/jfree/data/Range,26,335,            return false;,0.0,0,-1,0
org/jfree/data/Range,26,338,            return false;,0.0,0,-1,0
org/jfree/data/Range,26,351,        temp = Double.doubleToLongBits(this.lower);,0.0,0,-1,0
org/jfree/data/Range,26,352,        result = (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/data/Range,26,353,        temp = Double.doubleToLongBits(this.upper);,0.0,0,-1,0
org/jfree/data/Range,26,354,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/data/Range,26,355,        return result;,0.0,0,-1,0
org/jfree/data/Range,26,365,"        return (""Range["" + this.lower + "","" + this.upper + ""]"");",0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,105,        BoxAndWhiskerItem item ,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,107,"        add(item, rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,108,    },0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,135,        else if (maxval > this.maximumRangeValue.doubleValue()) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,136,            this.maximumRangeValue = new Double(maxval);,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,142,        else if (minval < this.minimumRangeValue.doubleValue()) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,143,            this.minimumRangeValue = new Double(minval);,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,162,"        return (BoxAndWhiskerItem) this.data.getObject(row, column);  ",0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,174,"        return getMedianValue(row, column);",0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,186,"        return getMedianValue(rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,199,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,200,"        BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(row, ",0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,202,        if (item != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,203,            result = item.getMean();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,205,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,218,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,219,        BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,221,        if (item != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,222,            result = item.getMean();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,224,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,236,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,237,"        BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(row, ",0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,239,        if (item != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,240,            result = item.getMedian();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,242,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,254,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,255,        BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,257,        if (item != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,258,            result = item.getMedian();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,260,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,272,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,273,        BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,275,        if (item != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,276,            result = item.getQ1();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,278,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,290,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,291,        BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,293,        if (item != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,294,            result = item.getQ1();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,296,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,308,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,309,        BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,311,        if (item != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,312,            result = item.getQ3();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,314,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,326,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,327,        BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,329,        if (item != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,330,            result = item.getQ3();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,332,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,343,        return this.data.getColumnIndex(key);,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,363,        return this.data.getColumnKeys();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,374,        return this.data.getRowIndex(key);,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,394,        return this.data.getRowKeys();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,424,        double result = Double.NaN;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,425,        if (this.minimumRangeValue != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,426,            result = this.minimumRangeValue.doubleValue();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,428,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,440,        double result = Double.NaN;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,441,        if (this.maximumRangeValue != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,442,            result = this.maximumRangeValue.doubleValue();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,444,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,468,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,469,        BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,471,        if (item != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,472,            result = item.getMinRegularValue();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,474,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,486,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,487,        BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,489,        if (item != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,490,            result = item.getMinRegularValue();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,492,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,504,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,505,        BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,507,        if (item != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,508,            result = item.getMaxRegularValue();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,510,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,522,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,523,        BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,525,        if (item != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,526,            result = item.getMaxRegularValue();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,528,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,540,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,541,        BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,543,        if (item != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,544,            result = item.getMinOutlier();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,546,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,558,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,559,        BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,561,        if (item != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,562,            result = item.getMinOutlier();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,564,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,576,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,577,        BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,579,        if (item != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,580,            result = item.getMaxOutlier();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,582,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,594,        Number result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,595,        BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,597,        if (item != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,598,            result = item.getMaxOutlier();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,600,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,612,        List result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,613,        BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,615,        if (item != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,616,            result = item.getOutliers();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,618,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,630,        List result = null;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,631,        BoxAndWhiskerItem item = (BoxAndWhiskerItem) this.data.getObject(,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,633,        if (item != null) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,634,            result = item.getOutliers();,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,636,        return result;,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,647,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,648,            return true;   ,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,650,        if (obj instanceof DefaultBoxAndWhiskerCategoryDataset) {,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,651,            DefaultBoxAndWhiskerCategoryDataset dataset ,0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,653,"            return ObjectUtilities.equal(this.data, dataset.data);",0.0,0,-1,0
org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset,26,655,        return false;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,134,        return this.mean;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,143,        return this.median;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,152,        return this.q1;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,161,        return this.q3;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,170,        return this.minRegularValue;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,179,        return this.maxRegularValue;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,206,        if (this.outliers == null) {,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,207,            return null;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,209,        return Collections.unmodifiableList(this.outliers);,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,219,"        return super.toString() + ""[mean="" + this.mean + "",median="" ",0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,232,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,233,            return true;   ,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,235,        if (!(obj instanceof BoxAndWhiskerItem)) {,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,236,            return false;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,238,        BoxAndWhiskerItem that = (BoxAndWhiskerItem) obj;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,239,"        if (!ObjectUtilities.equal(this.mean, that.mean)) {",0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,240,            return false;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,242,"        if (!ObjectUtilities.equal(this.median, that.median)) {",0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,243,            return false;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,245,"        if (!ObjectUtilities.equal(this.q1, that.q1)) {",0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,246,            return false;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,248,"        if (!ObjectUtilities.equal(this.q3, that.q3)) {",0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,249,            return false;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,251,"        if (!ObjectUtilities.equal(this.minRegularValue, ",0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,253,            return false;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,255,"        if (!ObjectUtilities.equal(this.maxRegularValue, ",0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,257,            return false;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,259,"        if (!ObjectUtilities.equal(this.minOutlier, that.minOutlier)) {",0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,260,            return false;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,262,"        if (!ObjectUtilities.equal(this.maxOutlier, that.maxOutlier)) {",0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,263,            return false;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,265,"        if (!ObjectUtilities.equal(this.outliers, that.outliers)) {",0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,266,            return false;,0.0,0,-1,0
org/jfree/data/statistics/BoxAndWhiskerItem,26,268,        return true;,0.0,0,-1,0
org/jfree/data/statistics/MeanAndStandardDeviation,26,74,"        this(new Double(mean), new Double(standardDeviation));   ",0.0,0,-1,0
org/jfree/data/statistics/MeanAndStandardDeviation,26,75,    },0.0,0,-1,0
org/jfree/data/statistics/MeanAndStandardDeviation,26,95,        return this.mean;,0.0,0,-1,0
org/jfree/data/statistics/MeanAndStandardDeviation,26,104,        return this.standardDeviation;,0.0,0,-1,0
org/jfree/data/statistics/MeanAndStandardDeviation,26,115,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/statistics/MeanAndStandardDeviation,26,116,            return true;   ,0.0,0,-1,0
org/jfree/data/statistics/MeanAndStandardDeviation,26,118,        if (!(obj instanceof MeanAndStandardDeviation)) {,0.0,0,-1,0
org/jfree/data/statistics/MeanAndStandardDeviation,26,119,            return false;   ,0.0,0,-1,0
org/jfree/data/statistics/MeanAndStandardDeviation,26,121,        MeanAndStandardDeviation that = (MeanAndStandardDeviation) obj;,0.0,0,-1,0
org/jfree/data/statistics/MeanAndStandardDeviation,26,122,"        if (!ObjectUtilities.equal(this.mean, that.mean)) {",0.0,0,-1,0
org/jfree/data/statistics/MeanAndStandardDeviation,26,123,            return false;   ,0.0,0,-1,0
org/jfree/data/statistics/MeanAndStandardDeviation,26,125,        if (!ObjectUtilities.equal(,0.0,0,-1,0
org/jfree/data/statistics/MeanAndStandardDeviation,26,128,            return false;   ,0.0,0,-1,0
org/jfree/data/statistics/MeanAndStandardDeviation,26,130,        return true;,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,94,"            throw new IllegalArgumentException(""Null 'defaultGroup' argument."");",0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,118,        List result = new ArrayList();,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,119,        result.add(this.defaultGroup);,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,120,        Iterator iterator = this.groups.iterator();,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,121,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,122,            Comparable group = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,123,            if (!result.contains(group)) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,124,                result.add(group);   ,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,126,        } ,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,127,        return result;,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,146,            result = result + 1;   ,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,161,"            throw new IllegalArgumentException(""Null 'key' argument."");   ",0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,166,            result = group;   ,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,179,        if (key == null) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,180,"            throw new IllegalArgumentException(""Null 'key' argument."");   ",0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,182,        Comparable currentGroup = getGroup(key);,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,183,        if (!currentGroup.equals(this.defaultGroup)) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,184,            if (!currentGroup.equals(group)) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,185,                int count = getKeyCount(currentGroup);,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,186,                if (count == 1) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,187,                    this.groups.remove(currentGroup);   ,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,191,        if (group == null) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,192,            this.keyToGroupMap.remove(key); ,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,195,            if (!this.groups.contains(group)) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,196,                if (!this.defaultGroup.equals(group)) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,197,                    this.groups.add(group);,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,200,"            this.keyToGroupMap.put(key, group);",0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,202,    },0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,214,        if (group == null) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,215,"            throw new IllegalArgumentException(""Null 'group' argument."");   ",0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,217,        int result = 0;,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,218,        Iterator iterator = this.keyToGroupMap.values().iterator();,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,219,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,220,            Comparable g = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,221,            if (group.equals(g)) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,222,                result++;,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,224,        },0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,225,        return result;,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,236,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,237,            return true;      ,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,239,        if (!(obj instanceof KeyToGroupMap)) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,240,            return false;,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,242,        KeyToGroupMap that = (KeyToGroupMap) obj;,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,243,"        if (!ObjectUtilities.equal(this.defaultGroup, that.defaultGroup)) {",0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,244,            return false;,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,246,        if (!this.keyToGroupMap.equals(that.keyToGroupMap)) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,247,            return false;,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,249,        return true;,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,261,        KeyToGroupMap result = (KeyToGroupMap) super.clone();,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,262,        result.defaultGroup ,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,264,        result.groups = (List) KeyToGroupMap.clone(this.groups);,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,265,        result.keyToGroupMap = (Map) KeyToGroupMap.clone(this.keyToGroupMap);,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,266,        return result;,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,277,        if (object == null) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,278,            return null;   ,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,280,        Class c = object.getClass();,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,281,        Object result = null;,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,283,"            Method m = c.getMethod(""clone"", (Class[]) null);",0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,284,            if (Modifier.isPublic(m.getModifiers())) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,286,"                    result = m.invoke(object, (Object[]) null);",0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,290,                },0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,288,                catch (Exception e) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,289,                    e.printStackTrace();  ,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,295,        },0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,293,        catch (NoSuchMethodException e) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,294,            result = object;,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,296,        return result;,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,310,        Collection result = null;,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,311,        if (list != null) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,313,                List clone = (List) list.getClass().newInstance();,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,314,                Iterator iterator = list.iterator();,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,315,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,316,                    clone.add(KeyToGroupMap.clone(iterator.next()));,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,318,                result = clone;,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,322,            },0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,320,            catch (Exception e) {,0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,321,"                throw new CloneNotSupportedException(""Exception."");",0.0,0,-1,0
org/jfree/data/KeyToGroupMap,26,324,        return result;,0.0,0,-1,0
org/jfree/data/KeyedObject,26,94,        return this.object;,0.0,0,-1,0
org/jfree/data/KeyedObject,26,103,        this.object = object;,0.0,0,-1,0
org/jfree/data/KeyedObject,26,104,    },0.0,0,-1,0
org/jfree/data/KeyedObject,26,117,        KeyedObject clone = (KeyedObject) super.clone();,0.0,0,-1,0
org/jfree/data/KeyedObject,26,118,        if (this.object instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/data/KeyedObject,26,119,            PublicCloneable pc = (PublicCloneable) this.object;,0.0,0,-1,0
org/jfree/data/KeyedObject,26,120,            clone.object = pc.clone();,0.0,0,-1,0
org/jfree/data/KeyedObject,26,122,        return clone;      ,0.0,0,-1,0
org/jfree/data/KeyedObject,26,134,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/KeyedObject,26,135,            return true;,0.0,0,-1,0
org/jfree/data/KeyedObject,26,138,        if (!(obj instanceof KeyedObject)) {,0.0,0,-1,0
org/jfree/data/KeyedObject,26,139,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObject,26,141,        KeyedObject that = (KeyedObject) obj;,0.0,0,-1,0
org/jfree/data/KeyedObject,26,142,"        if (!ObjectUtilities.equal(this.key, that.key)) {",0.0,0,-1,0
org/jfree/data/KeyedObject,26,143,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObject,26,146,"        if (!ObjectUtilities.equal(this.object, that.object)) {",0.0,0,-1,0
org/jfree/data/KeyedObject,26,147,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObject,26,150,        return true;,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,77,        return this.data.size();,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,88,        Object result = null;,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,89,        if (item >= 0 && item < this.data.size()) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,90,            KeyedObject kobj = (KeyedObject) this.data.get(item);,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,91,            if (kobj != null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,92,                result = kobj.getObject();,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,95,        return result;,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,108,        Comparable result = null;,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,109,        if (index >= 0 && index < this.data.size()) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,110,            KeyedObject item = (KeyedObject) this.data.get(index);,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,111,            if (item != null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,112,                result = item.getKey();,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,115,        return result;,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,132,                result = i;,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,145,        List result = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,146,        Iterator iterator = this.data.iterator();,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,147,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,148,            KeyedObject ko = (KeyedObject) iterator.next();,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,149,            result.add(ko.getKey());,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,150,        },0.0,0,-1,0
org/jfree/data/KeyedObjects,26,151,        return result;,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,163,        return getObject(getIndex(key));,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,174,"        setObject(key, object);",0.0,0,-1,0
org/jfree/data/KeyedObjects,26,175,    },0.0,0,-1,0
org/jfree/data/KeyedObjects,26,188,            KeyedObject ko = (KeyedObject) this.data.get(keyIndex);,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,189,            ko.setObject(object);,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,190,        },0.0,0,-1,0
org/jfree/data/KeyedObjects,26,203,        this.data.remove(index);,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,204,    },0.0,0,-1,0
org/jfree/data/KeyedObjects,26,212,        removeValue(getIndex(key));,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,213,    },0.0,0,-1,0
org/jfree/data/KeyedObjects,26,223,        KeyedObjects clone = (KeyedObjects) super.clone();,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,224,        clone.data = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,225,        Iterator iterator = this.data.iterator();,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,226,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,227,            KeyedObject ko = (KeyedObject) iterator.next();,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,228,            clone.data.add(ko.clone());,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,229,        },0.0,0,-1,0
org/jfree/data/KeyedObjects,26,230,        return clone;      ,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,242,        if (o == null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,243,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,245,        if (o == this) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,246,            return true;,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,249,        if (!(o instanceof KeyedObjects)) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,250,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,253,        KeyedObjects kos = (KeyedObjects) o;,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,254,        int count = getItemCount();,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,255,        if (count != kos.getItemCount()) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,256,            return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,259,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,260,            Comparable k1 = getKey(i);,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,261,            Comparable k2 = kos.getKey(i);,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,262,            if (!k1.equals(k2)) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,263,                return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,265,            Object o1 = getObject(i);,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,266,            Object o2 = kos.getObject(i);,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,267,            if (o1 == null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,268,                if (o2 != null) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,269,                    return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,273,                if (!o1.equals(o2)) {,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,274,                    return false;,0.0,0,-1,0
org/jfree/data/KeyedObjects,26,278,        return true;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,104,        if (key == null) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,105,"            throw new NullPointerException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,107,        TaskSeries result = null;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,108,        int index = getRowIndex(key);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,109,        if (index >= 0) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,110,            result = getSeries(index);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,112,        return result;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,125,        if ((series < 0) || (series >= getSeriesCount())) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,126,"            throw new IllegalArgumentException(""Series index out of bounds"");",0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,128,        return (TaskSeries) this.data.get(series);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,137,        return getRowCount();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,148,        TaskSeries ts = (TaskSeries) this.data.get(series);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,149,        return ts.getKey();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,167,        return this.data;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,185,        return this.keys;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,207,        return this.keys.indexOf(columnKey);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,251,"            throw new IllegalArgumentException(""Null 'series' argument."");",0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,277,        if (series == null) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,278,"            throw new IllegalArgumentException(""Null 'series' argument."");",0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,280,        if (this.data.contains(series)) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,281,            series.removeChangeListener(this);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,282,            this.data.remove(series);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,283,            fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,285,    },0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,295,        if ((series < 0) || (series >= getSeriesCount())) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,296,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,301,        TaskSeries ts = (TaskSeries) this.data.get(series);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,302,        ts.removeChangeListener(this);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,303,        this.data.remove(series);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,304,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,306,    },0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,317,        Iterator iterator = this.data.iterator();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,318,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,319,            TaskSeries series = (TaskSeries) iterator.next();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,320,            series.removeChangeListener(this);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,321,        },0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,324,        this.data.clear();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,325,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,327,    },0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,338,"        return getStartValue(rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,350,"        return getStartValue(row, column);",0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,436,        Comparable rowKey = getRowKey(row);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,437,        Comparable columnKey = getColumnKey(column);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,438,"        return getPercentComplete(rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,450,        Number result = null;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,451,        int row = getRowIndex(rowKey);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,452,        TaskSeries series = (TaskSeries) this.data.get(row);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,453,        Task task = series.get(columnKey.toString());,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,454,        if (task != null) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,455,            result = task.getPercentComplete();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,457,        return result;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,469,        Comparable rowKey = getRowKey(row);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,470,        Comparable columnKey = getColumnKey(column);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,471,"        return getSubIntervalCount(rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,483,        int result = 0;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,484,        int row = getRowIndex(rowKey);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,485,        TaskSeries series = (TaskSeries) this.data.get(row);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,486,        Task task = series.get(columnKey.toString());,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,487,        if (task != null) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,488,            result = task.getSubtaskCount();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,490,        return result;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,503,        Comparable rowKey = getRowKey(row);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,504,        Comparable columnKey = getColumnKey(column);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,505,"        return getStartValue(rowKey, columnKey, subinterval);",0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,519,        Number result = null;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,520,        int row = getRowIndex(rowKey);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,521,        TaskSeries series = (TaskSeries) this.data.get(row);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,522,        Task task = series.get(columnKey.toString());,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,523,        if (task != null) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,524,            Task sub = task.getSubtask(subinterval);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,525,            if (sub != null) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,526,                TimePeriod duration = sub.getDuration();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,527,                result = new Long(duration.getStart().getTime());,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,530,        return result;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,543,        Comparable rowKey = getRowKey(row);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,544,        Comparable columnKey = getColumnKey(column);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,545,"        return getEndValue(rowKey, columnKey, subinterval);",0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,559,        Number result = null;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,560,        int row = getRowIndex(rowKey);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,561,        TaskSeries series = (TaskSeries) this.data.get(row);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,562,        Task task = series.get(columnKey.toString());,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,563,        if (task != null) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,564,            Task sub = task.getSubtask(subinterval);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,565,            if (sub != null) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,566,                TimePeriod duration = sub.getDuration();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,567,                result = new Long(duration.getEnd().getTime());,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,570,        return result;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,583,        Comparable rowKey = getRowKey(row);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,584,        Comparable columnKey = getColumnKey(column);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,585,"        return getPercentComplete(rowKey, columnKey, subinterval);",0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,599,        Number result = null;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,600,        int row = getRowIndex(rowKey);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,601,        TaskSeries series = (TaskSeries) this.data.get(row);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,602,        Task task = series.get(columnKey.toString());,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,603,        if (task != null) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,604,            Task sub = task.getSubtask(subinterval);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,605,            if (sub != null) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,606,                result = sub.getPercentComplete();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,609,        return result;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,618,        refreshKeys();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,619,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,620,    },0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,627,        this.keys.clear();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,628,        for (int i = 0; i < getSeriesCount(); i++) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,629,            TaskSeries series = (TaskSeries) this.data.get(i);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,631,            Iterator iterator = series.getTasks().iterator();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,632,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,633,                Task task = (Task) iterator.next();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,634,                String key = task.getDescription();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,635,                int index = this.keys.indexOf(key);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,636,                if (index < 0) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,637,                    this.keys.add(key);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,639,            },0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,642,    },0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,652,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,653,            return true;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,655,        if (!(obj instanceof TaskSeriesCollection)) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,656,            return false;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,658,        TaskSeriesCollection that = (TaskSeriesCollection) obj;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,659,"        if (!ObjectUtilities.equal(this.data, that.data)) {",0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,660,            return false;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeriesCollection,26,662,        return true;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,84,"            throw new IllegalArgumentException(""Null 'task' argument."");",0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,98,        this.tasks.remove(task);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,99,        fireSeriesChanged();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,100,    },0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,108,        this.tasks.clear();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,109,        fireSeriesChanged();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,110,    },0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,118,        return this.tasks.size();,0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,129,        return (Task) this.tasks.get(index);,0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,169,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,170,            return true;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,172,        if (!(obj instanceof TaskSeries)) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,173,            return false;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,175,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,176,            return false;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,178,        TaskSeries that = (TaskSeries) obj;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,179,        if (!this.tasks.equals(that.tasks)) {,0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,180,            return false;,0.0,0,-1,0
org/jfree/data/gantt/TaskSeries,26,182,        return true;,0.0,0,-1,0
org/jfree/data/general/Series,26,114,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/data/general/Series,26,143,        if (key == null) {,0.0,0,-1,0
org/jfree/data/general/Series,26,144,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/data/general/Series,26,146,        Comparable old = this.key;,0.0,0,-1,0
org/jfree/data/general/Series,26,147,        this.key = key;,0.0,0,-1,0
org/jfree/data/general/Series,26,148,"        this.propertyChangeSupport.firePropertyChange(""Key"", old, key);",0.0,0,-1,0
org/jfree/data/general/Series,26,149,    },0.0,0,-1,0
org/jfree/data/general/Series,26,159,        return this.description;,0.0,0,-1,0
org/jfree/data/general/Series,26,171,        String old = this.description;,0.0,0,-1,0
org/jfree/data/general/Series,26,172,        this.description = description;,0.0,0,-1,0
org/jfree/data/general/Series,26,173,"        this.propertyChangeSupport.firePropertyChange(""Description"", old, ",0.0,0,-1,0
org/jfree/data/general/Series,26,175,    },0.0,0,-1,0
org/jfree/data/general/Series,26,186,        return this.notify;,0.0,0,-1,0
org/jfree/data/general/Series,26,198,        if (this.notify != notify) {,0.0,0,-1,0
org/jfree/data/general/Series,26,199,            this.notify = notify;,0.0,0,-1,0
org/jfree/data/general/Series,26,200,            fireSeriesChanged();,0.0,0,-1,0
org/jfree/data/general/Series,26,202,    },0.0,0,-1,0
org/jfree/data/general/Series,26,223,        Series clone = (Series) super.clone();,0.0,0,-1,0
org/jfree/data/general/Series,26,224,        clone.listeners = new EventListenerList();,0.0,0,-1,0
org/jfree/data/general/Series,26,225,        clone.propertyChangeSupport = new PropertyChangeSupport(clone);,0.0,0,-1,0
org/jfree/data/general/Series,26,226,        return clone;,0.0,0,-1,0
org/jfree/data/general/Series,26,238,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/general/Series,26,239,            return true;,0.0,0,-1,0
org/jfree/data/general/Series,26,241,        if (!(obj instanceof Series)) {,0.0,0,-1,0
org/jfree/data/general/Series,26,242,            return false;,0.0,0,-1,0
org/jfree/data/general/Series,26,244,        Series that = (Series) obj;,0.0,0,-1,0
org/jfree/data/general/Series,26,245,        if (!getKey().equals(that.getKey())) {,0.0,0,-1,0
org/jfree/data/general/Series,26,246,            return false;,0.0,0,-1,0
org/jfree/data/general/Series,26,248,"        if (!ObjectUtilities.equal(getDescription(), that.getDescription())) {",0.0,0,-1,0
org/jfree/data/general/Series,26,249,            return false;,0.0,0,-1,0
org/jfree/data/general/Series,26,251,        return true;,0.0,0,-1,0
org/jfree/data/general/Series,26,261,        result = this.key.hashCode();,0.0,0,-1,0
org/jfree/data/general/Series,26,262,        result = 29 * result + (this.description != null ,0.0,0,-1,0
org/jfree/data/general/Series,26,264,        return result;,0.0,0,-1,0
org/jfree/data/general/Series,26,287,"        this.listeners.remove(SeriesChangeListener.class, listener);",0.0,0,-1,0
org/jfree/data/general/Series,26,288,    },0.0,0,-1,0
org/jfree/data/general/Series,26,310,            if (listenerList[i] == SeriesChangeListener.class) {,0.0,0,-1,0
org/jfree/data/general/Series,26,311,                ((SeriesChangeListener) listenerList[i + 1]).seriesChanged(,0.0,0,-1,0
org/jfree/data/general/Series,26,324,        this.propertyChangeSupport.addPropertyChangeListener(listener);,0.0,0,-1,0
org/jfree/data/general/Series,26,325,    },0.0,0,-1,0
org/jfree/data/general/Series,26,333,        this.propertyChangeSupport.removePropertyChangeListener(listener);,0.0,0,-1,0
org/jfree/data/general/Series,26,334,    },0.0,0,-1,0
org/jfree/data/general/Series,26,345,"        this.propertyChangeSupport.firePropertyChange(property, oldValue, ",0.0,0,-1,0
org/jfree/data/general/Series,26,347,    },0.0,0,-1,0
org/jfree/data/gantt/Task,26,88,"            throw new IllegalArgumentException(""Null 'description' argument."");",0.0,0,-1,0
org/jfree/data/gantt/Task,26,105,"        this(description, new SimpleTimePeriod(start, end));",0.0,0,-1,0
org/jfree/data/gantt/Task,26,106,    },0.0,0,-1,0
org/jfree/data/gantt/Task,26,123,        if (description == null) {,0.0,0,-1,0
org/jfree/data/gantt/Task,26,124,"            throw new IllegalArgumentException(""Null 'description' argument."");",0.0,0,-1,0
org/jfree/data/gantt/Task,26,126,        this.description = description;,0.0,0,-1,0
org/jfree/data/gantt/Task,26,127,    },0.0,0,-1,0
org/jfree/data/gantt/Task,26,144,        this.duration = duration;,0.0,0,-1,0
org/jfree/data/gantt/Task,26,145,    },0.0,0,-1,0
org/jfree/data/gantt/Task,26,153,        return this.percentComplete;,0.0,0,-1,0
org/jfree/data/gantt/Task,26,162,        this.percentComplete = percent;,0.0,0,-1,0
org/jfree/data/gantt/Task,26,163,    },0.0,0,-1,0
org/jfree/data/gantt/Task,26,171,        setPercentComplete(new Double(percent));,0.0,0,-1,0
org/jfree/data/gantt/Task,26,172,    },0.0,0,-1,0
org/jfree/data/gantt/Task,26,180,        if (subtask == null) {,0.0,0,-1,0
org/jfree/data/gantt/Task,26,181,"            throw new IllegalArgumentException(""Null 'subtask' argument."");",0.0,0,-1,0
org/jfree/data/gantt/Task,26,183,        this.subtasks.add(subtask);,0.0,0,-1,0
org/jfree/data/gantt/Task,26,184,    },0.0,0,-1,0
org/jfree/data/gantt/Task,26,192,        this.subtasks.remove(subtask);,0.0,0,-1,0
org/jfree/data/gantt/Task,26,193,    },0.0,0,-1,0
org/jfree/data/gantt/Task,26,201,        return this.subtasks.size();,0.0,0,-1,0
org/jfree/data/gantt/Task,26,212,        return (Task) this.subtasks.get(index);,0.0,0,-1,0
org/jfree/data/gantt/Task,26,223,        if (object == this) {,0.0,0,-1,0
org/jfree/data/gantt/Task,26,224,            return true;,0.0,0,-1,0
org/jfree/data/gantt/Task,26,226,        if (!(object instanceof Task)) {,0.0,0,-1,0
org/jfree/data/gantt/Task,26,227,            return false;,0.0,0,-1,0
org/jfree/data/gantt/Task,26,229,        Task that = (Task) object;,0.0,0,-1,0
org/jfree/data/gantt/Task,26,230,"        if (!ObjectUtilities.equal(this.description, that.description)) {",0.0,0,-1,0
org/jfree/data/gantt/Task,26,231,            return false;,0.0,0,-1,0
org/jfree/data/gantt/Task,26,233,"        if (!ObjectUtilities.equal(this.duration, that.duration)) {",0.0,0,-1,0
org/jfree/data/gantt/Task,26,234,            return false;,0.0,0,-1,0
org/jfree/data/gantt/Task,26,236,"        if (!ObjectUtilities.equal(this.percentComplete, ",0.0,0,-1,0
org/jfree/data/gantt/Task,26,238,            return false;,0.0,0,-1,0
org/jfree/data/gantt/Task,26,240,"        if (!ObjectUtilities.equal(this.subtasks, that.subtasks)) {",0.0,0,-1,0
org/jfree/data/gantt/Task,26,241,            return false;,0.0,0,-1,0
org/jfree/data/gantt/Task,26,243,        return true;,0.0,0,-1,0
org/jfree/data/gantt/Task,26,255,        Task clone = (Task) super.clone();,0.0,0,-1,0
org/jfree/data/gantt/Task,26,256,        return clone;      ,0.0,0,-1,0
org/jfree/data/time/Year,26,90,        this(new Date());,0.0,0,-1,0
org/jfree/data/time/Year,26,91,    },0.0,0,-1,0
org/jfree/data/time/Year,26,98,    public Year(int year) {,0.0,0,-1,0
org/jfree/data/time/Year,26,99,        if ((year < SerialDate.MINIMUM_YEAR_SUPPORTED),0.0,0,-1,0
org/jfree/data/time/Year,26,102,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/time/Year,26,105,        this.year = (short) year;,0.0,0,-1,0
org/jfree/data/time/Year,26,106,        peg(Calendar.getInstance());,0.0,0,-1,0
org/jfree/data/time/Year,26,107,    },0.0,0,-1,0
org/jfree/data/time/Year,26,116,"        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE);",0.0,0,-1,0
org/jfree/data/time/Year,26,117,    },0.0,0,-1,0
org/jfree/data/time/Year,26,125,"    public Year(Date time, TimeZone zone) {",0.0,0,-1,0
org/jfree/data/time/Year,26,126,        Calendar calendar = Calendar.getInstance(zone);,0.0,0,-1,0
org/jfree/data/time/Year,26,127,        calendar.setTime(time);,0.0,0,-1,0
org/jfree/data/time/Year,26,128,        this.year = (short) calendar.get(Calendar.YEAR);,0.0,0,-1,0
org/jfree/data/time/Year,26,129,        peg(calendar);,0.0,0,-1,0
org/jfree/data/time/Year,26,130,    },0.0,0,-1,0
org/jfree/data/time/Year,26,138,        return this.year;,0.0,0,-1,0
org/jfree/data/time/Year,26,152,        return this.firstMillisecond;,0.0,0,-1,0
org/jfree/data/time/Year,26,166,        return this.lastMillisecond;,0.0,0,-1,0
org/jfree/data/time/Year,26,178,        this.firstMillisecond = getFirstMillisecond(calendar);,0.0,0,-1,0
org/jfree/data/time/Year,26,179,        this.lastMillisecond = getLastMillisecond(calendar);,0.0,0,-1,0
org/jfree/data/time/Year,26,180,    },0.0,0,-1,0
org/jfree/data/time/Year,26,189,        if (this.year > SerialDate.MINIMUM_YEAR_SUPPORTED) {,0.0,0,-1,0
org/jfree/data/time/Year,26,190,            return new Year(this.year - 1);,0.0,0,-1,0
org/jfree/data/time/Year,26,193,            return null;,0.0,0,-1,0
org/jfree/data/time/Year,26,204,        if (this.year < SerialDate.MAXIMUM_YEAR_SUPPORTED) {,0.0,0,-1,0
org/jfree/data/time/Year,26,205,            return new Year(this.year + 1);,0.0,0,-1,0
org/jfree/data/time/Year,26,208,            return null;,0.0,0,-1,0
org/jfree/data/time/Year,26,220,        return this.year;,0.0,0,-1,0
org/jfree/data/time/Year,26,235,"        calendar.set(this.year, Calendar.JANUARY, 1, 0, 0, 0);",0.0,0,-1,0
org/jfree/data/time/Year,26,236,"        calendar.set(Calendar.MILLISECOND, 0);",0.0,0,-1,0
org/jfree/data/time/Year,26,239,        return calendar.getTime().getTime();,0.0,0,-1,0
org/jfree/data/time/Year,26,254,"        calendar.set(this.year, Calendar.DECEMBER, 31, 23, 59, 59);",0.0,0,-1,0
org/jfree/data/time/Year,26,255,"        calendar.set(Calendar.MILLISECOND, 999);",0.0,0,-1,0
org/jfree/data/time/Year,26,258,        return calendar.getTime().getTime();,0.0,0,-1,0
org/jfree/data/time/Year,26,273,        if (object != null) {,0.0,0,-1,0
org/jfree/data/time/Year,26,274,            if (object instanceof Year) {,0.0,0,-1,0
org/jfree/data/time/Year,26,275,                Year target = (Year) object;,0.0,0,-1,0
org/jfree/data/time/Year,26,276,                return (this.year == target.getYear());,0.0,0,-1,0
org/jfree/data/time/Year,26,279,                return false;,0.0,0,-1,0
org/jfree/data/time/Year,26,283,            return false;,0.0,0,-1,0
org/jfree/data/time/Year,26,297,        int result = 17;,0.0,0,-1,0
org/jfree/data/time/Year,26,298,        int c = this.year;,0.0,0,-1,0
org/jfree/data/time/Year,26,299,        result = 37 * result + c;,0.0,0,-1,0
org/jfree/data/time/Year,26,300,        return result;,0.0,0,-1,0
org/jfree/data/time/Year,26,319,        if (o1 instanceof Year) {,0.0,0,-1,0
org/jfree/data/time/Year,26,320,            Year y = (Year) o1;,0.0,0,-1,0
org/jfree/data/time/Year,26,321,            result = this.year - y.getYear();,0.0,0,-1,0
org/jfree/data/time/Year,26,322,        },0.0,0,-1,0
org/jfree/data/time/Year,26,326,        else if (o1 instanceof RegularTimePeriod) {,0.0,0,-1,0
org/jfree/data/time/Year,26,328,            result = 0;,0.0,0,-1,0
org/jfree/data/time/Year,26,335,            result = 1;,0.0,0,-1,0
org/jfree/data/time/Year,26,338,        return result;,0.0,0,-1,0
org/jfree/data/time/Year,26,348,        return Integer.toString(this.year);,0.0,0,-1,0
org/jfree/data/time/Year,26,366,            y = Integer.parseInt(s.trim());,0.0,0,-1,0
org/jfree/data/time/Year,26,370,        },0.0,0,-1,0
org/jfree/data/time/Year,26,368,        catch (NumberFormatException e) {,0.0,0,-1,0
org/jfree/data/time/Year,26,369,"            throw new TimePeriodFormatException(""Cannot parse string."");",0.0,0,-1,0
org/jfree/data/time/Year,26,374,            return new Year(y);,0.0,0,-1,0
org/jfree/data/time/Year,26,376,        catch (IllegalArgumentException e) {,0.0,0,-1,0
org/jfree/data/time/Year,26,377,"            throw new TimePeriodFormatException(""Year outside valid range."");",0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,87,        RegularTimePeriod result = null;,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,89,            Constructor constructor = c.getDeclaredConstructor(,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,91,            result = (RegularTimePeriod) constructor.newInstance(,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,96,        },0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,94,        catch (Exception e) {,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,97,        return result;  ,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,109,        if (c.equals(Year.class)) {,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,110,            return Quarter.class;,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,112,        else if (c.equals(Quarter.class)) {,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,113,            return Month.class;,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,115,        else if (c.equals(Month.class)) {,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,116,            return Day.class;,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,118,        else if (c.equals(Day.class)) {,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,119,            return Hour.class;,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,121,        else if (c.equals(Hour.class)) {,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,122,            return Minute.class;,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,124,        else if (c.equals(Minute.class)) {,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,125,            return Second.class;,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,127,        else if (c.equals(Second.class)) {,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,128,            return Millisecond.class;,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,131,            return Millisecond.class;,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,184,        return new Date(getFirstMillisecond());,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,196,        return new Date(getLastMillisecond());,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,256,        long m1 = getFirstMillisecond();,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,257,        long m2 = getLastMillisecond();,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,258,        return m1 + (m2 - m1) / 2;,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,270,        long m1 = getFirstMillisecond(calendar);,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,271,        long m2 = getLastMillisecond(calendar);,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,272,        return m1 + (m2 - m1) / 2;,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,281,        return String.valueOf(getStart());,0.0,0,-1,0
org/jfree/data/time/RegularTimePeriod,26,90,"                    new Class[] {Date.class, TimeZone.class});",0.0,0,-1,0
org/jfree/data/time/TimePeriodFormatException,26,57,        super(message);,0.0,0,-1,0
org/jfree/data/time/TimePeriodFormatException,26,58,    },0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,78,"        this(new Date(start), new Date(end));   ",0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,79,    },0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,89,"            throw new IllegalArgumentException(""Requires end >= start."");",0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,123,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,124,            return true;,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,126,        if (!(obj instanceof TimePeriod)) {,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,127,            return false;,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,129,        TimePeriod that = (TimePeriod) obj;,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,130,        if (!this.start.equals(that.getStart())) {,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,131,            return false;   ,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,133,        if (!this.end.equals(that.getEnd())) {,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,134,            return false;   ,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,136,        return true;,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,151,        TimePeriod that = (TimePeriod) obj;,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,152,        long t0 = getStart().getTime();,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,153,        long t1 = getEnd().getTime();,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,154,        long m0 = t0 + (t1 - t0) / 2L;,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,155,        long t2 = that.getStart().getTime();,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,156,        long t3 = that.getEnd().getTime();,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,157,        long m1 = t2 + (t3 - t2) / 2L;,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,158,        if (m0 < m1) {,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,159,            return -1;   ,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,161,        else if (m0 > m1) {,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,162,            return 1;   ,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,165,            if (t0 < t2) {,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,166,                return -1;,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,168,            else if (t0 > t2) {,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,169,                return 1;   ,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,172,                if (t1 < t3) {,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,173,                    return -1;   ,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,175,                else if (t1 > t3) {,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,176,                    return 1;   ,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,179,                    return 0;   ,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,195,        int result = 17;,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,196,        result = 37 * result + this.start.hashCode();,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,197,        result = 37 * result + this.end.hashCode();,0.0,0,-1,0
org/jfree/data/time/SimpleTimePeriod,26,198,        return result;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,109,"    public SpreadsheetDate(final int day, final int month, final int year) {",0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,111,        if ((year >= 1900) && (year <= 9999)) {,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,112,            this.year = year;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,115,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,120,        if ((month >= MonthConstants.JANUARY) ,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,122,            this.month = month;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,125,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,130,"        if ((day >= 1) && (day <= SerialDate.lastDayOfMonth(month, year))) {",0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,131,            this.day = day;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,134,"            throw new IllegalArgumentException(""Invalid 'day' argument."");",0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,138,"        this.serial = calcSerial(day, month, year);",0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,140,    },0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,148,    public SpreadsheetDate(final int serial) {,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,150,        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,151,            this.serial = serial;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,154,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,160,      final int days = this.serial - SERIAL_LOWER_BOUND;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,162,      final int overestimatedYYYY = 1900 + (days / 365);,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,163,      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,164,      final int nonleapdays = days - leaps;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,166,      int underestimatedYYYY = 1900 + (nonleapdays / 365);,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,168,      if (underestimatedYYYY == overestimatedYYYY) {,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,169,          this.year = underestimatedYYYY;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,172,"          int ss1 = calcSerial(1, 1, underestimatedYYYY);",0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,173,          while (ss1 <= this.serial) {,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,174,              underestimatedYYYY = underestimatedYYYY + 1;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,175,"              ss1 = calcSerial(1, 1, underestimatedYYYY);",0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,177,          this.year = underestimatedYYYY - 1;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,180,"      final int ss2 = calcSerial(1, 1, this.year);",0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,182,      int[] daysToEndOfPrecedingMonth ,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,185,      if (isLeapYear(this.year)) {,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,186,          daysToEndOfPrecedingMonth ,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,191,      int mm = 1;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,192,      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,193,      while (sss < this.serial) {,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,194,          mm = mm + 1;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,195,          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,197,      this.month = mm - 1;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,200,      this.day = this.serial - ss2 ,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,203,    },0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,213,        return this.serial;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,222,        final Calendar calendar = Calendar.getInstance();,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,223,"        calendar.set(getYYYY(), getMonth() - 1, getDayOfMonth(), 0, 0, 0);",0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,224,        return calendar.getTime();,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,233,        return this.year;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,242,        return this.month;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,251,        return this.day;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,265,        return (this.serial + 6) % 7 + 1;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,281,        if (object instanceof SerialDate) {,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,282,            final SerialDate s = (SerialDate) object;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,283,            return (s.toSerial() == this.toSerial());,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,286,            return false;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,297,        return toSerial();,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,310,        return this.serial - other.toSerial();,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,322,        return compare((SerialDate) other);    ,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,335,        return (this.serial == other.toSerial());,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,348,        return (this.serial < other.toSerial());,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,361,        return (this.serial <= other.toSerial());,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,374,        return (this.serial > other.toSerial());,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,387,        return (this.serial >= other.toSerial());,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,401,"        return isInRange(d1, d2, SerialDate.INCLUDE_BOTH);",0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,419,        final int s1 = d1.toSerial();,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,420,        final int s2 = d2.toSerial();,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,421,"        final int start = Math.min(s1, s2);",0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,422,"        final int end = Math.max(s1, s2);",0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,424,        final int s = toSerial();,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,425,        if (include == SerialDate.INCLUDE_BOTH) {,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,426,            return (s >= start && s <= end);,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,428,        else if (include == SerialDate.INCLUDE_FIRST) {,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,429,            return (s >= start && s < end);            ,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,431,        else if (include == SerialDate.INCLUDE_SECOND) {,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,432,            return (s > start && s <= end);            ,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,435,            return (s > start && s < end);            ,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,451,        final int yy = ((y - 1900) * 365) + SerialDate.leapYearCount(y - 1);,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,452,        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,453,        if (m > MonthConstants.FEBRUARY) {,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,454,            if (SerialDate.isLeapYear(y)) {,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,455,                mm = mm + 1;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,458,        final int dd = d;,0.0,0,-1,0
org/jfree/data/time/SpreadsheetDate,26,459,        return yy + mm + dd + 1;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,212,    protected SerialDate() {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,213,    },0.0,0,-1,0
org/jfree/data/time/SerialDate,26,226,        switch(code) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,234,                return true;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,236,                return false;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,251,        final String[] shortWeekdayNames ,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,253,        final String[] weekDayNames = DATE_FORMAT_SYMBOLS.getWeekdays();,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,255,        int result = -1;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,256,        s = s.trim();,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,257,        for (int i = 0; i < weekDayNames.length; i++) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,258,            if (s.equals(shortWeekdayNames[i])) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,259,                result = i;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,260,                break;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,262,            if (s.equals(weekDayNames[i])) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,263,                result = i;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,264,                break;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,267,        return result;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,282,        final String[] weekdays = DATE_FORMAT_SYMBOLS.getWeekdays();,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,283,        return weekdays[weekday];,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,294,        return getMonths(false);,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,308,        if (shortened) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,309,            return DATE_FORMAT_SYMBOLS.getShortMonths();,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,312,            return DATE_FORMAT_SYMBOLS.getMonths();,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,327,        switch(code) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,340,                return true;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,342,                return false;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,356,        switch(code) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,359,            case MARCH: return 1;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,362,            case JUNE: return 2;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,365,            case SEPTEMBER: return 3;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,368,            case DECEMBER: return 4;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,369,            default: throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,387,"        return monthCodeToString(month, false);",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,407,        if (!isValidMonthCode(month)) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,408,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,414,        if (shortened) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,415,            months = DATE_FORMAT_SYMBOLS.getShortMonths();,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,418,            months = DATE_FORMAT_SYMBOLS.getMonths();,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,421,        return months[month - 1];,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,439,        final String[] shortMonthNames = DATE_FORMAT_SYMBOLS.getShortMonths();,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,440,        final String[] monthNames = DATE_FORMAT_SYMBOLS.getMonths();,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,442,        int result = -1;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,443,        s = s.trim();,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,447,            result = Integer.parseInt(s);,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,451,        },0.0,0,-1,0
org/jfree/data/time/SerialDate,26,449,        catch (NumberFormatException e) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,454,        if ((result < 1) || (result > 12)) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,455,            for (int i = 0; i < monthNames.length; i++) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,456,                if (s.equals(shortMonthNames[i])) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,457,                    result = i + 1;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,458,                    break;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,460,                if (s.equals(monthNames[i])) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,461,                    result = i + 1;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,462,                    break;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,467,        return result;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,481,        switch(code) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,486,            case LAST_WEEK_IN_MONTH: return true;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,487,            default: return false;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,501,        if ((yyyy % 4) != 0) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,502,            return false;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,504,        else if ((yyyy % 400) == 0) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,505,            return true;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,507,        else if ((yyyy % 100) == 0) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,508,            return false;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,511,            return true;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,528,        final int leap4 = (yyyy - 1896) / 4;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,529,        final int leap100 = (yyyy - 1800) / 100;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,530,        final int leap400 = (yyyy - 1600) / 400;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,531,        return leap4 - leap100 + leap400;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,550,        else if (isLeapYear(yyyy)) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,551,            return result + 1;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,554,            return result;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,570,        final int serialDayNumber = base.toSerial() + days;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,571,        return SerialDate.createInstance(serialDayNumber);,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,590,        final int yy = (12 * base.getYYYY() + base.getMonth() + months - 1) ,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,592,        final int mm = (12 * base.getYYYY() + base.getMonth() + months - 1) ,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,594,        final int dd = Math.min(,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,597,"        return SerialDate.createInstance(dd, mm, yy);",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,612,        final int baseY = base.getYYYY();,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,613,        final int baseM = base.getMonth();,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,614,        final int baseD = base.getDayOfMonth();,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,616,        final int targetY = baseY + years;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,617,        final int targetD = Math.min(,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,621,"        return SerialDate.createInstance(targetD, baseM, targetY);",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,639,        if (!SerialDate.isValidWeekdayCode(targetWeekday)) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,640,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,647,        final int baseDOW = base.getDayOfWeek();,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,648,        if (baseDOW > targetWeekday) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,649,"            adjust = Math.min(0, targetWeekday - baseDOW);",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,652,"            adjust = -7 + Math.max(0, targetWeekday - baseDOW);",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,655,"        return SerialDate.addDays(adjust, base);",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,673,        if (!SerialDate.isValidWeekdayCode(targetWeekday)) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,674,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,681,        final int baseDOW = base.getDayOfWeek();,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,682,        if (baseDOW > targetWeekday) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,683,"            adjust = 7 + Math.min(0, targetWeekday - baseDOW);",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,686,"            adjust = Math.max(0, targetWeekday - baseDOW);",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,689,"        return SerialDate.addDays(adjust, base);",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,706,        if (!SerialDate.isValidWeekdayCode(targetDOW)) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,707,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,713,        final int baseDOW = base.getDayOfWeek();,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,714,        int adjust = -Math.abs(targetDOW - baseDOW);,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,715,        if (adjust >= 4) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,716,            adjust = 7 - adjust;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,718,        if (adjust <= -4) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,719,            adjust = 7 + adjust;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,721,"        return SerialDate.addDays(adjust, base);",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,733,        final int last = SerialDate.lastDayOfMonth(,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,736,"        return SerialDate.createInstance(last, base.getMonth(), base.getYYYY());",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,750,        switch (count) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,751,"            case SerialDate.FIRST_WEEK_IN_MONTH : return ""First"";",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,752,"            case SerialDate.SECOND_WEEK_IN_MONTH : return ""Second"";",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,753,"            case SerialDate.THIRD_WEEK_IN_MONTH : return ""Third"";",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,754,"            case SerialDate.FOURTH_WEEK_IN_MONTH : return ""Fourth"";",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,755,"            case SerialDate.LAST_WEEK_IN_MONTH : return ""Last"";",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,757,"                return ""SerialDate.weekInMonthToString(): invalid code."";",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,773,        switch (relative) {,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,774,"            case SerialDate.PRECEDING : return ""Preceding"";",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,775,"            case SerialDate.NEAREST : return ""Nearest"";",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,776,"            case SerialDate.FOLLOWING : return ""Following"";",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,777,"            default : return ""ERROR : Relative To String"";",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,794,"        return new SpreadsheetDate(day, month, yyyy);",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,806,        return new SpreadsheetDate(serial);,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,818,        final GregorianCalendar calendar = new GregorianCalendar();,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,819,        calendar.setTime(date);,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,820,"        return new SpreadsheetDate(calendar.get(Calendar.DATE),",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,851,        return this.description;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,861,        this.description = description;,0.0,0,-1,0
org/jfree/data/time/SerialDate,26,862,    },0.0,0,-1,0
org/jfree/data/time/SerialDate,26,870,"        return getDayOfMonth() + ""-"" + SerialDate.monthCodeToString(getMonth())",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,1007,"        return getPreviousDayOfWeek(targetDOW, this);",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,1020,"        return getFollowingDayOfWeek(targetDOW, this);",0.0,0,-1,0
org/jfree/data/time/SerialDate,26,1031,"        return getNearestDayOfWeek(targetDOW, this);",0.0,0,-1,0
org/jfree/data/time/DateRange,26,97,"        super(lower, upper);",0.0,0,-1,0
org/jfree/data/time/DateRange,26,98,        this.lowerDate = new Date((long) lower);,0.0,0,-1,0
org/jfree/data/time/DateRange,26,99,        this.upperDate = new Date((long) upper);,0.0,0,-1,0
org/jfree/data/time/DateRange,26,100,    },0.0,0,-1,0
org/jfree/data/time/DateRange,26,111,"        this(other.getLowerBound(), other.getUpperBound());",0.0,0,-1,0
org/jfree/data/time/DateRange,26,112,    },0.0,0,-1,0
org/jfree/data/time/DateRange,26,138,        DateFormat df = DateFormat.getDateTimeInstance();,0.0,0,-1,0
org/jfree/data/time/DateRange,26,139,"        return ""["" + df.format(this.lowerDate) + "" --> "" ",0.0,0,-1,0
org/jfree/data/time/Month,26,96,        this(new Date());,0.0,0,-1,0
org/jfree/data/time/Month,26,97,    },0.0,0,-1,0
org/jfree/data/time/Month,26,105,"    public Month(int month, int year) {",0.0,0,-1,0
org/jfree/data/time/Month,26,106,        if ((month < 1) || (month > 12)) {,0.0,0,-1,0
org/jfree/data/time/Month,26,107,"            throw new IllegalArgumentException(""Month outside valid range."");",0.0,0,-1,0
org/jfree/data/time/Month,26,109,        this.month = month;,0.0,0,-1,0
org/jfree/data/time/Month,26,110,        this.year = year;,0.0,0,-1,0
org/jfree/data/time/Month,26,111,        peg(Calendar.getInstance());,0.0,0,-1,0
org/jfree/data/time/Month,26,112,    },0.0,0,-1,0
org/jfree/data/time/Month,26,120,"    public Month(int month, Year year) {",0.0,0,-1,0
org/jfree/data/time/Month,26,121,        if ((month < 1) || (month > 12)) {,0.0,0,-1,0
org/jfree/data/time/Month,26,122,"            throw new IllegalArgumentException(""Month outside valid range."");",0.0,0,-1,0
org/jfree/data/time/Month,26,124,        this.month = month;,0.0,0,-1,0
org/jfree/data/time/Month,26,125,        this.year = year.getYear();,0.0,0,-1,0
org/jfree/data/time/Month,26,126,        peg(Calendar.getInstance());,0.0,0,-1,0
org/jfree/data/time/Month,26,127,    },0.0,0,-1,0
org/jfree/data/time/Month,26,136,"        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE);",0.0,0,-1,0
org/jfree/data/time/Month,26,137,    },0.0,0,-1,0
org/jfree/data/time/Month,26,161,        return new Year(this.year);,0.0,0,-1,0
org/jfree/data/time/Month,26,170,        return this.year;,0.0,0,-1,0
org/jfree/data/time/Month,26,179,        return this.month;,0.0,0,-1,0
org/jfree/data/time/Month,26,207,        return this.lastMillisecond;,0.0,0,-1,0
org/jfree/data/time/Month,26,230,        if (this.month != MonthConstants.JANUARY) {,0.0,0,-1,0
org/jfree/data/time/Month,26,231,"            result = new Month(this.month - 1, this.year);",0.0,0,-1,0
org/jfree/data/time/Month,26,234,            if (this.year > 1900) {,0.0,0,-1,0
org/jfree/data/time/Month,26,235,"                result = new Month(MonthConstants.DECEMBER, this.year - 1);",0.0,0,-1,0
org/jfree/data/time/Month,26,238,                result = null;,0.0,0,-1,0
org/jfree/data/time/Month,26,241,        return result;,0.0,0,-1,0
org/jfree/data/time/Month,26,251,        if (this.month != MonthConstants.DECEMBER) {,0.0,0,-1,0
org/jfree/data/time/Month,26,252,"            result = new Month(this.month + 1, this.year);",0.0,0,-1,0
org/jfree/data/time/Month,26,255,            if (this.year < 9999) {,0.0,0,-1,0
org/jfree/data/time/Month,26,256,"                result = new Month(MonthConstants.JANUARY, this.year + 1);",0.0,0,-1,0
org/jfree/data/time/Month,26,259,                result = null;,0.0,0,-1,0
org/jfree/data/time/Month,26,262,        return result;,0.0,0,-1,0
org/jfree/data/time/Month,26,271,        return this.year * 12L + this.month;,0.0,0,-1,0
org/jfree/data/time/Month,26,282,"        return SerialDate.monthCodeToString(this.month) + "" "" + this.year;",0.0,0,-1,0
org/jfree/data/time/Month,26,297,        if (obj != null) {,0.0,0,-1,0
org/jfree/data/time/Month,26,298,            if (obj instanceof Month) {,0.0,0,-1,0
org/jfree/data/time/Month,26,299,                Month target = (Month) obj;,0.0,0,-1,0
org/jfree/data/time/Month,26,300,                return (this.month == target.getMonth() ,0.0,0,-1,0
org/jfree/data/time/Month,26,304,                return false;,0.0,0,-1,0
org/jfree/data/time/Month,26,308,            return false;,0.0,0,-1,0
org/jfree/data/time/Month,26,323,        int result = 17;,0.0,0,-1,0
org/jfree/data/time/Month,26,324,        result = 37 * result + this.month;,0.0,0,-1,0
org/jfree/data/time/Month,26,325,        result = 37 * result + this.year;,0.0,0,-1,0
org/jfree/data/time/Month,26,326,        return result;,0.0,0,-1,0
org/jfree/data/time/Month,26,344,        if (o1 instanceof Month) {,0.0,0,-1,0
org/jfree/data/time/Month,26,345,            Month m = (Month) o1;,0.0,0,-1,0
org/jfree/data/time/Month,26,346,            result = this.year - m.getYearValue();,0.0,0,-1,0
org/jfree/data/time/Month,26,347,            if (result == 0) {,0.0,0,-1,0
org/jfree/data/time/Month,26,348,                result = this.month - m.getMonth();,0.0,0,-1,0
org/jfree/data/time/Month,26,350,        },0.0,0,-1,0
org/jfree/data/time/Month,26,354,        else if (o1 instanceof RegularTimePeriod) {,0.0,0,-1,0
org/jfree/data/time/Month,26,356,            result = 0;,0.0,0,-1,0
org/jfree/data/time/Month,26,363,            result = 1;,0.0,0,-1,0
org/jfree/data/time/Month,26,366,        return result;,0.0,0,-1,0
org/jfree/data/time/Month,26,422,        Month result = null;,0.0,0,-1,0
org/jfree/data/time/Month,26,423,        if (s != null) {,0.0,0,-1,0
org/jfree/data/time/Month,26,426,            s = s.trim();,0.0,0,-1,0
org/jfree/data/time/Month,26,428,            int i = Month.findSeparator(s);,0.0,0,-1,0
org/jfree/data/time/Month,26,429,            if (i != -1) {,0.0,0,-1,0
org/jfree/data/time/Month,26,430,"                String s1 = s.substring(0, i).trim();",0.0,0,-1,0
org/jfree/data/time/Month,26,431,"                String s2 = s.substring(i + 1, s.length()).trim();",0.0,0,-1,0
org/jfree/data/time/Month,26,433,                Year year = Month.evaluateAsYear(s1);,0.0,0,-1,0
org/jfree/data/time/Month,26,435,                if (year != null) {,0.0,0,-1,0
org/jfree/data/time/Month,26,436,                    month = SerialDate.stringToMonthCode(s2);,0.0,0,-1,0
org/jfree/data/time/Month,26,437,                    if (month == -1) {,0.0,0,-1,0
org/jfree/data/time/Month,26,438,                        throw new TimePeriodFormatException(,0.0,0,-1,0
org/jfree/data/time/Month,26,442,"                    result = new Month(month, year);",0.0,0,-1,0
org/jfree/data/time/Month,26,445,                    year = Month.evaluateAsYear(s2);,0.0,0,-1,0
org/jfree/data/time/Month,26,446,                    if (year != null) {,0.0,0,-1,0
org/jfree/data/time/Month,26,447,                        month = SerialDate.stringToMonthCode(s1);,0.0,0,-1,0
org/jfree/data/time/Month,26,448,                        if (month == -1) {,0.0,0,-1,0
org/jfree/data/time/Month,26,449,                            throw new TimePeriodFormatException(,0.0,0,-1,0
org/jfree/data/time/Month,26,453,"                        result = new Month(month, year);",0.0,0,-1,0
org/jfree/data/time/Month,26,456,                        throw new TimePeriodFormatException(,0.0,0,-1,0
org/jfree/data/time/Month,26,462,            },0.0,0,-1,0
org/jfree/data/time/Month,26,464,                throw new TimePeriodFormatException(,0.0,0,-1,0
org/jfree/data/time/Month,26,470,        return result;,0.0,0,-1,0
org/jfree/data/time/Month,26,484,        int result = s.indexOf('-');,0.0,0,-1,0
org/jfree/data/time/Month,26,485,        if (result == -1) {,0.0,0,-1,0
org/jfree/data/time/Month,26,486,"            result = s.indexOf(',');",0.0,0,-1,0
org/jfree/data/time/Month,26,488,        if (result == -1) {,0.0,0,-1,0
org/jfree/data/time/Month,26,489,            result = s.indexOf(' ');,0.0,0,-1,0
org/jfree/data/time/Month,26,491,        if (result == -1) {,0.0,0,-1,0
org/jfree/data/time/Month,26,492,            result = s.indexOf('.');,0.0,0,-1,0
org/jfree/data/time/Month,26,494,        return result;,0.0,0,-1,0
org/jfree/data/time/Month,26,508,        Year result = null;,0.0,0,-1,0
org/jfree/data/time/Month,26,510,            result = Year.parseYear(s);,0.0,0,-1,0
org/jfree/data/time/Month,26,514,        },0.0,0,-1,0
org/jfree/data/time/Month,26,512,        catch (TimePeriodFormatException e) {,0.0,0,-1,0
org/jfree/data/time/Month,26,515,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,140,    private DatasetUtilities() {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,142,    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,154,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,155,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,157,        List keys = dataset.getKeys();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,158,        double totalValue = 0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,159,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,160,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,161,            Comparable current = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,162,            if (current != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,163,                Number value = dataset.getValue(current);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,164,                double v = 0.0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,165,                if (value != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,166,                    v = value.doubleValue();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,168,                if (v > 0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,169,                    totalValue = totalValue + v;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,172,        },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,173,        return totalValue;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,187,        int row = dataset.getRowIndex(rowKey);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,188,"        return createPieDatasetForRow(dataset, row);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,202,        DefaultPieDataset result = new DefaultPieDataset();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,203,        int columnCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,204,        for (int current = 0; current < columnCount; current++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,205,            Comparable columnKey = dataset.getColumnKey(current);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,206,"            result.setValue(columnKey, dataset.getValue(row, current));",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,208,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,222,        int column = dataset.getColumnIndex(columnKey);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,223,"        return createPieDatasetForColumn(dataset, column);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,237,        DefaultPieDataset result = new DefaultPieDataset();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,238,        int rowCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,239,        for (int i = 0; i < rowCount; i++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,240,            Comparable rowKey = dataset.getRowKey(i);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,241,"            result.setValue(rowKey, dataset.getValue(i, column));",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,243,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,263,        return DatasetUtilities.createConsolidatedPieDataset(,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,288,        DefaultPieDataset result = new DefaultPieDataset();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,289,        double total = DatasetUtilities.calculatePieDatasetTotal(source);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,292,        List keys = source.getKeys();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,293,        ArrayList otherKeys = new ArrayList();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,294,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,295,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,296,            Comparable currentKey = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,297,            Number dataValue = source.getValue(currentKey);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,298,            if (dataValue != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,299,                double value = dataValue.doubleValue();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,300,                if (value / total < minimumPercent) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,301,                    otherKeys.add(currentKey);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,304,        },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,307,        iterator = keys.iterator();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,308,        double otherValue = 0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,309,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,310,            Comparable currentKey = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,311,            Number dataValue = source.getValue(currentKey);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,312,            if (dataValue != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,313,                if (otherKeys.contains(currentKey) ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,316,                    otherValue += dataValue.doubleValue();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,320,"                    result.setValue(currentKey, dataValue);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,323,        },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,325,        if (otherKeys.size() >= minItems) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,326,"            result.setValue(key, otherValue);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,328,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,349,        DefaultCategoryDataset result = new DefaultCategoryDataset();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,350,        for (int r = 0; r < data.length; r++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,351,            String rowKey = rowKeyPrefix + (r + 1);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,352,            for (int c = 0; c < data[r].length; c++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,353,                String columnKey = columnKeyPrefix + (c + 1);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,354,"                result.addValue(new Double(data[r][c]), rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,357,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,408,        if (rowKeys == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,409,"            throw new IllegalArgumentException(""Null 'rowKeys' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,411,        if (columnKeys == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,412,"            throw new IllegalArgumentException(""Null 'columnKeys' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,414,        if (ArrayUtilities.hasDuplicateItems(rowKeys)) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,415,"            throw new IllegalArgumentException(""Duplicate items in 'rowKeys'."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,417,        if (ArrayUtilities.hasDuplicateItems(columnKeys)) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,418,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,422,        if (rowKeys.length != data.length) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,423,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,428,        int columnCount = 0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,429,        for (int r = 0; r < data.length; r++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,430,"            columnCount = Math.max(columnCount, data[r].length);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,432,        if (columnKeys.length != columnCount) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,433,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,440,        DefaultCategoryDataset result = new DefaultCategoryDataset();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,441,        for (int r = 0; r < data.length; r++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,442,            Comparable rowKey = rowKeys[r];,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,443,            for (int c = 0; c < data[r].length; c++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,444,                Comparable columnKey = columnKeys[c];,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,445,"                result.addValue(new Double(data[r][c]), rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,448,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,464,        if (rowKey == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,465,"            throw new IllegalArgumentException(""Null 'rowKey' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,467,        if (rowData == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,468,"            throw new IllegalArgumentException(""Null 'rowData' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,470,        DefaultCategoryDataset result = new DefaultCategoryDataset();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,471,        for (int i = 0; i < rowData.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,472,"            result.addValue(rowData.getValue(i), rowKey, rowData.getKey(i));",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,474,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,497,        if (f == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,498,"            throw new IllegalArgumentException(""Null 'f' argument."");   ",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,500,        if (seriesKey == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,501,"            throw new IllegalArgumentException(""Null 'seriesKey' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,503,        if (start >= end) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,504,"            throw new IllegalArgumentException(""Requires 'start' < 'end'."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,506,        if (samples < 2) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,507,"            throw new IllegalArgumentException(""Requires 'samples' > 1"");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,510,        XYSeries series = new XYSeries(seriesKey);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,511,        double step = (end - start) / samples;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,512,        for (int i = 0; i <= samples; i++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,513,            double x = start + (step * i);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,514,"            series.add(x, f.getValue(x));",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,516,        XYSeriesCollection collection = new XYSeriesCollection(series);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,517,        return collection;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,531,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,532,            return true;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,535,        int itemCount = dataset.getItemCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,536,        if (itemCount == 0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,537,            return true;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,540,        for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,541,            Number y = dataset.getValue(item);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,542,            if (y != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,543,                double yy = y.doubleValue();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,544,                if (yy > 0.0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,545,                    return false;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,550,        return true;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,564,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,565,            return true;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,568,        int rowCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,569,        int columnCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,570,        if (rowCount == 0 || columnCount == 0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,571,            return true;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,574,        for (int r = 0; r < rowCount; r++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,575,            for (int c = 0; c < columnCount; c++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,576,"                if (dataset.getValue(r, c) != null) {",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,577,                    return false;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,583,        return true;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,597,        boolean result = true;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,599,        if (dataset != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,600,            for (int s = 0; s < dataset.getSeriesCount(); s++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,601,                if (dataset.getItemCount(s) > 0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,602,                    result = false;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,608,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,620,"        return findDomainBounds(dataset, true);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,636,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,637,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,640,        Range result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,642,        if (dataset instanceof DomainInfo) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,643,            DomainInfo info = (DomainInfo) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,644,            result = info.getDomainBounds(includeInterval);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,645,        },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,647,"            result = iterateDomainBounds(dataset, includeInterval);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,649,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,662,"        return iterateDomainBounds(dataset, true);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,678,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,679,"            throw new IllegalArgumentException(""Null 'dataset' argument."");   ",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,681,        double minimum = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,682,        double maximum = Double.NEGATIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,683,        int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,686,        if (includeInterval && dataset instanceof IntervalXYDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,687,            IntervalXYDataset intervalXYData = (IntervalXYDataset) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,688,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,689,                int itemCount = dataset.getItemCount(series);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,690,                for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,691,"                    lvalue = intervalXYData.getStartXValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,692,"                    uvalue = intervalXYData.getEndXValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,693,"                    minimum = Math.min(minimum, lvalue);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,694,"                    maximum = Math.max(maximum, uvalue);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,697,        },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,699,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,700,                int itemCount = dataset.getItemCount(series);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,701,                for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,702,"                    lvalue = dataset.getXValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,703,                    uvalue = lvalue;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,704,"                    minimum = Math.min(minimum, lvalue);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,705,"                    maximum = Math.max(maximum, uvalue);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,709,        if (minimum > maximum) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,710,            return null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,713,"            return new Range(minimum, maximum);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,740,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,762,"        return findRangeBounds(dataset, true);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,778,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,779,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,781,        Range result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,782,        if (dataset instanceof RangeInfo) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,783,            RangeInfo info = (RangeInfo) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,784,            result = info.getRangeBounds(includeInterval);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,785,        },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,787,            result = iterateXYRangeBounds(dataset);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,789,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,849,        double minimum = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,850,        double maximum = Double.NEGATIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,851,        int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,852,        for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,853,            int itemCount = dataset.getItemCount(series);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,854,            for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,857,                if (dataset instanceof IntervalXYDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,858,                    IntervalXYDataset intervalXYData ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,860,"                    lvalue = intervalXYData.getStartYValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,861,"                    uvalue = intervalXYData.getEndYValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,862,                },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,863,                else if (dataset instanceof OHLCDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,864,                    OHLCDataset highLowData = (OHLCDataset) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,865,"                    lvalue = highLowData.getLowValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,866,"                    uvalue = highLowData.getHighValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,867,                },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,869,"                    lvalue = dataset.getYValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,870,                    uvalue = lvalue;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,872,                if (!Double.isNaN(lvalue)) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,873,"                    minimum = Math.min(minimum, lvalue);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,875,                if (!Double.isNaN(uvalue)) {     ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,876,"                    maximum = Math.max(maximum, uvalue);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,880,        if (minimum == Double.POSITIVE_INFINITY) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,881,            return null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,884,"            return new Range(minimum, maximum);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,902,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,903,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,905,        Number result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,907,        if (dataset instanceof DomainInfo) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,908,            DomainInfo info = (DomainInfo) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,909,            return new Double(info.getDomainLowerBound(true));,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,912,            double minimum = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,913,            int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,914,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,915,                int itemCount = dataset.getItemCount(series);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,916,                for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,919,                    if (dataset instanceof IntervalXYDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,920,                        IntervalXYDataset intervalXYData ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,922,"                        value = intervalXYData.getStartXValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,923,                    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,925,"                        value = dataset.getXValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,927,                    if (!Double.isNaN(value)) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,928,"                        minimum = Math.min(minimum, value);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,933,            if (minimum == Double.POSITIVE_INFINITY) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,934,                result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,937,                result = new Double(minimum);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,941,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,957,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,958,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,960,        Number result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,962,        if (dataset instanceof DomainInfo) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,963,            DomainInfo info = (DomainInfo) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,964,            return new Double(info.getDomainUpperBound(true));,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,969,            double maximum = Double.NEGATIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,970,            int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,971,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,972,                int itemCount = dataset.getItemCount(series);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,973,                for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,976,                    if (dataset instanceof IntervalXYDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,977,                        IntervalXYDataset intervalXYData ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,979,"                        value = intervalXYData.getEndXValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,980,                    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,982,"                        value = dataset.getXValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,984,                    if (!Double.isNaN(value)) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,985,"                        maximum = Math.max(maximum, value);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,989,            if (maximum == Double.NEGATIVE_INFINITY) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,990,                result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,993,                result = new Double(maximum);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,998,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1016,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1017,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1021,        if (dataset instanceof RangeInfo) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1022,            RangeInfo info = (RangeInfo) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1023,            return new Double(info.getRangeLowerBound(true));,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1028,            double minimum = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1029,            int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1030,            int itemCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1031,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1032,                for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1034,                    if (dataset instanceof IntervalCategoryDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1035,                        IntervalCategoryDataset icd ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1037,"                        value = icd.getStartValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1038,                    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1040,"                        value = dataset.getValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1042,                    if (value != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1043,"                        minimum = Math.min(minimum, value.doubleValue());",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1047,            if (minimum == Double.POSITIVE_INFINITY) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1048,                return null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1051,                return new Double(minimum);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1072,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1073,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1077,        if (dataset instanceof RangeInfo) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1078,            RangeInfo info = (RangeInfo) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1079,            return new Double(info.getRangeLowerBound(true));,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1084,            double minimum = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1085,            int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1086,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1087,                int itemCount = dataset.getItemCount(series);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1088,                for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1091,                    if (dataset instanceof IntervalXYDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1092,                        IntervalXYDataset intervalXYData ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1094,"                        value = intervalXYData.getStartYValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1095,                    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1096,                    else if (dataset instanceof OHLCDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1097,                        OHLCDataset highLowData = (OHLCDataset) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1098,"                        value = highLowData.getLowValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1099,                    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1101,"                        value = dataset.getYValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1103,                    if (!Double.isNaN(value)) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1104,"                        minimum = Math.min(minimum, value);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1109,            if (minimum == Double.POSITIVE_INFINITY) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1110,                return null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1113,                return new Double(minimum);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1133,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1134,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1138,        if (dataset instanceof RangeInfo) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1139,            RangeInfo info = (RangeInfo) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1140,            return new Double(info.getRangeUpperBound(true));,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1146,            double maximum = Double.NEGATIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1147,            int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1148,            int itemCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1149,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1150,                for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1152,                    if (dataset instanceof IntervalCategoryDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1153,                        IntervalCategoryDataset icd ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1155,"                        value = icd.getEndValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1156,                    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1158,"                        value = dataset.getValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1160,                    if (value != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1161,"                        maximum = Math.max(maximum, value.doubleValue());",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1165,            if (maximum == Double.NEGATIVE_INFINITY) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1166,                return null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1169,                return new Double(maximum);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1189,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1190,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1194,        if (dataset instanceof RangeInfo) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1195,            RangeInfo info = (RangeInfo) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1196,            return new Double(info.getRangeUpperBound(true));,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1202,            double maximum = Double.NEGATIVE_INFINITY;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1203,            int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1204,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1205,                int itemCount = dataset.getItemCount(series);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1206,                for (int item = 0; item < itemCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1208,                    if (dataset instanceof IntervalXYDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1209,                        IntervalXYDataset intervalXYData ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1211,"                        value = intervalXYData.getEndYValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1212,                    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1213,                    else if (dataset instanceof OHLCDataset) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1214,                        OHLCDataset highLowData = (OHLCDataset) dataset;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1215,"                        value = highLowData.getHighValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1216,                    },0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1218,"                        value = dataset.getYValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1220,                    if (!Double.isNaN(value)) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1221,"                        maximum = Math.max(maximum, value);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1225,            if (maximum == Double.NEGATIVE_INFINITY) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1226,                return null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1229,                return new Double(maximum);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1260,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1336,                            negative[groupIndex[series]] ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1367,        Number result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1368,        if (dataset != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1369,            double minimum = 0.0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1370,            int categoryCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1371,            for (int item = 0; item < categoryCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1372,                double total = 0.0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1374,                int seriesCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1375,                for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1376,"                    Number number = dataset.getValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1377,                    if (number != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1378,                        double value = number.doubleValue();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1379,                        if (value < 0.0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1380,                            total = total + value;  ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1385,"                minimum = Math.min(minimum, total);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1388,            result = new Double(minimum);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1390,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1404,        Number result = null;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1406,        if (dataset != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1407,            double maximum = 0.0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1408,            int categoryCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1409,            for (int item = 0; item < categoryCount; item++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1410,                double total = 0.0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1411,                int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1412,                for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1413,"                    Number number = dataset.getValue(series, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1414,                    if (number != null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1415,                        double value = number.doubleValue();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1416,                        if (value > 0.0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1417,                            total = total + value;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1421,"                maximum = Math.max(maximum, total);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1423,            result = new Double(maximum);,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1426,        return result;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1439,"        return findStackedRangeBounds(dataset, 0.0);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1453,        if (dataset == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1454,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1456,        double minimum = base;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1457,        double maximum = base;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1458,        for (int itemNo = 0; itemNo < dataset.getItemCount(); itemNo++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1459,            double positive = base;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1460,            double negative = base;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1461,            int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1462,            for (int seriesNo = 0; seriesNo < seriesCount; seriesNo++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1463,"                double y = dataset.getYValue(seriesNo, itemNo);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1464,                if (!Double.isNaN(y)) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1465,                    if (y > 0.0) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1466,                        positive += y;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1469,                        negative += y;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1473,            if (positive > maximum) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1474,                maximum = positive;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1476,            if (negative < minimum) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1477,                minimum = negative;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1480,        if (minimum <= maximum) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1481,"            return new Range(minimum, maximum);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1484,            return null;   ,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1500,        double total = 0.0;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1501,        int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1502,        for (int s = 0; s < seriesCount; s++) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1503,"            double value = dataset.getYValue(s, item);",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1504,            if (!Double.isNaN(value)) {,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1505,                total = total + value;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1508,        return total;,0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1524,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetUtilities,26,1549,            return null;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,26,82,"        this(source, chart, ChartChangeEventType.GENERAL);",0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,26,83,    },0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,26,106,        return this.chart;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,26,124,        return this.type;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,343,"        this(title, JFreeChart.DEFAULT_TITLE_FONT, plot, true);",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,344,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,367,"            throw new NullPointerException(""Null 'plot' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,405,                titleFont = DEFAULT_TITLE_FONT;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,427,        return this.renderingHints;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,441,        if (renderingHints == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,442,"            throw new NullPointerException(""RenderingHints given are null"");",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,444,        this.renderingHints = renderingHints;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,445,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,446,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,469,        this.borderVisible = visible;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,470,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,471,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,481,        return this.borderStroke;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,492,        this.borderStroke = stroke;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,493,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,494,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,504,        return this.borderPaint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,515,        this.borderPaint = paint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,516,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,517,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,527,        return this.padding;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,539,        if (padding == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,540,"            throw new IllegalArgumentException(""Null 'padding' argument."");   ",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,542,        this.padding = padding;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,543,        notifyListeners(new ChartChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,544,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,557,        return this.title;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,571,        this.title = title;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,572,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,573,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,588,        if (text != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,589,            if (this.title == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,590,"                setTitle(new TextTitle(text, JFreeChart.DEFAULT_TITLE_FONT));",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,593,                this.title.setText(text);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,597,            setTitle((TextTitle) null);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,599,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,610,        addSubtitle(legend);    ,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,611,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,622,        return getLegend(0);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,635,        int seen = 0;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,636,        Iterator iterator = this.subtitles.iterator();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,637,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,638,            Title subtitle = (Title) iterator.next();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,639,            if (subtitle instanceof LegendTitle) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,640,                if (seen == index) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,641,                    return (LegendTitle) subtitle;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,644,                    seen++;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,647,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,648,        return null;        ,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,658,        removeSubtitle(getLegend());,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,659,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,669,        return new ArrayList(this.subtitles);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,683,        if (subtitles == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,684,"            throw new NullPointerException(""Null 'subtitles' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,686,        setNotify(false);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,687,        clearSubtitles();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,688,        Iterator iterator = subtitles.iterator();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,689,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,690,            Title t = (Title) iterator.next();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,691,            if (t != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,692,                addSubtitle(t);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,694,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,695,        setNotify(true);  // this fires a ChartChangeEvent,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,696,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,720,"            throw new IllegalArgumentException(""Index out of range."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,734,        if (subtitle == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,735,"            throw new IllegalArgumentException(""Null 'subtitle' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,737,        this.subtitles.add(subtitle);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,738,        subtitle.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,739,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,740,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,752,        if (index < 0 || index > getSubtitleCount()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,753,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,756,        if (subtitle == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,757,"            throw new IllegalArgumentException(""Null 'subtitle' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,759,"        this.subtitles.add(index, subtitle);",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,760,        subtitle.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,761,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,762,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,771,        Iterator iterator = this.subtitles.iterator();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,772,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,773,            Title t = (Title) iterator.next();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,774,            t.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,775,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,776,        this.subtitles.clear();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,777,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,778,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,789,        this.subtitles.remove(title);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,790,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,791,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,815,        return (CategoryPlot) this.plot;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,829,        return (XYPlot) this.plot;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,841,        Object val = this.renderingHints.get(RenderingHints.KEY_ANTIALIASING);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,842,        return RenderingHints.VALUE_ANTIALIAS_ON.equals(val);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,857,        Object val = this.renderingHints.get(RenderingHints.KEY_ANTIALIASING);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,858,        if (val == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,859,            val = RenderingHints.VALUE_ANTIALIAS_DEFAULT;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,861,        if (!flag && RenderingHints.VALUE_ANTIALIAS_OFF.equals(val) ,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,864,            return;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,866,        if (flag) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,867,"            this.renderingHints.put(RenderingHints.KEY_ANTIALIASING, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,871,"            this.renderingHints.put(RenderingHints.KEY_ANTIALIASING, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,874,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,876,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,889,        return this.renderingHints.get(RenderingHints.KEY_TEXT_ANTIALIASING); ,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,907,        if (flag) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,908,            setTextAntiAlias(RenderingHints.VALUE_TEXT_ANTIALIAS_ON);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,911,            setTextAntiAlias(RenderingHints.VALUE_TEXT_ANTIALIAS_OFF);            ,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,913,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,928,"        this.renderingHints.put(RenderingHints.KEY_TEXT_ANTIALIASING, val);",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,929,        this.notifyListeners(new ChartChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,930,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,940,        return this.backgroundPaint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,953,        if (this.backgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,954,            if (!this.backgroundPaint.equals(paint)) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,955,                this.backgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,956,                fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,960,            if (paint != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,961,                this.backgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,962,                fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,966,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,977,        return this.backgroundImage;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,990,        if (this.backgroundImage != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,991,            if (!this.backgroundImage.equals(image)) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,992,                this.backgroundImage = image;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,993,                fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,997,            if (image != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,998,                this.backgroundImage = image;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,999,                fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1003,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1015,        return this.backgroundImageAlignment;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1027,        if (this.backgroundImageAlignment != alignment) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1028,            this.backgroundImageAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1029,            fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1031,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1041,        return this.backgroundImageAlpha;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1054,        if (this.backgroundImageAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1055,            this.backgroundImageAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1056,            fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1059,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1070,        return this.notify;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1082,        this.notify = notify;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1084,        if (notify) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1085,            notifyListeners(new ChartChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1087,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1099,"        draw(g2, area, null, null);",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1100,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1111,"        draw(g2, area, null, info);",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1112,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1135,            info.clear();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1136,            info.setChartArea(chartArea);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1152,            Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1153,"            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1155,"            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1158,"            Align.align(dest, chartArea, this.backgroundImageAlignment);",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1159,"            g2.drawImage(this.backgroundImage, (int) dest.getX(), ",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1162,            g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1166,            Paint paint = getBorderPaint();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1167,            Stroke stroke = getBorderStroke();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1168,            if (paint != null && stroke != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1169,                Rectangle2D borderArea = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1173,                g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1174,                g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1175,                g2.draw(borderArea);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1186,            entities = info.getEntityCollection();   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1192,                entities.addAll(e);   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1202,                entities.addAll(e);   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1211,            plotInfo = info.getPlotInfo();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1215,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1217,"        notifyListeners(new ChartProgressEvent(this, this, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1219,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1237,            x = frame.getX();   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1242,        else if (hAlign == HorizontalAlignment.RIGHT) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1243,            x = frame.getMaxX() - dimensions.width;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1249,            y = frame.getCenterY() - (dimensions.height / 2.0);   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1277,"            throw new IllegalArgumentException(""Null 't' argument."");   ",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1280,"            throw new IllegalArgumentException(""Null 'area' argument."");   ",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1286,            return null;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1290,            return null;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1315,        else if (position == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1316,"            Size2D size = t.arrange(g2, constraint);",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1317,"            titleArea = createAlignedRectangle2D(size, area, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1319,"            retValue = t.draw(g2, titleArea, p);",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1320,"            area.setRect(area.getX(), area.getY(), area.getWidth() ",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1322,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1324,        else if (position == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1325,"            Size2D size = t.arrange(g2, constraint);",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1326,"            titleArea = createAlignedRectangle2D(size, area, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1328,"            retValue = t.draw(g2, titleArea, p);",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1329,"            area.setRect(area.getX() + size.width, area.getY(), area.getWidth() ",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1331,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1333,"            throw new RuntimeException(""Unrecognised title position."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1388,        g2.dispose();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1389,        return image;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1412,"        BufferedImage image = new BufferedImage(imageWidth, imageHeight, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1414,        Graphics2D g2 = image.createGraphics();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1415,        double scaleX = imageWidth / drawWidth;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1416,        double scaleY = imageHeight / drawHeight;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1417,"        AffineTransform st = AffineTransform.getScaleInstance(scaleX, scaleY);",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1418,        g2.transform(st);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1419,"        draw(g2, new Rectangle2D.Double(0, 0, drawWidth, drawHeight), null, ",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1421,        g2.dispose();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1422,        return image;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1442,"        this.plot.handleClick(x, y, info.getPlotInfo());",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1444,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1454,        if (listener == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1455,"            throw new IllegalArgumentException(""Null 'listener' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1457,"        this.changeListeners.add(ChartChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1458,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1468,        if (listener == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1469,"            throw new IllegalArgumentException(""Null 'listener' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1471,"        this.changeListeners.remove(ChartChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1472,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1480,        ChartChangeEvent event = new ChartChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1481,        notifyListeners(event);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1482,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1494,                if (listeners[i] == ChartChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1495,                    ((ChartChangeListener) listeners[i + 1]).chartChanged(,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1511,"        this.progressListeners.add(ChartProgressListener.class, listener);",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1512,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1522,"        this.progressListeners.remove(ChartProgressListener.class, listener);",0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1523,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1535,            if (listeners[i] == ChartProgressListener.class) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1536,                ((ChartProgressListener) listeners[i + 1]).chartProgress(event);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1549,        event.setChart(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1550,        notifyListeners(event);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1551,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1573,            return true;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1576,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1580,            return false;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1583,            return false;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1586,            return false;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1589,            return false;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1592,            return false;   ,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1595,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1598,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1601,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1606,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1610,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1613,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1616,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1619,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1675,        System.out.println(JFreeChart.INFO.toString());,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1676,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1687,        JFreeChart chart = (JFreeChart) super.clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1689,        chart.renderingHints = (RenderingHints) this.renderingHints.clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1694,        if (this.title != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1695,            chart.title = (TextTitle) this.title.clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1696,            chart.title.addChangeListener(chart);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1699,        chart.subtitles = new ArrayList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1700,        for (int i = 0; i < getSubtitleCount(); i++) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1701,            Title subtitle = (Title) getSubtitle(i).clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1702,            chart.subtitles.add(subtitle);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1703,            subtitle.addChangeListener(chart);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1706,        if (this.plot != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1707,            chart.plot = (Plot) this.plot.clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1708,            chart.plot.addChangeListener(chart);,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1711,        chart.progressListeners = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1712,        chart.changeListeners = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,26,1713,        return chart;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,86,        return this.name;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,98,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,99,            return true;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,101,        if (!(obj instanceof ChartChangeEventType)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,102,            return false;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,104,        ChartChangeEventType that = (ChartChangeEventType) obj;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,105,        if (!this.name.equals(that.toString())) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,106,            return false;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,108,        return true;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,117,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,128,        if (this.equals(ChartChangeEventType.GENERAL)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,129,            return ChartChangeEventType.GENERAL;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,131,        else if (this.equals(ChartChangeEventType.NEW_DATASET)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,132,            return ChartChangeEventType.NEW_DATASET;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,134,        else if (this.equals(ChartChangeEventType.DATASET_UPDATED)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,135,            return ChartChangeEventType.DATASET_UPDATED;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,26,137,        return null;,0.0,0,-1,0
org/jfree/chart/event/TitleChangeEvent,26,76,        return this.title;,0.0,0,-1,0
org/jfree/chart/title/Title,26,152,"        this(position, horizontalAlignment, verticalAlignment,",0.0,0,-1,0
org/jfree/chart/title/Title,26,155,    },0.0,0,-1,0
org/jfree/chart/title/Title,26,178,"            throw new IllegalArgumentException(""Null 'position' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,26,181,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/title/Title,26,186,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/title/Title,26,190,"            throw new IllegalArgumentException(""Null 'spacer' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,26,219,"            throw new IllegalArgumentException(""Null 'position' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,26,244,        if (alignment == null) {,0.0,0,-1,0
org/jfree/chart/title/Title,26,245,"            throw new IllegalArgumentException(""Null 'alignment' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,26,247,        if (this.horizontalAlignment != alignment) {,0.0,0,-1,0
org/jfree/chart/title/Title,26,248,            this.horizontalAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/title/Title,26,249,            notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/Title,26,251,    },0.0,0,-1,0
org/jfree/chart/title/Title,26,259,        return this.verticalAlignment;,0.0,0,-1,0
org/jfree/chart/title/Title,26,270,        if (alignment == null) {,0.0,0,-1,0
org/jfree/chart/title/Title,26,271,"            throw new IllegalArgumentException(""Null 'alignment' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,26,273,        if (this.verticalAlignment != alignment) {,0.0,0,-1,0
org/jfree/chart/title/Title,26,274,            this.verticalAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/title/Title,26,275,            notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/Title,26,277,    },0.0,0,-1,0
org/jfree/chart/title/Title,26,286,        return this.notify;,0.0,0,-1,0
org/jfree/chart/title/Title,26,297,        this.notify = flag;,0.0,0,-1,0
org/jfree/chart/title/Title,26,298,        if (flag) {,0.0,0,-1,0
org/jfree/chart/title/Title,26,299,            notifyListeners(new TitleChangeEvent(this));   ,0.0,0,-1,0
org/jfree/chart/title/Title,26,301,    },0.0,0,-1,0
org/jfree/chart/title/Title,26,327,        Title duplicate = (Title) super.clone();,0.0,0,-1,0
org/jfree/chart/title/Title,26,328,        duplicate.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/title/Title,26,330,        return duplicate;,0.0,0,-1,0
org/jfree/chart/title/Title,26,348,"        this.listenerList.remove(TitleChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/title/Title,26,349,    },0.0,0,-1,0
org/jfree/chart/title/Title,26,362,                if (listeners[i] == TitleChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/title/Title,26,363,                    ((TitleChangeListener) listeners[i + 1]).titleChanged(,0.0,0,-1,0
org/jfree/chart/title/Title,26,379,            return true;,0.0,0,-1,0
org/jfree/chart/title/Title,26,382,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,26,385,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/Title,26,389,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,26,392,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,26,395,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,26,398,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,26,409,        int result = 193;,0.0,0,-1,0
org/jfree/chart/title/Title,26,410,        result = 37 * result + ObjectUtilities.hashCode(this.position);    ,0.0,0,-1,0
org/jfree/chart/title/Title,26,411,        result = 37 * result ,0.0,0,-1,0
org/jfree/chart/title/Title,26,413,        result = 37 * result + ObjectUtilities.hashCode(this.verticalAlignment);,0.0,0,-1,0
org/jfree/chart/title/Title,26,414,        return result;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,129,        return this.id;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,140,        this.id = id;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,141,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,153,        return this.width;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,164,        this.width = width;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,165,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,177,        return this.height;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,188,        this.height = height;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,189,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,199,        return this.margin;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,212,"            throw new IllegalArgumentException(""Null 'margin' argument."");   ",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,229,"        setMargin(new RectangleInsets(top, left, bottom, right));",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,230,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,254,"            throw new IllegalArgumentException(""Null 'frame' argument."");   ",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,267,        return this.padding;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,280,"            throw new IllegalArgumentException(""Null 'padding' argument."");   ",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,306,        return this.margin.getLeft() + this.frame.getInsets().getLeft() ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,318,        return this.margin.getTop() + this.frame.getInsets().getTop() ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,331,"        return arrange(g2, RectangleConstraint.NONE);",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,344,"        Size2D base = new Size2D(getWidth(), getHeight());",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,345,        return constraint.calculateConstrainedSize(base);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,368,"            throw new IllegalArgumentException(""Null 'bounds' argument."");",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,419,"            throw new IllegalArgumentException(""Null 'c' argument."");",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,440,            return null;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,445,            lowerBound = trimToContentWidth(r.getLowerBound());   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,455,            return null;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,460,            lowerBound = trimToContentHeight(r.getLowerBound());   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,559,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,562,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,566,            return false;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,569,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,572,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,575,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,578,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,581,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,584,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,598,        AbstractBlock clone = (AbstractBlock) super.clone();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,599,        clone.bounds = (Rectangle2D) ShapeUtilities.clone(this.bounds);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,600,        if (this.frame instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,601,            PublicCloneable pc = (PublicCloneable) this.frame;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,602,            clone.frame = (BlockFrame) pc.clone();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,26,604,        return clone;,0.0,0,-1,0
org/jfree/chart/event/PlotChangeEvent,26,76,        return this.plot;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,317,        return this.datasetGroup;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,328,        this.datasetGroup = group;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,329,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,342,        return this.noDataMessage;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,355,        this.noDataMessage = message;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,356,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,357,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,368,        return this.noDataMessageFont;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,380,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,381,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,383,        this.noDataMessageFont = font;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,384,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,385,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,396,        return this.noDataMessagePaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,408,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,409,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,411,        this.noDataMessagePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,412,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,413,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,448,        this.parent = parent;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,449,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,460,        Plot p = getParent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,461,        if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,462,            return this;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,465,            return p.getRootPlot();,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,481,        return (getParent() != null);,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,505,"        setInsets(insets, true);",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,506,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,520,        if (insets == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,521,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,523,        if (!this.insets.equals(insets)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,524,            this.insets = insets;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,525,            if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,526,                notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,530,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,553,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,554,            if (this.backgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,555,                this.backgroundPaint = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,556,                notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,560,            if (this.backgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,561,                if (this.backgroundPaint.equals(paint)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,562,                    return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,565,            this.backgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,566,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,569,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,591,        if (this.backgroundAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,592,            this.backgroundAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,593,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,595,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,608,            result = p.getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,627,        this.drawingSupplier = supplier;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,628,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,629,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,652,        this.backgroundImage = image;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,653,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,654,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,665,        return this.backgroundImageAlignment;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,678,        if (this.backgroundImageAlignment != alignment) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,679,            this.backgroundImageAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,680,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,682,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,694,        return this.backgroundImageAlpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,709,        if (alpha < 0.0f || alpha > 1.0f),0.0,0,-1,0
org/jfree/chart/plot/Plot,26,710,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,712,        if (this.backgroundImageAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,713,            this.backgroundImageAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,714,            this.notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,716,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,732,        return this.outlineVisible;    ,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,746,        this.outlineVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,747,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,748,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,758,        return this.outlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,771,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,772,            if (this.outlineStroke != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,773,                this.outlineStroke = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,774,                notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,778,            if (this.outlineStroke != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,779,                if (this.outlineStroke.equals(stroke)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,780,                    return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,783,            this.outlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,784,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,786,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,796,        return this.outlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,809,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,810,            if (this.outlinePaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,811,                this.outlinePaint = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,812,                notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,816,            if (this.outlinePaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,817,                if (this.outlinePaint.equals(paint)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,818,                    return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,821,            this.outlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,822,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,824,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,834,        return this.foregroundAlpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,860,        return null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,882,"        this.listenerList.remove(PlotChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,883,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,932,"        fillBackground(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,933,"        drawBackgroundImage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,934,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,947,"        fillBackground(g2, area, PlotOrientation.VERTICAL);",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,948,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,965,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,968,            return;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,972,            GradientPaint gp = (GradientPaint) p;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,973,            if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,974,"                p = new GradientPaint((float) area.getCenterX(), ",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,979,            else if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,980,"                p = new GradientPaint((float) area.getMinX(), ",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1007,            Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1008,"            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1010,"            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1013,"            Align.align(dest, area, this.backgroundImageAlignment);",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1014,"            g2.drawImage(this.backgroundImage, (int) dest.getX(), ",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1017,            g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1031,        if (!this.outlineVisible) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1032,            return;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1034,        if ((this.outlineStroke != null) && (this.outlinePaint != null)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1035,            g2.setStroke(this.outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1036,            g2.setPaint(this.outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1037,            g2.draw(area);,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1039,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1048,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1049,        g2.clip(area);,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1050,        String message = this.noDataMessage;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1051,        if (message != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1052,            g2.setFont(this.noDataMessageFont);,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1053,            g2.setPaint(this.noDataMessagePaint);,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1054,            TextBlock block = TextUtilities.createTextBlock(,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1058,"            block.draw(g2, (float) area.getCenterX(), (float) area.getCenterY(), ",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1061,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1062,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1076,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1086,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1094,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1095,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1106,        PlotChangeEvent newEvent = new PlotChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1107,        newEvent.setType(ChartChangeEventType.DATASET_UPDATED);,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1108,        notifyListeners(newEvent);,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1109,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1120,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1121,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1136,        double result = x;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1137,        if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1138,            result = result + w1;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1140,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1141,            result = result + w2;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1143,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1160,        double result = y;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1161,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1162,            result = result + h1;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1164,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1165,            result = result + h2;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1167,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1180,            return true;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1183,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1187,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1192,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1196,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1199,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1202,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1205,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1208,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1211,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1215,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1218,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1221,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1224,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1227,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1230,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1245,        Plot clone = (Plot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1248,        if (this.datasetGroup != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1249,            clone.datasetGroup ,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1252,        clone.drawingSupplier ,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1254,        clone.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1255,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1308,"            throw new IllegalArgumentException(""Null 'location' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1311,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1317,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1318,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1320,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1321,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1325,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1326,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1328,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1329,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1333,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1334,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1336,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1337,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1350,"            throw new IllegalStateException(""resolveDomainAxisLocation()"");",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1368,"            throw new IllegalArgumentException(""Null 'location' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1371,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1377,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1378,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1380,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1381,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1392,        else if (location == AxisLocation.BOTTOM_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1393,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1394,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1396,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1397,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1400,        else if (location == AxisLocation.BOTTOM_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1401,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1402,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1404,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1405,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,26,1411,"            throw new IllegalStateException(""resolveRangeAxisLocation()"");",0.0,0,-1,0
org/jfree/chart/event/AxisChangeEvent,26,73,        return this.axis;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,326,        if (flag != this.visible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,327,            this.visible = flag;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,328,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,330,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,357,        String existing = this.label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,358,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,359,            if (!existing.equals(label)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,360,                this.label = label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,361,                notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,365,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,366,                this.label = label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,367,                notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,371,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,393,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,394,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,396,        if (!this.labelFont.equals(font)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,397,            this.labelFont = font;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,398,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,400,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,422,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,423,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,425,        this.labelPaint = paint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,426,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,427,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,450,        if (insets == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,451,"            throw new IllegalArgumentException(""Null 'insets' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,453,        if (!insets.equals(this.labelInsets)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,454,            this.labelInsets = insets;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,455,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,457,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,479,        this.labelAngle = angle;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,480,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,481,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,493,        return this.labelToolTip;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,507,        this.labelToolTip = text;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,508,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,509,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,521,        return this.labelURL;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,535,        this.labelURL = url;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,536,        notifyListeners(new AxisChangeEvent(this));        ,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,537,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,587,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,588,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,590,        this.axisLinePaint = paint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,591,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,592,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,614,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,615,"            throw new IllegalArgumentException(""Null 'stroke' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,617,        this.axisLineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,618,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,619,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,647,        if (flag != this.tickLabelsVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,648,            this.tickLabelsVisible = flag;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,649,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,652,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,675,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,676,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,679,        if (!this.tickLabelFont.equals(font)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,680,            this.tickLabelFont = font;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,681,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,684,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,706,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,707,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,709,        this.tickLabelPaint = paint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,710,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,711,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,733,        if (insets == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,734,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,736,        if (!this.tickLabelInsets.equals(insets)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,737,            this.tickLabelInsets = insets;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,738,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,740,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,791,        this.tickMarkInsideLength = length;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,792,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,793,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,816,        this.tickMarkOutsideLength = length;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,817,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,818,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,840,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,841,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,843,        if (!this.tickMarkStroke.equals(stroke)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,844,            this.tickMarkStroke = stroke;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,845,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,847,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,869,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,870,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,872,        this.tickMarkPaint = paint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,873,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,874,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,928,        this.fixedDimension = dimension;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,929,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1011,"        this.listenerList.remove(AxisChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1012,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1024,        List list = Arrays.asList(this.listenerList.getListenerList());,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1025,        return list.contains(listener);,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1038,            if (listeners[i] == AxisChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1039,                ((AxisChangeListener) listeners[i + 1]).axisChanged(event);,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1098,"            throw new IllegalArgumentException(""Null 'state' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1102,            return state;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1149,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1150,            AffineTransform t = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1153,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1154,            labelBounds = rotatedLabelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1155,            float w = (float) labelBounds.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1156,            float h = (float) labelBounds.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1157,            float labelx = (float) (state.getCursor() - insets.getRight() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1159,            float labely = (float) dataArea.getCenterY();,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1160,"            TextUtilities.drawRotatedString(label, g2, labelx, labely, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1163,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1165,            state.cursorLeft(insets.getLeft() + labelBounds.getWidth() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1167,        },0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1168,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1170,            AffineTransform t = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1173,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1174,            labelBounds = rotatedLabelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1175,            float w = (float) labelBounds.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1176,            float h = (float) labelBounds.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1177,            float labelx = (float) (state.getCursor() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1179,            float labely = (float) (dataArea.getY() + dataArea.getHeight() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1181,"            TextUtilities.drawRotatedString(label, g2, labelx, labely, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1184,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1186,            state.cursorRight(insets.getLeft() + labelBounds.getWidth() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1193,                if (entities != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1194,"                    entities.add(new AxisLabelEntity(this, hotspot, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1198,        return state;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1215,"            axisLine = new Line2D.Double(dataArea.getX(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1222,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1223,"            axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1226,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1227,"            axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1245,        Axis clone = (Axis) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1247,        clone.plot = null;        ,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1248,        clone.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1249,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1261,            return true;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1264,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1268,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1271,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1274,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1277,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1280,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1283,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1286,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1289,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1292,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1295,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1298,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1301,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1304,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1307,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1312,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1315,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1318,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1321,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1324,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1327,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,26,1330,            return false;,0.0,0,-1,0
org/jfree/chart/event/MarkerChangeEvent,26,79,        return this.marker;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,177,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,26,180,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,26,183,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,210,        return this.paint;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,223,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,26,237,        return this.stroke;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,249,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,250,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,26,252,        this.stroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,253,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,254,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,26,264,        return this.outlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,276,        this.outlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,277,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,278,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,26,288,        return this.outlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,300,        this.outlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,301,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,302,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,26,312,        return this.alpha;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,330,        if (alpha < 0.0f || alpha > 1.0f),0.0,0,-1,0
org/jfree/chart/plot/Marker,26,331,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,333,        this.alpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,334,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,335,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,26,345,        return this.label;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,357,        this.label = label;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,358,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,359,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,26,369,        return this.labelFont;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,381,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,382,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,26,384,        this.labelFont = font;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,385,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,386,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,26,396,        return this.labelPaint;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,408,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,409,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,26,411,        this.labelPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,412,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,413,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,26,424,        return this.labelAnchor;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,437,        if (anchor == null) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,438,"            throw new IllegalArgumentException(""Null 'anchor' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,26,440,        this.labelAnchor = anchor;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,441,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,442,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,26,452,        return this.labelOffset;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,464,        if (offset == null) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,465,"            throw new IllegalArgumentException(""Null 'offset' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,26,467,        this.labelOffset = offset;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,468,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,469,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,26,479,        return this.labelOffsetType;   ,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,492,"            throw new IllegalArgumentException(""Null 'adj' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,26,506,        return this.labelTextAnchor;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,518,        if (anchor == null) { ,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,519,"            throw new IllegalArgumentException(""Null 'anchor' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Marker,26,521,        this.labelTextAnchor = anchor;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,522,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,523,    },0.0,0,-1,0
org/jfree/chart/plot/Marker,26,558,            if (listeners[i] == MarkerChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,559,                ((MarkerChangeListener) listeners[i + 1]).markerChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,575,        return this.listenerList.getListeners(listenerType);    ,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,587,            return true;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,590,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,594,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,597,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,600,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,603,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,606,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,609,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,612,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,615,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,618,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,621,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,624,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,627,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Marker,26,640,        return super.clone();,0.0,0,-1,0
org/jfree/chart/event/RendererChangeEvent,26,73,        return this.renderer;,0.0,0,-1,0
org/jfree/chart/event/ChartProgressEvent,26,90,        return this.chart;,0.0,0,-1,0
org/jfree/chart/event/ChartProgressEvent,26,99,        this.chart = chart;,0.0,0,-1,0
org/jfree/chart/event/ChartProgressEvent,26,100,    },0.0,0,-1,0
org/jfree/chart/event/ChartProgressEvent,26,108,        return this.type;,0.0,0,-1,0
org/jfree/chart/event/ChartProgressEvent,26,117,        this.type = type;,0.0,0,-1,0
org/jfree/chart/event/ChartProgressEvent,26,118,    },0.0,0,-1,0
org/jfree/chart/event/ChartProgressEvent,26,126,        return this.percent;,0.0,0,-1,0
org/jfree/chart/event/ChartProgressEvent,26,135,        this.percent = percent;,0.0,0,-1,0
org/jfree/chart/event/ChartProgressEvent,26,136,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryLabelEntity,26,69,"        super(area, toolTipText, urlText);",0.0,0,-1,0
org/jfree/chart/entity/CategoryLabelEntity,26,70,        this.key = key;,0.0,0,-1,0
org/jfree/chart/entity/CategoryLabelEntity,26,71,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryLabelEntity,26,79,        return this.key;,0.0,0,-1,0
org/jfree/chart/entity/CategoryLabelEntity,26,89,"        StringBuffer buf = new StringBuffer(""CategoryLabelEntity: "");",0.0,0,-1,0
org/jfree/chart/entity/CategoryLabelEntity,26,90,"        buf.append(""category="");",0.0,0,-1,0
org/jfree/chart/entity/CategoryLabelEntity,26,91,        buf.append(this.key);,0.0,0,-1,0
org/jfree/chart/entity/CategoryLabelEntity,26,92,"        buf.append("", tooltip="" + getToolTipText());",0.0,0,-1,0
org/jfree/chart/entity/CategoryLabelEntity,26,93,"        buf.append("", url="" + getURLText());",0.0,0,-1,0
org/jfree/chart/entity/CategoryLabelEntity,26,94,        return buf.toString();,0.0,0,-1,0
org/jfree/chart/entity/TickLabelEntity,26,66,"        super(area, toolTipText, urlText);    ",0.0,0,-1,0
org/jfree/chart/entity/TickLabelEntity,26,67,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,111,"        this(area, null);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,112,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,122,"        this(area, toolTipText, null);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,123,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,133,"    public ChartEntity(Shape area, String toolTipText, String urlText) {",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,134,        if (area == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,135,"            throw new IllegalArgumentException(""Null 'area' argument."");   ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,137,        this.area = area;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,138,        this.toolTipText = toolTipText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,139,        this.urlText = urlText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,140,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,148,        return this.area;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,161,        if (area == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,162,"            throw new IllegalArgumentException(""Null 'area' argument."");   ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,164,        this.area = area;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,165,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,173,        return this.toolTipText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,182,        this.toolTipText = text;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,183,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,191,        return this.urlText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,200,        this.urlText = text;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,201,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,210,        if (this.area instanceof Rectangle2D) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,211,"            return ""rect"";",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,214,"            return ""poly"";",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,224,        if (this.area instanceof Rectangle2D) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,225,            return getRectCoords((Rectangle2D) this.area);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,228,            return getPolyCoords(this.area);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,241,        if (rectangle == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,242,"            throw new IllegalArgumentException(""Null 'rectangle' argument."");   ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,244,        int x1 = (int) rectangle.getX();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,245,        int y1 = (int) rectangle.getY();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,246,        int x2 = x1 + (int) rectangle.getWidth();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,247,        int y2 = y1 + (int) rectangle.getHeight();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,249,        if (x2 == x1) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,250,            x2++;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,252,        if (y2 == y1) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,253,            y2++;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,256,"        return x1 + "","" + y1 + "","" + x2 + "","" + y2;",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,268,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,269,"            throw new IllegalArgumentException(""Null 'shape' argument."");   ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,271,        StringBuffer result = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,272,        boolean first = true;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,273,        float[] coords = new float[6];,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,274,"        PathIterator pi = shape.getPathIterator(null, 1.0);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,275,        while (!pi.isDone()) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,276,            pi.currentSegment(coords);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,277,            if (first) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,278,                first = false;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,279,                result.append((int) coords[0]);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,280,"                result.append("","").append((int) coords[1]);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,283,"                result.append("","");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,284,                result.append((int) coords[0]);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,285,"                result.append("","");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,286,                result.append((int) coords[1]);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,288,            pi.next();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,290,        return result.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,310,        StringBuffer tag = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,311,        boolean hasURL = (this.urlText == null ? false ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,313,        boolean hasToolTip = (this.toolTipText == null ? false ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,315,        if (hasURL || hasToolTip) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,316,"            tag.append(""<area shape=\"""" + getShapeType() + ""\"""" + "" coords=\"""" ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,318,            if (hasToolTip) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,319,                tag.append(toolTipTagFragmentGenerator.generateToolTipFragment(,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,322,            if (hasURL) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,323,                tag.append(urlTagFragmentGenerator.generateURLFragment(,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,328,            if (!hasToolTip) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,329,"                tag.append("" alt=\""\"""");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,331,"            tag.append(""/>"");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,333,        return tag.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,343,"        StringBuffer buf = new StringBuffer(""ChartEntity: "");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,344,"        buf.append(""tooltip = "");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,345,        buf.append(this.toolTipText);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,346,        return buf.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,357,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,358,            return true;   ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,360,        if (obj instanceof ChartEntity) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,361,            ChartEntity that = (ChartEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,362,            if (!this.area.equals(that.area)) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,363,                return false;   ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,365,"            if (!ObjectUtilities.equal(this.toolTipText, that.toolTipText)) {",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,366,                return false;   ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,368,"            if (!ObjectUtilities.equal(this.urlText, that.urlText)) {",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,369,                return false;   ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,371,            return true;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,373,        return false;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,385,        return super.clone();    ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,396,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,397,"        SerialUtilities.writeShape(this.area, stream);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,398,     },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,410,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,411,        this.area = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,26,412,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,104,"        super(area, toolTipText, urlText);",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,105,        if (dataset == null) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,106,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,108,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,109,        this.rowKey = rowKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,110,        this.columnKey = columnKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,111,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,123,        return this.dataset; ,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,134,        if (dataset == null) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,135,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,137,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,138,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,150,        return this.rowKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,163,        this.rowKey = rowKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,164,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,176,        return this.columnKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,189,        this.columnKey = columnKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,190,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,199,"        return ""CategoryItemEntity: rowKey="" + this.rowKey ",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,211,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,212,            return true;      ,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,214,        if (!(obj instanceof CategoryItemEntity)) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,215,            return false;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,217,        CategoryItemEntity that = (CategoryItemEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,218,        if (!this.rowKey.equals(that.rowKey)) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,219,            return false;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,221,        if (!this.columnKey.equals(that.columnKey)) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,222,            return false;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,224,"        if (!ObjectUtilities.equal(this.dataset, that.dataset)) {",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,225,            return false;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,26,227,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,85,        super(area);,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,86,    },0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,99,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,110,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,111,    },0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,123,        return this.seriesKey;,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,136,        this.seriesKey = key;,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,137,    },0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,147,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,148,            return true;   ,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,150,        if (!(obj instanceof LegendItemEntity)) {,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,151,            return false;,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,153,        LegendItemEntity that = (LegendItemEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,154,"        if (!ObjectUtilities.equal(this.seriesKey, that.seriesKey)) {",0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,155,            return false;,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,157,"        if (!ObjectUtilities.equal(this.dataset, that.dataset)) {",0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,158,            return false;,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,160,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,172,        return super.clone();   ,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,26,182,"        return ""LegendItemEntity: seriesKey="" + this.seriesKey ",0.0,0,-1,0
org/jfree/chart/entity/AxisLabelEntity,26,69,"        super(hotspot, toolTipText, url);",0.0,0,-1,0
org/jfree/chart/entity/AxisLabelEntity,26,70,    },0.0,0,-1,0
org/jfree/chart/entity/AxisLabelEntity,26,78,        return this.axis;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1606,"        public SegmentRange(long fromMillisecond, long toMillisecond) {",0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1608,            Segment start = getSegment(fromMillisecond);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1609,            Segment end = getSegment(toMillisecond);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1616,            this.millisecond = fromMillisecond;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1617,            this.segmentNumber = calculateSegmentNumber(fromMillisecond);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1618,            this.segmentStart = start.segmentStart;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1619,            this.segmentEnd = end.segmentEnd;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1620,            this.segmentCount ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1622,        },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1630,            return this.segmentCount;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1648,"            long start = Math.max(from, this.segmentStart);",0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1649,"            long end = Math.min(to, this.segmentEnd);",0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1654,            if (start <= end) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1655,"                return new SegmentRange(start, end);",0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1658,                return null;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1669,            for (Segment segment = getSegment(this.segmentStart);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1670,                segment.getSegmentStart() < this.segmentEnd;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1672,                if (!segment.inIncludeSegments()) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1673,                    return (false);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1671,                segment.inc()) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1676,            return true;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1685,            for (Segment segment = getSegment(this.segmentStart);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1686,                segment.getSegmentStart() < this.segmentEnd;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1688,                if (!segment.inExceptionSegments()) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1689,                    return (false);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1687,                segment.inc()) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1692,            return true;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1702,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1224,        protected Segment() {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1226,        },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1233,        protected Segment(long millisecond) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1234,            this.segmentNumber = calculateSegmentNumber(millisecond);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1235,            this.segmentStart = SegmentedTimeline.this.startTime ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1237,            this.segmentEnd ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1239,            this.millisecond = millisecond;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1240,        },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1250,            if (millis >= SegmentedTimeline.this.startTime) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1251,                return (millis - SegmentedTimeline.this.startTime) ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1255,                return ((millis - SegmentedTimeline.this.startTime) ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1266,            return this.segmentNumber;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1276,            return 1;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1285,            return this.segmentStart;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1294,            return this.segmentEnd;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1304,            return this.millisecond;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1314,            return SegmentedTimeline.this.getDate(this.millisecond);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1327,            return (this.segmentStart <= millis && millis <= this.segmentEnd);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1341,            return (this.segmentStart <= from && to <= this.segmentEnd);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1353,"            return contains(segment.getSegmentStart(), segment.getSegmentEnd());",0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1367,            return (from <= this.segmentStart && this.segmentEnd <= to);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1380,            if (from <= this.segmentStart && this.segmentEnd <= to) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1381,                return this;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1384,                return null;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1397,            return (this.segmentEnd < other.getSegmentStart());,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1409,            return (this.segmentStart > other.getSegmentEnd());,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1421,            if (object instanceof Segment) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1422,                Segment other = (Segment) object;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1423,                return (this.segmentNumber == other.getSegmentNumber() ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1429,                return false;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1441,                return (Segment) this.clone();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1443,            catch (CloneNotSupportedException e) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1444,                return null;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1458,            Segment other = (Segment) object;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1459,            if (this.before(other)) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1460,                return -1;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1462,            else if (this.after(other)) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1463,                return +1;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1466,                return 0;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1477,            if (getSegmentNumberRelativeToGroup() ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1479,                return !inExceptionSegments();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1482,                return false;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1492,            return getSegmentNumberRelativeToGroup() ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1505,            long p = (this.segmentNumber ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1507,            if (p < 0) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1508,                p += SegmentedTimeline.this.groupSegmentCount;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1510,            return p;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1525,            return binarySearchExceptionSegments(this) >= 0;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1535,            this.segmentNumber += n;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1536,            long m = n * SegmentedTimeline.this.segmentSize;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1537,            this.segmentStart += m;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1538,            this.segmentEnd += m;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1539,            this.millisecond += m;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1540,        },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1547,            inc(1);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1548,        } ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1557,            this.segmentNumber -= n;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1558,            long m = n * SegmentedTimeline.this.segmentSize;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1559,            this.segmentStart -= m;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1560,            this.segmentEnd -= m;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1561,            this.millisecond -= m;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1562,        },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1569,            dec(1);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1570,        } ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1576,            this.millisecond = this.segmentStart;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1577,        },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1583,            this.millisecond = this.segmentEnd;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1584,        },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,319,                             int segmentsExcluded) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,218,    private Calendar workingCalendarNoDST ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,224,    private Calendar workingCalendar = Calendar.getInstance();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,261,    private List exceptionSegments = new ArrayList();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,276,    private boolean adjustForDaylightSaving = false;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,321,        this.segmentSize = segmentSize;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,322,        this.segmentsIncluded = segmentsIncluded;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,323,        this.segmentsExcluded = segmentsExcluded;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,325,        this.groupSegmentCount = this.segmentsIncluded + this.segmentsExcluded;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,326,        this.segmentsIncludedSize = this.segmentsIncluded * this.segmentSize;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,327,        this.segmentsExcludedSize = this.segmentsExcluded * this.segmentSize;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,328,        this.segmentsGroupSize = this.segmentsIncludedSize ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,331,    },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,212,    public static TimeZone DEFAULT_TIME_ZONE = TimeZone.getDefault();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,284,        int offset = TimeZone.getDefault().getRawOffset();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,285,"        NO_DST_TIME_ZONE = new SimpleTimeZone(offset, ""UTC-"" + offset);",0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,289,        Calendar cal = new GregorianCalendar(NO_DST_TIME_ZONE);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,290,"        cal.set(1900, 0, 1, 0, 0, 0);",0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,291,"        cal.set(Calendar.MILLISECOND, 0);",0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,292,        while (cal.get(Calendar.DAY_OF_WEEK) != Calendar.MONDAY) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,293,"            cal.add(Calendar.DATE, 1);",0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,297,        FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,298,    },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,342,        SegmentedTimeline timeline ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,344,        timeline.setStartTime(FIRST_MONDAY_AFTER_1900);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,345,        return timeline;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,366,        SegmentedTimeline timeline ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,368,        timeline.setStartTime(,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,371,        timeline.setBaseTimeline(newMondayThroughFridayTimeline());,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,372,        return timeline;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,382,        return this.adjustForDaylightSaving;   ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,392,        this.adjustForDaylightSaving = adjust;   ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,393,    },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,406,        this.startTime = millisecond;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,407,    },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,416,        return this.startTime;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,425,        return this.segmentsExcluded;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,435,        return this.segmentsExcludedSize;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,445,        return this.groupSegmentCount;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,455,        return this.segmentsGroupSize;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,464,        return this.segmentsIncluded;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,473,        return this.segmentsIncludedSize;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,482,        return this.segmentSize;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,492,        return Collections.unmodifiableList(this.exceptionSegments);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,501,        this.exceptionSegments = exceptionSegments;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,502,    },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,510,        return this.baseTimeline;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,521,        if (baseTimeline != null) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,522,            if (baseTimeline.getSegmentSize() < this.segmentSize) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,523,                throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,527,            else if (baseTimeline.getStartTime() > this.startTime) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,528,                throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,532,            else if ((baseTimeline.getSegmentSize() % this.segmentSize) != 0) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,533,                throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,538,            else if (((this.startTime ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,540,                throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,546,        this.baseTimeline = baseTimeline;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,547,    },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,561,        long rawMilliseconds = millisecond - this.startTime;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,562,        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,563,        long groupIndex = rawMilliseconds / this.segmentsGroupSize;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,565,        if (groupMilliseconds >= this.segmentsIncludedSize) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,566,            result = toTimelineValue(,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,571,            Segment segment = getSegment(millisecond);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,572,            if (segment.inExceptionSegments()) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,574,                    segment = getSegment(millisecond = segment.getSegmentEnd() ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,576,                } while (segment.inExceptionSegments());,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,577,                result = toTimelineValue(millisecond);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,580,                long shiftedSegmentedValue = millisecond - this.startTime;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,581,                long x = shiftedSegmentedValue % this.segmentsGroupSize;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,582,                long y = shiftedSegmentedValue / this.segmentsGroupSize;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,584,                long wholeExceptionsBeforeDomainValue =,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,594,                if (x < this.segmentsIncludedSize) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,595,                    result = this.segmentsIncludedSize * y ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,601,                    result = this.segmentsIncludedSize * (y + 1) ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,609,        return result;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,622,        return toTimelineValue(getTime(date));,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,636,        Segment result = new Segment(this.startTime + timelineValue ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,640,        long lastIndex = this.startTime;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,643,        while (lastIndex <= result.segmentStart) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,649,                 * this.segmentSize - 1)) > 0,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,651,                lastIndex = result.segmentStart;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,654,                for (int i = 0; i < exceptionSegmentCount; i++) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,656,                        result.inc();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,658,                    while (result.inExcludeSegments());,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,661,            lastIndex = result.segmentStart;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,664,            while (result.inExceptionSegments() || result.inExcludeSegments()) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,665,                result.inc();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,666,                lastIndex += this.segmentSize;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,669,            lastIndex++;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,670,        },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,672,        return getTimeFromLong(result.millisecond); ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,683,        long result = date;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,684,        if (this.adjustForDaylightSaving) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,685,            this.workingCalendarNoDST.setTime(new Date(date));,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,686,            this.workingCalendar.set(,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,694,            this.workingCalendar.set(,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,700,            result = this.workingCalendar.getTime().getTime();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,702,        return result;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,713,        Segment segment = getSegment(millisecond);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,714,        return segment.inIncludeSegments();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,725,        return containsDomainValue(getTime(date));,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,740,        if (domainValueEnd < domainValueStart) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,741,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,746,        Segment segment = getSegment(domainValueStart);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,747,        boolean contains = true;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,749,            contains = (segment.inIncludeSegments());,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,750,            if (segment.contains(domainValueEnd)) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,751,                break;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,754,                segment.inc();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,757,        while (contains);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,758,        return (contains);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,773,        return containsDomainRange(,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,791,        addException(new Segment(millisecond));,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,792,    },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,810,"        addException(new SegmentRange(fromDomainValue, toDomainValue));",0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,811,    },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,825,        addException(getTime(exceptionDate));,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,827,    },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,842,        for (Iterator iter = exceptionList.iterator(); iter.hasNext();) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,843,            addException((Date) iter.next());,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,845,    },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,858,         if (segment.inIncludeSegments()) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,859,             int p = binarySearchExceptionSegments(segment);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,860,"             this.exceptionSegments.add(-(p + 1), segment);",0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,862,    },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,882,        Segment baseSegment = this.baseTimeline.getSegment(domainValue);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,883,        if (baseSegment.inIncludeSegments()) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,887,            Segment segment = getSegment(baseSegment.getSegmentStart());,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,888,            while (segment.getSegmentStart() <= baseSegment.getSegmentEnd()) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,889,                if (segment.inIncludeSegments()) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,892,                    long fromDomainValue = segment.getSegmentStart();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,895,                        toDomainValue = segment.getSegmentEnd();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,896,                        segment.inc();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,898,                    while (segment.inIncludeSegments());,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,901,"                    addException(fromDomainValue, toDomainValue);",0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,903,                },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,906,                    segment.inc();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,910,    },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,925,        addBaseTimelineException(getTime(date));,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,926,    },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,941,        Segment baseSegment = this.baseTimeline.getSegment(fromBaseDomainValue);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,943,               && !baseSegment.inExcludeSegments()) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,945,            baseSegment.inc();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,950,        while (baseSegment.getSegmentStart() <= toBaseDomainValue) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,952,            long baseExclusionRangeEnd = baseSegment.getSegmentStart() ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,958,            Segment segment = getSegment(baseSegment.getSegmentStart());,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,959,            while (segment.getSegmentStart() <= baseExclusionRangeEnd) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,960,                if (segment.inIncludeSegments()) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,963,                    long fromDomainValue = segment.getSegmentStart();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,966,                        toDomainValue = segment.getSegmentEnd();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,967,                        segment.inc();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,969,                    while (segment.inIncludeSegments());,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,972,                    addException(new BaseTimelineSegmentRange(,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,975,                },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,978,                    segment.inc();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,983,            baseSegment.inc(this.baseTimeline.getGroupSegmentCount());,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,984,        },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,985,    },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,998,        if (toMillisecond < fromMillisecond) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,999,            return (0);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1002,        int n = 0;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1003,        for (Iterator iter = this.exceptionSegments.iterator(); ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1004,             iter.hasNext();) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1005,            Segment segment = (Segment) iter.next();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1006,            Segment intersection ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1008,            if (intersection != null) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1009,                n += intersection.getSegmentCount();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1011,        },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1013,        return (n);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1028,        return new Segment(millisecond);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1046,        return (getSegment(getTime(date)));,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1060,        return (o == p || ((o != null) && o.equals(p)));,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1071,        if (o instanceof SegmentedTimeline) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1072,            SegmentedTimeline other = (SegmentedTimeline) o;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1074,            boolean b0 = (this.segmentSize == other.getSegmentSize());,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1075,            boolean b1 = (this.segmentsIncluded == other.getSegmentsIncluded());,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1076,            boolean b2 = (this.segmentsExcluded == other.getSegmentsExcluded());,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1077,            boolean b3 = (this.startTime == other.getStartTime());,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1078,            boolean b4 = equals(,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1081,            return b0 && b1 && b2 && b3 && b4;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1084,            return (false);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1094,        int result = 19;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1095,        result = 37 * result ,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1097,        result = 37 * result + (int) (this.startTime ^ (this.startTime >>> 32));,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1098,        return result;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1117,        int low = 0;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1118,        int high = this.exceptionSegments.size() - 1;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1120,        while (low <= high) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1121,            int mid = (low + high) / 2;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1122,            Segment midSegment = (Segment) this.exceptionSegments.get(mid);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1125,            if (segment.contains(midSegment) || midSegment.contains(segment)) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1126,                return mid;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1129,            if (midSegment.before(segment)) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1130,                low = mid + 1;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1132,            else if (midSegment.after(segment)) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1133,                high = mid - 1;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1136,"                throw new IllegalStateException(""Invalid condition."");",0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1138,        },0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1139,        return -(low + 1);  // key not found,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1153,        long result = date.getTime();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1154,        if (this.adjustForDaylightSaving) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1155,            this.workingCalendar.setTime(date);,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1156,            this.workingCalendarNoDST.set(,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1164,            this.workingCalendarNoDST.set(,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1168,            Date revisedDate = this.workingCalendarNoDST.getTime();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1169,            result = revisedDate.getTime();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1172,        return result;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1183,        this.workingCalendarNoDST.setTime(new Date(value));,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1184,        return (this.workingCalendarNoDST.getTime());,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1195,        SegmentedTimeline clone = (SegmentedTimeline) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1196,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,166,"public class SegmentedTimeline implements Timeline, Cloneable, Serializable {",0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1721,                                        long toDomainValue) {,0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1722,"            super(fromDomainValue, toDomainValue);",0.0,0,-1,0
org/jfree/chart/axis/SegmentedTimeline,26,1723,        },0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,101,            return true;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,104,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,123,            return CategoryAnchor.START;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,128,        else if (this.equals(CategoryAnchor.END)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,129,            return CategoryAnchor.END;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAnchor,26,131,        return null;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,83,        this(null);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,84,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,119,        if (!isVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,120,            return new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,126,        CategoryPlot plot = (CategoryPlot) getPlot();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,128,        Rectangle2D adjustedDataArea = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,129,        if (plot.getRenderer() instanceof Effect3D) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,130,            Effect3D e3D = (Effect3D) plot.getRenderer();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,131,            double adjustedX = dataArea.getMinX();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,132,            double adjustedY = dataArea.getMinY();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,133,            double adjustedW = dataArea.getWidth() - e3D.getXOffset();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,134,            double adjustedH = dataArea.getHeight() - e3D.getYOffset();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,136,            if (edge == RectangleEdge.LEFT || edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,137,                adjustedY += e3D.getYOffset();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,139,            else if (edge == RectangleEdge.RIGHT || edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,140,                adjustedX += e3D.getXOffset();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,142,"            adjustedDataArea.setRect(adjustedX, adjustedY, adjustedW, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,144,        },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,146,            adjustedDataArea.setRect(dataArea);   ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,150,        AxisState state = new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,151,"        state = drawCategoryLabels(g2, plotArea, adjustedDataArea, edge, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,153,"        state = drawLabel(getLabel(), g2, plotArea, dataArea, edge, state,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,156,        return state;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,177,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,178,        Rectangle2D adjustedArea = area;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,179,        CategoryPlot plot = (CategoryPlot) getPlot();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,180,        CategoryItemRenderer renderer = plot.getRenderer();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,181,        if (renderer instanceof Effect3D) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,182,            Effect3D e3D = (Effect3D) renderer;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,183,            double adjustedX = area.getMinX();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,184,            double adjustedY = area.getMinY();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,185,            double adjustedW = area.getWidth() - e3D.getXOffset();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,186,            double adjustedH = area.getHeight() - e3D.getYOffset();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,188,            if (edge == RectangleEdge.LEFT || edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,189,                adjustedY += e3D.getYOffset();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,191,            else if (edge == RectangleEdge.RIGHT || edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,192,                adjustedX += e3D.getXOffset();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,194,"            adjustedArea = new Rectangle2D.Double(adjustedX, adjustedY, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,198,        if (anchor == CategoryAnchor.START) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,199,"            result = getCategoryStart(category, categoryCount, adjustedArea, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,202,        else if (anchor == CategoryAnchor.MIDDLE) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,203,"            result = getCategoryMiddle(category, categoryCount, adjustedArea, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,206,        else if (anchor == CategoryAnchor.END) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,207,"            result = getCategoryEnd(category, categoryCount, adjustedArea, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,210,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis3D,26,223,        return super.clone();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,187,        this(null);    ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,188,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,237,        this.lowerMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,238,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,239,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,263,        this.upperMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,264,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,265,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,301,        return this.maximumCategoryLabelLines;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,313,        this.maximumCategoryLabelLines = lines;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,314,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,315,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,325,        return this.maximumCategoryLabelWidthRatio;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,337,        this.maximumCategoryLabelWidthRatio = ratio;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,338,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,339,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,350,        return this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,362,        this.categoryLabelPositionOffset = offset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,363,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,364,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,375,        return this.categoryLabelPositions;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,387,        if (positions == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,388,"            throw new IllegalArgumentException(""Null 'positions' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,390,        this.categoryLabelPositions = positions;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,391,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,392,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,405,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,425,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,426,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,428,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,429,            this.tickLabelFontMap.remove(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,432,"            this.tickLabelFontMap.put(category, font);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,434,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,435,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,448,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,468,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,469,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,471,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,472,            this.tickLabelPaintMap.remove(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,475,"            this.tickLabelPaintMap.put(category, paint);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,477,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,478,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,490,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,491,"            throw new IllegalArgumentException(""Null 'category' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,493,"        this.categoryLabelToolTips.put(category, tooltip);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,494,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,495,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,509,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,510,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,512,        return (String) this.categoryLabelToolTips.get(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,525,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,526,"            throw new IllegalArgumentException(""Null 'category' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,528,        this.categoryLabelToolTips.remove(category);   ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,529,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,530,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,540,        this.categoryLabelToolTips.clear();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,541,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,542,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,561,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,562,        if (anchor == CategoryAnchor.START) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,563,"            result = getCategoryStart(category, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,565,        else if (anchor == CategoryAnchor.MIDDLE) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,566,"            result = getCategoryMiddle(category, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,568,        else if (anchor == CategoryAnchor.END) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,569,"            result = getCategoryEnd(category, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,571,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,596,        else if ((edge == RectangleEdge.LEFT) ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,598,            result = area.getMinY() + area.getHeight() * getLowerMargin();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,626,"        return getCategoryStart(category, categoryCount, area, edge)",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,671,        else if ((edge == RectangleEdge.LEFT) ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,673,            available = area.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,707,        else if ((edge == RectangleEdge.LEFT) ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,709,            available = area.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,737,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,742,            return space;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,754,                tickLabelHeight = state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,762,            else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,763,                tickLabelWidth = state.getMax(); ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,817,            return new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,831,        return state;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,859,"            throw new IllegalArgumentException(""Null 'state' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,881,"                    x0 = getCategoryStart(categoryIndex, ticks.size(), ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,883,"                    x1 = getCategoryEnd(categoryIndex, ticks.size(), dataArea, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,885,                    y1 = state.getCursor() - this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,886,                    y0 = y1 - state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,896,                else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,897,"                    y0 = getCategoryStart(categoryIndex, ticks.size(), ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,899,"                    y1 = getCategoryEnd(categoryIndex, ticks.size(), dataArea, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,901,                    x1 = state.getCursor() - this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,902,                    x0 = x1 - state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,904,                else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,905,"                    y0 = getCategoryStart(categoryIndex, ticks.size(), ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,907,"                    y1 = getCategoryEnd(categoryIndex, ticks.size(), dataArea, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,909,                    x0 = state.getCursor() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,910,                    x1 = x0 - state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,926,                    EntityCollection entities ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,928,                    if (entities != null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,929,                        String tooltip = getCategoryLabelToolTip(,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,931,"                        entities.add(new CategoryLabelEntity(tick.getCategory(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,939,                double h = state.getMax() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,940,                state.cursorUp(h);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,941,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,946,            else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,947,                double w = state.getMax() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,948,                state.cursorLeft(w);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,949,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,950,            else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,951,                double w = state.getMax() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,952,                state.cursorRight(w);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,977,            return ticks;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1002,                    l = (float) dataArea.getHeight();   ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1108,        CategoryAxis clone = (CategoryAxis) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1109,        clone.tickLabelFontMap = new HashMap(this.tickLabelFontMap);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1110,        clone.tickLabelPaintMap = new HashMap(this.tickLabelPaintMap);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1111,        clone.categoryLabelToolTips = new HashMap(this.categoryLabelToolTips);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1112,        return clone;  ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1124,            return true;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1127,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1130,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1134,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1137,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1140,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1144,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1148,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1152,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1156,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1160,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1163,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1174,        if (getLabel() != null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1175,            return getLabel().hashCode();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1178,            return 0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1225,            return null;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1230,            Comparable category = (Comparable) in.readObject();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1231,            Paint paint = SerialUtilities.readPaint(in);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1232,"            result.put(category, paint);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1251,            out.writeBoolean(true);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1260,                Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1261,                out.writeObject(key);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1262,"                SerialUtilities.writePaint((Paint) map.get(key), out);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1263,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1278,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1283,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1284,            Paint p1 = (Paint) map1.get(key);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1285,            Paint p2 = (Paint) map2.get(key);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1286,"            if (!PaintUtilities.equal(p1, p2)) {",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1287,                return false;  ,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,26,1289,        },0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,67,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,84,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,102,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,137,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,138,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,139,            result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,141,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,142,            result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,144,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,145,            result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,147,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,148,            result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,150,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,163,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,164,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,165,            result = rectangle.getMinY();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,167,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,168,            result = rectangle.getMaxY();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,170,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,171,            result = rectangle.getMinX();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,173,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,174,            result = rectangle.getMaxX();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,176,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,197,        else if (this.equals(RectangleEdge.RIGHT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,26,198,            result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,114,        return this.plotArea;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,137,        return this.dataArea;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,158,        return this.subplotInfo.size();,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,169,        this.subplotInfo.add(info);    ,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,170,    },0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,182,        return (PlotRenderingInfo) this.subplotInfo.get(index);,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,199,        if (source == null) {,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,200,"            throw new IllegalArgumentException(""Null 'source' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,202,        int subplotCount = getSubplotCount();,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,203,        for (int i = 0; i < subplotCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,204,            PlotRenderingInfo info = getSubplotInfo(i);,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,205,            Rectangle2D area = info.getDataArea();,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,206,            if (area.contains(source)) {,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,207,                return i;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,210,        return -1;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,221,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,222,            return true;   ,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,224,        if (!(obj instanceof PlotRenderingInfo)) {,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,225,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,227,        PlotRenderingInfo that = (PlotRenderingInfo) obj;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,228,"        if (!ObjectUtilities.equal(this.dataArea, that.dataArea)) {",0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,229,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,231,"        if (!ObjectUtilities.equal(this.plotArea, that.plotArea)) {",0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,232,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,234,"        if (!ObjectUtilities.equal(this.subplotInfo, that.subplotInfo)) {",0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,235,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,237,        return true;   ,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,248,        PlotRenderingInfo clone = (PlotRenderingInfo) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,249,        if (this.plotArea != null) {,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,250,            clone.plotArea = (Rectangle2D) this.plotArea.clone();,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,252,        if (this.dataArea != null) {,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,253,            clone.dataArea = (Rectangle2D) this.dataArea.clone();,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,255,        clone.subplotInfo = new java.util.ArrayList(this.subplotInfo.size());,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,256,        for (int i = 0; i < this.subplotInfo.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,257,            PlotRenderingInfo info ,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,259,            clone.subplotInfo.add(info.clone());,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,261,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,272,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,273,"        SerialUtilities.writeShape(this.dataArea, stream);",0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,274,"        SerialUtilities.writeShape(this.plotArea, stream);",0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,275,    },0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,287,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,288,        this.dataArea = (Rectangle2D) SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,289,        this.plotArea = (Rectangle2D) SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,26,290,    },0.0,0,-1,0
org/jfree/chart/axis/AxisState,26,100,        this.cursor = cursor;,0.0,0,-1,0
org/jfree/chart/axis/AxisState,26,101,    },0.0,0,-1,0
org/jfree/chart/axis/AxisState,26,110,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/AxisState,26,111,            cursorUp(units);   ,0.0,0,-1,0
org/jfree/chart/axis/AxisState,26,113,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/AxisState,26,114,            cursorDown(units);   ,0.0,0,-1,0
org/jfree/chart/axis/AxisState,26,116,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisState,26,117,            cursorLeft(units);   ,0.0,0,-1,0
org/jfree/chart/axis/AxisState,26,119,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisState,26,120,            cursorRight(units);   ,0.0,0,-1,0
org/jfree/chart/axis/AxisState,26,122,    },0.0,0,-1,0
org/jfree/chart/axis/AxisState,26,148,        this.cursor = this.cursor - units;,0.0,0,-1,0
org/jfree/chart/axis/AxisState,26,149,    },0.0,0,-1,0
org/jfree/chart/axis/AxisState,26,157,        this.cursor = this.cursor + units;,0.0,0,-1,0
org/jfree/chart/axis/AxisState,26,158,    },0.0,0,-1,0
org/jfree/chart/axis/AxisState,26,166,        return this.ticks;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,236,    public CategoryLabelPositions() {,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,237,        this.positionForAxisAtTop = new CategoryLabelPosition();,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,238,        this.positionForAxisAtBottom = new CategoryLabelPosition();,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,239,        this.positionForAxisAtLeft = new CategoryLabelPosition();,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,240,        this.positionForAxisAtRight = new CategoryLabelPosition();,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,241,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,261,"            throw new IllegalArgumentException(""Null 'top' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,264,"            throw new IllegalArgumentException(""Null 'bottom' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,267,"            throw new IllegalArgumentException(""Null 'left' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,270,"            throw new IllegalArgumentException(""Null 'right' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,291,            result = this.positionForAxisAtTop;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,299,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,300,            result = this.positionForAxisAtRight;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,317,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,318,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,320,        if (top == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,321,"            throw new IllegalArgumentException(""Null 'top' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,324,        return new CategoryLabelPositions(,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,344,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,345,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,347,        if (bottom == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,348,"            throw new IllegalArgumentException(""Null 'bottom' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,351,        return new CategoryLabelPositions(,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,371,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,372,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,374,        if (left == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,375,"            throw new IllegalArgumentException(""Null 'left' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,378,        return new CategoryLabelPositions(,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,398,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,399,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,401,        if (right == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,402,"            throw new IllegalArgumentException(""Null 'right' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,405,        return new CategoryLabelPositions(,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,424,            return true;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,427,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,432,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,436,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,439,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,442,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,455,        int result = 19;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,456,        result = 37 * result + this.positionForAxisAtTop.hashCode();,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,457,        result = 37 * result + this.positionForAxisAtBottom.hashCode();,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,458,        result = 37 * result + this.positionForAxisAtLeft.hashCode();,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,459,        result = 37 * result + this.positionForAxisAtRight.hashCode();,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPositions,26,460,        return result;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,94,        return this.top;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,103,        this.top = space;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,104,    },0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,112,        return this.bottom;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,121,        this.bottom = space;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,122,    },0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,130,        return this.left;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,139,        this.left = space;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,140,    },0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,148,        return this.right;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,157,        this.right = space;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,158,    },0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,168,"            throw new IllegalArgumentException(""Null 'edge' argument."");",0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,179,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,180,            this.right += space;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,183,"            throw new IllegalStateException(""Unrecognised 'edge' argument."");",0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,193,"        this.top = Math.max(this.top, space.top);",0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,194,"        this.bottom = Math.max(this.bottom, space.bottom);",0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,195,"        this.left = Math.max(this.left, space.left);",0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,196,"        this.right = Math.max(this.right, space.right);",0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,197,    },0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,207,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,208,            if (this.top < space) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,209,                this.top = space;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,212,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,213,            if (this.bottom < space) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,214,                this.bottom = space;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,217,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,218,            if (this.left < space) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,219,                this.left = space;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,222,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,223,            if (this.right < space) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,224,                this.right = space;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,228,            throw new IllegalStateException(,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,232,    },0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,264,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,265,            result = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,267,        result.setRect(,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,273,        return result;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,285,        Rectangle2D result = null;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,286,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,287,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,291,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,292,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,297,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,298,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,302,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,303,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,308,        return result;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,320,        return super.clone();,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,331,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,332,            return true;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,334,        if (!(obj instanceof AxisSpace)) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,335,            return false;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,337,        AxisSpace that = (AxisSpace) obj;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,338,        if (this.top != that.top) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,339,            return false;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,341,        if (this.bottom != that.bottom) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,342,            return false;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,344,        if (this.left != that.left) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,345,            return false;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,347,        if (this.right != that.right) {,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,348,            return false;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,350,        return true;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,359,        int result = 23;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,360,        long l = Double.doubleToLongBits(this.top);,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,361,        result = 37 * result + (int) (l ^ (l >>> 32));,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,362,        l = Double.doubleToLongBits(this.bottom);,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,363,        result = 37 * result + (int) (l ^ (l >>> 32));,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,364,        l = Double.doubleToLongBits(this.left);,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,365,        result = 37 * result + (int) (l ^ (l >>> 32));,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,366,        l = Double.doubleToLongBits(this.right);,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,367,        result = 37 * result + (int) (l ^ (l >>> 32));,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,368,        return result;,0.0,0,-1,0
org/jfree/chart/axis/AxisSpace,26,377,"        return super.toString() + ""[left="" + this.left + "",right="" + this.right ",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,66,"        this(1.0, 1.0, 1.0, 1.0);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,67,    },0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,95,"            throw new IllegalArgumentException(""Null 'unitType' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,111,        return this.unitType;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,159,            return true;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,162,                return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,166,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,169,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,172,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,175,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,178,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,191,        result = (this.unitType != null ? this.unitType.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,192,        temp = this.top != +0.0d ? Double.doubleToLongBits(this.top) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,193,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,194,        temp = this.bottom != +0.0d ? Double.doubleToLongBits(this.bottom) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,195,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,196,        temp = this.left != +0.0d ? Double.doubleToLongBits(this.left) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,197,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,198,        temp = this.right != +0.0d ? Double.doubleToLongBits(this.right) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,199,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,200,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,210,"        return ""RectangleInsets[t="" + this.top + "",l="" + this.left",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,229,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,230,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,232,        double x = base.getX();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,233,        double y = base.getY();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,234,        double w = base.getWidth();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,235,        double h = base.getHeight();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,236,        if (horizontal == LengthAdjustmentType.EXPAND) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,237,            double leftOutset = calculateLeftOutset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,238,            x = x - leftOutset;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,239,            w = w + leftOutset + calculateRightOutset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,240,        },0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,241,        else if (horizontal == LengthAdjustmentType.CONTRACT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,242,            double leftMargin = calculateLeftInset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,243,            x = x + leftMargin;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,244,            w = w - leftMargin - calculateRightInset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,246,        if (vertical == LengthAdjustmentType.EXPAND) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,247,            double topMargin = calculateTopOutset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,248,            y = y - topMargin;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,249,            h = h + topMargin + calculateBottomOutset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,250,        },0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,251,        else if (vertical == LengthAdjustmentType.CONTRACT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,252,            double topMargin = calculateTopInset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,253,            y = y + topMargin;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,254,            h = h - topMargin - calculateBottomInset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,256,"        return new Rectangle2D.Double(x, y, w, h);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,267,"        return createInsetRectangle(base, true, true);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,281,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,282,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,284,        double topMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,285,        double bottomMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,286,        if (vertical) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,287,            topMargin = calculateTopInset(base.getHeight());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,288,            bottomMargin = calculateBottomInset(base.getHeight());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,290,        double leftMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,291,        double rightMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,292,        if (horizontal) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,293,            leftMargin = calculateLeftInset(base.getWidth());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,294,            rightMargin = calculateRightInset(base.getWidth());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,296,        return new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,328,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,360,            result = (this.top * height);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,375,            result = (height / (1 - this.top - this.bottom)) * this.top;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,390,            result = (this.bottom * height);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,405,            result = (height / (1 - this.top - this.bottom)) * this.bottom;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,420,            result = (this.left * width);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,435,            result = (width / (1 - this.left - this.right)) * this.left;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,450,            result = (this.right * width);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,26,465,            result = (width / (1 - this.left - this.right)) * this.right;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,76,"            throw new IllegalArgumentException(""Null 'name' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,101,            return true;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,104,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelWidthType,26,128,        return null;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,92,"        this(RectangleAnchor.CENTER, TextBlockAnchor.BOTTOM_CENTER, ",0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,94,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,153,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,157,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,161,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,165,"            throw new IllegalArgumentException(""Null 'widthType' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,240,            return true;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,243,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,247,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,250,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,253,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,256,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,259,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,262,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,273,        int result = 19;,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,274,        result = 37 * result + this.categoryAnchor.hashCode();,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,275,        result = 37 * result + this.labelAnchor.hashCode();,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,276,        result = 37 * result + this.rotationAnchor.hashCode();,0.0,0,-1,0
org/jfree/chart/axis/CategoryLabelPosition,26,277,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,93,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,110,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,127,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,147,        else if (anchor == RectangleAnchor.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,148,"            result.setLocation(rectangle.getCenterX(), rectangle.getMaxY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,150,        else if (anchor == RectangleAnchor.LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,151,"            result.setLocation(rectangle.getMinX(), rectangle.getCenterY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,153,        else if (anchor == RectangleAnchor.RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,154,"            result.setLocation(rectangle.getMaxX(), rectangle.getCenterY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,156,        else if (anchor == RectangleAnchor.TOP_LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,157,"            result.setLocation(rectangle.getMinX(), rectangle.getMinY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,159,        else if (anchor == RectangleAnchor.TOP_RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,160,"            result.setLocation(rectangle.getMaxX(), rectangle.getMinY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,162,        else if (anchor == RectangleAnchor.BOTTOM_LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,163,"            result.setLocation(rectangle.getMinX(), rectangle.getMaxY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,165,        else if (anchor == RectangleAnchor.BOTTOM_RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,166,"            result.setLocation(rectangle.getMaxX(), rectangle.getMaxY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,186,        Rectangle2D result = null;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,187,        final double w = dimensions.getWidth();,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,188,        final double h = dimensions.getHeight();,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,189,        if (anchor == RectangleAnchor.CENTER) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,190,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,194,        else if (anchor == RectangleAnchor.TOP) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,195,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,199,        else if (anchor == RectangleAnchor.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,200,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,204,        else if (anchor == RectangleAnchor.LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,205,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,209,        else if (anchor == RectangleAnchor.RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,210,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,214,        else if (anchor == RectangleAnchor.TOP_LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,215,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,219,        else if (anchor == RectangleAnchor.TOP_RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,220,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,224,        else if (anchor == RectangleAnchor.BOTTOM_LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,225,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,229,        else if (anchor == RectangleAnchor.BOTTOM_RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,230,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,234,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,264,        else if (this.equals(RectangleAnchor.TOP_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,265,            result = RectangleAnchor.TOP_RIGHT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,267,        else if (this.equals(RectangleAnchor.BOTTOM_LEFT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,268,            result = RectangleAnchor.BOTTOM_LEFT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,270,        else if (this.equals(RectangleAnchor.BOTTOM_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,26,271,            result = RectangleAnchor.BOTTOM_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,112,        return this.name;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,129,            return false;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,146,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,161,            return TextBlockAnchor.TOP_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,164,            return TextBlockAnchor.TOP_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,167,            return TextBlockAnchor.CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,178,        else if (this.equals(TextBlockAnchor.BOTTOM_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,179,            return TextBlockAnchor.BOTTOM_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,181,        else if (this.equals(TextBlockAnchor.BOTTOM_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,182,            return TextBlockAnchor.BOTTOM_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextBlockAnchor,26,184,        return null;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,136,        return this.name;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,153,            return false;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,170,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,183,            result = TextAnchor.TOP_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,189,            result = TextAnchor.TOP_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,192,            result = TextAnchor.BOTTOM_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,198,            result = TextAnchor.BOTTOM_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,201,            result = TextAnchor.BASELINE_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,204,            result = TextAnchor.BASELINE_CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,207,            result = TextAnchor.BASELINE_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,210,            result = TextAnchor.CENTER_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,215,        else if (this.equals(TextAnchor.CENTER_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,216,            result = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,218,        else if (this.equals(TextAnchor.HALF_ASCENT_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,219,            result = TextAnchor.HALF_ASCENT_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,221,        else if (this.equals(TextAnchor.HALF_ASCENT_CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,222,            result = TextAnchor.HALF_ASCENT_CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,224,        else if (this.equals(TextAnchor.HALF_ASCENT_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,26,225,            result = TextAnchor.HALF_ASCENT_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,335,        if (this.verticalTickLabels != flag) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,336,            this.verticalTickLabels = flag;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,337,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,339,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,350,        return this.positiveArrowVisible;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,363,        this.positiveArrowVisible = visible;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,364,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,365,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,376,        return this.negativeArrowVisible;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,389,        this.negativeArrowVisible = visible;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,390,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,391,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,402,        return this.upArrow;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,415,        if (arrow == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,416,"            throw new IllegalArgumentException(""Null 'arrow' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,418,        this.upArrow = arrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,419,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,420,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,431,        return this.downArrow;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,444,        if (arrow == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,445,"            throw new IllegalArgumentException(""Null 'arrow' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,447,        this.downArrow = arrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,448,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,449,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,460,        return this.leftArrow;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,473,        if (arrow == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,474,"            throw new IllegalArgumentException(""Null 'arrow' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,476,        this.leftArrow = arrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,477,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,478,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,489,        return this.rightArrow;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,502,        if (arrow == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,503,"            throw new IllegalArgumentException(""Null 'arrow' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,505,        this.rightArrow = arrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,506,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,507,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,524,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,525,"            axisLine = new Line2D.Double(dataArea.getX(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,528,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,529,"            axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,532,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,533,"            axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,543,            if (this.inverted) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,544,                drawDownOrLeft = true;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,547,                drawUpOrRight = true;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,551,            if (this.inverted) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,552,                drawUpOrRight = true;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,555,                drawDownOrLeft = true;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,559,            double x = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,560,            double y = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,561,            Shape arrow = null;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,562,            if (edge == RectangleEdge.TOP || edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,563,                x = dataArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,564,                y = cursor;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,565,                arrow = this.rightArrow; ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,567,            else if (edge == RectangleEdge.LEFT ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,569,                x = cursor;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,570,                y = dataArea.getMinY();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,571,                arrow = this.upArrow; ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,575,            AffineTransform transformer = new AffineTransform();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,576,"            transformer.setToTranslation(x, y);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,577,            Shape shape = transformer.createTransformedShape(arrow);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,578,            g2.fill(shape);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,579,            g2.draw(shape);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,583,            double x = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,584,            double y = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,585,            Shape arrow = null;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,586,            if (edge == RectangleEdge.TOP || edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,587,                x = dataArea.getMinX();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,588,                y = cursor;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,589,                arrow = this.leftArrow; ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,591,            else if (edge == RectangleEdge.LEFT ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,593,                x = cursor;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,594,                y = dataArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,595,                arrow = this.downArrow; ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,599,            AffineTransform transformer = new AffineTransform();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,600,"            transformer.setToTranslation(x, y);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,601,            Shape shape = transformer.createTransformedShape(arrow);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,602,            g2.fill(shape);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,603,            g2.draw(shape);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,629,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,630,"            result[0] = (float) valueToJava2D(tick.getValue(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,631,            result[1] = (float) (cursor + insets.getTop() + 2.0); ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,633,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,634,            result[0] = (float) (cursor - insets.getLeft() - 2.0);    ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,635,"            result[1] = (float) valueToJava2D(tick.getValue(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,637,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,638,            result[0] = (float) (cursor + insets.getRight() + 2.0);    ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,639,"            result[1] = (float) valueToJava2D(tick.getValue(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,692,"                    mark = new Line2D.Double(cursor - ol, xx, cursor + il, xx);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,695,"                    mark = new Line2D.Double(cursor + ol, xx, cursor - il, xx);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,700,                else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,701,"                    mark = new Line2D.Double(xx, cursor + ol, xx, cursor - il);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,712,"                used += findMaximumTickLabelWidth(ticks, g2, plotArea, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,714,                state.cursorLeft(used);      ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,717,"                used = findMaximumTickLabelWidth(ticks, g2, plotArea, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,719,                state.cursorRight(used);      ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,726,            else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,727,"                used = findMaximumTickLabelHeight(ticks, g2, plotArea, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,729,                state.cursorDown(used);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,754,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,759,            return space;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,765,"            space.ensureAtLeast(dimension, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,821,            FontMetrics fm = g2.getFontMetrics(font);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,822,            Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,823,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,824,                Tick tick = (Tick) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,825,                Rectangle2D labelBounds = TextUtilities.getTextBounds(,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,827,                if (labelBounds.getWidth() + insets.getTop() ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,829,                    maxHeight = labelBounds.getWidth() ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,832,            },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,833,        },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,878,"            LineMetrics metrics = font.getLineMetrics(""ABCxyz"", ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,880,            maxWidth = metrics.getHeight() ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,912,        if (this.inverted != flag) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,913,            this.inverted = flag;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,914,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,917,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,941,"        setAutoRange(auto, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,942,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,954,        if (this.autoRange != auto) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,955,            this.autoRange = auto;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,956,            if (this.autoRange) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,957,                autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,959,            if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,960,                notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,963,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1001,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1040,        if (range == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1041,"            throw new IllegalArgumentException(""Null 'range' argument."");",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1043,        this.defaultAutoRange = range;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1044,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1045,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1073,        this.lowerMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1074,        if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1075,            autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1077,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1078,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1106,        this.upperMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1107,        if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1108,            autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1110,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1111,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1132,        this.fixedAutoRange = length;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1133,        if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1134,            autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1136,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1137,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1147,        return this.range.getLowerBound();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1159,        if (this.range.getUpperBound() > min) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1160,"            setRange(new Range(min, this.range.getUpperBound()));            ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1163,"            setRange(new Range(min, min + 1.0));                        ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1165,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1175,        return this.range.getUpperBound();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1187,        if (this.range.getLowerBound() < max) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1188,"            setRange(new Range(this.range.getLowerBound(), max));",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1191,"            setRange(max - 1.0, max);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1193,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1217,"        setRange(range, true, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1218,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1236,"            throw new IllegalArgumentException(""Null 'range' argument."");",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1239,            this.autoRange = false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1243,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1259,"        setRange(new Range(lower, upper));",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1260,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1270,"        setRangeWithMargins(range, true, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1271,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1288,        if (range == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1289,"            throw new IllegalArgumentException(""Null 'range' argument."");",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1291,"        setRange(Range.expand(range, getLowerMargin(), getUpperMargin()), ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1293,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1304,"        setRangeWithMargins(new Range(lower, upper));",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1305,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1315,"        setRange(new Range(value - length / 2, value + length / 2));",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1316,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1341,"        setAutoTickUnitSelection(flag, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1342,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1355,        if (this.autoTickUnitSelection != flag) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1356,            this.autoTickUnitSelection = flag;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1357,            if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1358,                notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1361,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1387,        this.standardTickUnits = source;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1388,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1389,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1457,        double central = this.range.getCentralValue();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1458,"        Range adjusted = new Range(this.range.getLowerBound() + value - central,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1460,        setRange(adjusted);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1462,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1475,"        resizeRange(percent, this.range.getCentralValue());",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1476,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1490,        if (percent > 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1491,            double halfLength = this.range.getLength() * percent / 2;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1492,"            Range adjusted = new Range(anchorValue - halfLength, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1494,            setRange(adjusted);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1495,        },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1497,            setAutoRange(true);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1499,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1508,        double start = this.range.getLowerBound();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1509,        double length = this.range.getLength();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1510,        Range adjusted = null;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1511,        if (isInverted()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1512,"            adjusted = new Range(start + (length * (1 - upperPercent)), ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1516,"            adjusted = new Range(start + length * lowerPercent, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1519,        setRange(adjusted);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1520,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1530,        return this.autoTickIndex;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1541,        this.autoTickIndex = index;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1542,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1554,            return true;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1557,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1563,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1566,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1569,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1572,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1575,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1578,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1581,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1584,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1587,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1590,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1593,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1597,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1600,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1616,        ValueAxis clone = (ValueAxis) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,26,1617,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,72,"        this(size, NumberFormat.getNumberInstance());",0.0,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,73,    },0.0,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,85,"            throw new IllegalArgumentException(""Null 'formatter' argument."");",0.0,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,110,            return true;,0.0,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,113,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,116,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,120,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,131,        int result = super.hashCode();,0.0,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,132,        result = 29 * result + (this.formatter != null ,0.0,0,-1,0
org/jfree/chart/axis/NumberTickUnit,26,134,        return result;,0.0,0,-1,0
org/jfree/chart/axis/TickUnit,26,100,        return String.valueOf(value);,0.0,0,-1,0
org/jfree/chart/axis/TickUnit,26,127,            return -1;,0.0,0,-1,0
org/jfree/chart/axis/TickUnit,26,142,            return false;,0.0,0,-1,0
org/jfree/chart/axis/TickUnit,26,145,            return true;,0.0,0,-1,0
org/jfree/chart/axis/TickUnit,26,151,        return false;,0.0,0,-1,0
org/jfree/chart/axis/TickUnit,26,161,        long temp = this.size != +0.0d ? Double.doubleToLongBits(this.size) ,0.0,0,-1,0
org/jfree/chart/axis/TickUnit,26,163,        return (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,98,        return getOpposite(this);,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,121,            return true;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,124,            return false;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,142,        if (location == null) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,143,"            throw new IllegalArgumentException(""Null 'location' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,145,        AxisLocation result = null;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,146,        if (location == AxisLocation.TOP_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,147,            result = AxisLocation.BOTTOM_OR_RIGHT;   ,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,149,        else if (location == AxisLocation.TOP_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,150,            result = AxisLocation.BOTTOM_OR_LEFT;   ,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,152,        else if (location == AxisLocation.BOTTOM_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,153,            result = AxisLocation.TOP_OR_RIGHT;   ,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,155,        else if (location == AxisLocation.BOTTOM_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,156,            result = AxisLocation.TOP_OR_LEFT;   ,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,159,"            throw new IllegalStateException(""AxisLocation not recognised."");   ",0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,161,        return result;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,173,            return AxisLocation.TOP_OR_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,176,            return AxisLocation.BOTTOM_OR_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,26,184,        return null;,0.0,0,-1,0
org/jfree/chart/axis/ValueTick,26,91,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/axis/ValueTick,26,92,            return true;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueTick,26,94,        if (obj instanceof ValueTick && super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueTick,26,95,            ValueTick vt = (ValueTick) obj;,0.0,0,-1,0
org/jfree/chart/axis/ValueTick,26,96,            if (!(this.value == vt.value)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueTick,26,97,                return false;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueTick,26,99,            return true;,0.0,0,-1,0
org/jfree/chart/axis/ValueTick,26,101,        return false;,0.0,0,-1,0
org/jfree/chart/axis/Tick,26,88,"            throw new IllegalArgumentException(""Null 'textAnchor' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Tick,26,91,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/axis/Tick,26,146,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/axis/Tick,26,147,            return true;   ,0.0,0,-1,0
org/jfree/chart/axis/Tick,26,149,        if (obj instanceof Tick) {,0.0,0,-1,0
org/jfree/chart/axis/Tick,26,150,            Tick t = (Tick) obj;   ,0.0,0,-1,0
org/jfree/chart/axis/Tick,26,151,"            if (!ObjectUtilities.equal(this.text, t.text)) {",0.0,0,-1,0
org/jfree/chart/axis/Tick,26,152,                return false;   ,0.0,0,-1,0
org/jfree/chart/axis/Tick,26,154,"            if (!ObjectUtilities.equal(this.textAnchor, t.textAnchor)) {",0.0,0,-1,0
org/jfree/chart/axis/Tick,26,155,                return false;   ,0.0,0,-1,0
org/jfree/chart/axis/Tick,26,157,"            if (!ObjectUtilities.equal(this.rotationAnchor, t.rotationAnchor)) {",0.0,0,-1,0
org/jfree/chart/axis/Tick,26,158,                return false;   ,0.0,0,-1,0
org/jfree/chart/axis/Tick,26,160,            if (!(this.angle == t.angle)) {,0.0,0,-1,0
org/jfree/chart/axis/Tick,26,161,                return false;   ,0.0,0,-1,0
org/jfree/chart/axis/Tick,26,163,            return true;,0.0,0,-1,0
org/jfree/chart/axis/Tick,26,165,        return false;,0.0,0,-1,0
org/jfree/chart/axis/Tick,26,176,        Tick clone = (Tick) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/Tick,26,177,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/Tick,26,186,        return this.text;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,322,        this(null);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,323,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,364,        return this.timeZone;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,377,        if (!this.timeZone.equals(zone)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,378,            this.timeZone = zone;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,379,            setStandardTickUnits(createStandardDateTickUnits(zone));,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,380,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,382,    } ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,390,        return this.timeline;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,402,        if (this.timeline != timeline) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,403,            this.timeline = timeline;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,404,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,406,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,436,"        setTickUnit(unit, true, true);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,437,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,453,"            setAutoTickUnitSelection(false, false);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,456,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,478,        this.dateFormatOverride = formatter;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,479,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,480,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,490,"        setRange(range, true, true);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,491,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,507,"            throw new IllegalArgumentException(""Null 'range' argument."");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,512,            range = new DateRange(range);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,525,        if (lower.getTime() >= upper.getTime()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,526,"            throw new IllegalArgumentException(""Requires 'lower' < 'upper'."");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,528,"        setRange(new DateRange(lower, upper));",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,529,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,539,        if (lower >= upper) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,540,"            throw new IllegalArgumentException(""Requires 'lower' < 'upper'."");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,542,"        setRange(new DateRange(lower, upper));",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,543,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,561,            result = new Date((long) range.getLowerBound());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,579,        if (date == null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,580,"            throw new IllegalArgumentException(""Null 'date' argument."");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,583,        Date maxDate = getMaximumDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,584,        long maxMillis = maxDate.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,585,        long newMinMillis = date.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,586,        if (maxMillis <= newMinMillis) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,587,            Date oldMin = getMinimumDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,588,            long length = maxMillis - oldMin.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,589,            maxDate = new Date(newMinMillis + length);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,591,"        setRange(new DateRange(date, maxDate), true, false);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,592,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,593,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,611,            result = new Date((long) range.getUpperBound());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,629,        if (maximumDate == null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,630,"            throw new IllegalArgumentException(""Null 'maximumDate' argument."");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,633,        Date minDate = getMinimumDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,634,        long minMillis = minDate.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,635,        long newMaxMillis = maximumDate.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,636,        if (minMillis >= newMaxMillis) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,637,            Date oldMax = getMaximumDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,638,            long length = oldMax.getTime() - minMillis;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,639,            minDate = new Date(newMaxMillis - length);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,641,"        setRange(new DateRange(minDate, maximumDate), true, false);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,642,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,643,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,651,        return this.tickMarkPosition;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,661,        if (position == null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,662,"            throw new IllegalArgumentException(""Null 'position' argument."");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,664,        this.tickMarkPosition = position;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,665,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,666,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,714,                result = maxX + ((value - axisMin) / (axisMax - axisMin)) ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,722,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,723,            double minY = area.getMinY();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,724,            double maxY = area.getMaxY();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,725,            if (isInverted()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,726,                result = minY + (((value - axisMin) / (axisMax - axisMin)) ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,730,                result = maxY - (((value - axisMin) / (axisMax - axisMin)) ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,751,        double value = date.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,752,"        return valueToJava2D(value, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,770,        DateRange range = (DateRange) getRange();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,771,        double axisMin = this.timeline.toTimelineValue(range.getLowerDate());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,772,        double axisMax = this.timeline.toTimelineValue(range.getUpperDate());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,774,        double min = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,775,        double max = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,776,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,777,            min = area.getX();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,778,            max = area.getMaxX();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,780,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,781,            min = area.getMaxY();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,782,            max = area.getY();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,786,        if (isInverted()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,787,             result = axisMax - ((java2DValue - min) / (max - min) ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,791,             result = axisMin + ((java2DValue - min) / (max - min) ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,795,        return this.timeline.toMillisecond((long) result); ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,817,"        return previousStandardDate(getMaximumDate(), unit);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,863,                years = calendar.get(Calendar.YEAR);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,864,                months = calendar.get(Calendar.MONTH);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,865,                days = calendar.get(Calendar.DATE);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,866,                hours = calendar.get(Calendar.HOUR_OF_DAY);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,867,                minutes = calendar.get(Calendar.MINUTE);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,868,                if (this.tickMarkPosition == DateTickMarkPosition.START) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,869,                    milliseconds = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,871,                else if (this.tickMarkPosition == DateTickMarkPosition.MIDDLE) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,872,                    milliseconds = 500;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,875,                    milliseconds = 999;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,877,"                calendar.set(Calendar.MILLISECOND, milliseconds);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,878,"                calendar.set(years, months, days, hours, minutes, value);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,879,                Date dd = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,880,                if (dd.getTime() >= date.getTime()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,881,"                    calendar.set(Calendar.SECOND, value - 1);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,882,                    dd = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,884,                return calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,887,                years = calendar.get(Calendar.YEAR);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,888,                months = calendar.get(Calendar.MONTH);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,889,                days = calendar.get(Calendar.DATE);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,890,                hours = calendar.get(Calendar.HOUR_OF_DAY);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,891,                if (this.tickMarkPosition == DateTickMarkPosition.START) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,892,                    seconds = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,894,                else if (this.tickMarkPosition == DateTickMarkPosition.MIDDLE) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,895,                    seconds = 30;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,898,                    seconds = 59;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,900,                calendar.clear(Calendar.MILLISECOND);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,901,"                calendar.set(years, months, days, hours, value, seconds);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,902,                Date d0 = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,903,                if (d0.getTime() >= date.getTime()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,904,"                    calendar.set(Calendar.MINUTE, value - 1);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,905,                    d0 = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,907,                return d0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,910,                years = calendar.get(Calendar.YEAR);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,911,                months = calendar.get(Calendar.MONTH);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,912,                days = calendar.get(Calendar.DATE);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,913,                if (this.tickMarkPosition == DateTickMarkPosition.START) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,914,                    minutes = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,915,                    seconds = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,917,                else if (this.tickMarkPosition == DateTickMarkPosition.MIDDLE) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,918,                    minutes = 30;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,919,                    seconds = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,922,                    minutes = 59;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,923,                    seconds = 59;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,925,                calendar.clear(Calendar.MILLISECOND);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,926,"                calendar.set(years, months, days, value, minutes, seconds);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,927,                Date d1 = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,928,                if (d1.getTime() >= date.getTime()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,929,"                    calendar.set(Calendar.HOUR_OF_DAY, value - 1);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,930,                    d1 = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,932,                return d1;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,935,                years = calendar.get(Calendar.YEAR);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,936,                months = calendar.get(Calendar.MONTH);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,937,                if (this.tickMarkPosition == DateTickMarkPosition.START) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,938,                    hours = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,939,                    minutes = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,940,                    seconds = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,942,                else if (this.tickMarkPosition == DateTickMarkPosition.MIDDLE) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,943,                    hours = 12;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,944,                    minutes = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,945,                    seconds = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,948,                    hours = 23;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,949,                    minutes = 59;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,950,                    seconds = 59;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,952,                calendar.clear(Calendar.MILLISECOND);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,953,"                calendar.set(years, months, value, hours, 0, 0);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,956,                Date d2 = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,957,                if (d2.getTime() >= date.getTime()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,958,"                    calendar.set(Calendar.DATE, value - 1);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,959,                    d2 = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,961,                return d2;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,972,                    month = (Month) month.previous();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,973,                    standardDate = calculateDateForPosition(,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,979,                if (this.tickMarkPosition == DateTickMarkPosition.START) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,980,                    months = 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,981,                    days = 1;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,983,                else if (this.tickMarkPosition == DateTickMarkPosition.MIDDLE) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,984,                    months = 6;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,985,                    days = 1;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,988,                    months = 11;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,989,                    days = 31;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,991,                calendar.clear(Calendar.MILLISECOND);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,992,"                calendar.set(value, months, days, 0, 0, 0);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,993,                Date d3 = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,994,                if (d3.getTime() >= date.getTime()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,995,"                    calendar.set(Calendar.YEAR, value - 1);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,996,                    d3 = calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,998,                return d3;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1000,            default: return null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1019,"            throw new IllegalArgumentException(""Null 'position' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1025,        else if (position == DateTickMarkPosition.MIDDLE) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1026,            result = new Date(period.getMiddleMillisecond());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1028,        else if (position == DateTickMarkPosition.END) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1029,            result = new Date(period.getLastMillisecond());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1062,        return createStandardDateTickUnits(TimeZone.getDefault());,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1079,"            throw new IllegalArgumentException(""Null 'zone' argument."");",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1215,                    r = new DateRange((,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1230,                lower = upper - fixedAutoRange;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1269,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1270,"            selectVerticalAutoTickUnit(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1290,            shift = ((SegmentedTimeline) this.timeline).getStartTime();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1309,            unit2 = (DateTickUnit) tickUnits.getLargerTickUnit(unit2);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1328,        TickUnitSource tickUnits = getStandardTickUnits();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1329,"        double zero = valueToJava2D(0.0, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1332,        double estimate1 = getRange().getLength() / 10.0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1333,        DateTickUnit candidate1 ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1335,"        double labelHeight1 = estimateMaximumTickLabelHeight(g2, candidate1);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1336,"        double y1 = valueToJava2D(candidate1.getSize(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1337,        double candidate1UnitHeight = Math.abs(y1 - zero);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1340,        double estimate2 ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1342,        DateTickUnit candidate2 ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1344,"        double labelHeight2 = estimateMaximumTickLabelHeight(g2, candidate2);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1345,"        double y2 = valueToJava2D(candidate2.getSize(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1346,        double unit2Height = Math.abs(y2 - zero);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1350,       if (labelHeight2 < unit2Height) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1351,           finalUnit = candidate2;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1354,           finalUnit = (DateTickUnit) tickUnits.getLargerTickUnit(candidate2);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1356,"       setTickUnit(finalUnit, false, false);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1358,    },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1385,            result += lm.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1396,                lowerStr = formatter.format(lower);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1397,                upperStr = formatter.format(upper);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1429,        RectangleInsets tickLabelInsets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1430,        double result = tickLabelInsets.getTop() + tickLabelInsets.getBottom();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1432,        Font tickLabelFont = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1433,        FontRenderContext frc = g2.getFontRenderContext();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1434,"        LineMetrics lm = tickLabelFont.getLineMetrics(""ABCxyz"", frc);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1435,        if (!isVerticalTickLabels()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1438,            result += lm.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1442,            DateRange range = (DateRange) getRange();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1443,            Date lower = range.getLowerDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1444,            Date upper = range.getUpperDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1445,            String lowerStr = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1446,            String upperStr = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1447,            DateFormat formatter = getDateFormatOverride();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1448,            if (formatter != null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1449,                lowerStr = formatter.format(lower);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1450,                upperStr = formatter.format(upper);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1453,                lowerStr = unit.dateToString(lower);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1454,                upperStr = unit.dateToString(upper);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1456,            FontMetrics fm = g2.getFontMetrics(tickLabelFont);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1457,            double w1 = fm.stringWidth(lowerStr);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1458,            double w2 = fm.stringWidth(upperStr);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1459,"            result += Math.max(w1, w2);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1462,        return result;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1486,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1487,"            result = refreshTicksVertical(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1526,                    tickLabel = formatter.format(tickDate);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1535,                    anchor = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1536,                    rotationAnchor = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1537,                    if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1538,                        angle = Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1541,                        angle = -Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1550,                        anchor = TextAnchor.TOP_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1551,                        rotationAnchor = TextAnchor.TOP_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1561,"                tickDate = unit.rollDate(tickDate, this.timeZone);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1562,                continue;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1579,"                    tickDate = calculateDateForPosition(new Year(tickDate, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1581,                    break;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1583,                default: break;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1605,        List result = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1607,        Font tickLabelFont = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1608,        g2.setFont(tickLabelFont);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1610,        if (isAutoTickUnitSelection()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1611,"            selectAutoTickUnit(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1613,        DateTickUnit unit = getTickUnit();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1614,        Date tickDate = calculateLowestVisibleTickValue(unit);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1616,        Date upperDate = getMaximumDate();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1617,        while (tickDate.before(upperDate)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1619,            if (!isHiddenValue(tickDate.getTime())) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1622,                DateFormat formatter = getDateFormatOverride();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1623,                if (formatter != null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1624,                    tickLabel = formatter.format(tickDate);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1627,                    tickLabel = this.tickUnit.dateToString(tickDate);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1629,                TextAnchor anchor = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1630,                TextAnchor rotationAnchor = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1631,                double angle = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1632,                if (isVerticalTickLabels()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1633,                    anchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1634,                    rotationAnchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1635,                    if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1636,                        angle = -Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1639,                        angle = Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1643,                    if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1644,                        anchor = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1645,                        rotationAnchor = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1648,                        anchor = TextAnchor.CENTER_LEFT;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1649,                        rotationAnchor = TextAnchor.CENTER_LEFT;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1653,"                Tick tick = new DateTick(tickDate, tickLabel, anchor, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1655,                result.add(tick);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1656,"                tickDate = unit.addToDate(tickDate, this.timeZone);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1657,            },0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1659,"                tickDate = unit.rollDate(tickDate, this.timeZone);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1662,        return result;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1690,            AxisState state = new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1693,"            List ticks = refreshTicks(g2, state, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1694,            state.setTicks(ticks);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1695,            return state;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1707,        return state;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1718,        double start = this.timeline.toTimelineValue(,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1721,        double length = (this.timeline.toTimelineValue(,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1725,        Range adjusted = null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1726,        if (isInverted()) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1727,            adjusted = new DateRange(this.timeline.toMillisecond((long) (start ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1733,            adjusted = new DateRange(this.timeline.toMillisecond(,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1738,        setRange(adjusted);,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1739,    } ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1749,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1750,            return true;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1752,        if (!(obj instanceof DateAxis)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1753,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1755,        DateAxis that = (DateAxis) obj;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1756,"        if (!ObjectUtilities.equal(this.tickUnit, that.tickUnit)) {",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1757,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1759,"        if (!ObjectUtilities.equal(this.dateFormatOverride, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1761,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1763,"        if (!ObjectUtilities.equal(this.tickMarkPosition, ",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1765,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1767,"        if (!ObjectUtilities.equal(this.timeline, that.timeline)) {",0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1768,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1770,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1771,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1773,        return true;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1782,        if (getLabel() != null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1783,            return getLabel().hashCode();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1786,            return 0;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1800,        DateAxis clone = (DateAxis) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1803,        if (this.dateFormatOverride != null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1804,            clone.dateFormatOverride ,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,1809,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,119,"        this(unit, count, null);",0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,120,    },0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,155,            this.formatter = DateFormat.getDateInstance(DateFormat.SHORT);,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,191,        return this.rollUnit;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,200,        return this.rollCount;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,211,        return this.formatter.format(new Date((long) milliseconds));,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,235,        Calendar calendar = Calendar.getInstance();,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,236,        calendar.setTime(base);,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,237,"        calendar.add(getCalendarField(this.unit), this.count);",0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,238,        return calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,270,        Calendar calendar = Calendar.getInstance();,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,271,        calendar.setTime(base);,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,272,"        calendar.add(getCalendarField(this.rollUnit), this.rollCount);",0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,273,        return calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,289,        Calendar calendar = Calendar.getInstance(zone);,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,290,        calendar.setTime(base);,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,291,"        calendar.add(getCalendarField(this.rollUnit), this.rollCount);",0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,292,        return calendar.getTime();,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,319,                return Calendar.YEAR;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,323,                return Calendar.DATE;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,325,                return Calendar.HOUR_OF_DAY;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,327,                return Calendar.MINUTE;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,329,                return Calendar.SECOND;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,333,                return Calendar.MILLISECOND;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,368,                throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,387,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,388,            return true;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,390,        if (!(obj instanceof DateTickUnit)) {,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,391,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,393,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,394,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,396,        DateTickUnit that = (DateTickUnit) obj;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,397,        if (this.unit != that.unit) {,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,398,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,400,        if (this.count != that.count) {,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,401,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,403,"        if (!ObjectUtilities.equal(this.formatter, that.formatter)) {",0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,404,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,406,        return true;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,415,        int result = 19;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,416,        result = 37 * result + this.unit;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,417,        result = 37 * result + this.count;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,418,        result = 37 * result + this.formatter.hashCode();,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,419,        return result;,0.0,0,-1,0
org/jfree/chart/axis/DateTickUnit,26,435,"        return ""DateTickUnit["" + DateTickUnit.units[this.unit] + "", "" ",0.0,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,87,        return this.name;,0.0,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,100,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,101,            return true;,0.0,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,103,        if (!(obj instanceof DateTickMarkPosition)) {,0.0,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,104,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,106,        DateTickMarkPosition position = (DateTickMarkPosition) obj;,0.0,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,107,        if (!this.name.equals(position.toString())) {,0.0,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,108,            return false;,0.0,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,110,        return true;,0.0,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,122,        if (this.equals(DateTickMarkPosition.START)) {,0.0,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,123,            return DateTickMarkPosition.START;,0.0,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,125,        else if (this.equals(DateTickMarkPosition.MIDDLE)) {,0.0,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,126,            return DateTickMarkPosition.MIDDLE;,0.0,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,128,        else if (this.equals(DateTickMarkPosition.END)) {,0.0,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,129,            return DateTickMarkPosition.END;,0.0,0,-1,0
org/jfree/chart/axis/DateTickMarkPosition,26,131,        return null;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,247,            return true;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,272,            return true;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,285,            return true;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,296,            if (object == null) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,297,                return false;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,299,            if (object == this) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,300,                return true;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,302,            if (object instanceof DefaultTimeline) {,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,303,                return true;,0.0,0,-1,0
org/jfree/chart/axis/DateAxis,26,305,            return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,112,        return this.labelAnchor;,0.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,123,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,124,            return true;   ,0.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,126,        if (obj instanceof CategoryTick && super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,127,            CategoryTick that = (CategoryTick) obj;   ,0.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,128,"            if (!ObjectUtilities.equal(this.category, that.category)) {",0.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,129,                return false;   ,0.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,131,"            if (!ObjectUtilities.equal(this.label, that.label)) {",0.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,132,                return false;   ,0.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,134,"            if (!ObjectUtilities.equal(this.labelAnchor, that.labelAnchor)) {",0.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,135,                return false;   ,0.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,137,            return true;,0.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,139,        return false;,0.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,148,        int result = 41;,0.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,149,        result = 37 * result + this.category.hashCode();,0.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,150,        result = 37 * result + this.label.hashCode();,0.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,151,        result = 37 * result + this.labelAnchor.hashCode();,0.0,0,-1,0
org/jfree/chart/axis/CategoryTick,26,152,        return result;,0.0,0,-1,0
org/jfree/chart/text/TextBlock,26,98,        return this.lineAlignment;   ,0.0,0,-1,0
org/jfree/chart/text/TextBlock,26,108,"            throw new IllegalArgumentException(""Null 'alignment' argument."");",0.0,0,-1,0
org/jfree/chart/text/TextBlock,26,153,        return Collections.unmodifiableList(this.lines);,0.0,0,-1,0
org/jfree/chart/text/TextBlock,26,244,            else if (this.lineAlignment == HorizontalAlignment.RIGHT) {,0.0,0,-1,0
org/jfree/chart/text/TextBlock,26,245,                lineOffset = (float) (d.getWidth() - dimension.getWidth());   ,0.0,0,-1,0
org/jfree/chart/text/TextBlock,26,283,            xAdj = (float) -width;,0.0,0,-1,0
org/jfree/chart/text/TextBlock,26,294,        else if (anchor == TextBlockAnchor.CENTER_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextBlock,26,298,            yAdj = (float) -height / 2.0f;,0.0,0,-1,0
org/jfree/chart/text/TextBlock,26,301,        else if (anchor == TextBlockAnchor.BOTTOM_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextBlock,26,305,            yAdj = (float) -height;,0.0,0,-1,0
org/jfree/chart/text/TextBlock,26,321,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/text/TextBlock,26,322,            return true;   ,0.0,0,-1,0
org/jfree/chart/text/TextBlock,26,324,        if (obj instanceof TextBlock) {,0.0,0,-1,0
org/jfree/chart/text/TextBlock,26,325,            final TextBlock block = (TextBlock) obj;,0.0,0,-1,0
org/jfree/chart/text/TextBlock,26,326,            return this.lines.equals(block.lines);,0.0,0,-1,0
org/jfree/chart/text/TextBlock,26,328,        return false;,0.0,0,-1,0
org/jfree/chart/text/TextBlock,26,337,        return (this.lines != null ? this.lines.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,100,        this(null);    ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,101,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,134,            AxisState state = new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,137,"            List ticks = refreshTicks(g2, state, dataArea, edge); ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,138,            state.setTicks(ticks);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,139,            return state;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,162,            adjustedY += yOffset;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis3D,26,178,        return info;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,188,        this(null);    ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,189,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,214,        return this.rangeType;   ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,225,        if (rangeType == null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,226,"            throw new IllegalArgumentException(""Null 'rangeType' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,228,        this.rangeType = rangeType;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,229,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,230,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,256,        if (this.autoRangeIncludesZero != flag) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,257,            this.autoRangeIncludesZero = flag;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,258,            if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,259,                autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,261,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,263,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,286,        if (this.autoRangeStickyZero != flag) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,287,            this.autoRangeStickyZero = flag;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,288,            if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,289,                autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,291,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,293,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,326,"        setTickUnit(unit, true, true);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,327,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,344,"            throw new IllegalArgumentException(""Null 'unit' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,348,"            setAutoTickUnitSelection(false, false);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,351,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,377,        this.numberFormatOverride = formatter;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,378,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,379,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,389,        return this.markerBand;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,403,        this.markerBand = band;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,404,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,405,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,438,"                lower = Math.max(0.0, lower);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,439,"                upper = Math.max(0.0, upper);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,442,"                lower = Math.min(0.0, lower);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,443,"                upper = Math.min(0.0, upper);                   ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,455,                lower = upper - fixedAutoRange;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,461,                    double expand = (minRange - range) / 2;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,462,                    upper = upper + expand;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,463,                    lower = lower - expand;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,464,                    if (lower == upper) { // see bug report 1549218,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,465,                        double adjust = Math.abs(lower) / 10.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,466,                        lower = lower - adjust;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,467,                        upper = upper + adjust;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,469,                    if (this.rangeType == RangeType.POSITIVE) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,470,                        if (lower < 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,471,                            upper = upper - lower;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,472,                            lower = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,475,                    else if (this.rangeType == RangeType.NEGATIVE) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,476,                        if (upper > 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,477,                            lower = lower - upper;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,478,                            upper = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,485,"                        upper = Math.min(0.0, upper + getUpperMargin() * range);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,498,                    upper = upper + getUpperMargin() * range;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,499,                    lower = lower - getLowerMargin() * range;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,540,            return max ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,565,        Range range = getRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,566,        double axisMin = range.getLowerBound();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,567,        double axisMax = range.getUpperBound();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,569,        double min = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,570,        double max = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,571,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,572,            min = area.getX();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,573,            max = area.getMaxX();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,575,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,576,            min = area.getMaxY();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,577,            max = area.getY();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,579,        if (isInverted()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,580,            return axisMax ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,584,            return axisMin ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,614,        double unit = getTickUnit().getSize();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,615,        double index = Math.floor(getRange().getUpperBound() / unit);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,616,        return index * unit;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,660,            state = new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,663,"            List ticks = refreshTicks(g2, state, dataArea, edge); ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,664,            state.setTicks(ticks);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,665,            return state;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,683,        return state;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,790,        TickUnits units = new TickUnits();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,791,"        DecimalFormat df0 = new DecimalFormat(""0"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,792,"        DecimalFormat df1 = new DecimalFormat(""#,##0"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,793,"        units.add(new NumberTickUnit(1, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,794,"        units.add(new NumberTickUnit(2, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,795,"        units.add(new NumberTickUnit(5, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,796,"        units.add(new NumberTickUnit(10, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,797,"        units.add(new NumberTickUnit(20, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,798,"        units.add(new NumberTickUnit(50, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,799,"        units.add(new NumberTickUnit(100, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,800,"        units.add(new NumberTickUnit(200, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,801,"        units.add(new NumberTickUnit(500, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,802,"        units.add(new NumberTickUnit(1000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,803,"        units.add(new NumberTickUnit(2000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,804,"        units.add(new NumberTickUnit(5000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,805,"        units.add(new NumberTickUnit(10000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,806,"        units.add(new NumberTickUnit(20000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,807,"        units.add(new NumberTickUnit(50000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,808,"        units.add(new NumberTickUnit(100000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,809,"        units.add(new NumberTickUnit(200000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,810,"        units.add(new NumberTickUnit(500000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,811,"        units.add(new NumberTickUnit(1000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,812,"        units.add(new NumberTickUnit(2000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,813,"        units.add(new NumberTickUnit(5000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,814,"        units.add(new NumberTickUnit(10000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,815,"        units.add(new NumberTickUnit(20000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,816,"        units.add(new NumberTickUnit(50000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,817,"        units.add(new NumberTickUnit(100000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,818,"        units.add(new NumberTickUnit(200000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,819,"        units.add(new NumberTickUnit(500000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,820,"        units.add(new NumberTickUnit(1000000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,821,"        units.add(new NumberTickUnit(2000000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,822,"        units.add(new NumberTickUnit(5000000000.0, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,823,"        units.add(new NumberTickUnit(10000000000.0, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,825,        return units;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,846,        TickUnits units = new TickUnits();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,848,        NumberFormat numberFormat = NumberFormat.getNumberInstance(locale);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,852,"        units.add(new NumberTickUnit(0.0000001,    numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,853,"        units.add(new NumberTickUnit(0.000001,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,854,"        units.add(new NumberTickUnit(0.00001,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,855,"        units.add(new NumberTickUnit(0.0001,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,856,"        units.add(new NumberTickUnit(0.001,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,857,"        units.add(new NumberTickUnit(0.01,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,858,"        units.add(new NumberTickUnit(0.1,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,859,"        units.add(new NumberTickUnit(1,            numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,860,"        units.add(new NumberTickUnit(10,           numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,861,"        units.add(new NumberTickUnit(100,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,862,"        units.add(new NumberTickUnit(1000,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,863,"        units.add(new NumberTickUnit(10000,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,864,"        units.add(new NumberTickUnit(100000,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,865,"        units.add(new NumberTickUnit(1000000,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,866,"        units.add(new NumberTickUnit(10000000,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,867,"        units.add(new NumberTickUnit(100000000,    numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,868,"        units.add(new NumberTickUnit(1000000000,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,869,"        units.add(new NumberTickUnit(10000000000.0,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,871,"        units.add(new NumberTickUnit(0.00000025,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,872,"        units.add(new NumberTickUnit(0.0000025,    numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,873,"        units.add(new NumberTickUnit(0.000025,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,874,"        units.add(new NumberTickUnit(0.00025,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,875,"        units.add(new NumberTickUnit(0.0025,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,876,"        units.add(new NumberTickUnit(0.025,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,877,"        units.add(new NumberTickUnit(0.25,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,878,"        units.add(new NumberTickUnit(2.5,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,879,"        units.add(new NumberTickUnit(25,           numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,880,"        units.add(new NumberTickUnit(250,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,881,"        units.add(new NumberTickUnit(2500,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,882,"        units.add(new NumberTickUnit(25000,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,883,"        units.add(new NumberTickUnit(250000,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,884,"        units.add(new NumberTickUnit(2500000,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,885,"        units.add(new NumberTickUnit(25000000,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,886,"        units.add(new NumberTickUnit(250000000,    numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,887,"        units.add(new NumberTickUnit(2500000000.0,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,888,"        units.add(new NumberTickUnit(25000000000.0,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,890,"        units.add(new NumberTickUnit(0.0000005,    numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,891,"        units.add(new NumberTickUnit(0.000005,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,892,"        units.add(new NumberTickUnit(0.00005,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,893,"        units.add(new NumberTickUnit(0.0005,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,894,"        units.add(new NumberTickUnit(0.005,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,895,"        units.add(new NumberTickUnit(0.05,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,896,"        units.add(new NumberTickUnit(0.5,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,897,"        units.add(new NumberTickUnit(5L,           numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,898,"        units.add(new NumberTickUnit(50L,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,899,"        units.add(new NumberTickUnit(500L,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,900,"        units.add(new NumberTickUnit(5000L,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,901,"        units.add(new NumberTickUnit(50000L,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,902,"        units.add(new NumberTickUnit(500000L,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,903,"        units.add(new NumberTickUnit(5000000L,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,904,"        units.add(new NumberTickUnit(50000000L,    numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,905,"        units.add(new NumberTickUnit(500000000L,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,906,"        units.add(new NumberTickUnit(5000000000L,  numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,907,"        units.add(new NumberTickUnit(50000000000L,  numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,909,        return units;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,925,        TickUnits units = new TickUnits();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,927,        NumberFormat numberFormat = NumberFormat.getNumberInstance(locale);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,929,"        units.add(new NumberTickUnit(1,              numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,930,"        units.add(new NumberTickUnit(2,              numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,931,"        units.add(new NumberTickUnit(5,              numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,932,"        units.add(new NumberTickUnit(10,             numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,933,"        units.add(new NumberTickUnit(20,             numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,934,"        units.add(new NumberTickUnit(50,             numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,935,"        units.add(new NumberTickUnit(100,            numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,936,"        units.add(new NumberTickUnit(200,            numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,937,"        units.add(new NumberTickUnit(500,            numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,938,"        units.add(new NumberTickUnit(1000,           numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,939,"        units.add(new NumberTickUnit(2000,           numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,940,"        units.add(new NumberTickUnit(5000,           numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,941,"        units.add(new NumberTickUnit(10000,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,942,"        units.add(new NumberTickUnit(20000,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,943,"        units.add(new NumberTickUnit(50000,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,944,"        units.add(new NumberTickUnit(100000,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,945,"        units.add(new NumberTickUnit(200000,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,946,"        units.add(new NumberTickUnit(500000,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,947,"        units.add(new NumberTickUnit(1000000,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,948,"        units.add(new NumberTickUnit(2000000,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,949,"        units.add(new NumberTickUnit(5000000,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,950,"        units.add(new NumberTickUnit(10000000,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,951,"        units.add(new NumberTickUnit(20000000,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,952,"        units.add(new NumberTickUnit(50000000,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,953,"        units.add(new NumberTickUnit(100000000,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,954,"        units.add(new NumberTickUnit(200000000,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,955,"        units.add(new NumberTickUnit(500000000,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,956,"        units.add(new NumberTickUnit(1000000000,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,957,"        units.add(new NumberTickUnit(2000000000,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,958,"        units.add(new NumberTickUnit(5000000000.0,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,959,"        units.add(new NumberTickUnit(10000000000.0,  numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,961,        return units;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1006,            FontRenderContext frc = g2.getFontRenderContext();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1007,"            LineMetrics lm = getTickLabelFont().getLineMetrics(""0"", frc);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1008,            result += lm.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1009,        },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1020,                lowerStr = formatter.format(lower);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1021,                upperStr = formatter.format(upper);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1089,            unit2 = (NumberTickUnit) tickUnits.getLargerTickUnit(unit2);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1125,            unit2 = (NumberTickUnit) tickUnits.getLargerTickUnit(unit2);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1193,                    tickLabel = formatter.format(currentTickValue);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1202,                    anchor = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1203,                    rotationAnchor = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1204,                    if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1205,                        angle = Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1208,                        angle = -Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1217,                        anchor = TextAnchor.TOP_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1218,                        rotationAnchor = TextAnchor.TOP_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1265,                    tickLabel = formatter.format(currentTickValue);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1275,                    if (edge == RectangleEdge.LEFT) { ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1276,                        anchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1277,                        rotationAnchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1278,                        angle = -Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1281,                        anchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1282,                        rotationAnchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1283,                        angle = Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1292,                        anchor = TextAnchor.CENTER_LEFT;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1293,                        rotationAnchor = TextAnchor.CENTER_LEFT;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1317,        NumberAxis clone = (NumberAxis) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1318,        if (this.numberFormatOverride != null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1319,            clone.numberFormatOverride ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1322,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1334,            return true;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1337,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1340,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1344,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1347,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1350,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1354,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1357,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1368,        if (getLabel() != null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1369,            return getLabel().hashCode();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,26,1372,            return 0;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,112,                          Font font) {,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,113,        this.axis = axis;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,114,        this.topOuterGap = topOuterGap;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,115,        this.topInnerGap = topInnerGap;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,116,        this.bottomOuterGap = bottomOuterGap;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,117,        this.bottomInnerGap = bottomInnerGap;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,118,        this.font = font;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,119,        this.markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,120,    },0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,128,        this.markers.add(marker);,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,129,    },0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,140,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,141,        if (this.markers.size() > 0) {,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,142,            LineMetrics metrics = this.font.getLineMetrics(,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,145,            result = this.topOuterGap + this.topInnerGap + metrics.getHeight(),0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,148,        return result;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,163,        g2.setFont(font);,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,164,        FontMetrics fm = g2.getFontMetrics(font);,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,165,"        Rectangle2D r = TextUtilities.getTextBounds(text, g2, fm);",0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,166,        double x = bounds.getX();,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,167,        if (r.getWidth() < bounds.getWidth()) {,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,168,            x = x + (bounds.getWidth() - r.getWidth()) / 2;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,170,        LineMetrics metrics = font.getLineMetrics(,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,173,        g2.drawString(,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,177,    },0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,191,        double h = getHeight(g2);,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,192,        Iterator iterator = this.markers.iterator();,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,193,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,194,            IntervalMarker marker = (IntervalMarker) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,195,            double start =  Math.max(,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,198,            double end = Math.min(,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,201,            double s = this.axis.valueToJava2D(,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,204,            double e = this.axis.valueToJava2D(,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,207,            Rectangle2D r = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,212,            Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,213,            g2.setComposite(AlphaComposite.getInstance(,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,216,            g2.setPaint(marker.getPaint());,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,217,            g2.fill(r);,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,218,            g2.setPaint(marker.getOutlinePaint());,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,219,            g2.draw(r);,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,220,            g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,222,            g2.setPaint(Color.black);,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,223,"            drawStringInRect(g2, r, this.font, marker.getLabel());",0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,224,        },0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,226,    },0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,237,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,238,            return true;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,240,        if (!(obj instanceof MarkerAxisBand)) {,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,241,            return false;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,243,        MarkerAxisBand that = (MarkerAxisBand) obj;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,244,        if (this.topOuterGap != that.topOuterGap) {,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,245,            return false;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,247,        if (this.topInnerGap != that.topInnerGap) {,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,248,            return false;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,250,        if (this.bottomInnerGap != that.bottomInnerGap) {,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,251,            return false;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,253,        if (this.bottomOuterGap != that.bottomOuterGap) {,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,254,            return false;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,256,"        if (!ObjectUtilities.equal(this.font, that.font)) {",0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,257,            return false;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,259,"        if (!ObjectUtilities.equal(this.markers, that.markers)) {",0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,260,            return false;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,262,        return true;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,271,        int result = 37;,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,272,        result = 19 * result + this.font.hashCode();,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,273,        result = 19 * result + this.markers.hashCode();,0.0,0,-1,0
org/jfree/chart/axis/MarkerAxisBand,26,274,        return result;,0.0,0,-1,0
org/jfree/chart/axis/NumberTick,26,81,        return this.number;    ,0.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,105,        return this.axesAtLeft;,0.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,115,        return this.axesAtRight;    ,0.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,127,"            throw new IllegalArgumentException(""Null 'axis' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,130,"            throw new IllegalArgumentException(""Null 'edge' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,141,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisCollection,26,142,            this.axesAtRight.add(axis);,0.0,0,-1,0
org/jfree/chart/axis/TickUnits,26,95,"            throw new NullPointerException(""Null 'unit' argument."");",0.0,0,-1,0
org/jfree/chart/axis/TickUnits,26,110,        return this.tickUnits.size();,0.0,0,-1,0
org/jfree/chart/axis/TickUnits,26,123,        return (TickUnit) this.tickUnits.get(pos);,0.0,0,-1,0
org/jfree/chart/axis/TickUnits,26,135,"        int index = Collections.binarySearch(this.tickUnits, unit);",0.0,0,-1,0
org/jfree/chart/axis/TickUnits,26,136,        if (index >= 0) {,0.0,0,-1,0
org/jfree/chart/axis/TickUnits,26,137,            index = index + 1;,0.0,0,-1,0
org/jfree/chart/axis/TickUnits,26,140,            index = -index;,0.0,0,-1,0
org/jfree/chart/axis/TickUnits,26,143,        return (TickUnit) this.tickUnits.get(,0.0,0,-1,0
org/jfree/chart/axis/TickUnits,26,194,        TickUnits clone = (TickUnits) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/TickUnits,26,195,        clone.tickUnits = new java.util.ArrayList(this.tickUnits);,0.0,0,-1,0
org/jfree/chart/axis/TickUnits,26,196,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/TickUnits,26,208,            return false;,0.0,0,-1,0
org/jfree/chart/axis/TickUnits,26,211,            return true;,0.0,0,-1,0
org/jfree/chart/axis/TickUnits,26,217,        return false;,0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,119,        return this.startValue;,0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,131,        this.startValue = value;,0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,132,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,133,    },0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,141,        return this.endValue;,0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,153,        this.endValue = value;,0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,154,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,155,    },0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,163,        return this.gradientPaintTransformer;   ,0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,174,        this.gradientPaintTransformer = transformer;,0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,175,        notifyListeners(new MarkerChangeEvent(this));        ,0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,176,    },0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,187,            return true;   ,0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,190,            return false;,0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,193,            return false;,0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,197,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,200,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,204,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/IntervalMarker,26,218,        return super.clone();   ,0.0,0,-1,0
org/jfree/chart/axis/DateTick,26,85,        return this.date;,0.0,0,-1,0
org/jfree/chart/axis/DateTick,26,96,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/axis/DateTick,26,97,            return true;   ,0.0,0,-1,0
org/jfree/chart/axis/DateTick,26,99,        if (obj instanceof DateTick && super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/axis/DateTick,26,100,            DateTick dt = (DateTick) obj;,0.0,0,-1,0
org/jfree/chart/axis/DateTick,26,101,"            if (!ObjectUtilities.equal(this.date, dt.date)) {",0.0,0,-1,0
org/jfree/chart/axis/DateTick,26,102,                return false;   ,0.0,0,-1,0
org/jfree/chart/axis/DateTick,26,104,            return true;,0.0,0,-1,0
org/jfree/chart/axis/DateTick,26,106,        return false;,0.0,0,-1,0
org/jfree/chart/axis/DateTick,26,115,        return this.date.hashCode();,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,92,"        super(name, version, info, copyright, licenceName);",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,93,        this.logo = logo;,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,94,        this.licenceText = licenceText;,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,96,    },0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,104,        return this.logo;,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,122,        return this.licenceText;,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,140,        return this.contributors;,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,159,        final StringBuffer result = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,160,        result.append(getName());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,161,"        result.append("" version "");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,162,        result.append(getVersion());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,163,"        result.append("".\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,164,        result.append(getCopyright());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,165,"        result.append("".\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,166,"        result.append(""\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,167,"        result.append(""For terms of use, see the licence below.\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,168,"        result.append(""\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,169,"        result.append(""FURTHER INFORMATION:"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,170,        result.append(getInfo());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,171,"        result.append(""\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,172,"        result.append(""CONTRIBUTORS:"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,173,        if (this.contributors != null) {,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,174,            final Iterator iterator = this.contributors.iterator();,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,175,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,176,                final Contributor contributor = (Contributor) iterator.next();,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,177,                result.append(contributor.getName());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,178,"                result.append("" ("");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,179,                result.append(contributor.getEmail());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,180,"                result.append("")."");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,181,            },0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,182,        },0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,184,"            result.append(""None"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,187,"        result.append(""\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,188,"        result.append(""OTHER LIBRARIES USED BY "");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,189,        result.append(getName());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,190,"        result.append("":"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,191,        final Library[] libraries = getLibraries();,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,192,        if (libraries.length != 0) {,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,193,            for (int i = 0; i < libraries.length; i++) {,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,194,                final Library lib = libraries[i];,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,195,                result.append(lib.getName());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,196,"                result.append("" "");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,197,                result.append(lib.getVersion());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,198,"                result.append("" ("");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,199,                result.append(lib.getInfo());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,200,"                result.append("")."");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,204,"            result.append(""None"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,206,"        result.append(""\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,207,        result.append(getName());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,208,"        result.append("" LICENCE TERMS:"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,209,"        result.append(""\n"");",0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,210,        result.append(getLicenceText());,0.0,0,-1,0
org/jfree/chart/ui/ProjectInfo,26,212,        return result.toString();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,162,        this();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,163,        setName(name);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,164,        setVersion(version);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,165,        setLicenceName(licence);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,166,        setInfo(info);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,167,    },0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,181,"        this(name, version, licenceName, info);",0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,182,        setCopyright(copyright);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,183,    },0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,191,        return this.copyright;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,245,        return (Library[]) this.libraries.toArray,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,255,        if (library == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,256,            throw new NullPointerException();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,258,        this.libraries.add(library);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,259,    },0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,267,        ArrayList libraries = new ArrayList();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,268,        for (int i = 0; i < this.optionalLibraries.size(); i++) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,269,          OptionalLibraryHolder holder =,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,271,          Library l = holder.getLibrary();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,272,          if (l != null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,273,              libraries.add(l);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,276,        return (Library[]) libraries.toArray(new Library[libraries.size()]);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,285,        if (libraryClass == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,286,"            throw new NullPointerException(""Library classname must be given."");",0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,288,        this.optionalLibraries.add,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,290,    },0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,301,      if (library == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,302,"          throw new NullPointerException(""Library must be given."");",0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,304,      this.optionalLibraries.add(new OptionalLibraryHolder(library));,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,305,  },0.0,0,-1,0
org/jfree/chart/ui/Library,26,73,"    public Library(String name, String version, String licence, String info) {",0.0,0,-1,0
org/jfree/chart/ui/Library,26,75,        this.name = name;,0.0,0,-1,0
org/jfree/chart/ui/Library,26,76,        this.version = version;,0.0,0,-1,0
org/jfree/chart/ui/Library,26,77,        this.licenceName = licence;,0.0,0,-1,0
org/jfree/chart/ui/Library,26,78,        this.info = info;,0.0,0,-1,0
org/jfree/chart/ui/Library,26,79,    },0.0,0,-1,0
org/jfree/chart/ui/Library,26,94,        return this.name;,0.0,0,-1,0
org/jfree/chart/ui/Library,26,103,        return this.version;,0.0,0,-1,0
org/jfree/chart/ui/Library,26,112,        return this.licenceName;,0.0,0,-1,0
org/jfree/chart/ui/Library,26,121,        return this.info;,0.0,0,-1,0
org/jfree/chart/ui/Library,26,161,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/ui/Library,26,162,            return true;,0.0,0,-1,0
org/jfree/chart/ui/Library,26,164,        if (obj == null || getClass() != obj.getClass()) {,0.0,0,-1,0
org/jfree/chart/ui/Library,26,165,            return false;,0.0,0,-1,0
org/jfree/chart/ui/Library,26,168,        Library library = (Library) obj;,0.0,0,-1,0
org/jfree/chart/ui/Library,26,170,        if (this.name != null ? !this.name.equals(library.name) ,0.0,0,-1,0
org/jfree/chart/ui/Library,26,172,            return false;,0.0,0,-1,0
org/jfree/chart/ui/Library,26,175,        return true;,0.0,0,-1,0
org/jfree/chart/ui/Library,26,179,      return (this.name != null ? this.name.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,168,"        this("""");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,169,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,177,"        this(text, TextTitle.DEFAULT_FONT, TextTitle.DEFAULT_TEXT_PAINT,",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,180,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,216,"            throw new NullPointerException(""Null 'text' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,219,"            throw new NullPointerException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,222,"            throw new NullPointerException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,246,        return this.text;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,256,        if (text == null) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,257,"            throw new IllegalArgumentException(""Null 'text' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,259,        if (!this.text.equals(text)) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,260,            this.text = text;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,261,            notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,263,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,274,        return this.textAlignment;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,283,        if (alignment == null) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,284,"            throw new IllegalArgumentException(""Null 'alignment' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,286,        this.textAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,287,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,288,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,298,        return this.font;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,310,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,311,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,313,        if (!this.font.equals(font)) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,314,            this.font = font;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,315,            notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,317,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,327,        return this.paint;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,339,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,340,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,342,        if (!this.paint.equals(paint)) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,343,            this.paint = paint;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,344,            notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,346,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,354,        return this.backgroundPaint;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,365,        this.backgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,366,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,367,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,375,        return this.toolTipText;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,385,        this.toolTipText = text;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,386,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,387,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,395,        return this.urlText;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,405,        this.urlText = text;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,406,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,407,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,416,        return this.expandToFitSpace;   ,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,427,        this.expandToFitSpace = expand;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,428,        notifyListeners(new TitleChangeEvent(this));        ,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,429,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,446,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,447,"                throw new RuntimeException(""Not yet implemented.""); ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,449,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,450,"                throw new RuntimeException(""Not yet implemented.""); ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,452,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,453,"                throw new RuntimeException(""Not yet implemented."");                 ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,458,"                throw new RuntimeException(""Not yet implemented.""); ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,464,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,465,"                throw new RuntimeException(""Not yet implemented."");                 ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,468,        else if (w == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,469,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,470,"                throw new RuntimeException(""Not yet implemented.""); ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,472,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,473,"                throw new RuntimeException(""Not yet implemented.""); ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,475,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,476,"                throw new RuntimeException(""Not yet implemented."");                 ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,505,"                return new Size2D(maxWidth, contentSize.getHeight());",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,511,        else if (position == RectangleEdge.LEFT || position ,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,513,            float maxWidth = (float) heightRange.getUpperBound();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,514,            g2.setFont(this.font);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,515,"            this.content = TextUtilities.createTextBlock(this.text, this.font, ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,517,            this.content.setLineAlignment(this.textAlignment);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,518,            Size2D contentSize = this.content.calculateDimensions(g2);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,521,            if (this.expandToFitSpace) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,522,"                return new Size2D(contentSize.getHeight(), maxWidth);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,525,"                return new Size2D(contentSize.height, contentSize.width);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,529,"            throw new RuntimeException(""Unrecognised exception."");",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,541,"        draw(g2, area, null);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,542,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,558,            return null;   ,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,563,            return null;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,569,"                entity = new ChartEntity(area, this.toolTipText, this.urlText);    ",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,574,            g2.setPaint(this.backgroundPaint);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,575,            g2.fill(area);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,582,        else if (position == RectangleEdge.LEFT ,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,584,"            drawVertical(g2, area);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,588,            StandardEntityCollection sec = new StandardEntityCollection();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,589,            sec.add(entity);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,590,            result.setEntityCollection(sec);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,611,            x = (float) titleArea.getX();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,612,            anchor = TextBlockAnchor.TOP_LEFT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,615,            x = (float) titleArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,616,            anchor = TextBlockAnchor.TOP_RIGHT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,627,        else if (position == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,628,            y = (float) titleArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,629,            if (horizontalAlignment == HorizontalAlignment.LEFT) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,630,                anchor = TextBlockAnchor.BOTTOM_LEFT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,632,            else if (horizontalAlignment == HorizontalAlignment.CENTER) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,633,                anchor = TextBlockAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,635,            else if (horizontalAlignment == HorizontalAlignment.RIGHT) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,636,                anchor = TextBlockAnchor.BOTTOM_RIGHT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,651,        Rectangle2D titleArea = (Rectangle2D) area.clone();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,652,        g2.setFont(this.font);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,653,        g2.setPaint(this.paint);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,654,        TextBlockAnchor anchor = null;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,655,        float y = 0.0f;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,656,        VerticalAlignment verticalAlignment = getVerticalAlignment();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,657,        if (verticalAlignment == VerticalAlignment.TOP) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,658,            y = (float) titleArea.getY();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,659,            anchor = TextBlockAnchor.TOP_RIGHT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,661,        else if (verticalAlignment == VerticalAlignment.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,662,            y = (float) titleArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,663,            anchor = TextBlockAnchor.TOP_LEFT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,665,        else if (verticalAlignment == VerticalAlignment.CENTER) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,666,            y = (float) titleArea.getCenterY();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,667,            anchor = TextBlockAnchor.TOP_CENTER;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,669,        float x = 0.0f;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,670,        RectangleEdge position = getPosition();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,671,        if (position == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,672,            x = (float) titleArea.getX();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,674,        else if (position == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,675,            x = (float) titleArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,676,            if (verticalAlignment == VerticalAlignment.TOP) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,677,                anchor = TextBlockAnchor.BOTTOM_RIGHT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,679,            else if (verticalAlignment == VerticalAlignment.CENTER) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,680,                anchor = TextBlockAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,682,            else if (verticalAlignment == VerticalAlignment.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,683,                anchor = TextBlockAnchor.BOTTOM_LEFT;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,686,"        this.content.draw(g2, x, y, anchor, x, y, -Math.PI / 2.0);",0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,687,    },0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,698,            return true;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,701,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,704,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,708,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,711,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,714,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,717,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,720,            return false;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,731,        int result = super.hashCode();,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,732,        result = 29 * result + (this.text != null ? this.text.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,733,        result = 29 * result + (this.font != null ? this.font.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,734,        result = 29 * result + (this.paint != null ? this.paint.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,735,        result = 29 * result + (this.backgroundPaint != null ,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,737,        return result;,0.0,0,-1,0
org/jfree/chart/title/TextTitle,26,748,        return super.clone();,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,198,        return this.sources;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,208,        if (sources == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,209,"            throw new IllegalArgumentException(""Null 'sources' argument."");   ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,211,        this.sources = sources;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,212,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,213,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,221,        return this.backgroundPaint;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,241,        return this.legendItemGraphicEdge;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,250,        if (edge == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,251,"            throw new IllegalArgumentException(""Null 'edge' argument."");",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,253,        this.legendItemGraphicEdge = edge;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,254,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,255,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,272,        if (anchor == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,273,"            throw new IllegalArgumentException(""Null 'anchor' point."");",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,275,        this.legendItemGraphicAnchor = anchor;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,276,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,293,        this.legendItemGraphicLocation = anchor;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,294,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,302,        return this.legendItemGraphicPadding;    ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,312,        if (padding == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,313,"            throw new IllegalArgumentException(""Null 'padding' argument."");   ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,315,        this.legendItemGraphicPadding = padding;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,316,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,317,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,325,        return this.itemFont;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,335,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,336,"            throw new IllegalArgumentException(""Null 'font' argument."");   ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,338,        this.itemFont = font;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,339,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,340,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,348,        return this.itemPaint;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,357,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,358,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,360,        this.itemPaint = paint;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,361,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,362,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,370,        return this.itemLabelPadding;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,379,        if (padding == null) {,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,380,"            throw new IllegalArgumentException(""Null 'padding' argument."");   ",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,382,        this.itemLabelPadding = padding;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,383,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,384,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,396,            this.items.setArrangement(this.vLayout);   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,458,        return this.items;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,495,"        draw(g2, area, null);",0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,496,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,532,        this.wrapper = wrapper;,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,533,    },0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,544,            return true;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,547,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,550,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,554,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,557,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,560,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,563,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,566,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,569,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,572,            return false;   ,0.0,0,-1,0
org/jfree/chart/title/LegendTitle,26,575,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,423,"        this(null, null, null, null);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,424,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,526,"        return localizationResources.getString(""Category_Plot"");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,537,        return this.orientation;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,550,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,564,        return this.axisOffset;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,576,        if (offset == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,577,"            throw new IllegalArgumentException(""Null 'offset' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,579,        this.axisOffset = offset;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,580,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,581,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,593,        return getDomainAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,606,        CategoryAxis result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,607,        if (index < this.domainAxes.size()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,608,            result = (CategoryAxis) this.domainAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,610,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,611,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,612,            if (parent instanceof CategoryPlot) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,613,                CategoryPlot cp = (CategoryPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,614,                result = cp.getDomainAxis(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,617,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,629,"        setDomainAxis(0, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,630,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,642,"        setDomainAxis(index, axis, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,643,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,654,        CategoryAxis existing = (CategoryAxis) this.domainAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,655,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,656,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,658,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,659,            axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,661,"        this.domainAxes.set(index, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,662,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,663,            axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,664,            axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,666,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,667,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,669,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,680,        for (int i = 0; i < axes.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,681,"            setDomainAxis(i, axes[i], false);   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,683,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,684,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,697,        return this.domainAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,726,            result = AxisLocation.getOpposite(getDomainAxisLocation(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,742,"        setDomainAxisLocation(0, location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,743,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,769,"        setDomainAxisLocation(index, location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,770,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,788,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,793,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,804,        return getDomainAxisEdge(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,821,            result = RectangleEdge.opposite(getDomainAxisEdge(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,832,        return this.domainAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,840,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,841,            CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,842,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,843,                axis.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,846,        this.domainAxes.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,847,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,848,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,870,        return getRangeAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,886,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,887,            if (parent instanceof CategoryPlot) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,888,                CategoryPlot cp = (CategoryPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,889,                result = cp.getRangeAxis(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,902,"        setRangeAxis(0, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,903,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,913,"        setRangeAxis(index, axis, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,914,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,925,        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,926,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,927,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,929,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,930,            axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,932,"        this.rangeAxes.set(index, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,933,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,934,            axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,935,            axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,937,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,938,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,940,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,951,        for (int i = 0; i < axes.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,952,"            setRangeAxis(i, axes[i], false);   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,954,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,955,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,963,        return getRangeAxisLocation(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,981,            result = AxisLocation.getOpposite(getRangeAxisLocation(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,997,"        setRangeAxisLocation(location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,998,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1024,"        setRangeAxisLocation(index, location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1025,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1041,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1046,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1056,        return getRangeAxisEdge(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1071,            result = RectangleEdge.opposite(getRangeAxisEdge(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1082,        return this.rangeAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1090,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1091,            ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1092,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1093,                axis.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1096,        this.rangeAxes.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1097,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1098,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1120,        return getDataset(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1167,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1188,        return this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1216,        CategoryAxis result = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1217,        Integer axisIndex = (Integer) this.datasetToDomainAxisMap.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1218,        if (axisIndex != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1219,            result = getDomainAxis(axisIndex.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1221,        return result;    ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1249,        ValueAxis result = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1250,        Integer axisIndex = (Integer) this.datasetToRangeAxisMap.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1251,        if (axisIndex != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1252,            result = getRangeAxis(axisIndex.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1254,        return result;    ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1295,"        setRenderer(0, renderer, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1296,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1316,"        setRenderer(0, renderer, notify);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1317,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1350,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1375,        for (int i = 0; i < renderers.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1376,"            setRenderer(i, renderers[i], false);   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1378,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1379,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1409,        return this.renderers.indexOf(renderer);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1420,        return this.renderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1434,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1435,"            throw new IllegalArgumentException(""Null 'order' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1437,        this.renderingOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1438,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1439,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1450,        return this.columnRenderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1466,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1481,        return this.rowRenderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1497,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1511,        return this.domainGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1526,        if (this.domainGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1527,            this.domainGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1528,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1530,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1540,        return this.domainGridlinePosition;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1552,        if (position == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1553,"            throw new IllegalArgumentException(""Null 'position' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1555,        this.domainGridlinePosition = position;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1556,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1557,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1567,        return this.domainGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1579,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1580,"            throw new IllegalArgumentException(""Null 'stroke' not permitted."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1582,        this.domainGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1583,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1584,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1594,        return this.domainGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1606,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1607,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1609,        this.domainGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1610,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1611,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1621,        return this.rangeGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1634,        if (this.rangeGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1635,            this.rangeGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1636,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1638,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1648,        return this.rangeGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1660,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1661,"            throw new IllegalArgumentException(""Null 'stroke' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1663,        this.rangeGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1664,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1665,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1675,        return this.rangeGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1687,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1688,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1690,        this.rangeGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1691,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1692,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1702,        return this.fixedLegendItems;   ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1715,        this.fixedLegendItems = items;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1716,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1717,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1762,        Rectangle2D dataArea = info.getDataArea();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1763,"        if (dataArea.contains(x, y)) {",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1765,            double java2D = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1766,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1767,                java2D = x;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1769,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1770,                java2D = y;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1772,            RectangleEdge edge = Plot.resolveRangeAxisLocation(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1774,            double value = getRangeAxis().java2DToValue(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1776,            setAnchorValue(value);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1777,            setRangeCrosshairValue(value);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1780,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1793,        if (percent > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1794,            double range = getRangeAxis().getRange().getLength();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1795,            double scaledRange = range * percent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1796,"            getRangeAxis().setRange(this.anchorValue - scaledRange / 2.0,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1798,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1800,            getRangeAxis().setAutoRange(true);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1803,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1822,            getParent().datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1838,        Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1839,        if (parent != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1840,            if (parent instanceof RendererChangeListener) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1841,                RendererChangeListener rcl = (RendererChangeListener) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1842,                rcl.rendererChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1843,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1847,                throw new RuntimeException(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1852,            configureRangeAxes();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1853,            PlotChangeEvent e = new PlotChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1854,            notifyListeners(e);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1856,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1867,"        addDomainMarker(marker, Layer.FOREGROUND); ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1868,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1881,"        addDomainMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1882,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1895,        if (marker == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1896,"            throw new IllegalArgumentException(""Null 'marker' not permitted."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1898,        if (layer == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1899,"            throw new IllegalArgumentException(""Null 'layer' not permitted."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1902,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1903,            markers = (Collection) this.foregroundDomainMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1905,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1906,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1907,"                this.foregroundDomainMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1909,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1911,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1912,            markers = (Collection) this.backgroundDomainMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1914,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1915,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1916,"                this.backgroundDomainMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1918,            markers.add(marker);            ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1920,        marker.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1921,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1922,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1931,        if (this.backgroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1932,            Set keys = this.backgroundDomainMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1933,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1934,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1935,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1936,                clearDomainMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1937,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1938,            this.backgroundDomainMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1940,        if (this.foregroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1941,            Set keys = this.foregroundDomainMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1942,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1943,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1944,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1945,                clearDomainMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1946,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1947,            this.foregroundDomainMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1949,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1950,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1960,"        return getDomainMarkers(0, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1973,        Collection result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1974,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1975,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1976,            result = (Collection) this.foregroundDomainMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1978,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1979,            result = (Collection) this.backgroundDomainMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1981,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1982,            result = Collections.unmodifiableCollection(result);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1984,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1995,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1996,        if (this.backgroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1997,            Collection markers ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,1999,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2000,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2001,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2002,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2003,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2004,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2005,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2008,        if (this.foregroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2009,            Collection markers ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2011,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2012,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2013,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2014,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2015,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2016,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2017,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2020,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2021,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2032,"        addRangeMarker(marker, Layer.FOREGROUND); ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2033,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2103,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2104,                clearRangeMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2105,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2121,"        return getRangeMarkers(0, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2134,        Collection result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2135,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2136,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2137,            result = (Collection) this.foregroundRangeMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2139,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2140,            result = (Collection) this.backgroundRangeMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2142,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2143,            result = Collections.unmodifiableCollection(result);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2145,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2173,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2174,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2175,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2176,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2177,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2178,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2192,        return this.rangeCrosshairVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2203,        if (this.rangeCrosshairVisible != flag) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2204,            this.rangeCrosshairVisible = flag;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2205,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2207,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2218,        return this.rangeCrosshairLockedOnData;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2231,        if (this.rangeCrosshairLockedOnData != flag) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2232,            this.rangeCrosshairLockedOnData = flag;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2233,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2236,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2246,        return this.rangeCrosshairValue;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2260,"        setRangeCrosshairValue(value, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2261,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2275,        this.rangeCrosshairValue = value;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2276,        if (isRangeCrosshairVisible() && notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2277,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2279,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2292,        return this.rangeCrosshairStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2306,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2307,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2309,        this.rangeCrosshairStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2310,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2311,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2323,        return this.rangeCrosshairPaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2335,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2336,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2338,        this.rangeCrosshairPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2339,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2340,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2348,        return this.annotations;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2360,        if (annotation == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2361,"            throw new IllegalArgumentException(""Null 'annotation' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2363,        this.annotations.add(annotation);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2364,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2365,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2378,        if (annotation == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2379,"            throw new IllegalArgumentException(""Null 'annotation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2381,        boolean removed = this.annotations.remove(annotation);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2382,        if (removed) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2383,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2385,        return removed;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2393,        this.annotations.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2394,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2395,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2411,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2416,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2417,                space.ensureAtLeast(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2419,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getRight(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2422,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2423,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getTop(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2425,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getBottom(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2434,"                space = getDomainAxis().reserveSpace(g2, this, plotArea, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2466,            space = new AxisSpace(); ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2471,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2472,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getTop(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2474,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getBottom(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2477,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2478,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getLeft(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2480,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getRight(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2539,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2547,            state = new PlotRenderingInfo(null);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2568,"            drawBackground(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2574,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2575,        g2.clip(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2577,"        drawDomainGridlines(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2579,        AxisState rangeAxisState = (AxisState) axisStateMap.get(getRangeAxis());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2580,        if (rangeAxisState == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2581,            if (parentState != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2582,                rangeAxisState = (AxisState) parentState.getSharedAxisStates(),0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2586,        if (rangeAxisState != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2587,"            drawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2591,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2592,"            drawDomainMarkers(g2, dataArea, i, Layer.BACKGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2594,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2595,"            drawRangeMarkers(g2, dataArea, i, Layer.BACKGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2599,        boolean foundData = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2602,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2603,        g2.setComposite(AlphaComposite.getInstance(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2606,        DatasetRenderingOrder order = getDatasetRenderingOrder();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2607,        if (order == DatasetRenderingOrder.FORWARD) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2608,            for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2609,"                foundData = render(g2, dataArea, i, state) || foundData;",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2613,            for (int i = this.datasets.size() - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2614,"                foundData = render(g2, dataArea, i, state) || foundData;   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2618,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2619,"            drawDomainMarkers(g2, dataArea, i, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2621,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2622,"            drawRangeMarkers(g2, dataArea, i, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2626,"        drawAnnotations(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2628,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2629,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2631,        if (!foundData) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2632,"            drawNoDataMessage(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2636,        if (isRangeCrosshairVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2638,"            drawRangeCrosshair(g2, dataArea, getOrientation(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2644,        if (getRenderer() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2645,"            getRenderer().drawOutline(g2, this, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2648,"            drawOutline(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2651,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2713,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2714,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2716,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2727,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2728,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2730,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2733,        cursor = dataArea.getMinX() ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2735,        iterator = axisCollection.getAxesAtLeft().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2736,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2737,            Axis axis = (Axis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2738,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2739,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2741,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2742,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2744,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2747,        cursor = dataArea.getMaxX() ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2749,        iterator = axisCollection.getAxesAtRight().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2750,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2751,            Axis axis = (Axis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2752,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2753,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2755,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2756,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2758,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2760,        return axisStateMap;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2778,        boolean foundData = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2779,        CategoryDataset currentDataset = getDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2780,        CategoryItemRenderer renderer = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2781,        CategoryAxis domainAxis = getDomainAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2782,        ValueAxis rangeAxis = getRangeAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2783,        boolean hasData = !DatasetUtilities.isEmptyOrNull(currentDataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2784,        if (hasData && renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2786,            foundData = true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2787,"            CategoryItemRendererState state = renderer.initialise(g2, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2789,            int columnCount = currentDataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2790,            int rowCount = currentDataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2791,            int passCount = renderer.getPassCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2792,            for (int pass = 0; pass < passCount; pass++) {            ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2793,                if (this.columnRenderingOrder == SortOrder.ASCENDING) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2794,                    for (int column = 0; column < columnCount; column++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2795,                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2796,                            for (int row = 0; row < rowCount; row++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2797,"                                renderer.drawItem(g2, state, dataArea, this, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2803,                            for (int row = rowCount - 1; row >= 0; row--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2804,"                                renderer.drawItem(g2, state, dataArea, this, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2812,                    for (int column = columnCount - 1; column >= 0; column--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2813,                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2814,                            for (int row = 0; row < rowCount; row++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2815,"                                renderer.drawItem(g2, state, dataArea, this, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2821,                            for (int row = rowCount - 1; row >= 0; row--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2822,"                                renderer.drawItem(g2, state, dataArea, this, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2831,        return foundData;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2846,        if (isDomainGridlinesVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2847,            CategoryAnchor anchor = getDomainGridlinePosition();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2848,            RectangleEdge domainAxisEdge = getDomainAxisEdge();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2849,            Stroke gridStroke = getDomainGridlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2850,            Paint gridPaint = getDomainGridlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2851,            if ((gridStroke != null) && (gridPaint != null)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2853,                CategoryDataset data = getDataset();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2854,                if (data != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2855,                    CategoryAxis axis = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2856,                    if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2857,                        int columnCount = data.getColumnCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2858,                        for (int c = 0; c < columnCount; c++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2859,                            double xx = axis.getCategoryJava2DCoordinate(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2862,                            CategoryItemRenderer renderer1 = getRenderer();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2863,                            if (renderer1 != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2864,"                                renderer1.drawDomainGridline(g2, this, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2872,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2886,        if (isRangeGridlinesVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2887,            Stroke gridStroke = getRangeGridlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2888,            Paint gridPaint = getRangeGridlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2889,            if ((gridStroke != null) && (gridPaint != null)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2890,                ValueAxis axis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2891,                if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2892,                    Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2893,                    while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2894,                        ValueTick tick = (ValueTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2895,                        CategoryItemRenderer renderer1 = getRenderer();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2896,                        if (renderer1 != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2897,"                            renderer1.drawRangeGridline(g2, this, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2900,                    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2904,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2914,        if (getAnnotations() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2915,            Iterator iterator = getAnnotations().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2916,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2917,                CategoryAnnotation annotation ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2919,"                annotation.draw(g2, this, dataArea, getDomainAxis(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2921,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2924,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2940,        CategoryItemRenderer r = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2941,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2942,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2945,"        Collection markers = getDomainMarkers(index, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2946,        CategoryAxis axis = getDomainAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2947,        if (markers != null && axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2948,            Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2949,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2950,                CategoryMarker marker = (CategoryMarker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2951,"                r.drawDomainMarker(g2, this, axis, marker, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2952,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2955,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2971,        CategoryItemRenderer r = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2972,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2973,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2976,"        Collection markers = getRangeMarkers(index, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2977,        ValueAxis axis = getRangeAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2978,        if (markers != null && axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2979,            Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2980,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2981,                Marker marker = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2982,"                r.drawRangeMarker(g2, this, axis, marker, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2983,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,2986,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3001,"        double java2D = getRangeAxis().valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3003,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3004,        if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3005,"            line = new Line2D.Double(java2D, dataArea.getMinY(), java2D, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3008,        else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3009,"            line = new Line2D.Double(dataArea.getMinX(), java2D, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3012,        g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3013,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3014,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3016,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3035,        if (!axis.getRange().contains(value)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3036,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3038,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3039,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3040,"            double xx = axis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3042,"            line = new Line2D.Double(xx, dataArea.getMinY(), xx, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3044,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3046,"            double yy = axis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3048,"            line = new Line2D.Double(dataArea.getMinX(), yy, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3051,        g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3052,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3053,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3055,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3075,        else if (axis == getRangeAxis()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3076,            mappedDatasets.addAll(datasetsMappedToRangeAxis(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3113,                    if (axisIndex == 0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3114,                        result.add(dataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3143,                    if (index == 0) { ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3144,                        result.add(dataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3166,        return this.weight;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3177,        this.weight = weight;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3179,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3189,        return this.fixedDomainAxisSpace;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3200,        this.fixedDomainAxisSpace = space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3202,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3212,        return this.fixedRangeAxisSpace;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3223,        this.fixedRangeAxisSpace = space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3225,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3235,        List result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3236,        if (getDataset() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3237,            result = Collections.unmodifiableList(getDataset().getColumnKeys());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3239,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3279,        return this.drawSharedDomainAxis;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3291,        this.drawSharedDomainAxis = draw;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3292,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3293,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3304,        return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3315,        return true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3329,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3343,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3354,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3355,            ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3356,            if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3357,                rangeAxis.resizeRange(factor);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3360,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3372,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3373,            ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3374,            if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3375,"                rangeAxis.zoomRange(lowerPercent, upperPercent);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3378,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3388,        return this.anchorValue;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3400,"        setAnchorValue(value, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3401,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3413,        this.anchorValue = value;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3414,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3415,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3417,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3432,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3435,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3441,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3444,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3447,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3450,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3453,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3456,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3459,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3463,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3467,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3470,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3473,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3476,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3479,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3482,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3485,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3489,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3493,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3496,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3500,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3504,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3507,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3510,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3513,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3517,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3521,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3525,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3529,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3533,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3536,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3539,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3543,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3547,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3563,        CategoryPlot clone = (CategoryPlot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3565,        clone.domainAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3566,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3567,            CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3568,            if (xAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3569,                CategoryAxis clonedAxis = (CategoryAxis) xAxis.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3570,"                clone.setDomainAxis(i, clonedAxis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3573,        clone.domainAxisLocations ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3576,        clone.rangeAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3577,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3578,            ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3579,            if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3580,                ValueAxis clonedAxis = (ValueAxis) yAxis.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3581,"                clone.setRangeAxis(i, clonedAxis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3584,        clone.rangeAxisLocations = (ObjectList) this.rangeAxisLocations.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3586,        clone.datasets = (ObjectList) this.datasets.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3587,        for (int i = 0; i < clone.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3588,            CategoryDataset dataset = clone.getDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3589,            if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3590,                dataset.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3593,        clone.datasetToDomainAxisMap ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3595,        clone.datasetToRangeAxisMap ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3597,        clone.renderers = (ObjectList) this.renderers.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3598,        if (this.fixedDomainAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3599,            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3602,        if (this.fixedRangeAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3603,            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,26,3607,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,493,"        this(null, null, null, null);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,494,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,512,        super();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,337,"    private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,340,    private transient Paint[] quadrantPaint,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,411,    private boolean domainCrosshairLockedOnData = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,429,    private boolean rangeCrosshairLockedOnData = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,466,    private DatasetRenderingOrder datasetRenderingOrder,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,473,    private SeriesRenderingOrder seriesRenderingOrder,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,514,        this.orientation = PlotOrientation.VERTICAL;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,515,        this.weight = 1;  // only relevant when this is a subplot,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,516,        this.axisOffset = RectangleInsets.ZERO_INSETS;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,519,        this.domainAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,520,        this.domainAxisLocations = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,521,        this.foregroundDomainMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,522,        this.backgroundDomainMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,524,        this.rangeAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,525,        this.rangeAxisLocations = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,526,        this.foregroundRangeMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,527,        this.backgroundRangeMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,529,        this.datasets = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,530,        this.renderers = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,532,        this.datasetToDomainAxisMap = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,533,        this.datasetToRangeAxisMap = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,535,"        this.datasets.set(0, dataset);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,536,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,537,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,540,"        this.renderers.set(0, renderer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,541,        if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,542,            renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,543,            renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,546,"        this.domainAxes.set(0, domainAxis);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,547,"        this.mapDatasetToDomainAxis(0, 0);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,548,        if (domainAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,549,            domainAxis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,550,            domainAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,552,"        this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,554,"        this.rangeAxes.set(0, rangeAxis);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,555,"        this.mapDatasetToRangeAxis(0, 0);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,556,        if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,557,            rangeAxis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,558,            rangeAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,560,"        this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,562,        configureDomainAxes();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,563,        configureRangeAxes();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,565,        this.domainGridlinesVisible = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,566,        this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,567,        this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,569,        this.domainZeroBaselineVisible = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,570,        this.domainZeroBaselinePaint = Color.black;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,571,        this.domainZeroBaselineStroke = new BasicStroke(0.5f);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,573,        this.rangeGridlinesVisible = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,574,        this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,575,        this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,577,        this.rangeZeroBaselineVisible = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,578,        this.rangeZeroBaselinePaint = Color.black;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,579,        this.rangeZeroBaselineStroke = new BasicStroke(0.5f);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,581,        this.domainCrosshairVisible = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,582,        this.domainCrosshairValue = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,583,        this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,584,        this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,586,        this.rangeCrosshairVisible = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,587,        this.rangeCrosshairValue = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,588,        this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,589,        this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,591,        this.annotations = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,593,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,276,"    public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,281,    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.lightGray;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,287,    public static final Stroke DEFAULT_CROSSHAIR_STROKE,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,291,    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,294,    protected static ResourceBundle localizationResources ,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,601,"        return localizationResources.getString(""XY_Plot"");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,612,        return this.orientation;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,624,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,625,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,627,        if (orientation != this.orientation) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,628,            this.orientation = orientation;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,629,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,631,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,641,        return this.axisOffset;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,653,        if (offset == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,654,"            throw new IllegalArgumentException(""Null 'offset' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,656,        this.axisOffset = offset;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,657,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,658,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,671,        return getDomainAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,684,        ValueAxis result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,685,        if (index < this.domainAxes.size()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,686,            result = (ValueAxis) this.domainAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,688,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,689,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,690,            if (parent instanceof XYPlot) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,691,                XYPlot xy = (XYPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,692,                result = xy.getDomainAxis(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,695,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,708,"        setDomainAxis(0, axis);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,709,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,722,"        setDomainAxis(index, axis, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,723,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,736,        ValueAxis existing = getDomainAxis(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,737,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,738,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,740,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,741,            axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,743,"        this.domainAxes.set(index, axis);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,744,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,745,            axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,746,            axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,748,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,749,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,751,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,762,        for (int i = 0; i < axes.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,763,"            setDomainAxis(i, axes[i], false);   ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,765,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,766,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,776,        return (AxisLocation) this.domainAxisLocations.get(0);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,789,"        setDomainAxisLocation(0, location, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,790,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,803,"        setDomainAxisLocation(0, location, notify);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,804,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,816,"        return Plot.resolveDomainAxisLocation(getDomainAxisLocation(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,828,        return this.domainAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,838,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,839,            ValueAxis axis = (ValueAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,840,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,841,                axis.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,844,        this.domainAxes.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,845,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,846,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,852,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,853,            ValueAxis axis = (ValueAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,854,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,855,                axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,858,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,872,        AxisLocation result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,873,        if (index < this.domainAxisLocations.size()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,874,            result = (AxisLocation) this.domainAxisLocations.get(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,876,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,877,            result = AxisLocation.getOpposite(getDomainAxisLocation());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,879,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,894,"        setDomainAxisLocation(index, location, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,895,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,914,        if (index == 0 && location == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,915,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,918,"        this.domainAxisLocations.set(index, location);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,919,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,920,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,922,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,934,        AxisLocation location = getDomainAxisLocation(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,935,"        RectangleEdge result = Plot.resolveDomainAxisLocation(location, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,937,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,938,            result = RectangleEdge.opposite(getDomainAxisEdge());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,940,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,954,        return getRangeAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,968,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,969,            axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,973,        ValueAxis existing = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,974,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,975,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,978,"        this.rangeAxes.set(0, axis);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,979,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,980,            axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,981,            axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,983,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,985,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,995,        return (AxisLocation) this.rangeAxisLocations.get(0);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1008,"        setRangeAxisLocation(0, location, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1009,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1022,"        setRangeAxisLocation(0, location, notify);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1023,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1034,"        return Plot.resolveRangeAxisLocation(getRangeAxisLocation(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1048,        ValueAxis result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1049,        if (index < this.rangeAxes.size()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1050,            result = (ValueAxis) this.rangeAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1052,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1053,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1054,            if (parent instanceof XYPlot) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1055,                XYPlot xy = (XYPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1056,                result = xy.getRangeAxis(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1059,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1072,"        setRangeAxis(index, axis, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1073,    } ,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1086,        ValueAxis existing = getRangeAxis(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1087,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1088,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1090,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1091,            axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1093,"        this.rangeAxes.set(index, axis);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1094,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1095,            axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1096,            axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1098,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1099,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1101,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1112,        for (int i = 0; i < axes.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1113,"            setRangeAxis(i, axes[i], false);   ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1115,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1116,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1126,        return this.rangeAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1136,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1137,            ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1138,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1139,                axis.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1142,        this.rangeAxes.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1143,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1144,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1152,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1153,            ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1154,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1155,                axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1158,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1172,        AxisLocation result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1173,        if (index < this.rangeAxisLocations.size()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1174,            result = (AxisLocation) this.rangeAxisLocations.get(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1176,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1177,            result = AxisLocation.getOpposite(getRangeAxisLocation());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1179,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1193,"        setRangeAxisLocation(index, location, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1194,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1213,        if (index == 0 && location == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1214,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1217,"        this.rangeAxisLocations.set(index, location);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1218,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1219,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1221,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1234,        AxisLocation location = getRangeAxisLocation(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1235,"        RectangleEdge result = Plot.resolveRangeAxisLocation(location, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1237,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1238,            result = RectangleEdge.opposite(getRangeAxisEdge());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1240,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1252,        return getDataset(0);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1265,        XYDataset result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1266,        if (this.datasets.size() > index) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1267,            result = (XYDataset) this.datasets.get(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1269,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1282,"        setDataset(0, dataset);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1283,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1294,        XYDataset existing = getDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1295,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1296,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1298,"        this.datasets.set(index, dataset);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1299,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1300,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1304,"        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1305,        datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1306,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1314,        return this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1326,        int result = -1;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1327,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1328,            if (dataset == this.datasets.get(i)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1329,                result = i;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1330,                break;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1333,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1346,"        this.datasetToDomainAxisMap.put(new Integer(index), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1349,"        datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1350,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1362,"        this.datasetToRangeAxisMap.put(new Integer(index), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1365,"        datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1366,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1376,        return getRenderer(0);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1389,        XYItemRenderer result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1390,        if (this.renderers.size() > index) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1391,            result = (XYItemRenderer) this.renderers.get(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1393,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1407,"        setRenderer(0, renderer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1408,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1420,"        setRenderer(index, renderer, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1421,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1435,        XYItemRenderer existing = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1436,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1437,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1439,"        this.renderers.set(index, renderer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1440,        if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1441,            renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1442,            renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1444,        configureDomainAxes();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1445,        configureRangeAxes();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1446,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1447,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1449,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1458,        for (int i = 0; i < renderers.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1459,"            setRenderer(i, renderers[i], false);   ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1461,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1462,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1472,        return this.datasetRenderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1486,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1487,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1489,        this.datasetRenderingOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1490,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1491,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1501,        return this.seriesRenderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1515,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1516,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1518,        this.seriesRenderingOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1519,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1520,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1531,        return this.renderers.indexOf(renderer);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1544,        XYItemRenderer result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1545,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1546,            if (this.datasets.get(i) == dataset) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1547,                result = (XYItemRenderer) this.renderers.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1548,                if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1549,                    result = getRenderer();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1554,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1566,        return this.weight;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1578,        this.weight = weight;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1579,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1580,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1591,        return this.domainGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1606,        if (this.domainGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1607,            this.domainGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1608,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1610,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1621,        return this.domainGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1638,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1639,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1641,        this.domainGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1642,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1643,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1654,        return this.domainGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1669,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1670,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1672,        this.domainGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1673,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1674,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1685,        return this.rangeGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1700,        if (this.rangeGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1701,            this.rangeGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1702,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1704,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1715,        return this.rangeGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1727,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1728,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1730,        this.rangeGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1731,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1732,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1743,        return this.rangeGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1755,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1756,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1758,        this.rangeGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1759,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1760,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1773,        return this.domainZeroBaselineVisible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1788,        this.domainZeroBaselineVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1789,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1790,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1802,        return this.domainZeroBaselineStroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1816,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1817,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1819,        this.domainZeroBaselineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1820,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1821,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1834,        return this.domainZeroBaselinePaint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1848,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1849,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1851,        this.domainZeroBaselinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1852,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1853,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1864,        return this.rangeZeroBaselineVisible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1877,        this.rangeZeroBaselineVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1878,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1879,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1889,        return this.rangeZeroBaselineStroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1901,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1902,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1904,        this.rangeZeroBaselineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1905,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1906,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1917,        return this.rangeZeroBaselinePaint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1929,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1930,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1932,        this.rangeZeroBaselinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1933,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1934,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1945,        return this.domainTickBandPaint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1956,        this.domainTickBandPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1957,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1958,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1969,        return this.rangeTickBandPaint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1980,        this.rangeTickBandPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1981,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1982,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,1993,        return this.quadrantOrigin;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2005,        if (origin == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2006,"            throw new IllegalArgumentException(""Null 'origin' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2008,        this.quadrantOrigin = origin;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2009,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2010,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2022,        if (index < 0 || index > 3) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2023,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2026,        return this.quadrantPaint[index];,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2039,        if (index < 0 || index > 3) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2040,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2043,        this.quadrantPaint[index] = paint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2044,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2045,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2061,"        addDomainMarker(marker, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2062,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2077,"        addDomainMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2078,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2087,        if (this.backgroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2088,            Set keys = this.backgroundDomainMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2089,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2090,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2091,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2092,                clearDomainMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2093,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2094,            this.backgroundDomainMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2096,        if (this.foregroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2097,            Set keys = this.foregroundDomainMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2098,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2099,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2100,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2101,                clearDomainMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2102,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2103,            this.foregroundDomainMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2105,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2106,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2117,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2118,        if (this.backgroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2119,            Collection markers,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2121,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2122,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2123,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2124,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2125,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2126,                },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2127,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2130,        if (this.foregroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2131,            Collection markers,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2133,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2134,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2135,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2136,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2137,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2138,                },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2139,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2142,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2143,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2161,        if (marker == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2162,"            throw new IllegalArgumentException(""Null 'marker' not permitted."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2164,        if (layer == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2165,"            throw new IllegalArgumentException(""Null 'layer' not permitted."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2168,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2169,            markers = (Collection) this.foregroundDomainMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2171,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2172,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2173,"                this.foregroundDomainMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2175,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2177,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2178,            markers = (Collection) this.backgroundDomainMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2180,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2181,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2182,"                this.backgroundDomainMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2184,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2186,        marker.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2187,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2188,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2202,"        addRangeMarker(marker, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2203,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2218,"        addRangeMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2219,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2228,        if (this.backgroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2229,            Set keys = this.backgroundRangeMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2230,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2231,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2232,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2233,                clearRangeMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2234,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2235,            this.backgroundRangeMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2237,        if (this.foregroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2238,            Set keys = this.foregroundRangeMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2239,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2240,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2241,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2242,                clearRangeMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2243,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2244,            this.foregroundRangeMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2246,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2247,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2265,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2266,            markers = (Collection) this.foregroundRangeMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2268,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2269,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2270,"                this.foregroundRangeMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2272,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2274,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2275,            markers = (Collection) this.backgroundRangeMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2277,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2278,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2279,"                this.backgroundRangeMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2281,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2283,        marker.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2284,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2285,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2294,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2295,        if (this.backgroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2296,            Collection markers,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2298,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2299,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2300,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2301,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2302,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2303,                },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2304,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2307,        if (this.foregroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2308,            Collection markers,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2310,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2311,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2312,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2313,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2314,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2315,                },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2316,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2319,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2320,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2332,        if (annotation == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2333,"            throw new IllegalArgumentException(""Null 'annotation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2335,        this.annotations.add(annotation);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2336,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2337,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2351,        if (annotation == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2352,"            throw new IllegalArgumentException(""Null 'annotation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2354,        boolean removed = this.annotations.remove(annotation);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2355,        if (removed) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2356,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2358,        return removed;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2371,        return new ArrayList(this.annotations);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2381,        this.annotations.clear();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2382,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2383,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2395,        AxisSpace space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2396,"        space = calculateDomainAxisSpace(g2, plotArea, space);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2397,"        space = calculateRangeAxisSpace(g2, plotArea, space);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2398,        return space;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2414,        if (space == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2415,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2419,        if (this.fixedDomainAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2420,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2421,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getLeft(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2423,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getRight(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2426,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2427,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getTop(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2429,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getBottom(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2435,            for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2436,                Axis axis = (Axis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2437,                if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2438,                    RectangleEdge edge = getDomainAxisEdge(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2439,"                    space = axis.reserveSpace(g2, this, plotArea, edge, space);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2444,        return space;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2461,        if (space == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2462,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2466,        if (this.fixedRangeAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2467,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2468,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getTop(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2470,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getBottom(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2473,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2474,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getLeft(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2476,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getRight(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2482,            for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2483,                Axis axis = (Axis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2484,                if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2485,                    RectangleEdge edge = getRangeAxisEdge(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2486,"                    space = axis.reserveSpace(g2, this, plotArea, edge, space);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2490,        return space;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2513,        boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2514,        boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2515,        if (b1 || b2) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2516,            return;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2520,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2521,            info.setPlotArea(area);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2525,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2526,        insets.trim(area);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2528,"        AxisSpace space = calculateAxisSpace(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2529,"        Rectangle2D dataArea = space.shrink(area, null);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2530,        this.axisOffset.trim(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2532,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2533,            info.setDataArea(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2537,"        drawBackground(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2538,"        Map axisStateMap = drawAxes(g2, area, dataArea, info);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2540,        PlotOrientation orient = getOrientation();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2544,        if (anchor != null && !dataArea.contains(anchor)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2545,            anchor = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2547,        CrosshairState crosshairState = new CrosshairState();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2548,        crosshairState.setCrosshairDistance(Double.POSITIVE_INFINITY);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2549,        crosshairState.setAnchor(anchor);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2551,        crosshairState.setAnchorX(Double.NaN);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2552,        crosshairState.setAnchorY(Double.NaN);            ,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2553,        if (anchor != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2554,            ValueAxis domainAxis = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2555,            if (domainAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2557,                if (orient == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2558,"                    x = domainAxis.java2DToValue(anchor.getX(), dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2562,"                    x = domainAxis.java2DToValue(anchor.getY(), dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2565,                crosshairState.setAnchorX(x);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2567,            ValueAxis rangeAxis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2568,            if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2570,                if (orient == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2571,"                    y = rangeAxis.java2DToValue(anchor.getY(), dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2575,"                    y = rangeAxis.java2DToValue(anchor.getX(), dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2578,                crosshairState.setAnchorY(y);                ,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2581,        crosshairState.setCrosshairX(getDomainCrosshairValue());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2582,        crosshairState.setCrosshairY(getRangeCrosshairValue());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2583,        Shape originalClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2584,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2586,        g2.clip(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2587,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2590,        AxisState domainAxisState = (AxisState) axisStateMap.get(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2592,        if (domainAxisState == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2593,            if (parentState != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2594,                domainAxisState = (AxisState) parentState.getSharedAxisStates(),0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2599,        AxisState rangeAxisState = (AxisState) axisStateMap.get(getRangeAxis());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2600,        if (rangeAxisState == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2601,            if (parentState != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2602,                rangeAxisState = (AxisState) parentState.getSharedAxisStates(),0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2606,        if (domainAxisState != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2607,"            drawDomainTickBands(g2, dataArea, domainAxisState.getTicks());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2609,        if (rangeAxisState != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2610,"            drawRangeTickBands(g2, dataArea, rangeAxisState.getTicks());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2612,        if (domainAxisState != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2613,"            drawDomainGridlines(g2, dataArea, domainAxisState.getTicks());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2614,"            drawZeroDomainBaseline(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2616,        if (rangeAxisState != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2617,"            drawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2618,"            drawZeroRangeBaseline(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2622,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2623,"            drawDomainMarkers(g2, dataArea, i, Layer.BACKGROUND);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2625,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2626,"            drawRangeMarkers(g2, dataArea, i, Layer.BACKGROUND);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2630,        boolean foundData = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2631,        DatasetRenderingOrder order = getDatasetRenderingOrder();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2632,        if (order == DatasetRenderingOrder.FORWARD) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2635,            int rendererCount = this.renderers.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2636,            for (int i = 0; i < rendererCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2637,                XYItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2638,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2639,                    ValueAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2640,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2641,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2647,            for (int i = 0; i < getDatasetCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2648,"                foundData = render(g2, dataArea, i, info, crosshairState)",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2653,            for (int i = 0; i < rendererCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2654,                XYItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2655,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2656,                    ValueAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2657,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2658,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2663,        },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2664,        else if (order == DatasetRenderingOrder.REVERSE) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2667,            int rendererCount = this.renderers.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2668,            for (int i = rendererCount - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2669,                XYItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2670,                if (i >= getDatasetCount()) { // we need the dataset to make,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2671,                    continue;                 // a link to the axes,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2673,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2674,                    ValueAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2675,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2676,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2681,            for (int i = getDatasetCount() - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2682,"                foundData = render(g2, dataArea, i, info, crosshairState)",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2687,            for (int i = rendererCount - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2688,                XYItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2689,                if (i >= getDatasetCount()) { // we need the dataset to make,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2690,                    continue;                 // a link to the axes,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2692,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2693,                    ValueAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2694,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2695,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2703,        int xAxisIndex = crosshairState.getDomainAxisIndex();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2704,        ValueAxis xAxis = getDomainAxis(xAxisIndex);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2705,        RectangleEdge xAxisEdge = getDomainAxisEdge(xAxisIndex);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2706,        if (!this.domainCrosshairLockedOnData && anchor != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2708,            if (orient == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2709,"                xx = xAxis.java2DToValue(anchor.getX(), dataArea, xAxisEdge);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2712,"                xx = xAxis.java2DToValue(anchor.getY(), dataArea, xAxisEdge);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2714,            crosshairState.setCrosshairX(xx);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2716,"        setDomainCrosshairValue(crosshairState.getCrosshairX(), false);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2717,        if (isDomainCrosshairVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2718,            double x = getDomainCrosshairValue();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2719,            Paint paint = getDomainCrosshairPaint();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2720,            Stroke stroke = getDomainCrosshairStroke();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2721,"            drawDomainCrosshair(g2, dataArea, orient, x, xAxis, stroke, paint);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2725,        int yAxisIndex = crosshairState.getRangeAxisIndex();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2726,        ValueAxis yAxis = getRangeAxis(yAxisIndex);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2727,        RectangleEdge yAxisEdge = getRangeAxisEdge(yAxisIndex);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2728,        if (!this.rangeCrosshairLockedOnData && anchor != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2730,            if (orient == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2731,"                yy = yAxis.java2DToValue(anchor.getY(), dataArea, yAxisEdge);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2733,"                yy = yAxis.java2DToValue(anchor.getX(), dataArea, yAxisEdge);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2735,            crosshairState.setCrosshairY(yy);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2737,"        setRangeCrosshairValue(crosshairState.getCrosshairY(), false);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2738,        if (isRangeCrosshairVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2739,            double y = getRangeCrosshairValue();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2740,            Paint paint = getRangeCrosshairPaint();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2741,            Stroke stroke = getRangeCrosshairStroke();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2742,"            drawRangeCrosshair(g2, dataArea, orient, y, yAxis, stroke, paint);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2745,        if (!foundData) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2746,"            drawNoDataMessage(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2749,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2750,"            drawDomainMarkers(g2, dataArea, i, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2752,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2753,"            drawRangeMarkers(g2, dataArea, i, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2756,"        drawAnnotations(g2, dataArea, info);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2757,        g2.setClip(originalClip);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2758,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2760,"        drawOutline(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2762,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2771,"        fillBackground(g2, area, this.orientation);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2772,"        drawQuadrants(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2773,"        drawBackgroundImage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2774,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2789,        boolean somethingToDraw = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2791,        ValueAxis xAxis = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2792,        double x = this.quadrantOrigin.getX();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2793,"        double xx = xAxis.valueToJava2D(x, area, getDomainAxisEdge());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2795,        ValueAxis yAxis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2796,        double y = this.quadrantOrigin.getY();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2797,"        double yy = yAxis.valueToJava2D(y, area, getRangeAxisEdge());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2799,        double xmin = xAxis.getLowerBound();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2800,"        double xxmin = xAxis.valueToJava2D(xmin, area, getDomainAxisEdge());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2802,        double xmax = xAxis.getUpperBound();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2803,"        double xxmax = xAxis.valueToJava2D(xmax, area, getDomainAxisEdge());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2805,        double ymin = yAxis.getLowerBound();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2806,"        double yymin = yAxis.valueToJava2D(ymin, area, getRangeAxisEdge());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2808,        double ymax = yAxis.getUpperBound();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2809,"        double yymax = yAxis.valueToJava2D(ymax, area, getRangeAxisEdge());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2811,"        Rectangle2D[] r = new Rectangle2D[] {null, null, null, null};",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2812,        if (this.quadrantPaint[0] != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2813,            if (x > xmin && y < ymax) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2814,                if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2815,"                    r[0] = new Rectangle2D.Double(Math.min(yymax, yy), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2821,"                    r[0] = new Rectangle2D.Double(Math.min(xxmin, xx), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2825,                somethingToDraw = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2828,        if (this.quadrantPaint[1] != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2829,            if (x < xmax && y < ymax) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2830,                if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2831,"                    r[1] = new Rectangle2D.Double(Math.min(yymax, yy), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2836,"                    r[1] = new Rectangle2D.Double(Math.min(xx, xxmax), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2840,                somethingToDraw = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2843,        if (this.quadrantPaint[2] != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2844,            if (x > xmin && y > ymin) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2845,                if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2846,"                    r[2] = new Rectangle2D.Double(Math.min(yymin, yy), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2851,"                    r[2] = new Rectangle2D.Double(Math.min(xxmin, xx), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2855,                somethingToDraw = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2858,        if (this.quadrantPaint[3] != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2859,            if (x < xmax && y > ymin) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2860,                if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2861,"                    r[3] = new Rectangle2D.Double(Math.min(yymin, yy), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2866,"                    r[3] = new Rectangle2D.Double(Math.min(xx, xxmax), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2870,                somethingToDraw = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2873,        if (somethingToDraw) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2874,            Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2875,"            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2877,            for (int i = 0; i < 4; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2878,                if (this.quadrantPaint[i] != null && r[i] != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2879,                    g2.setPaint(this.quadrantPaint[i]);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2880,                    g2.fill(r[i]);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2883,            g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2885,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2899,        Paint bandPaint = getDomainTickBandPaint();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2900,        if (bandPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2901,            boolean fillBand = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2902,            ValueAxis xAxis = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2903,            double previous = xAxis.getLowerBound();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2904,            Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2905,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2906,                ValueTick tick = (ValueTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2907,                double current = tick.getValue();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2908,                if (fillBand) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2909,"                    getRenderer().fillDomainGridBand(g2, this, xAxis, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2912,                previous = current;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2913,                fillBand = !fillBand;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2914,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2915,            double end = xAxis.getUpperBound();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2916,            if (fillBand) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2917,"                getRenderer().fillDomainGridBand(g2, this, xAxis, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2921,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2936,        Paint bandPaint = getRangeTickBandPaint();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2937,        if (bandPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2938,            boolean fillBand = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2939,            ValueAxis axis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2940,            double previous = axis.getLowerBound();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2941,            Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2942,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2943,                ValueTick tick = (ValueTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2944,                double current = tick.getValue();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2945,                if (fillBand) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2946,"                    getRenderer().fillRangeGridBand(g2, this, axis, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2949,                previous = current;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2950,                fillBand = !fillBand;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2951,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2952,            double end = axis.getUpperBound();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2953,            if (fillBand) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2954,"                getRenderer().fillRangeGridBand(g2, this, axis, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2958,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2976,        AxisCollection axisCollection = new AxisCollection();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2979,        for (int index = 0; index < this.domainAxes.size(); index++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2980,            ValueAxis axis = (ValueAxis) this.domainAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2981,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2982,"                axisCollection.add(axis, getDomainAxisEdge(index));",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2987,        for (int index = 0; index < this.rangeAxes.size(); index++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2988,            ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2989,            if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2990,"                axisCollection.add(yAxis, getRangeAxisEdge(index));",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2994,        Map axisStateMap = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2997,        double cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,2999,        Iterator iterator = axisCollection.getAxesAtTop().iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3000,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3001,            ValueAxis axis = (ValueAxis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3002,"            AxisState info = axis.draw(g2, cursor, plotArea, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3004,            cursor = info.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3005,"            axisStateMap.put(axis, info);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3006,        },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3009,        cursor = dataArea.getMaxY(),0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3011,        iterator = axisCollection.getAxesAtBottom().iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3012,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3013,            ValueAxis axis = (ValueAxis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3014,"            AxisState info = axis.draw(g2, cursor, plotArea, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3016,            cursor = info.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3017,"            axisStateMap.put(axis, info);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3018,        },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3021,        cursor = dataArea.getMinX(),0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3023,        iterator = axisCollection.getAxesAtLeft().iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3024,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3025,            ValueAxis axis = (ValueAxis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3026,"            AxisState info = axis.draw(g2, cursor, plotArea, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3028,            cursor = info.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3029,"            axisStateMap.put(axis, info);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3030,        },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3033,        cursor = dataArea.getMaxX(),0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3035,        iterator = axisCollection.getAxesAtRight().iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3036,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3037,            ValueAxis axis = (ValueAxis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3038,"            AxisState info = axis.draw(g2, cursor, plotArea, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3040,            cursor = info.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3041,"            axisStateMap.put(axis, info);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3042,        },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3044,        return axisStateMap;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3069,        boolean foundData = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3070,        XYDataset dataset = getDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3071,        if (!DatasetUtilities.isEmptyOrNull(dataset)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3072,            foundData = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3073,            ValueAxis xAxis = getDomainAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3074,            ValueAxis yAxis = getRangeAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3075,            XYItemRenderer renderer = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3076,            if (renderer == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3077,                renderer = getRenderer();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3078,                if (renderer == null) { // no default renderer available,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3079,                    return foundData;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3083,"            XYItemRendererState state = renderer.initialise(g2, dataArea, this,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3085,            int passCount = renderer.getPassCount();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3087,            SeriesRenderingOrder seriesOrder = getSeriesRenderingOrder();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3088,            if (seriesOrder == SeriesRenderingOrder.REVERSE) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3090,                for (int pass = 0; pass < passCount; pass++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3091,                    int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3092,                    for (int series = seriesCount - 1; series >= 0; series--) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3093,                        int firstItem = 0;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3094,                        int lastItem = dataset.getItemCount(series) - 1;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3095,                        if (lastItem == -1) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3096,                            continue;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3098,                        if (state.getProcessVisibleItemsOnly()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3099,                            int[] itemBounds = RendererUtilities.findLiveItems(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3102,                            firstItem = itemBounds[0];,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3103,                            lastItem = itemBounds[1];,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3105,                        for (int item = firstItem; item <= lastItem; item++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3106,"                            renderer.drawItem(g2, state, dataArea, info,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3115,                for (int pass = 0; pass < passCount; pass++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3116,                    int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3117,                    for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3118,                        int firstItem = 0;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3119,                        int lastItem = dataset.getItemCount(series) - 1;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3120,                        if (state.getProcessVisibleItemsOnly()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3121,                            int[] itemBounds = RendererUtilities.findLiveItems(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3124,                            firstItem = itemBounds[0];,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3125,                            lastItem = itemBounds[1];,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3127,                        for (int item = firstItem; item <= lastItem; item++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3128,"                            renderer.drawItem(g2, state, dataArea, info,",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3136,        return foundData;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3148,        if (index < 0 || index >= getDatasetCount()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3149,"            throw new IllegalArgumentException(""Index 'index' out of bounds."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3152,        ValueAxis valueAxis = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3153,        Integer axisIndex = (Integer) this.datasetToDomainAxisMap.get(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3155,        if (axisIndex != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3156,            valueAxis = getDomainAxis(axisIndex.intValue());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3159,            valueAxis = getDomainAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3161,        return valueAxis;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3174,        if (index < 0 || index >= getDatasetCount()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3175,"            throw new IllegalArgumentException(""Index 'index' out of bounds."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3178,        ValueAxis valueAxis = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3179,        Integer axisIndex,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3181,        if (axisIndex != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3182,            valueAxis = getRangeAxis(axisIndex.intValue());,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3185,            valueAxis = getRangeAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3187,        return valueAxis;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3204,        if (getRenderer() == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3205,            return;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3209,        if (isDomainGridlinesVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3210,            Stroke gridStroke = getDomainGridlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3211,            Paint gridPaint = getDomainGridlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3212,            Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3213,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3214,                ValueTick tick = (ValueTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3215,"                getRenderer().drawDomainLine(g2, this, getDomainAxis(),",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3217,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3219,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3235,        if (getRenderer() == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3236,            return;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3240,        if (isRangeGridlinesVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3241,            Stroke gridStroke = getRangeGridlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3242,            Paint gridPaint = getRangeGridlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3243,            ValueAxis axis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3244,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3245,                Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3246,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3247,                    ValueTick tick = (ValueTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3248,                    if (tick.getValue() != 0.0,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3250,"                        getRenderer().drawRangeLine(g2, this, getRangeAxis(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3253,                },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3256,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3269,        if (isDomainZeroBaselineVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3270,            XYItemRenderer r = getRenderer();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3271,"            r.drawDomainLine(g2, this, getDomainAxis(), area, 0.0, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3275,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3286,        if (isRangeZeroBaselineVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3287,"            getRenderer().drawRangeLine(g2, this, getRangeAxis(), area, 0.0, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3290,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3303,        Iterator iterator = this.annotations.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3304,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3305,            XYAnnotation annotation = (XYAnnotation) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3306,            ValueAxis xAxis = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3307,            ValueAxis yAxis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3308,"            annotation.draw(g2, this, dataArea, xAxis, yAxis, 0, info);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3309,        },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3311,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3325,        XYItemRenderer r = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3326,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3327,            return;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3331,        if (index >= getDatasetCount()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3332,            return;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3334,"        Collection markers = getDomainMarkers(index, layer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3335,        ValueAxis axis = getDomainAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3336,        if (markers != null && axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3337,            Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3338,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3339,                Marker marker = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3340,"                r.drawDomainMarker(g2, this, axis, marker, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3341,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3344,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3358,        XYItemRenderer r = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3359,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3360,            return;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3364,        if (index >= getDatasetCount()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3365,            return;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3367,"        Collection markers = getRangeMarkers(index, layer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3368,        ValueAxis axis = getRangeAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3369,        if (markers != null && axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3370,            Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3371,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3372,                Marker marker = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3373,"                r.drawRangeMarker(g2, this, axis, marker, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3374,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3376,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3388,"        return getDomainMarkers(0, layer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3401,"        return getRangeMarkers(0, layer);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3416,        Collection result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3417,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3418,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3419,            result = (Collection) this.foregroundDomainMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3421,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3422,            result = (Collection) this.backgroundDomainMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3424,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3425,            result = Collections.unmodifiableCollection(result);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3427,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3442,        Collection result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3443,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3444,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3445,            result = (Collection) this.foregroundRangeMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3447,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3448,            result = (Collection) this.backgroundRangeMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3450,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3451,            result = Collections.unmodifiableCollection(result);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3453,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3470,        ValueAxis axis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3471,        if (getOrientation() == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3472,            axis = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3474,        if (axis.getRange().contains(value)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3475,"            double yy = axis.valueToJava2D(value, dataArea, RectangleEdge.LEFT);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3476,"            Line2D line = new Line2D.Double(dataArea.getMinX(), yy, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3478,            g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3479,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3480,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3483,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3502,        if (axis.getRange().contains(value)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3503,            Line2D line = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3504,            if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3505,"                double xx = axis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3507,"                line = new Line2D.Double(xx, dataArea.getMinY(), xx, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3509,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3511,"                double yy = axis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3513,"                line = new Line2D.Double(dataArea.getMinX(), yy, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3516,            g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3517,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3518,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3521,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3535,        ValueAxis axis = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3536,        if (getOrientation() == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3537,            axis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3539,        if (axis.getRange().contains(value)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3540,"            double xx = axis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3542,"            Line2D line = new Line2D.Double(xx, dataArea.getMinY(), xx, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3544,            g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3545,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3546,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3549,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3568,        if (axis.getRange().contains(value)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3569,            Line2D line = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3570,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3571,"                double xx = axis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3573,"                line = new Line2D.Double(xx, dataArea.getMinY(), xx, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3575,            },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3577,"                double yy = axis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3579,"                line = new Line2D.Double(dataArea.getMinX(), yy, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3582,            g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3583,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3584,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3587,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3598,        Rectangle2D dataArea = info.getDataArea();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3599,"        if (dataArea.contains(x, y)) {",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3601,            ValueAxis da = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3602,            if (da != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3603,"                double hvalue = da.java2DToValue(x, info.getDataArea(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3605,                setDomainCrosshairValue(hvalue);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3609,            ValueAxis ra = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3610,            if (ra != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3611,"                double vvalue = ra.java2DToValue(y, info.getDataArea(), ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3613,                setRangeCrosshairValue(vvalue);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3616,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3627,        if (axisIndex == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3628,"            throw new IllegalArgumentException(""Null 'axisIndex' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3630,        List result = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3631,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3632,            Integer mappedAxis = (Integer) this.datasetToDomainAxisMap.get(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3634,            if (mappedAxis == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3635,                if (axisIndex.equals(ZERO)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3636,                    result.add(this.datasets.get(i));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3640,                if (mappedAxis.equals(axisIndex)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3641,                    result.add(this.datasets.get(i));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3645,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3657,        if (axisIndex == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3658,"            throw new IllegalArgumentException(""Null 'axisIndex' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3660,        List result = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3661,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3662,            Integer mappedAxis = (Integer) this.datasetToRangeAxisMap.get(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3664,            if (mappedAxis == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3665,                if (axisIndex.equals(ZERO)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3666,                    result.add(this.datasets.get(i));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3670,                if (mappedAxis.equals(axisIndex)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3671,                    result.add(this.datasets.get(i));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3675,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3688,        int result = this.domainAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3689,        if (result < 0) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3691,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3692,            if (parent instanceof XYPlot) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3693,                XYPlot p = (XYPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3694,                result = p.getDomainAxisIndex(axis);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3697,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3710,        int result = this.rangeAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3711,        if (result < 0) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3713,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3714,            if (parent instanceof XYPlot) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3715,                XYPlot p = (XYPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3716,                result = p.getRangeAxisIndex(axis);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3719,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3731,        Range result = null;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3732,        List mappedDatasets = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3733,        boolean isDomainAxis = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3736,        int domainIndex = getDomainAxisIndex(axis);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3737,        if (domainIndex >= 0) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3738,            isDomainAxis = true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3739,            mappedDatasets.addAll(getDatasetsMappedToDomainAxis(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3744,        int rangeIndex = getRangeAxisIndex(axis);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3745,        if (rangeIndex >= 0) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3746,            isDomainAxis = false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3747,            mappedDatasets.addAll(getDatasetsMappedToRangeAxis(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3753,        Iterator iterator = mappedDatasets.iterator();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3754,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3755,            XYDataset d = (XYDataset) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3756,            if (d != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3757,                XYItemRenderer r = getRendererForDataset(d);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3758,                if (isDomainAxis) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3759,                    if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3760,"                        result = Range.combine(result, r.findDomainBounds(d));",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3763,"                        result = Range.combine(result, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3768,                    if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3769,"                        result = Range.combine(result, r.findRangeBounds(d));",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3772,"                        result = Range.combine(result, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3777,        },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3778,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3790,        configureDomainAxes();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3791,        configureRangeAxes();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3792,        if (getParent() != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3793,            getParent().datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3796,            PlotChangeEvent e = new PlotChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3797,            e.setType(ChartChangeEventType.DATASET_UPDATED);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3798,            notifyListeners(e);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3800,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3808,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3809,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3819,        return this.domainCrosshairVisible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3832,        if (this.domainCrosshairVisible != flag) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3833,            this.domainCrosshairVisible = flag;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3834,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3836,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3847,        return this.domainCrosshairLockedOnData;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3860,        if (this.domainCrosshairLockedOnData != flag) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3861,            this.domainCrosshairLockedOnData = flag;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3862,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3864,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3874,        return this.domainCrosshairValue;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3886,"        setDomainCrosshairValue(value, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3887,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3900,        this.domainCrosshairValue = value;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3901,        if (isDomainCrosshairVisible() && notify) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3902,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3904,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3916,        return this.domainCrosshairStroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3929,        if (stroke == null) { ,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3930,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3932,        this.domainCrosshairStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3933,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3934,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3946,        return this.domainCrosshairPaint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3958,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3959,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3961,        this.domainCrosshairPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3962,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3963,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3974,        return this.rangeCrosshairVisible;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3987,        if (this.rangeCrosshairVisible != flag) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3988,            this.rangeCrosshairVisible = flag;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3989,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,3991,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4002,        return this.rangeCrosshairLockedOnData;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4015,        if (this.rangeCrosshairLockedOnData != flag) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4016,            this.rangeCrosshairLockedOnData = flag;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4017,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4019,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4029,        return this.rangeCrosshairValue;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4043,"        setRangeCrosshairValue(value, true);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4044,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4057,        this.rangeCrosshairValue = value;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4058,        if (isRangeCrosshairVisible() && notify) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4059,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4061,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4073,        return this.rangeCrosshairStroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4086,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4087,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4089,        this.rangeCrosshairStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4090,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4091,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4103,        return this.rangeCrosshairPaint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4115,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4116,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4118,        this.rangeCrosshairPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4119,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4120,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4130,        return this.fixedDomainAxisSpace;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4142,        this.fixedDomainAxisSpace = space;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4143,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4144,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4154,        return this.fixedRangeAxisSpace;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4166,        this.fixedRangeAxisSpace = space;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4167,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4168,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4179,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4180,            ValueAxis domainAxis = (ValueAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4181,            if (domainAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4182,                domainAxis.resizeRange(factor);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4185,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4201,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4202,            ValueAxis domainAxis = (ValueAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4203,            if (domainAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4204,"                domainAxis.zoomRange(lowerPercent, upperPercent);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4207,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4218,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4219,            ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4220,            if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4221,                rangeAxis.resizeRange(factor);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4224,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4236,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4237,            ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4238,            if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4239,"                rangeAxis.zoomRange(lowerPercent, upperPercent);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4242,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4253,        return true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4265,        return true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4275,        int result = 0;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4276,        XYDataset dataset = getDataset();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4277,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4278,            result = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4280,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4291,        return this.fixedLegendItems;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4304,        this.fixedLegendItems = items;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4305,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4306,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4316,        if (this.fixedLegendItems != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4317,            return this.fixedLegendItems;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4319,        LegendItemCollection result = new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4320,        int count = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4321,        for (int datasetIndex = 0; datasetIndex < count; datasetIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4322,            XYDataset dataset = getDataset(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4323,            if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4324,                XYItemRenderer renderer = getRenderer(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4325,                if (renderer == null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4326,                    renderer = getRenderer(0);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4328,                if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4329,                    int seriesCount = dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4330,                    for (int i = 0; i < seriesCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4331,                        if (renderer.isSeriesVisible(i),0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4333,                            LegendItem item = renderer.getLegendItem(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4335,                            if (item != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4336,                                result.add(item);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4343,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4355,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4356,            return true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4358,        if (!(obj instanceof XYPlot)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4359,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4361,        if (!super.equals(obj))  {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4362,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4365,        XYPlot that = (XYPlot) obj;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4366,        if (this.weight != that.weight) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4367,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4369,        if (this.orientation != that.orientation) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4370,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4372,        if (!this.domainAxes.equals(that.domainAxes)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4373,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4375,        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4376,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4378,        if (this.rangeCrosshairLockedOnData,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4380,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4382,        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4383,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4385,        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4386,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4388,        if (this.domainZeroBaselineVisible != that.domainZeroBaselineVisible) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4389,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4391,        if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4392,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4394,        if (this.domainCrosshairVisible != that.domainCrosshairVisible) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4395,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4397,        if (this.domainCrosshairValue != that.domainCrosshairValue) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4398,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4400,        if (this.domainCrosshairLockedOnData,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4402,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4404,        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4405,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4407,        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4408,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4410,"        if (!ObjectUtilities.equal(this.axisOffset, that.axisOffset)) {",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4411,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4413,"        if (!ObjectUtilities.equal(this.renderers, that.renderers)) {",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4414,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4416,"        if (!ObjectUtilities.equal(this.rangeAxes, that.rangeAxes)) {",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4417,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4419,        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4420,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4422,"        if (!ObjectUtilities.equal(this.datasetToDomainAxisMap, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4424,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4426,"        if (!ObjectUtilities.equal(this.datasetToRangeAxisMap, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4428,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4430,"        if (!ObjectUtilities.equal(this.domainGridlineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4432,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4434,"        if (!PaintUtilities.equal(this.domainGridlinePaint, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4436,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4438,"        if (!ObjectUtilities.equal(this.rangeGridlineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4440,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4442,"        if (!PaintUtilities.equal(this.rangeGridlinePaint, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4444,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4446,"        if (!PaintUtilities.equal(this.domainZeroBaselinePaint, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4448,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4450,"        if (!ObjectUtilities.equal(this.domainZeroBaselineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4452,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4454,"        if (!PaintUtilities.equal(this.rangeZeroBaselinePaint, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4456,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4458,"        if (!ObjectUtilities.equal(this.rangeZeroBaselineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4460,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4462,"        if (!ObjectUtilities.equal(this.domainCrosshairStroke, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4464,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4466,"        if (!PaintUtilities.equal(this.domainCrosshairPaint, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4468,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4470,"        if (!ObjectUtilities.equal(this.rangeCrosshairStroke, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4472,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4474,"        if (!PaintUtilities.equal(this.rangeCrosshairPaint, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4476,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4478,"        if (!ObjectUtilities.equal(this.foregroundDomainMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4480,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4482,"        if (!ObjectUtilities.equal(this.backgroundDomainMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4484,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4486,"        if (!ObjectUtilities.equal(this.foregroundRangeMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4488,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4490,"        if (!ObjectUtilities.equal(this.backgroundRangeMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4492,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4494,"        if (!ObjectUtilities.equal(this.foregroundDomainMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4496,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4498,"        if (!ObjectUtilities.equal(this.backgroundDomainMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4500,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4502,"        if (!ObjectUtilities.equal(this.foregroundRangeMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4504,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4506,"        if (!ObjectUtilities.equal(this.backgroundRangeMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4508,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4510,"        if (!ObjectUtilities.equal(this.annotations, that.annotations)) {",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4511,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4513,        if (!this.quadrantOrigin.equals(that.quadrantOrigin)) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4514,            return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4516,        for (int i = 0; i < 4; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4517,"            if (!PaintUtilities.equal(this.quadrantPaint[i], ",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4519,                return false;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4522,        return true;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4535,        XYPlot clone = (XYPlot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4536,        clone.domainAxes = (ObjectList) ObjectUtilities.clone(this.domainAxes);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4537,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4538,            ValueAxis axis = (ValueAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4539,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4540,                ValueAxis clonedAxis = (ValueAxis) axis.clone();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4541,"                clone.domainAxes.set(i, clonedAxis);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4542,                clonedAxis.setPlot(clone);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4543,                clonedAxis.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4546,        clone.domainAxisLocations,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4549,        clone.rangeAxes = (ObjectList) ObjectUtilities.clone(this.rangeAxes);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4550,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4551,            ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4552,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4553,                ValueAxis clonedAxis = (ValueAxis) axis.clone();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4554,"                clone.rangeAxes.set(i, clonedAxis);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4555,                clonedAxis.setPlot(clone);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4556,                clonedAxis.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4559,        clone.rangeAxisLocations,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4563,        clone.datasets = (ObjectList) ObjectUtilities.clone(this.datasets);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4564,        for (int i = 0; i < clone.datasets.size(); ++i) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4565,            XYDataset d = getDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4566,            if (d != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4567,                d.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4571,        clone.datasetToDomainAxisMap = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4572,        clone.datasetToDomainAxisMap.putAll(this.datasetToDomainAxisMap);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4573,        clone.datasetToRangeAxisMap = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4574,        clone.datasetToRangeAxisMap.putAll(this.datasetToRangeAxisMap);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4576,        clone.renderers = (ObjectList) ObjectUtilities.clone(this.renderers);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4577,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4578,            XYItemRenderer renderer2 = (XYItemRenderer) this.renderers.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4579,            if (renderer2 instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4580,                PublicCloneable pc = (PublicCloneable) renderer2;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4581,"                clone.renderers.set(i, pc.clone());",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4584,        clone.foregroundDomainMarkers = (Map) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4586,        clone.backgroundDomainMarkers = (Map) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4588,        clone.foregroundRangeMarkers = (Map) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4590,        clone.backgroundRangeMarkers = (Map) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4592,        clone.annotations = (List) ObjectUtilities.deepClone(this.annotations);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4593,        if (this.fixedDomainAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4594,            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4597,        if (this.fixedRangeAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4598,            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4602,        clone.quadrantOrigin = (Point2D) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4604,        clone.quadrantPaint = (Paint[]) this.quadrantPaint.clone();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4605,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4617,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4618,"        SerialUtilities.writeStroke(this.domainGridlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4619,"        SerialUtilities.writePaint(this.domainGridlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4620,"        SerialUtilities.writeStroke(this.rangeGridlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4621,"        SerialUtilities.writePaint(this.rangeGridlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4622,"        SerialUtilities.writeStroke(this.rangeZeroBaselineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4623,"        SerialUtilities.writePaint(this.rangeZeroBaselinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4624,"        SerialUtilities.writeStroke(this.domainCrosshairStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4625,"        SerialUtilities.writePaint(this.domainCrosshairPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4626,"        SerialUtilities.writeStroke(this.rangeCrosshairStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4627,"        SerialUtilities.writePaint(this.rangeCrosshairPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4628,"        SerialUtilities.writePaint(this.domainTickBandPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4629,"        SerialUtilities.writePaint(this.rangeTickBandPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4630,"        SerialUtilities.writePoint2D(this.quadrantOrigin, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4631,        for (int i = 0; i < 4; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4632,"            SerialUtilities.writePaint(this.quadrantPaint[i], stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4634,"        SerialUtilities.writeStroke(this.domainZeroBaselineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4635,"        SerialUtilities.writePaint(this.domainZeroBaselinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4636,    },0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4649,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4650,        this.domainGridlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4651,        this.domainGridlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4652,        this.rangeGridlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4653,        this.rangeGridlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4654,        this.rangeZeroBaselineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4655,        this.rangeZeroBaselinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4656,        this.domainCrosshairStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4657,        this.domainCrosshairPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4658,        this.rangeCrosshairStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4659,        this.rangeCrosshairPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4660,        this.domainTickBandPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4661,        this.rangeTickBandPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4662,        this.quadrantOrigin = SerialUtilities.readPoint2D(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4663,        this.quadrantPaint = new Paint[4];,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4664,        for (int i = 0; i < 4; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4665,            this.quadrantPaint[i] = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4668,        this.domainZeroBaselineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4669,        this.domainZeroBaselinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4673,        int domainAxisCount = this.domainAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4674,        for (int i = 0; i < domainAxisCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4675,            Axis axis = (Axis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4676,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4677,                axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4678,                axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4681,        int rangeAxisCount = this.rangeAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4682,        for (int i = 0; i < rangeAxisCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4683,            Axis axis = (Axis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4684,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4685,                axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4686,                axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4689,        int datasetCount = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4690,        for (int i = 0; i < datasetCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4691,            Dataset dataset = (Dataset) this.datasets.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4692,            if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4693,                dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4696,        int rendererCount = this.renderers.size();,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4697,        for (int i = 0; i < rendererCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4698,            XYItemRenderer renderer = (XYItemRenderer) this.renderers.get(i);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4699,            if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4700,                renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/XYPlot,26,4704,    },0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,105,        this(new StandardEntityCollection());,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,106,    },0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,116,    public ChartRenderingInfo(EntityCollection entities) {,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,117,        this.chartArea = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,118,        this.plotInfo = new PlotRenderingInfo(this);,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,119,        this.entities = entities;,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,120,    },0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,130,        return this.chartArea;,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,141,        this.chartArea.setRect(area);,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,142,    },0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,152,        return this.entities;,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,163,        this.entities = entities;,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,164,    },0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,170,"        this.chartArea.setRect(0.0, 0.0, 0.0, 0.0);",0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,171,        this.plotInfo = new PlotRenderingInfo(this);,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,172,        if (this.entities != null) {,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,173,            this.entities.clear();,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,175,    },0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,183,        return this.plotInfo;,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,194,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,195,            return true;   ,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,197,        if (!(obj instanceof ChartRenderingInfo)) {,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,198,            return false;,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,200,        ChartRenderingInfo that = (ChartRenderingInfo) obj;,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,201,"        if (!ObjectUtilities.equal(this.chartArea, that.chartArea)) {",0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,202,            return false;   ,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,204,"        if (!ObjectUtilities.equal(this.plotInfo, that.plotInfo)) {",0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,205,            return false;,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,207,"        if (!ObjectUtilities.equal(this.entities, that.entities)) {",0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,208,            return false;,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,210,        return true;,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,221,        ChartRenderingInfo clone = (ChartRenderingInfo) super.clone();,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,222,        if (this.chartArea != null) {,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,223,            clone.chartArea = (Rectangle2D) this.chartArea.clone();,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,225,        if (this.entities instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,226,            PublicCloneable pc = (PublicCloneable) this.entities;,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,227,            clone.entities = (EntityCollection) pc.clone();,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,229,        return clone;,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,240,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,241,"        SerialUtilities.writeShape(this.chartArea, stream);",0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,242,    },0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,254,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,255,        this.chartArea = (Rectangle2D) SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/ChartRenderingInfo,26,256,    },0.0,0,-1,0
org/jfree/chart/util/ShapeList,26,92,        return super.clone();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,26,105,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeList,26,109,            return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeList,26,116,        return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeList,26,126,        return super.hashCode();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,26,142,            Shape shape = getShape(i);,0.0,0,-1,0
org/jfree/chart/util/ShapeList,26,143,            if (shape != null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,26,144,                stream.writeInt(i);,0.0,0,-1,0
org/jfree/chart/util/ShapeList,26,145,"                SerialUtilities.writeShape(shape, stream);",0.0,0,-1,0
org/jfree/chart/util/ShapeList,26,148,                stream.writeInt(-1);,0.0,0,-1,0
org/jfree/chart/util/ShapeList,26,168,            int index = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,26,169,            if (index != -1) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,26,170,"                setShape(index, SerialUtilities.readShape(stream));",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,124,"            throw new IllegalArgumentException(""Requires index >= 0."");",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,127,            Object[] enlarged = new Object[index + this.increment];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,128,"            System.arraycopy(this.objects, 0, enlarged, 0, this.objects.length);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,129,            this.objects = enlarged;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,139,"        Arrays.fill(this.objects, null);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,140,        this.size = 0;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,141,    },0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,166,        return -1;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,179,            return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,183,            return true;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,187,            return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,194,               return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,206,        return super.hashCode();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,220,        AbstractObjectList clone = (AbstractObjectList) super.clone();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,221,        if (this.objects != null) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,222,            clone.objects = new Object[this.objects.length];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,223,"            System.arraycopy(this.objects, 0, clone.objects, 0, ",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,226,        return clone;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,26,250,                stream.writeInt(-1);,0.0,0,-1,0
org/jfree/chart/util/PaintList,26,95,            return false;,0.0,0,-1,0
org/jfree/chart/util/PaintList,26,98,            return true;,0.0,0,-1,0
org/jfree/chart/util/PaintList,26,104,"               if (!PaintUtilities.equal(getPaint(i), that.getPaint(i))) {",0.0,0,-1,0
org/jfree/chart/util/PaintList,26,105,                   return false;,0.0,0,-1,0
org/jfree/chart/util/PaintList,26,118,        return super.hashCode();,0.0,0,-1,0
org/jfree/chart/util/PaintList,26,134,            Paint paint = getPaint(i);,0.0,0,-1,0
org/jfree/chart/util/PaintList,26,135,            if (paint != null) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,26,136,                stream.writeInt(i);,0.0,0,-1,0
org/jfree/chart/util/PaintList,26,137,"                SerialUtilities.writePaint(paint, stream);",0.0,0,-1,0
org/jfree/chart/util/PaintList,26,140,                stream.writeInt(-1);,0.0,0,-1,0
org/jfree/chart/util/PaintList,26,160,            final int index = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/PaintList,26,161,            if (index != -1) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,26,162,"                setPaint(index, SerialUtilities.readPaint(stream));",0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,88,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,104,            return false;,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,119,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,131,            return LengthAdjustmentType.NO_CHANGE;,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,134,            return LengthAdjustmentType.EXPAND;,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,26,139,        return null;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,81,"            throw new IllegalArgumentException(""Null 'type' argument."");",0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,92,        return this.type;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,106,        GradientPaint result = paint;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,107,        Rectangle2D bounds = target.getBounds2D();,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,109,        if (this.type.equals(GradientPaintTransformType.VERTICAL)) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,110,"            result = new GradientPaint((float) bounds.getCenterX(), ",0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,115,        else if (this.type.equals(GradientPaintTransformType.HORIZONTAL)) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,116,"            result = new GradientPaint((float) bounds.getMinX(), ",0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,121,        else if (this.type.equals(,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,123,"            result = new GradientPaint((float) bounds.getCenterX(), ",0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,128,        else if (this.type.equals(GradientPaintTransformType.CENTER_VERTICAL)) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,129,"            result = new GradientPaint((float) bounds.getCenterX(), ",0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,135,        return result;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,147,            return true;   ,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,150,            return false;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,155,            return false;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,170,        return super.clone();,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,26,179,        return (this.type != null ? this.type.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,94,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,108,            return true;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,111,            return false;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,128,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,141,            result = GradientPaintTransformType.HORIZONTAL;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,146,        else if (this.equals(GradientPaintTransformType.CENTER_HORIZONTAL)) {,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,147,            result = GradientPaintTransformType.CENTER_HORIZONTAL;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,149,        else if (this.equals(GradientPaintTransformType.CENTER_VERTICAL)) {,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,26,150,            result = GradientPaintTransformType.CENTER_VERTICAL;,0.0,0,-1,0
org/jfree/chart/util/Size2D,26,78,        this.width = width;,0.0,0,-1,0
org/jfree/chart/util/Size2D,26,79,    },0.0,0,-1,0
org/jfree/chart/util/Size2D,26,96,        this.height = height;,0.0,0,-1,0
org/jfree/chart/util/Size2D,26,97,    },0.0,0,-1,0
org/jfree/chart/util/Size2D,26,106,"        return ""Size2D[width="" + this.width + "", height="" + this.height + ""]"";   ",0.0,0,-1,0
org/jfree/chart/util/Size2D,26,117,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/Size2D,26,118,            return true;,0.0,0,-1,0
org/jfree/chart/util/Size2D,26,120,        if (!(obj instanceof Size2D)) {,0.0,0,-1,0
org/jfree/chart/util/Size2D,26,121,            return false;,0.0,0,-1,0
org/jfree/chart/util/Size2D,26,123,        final Size2D that = (Size2D) obj;,0.0,0,-1,0
org/jfree/chart/util/Size2D,26,124,        if (this.width != that.width) {,0.0,0,-1,0
org/jfree/chart/util/Size2D,26,125,            return false;,0.0,0,-1,0
org/jfree/chart/util/Size2D,26,127,        if (this.height != that.height) {,0.0,0,-1,0
org/jfree/chart/util/Size2D,26,128,            return false;,0.0,0,-1,0
org/jfree/chart/util/Size2D,26,130,        return true;,0.0,0,-1,0
org/jfree/chart/util/Size2D,26,141,        return super.clone();,0.0,0,-1,0
org/jfree/chart/util/UnitType,26,81,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/UnitType,26,94,            return true;,0.0,0,-1,0
org/jfree/chart/util/UnitType,26,97,            return false;,0.0,0,-1,0
org/jfree/chart/util/UnitType,26,101,            return false;,0.0,0,-1,0
org/jfree/chart/util/UnitType,26,112,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/UnitType,26,126,        else if (this.equals(UnitType.RELATIVE)) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,26,127,            return UnitType.RELATIVE;,0.0,0,-1,0
org/jfree/chart/util/UnitType,26,129,        return null;,0.0,0,-1,0
org/jfree/chart/util/Layer,26,56,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/Layer,26,69,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/Layer,26,70,            return true;,0.0,0,-1,0
org/jfree/chart/util/Layer,26,72,        if (!(obj instanceof Layer)) {,0.0,0,-1,0
org/jfree/chart/util/Layer,26,73,            return false;,0.0,0,-1,0
org/jfree/chart/util/Layer,26,76,        Layer layer = (Layer) obj;,0.0,0,-1,0
org/jfree/chart/util/Layer,26,77,        if (!this.name.equals(layer.name)) {,0.0,0,-1,0
org/jfree/chart/util/Layer,26,78,            return false;,0.0,0,-1,0
org/jfree/chart/util/Layer,26,81,        return true;,0.0,0,-1,0
org/jfree/chart/util/Layer,26,91,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/Layer,26,102,        Layer result = null;,0.0,0,-1,0
org/jfree/chart/util/Layer,26,103,        if (this.equals(Layer.FOREGROUND)) {,0.0,0,-1,0
org/jfree/chart/util/Layer,26,104,            result = Layer.FOREGROUND;,0.0,0,-1,0
org/jfree/chart/util/Layer,26,106,        else if (this.equals(Layer.BACKGROUND)) {,0.0,0,-1,0
org/jfree/chart/util/Layer,26,107,            result = Layer.BACKGROUND;,0.0,0,-1,0
org/jfree/chart/util/Layer,26,109,        return result;,0.0,0,-1,0
org/jfree/chart/util/StrokeList,26,82,"        set(index, stroke);",0.0,0,-1,0
org/jfree/chart/util/StrokeList,26,83,    },0.0,0,-1,0
org/jfree/chart/util/StrokeList,26,93,        return super.clone();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,26,106,            return false;,0.0,0,-1,0
org/jfree/chart/util/StrokeList,26,110,            return true;,0.0,0,-1,0
org/jfree/chart/util/StrokeList,26,117,        return false;,0.0,0,-1,0
org/jfree/chart/util/StrokeList,26,127,        return super.hashCode();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,26,143,            Stroke stroke = getStroke(i);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,26,144,            if (stroke != null) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,26,145,                stream.writeInt(i);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,26,146,"                SerialUtilities.writeStroke(stroke, stream);",0.0,0,-1,0
org/jfree/chart/util/StrokeList,26,149,                stream.writeInt(-1);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,26,169,            int index = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,26,170,            if (index != -1) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,26,171,"                setStroke(index, SerialUtilities.readStroke(stream));",0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,88,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,101,            return true;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,104,            return false;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,119,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,132,            result = HorizontalAlignment.LEFT;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,26,135,            result = HorizontalAlignment.RIGHT;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,88,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,101,            return true;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,104,            return false;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,120,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,132,            return VerticalAlignment.TOP;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,135,            return VerticalAlignment.BOTTOM;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,26,141,            return null;  // this should never happen,0.0,0,-1,0
org/jfree/chart/util/BooleanList,26,84,"        set(index, b);",0.0,0,-1,0
org/jfree/chart/util/BooleanList,26,85,    },0.0,0,-1,0
org/jfree/chart/util/BooleanList,26,98,        return false;,0.0,0,-1,0
org/jfree/chart/util/BooleanList,26,107,        return super.hashCode();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,85,    private ShapeUtilities() {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,86,    },0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,105,        if (shape instanceof Cloneable) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,107,                return (Shape) ObjectUtilities.clone(shape);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,109,            catch (CloneNotSupportedException cnse) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,112,        Shape result = null;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,113,        return result;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,131,"            return equal((Line2D) s1, (Line2D) s2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,137,"            return equal((Arc2D) s1, (Arc2D) s2);   ",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,143,"            return equal((GeneralPath) s1, (GeneralPath) s2);   ",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,161,        if (l1 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,162,            return (l2 == null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,164,        if (l2 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,165,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,167,        if (!l1.getP1().equals(l2.getP1())) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,168,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,170,        if (!l1.getP2().equals(l2.getP2())) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,171,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,173,        return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,187,            return (e2 == null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,190,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,193,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,208,        if (a1 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,209,            return (a2 == null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,211,        if (a2 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,212,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,214,        if (!a1.getFrame().equals(a2.getFrame())) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,215,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,217,        if (a1.getAngleStart() != a2.getAngleStart()) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,218,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,220,        if (a1.getAngleExtent() != a2.getAngleExtent()) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,221,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,223,        if (a1.getArcType() != a2.getArcType()) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,224,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,226,        return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,240,            return (p2 == null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,243,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,246,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,249,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,252,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,267,        if (p1 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,268,            return (p2 == null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,270,        if (p2 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,271,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,273,        if (p1.getWindingRule() != p2.getWindingRule()) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,274,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,276,        PathIterator iterator1 = p1.getPathIterator(null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,277,        PathIterator iterator2 = p1.getPathIterator(null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,278,        double[] d1 = new double[6];,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,279,        double[] d2 = new double[6];,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,280,        boolean done = iterator1.isDone() && iterator2.isDone();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,281,        while (!done) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,282,            if (iterator1.isDone() != iterator2.isDone()) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,283,                return false;   ,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,285,            int seg1 = iterator1.currentSegment(d1);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,286,            int seg2 = iterator2.currentSegment(d2);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,287,            if (seg1 != seg2) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,288,                return false;   ,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,290,"            if (!Arrays.equals(d1, d2)) {",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,291,                return false;   ,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,293,            iterator1.next();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,294,            iterator2.next();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,295,            done = iterator1.isDone() && iterator2.isDone();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,296,        },0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,297,        return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,312,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,313,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,315,        AffineTransform transform = AffineTransform.getTranslateInstance(,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,317,        return transform.createTransformedShape(shape);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,337,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,340,"            throw new IllegalArgumentException(""Null 'anchor' argument."");",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,363,            return null;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,382,        AffineTransform saved = g2.getTransform();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,383,"        AffineTransform rotate = AffineTransform.getRotateInstance(angle, x, y);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,384,        g2.transform(rotate);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,385,        g2.draw(shape);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,386,        g2.setTransform(saved);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,388,    },0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,402,        GeneralPath p0 = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,403,"        p0.moveTo(-l - t, -l + t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,404,"        p0.lineTo(-l + t, -l - t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,405,"        p0.lineTo(0.0f, -t * SQRT2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,406,"        p0.lineTo(l - t, -l - t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,407,"        p0.lineTo(l + t, -l + t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,408,"        p0.lineTo(t * SQRT2, 0.0f);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,409,"        p0.lineTo(l + t, l - t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,410,"        p0.lineTo(l - t, l + t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,411,"        p0.lineTo(0.0f, t * SQRT2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,412,"        p0.lineTo(-l + t, l + t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,413,"        p0.lineTo(-l - t, l - t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,414,"        p0.lineTo(-t * SQRT2, 0.0f);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,415,        p0.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,416,        return p0;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,428,        GeneralPath p0 = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,429,"        p0.moveTo(-l, t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,430,"        p0.lineTo(-t, t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,431,"        p0.lineTo(-t, l);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,432,"        p0.lineTo(t, l);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,433,"        p0.lineTo(t, t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,434,"        p0.lineTo(l, t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,435,"        p0.lineTo(l, -t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,436,"        p0.lineTo(t, -t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,437,"        p0.lineTo(t, -l);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,438,"        p0.lineTo(-t, -l);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,439,"        p0.lineTo(-t, -t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,440,"        p0.lineTo(-l, -t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,441,        p0.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,442,        return p0;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,453,        GeneralPath p0 = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,454,"        p0.moveTo(0.0f, -s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,455,"        p0.lineTo(s, 0.0f);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,456,"        p0.lineTo(0.0f, s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,457,"        p0.lineTo(-s, 0.0f);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,458,        p0.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,459,        return p0;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,470,        GeneralPath p0 = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,471,"        p0.moveTo(0.0f, -s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,472,"        p0.lineTo(s, s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,473,"        p0.lineTo(-s, s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,474,        p0.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,475,        return p0;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,486,        GeneralPath p0 = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,487,"        p0.moveTo(0.0f, s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,488,"        p0.lineTo(s, -s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,489,"        p0.lineTo(-s, -s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,490,        p0.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,491,        return p0;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,505,        GeneralPath result = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,506,        float x1 = (float) line.getX1();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,507,        float x2 = (float) line.getX2();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,508,        float y1 = (float) line.getY1();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,509,        float y2 = (float) line.getY2();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,510,        if ((x2 - x1) != 0.0) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,511,            double theta = Math.atan((y2 - y1) / (x2 - x1));,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,512,            float dx = (float) Math.sin(theta) * width;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,513,            float dy = (float) Math.cos(theta) * width;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,514,"            result.moveTo(x1 - dx, y1 + dy);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,515,"            result.lineTo(x1 + dx, y1 - dy);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,516,"            result.lineTo(x2 + dx, y2 - dy);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,517,"            result.lineTo(x2 - dx, y2 + dy);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,518,            result.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,519,        },0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,522,"            result.moveTo(x1 - width / 2.0f, y1);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,523,"            result.lineTo(x1 + width / 2.0f, y1);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,524,"            result.lineTo(x2 + width / 2.0f, y2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,525,"            result.lineTo(x2 - width / 2.0f, y2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,526,            result.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,528,        return result;    ,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,547,"        x = Math.max(area.getMinX(), Math.min(x, area.getMaxX()));",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,548,"        y = Math.max(area.getMinY(), Math.min(y, area.getMaxY()));",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,549,"        return new Point2D.Double(x, y);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,564,        double x0 = rect1.getX();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,565,        double y0 = rect1.getY();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,566,        double x = rect2.getX();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,567,        double y = rect2.getY();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,568,        double w = rect2.getWidth();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,569,        double h = rect2.getHeight();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,571,        return ((x >= x0) && (y >= y0) ,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,589,      double x0 = rect1.getX();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,590,      double y0 = rect1.getY();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,592,      double x = rect2.getX();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,593,      double width = rect2.getWidth();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,594,      double y = rect2.getY();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,595,      double height = rect2.getHeight();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,26,596,      return (x + width >= x0 && y + height >= y0 && x <= x0 + rect1.getWidth(),0.0,0,-1,0
org/jfree/chart/util/ObjectList,26,69,        super(initialCapacity);,0.0,0,-1,0
org/jfree/chart/util/ObjectList,26,70,    },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,91,    private ObjectUtilities() {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,92,    },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,101,        return classLoaderSource;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,115,        ObjectUtilities.classLoaderSource = classLoaderSource;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,116,    },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,134,            return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,147,        int result = 0;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,148,        if (object != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,149,            result = object.hashCode();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,151,        return result;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,164,        if (object == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,165,"            throw new IllegalArgumentException(""Null 'object' argument."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,167,        if (object instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,168,            final PublicCloneable pc = (PublicCloneable) object;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,169,            return pc.clone();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,173,"                final Method method = object.getClass().getMethod(""clone"",",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,175,                if (Modifier.isPublic(method.getModifiers())) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,176,"                    return method.invoke(object, (Object[]) null);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,187,            },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,179,            catch (NoSuchMethodException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,180,                e.printStackTrace();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,182,            catch (IllegalAccessException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,183,                e.printStackTrace();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,185,            catch (InvocationTargetException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,186,                e.printStackTrace();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,189,"        throw new CloneNotSupportedException(""Failed to clone."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,205,        if (collection == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,206,"            throw new IllegalArgumentException(""Null 'collection' argument."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,211,        final Collection result,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,213,        result.clear();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,214,        final Iterator iterator = collection.iterator();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,215,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,216,            final Object item = iterator.next();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,217,            if (item != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,218,                result.add(clone(item));,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,221,                result.add(null);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,223,        },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,224,        return result;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,234,        ObjectUtilities.classLoader = classLoader;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,235,    },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,243,      return classLoader;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,258,            return classLoader;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,269,        final ClassLoader applicationCL = c.getClassLoader();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,270,        if (applicationCL == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,271,            return ClassLoader.getSystemClassLoader();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,274,            return applicationCL;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,287,        final ClassLoader cl = getClassLoader(c);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,288,        if (cl == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,289,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,291,        return cl.getResource(name);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,302,        final ClassLoader cl = getClassLoader(c);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,303,"        final String cname = convertName(name, c);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,304,        if (cl == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,305,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,307,        return cl.getResource(cname);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,321,"        if (name.startsWith(""/"")) {",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,323,            return name.substring(1);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,327,        while (c.isArray()) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,328,            c = c.getComponentType();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,331,        final String baseName = c.getName();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,332,        final int index = baseName.lastIndexOf('.');,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,333,        if (index == -1) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,334,            return name;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,337,"        final String pkgName = baseName.substring(0, index);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,338,"        return pkgName.replace('.', '/') + ""/"" + name;",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,351,"        final URL url = getResource(name, context);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,352,        if (url == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,353,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,357,            return url.openStream();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,359,        catch (IOException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,360,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,374,"        final URL url = getResourceRelative(name, context);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,375,        if (url == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,376,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,380,            return url.openStream();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,382,        catch (IOException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,383,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,398,            final ClassLoader loader = getClassLoader(source);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,399,            final Class c = loader.loadClass(className);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,400,            return c.newInstance();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,402,        catch (Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,403,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,423,            ClassLoader loader = getClassLoader(source);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,424,            Class c = loader.loadClass(className);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,425,            if (type.isAssignableFrom(c)) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,426,                return c.newInstance();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,431,        },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,429,        catch (Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,430,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,432,        return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,447,            catch (ClassNotFoundException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,448,              return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,450,            catch(Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,457,            String version = System.getProperty(,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,460,            if (version == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,461,                return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,464,            String[] versions = parseVersions(version);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,465,"            String[] target = new String[]{ ""1"", ""4"" };",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,466,"            return (ArrayUtilities.compareVersionArrays(versions, target) >= 0);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,468,        catch(Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,469,            return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,474,      if (version == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,475,        return new String[0];,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,478,      ArrayList versions = new ArrayList();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,479,"      StringTokenizer strtok = new StringTokenizer(version, ""."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,480,      while (strtok.hasMoreTokens()) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,481,          versions.add (strtok.nextToken());,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,26,483,      return (String[]) versions.toArray(new String[versions.size()]);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,81,    private SerialUtilities() {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,82,    },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,111,"            throw new IllegalArgumentException(""Null 'stream' argument."");   ",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,120,            else if (c.equals(GradientPaint.class)) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,121,                float x1 = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,122,                float y1 = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,123,                Color c1 = (Color) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,124,                float x2 = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,125,                float y2 = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,126,                Color c2 = (Color) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,127,                boolean isCyclic = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,128,"                result = new GradientPaint(x1, y1, c1, x2, y2, c2, isCyclic);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,147,"            throw new IllegalArgumentException(""Null 'stream' argument."");   ",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,155,            else if (paint instanceof GradientPaint) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,156,                GradientPaint gp = (GradientPaint) paint;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,157,                stream.writeFloat((float) gp.getPoint1().getX());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,158,                stream.writeFloat((float) gp.getPoint1().getY());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,159,                stream.writeObject(gp.getColor1());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,160,                stream.writeFloat((float) gp.getPoint2().getX());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,161,                stream.writeFloat((float) gp.getPoint2().getY());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,162,                stream.writeObject(gp.getColor2());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,163,                stream.writeBoolean(gp.isCyclic());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,164,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,187,"            throw new IllegalArgumentException(""Null 'stream' argument."");   ",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,204,                result = (Stroke) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,226,"            throw new IllegalArgumentException(""Null 'stream' argument."");   ",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,241,                stream.writeObject(stroke.getClass());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,242,                stream.writeObject(stroke);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,246,            stream.writeBoolean(true);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,265,"            throw new IllegalArgumentException(""Null 'stream' argument."");   ",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,272,                double x1 = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,273,                double y1 = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,274,                double x2 = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,275,                double y2 = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,276,"                result = new Line2D.Double(x1, y1, x2, y2);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,277,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,293,                double x = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,294,                double y = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,295,                double w = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,296,                double h = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,297,                double as = stream.readDouble(); // Angle Start,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,298,                double ae = stream.readDouble(); // Angle Extent,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,299,                int at = stream.readInt();       // Arc type,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,300,"                result = new Arc2D.Double(x, y, w, h, as, ae, at);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,301,            }            ,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,303,                GeneralPath gp = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,304,                float[] args = new float[6];,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,305,                boolean hasNext = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,306,                while (!hasNext) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,307,                    int type = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,308,                    for (int i = 0; i < 6; i++) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,309,                        args[i] = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,311,                    switch (type) { ,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,313,"                            gp.moveTo(args[0], args[1]);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,314,                            break;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,316,"                            gp.lineTo(args[0], args[1]);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,317,                            break; ,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,319,                            gp.curveTo(,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,323,                            break;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,325,"                            gp.quadTo(args[0], args[1], args[2], args[3]);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,326,                            break;                  ,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,329,                            break;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,331,                            throw new RuntimeException(,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,335,                    gp.setWindingRule(stream.readInt());    ,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,336,                    hasNext = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,337,                },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,338,                result = gp;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,339,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,360,"            throw new IllegalArgumentException(""Null 'stream' argument."");   ",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,365,                Line2D line = (Line2D) shape;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,366,                stream.writeObject(Line2D.class);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,367,                stream.writeDouble(line.getX1());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,368,                stream.writeDouble(line.getY1());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,369,                stream.writeDouble(line.getX2());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,370,                stream.writeDouble(line.getY2());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,371,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,389,                Arc2D arc = (Arc2D) shape;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,390,                stream.writeObject(Arc2D.class);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,391,                stream.writeDouble(arc.getX());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,392,                stream.writeDouble(arc.getY());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,393,                stream.writeDouble(arc.getWidth());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,394,                stream.writeDouble(arc.getHeight());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,395,                stream.writeDouble(arc.getAngleStart());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,396,                stream.writeDouble(arc.getAngleExtent());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,397,                stream.writeInt(arc.getArcType());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,398,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,400,                stream.writeObject(GeneralPath.class);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,401,                PathIterator pi = shape.getPathIterator(null);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,402,                float[] args = new float[6];,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,403,                stream.writeBoolean(pi.isDone());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,404,                while (!pi.isDone()) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,405,                    int type = pi.currentSegment(args);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,406,                    stream.writeInt(type);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,409,                    for (int i = 0; i < 6; i++) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,410,                        stream.writeFloat(args[i]);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,412,                    stream.writeInt(pi.getWindingRule());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,413,                    pi.next();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,414,                    stream.writeBoolean(pi.isDone());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,415,                },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,416,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,423,            stream.writeBoolean(true);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,440,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,441,"            throw new IllegalArgumentException(""Null 'stream' argument."");   ",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,443,        Point2D result = null;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,444,        boolean isNull = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,445,        if (!isNull) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,446,            double x = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,447,            double y = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,448,"            result = new Point2D.Double(x, y);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,450,        return result;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,465,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,466,"            throw new IllegalArgumentException(""Null 'stream' argument."");   ",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,468,        if (p != null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,469,            stream.writeBoolean(false);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,470,            stream.writeDouble(p.getX());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,471,            stream.writeDouble(p.getY());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,474,            stream.writeBoolean(true);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,476,    },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,494,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,495,"            throw new IllegalArgumentException(""Null 'stream' argument."");   ",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,497,        AttributedString result = null;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,498,        boolean isNull = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,499,        if (!isNull) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,501,            String plainStr = (String) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,502,            result = new AttributedString(plainStr);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,503,            char c = stream.readChar();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,504,            int start = 0;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,505,            while (c != CharacterIterator.DONE) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,506,                int limit = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,507,                Map atts = (Map) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,508,"                result.addAttributes(atts, start, limit);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,509,                start = limit;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,510,                c = stream.readChar();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,511,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,513,        return result;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,527,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,528,"            throw new IllegalArgumentException(""Null 'stream' argument."");   ",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,530,        if (as != null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,531,            stream.writeBoolean(false);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,532,            AttributedCharacterIterator aci = as.getIterator();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,535,            StringBuffer plainStr = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,536,            char current = aci.first();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,537,            while (current != CharacterIterator.DONE) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,538,                plainStr = plainStr.append(current);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,539,                current = aci.next();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,541,            stream.writeObject(plainStr.toString());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,544,            current = aci.first();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,545,            int begin = aci.getBeginIndex();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,546,            while (current != CharacterIterator.DONE) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,550,                stream.writeChar(current);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,553,                int limit = aci.getRunLimit();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,554,                stream.writeInt(limit - begin);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,557,                Map atts = new HashMap(aci.getAttributes());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,558,                stream.writeObject(atts);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,559,                current = aci.setIndex(limit);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,560,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,563,            stream.writeChar(CharacterIterator.DONE);  ,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,564,        },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,567,            stream.writeBoolean(true);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,26,570,    },0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,62,    private PaintUtilities() {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,63,    },0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,82,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,88,            GradientPaint gp1 = (GradientPaint) p1;,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,89,            GradientPaint gp2 = (GradientPaint) p2;,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,90,            result = gp1.getColor1().equals(gp2.getColor1()) ,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,96,        },0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,115,          Field[] fields = Color.class.getFields();,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,116,          for (int i = 0; i < fields.length; i++) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,117,              Field f = fields[i];,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,118,              if (Modifier.isPublic(f.getModifiers()),0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,121,                  String name = f.getName();,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,122,                  Object oColor = f.get(null);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,123,                  if (oColor instanceof Color) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,124,                      if (c.equals(oColor)) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,125,                          return name;,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,133,      },0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,131,      catch (Exception e) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,136,      String color = Integer.toHexString(c.getRGB() & 0x00ffffff);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,137,      StringBuffer retval = new StringBuffer(7);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,138,"      retval.append(""#"");",0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,140,      int fillUp = 6 - color.length();,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,141,      for (int i = 0; i < fillUp; i++) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,142,"          retval.append(""0"");",0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,145,      retval.append(color);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,146,      return retval.toString();,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,157,      if (value == null) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,158,          return Color.black;,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,162,          return Color.decode(value);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,164,      catch (NumberFormatException nfe) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,168,              final Field f = Color.class.getField(value);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,170,              return (Color) f.get(null);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,172,          catch (Exception ce) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,26,174,              return Color.black;,0.0,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,113,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,124,        return this.seriesKey;,0.0,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,135,        return this.toolTipText;,0.0,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,157,        return this.urlText;,0.0,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,189,                EntityCollection ec = new StandardEntityCollection();,0.0,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,190,                LegendItemEntity entity = new LegendItemEntity(,0.0,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,192,                entity.setSeriesKey(this.seriesKey);,0.0,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,193,                entity.setDataset(this.dataset);,0.0,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,194,                entity.setToolTipText(getToolTipText());,0.0,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,195,                entity.setURLText(getURLText());,0.0,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,196,                ec.add(entity);,0.0,0,-1,0
org/jfree/chart/title/LegendItemBlockContainer,26,197,                r.setEntityCollection(ec);,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,88,        this(new BorderArrangement());,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,89,    },0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,99,"            throw new IllegalArgumentException(""Null 'arrangement' argument."");",0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,111,        return this.arrangement;    ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,121,"            throw new IllegalArgumentException(""Null 'arrangement' argument."");",0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,194,"        draw(g2, area, null);",0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,195,    },0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,214,                sec = new StandardEntityCollection();   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,231,                if (r instanceof EntityBlockResult) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,232,                    EntityBlockResult ebr = (EntityBlockResult) r;,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,233,                    EntityCollection ec = ebr.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,234,                    sec.addAll(ec);,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,240,            result = new BlockResult();,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,241,            result.setEntityCollection(sec);,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,254,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,255,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,257,        if (!(obj instanceof BlockContainer)) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,258,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,260,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,261,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,263,        BlockContainer that = (BlockContainer) obj;,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,264,        if (!this.arrangement.equals(that.arrangement)) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,265,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,267,        if (!this.blocks.equals(that.blocks)) {,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,268,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,270,        return true;,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,281,        BlockContainer clone = (BlockContainer) super.clone();,0.0,0,-1,0
org/jfree/chart/block/BlockContainer,26,283,        return clone;,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,91,        this(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,95,    },0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,104,        this(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,108,    },0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,118,        this(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,122,    },0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,132,        this(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,136,    },0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,153,"            throw new IllegalArgumentException(""Null 'widthType' argument."");",0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,156,"            throw new IllegalArgumentException(""Null 'heightType' argument.""); ",0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,227,        if (this.widthConstraintType == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,228,            return this;   ,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,231,            return new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,245,        if (this.heightConstraintType == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,246,            return this;   ,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,249,            return new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,265,        return new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,280,        return new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,295,        if (range == null) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,296,"            throw new IllegalArgumentException(""Null 'range' argument."");   ",0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,298,        return new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,313,        if (range == null) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,314,"            throw new IllegalArgumentException(""Null 'range' argument."");   ",0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,316,        return new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,329,"        return ""RectangleConstraint["" ",0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,343,        Size2D result = new Size2D();,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,344,        if (this.widthConstraintType == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,345,            result.width = base.width;,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,346,            if (this.heightConstraintType == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,347,               result.height = base.height;,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,349,            else if (this.heightConstraintType == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,350,               result.height = this.heightRange.constrain(base.height);,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,352,            else if (this.heightConstraintType == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,353,               result.height = this.height;,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,356,        else if (this.widthConstraintType == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,357,            result.width = this.widthRange.constrain(base.width);,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,358,            if (this.heightConstraintType == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,359,                result.height = base.height;,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,361,            else if (this.heightConstraintType == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,362,                result.height = this.heightRange.constrain(base.height);,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,364,            else if (this.heightConstraintType == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,365,                result.height = this.height;,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,368,        else if (this.widthConstraintType == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,369,            result.width = this.width;,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,370,            if (this.heightConstraintType == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,371,                result.height = base.height;,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,373,            else if (this.heightConstraintType == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,374,                result.height = this.heightRange.constrain(base.height);,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,376,            else if (this.heightConstraintType == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,377,                result.height = this.height;,0.0,0,-1,0
org/jfree/chart/block/RectangleConstraint,26,380,        return result;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,155,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,158,"            throw new IllegalArgumentException(""Null 'fillPaint' argument."");",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,177,        return this.shapeVisible;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,196,        return this.shape;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,205,        this.shape = shape;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,206,    },0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,215,        return this.shapeFilled;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,234,        return this.fillPaint;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,243,        this.fillPaint = paint;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,244,    },0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,255,        return this.fillPaintTransformer;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,268,"            throw new IllegalArgumentException(""Null 'transformer' argument."");",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,279,        return this.shapeOutlineVisible;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,298,        return this.outlinePaint;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,316,        return this.outlineStroke;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,334,        return this.shapeAnchor;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,345,"            throw new IllegalArgumentException(""Null 'anchor' argument."");",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,356,        return this.shapeLocation;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,367,"            throw new IllegalArgumentException(""Null 'location' argument."");",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,378,        return this.lineVisible;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,415,        return this.linePaint;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,433,        return this.lineStroke;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,463,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,464,"                throw new RuntimeException(""Not yet implemented."");",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,466,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,467,"                throw new RuntimeException(""Not yet implemented."");",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,470,        else if (w == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,471,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,472,"                throw new RuntimeException(""Not yet implemented."");",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,474,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,475,"                throw new RuntimeException(""Not yet implemented."");",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,477,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,478,"                throw new RuntimeException(""Not yet implemented."");",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,481,        else if (w == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,482,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,483,"                throw new RuntimeException(""Not yet implemented."");",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,485,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,486,"                throw new RuntimeException(""Not yet implemented."");",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,488,            else if (h == LengthConstraintType.FIXED) {   ,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,489,                contentSize = new Size2D(,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,557,                    GradientPaint gp = (GradientPaint) this.fillPaint;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,558,"                    p = this.fillPaintTransformer.transform(gp, s);",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,595,        if (!(obj instanceof LegendGraphic)) {,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,596,            return false;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,598,        LegendGraphic that = (LegendGraphic) obj;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,599,        if (this.shapeVisible != that.shapeVisible) {,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,600,            return false;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,602,"        if (!ShapeUtilities.equal(this.shape, that.shape)) {",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,603,            return false;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,605,        if (this.shapeFilled != that.shapeFilled) {,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,606,            return false;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,608,"        if (!PaintUtilities.equal(this.fillPaint, that.fillPaint)) {",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,609,            return false;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,611,"        if (!ObjectUtilities.equal(this.fillPaintTransformer, ",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,613,            return false;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,615,        if (this.shapeOutlineVisible != that.shapeOutlineVisible) {,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,616,            return false;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,618,"        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,619,            return false;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,621,"        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,622,            return false;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,624,        if (this.shapeAnchor != that.shapeAnchor) {,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,625,            return false;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,627,        if (this.shapeLocation != that.shapeLocation) {,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,628,            return false;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,630,        if (this.lineVisible != that.lineVisible) {,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,631,            return false;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,633,"        if (!ShapeUtilities.equal(this.line, that.line)) {",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,634,            return false;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,636,"        if (!PaintUtilities.equal(this.linePaint, that.linePaint)) {",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,637,            return false;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,639,"        if (!ObjectUtilities.equal(this.lineStroke, that.lineStroke)) {",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,640,            return false;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,642,        return super.equals(obj);    ,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,651,        int result = 193;   ,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,652,        result = 37 * result + ObjectUtilities.hashCode(this.fillPaint);,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,654,        return result;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,665,        LegendGraphic clone = (LegendGraphic) super.clone();,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,666,        clone.shape = ShapeUtilities.clone(this.shape);,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,667,        clone.line = ShapeUtilities.clone(this.line);,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,668,        return clone;,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,679,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,680,"        SerialUtilities.writeShape(this.shape, stream);",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,681,"        SerialUtilities.writePaint(this.fillPaint, stream);",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,682,"        SerialUtilities.writePaint(this.outlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,683,"        SerialUtilities.writeStroke(this.outlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,684,"        SerialUtilities.writeShape(this.line, stream);",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,685,"        SerialUtilities.writePaint(this.linePaint, stream);",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,686,"        SerialUtilities.writeStroke(this.lineStroke, stream);",0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,687,    },0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,700,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,701,        this.shape = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,702,        this.fillPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,703,        this.outlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,704,        this.outlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,705,        this.line = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,706,        this.linePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,707,        this.lineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/title/LegendGraphic,26,708,    },0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,196,            return false;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,218,            result = ItemLabelAnchor.CENTER;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,221,            result = ItemLabelAnchor.INSIDE1;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,224,            result = ItemLabelAnchor.INSIDE2;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,227,            result = ItemLabelAnchor.INSIDE3;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,230,            result = ItemLabelAnchor.INSIDE4;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,233,            result = ItemLabelAnchor.INSIDE5;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,236,            result = ItemLabelAnchor.INSIDE6;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,239,            result = ItemLabelAnchor.INSIDE7;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,242,            result = ItemLabelAnchor.INSIDE8;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,245,            result = ItemLabelAnchor.INSIDE9;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,248,            result = ItemLabelAnchor.INSIDE10;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,251,            result = ItemLabelAnchor.INSIDE11;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,254,            result = ItemLabelAnchor.INSIDE12;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,257,            result = ItemLabelAnchor.OUTSIDE1;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,260,            result = ItemLabelAnchor.OUTSIDE2;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,263,            result = ItemLabelAnchor.OUTSIDE3;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,266,            result = ItemLabelAnchor.OUTSIDE4;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,269,            result = ItemLabelAnchor.OUTSIDE5;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,275,            result = ItemLabelAnchor.OUTSIDE7;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,278,            result = ItemLabelAnchor.OUTSIDE8;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,281,            result = ItemLabelAnchor.OUTSIDE9;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,284,            result = ItemLabelAnchor.OUTSIDE10;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,26,287,            result = ItemLabelAnchor.OUTSIDE11;,0.0,0,-1,0
org/jfree/chart/labels/StandardCategoryToolTipGenerator,26,84,"        super(labelFormat, formatter);",0.0,0,-1,0
org/jfree/chart/labels/StandardCategoryToolTipGenerator,26,85,    },0.0,0,-1,0
org/jfree/chart/labels/StandardCategoryToolTipGenerator,26,112,"        return generateLabelString(dataset, row, column);",0.0,0,-1,0
org/jfree/chart/labels/StandardCategoryToolTipGenerator,26,124,            return true;,0.0,0,-1,0
org/jfree/chart/labels/StandardCategoryToolTipGenerator,26,127,            return false;,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,124,"            throw new IllegalArgumentException(""Null 'labelFormat' argument."");",0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,127,"            throw new IllegalArgumentException(""Null 'formatter' argument."");",0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,130,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,150,"            throw new IllegalArgumentException(""Null 'labelFormat' argument."");",0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,153,"            throw new IllegalArgumentException(""Null 'formatter' argument."");",0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,171,        return dataset.getRowKey(row).toString();   ,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,183,        return dataset.getColumnKey(column).toString();   ,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,192,        return this.labelFormat;   ,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,201,        return this.numberFormat;,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,210,        return this.dateFormat;,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,224,        if (dataset == null) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,225,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,227,        String result = null;   ,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,228,"        Object[] items = createItemArray(dataset, row, column);",0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,229,"        result = MessageFormat.format(this.labelFormat, items);",0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,230,        return result;,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,246,        Object[] result = new Object[4];,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,247,        result[0] = dataset.getRowKey(row).toString();,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,248,        result[1] = dataset.getColumnKey(column).toString();,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,249,"        Number value = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,250,        if (value != null) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,251,            if (this.numberFormat != null) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,252,                result[2] = this.numberFormat.format(value);  ,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,254,            else if (this.dateFormat != null) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,255,                result[2] = this.dateFormat.format(value);,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,259,            result[2] = this.nullValueString;   ,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,261,        if (value != null) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,262,"            double total = DataUtilities.calculateColumnTotal(dataset, column);",0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,263,            double percent = value.doubleValue() / total;,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,264,            result[3] = this.percentFormat.format(percent);,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,267,        return result;,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,279,            return true;,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,282,            return false;,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,288,            return false;,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,291,            return false;,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,294,            return false;,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,307,        AbstractCategoryItemLabelGenerator clone ,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,309,        if (this.numberFormat != null) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,310,            clone.numberFormat = (NumberFormat) this.numberFormat.clone();,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,312,        if (this.dateFormat != null) {,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,313,            clone.dateFormat = (DateFormat) this.dateFormat.clone();,0.0,0,-1,0
org/jfree/chart/labels/AbstractCategoryItemLabelGenerator,26,315,        return clone;,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,85,"            throw new IllegalArgumentException(""Null 'format' argument."");",0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,100,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,130,        return super.clone();,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,142,            return true;,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,145,            return false;,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,26,150,            return false;,0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,74,"        super(DEFAULT_TOOL_TIP_FORMAT_STRING, NumberFormat.getInstance());",0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,75,    },0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,86,"        super(labelFormat, formatter);",0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,87,    },0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,113,        Object[] result = new Object[5];,0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,114,        result[0] = dataset.getRowKey(row).toString();,0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,115,        result[1] = dataset.getColumnKey(column).toString();,0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,116,"        Number value = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,117,        if (getNumberFormat() != null) {,0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,118,            result[2] = getNumberFormat().format(value);  ,0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,120,        else if (getDateFormat() != null) {,0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,121,            result[2] = getDateFormat().format(value);,0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,124,        if (dataset instanceof IntervalCategoryDataset) {,0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,125,            IntervalCategoryDataset icd = (IntervalCategoryDataset) dataset;,0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,126,"            Number start = icd.getStartValue(row, column);",0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,127,"            Number end = icd.getEndValue(row, column);",0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,128,            if (getNumberFormat() != null) {,0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,129,                result[3] = getNumberFormat().format(start);  ,0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,130,                result[4] = getNumberFormat().format(end);  ,0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,132,            else if (getDateFormat() != null) {,0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,133,                result[3] = getDateFormat().format(start);,0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,134,                result[4] = getDateFormat().format(end);,0.0,0,-1,0
org/jfree/chart/labels/IntervalCategoryToolTipGenerator,26,137,        return result;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,79,"        this(ItemLabelAnchor.OUTSIDE12, TextAnchor.BOTTOM_CENTER, ",0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,81,    },0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,114,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,118,"            throw new IllegalArgumentException(""Null 'textAnchor' argument."");",0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,121,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,138,        return this.itemLabelAnchor;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,147,        return this.textAnchor;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,156,        return this.rotationAnchor;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,165,        return this.angle;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,177,            return true;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,180,            return false;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,184,            return false;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,187,            return false;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,190,            return false;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,26,193,            return false;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,221,public abstract class ChartFactory {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,243,        PiePlot plot = new PiePlot(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,244,        plot.setLabelGenerator(new StandardPieSectionLabelGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,245,"        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,246,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,247,            plot.setToolTipGenerator(new StandardPieToolTipGenerator(,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,250,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,251,            plot.setURLGenerator(new StandardPieURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,253,"        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,307,        PiePlot plot = new PiePlot(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,308,        plot.setLabelGenerator(new StandardPieSectionLabelGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,309,"        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,311,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,312,            plot.setToolTipGenerator(new StandardPieToolTipGenerator(,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,315,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,316,            plot.setURLGenerator(new StandardPieURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,319,        List keys = dataset.getKeys();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,320,        DefaultPieDataset series = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,321,        if (showDifference) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,322,            series = new DefaultPieDataset();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,325,        double colorPerPercent = 255.0 / percentDiffForMaxScale;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,326,        for (Iterator it = keys.iterator(); it.hasNext();) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,327,            Comparable key = (Comparable) it.next();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,328,            Number newValue = dataset.getValue(key);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,329,            Number oldValue = previousDataset.getValue(key);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,331,            if (oldValue == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,332,                if (greenForIncrease) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,333,"                    plot.setSectionPaint(key, Color.green);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,336,"                    plot.setSectionPaint(key, Color.red);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,338,                if (showDifference) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,339,"                    series.setValue(key + "" (+100%)"", newValue);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,343,                double percentChange = (newValue.doubleValue() ,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,345,                double shade,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,348,                if (greenForIncrease ,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,352,"                    plot.setSectionPaint(key, new Color(0, (int) shade, 0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,355,"                    plot.setSectionPaint(key, new Color((int) shade, 0, 0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,357,                if (showDifference) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,358,"                    series.setValue(key + "" ("" + (percentChange >= 0 ? ""+"" : """") ",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,363,        },0.0,0,-1,0
org/jfree/chart/ChartFactory,26,365,        if (showDifference) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,366,            plot.setDataset(series);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,369,        JFreeChart chart =  new JFreeChart(,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,373,        if (subTitle) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,374,            TextTitle subtitle = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,375,"            subtitle = new TextTitle(""Bright "" + (greenForIncrease ? ""red"" ",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,380,            chart.addSubtitle(subtitle);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,383,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,406,        RingPlot plot = new RingPlot(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,407,        plot.setLabelGenerator(new StandardPieSectionLabelGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,408,"        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,409,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,410,            plot.setToolTipGenerator(new StandardPieToolTipGenerator(,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,413,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,414,            plot.setURLGenerator(new StandardPieURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,416,"        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,443,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,444,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,446,        MultiplePiePlot plot = new MultiplePiePlot(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,447,        plot.setDataExtractOrder(order);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,448,        plot.setBackgroundPaint(null);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,449,        plot.setOutlineStroke(null);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,451,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,452,            PieToolTipGenerator tooltipGenerator ,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,454,            PiePlot pp = (PiePlot) plot.getPieChart().getPlot();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,455,            pp.setToolTipGenerator(tooltipGenerator);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,458,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,459,            PieURLGenerator urlGenerator = new StandardPieURLGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,460,            PiePlot pp = (PiePlot) plot.getPieChart().getPlot();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,461,            pp.setURLGenerator(urlGenerator);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,464,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,467,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,490,        PiePlot3D plot = new PiePlot3D(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,491,"        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,492,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,493,            plot.setToolTipGenerator(new StandardPieToolTipGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,495,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,496,            plot.setURLGenerator(new StandardPieURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,498,"        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,525,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,526,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,528,        MultiplePiePlot plot = new MultiplePiePlot(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,529,        plot.setDataExtractOrder(order);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,530,        plot.setBackgroundPaint(null);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,531,        plot.setOutlineStroke(null);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,533,        JFreeChart pieChart = new JFreeChart(new PiePlot3D(null));,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,534,"        TextTitle seriesTitle = new TextTitle(""Series Title"", ",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,536,        seriesTitle.setPosition(RectangleEdge.BOTTOM);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,537,        pieChart.setTitle(seriesTitle);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,538,        pieChart.removeLegend();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,539,        pieChart.setBackgroundPaint(null);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,540,        plot.setPieChart(pieChart);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,542,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,543,            PieToolTipGenerator tooltipGenerator ,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,545,            PiePlot pp = (PiePlot) plot.getPieChart().getPlot();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,546,            pp.setToolTipGenerator(tooltipGenerator);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,549,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,550,            PieURLGenerator urlGenerator = new StandardPieURLGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,551,            PiePlot pp = (PiePlot) plot.getPieChart().getPlot();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,552,            pp.setURLGenerator(urlGenerator);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,555,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,558,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,592,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,663,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,718,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,781,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,844,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,901,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,955,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1008,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1111,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1126,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1127,            ItemLabelPosition position = new ItemLabelPosition(,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1130,            renderer.setBasePositiveItemLabelPosition(position);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1131,            renderer.setBaseNegativeItemLabelPosition(position);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1176,        PolarPlot plot = new PolarPlot();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1177,        plot.setDataset(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1178,        NumberAxis rangeAxis = new NumberAxis();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1179,        rangeAxis.setAxisLineVisible(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1180,        rangeAxis.setTickMarksVisible(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1181,"        rangeAxis.setTickLabelInsets(new RectangleInsets(0.0, 0.0, 0.0, 0.0));",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1182,        plot.setAxis(rangeAxis);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1183,        plot.setRenderer(new DefaultPolarItemRenderer());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1184,        JFreeChart chart = new JFreeChart(,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1186,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1213,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1214,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1216,        NumberAxis xAxis = new NumberAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1217,        xAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1218,        NumberAxis yAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1219,        yAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1221,"        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, null);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1223,        XYToolTipGenerator toolTipGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1224,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1225,            toolTipGenerator = new StandardXYToolTipGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1228,        XYURLGenerator urlGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1229,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1230,            urlGenerator = new StandardXYURLGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1232,"        XYItemRenderer renderer = new XYLineAndShapeRenderer(false, true);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1233,        renderer.setBaseToolTipGenerator(toolTipGenerator);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1234,        renderer.setBaseURLGenerator(urlGenerator);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1235,        plot.setRenderer(renderer);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1236,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1238,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1240,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1275,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1276,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1278,        ValueAxis domainAxis = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1279,        if (dateAxis) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1280,            domainAxis = new DateAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1283,            NumberAxis axis = new NumberAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1284,            axis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1285,            domainAxis = axis;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1287,        ValueAxis valueAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1289,        XYBarRenderer renderer = new XYBarRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1290,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1292,            if (dateAxis) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1293,                tt = StandardXYToolTipGenerator.getTimeSeriesInstance();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1296,                tt = new StandardXYToolTipGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1298,            renderer.setBaseToolTipGenerator(tt);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1300,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1301,            renderer.setBaseURLGenerator(new StandardXYURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1304,"        XYPlot plot = new XYPlot(dataset, domainAxis, valueAxis, renderer);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1305,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1307,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1310,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1343,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1344,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1346,        NumberAxis xAxis = new NumberAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1347,        xAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1348,        NumberAxis yAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1349,"        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, null);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1350,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1351,        plot.setForegroundAlpha(0.5f);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1353,        XYToolTipGenerator tipGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1354,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1355,            tipGenerator = new StandardXYToolTipGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1358,        XYURLGenerator urlGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1359,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1360,            urlGenerator = new StandardXYURLGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1363,        plot.setRenderer(,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1366,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1369,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1400,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1401,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1403,        NumberAxis xAxis = new NumberAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1404,        xAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1405,        xAxis.setLowerMargin(0.0);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1406,        xAxis.setUpperMargin(0.0);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1407,        NumberAxis yAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1408,        XYToolTipGenerator toolTipGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1409,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1410,            toolTipGenerator = new StandardXYToolTipGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1413,        XYURLGenerator urlGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1414,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1415,            urlGenerator = new StandardXYURLGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1417,        StackedXYAreaRenderer2 renderer = new StackedXYAreaRenderer2(,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1419,        renderer.setOutline(true);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1420,"        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, renderer);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1421,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1423,        plot.setRangeAxis(yAxis);  // forces recalculation of the axis range,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1425,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1427,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1456,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1457,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1459,        NumberAxis xAxis = new NumberAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1460,        xAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1461,        NumberAxis yAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1462,"        XYItemRenderer renderer = new XYLineAndShapeRenderer(true, false);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1463,"        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, renderer);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1464,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1465,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1466,            renderer.setBaseToolTipGenerator(new StandardXYToolTipGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1468,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1469,            renderer.setBaseURLGenerator(new StandardXYURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1472,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1475,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1503,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1504,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1506,        DateAxis xAxis = new DateAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1507,        NumberAxis yAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1508,        yAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1510,        XYToolTipGenerator toolTipGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1511,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1512,            toolTipGenerator = new StandardXYToolTipGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1515,        XYURLGenerator urlGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1516,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1517,            urlGenerator = new StandardXYURLGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1519,        XYItemRenderer renderer ,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1522,"        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, null);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1523,        plot.setRenderer(renderer);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1524,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1525,        plot.setDomainCrosshairVisible(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1526,        plot.setRangeCrosshairVisible(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1527,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1529,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1557,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1558,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1560,        NumberAxis xAxis = new NumberAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1561,        xAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1562,        NumberAxis yAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1564,        XYToolTipGenerator toolTipGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1565,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1566,            toolTipGenerator = new StandardXYToolTipGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1569,        XYURLGenerator urlGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1570,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1571,            urlGenerator = new StandardXYURLGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1573,        XYItemRenderer renderer = new XYStepAreaRenderer(,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1577,"        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, null);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1578,        plot.setRenderer(renderer);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1579,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1580,        plot.setDomainCrosshairVisible(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1581,        plot.setRangeCrosshairVisible(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1582,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1584,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1616,        ValueAxis timeAxis = new DateAxis(timeAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1617,        timeAxis.setLowerMargin(0.02);  // reduce the default margins ,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1618,        timeAxis.setUpperMargin(0.02);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1619,        NumberAxis valueAxis = new NumberAxis(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1620,        valueAxis.setAutoRangeIncludesZero(false);  // override default,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1621,"        XYPlot plot = new XYPlot(dataset, timeAxis, valueAxis, null);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1623,        XYToolTipGenerator toolTipGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1624,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1625,            toolTipGenerator ,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1629,        XYURLGenerator urlGenerator = null;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1630,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1631,            urlGenerator = new StandardXYURLGenerator();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1634,"        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer(true, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1636,        renderer.setBaseToolTipGenerator(toolTipGenerator);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1637,        renderer.setBaseURLGenerator(urlGenerator);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1638,        plot.setRenderer(renderer);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1640,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1642,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1665,        ValueAxis timeAxis = new DateAxis(timeAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1666,        NumberAxis valueAxis = new NumberAxis(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1667,"        XYPlot plot = new XYPlot(dataset, timeAxis, valueAxis, null);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1668,        plot.setRenderer(new CandlestickRenderer());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1669,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1671,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1694,        ValueAxis timeAxis = new DateAxis(timeAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1695,        NumberAxis valueAxis = new NumberAxis(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1696,        HighLowRenderer renderer = new HighLowRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1697,        renderer.setBaseToolTipGenerator(new HighLowItemLabelGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1698,"        XYPlot plot = new XYPlot(dataset, timeAxis, valueAxis, renderer);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1699,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1701,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1730,        DateAxis timeAxis = new DateAxis(timeAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1731,        timeAxis.setTimeline(timeline);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1732,        NumberAxis valueAxis = new NumberAxis(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1733,        HighLowRenderer renderer = new HighLowRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1734,        renderer.setBaseToolTipGenerator(new HighLowItemLabelGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1735,"        XYPlot plot = new XYPlot(dataset, timeAxis, valueAxis, renderer);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1736,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1738,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1769,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1770,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1772,        NumberAxis xAxis = new NumberAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1773,        xAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1774,        NumberAxis yAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1775,        yAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1777,"        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, null);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1779,        XYItemRenderer renderer = new XYBubbleRenderer(,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1781,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1782,            renderer.setBaseToolTipGenerator(new StandardXYZToolTipGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1784,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1785,            renderer.setBaseURLGenerator(new StandardXYZURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1787,        plot.setRenderer(renderer);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1788,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1790,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1793,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1823,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1824,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1826,        NumberAxis xAxis = new NumberAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1827,        xAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1828,        ValueAxis yAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1830,        XYItemRenderer renderer = new XYBarRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1831,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1832,            renderer.setBaseToolTipGenerator(new StandardXYToolTipGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1834,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1835,            renderer.setBaseURLGenerator(new StandardXYURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1838,"        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, renderer);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1839,        plot.setOrientation(orientation);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1840,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1842,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1866,        CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1867,        NumberAxis valueAxis = new NumberAxis(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1868,        valueAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1870,        BoxAndWhiskerRenderer renderer = new BoxAndWhiskerRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1871,        renderer.setBaseToolTipGenerator(new BoxAndWhiskerToolTipGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1873,"        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1875,"        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1898,        ValueAxis timeAxis = new DateAxis(timeAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1899,        NumberAxis valueAxis = new NumberAxis(valueAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1900,        valueAxis.setAutoRangeIncludesZero(false);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1901,        XYBoxAndWhiskerRenderer renderer = new XYBoxAndWhiskerRenderer(10.0);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1902,"        XYPlot plot = new XYPlot(dataset, timeAxis, valueAxis, renderer);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1903,"        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, ",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1930,        ValueAxis xAxis = new DateAxis(xAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1931,        ValueAxis yAxis = new NumberAxis(yAxisLabel);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1932,"        yAxis.setRange(-12.0, 12.0);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1934,        WindItemRenderer renderer = new WindItemRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1935,        if (tooltips) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1936,            renderer.setBaseToolTipGenerator(new StandardXYToolTipGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1938,        if (urls) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1939,            renderer.setBaseURLGenerator(new StandardXYURLGenerator());,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1941,"        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, renderer);",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1942,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1945,        return chart;,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1969,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1970,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1972,        WaferMapPlot plot = new WaferMapPlot(dataset);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1973,        WaferMapRenderer renderer = new WaferMapRenderer();,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1974,        plot.setRenderer(renderer);,0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1976,"        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,",0.0,0,-1,0
org/jfree/chart/ChartFactory,26,1979,        return chart;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,199,"        this(label, description, toolTipText, urlText, ",0.0,0,-1,0
org/jfree/chart/LegendItem,26,206,    },0.0,0,-1,0
org/jfree/chart/LegendItem,26,252,"        this(label, description, toolTipText, urlText,",0.0,0,-1,0
org/jfree/chart/LegendItem,26,257,    },0.0,0,-1,0
org/jfree/chart/LegendItem,26,294,"            throw new IllegalArgumentException(""Null 'label' argument."");   ",0.0,0,-1,0
org/jfree/chart/LegendItem,26,297,"            throw new IllegalArgumentException(""Null 'fillPaint' argument."");   ",0.0,0,-1,0
org/jfree/chart/LegendItem,26,300,"            throw new IllegalArgumentException(""Null 'lineStroke' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,26,303,"            throw new IllegalArgumentException(""Null 'outlinePaint' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,26,306,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/LegendItem,26,344,"        this(label, description, toolTipText, urlText, ",0.0,0,-1,0
org/jfree/chart/LegendItem,26,351,    },0.0,0,-1,0
org/jfree/chart/LegendItem,26,373,"        this(label, description, toolTipText, urlText,",0.0,0,-1,0
org/jfree/chart/LegendItem,26,379,    },0.0,0,-1,0
org/jfree/chart/LegendItem,26,396,"        this(label, description, toolTipText, urlText,",0.0,0,-1,0
org/jfree/chart/LegendItem,26,402,    },0.0,0,-1,0
org/jfree/chart/LegendItem,26,436,                      Paint linePaint) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,438,        if (label == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,439,"            throw new IllegalArgumentException(""Null 'label' argument."");   ",0.0,0,-1,0
org/jfree/chart/LegendItem,26,441,        if (fillPaint == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,442,"            throw new IllegalArgumentException(""Null 'fillPaint' argument."");   ",0.0,0,-1,0
org/jfree/chart/LegendItem,26,444,        if (lineStroke == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,445,"            throw new IllegalArgumentException(""Null 'lineStroke' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,26,447,        if (outlinePaint == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,448,"            throw new IllegalArgumentException(""Null 'outlinePaint' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,26,450,        if (outlineStroke == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,451,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/LegendItem,26,454,        this.label = characterIteratorToString(label.getIterator());,0.0,0,-1,0
org/jfree/chart/LegendItem,26,455,        this.attributedLabel = label;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,456,        this.description = description;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,457,        this.shapeVisible = shapeVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,458,        this.shape = shape;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,459,        this.shapeFilled = shapeFilled;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,460,        this.fillPaint = fillPaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,461,        this.shapeOutlineVisible = shapeOutlineVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,462,        this.outlinePaint = outlinePaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,463,        this.outlineStroke = outlineStroke;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,464,        this.lineVisible = lineVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,465,        this.line = line;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,466,        this.lineStroke = lineStroke;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,467,        this.linePaint = linePaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,468,        this.toolTipText = toolTipText;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,469,        this.urlText = urlText;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,470,    },0.0,0,-1,0
org/jfree/chart/LegendItem,26,480,        int endIndex = iterator.getEndIndex();,0.0,0,-1,0
org/jfree/chart/LegendItem,26,481,        int beginIndex = iterator.getBeginIndex();,0.0,0,-1,0
org/jfree/chart/LegendItem,26,482,        int count = endIndex - beginIndex;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,483,        if (count <= 0) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,484,"            return """";",0.0,0,-1,0
org/jfree/chart/LegendItem,26,486,        char[] chars = new char[count];,0.0,0,-1,0
org/jfree/chart/LegendItem,26,487,        int i = 0;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,488,        char c = iterator.first();,0.0,0,-1,0
org/jfree/chart/LegendItem,26,489,        while (c != CharacterIterator.DONE) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,490,            chars[i] = c;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,491,            i++;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,492,            c = iterator.next();,0.0,0,-1,0
org/jfree/chart/LegendItem,26,494,        return new String(chars);,0.0,0,-1,0
org/jfree/chart/LegendItem,26,532,        return this.datasetIndex;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,580,        return this.series;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,609,        return this.attributedLabel;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,618,        return this.description;   ,0.0,0,-1,0
org/jfree/chart/LegendItem,26,766,"            throw new IllegalArgumentException(""Null 'transformer' attribute."");",0.0,0,-1,0
org/jfree/chart/LegendItem,26,779,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,780,            return true;   ,0.0,0,-1,0
org/jfree/chart/LegendItem,26,782,        if (!(obj instanceof LegendItem)) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,783,                return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,785,        LegendItem that = (LegendItem) obj;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,786,        if (this.datasetIndex != that.datasetIndex) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,787,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,789,        if (this.series != that.series) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,790,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,792,        if (!this.label.equals(that.label)) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,793,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,795,"        if (!AttributedStringUtilities.equal(this.attributedLabel, ",0.0,0,-1,0
org/jfree/chart/LegendItem,26,797,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,799,"        if (!ObjectUtilities.equal(this.description, that.description)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,26,800,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,802,        if (this.shapeVisible != that.shapeVisible) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,803,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,805,"        if (!ShapeUtilities.equal(this.shape, that.shape)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,26,806,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,808,        if (this.shapeFilled != that.shapeFilled) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,809,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,811,        if (!this.fillPaint.equals(that.fillPaint)) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,812,            return false;   ,0.0,0,-1,0
org/jfree/chart/LegendItem,26,814,"        if (!ObjectUtilities.equal(this.fillPaintTransformer, ",0.0,0,-1,0
org/jfree/chart/LegendItem,26,816,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,818,        if (this.shapeOutlineVisible != that.shapeOutlineVisible) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,819,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,821,        if (!this.outlineStroke.equals(that.outlineStroke)) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,822,            return false;   ,0.0,0,-1,0
org/jfree/chart/LegendItem,26,824,        if (!this.outlinePaint.equals(that.outlinePaint)) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,825,            return false;   ,0.0,0,-1,0
org/jfree/chart/LegendItem,26,827,        if (!this.lineVisible == that.lineVisible) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,828,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,830,"        if (!ShapeUtilities.equal(this.line, that.line)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,26,831,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,833,        if (!this.lineStroke.equals(that.lineStroke)) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,834,            return false;   ,0.0,0,-1,0
org/jfree/chart/LegendItem,26,836,        if (!this.linePaint.equals(that.linePaint)) {,0.0,0,-1,0
org/jfree/chart/LegendItem,26,837,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,839,        return true;,0.0,0,-1,0
org/jfree/chart/LegendItem,26,850,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/LegendItem,26,851,"        SerialUtilities.writeAttributedString(this.attributedLabel, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,26,852,"        SerialUtilities.writeShape(this.shape, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,26,853,"        SerialUtilities.writePaint(this.fillPaint, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,26,854,"        SerialUtilities.writeStroke(this.outlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,26,855,"        SerialUtilities.writePaint(this.outlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,26,856,"        SerialUtilities.writeShape(this.line, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,26,857,"        SerialUtilities.writeStroke(this.lineStroke, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,26,858,"        SerialUtilities.writePaint(this.linePaint, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,26,859,    },0.0,0,-1,0
org/jfree/chart/LegendItem,26,871,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/LegendItem,26,872,        this.attributedLabel = SerialUtilities.readAttributedString(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,26,873,        this.shape = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,26,874,        this.fillPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,26,875,        this.outlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,26,876,        this.outlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,26,877,        this.line = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,26,878,        this.lineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,26,879,        this.linePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,26,880,    },0.0,0,-1,0
org/jfree/chart/ChartColor,26,141,"        super(r, g, b);",0.0,0,-1,0
org/jfree/chart/ChartColor,26,142,    },0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,86,        return this.name;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,98,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,99,            return true;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,101,        if (!(obj instanceof LengthConstraintType)) {,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,102,            return false;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,104,        LengthConstraintType that = (LengthConstraintType) obj;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,105,        if (!this.name.equals(that.toString())) {,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,106,            return false;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,108,        return true;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,117,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,128,        if (this.equals(LengthConstraintType.NONE)) {,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,129,            return LengthConstraintType.NONE;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,131,        else if (this.equals(LengthConstraintType.RANGE)) {,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,132,            return LengthConstraintType.RANGE;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,134,        else if (this.equals(LengthConstraintType.FIXED)) {,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,135,            return LengthConstraintType.FIXED;,0.0,0,-1,0
org/jfree/chart/block/LengthConstraintType,26,137,        return null;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,26,97,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/block/LineBorder,26,100,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/block/LineBorder,26,103,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/block/LineBorder,26,190,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/LineBorder,26,193,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/LineBorder,26,197,            return false;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,26,200,            return false;,0.0,0,-1,0
org/jfree/chart/block/LineBorder,26,203,            return false;,0.0,0,-1,0
org/jfree/chart/block/BlockParams,26,106,        return this.translateX;   ,0.0,0,-1,0
org/jfree/chart/block/BlockParams,26,116,        this.translateX = x;   ,0.0,0,-1,0
org/jfree/chart/block/BlockParams,26,117,    },0.0,0,-1,0
org/jfree/chart/block/BlockParams,26,126,        return this.translateY;   ,0.0,0,-1,0
org/jfree/chart/block/BlockParams,26,136,        this.translateY = y;   ,0.0,0,-1,0
org/jfree/chart/block/BlockParams,26,137,    },0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,103,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,104,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,106,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,107,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,110,        else if (w == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,111,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,112,"                return arrangeFN(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,114,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,115,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,117,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,118,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,121,        else if (w == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,122,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,123,"                return arrangeRN(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,125,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,126,"                return arrangeRF(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,128,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,129,"                return arrangeRR(container, g2, constraint);   ",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,132,"        throw new IllegalArgumentException(""Unknown LengthConstraintType."");",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,149,        List blocks = container.getBlocks();,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,150,        Block b = (Block) blocks.get(0);,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,151,"        Size2D s = b.arrange(g2, RectangleConstraint.NONE);",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,152,        double width = constraint.getWidth();,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,153,"        Rectangle2D bounds = new Rectangle2D.Double((width - s.width) / 2.0, ",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,155,        b.setBounds(bounds);,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,156,"        return new Size2D((width - s.width) / 2.0, s.height);  ",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,172,"        Size2D s = arrangeFN(container, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,173,        if (constraint.getHeightRange().contains(s.height)) {,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,174,            return s;   ,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,177,            RectangleConstraint c = constraint.toFixedHeight(,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,179,"            return arrangeFF(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,197,"        return arrangeFN(container, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,215,"        Size2D s1 = arrangeNN(container, g2);",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,216,        if (constraint.getWidthRange().contains(s1.width)) {,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,217,            return s1;  // TODO: we didn't check the height yet,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,220,            RectangleConstraint c = constraint.toFixedWidth(,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,222,"            return arrangeFR(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,239,"        Size2D s = arrangeNF(container, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,240,        if (constraint.getWidthRange().contains(s.width)) {,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,241,            return s;   ,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,244,            RectangleConstraint c = constraint.toFixedWidth(,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,246,"            return arrangeFF(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,264,"        Size2D s1 = arrangeNN(container, g2);",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,265,        if (constraint.getWidthRange().contains(s1.width)) {,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,266,            return s1;   ,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,269,            RectangleConstraint c = constraint.toFixedWidth(,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,271,"            return arrangeFN(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,305,"        return arrangeNN(container, g2);",0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,313,    },0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,323,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,324,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,326,        if (!(obj instanceof CenterArrangement)) {,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,327,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/CenterArrangement,26,329,        return true;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,132,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,133,"                return arrangeNN(container, g2);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,135,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,136,"                return arrangeNF(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,138,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,139,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,143,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,144,"                return arrangeFN(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,146,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,147,"                return arrangeFF(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,149,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,150,"                return arrangeFR(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,155,"                return arrangeRN(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,158,"                return arrangeRF(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,164,"        throw new RuntimeException(""Unrecognised constraint type."");",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,181,        List blocks = container.getBlocks();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,182,        double width = constraint.getWidth();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,184,        double x = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,185,        double y = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,186,        double maxHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,187,        List itemsInRow = new ArrayList();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,188,        for (int i = 0; i < blocks.size(); i++) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,189,            Block block = (Block) blocks.get(i);,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,190,"            Size2D size = block.arrange(g2, RectangleConstraint.NONE);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,191,            if (x + size.width <= width) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,192,                itemsInRow.add(block);,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,193,                block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,196,                x = x + size.width + this.horizontalGap;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,197,"                maxHeight = Math.max(maxHeight, size.height);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,200,                if (itemsInRow.isEmpty()) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,202,                    block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,207,                    x = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,208,                    y = y + size.height + this.verticalGap;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,212,                    itemsInRow.clear();,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,213,                    x = 0.0;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,214,                    y = y + maxHeight + this.verticalGap;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,215,                    maxHeight = size.height;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,216,                    block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,221,                    x = size.width + this.horizontalGap;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,222,                    itemsInRow.add(block);,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,226,"        return new Size2D(constraint.getWidth(), y + maxHeight);  ",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,242,"        Size2D s = arrangeFN(container, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,243,        if (constraint.getHeightRange().contains(s.height)) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,244,            return s;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,247,            RectangleConstraint c = constraint.toFixedHeight(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,250,"            return arrangeFF(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,268,"        return arrangeFN(container, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,291,            RectangleConstraint c = constraint.toFixedWidth(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,294,"            return arrangeFR(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,311,"        Size2D s = arrangeNF(container, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,312,        if (constraint.getWidthRange().contains(s.width)) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,313,            return s;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,316,            RectangleConstraint c = constraint.toFixedWidth(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,319,"            return arrangeFF(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,337,"        Size2D s1 = arrangeNN(container, g2);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,338,        if (constraint.getWidthRange().contains(s1.width)) {,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,339,            return s1;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,342,            RectangleConstraint c = constraint.toFixedWidth(,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,345,"            return arrangeFN(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,387,                    else if (this.verticalAlignment ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,410,"        return arrangeNN(container, g2);",0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,429,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,432,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,436,            return false;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,439,            return false;,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,442,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/FlowArrangement,26,445,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,112,"        this(label, new Font(""SansSerif"", Font.PLAIN, 10), DEFAULT_PAINT);",0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,113,    },0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,122,"        this(text, font, DEFAULT_PAINT);",0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,123,    },0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,149,        return this.font;    ,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,160,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,161,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,163,        this.font = font;,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,164,"        this.label = TextUtilities.createTextBlock(this.text, font, this.paint);",0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,165,    },0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,175,        return this.paint;   ,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,186,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,187,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,189,        this.paint = paint;,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,190,"        this.label = TextUtilities.createTextBlock(this.text, this.font, ",0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,192,    },0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,202,        return this.toolTipText;,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,213,        this.toolTipText = text;   ,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,214,    },0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,224,        return this.urlText;,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,235,        this.urlText = text;   ,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,236,    },0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,261,"        draw(g2, area, null);",0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,262,    },0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,284,            ebp = (EntityBlockParams) params;,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,285,            if (ebp.getGenerateEntities()) {,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,286,                sec = new StandardEntityCollection();,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,287,                entityArea = (Shape) area.clone();,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,296,            if (this.toolTipText != null || this.urlText != null) {,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,297,"                ChartEntity entity = new ChartEntity(entityArea, ",0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,299,                sec.add(entity);,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,300,                result = new BlockResult();,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,301,                result.setEntityCollection(sec);,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,316,        if (!(obj instanceof LabelBlock)) {,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,317,            return false;,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,319,        LabelBlock that = (LabelBlock) obj;,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,320,        if (!this.text.equals(that.text)) {,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,321,            return false;,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,323,        if (!this.font.equals(that.font)) {,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,324,            return false;,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,326,"        if (!PaintUtilities.equal(this.paint, that.paint)) {",0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,327,            return false;,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,329,"        if (!ObjectUtilities.equal(this.toolTipText, that.toolTipText)) {",0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,330,            return false;,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,332,"        if (!ObjectUtilities.equal(this.urlText, that.urlText)) {",0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,333,            return false;,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,335,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,346,        return super.clone();,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,357,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,358,"        SerialUtilities.writePaint(this.paint, stream);",0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,359,    },0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,371,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,372,        this.paint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/block/LabelBlock,26,373,    },0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,104,                this.topBlock = block;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,107,                this.bottomBlock = block;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,112,            else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,113,                this.rightBlock = block;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,140,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,141,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,143,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,144,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,147,        else if (w == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,148,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,149,"                contentSize = arrangeFN(container, g2, constraint.getWidth());  ",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,151,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,152,"                contentSize = arrangeFF(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,154,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,155,"                contentSize = arrangeFR(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,158,        else if (w == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,159,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,160,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,162,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,163,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,165,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,166,                contentSize = arrangeRR(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,190,            Size2D size = this.topBlock.arrange(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,193,            w[0] = size.width;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,194,            h[0] = size.height;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,197,            Size2D size = this.bottomBlock.arrange(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,200,            w[1] = size.width;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,201,            h[1] = size.height;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,211,            Size2D size = this.rightBlock.arrange(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,214,            w[3] = size.width;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,215,            h[3] = size.height;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,232,            this.topBlock.setBounds(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,237,            this.bottomBlock.setBounds(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,247,            this.rightBlock.setBounds(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,273,"        Size2D size1 = arrangeFN(container, g2, constraint.getWidth());",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,274,        if (constraint.getHeightRange().contains(size1.getHeight())) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,275,            return size1;   ,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,278,            double h = constraint.getHeightRange().constrain(size1.getHeight());,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,279,            RectangleConstraint c2 = constraint.toFixedHeight(h);,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,280,"            return arrange(container, g2, c2);   ",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,296,        double[] w = new double[5];,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,297,        double[] h = new double[5];,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,298,        RectangleConstraint c1 = new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,302,        if (this.topBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,303,"            Size2D size = this.topBlock.arrange(g2, c1);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,304,            w[0] = size.width;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,305,            h[0] = size.height;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,307,        if (this.bottomBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,308,"            Size2D size = this.bottomBlock.arrange(g2, c1);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,309,            w[1] = size.width;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,310,            h[1] = size.height;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,312,        RectangleConstraint c2 = new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,316,        if (this.leftBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,317,"            Size2D size = this.leftBlock.arrange(g2, c2);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,318,            w[2] = size.width;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,319,            h[2] = size.height;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,321,        if (this.rightBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,322,"            double maxW = Math.max(width - w[2], 0.0);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,323,            RectangleConstraint c3 = new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,328,"            Size2D size = this.rightBlock.arrange(g2, c3);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,329,            w[3] = size.width;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,330,            h[3] = size.height;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,333,"        h[2] = Math.max(h[2], h[3]);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,334,        h[3] = h[2];,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,336,        if (this.centerBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,337,            RectangleConstraint c4 = new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,341,"            Size2D size = this.centerBlock.arrange(g2, c4);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,342,            w[4] = size.width;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,343,            h[4] = size.height;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,345,"        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,346,"        return arrange(container, g2, new RectangleConstraint(width, height));",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,363,        double[] w = new double[5];,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,364,        double[] h = new double[5];,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,365,        if (this.topBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,366,            RectangleConstraint c1 = new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,369,"            Size2D size = this.topBlock.arrange(g2, c1);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,370,            w[0] = size.width;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,371,            h[0] = size.height;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,373,        if (this.bottomBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,374,"            Range heightRange2 = Range.shift(heightRange, -h[0], false);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,375,            RectangleConstraint c2 = new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,378,"            Size2D size = this.bottomBlock.arrange(g2, c2);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,379,            w[1] = size.width;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,380,            h[1] = size.height;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,382,"        Range heightRange3 = Range.shift(heightRange, -(h[0] + h[1]));",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,383,        if (this.leftBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,384,            RectangleConstraint c3 = new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,387,"            Size2D size = this.leftBlock.arrange(g2, c3);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,388,            w[2] = size.width;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,389,            h[2] = size.height;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,391,"        Range widthRange2 = Range.shift(widthRange, -w[2], false);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,392,        if (this.rightBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,393,            RectangleConstraint c4 = new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,396,"            Size2D size = this.rightBlock.arrange(g2, c4);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,397,            w[3] = size.width;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,398,            h[3] = size.height;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,401,"        h[2] = Math.max(h[2], h[3]);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,402,        h[3] = h[2];,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,403,"        Range widthRange3 = Range.shift(widthRange, -(w[2] + w[3]), false);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,404,        if (this.centerBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,405,            RectangleConstraint c5 = new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,411,"            Size2D size = this.centerBlock.arrange(g2, c5);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,412,            w[4] = size.width;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,413,            h[4] = size.height;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,415,"        double width = Math.max(w[0], Math.max(w[1], w[2] + w[4] + w[3]));",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,416,"        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,417,        if (this.topBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,418,            this.topBlock.setBounds(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,422,        if (this.bottomBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,423,            this.bottomBlock.setBounds(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,427,        if (this.leftBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,428,            this.leftBlock.setBounds(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,432,        if (this.rightBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,433,            this.rightBlock.setBounds(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,438,        if (this.centerBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,439,            this.centerBlock.setBounds(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,445,"        return new Size2D(width, height);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,459,        double[] w = new double[5];,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,460,        double[] h = new double[5];,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,461,        w[0] = constraint.getWidth();,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,462,        if (this.topBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,463,            RectangleConstraint c1 = new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,468,"            Size2D size = this.topBlock.arrange(g2, c1);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,469,            h[0] = size.height;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,471,        w[1] = w[0];,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,472,        if (this.bottomBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,473,            RectangleConstraint c2 = new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,478,"            Size2D size = this.bottomBlock.arrange(g2, c2);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,479,            h[1] = size.height;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,481,        h[2] = constraint.getHeight() - h[1] - h[0];,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,482,        if (this.leftBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,483,            RectangleConstraint c3 = new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,488,"            Size2D size = this.leftBlock.arrange(g2, c3);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,489,            w[2] = size.width;            ,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,491,        h[3] = h[2];,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,492,        if (this.rightBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,493,            RectangleConstraint c4 = new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,498,"            Size2D size = this.rightBlock.arrange(g2, c4);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,499,            w[3] = size.width;            ,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,501,        h[4] = h[2];,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,502,        w[4] = constraint.getWidth() - w[3] - w[2];,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,503,"        RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,504,        if (this.centerBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,505,"            this.centerBlock.arrange(g2, c5);   ",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,508,        if (this.topBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,509,            this.topBlock.setBounds(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,513,        if (this.bottomBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,514,            this.bottomBlock.setBounds(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,518,        if (this.leftBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,519,            this.leftBlock.setBounds(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,523,        if (this.rightBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,524,            this.rightBlock.setBounds(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,528,        if (this.centerBlock != null) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,529,            this.centerBlock.setBounds(,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,533,"        return new Size2D(constraint.getWidth(), constraint.getHeight());",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,540,        this.centerBlock = null;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,541,        this.topBlock = null;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,542,        this.bottomBlock = null;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,543,        this.leftBlock = null;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,544,        this.rightBlock = null;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,545,    },0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,555,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,556,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,558,        if (!(obj instanceof BorderArrangement)) {,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,559,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,561,        BorderArrangement that = (BorderArrangement) obj;,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,562,"        if (!ObjectUtilities.equal(this.topBlock, that.topBlock)) {",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,563,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,565,"        if (!ObjectUtilities.equal(this.bottomBlock, that.bottomBlock)) {",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,566,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,568,"        if (!ObjectUtilities.equal(this.leftBlock, that.leftBlock)) {",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,569,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,571,"        if (!ObjectUtilities.equal(this.rightBlock, that.rightBlock)) {",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,572,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,574,"        if (!ObjectUtilities.equal(this.centerBlock, that.centerBlock)) {",0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,575,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BorderArrangement,26,577,        return true;,0.0,0,-1,0
org/jfree/chart/block/BlockResult,26,78,        this.entities = entities;,0.0,0,-1,0
org/jfree/chart/block/BlockResult,26,79,    },0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,86,        this(Color.black);    ,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,87,    },0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,95,"        this(new RectangleInsets(1, 1, 1, 1), paint);   ",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,96,    },0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,107,"        this(new RectangleInsets(top, left, bottom, right), Color.black);    ",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,108,    },0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,121,"        this(new RectangleInsets(top, left, bottom, right), paint);    ",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,122,    },0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,132,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,135,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,156,        return this.paint;   ,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,179,"            rect.setRect(x, y, w, t);",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,180,            g2.fill(rect);,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,183,"            rect.setRect(x, y + h - b, w, b);",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,184,            g2.fill(rect);,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,187,"            rect.setRect(x, y, l, h);",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,188,            g2.fill(rect);,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,191,"            rect.setRect(x + w - r, y, r, h);",0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,192,            g2.fill(rect);,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,205,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,208,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,212,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/BlockBorder,26,215,            return false;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,93,"                             double hGap, double vGap) {        ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,94,        this.horizontalAlignment = hAlign;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,95,        this.verticalAlignment = vAlign;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,96,        this.horizontalGap = hGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,97,        this.verticalGap = vGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,98,    },0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,111,    },0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,128,        LengthConstraintType w = constraint.getWidthConstraintType();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,129,        LengthConstraintType h = constraint.getHeightConstraintType();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,130,        if (w == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,131,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,132,"                return arrangeNN(container, g2);  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,134,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,135,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,137,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,138,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,141,        else if (w == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,142,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,143,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,145,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,146,"                return arrangeFF(container, g2, constraint); ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,148,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,149,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,152,        else if (w == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,153,            if (h == LengthConstraintType.NONE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,154,"                throw new RuntimeException(""Not implemented."");  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,156,            else if (h == LengthConstraintType.FIXED) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,157,"                return arrangeRF(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,159,            else if (h == LengthConstraintType.RANGE) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,160,"                return arrangeRR(container, g2, constraint);  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,163,        return new Size2D();  // TODO: complete this,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,182,"        return arrangeNF(container, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,200,        List blocks = container.getBlocks();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,202,        double height = constraint.getHeight();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,203,        if (height <= 0.0) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,204,            height = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,207,        double x = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,208,        double y = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,209,        double maxWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,210,        List itemsInColumn = new ArrayList();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,211,        for (int i = 0; i < blocks.size(); i++) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,212,            Block block = (Block) blocks.get(i);,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,213,"            Size2D size = block.arrange(g2, RectangleConstraint.NONE);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,214,            if (y + size.height <= height) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,215,                itemsInColumn.add(block);,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,216,                block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,219,                y = y + size.height + this.verticalGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,220,"                maxWidth = Math.max(maxWidth, size.width);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,223,                if (itemsInColumn.isEmpty()) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,225,                    block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,230,                    y = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,231,                    x = x + size.width + this.horizontalGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,235,                    itemsInColumn.clear();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,236,                    x = x + maxWidth + this.horizontalGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,237,                    y = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,238,                    maxWidth = size.width;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,239,                    block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,244,                    y = size.height + this.verticalGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,245,                    itemsInColumn.add(block);,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,249,"        return new Size2D(x + maxWidth, constraint.getHeight());  ",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,257,"        Size2D s1 = arrangeNN(container, g2);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,258,        if (constraint.getHeightRange().contains(s1.height)) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,259,            return s1;  // TODO: we didn't check the width yet,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,262,            RectangleConstraint c = constraint.toFixedHeight(,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,265,"            return arrangeRF(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,282,"        Size2D s = arrangeNF(container, g2, constraint);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,283,        if (constraint.getWidthRange().contains(s.width)) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,284,            return s;   ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,287,            RectangleConstraint c = constraint.toFixedWidth(,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,290,"            return arrangeFF(container, g2, c);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,304,        double y = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,305,        double height = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,306,        double maxWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,307,        List blocks = container.getBlocks();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,308,        int blockCount = blocks.size();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,309,        if (blockCount > 0) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,310,            Size2D[] sizes = new Size2D[blocks.size()];,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,311,            for (int i = 0; i < blocks.size(); i++) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,312,                Block block = (Block) blocks.get(i);,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,313,"                sizes[i] = block.arrange(g2, RectangleConstraint.NONE);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,314,                height = height + sizes[i].getHeight();,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,315,"                maxWidth = Math.max(sizes[i].width, maxWidth);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,316,                block.setBounds(,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,321,                y = y + sizes[i].height + this.verticalGap;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,323,            if (blockCount > 1) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,324,                height = height + this.verticalGap * (blockCount - 1);   ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,326,            if (this.horizontalAlignment != HorizontalAlignment.LEFT) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,327,                for (int i = 0; i < blocks.size(); i++) {,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,329,                    if (this.horizontalAlignment ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,333,                    else if (this.horizontalAlignment ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,340,"        return new Size2D(maxWidth, height);",0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,348,    },0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,359,            return true;   ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,362,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,366,            return false;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,369,            return false;,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,372,            return false;   ,0.0,0,-1,0
org/jfree/chart/block/ColumnArrangement,26,375,            return false;   ,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,26,86,        this.items.addAll(collection.items);,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,26,87,    },0.0,0,-1,0
org/jfree/chart/LegendItemCollection,26,115,        return this.items.iterator();,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,26,126,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,26,127,            return true;   ,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,26,129,        if (!(obj instanceof LegendItemCollection)) {,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,26,130,            return false;   ,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,26,132,        LegendItemCollection that = (LegendItemCollection) obj;,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,26,133,        if (!this.items.equals(that.items)) {,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,26,134,            return false;   ,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,26,136,        return true;,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,26,148,        return super.clone();   ,0.0,0,-1,0
org/jfree/chart/ui/Contributor,26,76,        return this.name;,0.0,0,-1,0
org/jfree/chart/ui/Contributor,26,85,        return this.email;,0.0,0,-1,0
org/jfree/chart/ui/Licences,26,814,        return GPL;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,69,        public OptionalLibraryHolder(String libraryClass) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,70,            if (libraryClass == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,71,                throw new NullPointerException(,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,74,            this.libraryClass = libraryClass;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,75,        },0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,82,        public OptionalLibraryHolder(Library library) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,83,          if (library == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,84,"              throw new NullPointerException(""Library must not be null."");",0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,86,          this.library = library;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,87,          this.libraryClass = library.getClass().getName();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,88,        },0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,96,            return this.libraryClass;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,105,            if (this.library == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,106,                this.library = loadLibrary(this.libraryClass);,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,108,            return this.library;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,112,            if (classname == null) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,113,                return null;,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,116,                Class c = ObjectUtilities.getClassLoader(,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,119,"                    Method m = c.getMethod(""getInstance"", (Class[]) null);",0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,120,"                    return (Library) m.invoke(null, (Object[]) null);",0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,122,                catch(Exception e) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,125,                return (Library) c.newInstance();,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,127,            catch (Exception e) {,0.0,0,-1,0
org/jfree/chart/ui/BasicProjectInfo,26,130,                return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,105,        double result = Double.NaN;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,106,        Number n = (Number) this.seriesBarWidthList.get(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,107,        if (n != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,108,            result = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,110,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,121,"        this.seriesBarWidthList.set(series, new Double(width));",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,122,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,141,"        CategoryAxis domainAxis = getDomainAxis(plot, rendererIndex);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,142,        CategoryDataset dataset = plot.getDataset(rendererIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,143,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,144,            int columns = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,145,            int rows = dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,146,            double space = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,147,            PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,148,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,149,                space = dataArea.getHeight();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,151,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,152,                space = dataArea.getWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,154,            double maxWidth = space * getMaximumBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,155,            double categoryMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,156,            if (columns > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,157,                categoryMargin = domainAxis.getCategoryMargin();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,159,            double used = space * (1 - domainAxis.getLowerMargin() ,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,161,            if ((rows * columns) > 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,162,"                state.setBarWidth(Math.min(used / (dataset.getColumnCount()), ",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,166,"                state.setBarWidth(Math.min(used, maxWidth));",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,169,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,196,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,197,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,198,"            drawHorizontalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,201,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,202,"            drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,206,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,232,"        Number dataValue = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,233,        if (dataValue == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,234,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,238,        double value = dataValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,239,        double base = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,240,        double lclip = getLowerClip();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,241,        double uclip = getUpperClip();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,242,"        if (uclip <= 0.0) {  // cases 1, 2, 3 and 4",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,243,            if (value >= uclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,244,                return; // bar is not visible,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,246,            base = uclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,247,            if (value <= lclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,248,                value = lclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,251,"        else if (lclip <= 0.0) { // cases 5, 6, 7 and 8",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,252,            if (value >= uclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,253,                value = uclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,256,                if (value <= lclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,257,                    value = lclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,262,            if (value <= lclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,263,                return; // bar is not visible,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,265,            base = lclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,266,            if (value >= uclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,267,                value = uclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,271,        RectangleEdge edge = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,272,"        double transX1 = rangeAxis.valueToJava2D(base, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,273,"        double transX2 = rangeAxis.valueToJava2D(value, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,274,"        double rectX = Math.min(transX1, transX2);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,275,        double rectWidth = Math.abs(transX2 - transX1);,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,278,"        double rectY = domainAxis.getCategoryMiddle(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,281,        int seriesCount = getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,284,        double shift = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,285,        double rectHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,286,        double widthFactor = 1.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,287,        double seriesBarWidth = getSeriesBarWidth(row);,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,288,        if (!Double.isNaN(seriesBarWidth)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,289,            widthFactor = seriesBarWidth;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,291,        rectHeight = widthFactor * state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,292,        rectY = rectY + (1 - widthFactor) * state.getBarWidth() / 2.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,293,        if (seriesCount > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,294,            shift = rectHeight * 0.20 / (seriesCount - 1);,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,297,"        Rectangle2D bar = new Rectangle2D.Double(rectX, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,301,"        Paint itemPaint = getItemPaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,302,        GradientPaintTransformer t = getGradientPaintTransformer();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,303,        if (t != null && itemPaint instanceof GradientPaint) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,304,"            itemPaint = t.transform((GradientPaint) itemPaint, bar);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,306,        g2.setPaint(itemPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,307,        g2.fill(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,310,        if (isDrawBarOutline() ,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,312,"            Stroke stroke = getItemOutlineStroke(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,313,"            Paint paint = getItemOutlinePaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,314,            if (stroke != null && paint != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,315,                g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,316,                g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,317,                g2.draw(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,321,        CategoryItemLabelGenerator generator ,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,323,"        if (generator != null && isItemLabelVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,324,"            drawItemLabel(g2, dataset, row, column, plot, generator, bar, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,329,        EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,330,        if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,331,"            addItemEntity(entities, dataset, row, column, bar);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,334,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,360,"        Number dataValue = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,361,        if (dataValue == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,362,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,366,"        double rectX = domainAxis.getCategoryMiddle(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,369,        int seriesCount = getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,372,        double value = dataValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,373,        double base = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,374,        double lclip = getLowerClip();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,375,        double uclip = getUpperClip();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,377,"        if (uclip <= 0.0) {  // cases 1, 2, 3 and 4",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,378,            if (value >= uclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,379,                return; // bar is not visible,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,381,            base = uclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,382,            if (value <= lclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,383,                value = lclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,386,"        else if (lclip <= 0.0) { // cases 5, 6, 7 and 8",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,387,            if (value >= uclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,388,                value = uclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,391,                if (value <= lclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,392,                    value = lclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,397,            if (value <= lclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,398,                return; // bar is not visible,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,400,            base = getLowerClip();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,401,            if (value >= uclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,402,               value = uclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,406,        RectangleEdge edge = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,407,"        double transY1 = rangeAxis.valueToJava2D(base, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,408,"        double transY2 = rangeAxis.valueToJava2D(value, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,409,"        double rectY = Math.min(transY2, transY1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,411,        double rectWidth = state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,412,        double rectHeight = Math.abs(transY2 - transY1);,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,415,        double shift = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,416,        rectWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,417,        double widthFactor = 1.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,418,        double seriesBarWidth = getSeriesBarWidth(row);,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,419,        if (!Double.isNaN(seriesBarWidth)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,420,            widthFactor = seriesBarWidth;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,422,        rectWidth = widthFactor * state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,423,        rectX = rectX + (1 - widthFactor) * state.getBarWidth() / 2.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,424,        if (seriesCount > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,426,            shift = rectWidth * 0.20 / (seriesCount - 1);,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,429,        Rectangle2D bar = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,432,"        Paint itemPaint = getItemPaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,433,        GradientPaintTransformer t = getGradientPaintTransformer();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,434,        if (t != null && itemPaint instanceof GradientPaint) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,435,"            itemPaint = t.transform((GradientPaint) itemPaint, bar);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,437,        g2.setPaint(itemPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,438,        g2.fill(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,441,        if (isDrawBarOutline() ,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,443,"            Stroke stroke = getItemOutlineStroke(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,444,"            Paint paint = getItemOutlinePaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,445,            if (stroke != null && paint != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,446,                g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,447,                g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,448,                g2.draw(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,453,"        double transX1 = rangeAxis.valueToJava2D(base, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,454,"        double transX2 = rangeAxis.valueToJava2D(value, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,456,        CategoryItemLabelGenerator generator ,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,458,"        if (generator != null && isItemLabelVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,459,"            drawItemLabel(g2, dataset, row, column, plot, generator, bar, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,464,        EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,465,        if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,466,"            addItemEntity(entities, dataset, row, column, bar);",0.0,0,-1,0
org/jfree/chart/renderer/category/LayeredBarRenderer,26,468,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,228,        this.base = base;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,229,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,230,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,241,        return this.itemMargin;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,255,        this.itemMargin = percent;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,256,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,257,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,279,        this.drawBarOutline = draw;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,280,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,281,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,292,        return this.maximumBarWidth;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,305,        this.maximumBarWidth = percent;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,306,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,307,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,317,        return this.minimumBarLength;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,344,        return this.gradientPaintTransformer;    ,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,370,        return this.positiveItemLabelPositionFallback;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,397,        return this.negativeItemLabelPositionFallback;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,428,        return this.includeBaseInRange;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,458,        return this.lowerClip;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,469,        return this.upperClip;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,491,"        CategoryItemRendererState state = super.initialise(g2, dataArea, plot, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,495,        ValueAxis rangeAxis = plot.getRangeAxisForDataset(rendererIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,496,        this.lowerClip = rangeAxis.getRange().getLowerBound();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,497,        this.upperClip = rangeAxis.getRange().getUpperBound();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,500,"        calculateBarWidth(plot, dataArea, rendererIndex, state);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,502,        return state;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,519,"        CategoryAxis domainAxis = getDomainAxis(plot, rendererIndex);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,520,        CategoryDataset dataset = plot.getDataset(rendererIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,521,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,522,            int columns = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,523,            int rows = dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,524,            double space = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,525,            PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,526,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,527,                space = dataArea.getHeight();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,529,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,530,                space = dataArea.getWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,532,            double maxWidth = space * getMaximumBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,533,            double categoryMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,534,            double currentItemMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,535,            if (columns > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,536,                categoryMargin = domainAxis.getCategoryMargin();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,538,            if (rows > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,539,                currentItemMargin = getItemMargin();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,541,            double used = space * (1 - domainAxis.getLowerMargin() ,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,544,            if ((rows * columns) > 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,545,"                state.setBarWidth(Math.min(used / (rows * columns), maxWidth));",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,548,"                state.setBarWidth(Math.min(used, maxWidth));",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,551,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,576,        double space = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,577,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,578,            space = dataArea.getHeight();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,581,            space = dataArea.getWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,583,"        double barW0 = domainAxis.getCategoryStart(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,585,        int seriesCount = getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,586,        int categoryCount = getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,587,        if (seriesCount > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,588,            double seriesGap = space * getItemMargin() ,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,590,"            double seriesW = calculateSeriesWidth(space, domainAxis, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,592,            barW0 = barW0 + row * (seriesW + seriesGap) ,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,594,        },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,596,"            barW0 = domainAxis.getCategoryMiddle(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,600,        return barW0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,612,        double lclip = getLowerClip();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,613,        double uclip = getUpperClip();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,614,"        double barLow = Math.min(this.base, value);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,615,"        double barHigh = Math.max(this.base, value);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,616,        if (barHigh < lclip) {  // bar is not visible,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,617,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,619,        if (barLow > uclip) {   // bar is not visible,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,620,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,622,"        barLow = Math.max(barLow, lclip);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,623,"        barHigh = Math.min(barHigh, uclip);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,624,"        return new double[] {barLow, barHigh};",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,660,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,665,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,674,            toolTipText = getLegendItemToolTipGenerator().generateLabel(,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,679,"            urlText = getLegendItemURLGenerator().generateLabel(dataset, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,727,"        Number dataValue = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,728,        if (dataValue == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,729,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,732,        double value = dataValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,734,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,735,"        double barW0 = calculateBarW0(plot, orientation, dataArea, domainAxis, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,737,        double[] barL0L1 = calculateBarL0L1(value);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,738,        if (barL0L1 == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,739,            return;  // the bar is not visible,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,742,        RectangleEdge edge = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,743,"        double transL0 = rangeAxis.valueToJava2D(barL0L1[0], dataArea, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,744,"        double transL1 = rangeAxis.valueToJava2D(barL0L1[1], dataArea, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,745,"        double barL0 = Math.min(transL0, transL1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,746,"        double barLength = Math.max(Math.abs(transL1 - transL0), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,750,        Rectangle2D bar = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,751,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,752,"            bar = new Rectangle2D.Double(barL0, barW0, barLength, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,756,"            bar = new Rectangle2D.Double(barW0, barL0, state.getBarWidth(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,759,"        Paint itemPaint = getItemPaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,760,        GradientPaintTransformer t = getGradientPaintTransformer();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,761,        if (t != null && itemPaint instanceof GradientPaint) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,762,"            itemPaint = t.transform((GradientPaint) itemPaint, bar);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,764,        g2.setPaint(itemPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,765,        g2.fill(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,768,        if (isDrawBarOutline() ,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,770,"            Stroke stroke = getItemOutlineStroke(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,771,"            Paint paint = getItemOutlinePaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,772,            if (stroke != null && paint != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,773,                g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,774,                g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,775,                g2.draw(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,779,        CategoryItemLabelGenerator generator ,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,781,"        if (generator != null && isItemLabelVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,782,"            drawItemLabel(g2, dataset, row, column, plot, generator, bar, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,787,        EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,788,        if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,789,"            addItemEntity(entities, dataset, row, column, bar);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,792,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,806,        double factor = 1.0 - getItemMargin() - axis.getLowerMargin() ,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,808,        if (categories > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,809,            factor = factor - axis.getCategoryMargin();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,811,        return (space * factor) / (categories * series);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,836,"        String label = generator.generateLabel(data, row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,837,        if (label == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,838,            return;  // nothing to do   ,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,841,"        Font labelFont = getItemLabelFont(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,842,        g2.setFont(labelFont);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,843,"        Paint paint = getItemLabelPaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,844,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,847,        ItemLabelPosition position = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,848,        if (!negative) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,849,"            position = getPositiveItemLabelPosition(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,852,"            position = getNegativeItemLabelPosition(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,856,        Point2D anchorPoint = calculateLabelAnchorPoint(,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,859,        if (isInternalAnchor(position.getItemLabelAnchor())) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,860,"            Shape bounds = TextUtilities.calculateRotatedStringBounds(label, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,865,            if (bounds != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,866,                if (!bar.contains(bounds.getBounds2D())) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,867,                    if (!negative) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,868,                        position = getPositiveItemLabelPositionFallback();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,871,                        position = getNegativeItemLabelPositionFallback();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,873,                    if (position != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,874,                        anchorPoint = calculateLabelAnchorPoint(,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,883,        if (position != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,884,"            TextUtilities.drawRotatedString(label, g2, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,889,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,904,        Point2D result = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,905,        double offset = getItemLabelAnchorOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,906,        double x0 = bar.getX() - offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,907,        double x1 = bar.getX();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,908,        double x2 = bar.getX() + offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,909,        double x3 = bar.getCenterX();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,910,        double x4 = bar.getMaxX() - offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,911,        double x5 = bar.getMaxX();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,912,        double x6 = bar.getMaxX() + offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,914,        double y0 = bar.getMaxY() + offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,915,        double y1 = bar.getMaxY();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,916,        double y2 = bar.getMaxY() - offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,917,        double y3 = bar.getCenterY();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,918,        double y4 = bar.getMinY() + offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,919,        double y5 = bar.getMinY();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,920,        double y6 = bar.getMinY() - offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,922,        if (anchor == ItemLabelAnchor.CENTER) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,923,"            result = new Point2D.Double(x3, y3);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,925,        else if (anchor == ItemLabelAnchor.INSIDE1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,926,"            result = new Point2D.Double(x4, y4);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,928,        else if (anchor == ItemLabelAnchor.INSIDE2) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,929,"            result = new Point2D.Double(x4, y4);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,931,        else if (anchor == ItemLabelAnchor.INSIDE3) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,932,"            result = new Point2D.Double(x4, y3);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,934,        else if (anchor == ItemLabelAnchor.INSIDE4) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,935,"            result = new Point2D.Double(x4, y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,937,        else if (anchor == ItemLabelAnchor.INSIDE5) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,938,"            result = new Point2D.Double(x4, y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,940,        else if (anchor == ItemLabelAnchor.INSIDE6) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,941,"            result = new Point2D.Double(x3, y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,943,        else if (anchor == ItemLabelAnchor.INSIDE7) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,944,"            result = new Point2D.Double(x2, y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,946,        else if (anchor == ItemLabelAnchor.INSIDE8) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,947,"            result = new Point2D.Double(x2, y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,949,        else if (anchor == ItemLabelAnchor.INSIDE9) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,950,"            result = new Point2D.Double(x2, y3);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,952,        else if (anchor == ItemLabelAnchor.INSIDE10) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,953,"            result = new Point2D.Double(x2, y4);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,955,        else if (anchor == ItemLabelAnchor.INSIDE11) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,956,"            result = new Point2D.Double(x2, y4);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,958,        else if (anchor == ItemLabelAnchor.INSIDE12) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,959,"            result = new Point2D.Double(x3, y4);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,961,        else if (anchor == ItemLabelAnchor.OUTSIDE1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,962,"            result = new Point2D.Double(x5, y6);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,964,        else if (anchor == ItemLabelAnchor.OUTSIDE2) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,965,"            result = new Point2D.Double(x6, y5);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,967,        else if (anchor == ItemLabelAnchor.OUTSIDE3) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,968,"            result = new Point2D.Double(x6, y3);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,970,        else if (anchor == ItemLabelAnchor.OUTSIDE4) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,971,"            result = new Point2D.Double(x6, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,973,        else if (anchor == ItemLabelAnchor.OUTSIDE5) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,974,"            result = new Point2D.Double(x5, y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,976,        else if (anchor == ItemLabelAnchor.OUTSIDE6) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,977,"            result = new Point2D.Double(x3, y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,979,        else if (anchor == ItemLabelAnchor.OUTSIDE7) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,980,"            result = new Point2D.Double(x1, y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,982,        else if (anchor == ItemLabelAnchor.OUTSIDE8) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,983,"            result = new Point2D.Double(x0, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,985,        else if (anchor == ItemLabelAnchor.OUTSIDE9) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,986,"            result = new Point2D.Double(x0, y3);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,988,        else if (anchor == ItemLabelAnchor.OUTSIDE10) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,989,"            result = new Point2D.Double(x0, y5);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,991,        else if (anchor == ItemLabelAnchor.OUTSIDE11) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,992,"            result = new Point2D.Double(x1, y6);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,994,        else if (anchor == ItemLabelAnchor.OUTSIDE12) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,995,"            result = new Point2D.Double(x3, y6);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,998,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1010,        return anchor == ItemLabelAnchor.CENTER ,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1035,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1038,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1041,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1045,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1048,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1051,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1054,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1057,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1061,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1065,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer,26,1069,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,224,        return 1;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,251,"            throw new IllegalArgumentException(""Null 'plot' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,271,        CategoryItemLabelGenerator generator = (CategoryItemLabelGenerator),0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,273,        if (generator == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,274,            generator = this.baseItemLabelGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,276,        return generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,289,        return (CategoryItemLabelGenerator) this.itemLabelGeneratorList.get(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,304,"        setSeriesItemLabelGenerator(series, generator, true);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,305,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,321,"        this.itemLabelGeneratorList.set(series, generator);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,322,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,323,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,325,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,335,        return this.baseItemLabelGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,348,"        setBaseItemLabelGenerator(generator, true);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,349,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,364,        this.baseItemLabelGenerator = generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,365,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,366,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,368,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,386,        CategoryToolTipGenerator result = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,387,        result = getSeriesToolTipGenerator(row);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,388,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,389,            result = this.baseToolTipGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,391,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,405,        return (CategoryToolTipGenerator) this.toolTipGeneratorList.get(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,420,"        setSeriesToolTipGenerator(series, generator, true);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,421,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,438,"        this.toolTipGeneratorList.set(series, generator);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,439,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,440,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,442,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,452,        return this.baseToolTipGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,497,        CategoryURLGenerator generator ,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,499,        if (generator == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,500,            generator = this.baseURLGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,502,        return generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,515,        return (CategoryURLGenerator) this.urlGeneratorList.get(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,529,"        setSeriesURLGenerator(series, generator, true);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,530,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,546,"        this.urlGeneratorList.set(series, generator);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,547,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,548,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,550,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,560,        return this.baseURLGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,599,        return this.rowCount;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,609,        return this.columnCount;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,625,        return new CategoryItemRendererState(info);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,649,        setPlot(plot);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,650,        CategoryDataset data = plot.getDataset(rendererIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,651,        if (data != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,652,            this.rowCount = data.getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,653,            this.columnCount = data.getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,656,            this.rowCount = 0;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,657,            this.columnCount = 0;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,659,        return createState(info);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,706,"        plot.drawOutline(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,708,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,731,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,732,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,734,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,735,"            line = new Line2D.Double(dataArea.getMinX(), value,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,738,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,739,"            line = new Line2D.Double(value, dataArea.getMinY(), value,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,743,        Paint paint = plot.getDomainGridlinePaint();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,744,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,745,            paint = CategoryPlot.DEFAULT_GRIDLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,747,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,749,        Stroke stroke = plot.getDomainGridlineStroke();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,750,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,751,            stroke = CategoryPlot.DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,753,        g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,755,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,757,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,778,        Range range = axis.getRange();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,779,        if (!range.contains(value)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,780,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,783,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,784,"        double v = axis.valueToJava2D(value, dataArea, plot.getRangeAxisEdge());",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,785,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,786,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,787,"            line = new Line2D.Double(v, dataArea.getMinY(), v,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,790,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,791,"            line = new Line2D.Double(dataArea.getMinX(), v,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,795,        Paint paint = plot.getRangeGridlinePaint();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,796,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,797,            paint = CategoryPlot.DEFAULT_GRIDLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,799,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,801,        Stroke stroke = plot.getRangeGridlineStroke();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,802,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,803,            stroke = CategoryPlot.DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,805,        g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,807,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,809,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,829,        Comparable category = marker.getKey();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,830,        CategoryDataset dataset = plot.getDataset(plot.getIndexOf(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,831,        int columnIndex = dataset.getColumnIndex(category);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,832,        if (columnIndex < 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,833,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,836,        final Composite savedComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,837,        g2.setComposite(AlphaComposite.getInstance(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,840,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,841,        Rectangle2D bounds = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,842,        if (marker.getDrawAsLine()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,843,"            double v = axis.getCategoryMiddle(columnIndex,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,846,            Line2D line = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,847,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,848,"                line = new Line2D.Double(dataArea.getMinX(), v,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,851,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,852,"                line = new Line2D.Double(v, dataArea.getMinY(), v,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,855,            g2.setPaint(marker.getPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,856,            g2.setStroke(marker.getStroke());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,857,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,858,            bounds = line.getBounds2D();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,859,        },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,861,"            double v0 = axis.getCategoryStart(columnIndex,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,864,"            double v1 = axis.getCategoryEnd(columnIndex,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,867,            Rectangle2D area = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,868,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,869,"                area = new Rectangle2D.Double(dataArea.getMinX(), v0,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,872,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,873,"                area = new Rectangle2D.Double(v0, dataArea.getMinY(),",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,876,            g2.setPaint(marker.getPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,877,            g2.fill(area);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,878,            bounds = area;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,881,        String label = marker.getLabel();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,882,        RectangleAnchor anchor = marker.getLabelAnchor();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,883,        if (label != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,884,            Font labelFont = marker.getLabelFont();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,885,            g2.setFont(labelFont);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,886,            g2.setPaint(marker.getLabelPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,887,            Point2D coordinates = calculateDomainMarkerTextAnchorPoint(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,890,"            TextUtilities.drawAlignedString(label, g2,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,894,        g2.setComposite(savedComposite);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,895,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,915,        if (marker instanceof ValueMarker) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,916,            ValueMarker vm = (ValueMarker) marker;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,917,            double value = vm.getValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,918,            Range range = axis.getRange();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,920,            if (!range.contains(value)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,921,                return;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,924,            final Composite savedComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,925,            g2.setComposite(AlphaComposite.getInstance(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,928,            PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,929,"            double v = axis.valueToJava2D(value, dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,931,            Line2D line = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,932,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,933,"                line = new Line2D.Double(v, dataArea.getMinY(), v,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,936,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,937,"                line = new Line2D.Double(dataArea.getMinX(), v,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,941,            g2.setPaint(marker.getPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,942,            g2.setStroke(marker.getStroke());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,943,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,945,            String label = marker.getLabel();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,946,            RectangleAnchor anchor = marker.getLabelAnchor();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,947,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,948,                Font labelFont = marker.getLabelFont();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,949,                g2.setFont(labelFont);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,950,                g2.setPaint(marker.getLabelPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,951,                Point2D coordinates = calculateRangeMarkerTextAnchorPoint(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,955,"                TextUtilities.drawAlignedString(label, g2,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,959,            g2.setComposite(savedComposite);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,960,        },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,961,        else if (marker instanceof IntervalMarker) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,962,            IntervalMarker im = (IntervalMarker) marker;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,963,            double start = im.getStartValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,964,            double end = im.getEndValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,965,            Range range = axis.getRange();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,966,"            if (!(range.intersects(start, end))) {",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,967,                return;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,970,            final Composite savedComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,971,            g2.setComposite(AlphaComposite.getInstance(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,974,"            double start2d = axis.valueToJava2D(start, dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,976,"            double end2d = axis.valueToJava2D(end, dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,978,"            double low = Math.min(start2d, end2d);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,979,"            double high = Math.max(start2d, end2d);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,981,            PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,982,            Rectangle2D rect = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,983,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,985,"                low = Math.max(low, dataArea.getMinX());",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,986,"                high = Math.min(high, dataArea.getMaxX());",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,987,"                rect = new Rectangle2D.Double(low,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,991,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,993,"                low = Math.max(low, dataArea.getMinY());",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,994,"                high = Math.min(high, dataArea.getMaxY());",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,995,"                rect = new Rectangle2D.Double(dataArea.getMinX(),",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,999,            Paint p = marker.getPaint();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1000,            if (p instanceof GradientPaint) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1001,                GradientPaint gp = (GradientPaint) p;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1002,                GradientPaintTransformer t = im.getGradientPaintTransformer();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1003,                if (t != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1004,"                    gp = t.transform(gp, rect);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1006,                g2.setPaint(gp);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1007,            },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1009,                g2.setPaint(p);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1011,            g2.fill(rect);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1014,            if (im.getOutlinePaint() != null && im.getOutlineStroke() != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1015,                if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1016,                    Line2D line = new Line2D.Double();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1017,                    double x0 = dataArea.getMinX();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1018,                    double x1 = dataArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1019,                    g2.setPaint(im.getOutlinePaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1020,                    g2.setStroke(im.getOutlineStroke());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1021,                    if (range.contains(start)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1022,"                        line.setLine(x0, start2d, x1, start2d);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1023,                        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1025,                    if (range.contains(end)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1026,"                        line.setLine(x0, end2d, x1, end2d);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1027,                        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1029,                },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1031,                    Line2D line = new Line2D.Double();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1032,                    double y0 = dataArea.getMinY();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1033,                    double y1 = dataArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1034,                    g2.setPaint(im.getOutlinePaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1035,                    g2.setStroke(im.getOutlineStroke());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1036,                    if (range.contains(start)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1037,"                        line.setLine(start2d, y0, start2d, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1038,                        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1040,                    if (range.contains(end)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1041,"                        line.setLine(end2d, y0, end2d, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1042,                        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1047,            String label = marker.getLabel();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1048,            RectangleAnchor anchor = marker.getLabelAnchor();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1049,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1050,                Font labelFont = marker.getLabelFont();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1051,                g2.setFont(labelFont);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1052,                g2.setPaint(marker.getLabelPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1053,                Point2D coordinates = calculateRangeMarkerTextAnchorPoint(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1057,"                TextUtilities.drawAlignedString(label, g2,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1061,            g2.setComposite(savedComposite);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1063,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1087,        Rectangle2D anchorRect = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1088,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1089,"            anchorRect = markerOffset.createAdjustedRectangle(markerArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1092,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1093,"            anchorRect = markerOffset.createAdjustedRectangle(markerArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1096,"        return RectangleAnchor.coordinates(anchorRect, anchor);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1121,        Rectangle2D anchorRect = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1122,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1123,"            anchorRect = markerOffset.createAdjustedRectangle(markerArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1126,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1127,"            anchorRect = markerOffset.createAdjustedRectangle(markerArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1130,"        return RectangleAnchor.coordinates(anchorRect, anchor);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1150,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1155,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1164,            toolTipText = this.legendItemToolTipGenerator.generateLabel(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1169,"            urlText = this.legendItemURLGenerator.generateLabel(dataset,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1196,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1199,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1205,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1209,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1213,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1217,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1221,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1225,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1229,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1233,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1237,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1248,        int result = super.hashCode();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1249,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1286,        CategoryItemLabelGenerator generator,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1288,        if (generator != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1289,"            Font labelFont = getItemLabelFont(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1290,"            Paint paint = getItemLabelPaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1291,            g2.setFont(labelFont);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1292,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1293,"            String label = generator.generateLabel(dataset, row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1294,            ItemLabelPosition position = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1295,            if (!negative) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1296,"                position = getPositiveItemLabelPosition(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1299,"                position = getNegativeItemLabelPosition(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1301,            Point2D anchorPoint = calculateLabelAnchorPoint(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1303,"            TextUtilities.drawRotatedString(label, g2,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1309,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1323,        AbstractCategoryItemRenderer clone,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1327,        if (this.itemLabelGeneratorList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1328,            clone.itemLabelGeneratorList,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1332,        if (this.baseItemLabelGenerator != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1333,            if (this.baseItemLabelGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1334,                PublicCloneable pc,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1336,                clone.baseItemLabelGenerator,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1338,            },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1340,                throw new CloneNotSupportedException(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1345,        if (this.toolTipGeneratorList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1346,            clone.toolTipGeneratorList,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1350,        if (this.baseToolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1351,            if (this.baseToolTipGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1352,                PublicCloneable pc,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1354,                clone.baseToolTipGenerator,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1356,            },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1358,                throw new CloneNotSupportedException(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1363,        if (this.urlGeneratorList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1364,            clone.urlGeneratorList = (ObjectList) this.urlGeneratorList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1367,        if (this.baseURLGenerator != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1368,            if (this.baseURLGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1369,                PublicCloneable pc = (PublicCloneable) this.baseURLGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1370,                clone.baseURLGenerator = (CategoryURLGenerator) pc.clone();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1371,            },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1373,                throw new CloneNotSupportedException(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1378,        if (this.legendItemLabelGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1379,            clone.legendItemLabelGenerator = (CategorySeriesLabelGenerator),0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1382,        if (this.legendItemToolTipGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1383,            clone.legendItemToolTipGenerator = (CategorySeriesLabelGenerator),0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1386,        if (this.legendItemURLGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1387,            clone.legendItemURLGenerator = (CategorySeriesLabelGenerator),0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1390,        return clone;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1402,        CategoryAxis result = plot.getDomainAxis(index);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1403,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1404,            result = plot.getDomainAxis();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1406,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1418,        ValueAxis result = plot.getRangeAxis(index);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1419,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1420,            result = plot.getRangeAxis();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1422,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1434,        if (this.plot == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1435,            return new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1437,        LegendItemCollection result = new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1438,        int index = this.plot.getIndexOf(this);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1439,        CategoryDataset dataset = this.plot.getDataset(index);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1440,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1441,            int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1442,            for (int i = 0; i < seriesCount; i++) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1443,                if (isSeriesVisibleInLegend(i)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1444,"                    LegendItem item = getLegendItem(index, i);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1445,                    if (item != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1446,                        result.add(item);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1452,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1476,        if (generator == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1477,"            throw new IllegalArgumentException(""Null 'generator' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1479,        this.legendItemLabelGenerator = generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1480,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1481,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1504,        this.legendItemToolTipGenerator = generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1505,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1506,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1529,        this.legendItemURLGenerator = generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1530,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1531,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1546,        String tip = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1547,"        CategoryToolTipGenerator tipster = getToolTipGenerator(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1548,        if (tipster != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1549,"            tip = tipster.generateToolTip(dataset, row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1551,        String url = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1552,"        CategoryURLGenerator urlster = getURLGenerator(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1553,        if (urlster != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1554,"            url = urlster.generateURL(dataset, row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1556,"        CategoryItemEntity entity = new CategoryItemEntity(hotspot, tip, url,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1558,        entities.add(entity);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,26,1560,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,388,        return isSeriesVisible(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,403,            result = b.booleanValue();   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,418,        return this.seriesVisibleList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,431,"        setSeriesVisible(series, visible, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,432,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,446,"        this.seriesVisibleList.setBoolean(series, visible);       ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,447,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,448,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,450,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,460,        return this.baseSeriesVisible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,473,"        setBaseSeriesVisible(visible, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,474,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,486,        this.baseSeriesVisible = visible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,487,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,488,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,490,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,506,            result = b.booleanValue();   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,524,        return this.seriesVisibleInLegendList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,537,"        setSeriesVisibleInLegend(series, visible, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,538,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,553,"        this.seriesVisibleInLegendList.setBoolean(series, visible);       ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,554,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,555,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,557,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,567,        return this.baseSeriesVisibleInLegend;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,580,"        setBaseSeriesVisibleInLegend(visible, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,581,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,593,        this.baseSeriesVisibleInLegend = visible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,594,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,595,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,597,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,638,            seriesPaint = this.basePaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,654,        return this.paintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,667,"        setSeriesPaint(series, paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,668,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,681,"        this.paintList.setPaint(series, paint);       ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,682,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,683,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,685,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,695,        return this.basePaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,708,"        setBasePaint(paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,709,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,721,        this.basePaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,722,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,723,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,725,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,738,        return this.autoPopulateSeriesPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,752,        this.autoPopulateSeriesPaint = auto;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,753,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,769,        return lookupSeriesFillPaint(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,784,        Paint seriesFillPaint = this.fillPaintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,785,        if (seriesFillPaint == null && this.autoPopulateSeriesFillPaint) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,786,            DrawingSupplier supplier = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,787,            if (supplier != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,788,                seriesFillPaint = supplier.getNextFillPaint();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,789,"                this.fillPaintList.setPaint(series, seriesFillPaint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,792,        if (seriesFillPaint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,793,            seriesFillPaint = this.baseFillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,795,        return seriesFillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,807,        return this.fillPaintList.getPaint(series);    ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,818,"        setSeriesFillPaint(series, paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,819,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,830,"        this.fillPaintList.setPaint(series, paint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,831,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,832,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,834,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,844,        return this.baseFillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,857,"        setBaseFillPaint(paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,858,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,870,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,871,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,873,        this.baseFillPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,874,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,875,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,877,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,891,        return this.autoPopulateSeriesFillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,905,        this.autoPopulateSeriesFillPaint = auto;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,906,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,923,        return lookupSeriesOutlinePaint(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,940,            DrawingSupplier supplier = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,941,            if (supplier != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,942,                seriesOutlinePaint = supplier.getNextOutlinePaint();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,943,"                this.outlinePaintList.setPaint(series, seriesOutlinePaint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,961,        return this.outlinePaintList.getPaint(series);    ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,972,"        setSeriesOutlinePaint(series, paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,973,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,984,"        this.outlinePaintList.setPaint(series, paint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,985,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,986,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,988,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,996,        return this.baseOutlinePaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1007,"        setBaseOutlinePaint(paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1008,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1018,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1019,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1021,        this.baseOutlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1022,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1023,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1025,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1039,        return this.autoPopulateSeriesOutlinePaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1054,        this.autoPopulateSeriesOutlinePaint = auto;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1055,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1088,            DrawingSupplier supplier = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1089,            if (supplier != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1090,                result = supplier.getNextStroke();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1091,"                this.strokeList.setStroke(series, result);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1109,        return this.strokeList.getStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1120,"        setSeriesStroke(series, stroke, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1121,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1132,"        this.strokeList.setStroke(series, stroke);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1133,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1134,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1136,    }    ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1144,        return this.baseStroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1154,"        setBaseStroke(stroke, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1155,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1165,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1166,"            throw new IllegalArgumentException(""Null 'stroke' argument."");   ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1168,        this.baseStroke = stroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1169,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1170,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1172,    }    ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1185,        return this.autoPopulateSeriesStroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1199,        this.autoPopulateSeriesStroke = auto;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1200,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1216,        return lookupSeriesOutlineStroke(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1233,            DrawingSupplier supplier = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1234,            if (supplier != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1235,                result = supplier.getNextOutlineStroke();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1236,"                this.outlineStrokeList.setStroke(series, result);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1254,        return this.outlineStrokeList.getStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1265,"        setSeriesOutlineStroke(series, stroke, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1266,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1278,"        this.outlineStrokeList.setStroke(series, stroke);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1279,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1280,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1282,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1290,        return this.baseOutlineStroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1300,"        setBaseOutlineStroke(stroke, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1301,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1312,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1313,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1315,        this.baseOutlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1316,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1317,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1319,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1333,        return this.autoPopulateSeriesOutlineStroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1348,        this.autoPopulateSeriesOutlineStroke = auto;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1349,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1365,        return lookupSeriesShape(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1389,            result = this.baseShape;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1403,        return this.shapeList.getShape(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1414,"        setSeriesShape(series, shape, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1415,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1426,"        this.shapeList.setShape(series, shape);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1427,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1428,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1430,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1438,        return this.baseShape;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1449,"        setBaseShape(shape, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1450,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1460,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1461,"            throw new IllegalArgumentException(""Null 'shape' argument.""); ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1463,        this.baseShape = shape;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1464,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1465,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1467,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1480,        return this.autoPopulateSeriesShape;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1494,        this.autoPopulateSeriesShape = auto;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1495,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1509,        return isSeriesItemLabelsVisible(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1521,        Boolean b = this.itemLabelsVisibleList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1522,        if (b != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1523,            return b.booleanValue();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1525,        return this.baseItemLabelsVisible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1541,        return this.itemLabelsVisibleList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1551,"        setSeriesItemLabelsVisible(series, Boolean.valueOf(visible));",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1552,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1561,"        setSeriesItemLabelsVisible(series, visible, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1562,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1575,"        this.itemLabelsVisibleList.setBoolean(series, visible);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1576,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1577,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1579,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1587,        return this.baseItemLabelsVisible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1596,"        setBaseItemLabelsVisible(visible, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1597,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1607,        this.baseItemLabelsVisible = visible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1608,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1609,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1611,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1624,        Font result = getSeriesItemLabelFont(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1625,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1626,            result = this.baseItemLabelFont;   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1628,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1639,        return (Font) this.itemLabelFontList.get(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1650,"        setSeriesItemLabelFont(series, font, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1651,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1663,"        this.itemLabelFontList.set(series, font);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1664,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1665,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1667,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1676,        return this.baseItemLabelFont;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1686,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1687,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1689,"        setBaseItemLabelFont(font, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1690,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1701,        this.baseItemLabelFont = font;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1702,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1703,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1705,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1718,        Paint result = getSeriesItemLabelPaint(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1719,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1720,            result = this.baseItemLabelPaint;   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1722,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1733,        return this.itemLabelPaintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1744,"        setSeriesItemLabelPaint(series, paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1745,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1758,"        this.itemLabelPaintList.setPaint(series, paint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1759,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1760,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1762,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1770,        return this.baseItemLabelPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1781,"        setBaseItemLabelPaint(paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1782,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1793,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1794,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1796,        this.baseItemLabelPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1797,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1798,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1800,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1815,        return getSeriesPositiveItemLabelPosition(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1830,        ItemLabelPosition position = (ItemLabelPosition) ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1832,        if (position == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1833,            position = this.basePositiveItemLabelPosition;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1835,        return position;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1850,"        setSeriesPositiveItemLabelPosition(series, position, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1851,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1867,"        this.positiveItemLabelPositionList.set(series, position);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1868,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1869,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1871,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1881,        return this.basePositiveItemLabelPosition;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1908,"            throw new IllegalArgumentException(""Null 'position' argument."");   ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1931,        return getSeriesNegativeItemLabelPosition(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1946,        ItemLabelPosition position = (ItemLabelPosition) ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1948,        if (position == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1949,            position = this.baseNegativeItemLabelPosition;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1951,        return position;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1966,"        setSeriesNegativeItemLabelPosition(series, position, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1967,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1983,"        this.negativeItemLabelPositionList.set(series, position);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1984,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1985,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1987,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,1997,        return this.baseNegativeItemLabelPosition;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2024,"            throw new IllegalArgumentException(""Null 'position' argument."");   ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2040,        return this.itemLabelAnchorOffset;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2051,        this.itemLabelAnchorOffset = offset;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2052,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2053,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2065,        Boolean b = getSeriesCreateEntities(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2066,        if (b != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2067,            return b.booleanValue();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2070,            return this.baseCreateEntities;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2083,        return this.createEntitiesList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2094,"        setSeriesCreateEntities(series, create, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2095,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2108,"        this.createEntitiesList.setBoolean(series, create);       ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2109,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2110,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2112,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2120,        return this.baseCreateEntities;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2132,"        setBaseCreateEntities(create, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2133,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2144,        this.baseCreateEntities = create;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2145,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2146,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2148,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2168,        Point2D result = null;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2169,        if (anchor == ItemLabelAnchor.CENTER) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2170,"            result = new Point2D.Double(x, y);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2172,        else if (anchor == ItemLabelAnchor.INSIDE1) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2173,"            result = new Point2D.Double(x + OPP * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2176,        else if (anchor == ItemLabelAnchor.INSIDE2) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2177,"            result = new Point2D.Double(x + ADJ * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2180,        else if (anchor == ItemLabelAnchor.INSIDE3) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2181,"            result = new Point2D.Double(x + this.itemLabelAnchorOffset, y);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2183,        else if (anchor == ItemLabelAnchor.INSIDE4) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2184,"            result = new Point2D.Double(x + ADJ * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2187,        else if (anchor == ItemLabelAnchor.INSIDE5) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2188,"            result = new Point2D.Double(x + OPP * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2191,        else if (anchor == ItemLabelAnchor.INSIDE6) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2192,"            result = new Point2D.Double(x, y + this.itemLabelAnchorOffset);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2194,        else if (anchor == ItemLabelAnchor.INSIDE7) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2195,"            result = new Point2D.Double(x - OPP * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2198,        else if (anchor == ItemLabelAnchor.INSIDE8) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2199,"            result = new Point2D.Double(x - ADJ * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2202,        else if (anchor == ItemLabelAnchor.INSIDE9) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2203,"            result = new Point2D.Double(x - this.itemLabelAnchorOffset, y);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2205,        else if (anchor == ItemLabelAnchor.INSIDE10) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2206,"            result = new Point2D.Double(x - ADJ * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2209,        else if (anchor == ItemLabelAnchor.INSIDE11) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2210,"            result = new Point2D.Double(x - OPP * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2213,        else if (anchor == ItemLabelAnchor.INSIDE12) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2214,"            result = new Point2D.Double(x, y - this.itemLabelAnchorOffset);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2216,        else if (anchor == ItemLabelAnchor.OUTSIDE1) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2217,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2221,        else if (anchor == ItemLabelAnchor.OUTSIDE2) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2222,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2226,        else if (anchor == ItemLabelAnchor.OUTSIDE3) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2227,"            result = new Point2D.Double(x + 2.0 * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2230,        else if (anchor == ItemLabelAnchor.OUTSIDE4) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2231,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2235,        else if (anchor == ItemLabelAnchor.OUTSIDE5) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2236,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2240,        else if (anchor == ItemLabelAnchor.OUTSIDE6) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2241,"            result = new Point2D.Double(x, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2244,        else if (anchor == ItemLabelAnchor.OUTSIDE7) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2245,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2249,        else if (anchor == ItemLabelAnchor.OUTSIDE8) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2250,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2254,        else if (anchor == ItemLabelAnchor.OUTSIDE9) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2255,"            result = new Point2D.Double(x - 2.0 * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2258,        else if (anchor == ItemLabelAnchor.OUTSIDE10) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2259,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2263,        else if (anchor == ItemLabelAnchor.OUTSIDE11) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2264,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2268,        else if (anchor == ItemLabelAnchor.OUTSIDE12) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2269,"            result = new Point2D.Double(x, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2272,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2282,"            throw new IllegalArgumentException(""Null 'listener' argument."");   ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2294,        if (listener == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2295,"            throw new IllegalArgumentException(""Null 'listener' argument."");   ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2297,"        this.listenerList.remove(RendererChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2298,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2310,        List list = Arrays.asList(this.listenerList.getListenerList());,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2311,        return list.contains(listener);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2341,            if (ls[i] == RendererChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2342,                ((RendererChangeListener) ls[i + 1]).rendererChanged(event);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2356,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2359,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2363,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2366,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2370,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2373,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2376,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2379,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2382,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2385,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2389,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2393,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2396,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2399,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2403,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2408,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2411,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2414,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2418,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2421,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2425,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2429,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2433,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2437,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2441,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2445,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2449,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2453,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2456,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2460,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2463,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2474,        int result = 193; ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2476,        result = 37 * result + ObjectUtilities.hashCode(this.baseStroke);    ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2477,        result = 37 * result + ObjectUtilities.hashCode(this.baseOutlineStroke);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2478,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2490,        AbstractRenderer clone = (AbstractRenderer) super.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2492,        if (this.seriesVisibleList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2493,            clone.seriesVisibleList ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2497,        if (this.seriesVisibleInLegendList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2498,            clone.seriesVisibleInLegendList ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2503,        if (this.paintList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2504,            clone.paintList = (PaintList) this.paintList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2508,        if (this.fillPaintList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2509,            clone.fillPaintList = (PaintList) this.fillPaintList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2512,        if (this.outlinePaintList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2513,            clone.outlinePaintList = (PaintList) this.outlinePaintList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2518,        if (this.strokeList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2519,            clone.strokeList = (StrokeList) this.strokeList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2524,        if (this.outlineStrokeList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2525,            clone.outlineStrokeList ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2530,        if (this.shapeList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2531,            clone.shapeList = (ShapeList) this.shapeList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2533,        if (this.baseShape != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2534,            clone.baseShape = ShapeUtilities.clone(this.baseShape);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2538,        if (this.itemLabelsVisibleList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2539,            clone.itemLabelsVisibleList ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2545,        if (this.itemLabelFontList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2546,            clone.itemLabelFontList ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2552,        if (this.itemLabelPaintList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2553,            clone.itemLabelPaintList ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2559,        if (this.positiveItemLabelPositionList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2560,            clone.positiveItemLabelPositionList ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2566,        if (this.negativeItemLabelPositionList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2567,            clone.negativeItemLabelPositionList ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2572,        if (this.createEntitiesList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2573,            clone.createEntitiesList ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2576,        clone.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2577,        clone.event = null;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,26,2578,        return clone;,0.0,0,-1,0
org/jfree/chart/renderer/category/CategoryItemRendererState,26,69,        super(info);,0.0,0,-1,0
org/jfree/chart/renderer/category/CategoryItemRendererState,26,70,        this.barWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/CategoryItemRendererState,26,71,        this.seriesRunningTotal = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/CategoryItemRendererState,26,72,    },0.0,0,-1,0
org/jfree/chart/renderer/category/CategoryItemRendererState,26,82,        return this.barWidth;,0.0,0,-1,0
org/jfree/chart/renderer/category/CategoryItemRendererState,26,94,        this.barWidth = width;,0.0,0,-1,0
org/jfree/chart/renderer/category/CategoryItemRendererState,26,95,    },0.0,0,-1,0
org/jfree/chart/renderer/category/CategoryItemRendererState,26,105,        return this.seriesRunningTotal;    ,0.0,0,-1,0
org/jfree/chart/renderer/category/CategoryItemRendererState,26,117,        this.seriesRunningTotal = total;,0.0,0,-1,0
org/jfree/chart/renderer/category/CategoryItemRendererState,26,118,    },0.0,0,-1,0
org/jfree/chart/renderer/RendererState,26,64,    public RendererState(PlotRenderingInfo info) {,0.0,0,-1,0
org/jfree/chart/renderer/RendererState,26,65,        this.info = info;,0.0,0,-1,0
org/jfree/chart/renderer/RendererState,26,66,    },0.0,0,-1,0
org/jfree/chart/renderer/RendererState,26,74,        return this.info;,0.0,0,-1,0
org/jfree/chart/renderer/RendererState,26,85,        EntityCollection result = null;,0.0,0,-1,0
org/jfree/chart/renderer/RendererState,26,86,        if (this.info != null) {,0.0,0,-1,0
org/jfree/chart/renderer/RendererState,26,87,            ChartRenderingInfo owner = this.info.getOwner();,0.0,0,-1,0
org/jfree/chart/renderer/RendererState,26,88,            if (owner != null) {,0.0,0,-1,0
org/jfree/chart/renderer/RendererState,26,89,                result = owner.getEntityCollection(); ,0.0,0,-1,0
org/jfree/chart/renderer/RendererState,26,92,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,97,            return true;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,100,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,26,122,            result = PlotOrientation.HORIZONTAL;,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,82,"        this(key, Color.gray, new BasicStroke(1.0f));    ",0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,83,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,93,"        this(key, paint, stroke, paint, stroke, 1.0f);",0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,94,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,109,"        super(paint, stroke, outlinePaint, outlineStroke, alpha);",0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,74,    private boolean drawAsLine = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,110,        this.key = key;,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,111,        setLabelOffsetType(LengthAdjustmentType.EXPAND);,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,112,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,120,        return this.key;   ,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,132,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,133,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,135,        this.key = key;,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,136,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,137,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,146,        return this.drawAsLine;   ,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,157,        this.drawAsLine = drawAsLine;,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,158,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,159,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,169,        if (obj == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,170,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,172,        if (!(obj instanceof CategoryMarker)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,173,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,175,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,176,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,178,        CategoryMarker that = (CategoryMarker) obj;,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,179,        if (!this.key.equals(that.key)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,180,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,182,        if (this.drawAsLine != that.drawAsLine) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,183,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryMarker,26,185,        return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,101,        if (map == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,102,"            throw new IllegalArgumentException(""Null 'map' argument."");   ",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,104,        this.seriesToGroupMap = map;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,105,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,106,    },0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,139,        CategoryAxis xAxis = plot.getDomainAxisForDataset(rendererIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,140,        CategoryDataset data = plot.getDataset(rendererIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,141,        if (data != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,142,            PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,143,            double space = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,144,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,145,                space = dataArea.getHeight();,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,147,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,148,                space = dataArea.getWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,150,            double maxWidth = space * getMaximumBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,151,            int groups = this.seriesToGroupMap.getGroupCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,152,            int categories = data.getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,153,            int columns = groups * categories;,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,154,            double categoryMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,155,            double itemMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,156,            if (categories > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,157,                categoryMargin = xAxis.getCategoryMargin();,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,159,            if (groups > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,160,                itemMargin = getItemMargin();   ,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,163,            double used = space * (1 - xAxis.getLowerMargin() ,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,166,            if (columns > 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,167,"                state.setBarWidth(Math.min(used / columns, maxWidth));",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,170,"                state.setBarWidth(Math.min(used, maxWidth));",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,174,    },0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,199,        double space = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,200,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,201,            space = dataArea.getHeight();,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,204,            space = dataArea.getWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,206,        double barW0 = domainAxis.getCategoryStart(,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,209,        int groupCount = this.seriesToGroupMap.getGroupCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,210,        int groupIndex = this.seriesToGroupMap.getGroupIndex(,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,213,        int categoryCount = getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,214,        if (groupCount > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,215,            double groupGap = space * getItemMargin() ,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,217,            double groupW = calculateSeriesWidth(,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,220,            barW0 = barW0 + groupIndex * (groupW + groupGap) ,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,222,        },0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,224,            barW0 = domainAxis.getCategoryMiddle(,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,228,        return barW0;,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,257,"        Number dataValue = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,258,        if (dataValue == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,259,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,262,        double value = dataValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,263,        Comparable group ,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,265,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,266,        double barW0 = calculateBarW0(,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,271,        double positiveBase = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,272,        double negativeBase = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,274,        for (int i = 0; i < row; i++) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,275,            if (group.equals(this.seriesToGroupMap.getGroup(,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,277,"                Number v = dataset.getValue(i, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,278,                if (v != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,279,                    double d = v.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,280,                    if (d > 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,281,                        positiveBase = positiveBase + d;,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,284,                        negativeBase = negativeBase + d;,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,292,        RectangleEdge location = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,293,        if (value > 0.0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,294,"            translatedBase = rangeAxis.valueToJava2D(positiveBase, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,296,"            translatedValue = rangeAxis.valueToJava2D(positiveBase + value, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,300,"            translatedBase = rangeAxis.valueToJava2D(negativeBase, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,302,"            translatedValue = rangeAxis.valueToJava2D(negativeBase + value, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,305,"        double barL0 = Math.min(translatedBase, translatedValue);",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,306,"        double barLength = Math.max(Math.abs(translatedValue - translatedBase),",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,309,        Rectangle2D bar = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,310,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,311,"            bar = new Rectangle2D.Double(barL0, barW0, barLength, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,315,"            bar = new Rectangle2D.Double(barW0, barL0, state.getBarWidth(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,318,"        Paint itemPaint = getItemPaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,319,        if (getGradientPaintTransformer() != null ,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,321,            GradientPaint gp = (GradientPaint) itemPaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,322,"            itemPaint = getGradientPaintTransformer().transform(gp, bar);",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,324,        g2.setPaint(itemPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,325,        g2.fill(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,326,        if (isDrawBarOutline() ,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,328,"            g2.setStroke(getItemStroke(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,329,"            g2.setPaint(getItemOutlinePaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,330,            g2.draw(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,333,"        CategoryItemLabelGenerator generator = getItemLabelGenerator(row, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,335,"        if (generator != null && isItemLabelVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,336,"            drawItemLabel(g2, dataset, row, column, plot, generator, bar, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,341,        EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,342,        if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,343,"            addItemEntity(entities, dataset, row, column, bar);",0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,346,    },0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,356,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,357,            return true;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,359,        if (obj instanceof GroupedStackedBarRenderer && super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,360,            GroupedStackedBarRenderer r = (GroupedStackedBarRenderer) obj;,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,361,            if (!r.seriesToGroupMap.equals(this.seriesToGroupMap)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,362,                return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,364,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/GroupedStackedBarRenderer,26,366,        return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,176,        return this.renderAsPercentages;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,189,        this.renderAsPercentages = asPercentages; ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,190,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,191,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,201,        return 2;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,214,"            return new Range(0.0, 1.0);   ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,235,        CategoryAxis xAxis = plot.getDomainAxisForDataset(rendererIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,236,        CategoryDataset data = plot.getDataset(rendererIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,237,        if (data != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,238,            PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,239,            double space = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,240,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,241,                space = dataArea.getHeight();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,243,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,244,                space = dataArea.getWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,246,            double maxWidth = space * getMaximumBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,247,            int columns = data.getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,248,            double categoryMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,249,            if (columns > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,250,                categoryMargin = xAxis.getCategoryMargin();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,253,            double used = space * (1 - xAxis.getLowerMargin() ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,256,            if (columns > 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,257,"                state.setBarWidth(Math.min(used / columns, maxWidth));",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,260,"                state.setBarWidth(Math.min(used, maxWidth));",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,264,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,292,"        Number dataValue = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,293,        if (dataValue == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,294,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,297,        double value = dataValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,298,        double total = 0.0;  // only needed if calculating percentages,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,299,        if (this.renderAsPercentages) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,300,"            total = DataUtilities.calculateColumnTotal(dataset, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,301,            value = value / total;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,304,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,305,"        double barW0 = domainAxis.getCategoryMiddle(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,309,        double positiveBase = getBase();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,310,        double negativeBase = positiveBase;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,312,        for (int i = 0; i < row; i++) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,313,"            Number v = dataset.getValue(i, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,314,            if (v != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,315,                double d = v.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,316,                if (this.renderAsPercentages) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,317,                    d = d / total;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,319,                if (d > 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,320,                    positiveBase = positiveBase + d;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,323,                    negativeBase = negativeBase + d;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,330,        RectangleEdge location = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,331,        if (value >= 0.0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,332,"            translatedBase = rangeAxis.valueToJava2D(positiveBase, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,334,"            translatedValue = rangeAxis.valueToJava2D(positiveBase + value, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,338,"            translatedBase = rangeAxis.valueToJava2D(negativeBase, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,340,"            translatedValue = rangeAxis.valueToJava2D(negativeBase + value, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,343,"        double barL0 = Math.min(translatedBase, translatedValue);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,344,"        double barLength = Math.max(Math.abs(translatedValue - translatedBase),",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,347,        Rectangle2D bar = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,348,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,349,"            bar = new Rectangle2D.Double(barL0, barW0, barLength, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,353,"            bar = new Rectangle2D.Double(barW0, barL0, state.getBarWidth(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,356,        if (pass == 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,357,"            Paint itemPaint = getItemPaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,358,            GradientPaintTransformer t = getGradientPaintTransformer();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,359,            if (t != null && itemPaint instanceof GradientPaint) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,360,"                itemPaint = t.transform((GradientPaint) itemPaint, bar);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,362,            g2.setPaint(itemPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,363,            g2.fill(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,364,            if (isDrawBarOutline() ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,366,"                g2.setStroke(getItemOutlineStroke(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,367,"                g2.setPaint(getItemOutlinePaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,368,                g2.draw(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,372,            EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,373,            if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,374,"                addItemEntity(entities, dataset, row, column, bar);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,376,        },0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,377,        else if (pass == 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,378,"            CategoryItemLabelGenerator generator = getItemLabelGenerator(row, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,380,"            if (generator != null && isItemLabelVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,381,"                drawItemLabel(g2, dataset, row, column, plot, generator, bar, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,385,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,395,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,396,            return true;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,398,        if (!(obj instanceof StackedBarRenderer)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,399,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,401,        StackedBarRenderer that = (StackedBarRenderer) obj;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,402,        if (this.renderAsPercentages != that.renderAsPercentages) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,403,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer,26,405,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,131,         if (dataset instanceof IntervalCategoryDataset) {,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,132,             IntervalCategoryDataset d = (IntervalCategoryDataset) dataset;,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,133,"             drawInterval(g2, state, dataArea, plot, domainAxis, rangeAxis, ",0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,135,         },0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,137,"             super.drawItem(g2, state, dataArea, plot, domainAxis, rangeAxis, ",0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,141,     },0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,166,        int seriesCount = getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,167,        int categoryCount = getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,169,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,171,        double rectX = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,172,        double rectY = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,174,        RectangleEdge domainAxisLocation = plot.getDomainAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,175,        RectangleEdge rangeAxisLocation = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,178,"        Number value0 = dataset.getEndValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,179,        if (value0 == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,180,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,182,        double java2dValue0 = rangeAxis.valueToJava2D(,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,187,"        Number value1 = dataset.getStartValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,188,        if (value1 == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,189,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,191,        double java2dValue1 = rangeAxis.valueToJava2D(,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,194,        if (java2dValue1 < java2dValue0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,195,            double temp = java2dValue1;,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,196,            java2dValue1 = java2dValue0;,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,197,            java2dValue0 = temp;,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,198,            Number tempNum = value1;,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,199,            value1 = value0;,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,200,            value0 = tempNum;,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,204,        double rectWidth = state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,207,        double rectHeight = Math.abs(java2dValue1 - java2dValue0);,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,209,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,211,            rectY = domainAxis.getCategoryStart(,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,214,            if (seriesCount > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,215,                double seriesGap = dataArea.getHeight() * getItemMargin(),0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,217,                rectY = rectY + row * (state.getBarWidth() + seriesGap);,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,218,            },0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,220,                rectY = rectY + row * state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,223,            rectX = java2dValue0;,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,225,            rectHeight = state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,226,            rectWidth = Math.abs(java2dValue1 - java2dValue0);,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,229,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,231,"            rectX = domainAxis.getCategoryStart(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,234,            if (seriesCount > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,235,                double seriesGap = dataArea.getWidth() * getItemMargin(),0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,237,                rectX = rectX + row * (state.getBarWidth() + seriesGap);,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,238,            },0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,240,                rectX = rectX + row * state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,243,            rectY = java2dValue0;,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,246,"        Rectangle2D bar = new Rectangle2D.Double(rectX, rectY, rectWidth, ",0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,248,"        Paint seriesPaint = getItemPaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,249,        g2.setPaint(seriesPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,250,        g2.fill(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,253,        if (state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,254,"            Stroke stroke = getItemOutlineStroke(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,255,"            Paint paint = getItemOutlinePaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,256,            if (stroke != null && paint != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,257,                g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,258,                g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,259,                g2.draw(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,263,"        CategoryItemLabelGenerator generator = getItemLabelGenerator(row,",0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,265,"        if (generator != null && isItemLabelVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,266,"            drawItemLabel(g2, dataset, row, column, plot, generator, bar, ",0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,271,        EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,272,        if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,273,"            addItemEntity(entities, dataset, row, column, bar);",0.0,0,-1,0
org/jfree/chart/renderer/category/IntervalBarRenderer,26,276,    },0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,128,        return this.completePaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,140,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,141,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,143,        this.completePaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,144,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,145,    },0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,155,        return this.incompletePaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,167,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,168,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,170,        this.incompletePaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,171,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,172,    },0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,183,        return this.startPercent;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,195,        this.startPercent = percent;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,196,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,197,    },0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,208,        return this.endPercent;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,220,        this.endPercent = percent;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,221,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,222,    },0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,249,         if (dataset instanceof GanttCategoryDataset) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,250,             GanttCategoryDataset gcd = (GanttCategoryDataset) dataset;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,251,"             drawTasks(g2, state, dataArea, plot, domainAxis, rangeAxis, gcd, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,253,         },0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,255,"             super.drawItem(g2, state, dataArea, plot, domainAxis, rangeAxis, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,259,     },0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,284,"        int count = dataset.getSubIntervalCount(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,285,        if (count == 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,286,"            drawTask(g2, state, dataArea, plot, domainAxis, rangeAxis, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,290,        for (int subinterval = 0; subinterval < count; subinterval++) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,292,            RectangleEdge rangeAxisLocation = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,295,"            Number value0 = dataset.getStartValue(row, column, subinterval);",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,296,            if (value0 == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,297,                return;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,299,            double translatedValue0 = rangeAxis.valueToJava2D(,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,303,"            Number value1 = dataset.getEndValue(row, column, subinterval);",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,304,            if (value1 == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,305,                return;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,307,            double translatedValue1 = rangeAxis.valueToJava2D(,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,310,            if (translatedValue1 < translatedValue0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,311,                double temp = translatedValue1;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,312,                translatedValue1 = translatedValue0;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,313,                translatedValue0 = temp;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,316,"            double rectStart = calculateBarW0(plot, plot.getOrientation(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,318,            double rectLength = Math.abs(translatedValue1 - translatedValue0);,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,319,            double rectBreadth = state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,322,            Rectangle2D bar = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,324,            if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,325,"                bar = new Rectangle2D.Double(translatedValue0, rectStart, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,328,            else if (plot.getOrientation() == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,329,"                bar = new Rectangle2D.Double(rectStart, translatedValue0, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,333,            Rectangle2D completeBar = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,334,            Rectangle2D incompleteBar = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,335,"            Number percent = dataset.getPercentComplete(row, column, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,337,            double start = getStartPercent();,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,338,            double end = getEndPercent();,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,339,            if (percent != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,340,                double p = percent.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,341,                if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,342,"                    completeBar = new Rectangle2D.Double(translatedValue0, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,345,                    incompleteBar = new Rectangle2D.Double(translatedValue0 ,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,349,                else if (plot.getOrientation() == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,350,                    completeBar = new Rectangle2D.Double(rectStart + start ,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,354,                    incompleteBar = new Rectangle2D.Double(rectStart + start ,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,361,"            Paint seriesPaint = getItemPaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,362,            g2.setPaint(seriesPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,363,            g2.fill(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,364,            if (completeBar != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,365,                g2.setPaint(getCompletePaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,366,                g2.fill(completeBar);,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,368,            if (incompleteBar != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,369,                g2.setPaint(getIncompletePaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,370,                g2.fill(incompleteBar);,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,372,            if (isDrawBarOutline() ,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,374,"                g2.setStroke(getItemStroke(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,375,"                g2.setPaint(getItemOutlinePaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,376,                g2.draw(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,380,            if (state.getInfo() != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,381,                EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,382,                if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,383,"                    addItemEntity(entities, dataset, row, column, bar);",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,387,    },0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,412,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,414,        RectangleEdge rangeAxisLocation = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,417,"        Number value0 = dataset.getEndValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,418,        if (value0 == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,419,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,421,"        double java2dValue0 = rangeAxis.valueToJava2D(value0.doubleValue(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,425,"        Number value1 = dataset.getStartValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,426,        if (value1 == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,427,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,429,"        double java2dValue1 = rangeAxis.valueToJava2D(value1.doubleValue(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,432,        if (java2dValue1 < java2dValue0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,433,            double temp = java2dValue1;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,434,            java2dValue1 = java2dValue0;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,435,            java2dValue0 = temp;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,436,            Number tempNum = value1;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,437,            value1 = value0;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,438,            value0 = tempNum;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,441,"        double rectStart = calculateBarW0(plot, orientation, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,443,        double rectBreadth = state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,444,        double rectLength = Math.abs(java2dValue1 - java2dValue0);,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,446,        Rectangle2D bar = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,447,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,448,"            bar = new Rectangle2D.Double(java2dValue0, rectStart, rectLength, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,451,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,452,"            bar = new Rectangle2D.Double(rectStart, java2dValue1, rectBreadth, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,456,        Rectangle2D completeBar = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,457,        Rectangle2D incompleteBar = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,458,"        Number percent = dataset.getPercentComplete(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,459,        double start = getStartPercent();,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,460,        double end = getEndPercent();,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,461,        if (percent != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,462,            double p = percent.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,463,            if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,464,"                completeBar = new Rectangle2D.Double(java2dValue0, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,467,                incompleteBar = new Rectangle2D.Double(java2dValue0 ,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,471,            else if (plot.getOrientation() == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,472,                completeBar = new Rectangle2D.Double(rectStart + start ,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,475,                incompleteBar = new Rectangle2D.Double(rectStart + start ,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,482,"        Paint seriesPaint = getItemPaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,483,        g2.setPaint(seriesPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,484,        g2.fill(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,486,        if (completeBar != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,487,            g2.setPaint(getCompletePaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,488,            g2.fill(completeBar);,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,490,        if (incompleteBar != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,491,            g2.setPaint(getIncompletePaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,492,            g2.fill(incompleteBar);,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,496,        if (isDrawBarOutline() ,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,498,"            Stroke stroke = getItemOutlineStroke(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,499,"            Paint paint = getItemOutlinePaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,500,            if (stroke != null && paint != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,501,                g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,502,                g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,503,                g2.draw(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,507,"        CategoryItemLabelGenerator generator = getItemLabelGenerator(row, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,509,"        if (generator != null && isItemLabelVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,510,"            drawItemLabel(g2, dataset, row, column, plot, generator, bar, ",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,515,        EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,516,        if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,517,"            addItemEntity(entities, dataset, row, column, bar);",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,519,    },0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,529,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,530,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,532,        if (!(obj instanceof GanttRenderer)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,533,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,535,        GanttRenderer that = (GanttRenderer) obj;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,536,"        if (!PaintUtilities.equal(this.completePaint, that.completePaint)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,537,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,539,"        if (!PaintUtilities.equal(this.incompletePaint, that.incompletePaint)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,540,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,542,        if (this.startPercent != that.startPercent) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,543,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,545,        if (this.endPercent != that.endPercent) {,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,546,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,548,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,559,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,560,"        SerialUtilities.writePaint(this.completePaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,561,"        SerialUtilities.writePaint(this.incompletePaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,562,    },0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,574,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,575,        this.completePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,576,        this.incompletePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/category/GanttRenderer,26,577,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,150,        return this.artifactPaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,162,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,163,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,165,        this.artifactPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,166,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,167,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,177,        return this.fillBox;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,189,        this.fillBox = flag;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,190,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,191,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,202,        return this.itemMargin;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,214,        this.itemMargin = margin;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,215,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,216,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,230,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,235,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,244,            toolTipText = getLegendItemToolTipGenerator().generateLabel(,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,249,"            urlText = getLegendItemURLGenerator().generateLabel(dataset, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,284,"        CategoryItemRendererState state = super.initialise(g2, dataArea, plot,",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,288,"        CategoryAxis domainAxis = getDomainAxis(plot, rendererIndex);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,289,        CategoryDataset dataset = plot.getDataset(rendererIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,290,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,291,            int columns = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,292,            int rows = dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,293,            double space = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,294,            PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,295,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,296,                space = dataArea.getHeight();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,298,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,299,                space = dataArea.getWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,301,            double categoryMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,302,            double currentItemMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,303,            if (columns > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,304,                categoryMargin = domainAxis.getCategoryMargin();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,306,            if (rows > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,307,                currentItemMargin = getItemMargin();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,309,            double used = space * (1 - domainAxis.getLowerMargin() ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,312,            if ((rows * columns) > 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,313,                state.setBarWidth(used / (dataset.getColumnCount() ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,317,                state.setBarWidth(used);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,321,        return state;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,350,        if (!(dataset instanceof BoxAndWhiskerCategoryDataset)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,351,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,356,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,358,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,359,"            drawHorizontalItem(g2, state, dataArea, plot, domainAxis, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,362,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,363,"            drawVerticalItem(g2, state, dataArea, plot, domainAxis, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,367,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,394,        BoxAndWhiskerCategoryDataset bawDataset ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,397,"        double categoryEnd = domainAxis.getCategoryEnd(column, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,399,"        double categoryStart = domainAxis.getCategoryStart(column, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,401,        double categoryWidth = Math.abs(categoryEnd - categoryStart);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,403,        double yy = categoryStart;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,404,        int seriesCount = getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,405,        int categoryCount = getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,407,        if (seriesCount > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,408,            double seriesGap = dataArea.getWidth() * getItemMargin(),0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,410,            double usedWidth = (state.getBarWidth() * seriesCount) ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,414,            double offset = (categoryWidth - usedWidth) / 2;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,415,            yy = yy + offset + (row * (state.getBarWidth() + seriesGap));,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,416,        } ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,420,            double offset = (categoryWidth - state.getBarWidth()) / 2;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,421,            yy = yy + offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,424,"        Paint p = getItemPaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,425,        if (p != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,426,            g2.setPaint(p);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,428,"        Stroke s = getItemStroke(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,429,        g2.setStroke(s);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,431,        RectangleEdge location = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,433,"        Number xQ1 = bawDataset.getQ1Value(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,434,"        Number xQ3 = bawDataset.getQ3Value(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,435,"        Number xMax = bawDataset.getMaxRegularValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,436,"        Number xMin = bawDataset.getMinRegularValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,438,        Shape box = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,439,        if (xQ1 != null && xQ3 != null && xMax != null && xMin != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,441,"            double xxQ1 = rangeAxis.valueToJava2D(xQ1.doubleValue(), dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,443,"            double xxQ3 = rangeAxis.valueToJava2D(xQ3.doubleValue(), dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,445,"            double xxMax = rangeAxis.valueToJava2D(xMax.doubleValue(), dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,447,"            double xxMin = rangeAxis.valueToJava2D(xMin.doubleValue(), dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,449,            double yymid = yy + state.getBarWidth() / 2.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,452,"            g2.draw(new Line2D.Double(xxMax, yymid, xxQ3, yymid));",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,453,"            g2.draw(new Line2D.Double(xxMax, yy, xxMax, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,457,"            g2.draw(new Line2D.Double(xxMin, yymid, xxQ1, yymid));",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,458,"            g2.draw(new Line2D.Double(xxMin, yy, xxMin,",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,462,"            box = new Rectangle2D.Double(Math.min(xxQ1, xxQ3), yy, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,464,            if (this.fillBox) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,465,                g2.fill(box);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,467,            g2.draw(box);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,471,        g2.setPaint(this.artifactPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,472,        double aRadius = 0;                 // average radius,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,475,"        Number xMean = bawDataset.getMeanValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,476,        if (xMean != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,477,"            double xxMean = rangeAxis.valueToJava2D(xMean.doubleValue(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,479,            aRadius = state.getBarWidth() / 4;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,480,            Ellipse2D.Double avgEllipse = new Ellipse2D.Double(xxMean ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,482,            g2.fill(avgEllipse);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,483,            g2.draw(avgEllipse);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,487,"        Number xMedian = bawDataset.getMedianValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,488,        if (xMedian != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,489,"            double xxMedian = rangeAxis.valueToJava2D(xMedian.doubleValue(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,491,"            g2.draw(new Line2D.Double(xxMedian, yy, xxMedian, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,496,        if (state.getInfo() != null && box != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,497,            EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,498,            if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,499,"                addItemEntity(entities, dataset, row, column, box);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,503,    } ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,530,        BoxAndWhiskerCategoryDataset bawDataset ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,533,"        double categoryEnd = domainAxis.getCategoryEnd(column, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,535,"        double categoryStart = domainAxis.getCategoryStart(column, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,537,        double categoryWidth = categoryEnd - categoryStart;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,539,        double xx = categoryStart;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,540,        int seriesCount = getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,541,        int categoryCount = getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,543,        if (seriesCount > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,544,            double seriesGap = dataArea.getWidth() * getItemMargin() ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,546,            double usedWidth = (state.getBarWidth() * seriesCount) ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,550,            double offset = (categoryWidth - usedWidth) / 2;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,551,            xx = xx + offset + (row * (state.getBarWidth() + seriesGap));,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,552,        } ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,556,            double offset = (categoryWidth - state.getBarWidth()) / 2;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,557,            xx = xx + offset;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,560,        double yyAverage = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,563,"        Paint p = getItemPaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,564,        if (p != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,565,            g2.setPaint(p);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,567,"        Stroke s = getItemStroke(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,568,        g2.setStroke(s);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,570,        double aRadius = 0;                 // average radius,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,572,        RectangleEdge location = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,574,"        Number yQ1 = bawDataset.getQ1Value(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,575,"        Number yQ3 = bawDataset.getQ3Value(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,576,"        Number yMax = bawDataset.getMaxRegularValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,577,"        Number yMin = bawDataset.getMinRegularValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,578,        Shape box = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,579,        if (yQ1 != null && yQ3 != null && yMax != null && yMin != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,581,"            double yyQ1 = rangeAxis.valueToJava2D(yQ1.doubleValue(), dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,583,"            double yyQ3 = rangeAxis.valueToJava2D(yQ3.doubleValue(), dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,585,"            double yyMax = rangeAxis.valueToJava2D(yMax.doubleValue(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,587,"            double yyMin = rangeAxis.valueToJava2D(yMin.doubleValue(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,589,            double xxmid = xx + state.getBarWidth() / 2.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,592,"            g2.draw(new Line2D.Double(xxmid, yyMax, xxmid, yyQ3));",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,593,"            g2.draw(new Line2D.Double(xx, yyMax, xx + state.getBarWidth(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,597,"            g2.draw(new Line2D.Double(xxmid, yyMin, xxmid, yyQ1));",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,598,"            g2.draw(new Line2D.Double(xx, yyMin, xx + state.getBarWidth(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,602,"            box = new Rectangle2D.Double(xx, Math.min(yyQ1, yyQ3), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,604,            if (this.fillBox) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,605,                g2.fill(box);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,607,            g2.draw(box);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,611,        g2.setPaint(this.artifactPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,614,"        Number yMean = bawDataset.getMeanValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,615,        if (yMean != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,616,"            yyAverage = rangeAxis.valueToJava2D(yMean.doubleValue(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,618,            aRadius = state.getBarWidth() / 4;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,619,"            Ellipse2D.Double avgEllipse = new Ellipse2D.Double(xx + aRadius, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,621,            g2.fill(avgEllipse);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,622,            g2.draw(avgEllipse);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,626,"        Number yMedian = bawDataset.getMedianValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,627,        if (yMedian != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,628,"            double yyMedian = rangeAxis.valueToJava2D(yMedian.doubleValue(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,630,"            g2.draw(new Line2D.Double(xx, yyMedian, xx + state.getBarWidth(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,635,        double maxAxisValue = rangeAxis.valueToJava2D(,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,637,        double minAxisValue = rangeAxis.valueToJava2D(,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,640,        g2.setPaint(p);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,643,        double oRadius = state.getBarWidth() / 3;    // outlier radius,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,644,        List outliers = new ArrayList();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,645,        OutlierListCollection outlierListCollection ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,651,"        List yOutliers = bawDataset.getOutliers(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,652,        if (yOutliers != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,653,            for (int i = 0; i < yOutliers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,654,                double outlier = ((Number) yOutliers.get(i)).doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,655,"                Number minOutlier = bawDataset.getMinOutlier(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,656,"                Number maxOutlier = bawDataset.getMaxOutlier(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,657,"                Number minRegular = bawDataset.getMinRegularValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,658,"                Number maxRegular = bawDataset.getMaxRegularValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,659,                if (outlier > maxOutlier.doubleValue()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,660,                    outlierListCollection.setHighFarOut(true);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,662,                else if (outlier < minOutlier.doubleValue()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,663,                    outlierListCollection.setLowFarOut(true);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,665,                else if (outlier > maxRegular.doubleValue()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,666,"                    yyOutlier = rangeAxis.valueToJava2D(outlier, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,668,"                    outliers.add(new Outlier(xx + state.getBarWidth() / 2.0, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,671,                else if (outlier < minRegular.doubleValue()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,672,"                    yyOutlier = rangeAxis.valueToJava2D(outlier, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,674,"                    outliers.add(new Outlier(xx + state.getBarWidth() / 2.0, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,677,                Collections.sort(outliers);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,682,            for (Iterator iterator = outliers.iterator(); iterator.hasNext();) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,683,                Outlier outlier = (Outlier) iterator.next();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,684,                outlierListCollection.add(outlier);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,685,            },0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,687,            for (Iterator iterator = outlierListCollection.iterator(); ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,688,                     iterator.hasNext();) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,689,                OutlierList list = (OutlierList) iterator.next();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,690,                Outlier outlier = list.getAveragedOutlier();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,691,                Point2D point = outlier.getPoint();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,693,                if (list.isMultiple()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,694,"                    drawMultipleEllipse(point, state.getBarWidth(), oRadius, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,698,"                    drawEllipse(point, oRadius, g2);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,700,            },0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,703,            if (outlierListCollection.isHighFarOut()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,704,"                drawHighFarOut(aRadius / 2.0, g2, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,708,            if (outlierListCollection.isLowFarOut()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,709,"                drawLowFarOut(aRadius / 2.0, g2, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,714,        if (state.getInfo() != null && box != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,715,            EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,716,            if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,717,"                addItemEntity(entities, dataset, row, column, box);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,721,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,731,"        Ellipse2D dot = new Ellipse2D.Double(point.getX() + oRadius / 2, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,733,        g2.draw(dot);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,734,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,747,        Ellipse2D dot1 = new Ellipse2D.Double(point.getX() - (boxWidth / 2) ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,749,"        Ellipse2D dot2 = new Ellipse2D.Double(point.getX() + (boxWidth / 2), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,751,        g2.draw(dot1);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,752,        g2.draw(dot2);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,753,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,765,        double side = aRadius * 2;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,766,"        g2.draw(new Line2D.Double(xx - side, m + side, xx + side, m + side));",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,767,"        g2.draw(new Line2D.Double(xx - side, m + side, xx, m));",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,768,"        g2.draw(new Line2D.Double(xx + side, m + side, xx, m));",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,769,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,781,        double side = aRadius * 2;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,782,"        g2.draw(new Line2D.Double(xx - side, m - side, xx + side, m - side));",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,783,"        g2.draw(new Line2D.Double(xx - side, m - side, xx, m));",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,784,"        g2.draw(new Line2D.Double(xx + side, m - side, xx, m));",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,785,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,795,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,796,            return true;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,798,        if (!(obj instanceof BoxAndWhiskerRenderer)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,799,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,801,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,802,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,804,        BoxAndWhiskerRenderer that = (BoxAndWhiskerRenderer) obj;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,805,"        if (!PaintUtilities.equal(this.artifactPaint, that.artifactPaint)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,806,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,808,        if (!(this.fillBox == that.fillBox)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,809,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,811,        if (!(this.itemMargin == that.itemMargin)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,812,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,814,        return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,825,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,826,"        SerialUtilities.writePaint(this.artifactPaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,827,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,839,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,840,        this.artifactPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/category/BoxAndWhiskerRenderer,26,841,    },0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,145,"            throw new IllegalArgumentException(""Null 'firstBarPaint' argument"");",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,148,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,152,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,156,"            throw new IllegalArgumentException(""Null 'lastBarPaint' argument"");",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,185,        return this.firstBarPaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,195,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,196,"            throw new IllegalArgumentException(""Null 'paint' argument"");   ",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,198,        this.firstBarPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,199,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,200,    },0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,208,        return this.lastBarPaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,217,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,218,"            throw new IllegalArgumentException(""Null 'paint' argument"");   ",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,220,        this.lastBarPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,221,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,222,    },0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,230,        return this.positiveBarPaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,239,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,240,"            throw new IllegalArgumentException(""Null 'paint' argument"");   ",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,242,        this.positiveBarPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,243,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,244,    },0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,252,        return this.negativeBarPaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,261,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,262,"            throw new IllegalArgumentException(""Null 'paint' argument"");   ",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,264,        this.negativeBarPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,265,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,266,    },0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,293,        double previous = state.getSeriesRunningTotal();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,294,        if (column == dataset.getColumnCount() - 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,295,            previous = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,297,        double current = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,298,"        Number n = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,299,        if (n != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,300,            current = previous + n.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,302,        state.setSeriesRunningTotal(current);,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,304,        int seriesCount = getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,305,        int categoryCount = getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,306,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,308,        double rectX = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,309,        double rectY = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,311,        RectangleEdge domainAxisLocation = plot.getDomainAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,312,        RectangleEdge rangeAxisLocation = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,315,"        double j2dy0 = rangeAxis.valueToJava2D(previous, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,319,"        double j2dy1 = rangeAxis.valueToJava2D(current, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,322,        double valDiff = current - previous;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,323,        if (j2dy1 < j2dy0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,324,            double temp = j2dy1;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,325,            j2dy1 = j2dy0;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,326,            j2dy0 = temp;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,330,        double rectWidth = state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,333,"        double rectHeight = Math.max(getMinimumBarLength(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,336,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,338,"            rectY = domainAxis.getCategoryStart(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,340,            if (seriesCount > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,341,                double seriesGap = dataArea.getHeight() * getItemMargin(),0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,343,                rectY = rectY + row * (state.getBarWidth() + seriesGap);,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,344,            },0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,346,                rectY = rectY + row * state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,349,            rectX = j2dy0;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,350,            rectHeight = state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,351,"            rectWidth = Math.max(getMinimumBarLength(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,355,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,357,"            rectX = domainAxis.getCategoryStart(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,360,            if (seriesCount > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,361,                double seriesGap = dataArea.getWidth() * getItemMargin(),0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,363,                rectX = rectX + row * (state.getBarWidth() + seriesGap);,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,364,            },0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,366,                rectX = rectX + row * state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,369,            rectY = j2dy0;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,371,"        Rectangle2D bar = new Rectangle2D.Double(rectX, rectY, rectWidth, ",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,373,        Paint seriesPaint = getFirstBarPaint();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,374,        if (column == 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,375,            seriesPaint = getFirstBarPaint();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,377,        else if (column == categoryCount - 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,378,            seriesPaint = getLastBarPaint();    ,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,381,            if (valDiff < 0.0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,382,                seriesPaint = getNegativeBarPaint();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,384,            else if (valDiff > 0.0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,385,                seriesPaint = getPositiveBarPaint();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,388,                seriesPaint = getLastBarPaint();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,391,        if (getGradientPaintTransformer() != null ,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,393,            GradientPaint gp = (GradientPaint) seriesPaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,394,"            seriesPaint = getGradientPaintTransformer().transform(gp, bar);",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,396,        g2.setPaint(seriesPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,397,        g2.fill(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,400,        if (isDrawBarOutline() ,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,402,"            Stroke stroke = getItemOutlineStroke(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,403,"            Paint paint = getItemOutlinePaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,404,            if (stroke != null && paint != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,405,                g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,406,                g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,407,                g2.draw(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,411,        CategoryItemLabelGenerator generator ,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,413,"        if (generator != null && isItemLabelVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,414,"            drawItemLabel(g2, dataset, row, column, plot, generator, bar, ",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,419,        EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,420,        if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,421,"            addItemEntity(entities, dataset, row, column, bar);",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,424,    },0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,435,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,436,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,438,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,439,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,441,        if (!(obj instanceof WaterfallBarRenderer)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,442,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,444,        WaterfallBarRenderer that = (WaterfallBarRenderer) obj;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,445,"        if (!PaintUtilities.equal(this.firstBarPaint, that.firstBarPaint)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,446,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,448,"        if (!PaintUtilities.equal(this.lastBarPaint, that.lastBarPaint)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,449,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,451,"        if (!PaintUtilities.equal(this.positiveBarPaint, ",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,453,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,455,"        if (!PaintUtilities.equal(this.negativeBarPaint, ",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,457,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,459,        return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,471,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,472,"        SerialUtilities.writePaint(this.firstBarPaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,473,"        SerialUtilities.writePaint(this.lastBarPaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,474,"        SerialUtilities.writePaint(this.positiveBarPaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,475,"        SerialUtilities.writePaint(this.negativeBarPaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,476,    },0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,488,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,489,        this.firstBarPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,490,        this.lastBarPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,491,        this.positiveBarPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,492,        this.negativeBarPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/category/WaterfallBarRenderer,26,493,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,243,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,244,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,246,        this.wallPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,247,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,248,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,270,"        Rectangle2D adjusted = new Rectangle2D.Double(dataArea.getX(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,273,"        CategoryItemRendererState state = super.initialise(g2, adjusted, plot, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,275,        return state;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,349,            Rectangle2D adjusted = new Rectangle2D.Double(dataArea.getX() ,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,353,"            plot.drawBackgroundImage(g2, adjusted);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,370,        float x0 = (float) dataArea.getX();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,371,        float x1 = x0 + (float) Math.abs(this.xOffset);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,372,        float x3 = (float) dataArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,373,        float x2 = x3 - (float) Math.abs(this.xOffset);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,375,        float y0 = (float) dataArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,376,        float y1 = y0 - (float) Math.abs(this.yOffset);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,377,        float y3 = (float) dataArea.getMinY();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,378,        float y2 = y3 + (float) Math.abs(this.yOffset);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,380,        GeneralPath clip = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,381,"        clip.moveTo(x0, y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,382,"        clip.lineTo(x0, y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,383,"        clip.lineTo(x1, y3);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,384,"        clip.lineTo(x3, y3);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,385,"        clip.lineTo(x3, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,386,"        clip.lineTo(x2, y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,387,        clip.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,390,        Stroke outlineStroke = plot.getOutlineStroke();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,391,        Paint outlinePaint = plot.getOutlinePaint();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,392,        if ((outlineStroke != null) && (outlinePaint != null)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,393,            g2.setStroke(outlineStroke);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,394,            g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,395,            g2.draw(clip);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,398,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,415,        Line2D line1 = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,416,        Line2D line2 = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,417,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,418,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,419,            double y0 = value;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,420,            double y1 = value - getYOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,421,            double x0 = dataArea.getMinX();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,422,            double x1 = x0 + getXOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,423,            double x2 = dataArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,424,"            line1 = new Line2D.Double(x0, y0, x1, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,425,"            line2 = new Line2D.Double(x1, y1, x2, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,426,        },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,427,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,428,            double x0 = value;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,429,            double x1 = value + getXOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,430,            double y0 = dataArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,431,            double y1 = y0 - getYOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,432,            double y2 = dataArea.getMinY();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,433,"            line1 = new Line2D.Double(x0, y0, x1, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,434,"            line2 = new Line2D.Double(x1, y1, x1, y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,436,        Paint paint = plot.getDomainGridlinePaint();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,437,        Stroke stroke = plot.getDomainGridlineStroke();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,438,        g2.setPaint(paint != null ? paint : Plot.DEFAULT_OUTLINE_PAINT);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,439,        g2.setStroke(stroke != null ? stroke : Plot.DEFAULT_OUTLINE_STROKE);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,440,        g2.draw(line1);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,441,        g2.draw(line2);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,443,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,462,        Range range = axis.getRange();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,464,        if (!range.contains(value)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,465,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,468,"        Rectangle2D adjusted = new Rectangle2D.Double(dataArea.getX(),",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,472,        Line2D line1 = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,473,        Line2D line2 = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,474,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,475,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,476,"            double x0 = axis.valueToJava2D(value, adjusted, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,478,            double x1 = x0 + getXOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,479,            double y0 = dataArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,480,            double y1 = y0 - getYOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,481,            double y2 = dataArea.getMinY();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,482,"            line1 = new Line2D.Double(x0, y0, x1, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,483,"            line2 = new Line2D.Double(x1, y1, x1, y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,484,        },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,485,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,486,"            double y0 = axis.valueToJava2D(value, adjusted, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,488,            double y1 = y0 - getYOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,489,            double x0 = dataArea.getMinX();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,490,            double x1 = x0 + getXOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,491,            double x2 = dataArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,492,"            line1 = new Line2D.Double(x0, y0, x1, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,493,"            line2 = new Line2D.Double(x1, y1, x2, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,495,        Paint paint = plot.getRangeGridlinePaint();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,496,        Stroke stroke = plot.getRangeGridlineStroke();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,497,        g2.setPaint(paint != null ? paint : Plot.DEFAULT_OUTLINE_PAINT);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,498,        g2.setStroke(stroke != null ? stroke : Plot.DEFAULT_OUTLINE_STROKE);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,499,        g2.draw(line1);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,500,        g2.draw(line2);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,502,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,519,        if (marker instanceof ValueMarker) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,520,            ValueMarker vm = (ValueMarker) marker;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,521,            double value = vm.getValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,522,            Range range = axis.getRange();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,523,            if (!range.contains(value)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,524,                return;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,527,"            Rectangle2D adjusted = new Rectangle2D.Double(dataArea.getX(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,531,            GeneralPath path = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,532,            PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,533,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,534,"                float x = (float) axis.valueToJava2D(value, adjusted, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,536,                float y = (float) adjusted.getMaxY();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,537,                path = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,538,"                path.moveTo(x, y);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,539,"                path.lineTo((float) (x + getXOffset()), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,541,"                path.lineTo((float) (x + getXOffset()), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,543,"                path.lineTo(x, (float) adjusted.getMinY());",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,544,                path.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,545,            },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,546,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,547,"                float y = (float) axis.valueToJava2D(value, adjusted, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,549,                float x = (float) dataArea.getX();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,550,                path = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,551,"                path.moveTo(x, y);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,552,"                path.lineTo(x + (float) this.xOffset, y - (float) this.yOffset);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,553,"                path.lineTo((float) (adjusted.getMaxX() + this.xOffset), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,555,"                path.lineTo((float) (adjusted.getMaxX()), y);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,556,                path.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,558,            g2.setPaint(marker.getPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,559,            g2.fill(path);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,560,            g2.setPaint(marker.getOutlinePaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,561,            g2.draw(path);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,563,            String label = marker.getLabel();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,564,            RectangleAnchor anchor = marker.getLabelAnchor();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,565,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,566,                Font labelFont = marker.getLabelFont();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,567,                g2.setFont(labelFont);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,568,                g2.setPaint(marker.getLabelPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,569,                Point2D coordinates = calculateRangeMarkerTextAnchorPoint(,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,573,"                TextUtilities.drawAlignedString(label, g2, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,578,        },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,580,"            super.drawRangeMarker(g2, plot, axis, marker, dataArea);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,583,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,611,"        Number dataValue = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,612,        if (dataValue == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,613,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,616,        double value = dataValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,618,"        Rectangle2D adjusted = new Rectangle2D.Double(dataArea.getX(),",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,623,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,625,"        double barW0 = calculateBarW0(plot, orientation, adjusted, domainAxis, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,627,        double[] barL0L1 = calculateBarL0L1(value);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,628,        if (barL0L1 == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,629,            return;  // the bar is not visible,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,632,        RectangleEdge edge = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,633,"        double transL0 = rangeAxis.valueToJava2D(barL0L1[0], adjusted, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,634,"        double transL1 = rangeAxis.valueToJava2D(barL0L1[1], adjusted, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,635,"        double barL0 = Math.min(transL0, transL1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,636,        double barLength = Math.abs(transL1 - transL0);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,639,        Rectangle2D bar = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,640,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,641,"            bar = new Rectangle2D.Double(barL0, barW0, barLength, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,645,"            bar = new Rectangle2D.Double(barW0, barL0, state.getBarWidth(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,648,"        Paint itemPaint = getItemPaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,649,        g2.setPaint(itemPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,650,        g2.fill(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,652,        double x0 = bar.getMinX();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,653,        double x1 = x0 + getXOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,654,        double x2 = bar.getMaxX();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,655,        double x3 = x2 + getXOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,657,        double y0 = bar.getMinY() - getYOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,658,        double y1 = bar.getMinY();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,659,        double y2 = bar.getMaxY() - getYOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,660,        double y3 = bar.getMaxY();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,662,        GeneralPath bar3dRight = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,663,        GeneralPath bar3dTop = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,664,        if (barLength > 0.0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,665,            bar3dRight = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,666,"            bar3dRight.moveTo((float) x2, (float) y3);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,667,"            bar3dRight.lineTo((float) x2, (float) y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,668,"            bar3dRight.lineTo((float) x3, (float) y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,669,"            bar3dRight.lineTo((float) x3, (float) y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,670,            bar3dRight.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,672,            if (itemPaint instanceof Color) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,673,                g2.setPaint(((Color) itemPaint).darker());,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,675,            g2.fill(bar3dRight);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,678,        bar3dTop = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,679,"        bar3dTop.moveTo((float) x0, (float) y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,680,"        bar3dTop.lineTo((float) x1, (float) y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,681,"        bar3dTop.lineTo((float) x3, (float) y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,682,"        bar3dTop.lineTo((float) x2, (float) y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,683,        bar3dTop.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,684,        g2.fill(bar3dTop);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,686,        if (isDrawBarOutline() ,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,688,"            g2.setStroke(getItemOutlineStroke(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,689,"            g2.setPaint(getItemOutlinePaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,690,            g2.draw(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,691,            if (bar3dRight != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,692,                g2.draw(bar3dRight);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,694,            if (bar3dTop != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,695,                g2.draw(bar3dTop);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,699,        CategoryItemLabelGenerator generator ,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,701,"        if (generator != null && isItemLabelVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,702,"            drawItemLabel(g2, dataset, row, column, plot, generator, bar, ",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,707,        EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,708,        if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,709,            GeneralPath barOutline = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,710,"            barOutline.moveTo((float) x0, (float) y3);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,711,"            barOutline.lineTo((float) x0, (float) y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,712,"            barOutline.lineTo((float) x1, (float) y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,713,"            barOutline.lineTo((float) x3, (float) y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,714,"            barOutline.lineTo((float) x3, (float) y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,715,"            barOutline.lineTo((float) x2, (float) y3);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,716,            barOutline.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,717,"            addItemEntity(entities, dataset, row, column, barOutline);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,720,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,730,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,731,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,733,        if (!(obj instanceof BarRenderer3D)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,734,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,736,        BarRenderer3D that = (BarRenderer3D) obj;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,737,        if (this.xOffset != that.xOffset) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,738,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,740,        if (this.yOffset != that.yOffset) {,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,741,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,743,"        if (!PaintUtilities.equal(this.wallPaint, that.wallPaint)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,744,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,746,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,757,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,758,"        SerialUtilities.writePaint(this.wallPaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,759,    },0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,771,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,772,        this.wallPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/category/BarRenderer3D,26,773,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,114,        return this.errorIndicatorPaint;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,124,        this.errorIndicatorPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,125,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,126,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,155,        if (!(data instanceof StatisticalCategoryDataset)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,156,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,159,        StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,161,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,162,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,163,"            drawHorizontalItem(g2, state, dataArea, plot, domainAxis, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,166,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,167,"            drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,170,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,195,        RectangleEdge xAxisLocation = plot.getDomainAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,198,"        double rectY = domainAxis.getCategoryStart(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,201,        int seriesCount = getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,202,        int categoryCount = getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,203,        if (seriesCount > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,204,            double seriesGap = dataArea.getHeight() * getItemMargin(),0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,206,            rectY = rectY + row * (state.getBarWidth() + seriesGap);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,207,        },0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,209,            rectY = rectY + row * state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,213,"        Number meanValue = dataset.getMeanValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,215,        double value = meanValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,216,        double base = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,217,        double lclip = getLowerClip();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,218,        double uclip = getUpperClip();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,220,"        if (uclip <= 0.0) {  // cases 1, 2, 3 and 4",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,221,            if (value >= uclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,222,                return; // bar is not visible,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,224,            base = uclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,225,            if (value <= lclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,226,                value = lclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,229,"        else if (lclip <= 0.0) { // cases 5, 6, 7 and 8",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,230,            if (value >= uclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,231,                value = uclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,234,                if (value <= lclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,235,                    value = lclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,240,            if (value <= lclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,241,                return; // bar is not visible,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,243,            base = getLowerClip();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,244,            if (value >= uclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,245,               value = uclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,249,        RectangleEdge yAxisLocation = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,250,"        double transY1 = rangeAxis.valueToJava2D(base, dataArea, yAxisLocation);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,251,"        double transY2 = rangeAxis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,253,"        double rectX = Math.min(transY2, transY1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,255,        double rectHeight = state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,256,        double rectWidth = Math.abs(transY2 - transY1);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,258,"        Rectangle2D bar = new Rectangle2D.Double(rectX, rectY, rectWidth, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,260,"        Paint seriesPaint = getItemPaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,261,        g2.setPaint(seriesPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,262,        g2.fill(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,263,        if (state.getBarWidth() > 3) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,264,"            g2.setStroke(getItemStroke(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,265,"            g2.setPaint(getItemOutlinePaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,266,            g2.draw(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,270,"        double valueDelta = dataset.getStdDevValue(row, column).doubleValue();",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,271,        double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,273,        double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,276,        if (this.errorIndicatorPaint != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,277,            g2.setPaint(this.errorIndicatorPaint);  ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,280,"            g2.setPaint(getItemOutlinePaint(row, column));   ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,282,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,283,"        line = new Line2D.Double(lowVal, rectY + rectHeight / 2.0d, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,285,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,286,"        line = new Line2D.Double(highVal, rectY + rectHeight * 0.25, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,288,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,289,"        line = new Line2D.Double(lowVal, rectY + rectHeight * 0.25, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,291,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,293,"        CategoryItemLabelGenerator generator = getItemLabelGenerator(row, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,295,"        if (generator != null && isItemLabelVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,296,"            drawItemLabel(g2, dataset, row, column, plot, generator, bar, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,301,        EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,302,        if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,303,"            addItemEntity(entities, dataset, row, column, bar);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,306,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,331,        RectangleEdge xAxisLocation = plot.getDomainAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,334,        double rectX = domainAxis.getCategoryStart(,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,338,        int seriesCount = getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,339,        int categoryCount = getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,340,        if (seriesCount > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,341,            double seriesGap = dataArea.getWidth() * getItemMargin(),0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,343,            rectX = rectX + row * (state.getBarWidth() + seriesGap);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,344,        },0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,346,            rectX = rectX + row * state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,350,"        Number meanValue = dataset.getMeanValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,352,        double value = meanValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,353,        double base = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,354,        double lclip = getLowerClip();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,355,        double uclip = getUpperClip();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,357,"        if (uclip <= 0.0) {  // cases 1, 2, 3 and 4",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,358,            if (value >= uclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,359,                return; // bar is not visible,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,361,            base = uclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,362,            if (value <= lclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,363,                value = lclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,366,"        else if (lclip <= 0.0) { // cases 5, 6, 7 and 8",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,367,            if (value >= uclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,368,                value = uclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,371,                if (value <= lclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,372,                    value = lclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,377,            if (value <= lclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,378,                return; // bar is not visible,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,380,            base = getLowerClip();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,381,            if (value >= uclip) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,382,               value = uclip;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,386,        RectangleEdge yAxisLocation = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,387,"        double transY1 = rangeAxis.valueToJava2D(base, dataArea, yAxisLocation);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,388,"        double transY2 = rangeAxis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,390,"        double rectY = Math.min(transY2, transY1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,392,        double rectWidth = state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,393,        double rectHeight = Math.abs(transY2 - transY1);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,395,"        Rectangle2D bar = new Rectangle2D.Double(rectX, rectY, rectWidth, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,397,"        Paint seriesPaint = getItemPaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,398,        g2.setPaint(seriesPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,399,        g2.fill(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,400,        if (state.getBarWidth() > 3) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,401,"            g2.setStroke(getItemStroke(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,402,"            g2.setPaint(getItemOutlinePaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,403,            g2.draw(bar);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,407,"        double valueDelta = dataset.getStdDevValue(row, column).doubleValue();",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,408,        double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,410,        double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,413,        if (this.errorIndicatorPaint != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,414,            g2.setPaint(this.errorIndicatorPaint);  ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,417,"            g2.setPaint(getItemOutlinePaint(row, column));   ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,419,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,420,"        line = new Line2D.Double(rectX + rectWidth / 2.0d, lowVal,",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,422,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,423,"        line = new Line2D.Double(rectX + rectWidth / 2.0d - 5.0d, highVal,",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,425,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,426,"        line = new Line2D.Double(rectX + rectWidth / 2.0d - 5.0d, lowVal,",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,428,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,430,"        CategoryItemLabelGenerator generator = getItemLabelGenerator(row, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,432,"        if (generator != null && isItemLabelVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,433,"            drawItemLabel(g2, dataset, row, column, plot, generator, bar, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,438,        EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,439,        if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,440,"            addItemEntity(entities, dataset, row, column, bar);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,442,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,452,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,453,            return true;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,455,        if (!(obj instanceof StatisticalBarRenderer)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,456,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,458,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,459,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,461,        StatisticalBarRenderer that = (StatisticalBarRenderer) obj;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,462,"        if (!PaintUtilities.equal(this.errorIndicatorPaint, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,464,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,466,        return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,477,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,478,"        SerialUtilities.writePaint(this.errorIndicatorPaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,479,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,491,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,492,        this.errorIndicatorPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalBarRenderer,26,493,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,125,        return this.endType;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,137,        if (type == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,138,"            throw new IllegalArgumentException(""Null 'type' argument."");   ",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,140,        this.endType = type;,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,141,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,142,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,157,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,162,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,171,            toolTipText = getLegendItemToolTipGenerator().generateLabel(,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,176,"            urlText = getLegendItemURLGenerator().generateLabel(dataset, ",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,220,"        if (!getItemVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,221,            return;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,225,"        Number value = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,226,        if (value != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,227,            PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,228,            RectangleEdge axisEdge = plot.getDomainAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,229,            int count = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,230,"            float x0 = (float) domainAxis.getCategoryStart(column, count, ",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,232,"            float x1 = (float) domainAxis.getCategoryMiddle(column, count, ",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,234,"            float x2 = (float) domainAxis.getCategoryEnd(column, count, ",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,237,            x0 = Math.round(x0);,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,238,            x1 = Math.round(x1);,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,239,            x2 = Math.round(x2);,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,241,            if (this.endType == AreaRendererEndType.TRUNCATE) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,242,                if (column == 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,243,                    x0 = x1;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,245,                else if (column == getColumnCount() - 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,246,                    x2 = x1;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,250,            double yy1 = value.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,252,            double yy0 = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,253,            if (column > 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,254,"                Number n0 = dataset.getValue(row, column - 1);",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,255,                if (n0 != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,256,                    yy0 = (n0.doubleValue() + yy1) / 2.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,260,            double yy2 = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,261,            if (column < dataset.getColumnCount() - 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,262,"                Number n2 = dataset.getValue(row, column + 1);",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,263,                if (n2 != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,264,                    yy2 = (n2.doubleValue() + yy1) / 2.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,268,            RectangleEdge edge = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,269,"            float y0 = (float) rangeAxis.valueToJava2D(yy0, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,270,"            float y1 = (float) rangeAxis.valueToJava2D(yy1, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,271,"            float y2 = (float) rangeAxis.valueToJava2D(yy2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,272,"            float yz = (float) rangeAxis.valueToJava2D(0.0, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,274,"            g2.setPaint(getItemPaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,275,"            g2.setStroke(getItemStroke(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,277,            GeneralPath area = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,279,            if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,280,"                area.moveTo(x0, yz);",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,281,"                area.lineTo(x0, y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,282,"                area.lineTo(x1, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,283,"                area.lineTo(x2, y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,284,"                area.lineTo(x2, yz);",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,286,            else if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,287,"                area.moveTo(yz, x0);",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,288,"                area.lineTo(y0, x0);",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,289,"                area.lineTo(y1, x1);",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,290,"                area.lineTo(y2, x2);",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,291,"                area.lineTo(yz, x2);",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,293,            area.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,295,"            g2.setPaint(getItemPaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,296,            g2.fill(area);,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,299,"            if (isItemLabelVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,300,"                drawItemLabel(g2, orientation, dataset, row, column, x1, y1, ",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,305,            EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,306,            if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,307,"                addItemEntity(entities, dataset, row, column, area);",0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,311,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,321,        if (obj == this) {    ,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,322,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,324,        if (!(obj instanceof AreaRenderer)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,325,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,327,        AreaRenderer that = (AreaRenderer) obj;,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,328,        if (!this.endType.equals(that.endType)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,329,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,331,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/renderer/category/AreaRenderer,26,342,        return super.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,95,        return this.name;,0.0,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,108,        if (this == o) {,0.0,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,109,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,111,        if (!(o instanceof AreaRendererEndType)) {,0.0,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,112,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,115,        AreaRendererEndType t = (AreaRendererEndType) o;,0.0,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,116,        if (!this.name.equals(t.toString())) {,0.0,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,117,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,120,        return true;,0.0,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,132,        Object result = null;,0.0,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,133,        if (this.equals(AreaRendererEndType.LEVEL)) {,0.0,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,134,            result = AreaRendererEndType.LEVEL;,0.0,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,136,        else if (this.equals(AreaRendererEndType.TAPER)) {,0.0,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,137,            result = AreaRendererEndType.TAPER;,0.0,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,139,        else if (this.equals(AreaRendererEndType.TRUNCATE)) {,0.0,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,140,            result = AreaRendererEndType.TRUNCATE;,0.0,0,-1,0
org/jfree/chart/renderer/AreaRendererEndType,26,142,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,448,              Graphics2D g2 = (Graphics2D) g;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,449,"              path.transform(AffineTransform.getTranslateInstance(x, y));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,450,              if (fillPaint != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,451,                  g2.setPaint(fillPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,452,                  g2.fill(path);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,454,              if (outlinePaint != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,455,                  g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,456,                  g2.draw(path);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,458,"              path.transform(AffineTransform.getTranslateInstance(-x, -y));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,459,        },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,462,            return width;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,466,            return height;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,156,        return this.plotLines;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,169,        if (this.plotLines != draw) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,170,            this.plotLines = draw;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,171,            this.notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,174,    },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,185,        return this.groupPaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,198,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,199,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,201,        this.groupPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,202,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,203,    },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,214,        return this.groupStroke;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,224,        this.groupStroke = groupStroke;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,225,    },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,235,        return this.objectIcon;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,246,        if (icon == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,247,"            throw new IllegalArgumentException(""Null 'icon' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,249,        this.objectIcon = icon;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,250,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,251,    },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,262,        return this.maxIcon;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,275,        if (icon == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,276,"            throw new IllegalArgumentException(""Null 'icon' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,278,        this.maxIcon = icon;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,279,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,280,    },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,291,        return this.minIcon;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,304,        if (icon == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,305,"            throw new IllegalArgumentException(""Null 'icon' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,307,        this.minIcon = icon;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,308,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,309,    },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,331,"        Number value = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,332,        if (value != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,334,"            double x1 = domainAxis.getCategoryMiddle(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,336,"            double y1 = rangeAxis.valueToJava2D(value.doubleValue(), dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,338,"            g2.setPaint(getItemPaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,339,"            g2.setStroke(getItemStroke(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,340,            Shape shape = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,341,"            shape = new Rectangle2D.Double(x1 - 4, y1 - 4, 8.0, 8.0);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,343,            PlotOrientation orient = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,344,            if (orient == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,345,"                this.objectIcon.paintIcon(null, g2, (int) x1, (int) y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,348,"                this.objectIcon.paintIcon(null, g2, (int) y1, (int) x1);                ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,351,            if (this.lastCategory == column) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,352,                if (this.min > value.doubleValue()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,353,                    this.min = value.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,355,                if (this.max < value.doubleValue()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,356,                    this.max = value.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,360,                if (dataset.getRowCount() - 1 == row) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,361,                    g2.setPaint(this.groupPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,362,                    g2.setStroke(this.groupStroke);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,363,"                    double minY = rangeAxis.valueToJava2D(this.min, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,365,"                    double maxY = rangeAxis.valueToJava2D(this.max, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,368,                    if (orient == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,369,"                        g2.draw(new Line2D.Double(x1, minY, x1, maxY));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,370,"                        this.minIcon.paintIcon(null, g2, (int) x1, (int) minY);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,371,"                        this.maxIcon.paintIcon(null, g2, (int) x1, (int) maxY);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,374,"                        g2.draw(new Line2D.Double(minY, x1, maxY, x1));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,375,"                        this.minIcon.paintIcon(null, g2, (int) minY, (int) x1);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,376,"                        this.maxIcon.paintIcon(null, g2, (int) maxY, (int) x1);                        ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,378,                },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,381,                this.lastCategory = column;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,382,                this.min = value.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,383,                this.max = value.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,387,            if (this.plotLines) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,388,                if (column != 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,389,"                    Number previousValue = dataset.getValue(row, column - 1);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,390,                    if (previousValue != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,392,                        double previous = previousValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,393,"                        double x0 = domainAxis.getCategoryMiddle(column - 1, ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,396,"                        double y0 = rangeAxis.valueToJava2D(previous, dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,398,"                        g2.setPaint(getItemPaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,399,"                        g2.setStroke(getItemStroke(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,401,                        if (orient == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,402,"                            line = new Line2D.Double(x0, y0, x1, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,405,"                            line = new Line2D.Double(y0, x0, y1, x1);                            ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,407,                        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,413,            if (state.getInfo() != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,414,                EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,415,                if (entities != null && shape != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,416,                    String tip = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,417,"                    CategoryToolTipGenerator tipster = getToolTipGenerator(row,",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,419,                    if (tipster != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,420,"                        tip = tipster.generateToolTip(dataset, row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,422,                    CategoryItemEntity entity = new CategoryItemEntity(,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,425,                    entities.add(entity);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,429,    },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,517,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,518,"        SerialUtilities.writeStroke(this.groupStroke, stream);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,519,"        SerialUtilities.writePaint(this.groupPaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,520,    },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,532,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,533,        this.groupStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,534,        this.groupPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,536,"        this.minIcon = getIcon(new Arc2D.Double(-4, -4, 8, 8, 0, 360, ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,538,"        this.maxIcon = getIcon(new Arc2D.Double(-4, -4, 8, 8, 0, 360, ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,540,"        this.objectIcon = getIcon(new Line2D.Double(-4, 0, 4, 0), false, true);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,541,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,107,        return this.itemMargin;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,118,        this.itemMargin = percent;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,119,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,120,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,129,        return this.maxItemWidth;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,140,        this.maxItemWidth = percent;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,141,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,142,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,166,"        CategoryItemRendererState state = super.initialise(g2, dataArea, plot, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,168,"        calculateItemWidth(plot, dataArea, rendererIndex, state);",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,169,        return state;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,186,"        CategoryAxis domainAxis = getDomainAxis(plot, rendererIndex);",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,187,        CategoryDataset dataset = plot.getDataset(rendererIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,188,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,189,            int columns = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,190,            int rows = dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,191,            double space = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,192,            PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,193,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,194,                space = dataArea.getHeight();,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,196,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,197,                space = dataArea.getWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,199,            double maxWidth = space * getMaximumItemWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,200,            double categoryMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,201,            double currentItemMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,202,            if (columns > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,203,                categoryMargin = domainAxis.getCategoryMargin();,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,205,            if (rows > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,206,                currentItemMargin = getItemMargin();,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,208,            double used = space * (1 - domainAxis.getLowerMargin() ,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,211,            if ((rows * columns) > 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,212,"                state.setBarWidth(Math.min(used / (rows * columns), maxWidth));",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,215,"                state.setBarWidth(Math.min(used, maxWidth));",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,218,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,243,        double space = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,244,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,245,            space = dataArea.getHeight();,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,248,            space = dataArea.getWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,250,"        double barW0 = domainAxis.getCategoryStart(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,252,        int seriesCount = getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,253,        int categoryCount = getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,254,        if (seriesCount > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,255,            double seriesGap = space * getItemMargin() ,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,257,"            double seriesW = calculateSeriesWidth(space, domainAxis, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,259,            barW0 = barW0 + row * (seriesW + seriesGap) ,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,261,        },0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,263,"            barW0 = domainAxis.getCategoryMiddle(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,267,        return barW0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,290,"        Number dataValue = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,291,        if (dataValue == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,292,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,295,        double value = dataValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,297,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,298,"        double barW0 = calculateBarW0(plot, orientation, dataArea, domainAxis, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,300,        RectangleEdge edge = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,301,"        double barL = rangeAxis.valueToJava2D(value, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,304,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,305,        double x = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,306,        double y = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,307,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,308,            x = barL;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,309,            y = barW0 + state.getBarWidth() / 2.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,310,"            line = new Line2D.Double(barL, barW0, barL, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,314,            x = barW0 + state.getBarWidth() / 2.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,315,            y = barL;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,316,"            line = new Line2D.Double(barW0, barL, barW0 + state.getBarWidth(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,319,"        Stroke itemStroke = getItemStroke(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,320,"        Paint itemPaint = getItemPaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,321,        g2.setStroke(itemStroke);,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,322,        g2.setPaint(itemPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,323,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,325,"        CategoryItemLabelGenerator generator = getItemLabelGenerator(row, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,327,"        if (generator != null && isItemLabelVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,328,"            drawItemLabel(g2, orientation, dataset, row, column, x, y, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,333,        EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,334,        if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,335,"            addItemEntity(entities, dataset, row, column, line.getBounds());",0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,339,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,353,        double factor = 1.0 - getItemMargin() - axis.getLowerMargin() ,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,355,        if (categories > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,356,            factor = factor - axis.getCategoryMargin();,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,358,        return (space * factor) / (categories * series);,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,369,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,370,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,372,        if (!(obj instanceof LevelRenderer)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,373,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,375,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,376,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,378,        LevelRenderer that = (LevelRenderer) obj;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,379,        if (this.itemMargin != that.itemMargin) {              ,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,380,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,382,        if (this.maxItemWidth != that.maxItemWidth) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,383,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LevelRenderer,26,385,        return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,121,        return this.errorIndicatorPaint;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,131,        this.errorIndicatorPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,132,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,133,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,162,"        if (!getItemVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,163,            return;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,167,"        Number v = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,168,        if (v == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,169,          return;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,174,        if (!(dataset instanceof StatisticalCategoryDataset)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,175,"            super.drawItem(g2, state, dataArea, plot, domainAxis, rangeAxis, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,177,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,180,        StatisticalCategoryDataset statData ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,183,"        Number meanValue = statData.getMeanValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,185,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,188,"        double x1 = domainAxis.getCategoryMiddle(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,191,"        double y1 = rangeAxis.valueToJava2D(meanValue.doubleValue(), dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,194,"        Shape shape = getItemShape(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,195,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,196,"            shape = ShapeUtilities.createTranslatedShape(shape, y1, x1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,198,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,199,"            shape = ShapeUtilities.createTranslatedShape(shape, x1, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,201,"        if (getItemShapeVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,203,"            if (getItemShapeFilled(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,204,"                g2.setPaint(getItemPaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,205,                g2.fill(shape);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,208,                if (getUseOutlinePaint()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,209,"                    g2.setPaint(getItemOutlinePaint(row, column));   ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,212,"                    g2.setPaint(getItemPaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,214,"                g2.setStroke(getItemOutlineStroke(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,215,                g2.draw(shape);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,219,"        if (getItemLineVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,220,            if (column != 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,222,"                Number previousValue = statData.getValue(row, column - 1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,223,                if (previousValue != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,226,                    double previous = previousValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,227,"                    double x0 = domainAxis.getCategoryMiddle(column - 1, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,230,"                    double y0 = rangeAxis.valueToJava2D(previous, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,233,                    Line2D line = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,234,                    if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,235,"                        line = new Line2D.Double(y0, x0, y1, x1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,237,                    else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,238,"                        line = new Line2D.Double(x0, y0, x1, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,240,"                    g2.setPaint(getItemPaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,241,"                    g2.setStroke(getItemStroke(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,242,                    g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,247,        RectangleEdge yAxisLocation = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,248,        RectangleEdge xAxisLocation = plot.getDomainAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,249,"        double rectX = domainAxis.getCategoryStart(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,252,        rectX = rectX + row * state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,254,"        g2.setPaint(getItemPaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,257,"        double valueDelta = statData.getStdDevValue(row, column).doubleValue(); ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,260,        if ((meanValue.doubleValue() + valueDelta) ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,262,            highVal = rangeAxis.valueToJava2D(,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,267,            highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,271,        if ((meanValue.doubleValue() + valueDelta) ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,273,            lowVal = rangeAxis.valueToJava2D(,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,278,            lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,282,        if (this.errorIndicatorPaint != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,283,            g2.setPaint(this.errorIndicatorPaint);  ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,286,"            g2.setPaint(getItemPaint(row, column));   ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,288,        Line2D line = new Line2D.Double();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,289,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,290,"            line.setLine(lowVal, x1, highVal, x1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,291,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,292,"            line.setLine(lowVal, x1 - 5.0d, lowVal, x1 + 5.0d);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,293,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,294,"            line.setLine(highVal, x1 - 5.0d, highVal, x1 + 5.0d);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,295,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,298,"            line.setLine(x1, lowVal, x1, highVal);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,299,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,300,"            line.setLine(x1 - 5.0d, highVal, x1 + 5.0d, highVal);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,301,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,302,"            line.setLine(x1 - 5.0d, lowVal, x1 + 5.0d, lowVal);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,303,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,307,"        if (isItemLabelVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,308,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,309,"              drawItemLabel(g2, orientation, dataset, row, column, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,312,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,313,"              drawItemLabel(g2, orientation, dataset, row, column, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,319,        EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,320,        if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,321,"            addItemEntity(entities, dataset, row, column, shape);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,325,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,335,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,336,            return true;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,338,        if (!(obj instanceof StatisticalLineAndShapeRenderer)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,339,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,341,        StatisticalLineAndShapeRenderer that ,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,343,"        if (!PaintUtilities.equal(this.errorIndicatorPaint, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,345,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,347,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,358,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,359,"        SerialUtilities.writePaint(this.errorIndicatorPaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,360,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,372,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,373,        this.errorIndicatorPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer,26,374,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,212,            return flag.booleanValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,238,"        this.seriesLinesVisible.setBoolean(series, flag);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,239,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,240,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,249,"        setSeriesLinesVisible(series, Boolean.valueOf(visible));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,250,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,258,        return this.baseLinesVisible;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,267,        this.baseLinesVisible = flag;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,268,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,269,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,285,            return flag.booleanValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,312,"        setSeriesShapesVisible(series, Boolean.valueOf(visible));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,313,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,323,"        this.seriesShapesVisible.setBoolean(series, flag);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,324,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,325,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,333,        return this.baseShapesVisible;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,342,        this.baseShapesVisible = flag;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,343,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,344,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,353,        return this.drawOutlines;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,367,        this.drawOutlines = flag;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,368,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,369,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,378,        return this.useOutlinePaint;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,388,        this.useOutlinePaint = use;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,389,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,407,            return flag.booleanValue();   ,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,438,"        this.seriesShapesFilled.setBoolean(series, filled);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,439,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,440,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,450,"        this.seriesShapesFilled.setBoolean(series, Boolean.valueOf(filled));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,451,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,452,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,462,        return this.baseShapesFilled;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,474,        this.baseShapesFilled = flag;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,475,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,476,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,486,        return this.useFillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,497,        this.useFillPaint = flag;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,498,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,499,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,513,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,523,                toolTipText = getLegendItemToolTipGenerator().generateLabel(,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,528,                urlText = getLegendItemURLGenerator().generateLabel(,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,552,        return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,562,        return 2;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,585,"        if (!getItemVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,586,            return;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,590,"        if (!getItemLineVisible(row, column) ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,592,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,596,"        Number v = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,597,        if (v == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,598,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,601,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,604,"        double x1 = domainAxis.getCategoryMiddle(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,606,        double value = v.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,607,"        double y1 = rangeAxis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,610,"        if (pass == 0 && getItemLineVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,611,            if (column != 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,612,"                Number previousValue = dataset.getValue(row, column - 1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,613,                if (previousValue != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,615,                    double previous = previousValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,616,"                    double x0 = domainAxis.getCategoryMiddle(column - 1, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,619,"                    double y0 = rangeAxis.valueToJava2D(previous, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,622,                    Line2D line = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,623,                    if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,624,"                        line = new Line2D.Double(y0, x0, y1, x1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,626,                    else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,627,"                        line = new Line2D.Double(x0, y0, x1, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,629,"                    g2.setPaint(getItemPaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,630,"                    g2.setStroke(getItemStroke(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,631,                    g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,636,        if (pass == 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,637,"            Shape shape = getItemShape(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,638,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,639,"                shape = ShapeUtilities.createTranslatedShape(shape, y1, x1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,641,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,642,"                shape = ShapeUtilities.createTranslatedShape(shape, x1, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,645,"            if (getItemShapeVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,646,"                if (getItemShapeFilled(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,647,                    if (this.useFillPaint) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,648,"                        g2.setPaint(getItemFillPaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,651,"                        g2.setPaint(getItemPaint(row, column));   ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,653,                    g2.fill(shape);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,655,                if (this.drawOutlines) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,656,                    if (this.useOutlinePaint) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,657,"                        g2.setPaint(getItemOutlinePaint(row, column));   ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,660,"                        g2.setPaint(getItemPaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,662,"                    g2.setStroke(getItemOutlineStroke(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,663,                    g2.draw(shape);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,668,"            if (isItemLabelVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,669,                if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,670,"                    drawItemLabel(g2, orientation, dataset, row, column, y1, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,673,                else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,674,"                    drawItemLabel(g2, orientation, dataset, row, column, x1, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,680,            EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,681,            if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,682,"                addItemEntity(entities, dataset, row, column, shape);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,686,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,697,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,698,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,700,        if (!(obj instanceof LineAndShapeRenderer)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,701,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,704,        LineAndShapeRenderer that = (LineAndShapeRenderer) obj;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,705,        if (this.baseLinesVisible != that.baseLinesVisible) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,706,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,708,"        if (!ObjectUtilities.equal(this.seriesLinesVisible, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,710,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,712,        if (this.baseShapesVisible != that.baseShapesVisible) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,713,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,715,"        if (!ObjectUtilities.equal(this.seriesShapesVisible, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,717,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,719,"        if (!ObjectUtilities.equal(this.seriesShapesFilled, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,721,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,723,        if (this.baseShapesFilled != that.baseShapesFilled) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,724,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,726,        if (this.useOutlinePaint != that.useOutlinePaint) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,727,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,729,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,730,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,732,        return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,743,        LineAndShapeRenderer clone = (LineAndShapeRenderer) super.clone();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,744,        clone.seriesLinesVisible ,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,746,        clone.seriesShapesVisible ,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,748,        clone.seriesShapesFilled ,0.0,0,-1,0
org/jfree/chart/renderer/category/LineAndShapeRenderer,26,750,        return clone;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,148,"        super(xOffset, yOffset);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,149,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,176,"        super(xOffset, yOffset);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,177,        this.renderAsPercentages = renderAsPercentages;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,178,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,190,        return this.renderAsPercentages;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,203,        this.renderAsPercentages = asPercentages; ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,204,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,205,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,217,"            return new Range(0.0, 1.0);   ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,238,"        CategoryAxis domainAxis = getDomainAxis(plot, rendererIndex);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,239,        CategoryDataset data = plot.getDataset(rendererIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,240,        if (data != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,241,            PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,242,            double space = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,243,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,244,                space = dataArea.getHeight();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,246,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,247,                space = dataArea.getWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,249,            double maxWidth = space * getMaximumBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,250,            int columns = data.getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,251,            double categoryMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,252,            if (columns > 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,253,                categoryMargin = domainAxis.getCategoryMargin();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,256,            double used = space * (1 - domainAxis.getLowerMargin() ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,259,            if (columns > 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,260,"                state.setBarWidth(Math.min(used / columns, maxWidth));",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,263,"                state.setBarWidth(Math.min(used, maxWidth));",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,267,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,286,        List result = new ArrayList();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,287,        double posBase = base;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,288,        double negBase = base;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,289,        double total = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,290,        if (asPercentages) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,291,"            total = DataUtilities.calculateColumnTotal(dataset, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,295,        int baseIndex = -1;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,296,        int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,297,        for (int s = 0; s < seriesCount; s++) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,298,"            Number n = dataset.getValue(dataset.getRowKey(s), category);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,299,            if (n == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,300,                continue;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,302,            double v = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,303,            if (asPercentages) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,304,                v = v / total;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,306,            if (v >= 0.0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,307,                if (baseIndex < 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,308,"                    result.add(new Object[] {null, new Double(base)});",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,309,                    baseIndex = 0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,311,                posBase = posBase + v;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,312,"                result.add(new Object[] {new Integer(s), new Double(posBase)});",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,314,            else if (v < 0.0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,315,                if (baseIndex < 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,316,"                    result.add(new Object[] {null, new Double(base)});",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,317,                    baseIndex = 0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,319,                negBase = negBase + v; // '+' because v is negative,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,320,"                result.add(0, new Object[] {new Integer(-s), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,322,                baseIndex++;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,325,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,358,        if (row < dataset.getRowCount() - 1) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,359,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,361,        Comparable category = dataset.getColumnKey(column);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,363,"        List values = createStackedValueList(dataset, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,367,"        Rectangle2D adjusted = new Rectangle2D.Double(dataArea.getX(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,373,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,376,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,377,"            drawStackHorizontal(values, category, g2, state, adjusted, plot, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,381,"            drawStackVertical(values, category, g2, state, adjusted, plot, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,385,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,408,        int column = dataset.getColumnIndex(category);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,409,"        double barX0 = domainAxis.getCategoryMiddle(column, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,412,        double barW = state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,416,        List itemLabelList = new ArrayList();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,419,        boolean inverted = rangeAxis.isInverted();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,420,        int blockCount = values.size() - 1;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,421,        for (int k = 0; k < blockCount; k++) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,422,            int index = (inverted ? blockCount - k - 1 : k);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,423,            Object[] prev = (Object[]) values.get(index);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,424,            Object[] curr = (Object[]) values.get(index + 1);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,425,            int series = 0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,426,            if (curr[0] == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,427,                series = -((Integer) prev[0]).intValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,430,                series = ((Integer) curr[0]).intValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,431,                if (series < 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,432,                    series = -((Integer) prev[0]).intValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,435,            double v0 = ((Double) prev[1]).doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,436,"            double vv0 = rangeAxis.valueToJava2D(v0, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,439,            double v1 = ((Double) curr[1]).doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,440,"            double vv1 = rangeAxis.valueToJava2D(v1, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,443,"            Shape[] faces = createHorizontalBlock(barX0, barW, vv0, vv1, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,445,"            Paint fillPaint = getItemPaint(series, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,446,            Paint fillPaintDark = fillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,447,            if (fillPaintDark instanceof Color) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,448,                fillPaintDark = ((Color) fillPaint).darker();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,450,            boolean drawOutlines = isDrawBarOutline();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,451,            Paint outlinePaint = fillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,452,            if (drawOutlines) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,453,"                outlinePaint = getItemOutlinePaint(series, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,454,"                g2.setStroke(getItemOutlineStroke(series, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,456,            for (int f = 0; f < 6; f++) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,457,                if (f == 5) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,458,                    g2.setPaint(fillPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,461,                    g2.setPaint(fillPaintDark);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,463,                g2.fill(faces[f]);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,464,                if (drawOutlines) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,465,                    g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,466,                    g2.draw(faces[f]);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,470,"            itemLabelList.add(new Object[] {new Integer(series), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,475,            EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,476,            if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,477,"                addItemEntity(entities, dataset, series, column, faces[5]);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,482,        for (int i = 0; i < itemLabelList.size(); i++) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,483,            Object[] record = (Object[]) itemLabelList.get(i);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,484,            int series = ((Integer) record[0]).intValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,485,            Rectangle2D bar = (Rectangle2D) record[1];,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,486,            boolean neg = ((Boolean) record[2]).booleanValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,487,            CategoryItemLabelGenerator generator ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,489,"            if (generator != null && isItemLabelVisible(series, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,490,"                drawItemLabel(g2, dataset, series, column, plot, generator, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,495,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,512,        Shape[] result = new Shape[6];,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,513,"        Point2D p00 = new Point2D.Double(y0, x0);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,514,"        Point2D p01 = new Point2D.Double(y0, x0 + width);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,515,"        Point2D p02 = new Point2D.Double(p01.getX() + getXOffset(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,517,"        Point2D p03 = new Point2D.Double(p00.getX() + getXOffset(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,520,"        Point2D p0 = new Point2D.Double(y1, x0);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,521,"        Point2D p1 = new Point2D.Double(y1, x0 + width);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,522,"        Point2D p2 = new Point2D.Double(p1.getX() + getXOffset(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,524,"        Point2D p3 = new Point2D.Double(p0.getX() + getXOffset(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,527,        GeneralPath bottom = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,528,"        bottom.moveTo((float) p1.getX(), (float) p1.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,529,"        bottom.lineTo((float) p01.getX(), (float) p01.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,530,"        bottom.lineTo((float) p02.getX(), (float) p02.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,531,"        bottom.lineTo((float) p2.getX(), (float) p2.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,532,        bottom.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,534,        GeneralPath top = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,535,"        top.moveTo((float) p0.getX(), (float) p0.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,536,"        top.lineTo((float) p00.getX(), (float) p00.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,537,"        top.lineTo((float) p03.getX(), (float) p03.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,538,"        top.lineTo((float) p3.getX(), (float) p3.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,539,        top.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,541,        GeneralPath back = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,542,"        back.moveTo((float) p2.getX(), (float) p2.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,543,"        back.lineTo((float) p02.getX(), (float) p02.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,544,"        back.lineTo((float) p03.getX(), (float) p03.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,545,"        back.lineTo((float) p3.getX(), (float) p3.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,546,        back.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,548,        GeneralPath front = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,549,"        front.moveTo((float) p0.getX(), (float) p0.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,550,"        front.lineTo((float) p1.getX(), (float) p1.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,551,"        front.lineTo((float) p01.getX(), (float) p01.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,552,"        front.lineTo((float) p00.getX(), (float) p00.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,553,        front.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,555,        GeneralPath left = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,556,"        left.moveTo((float) p0.getX(), (float) p0.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,557,"        left.lineTo((float) p1.getX(), (float) p1.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,558,"        left.lineTo((float) p2.getX(), (float) p2.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,559,"        left.lineTo((float) p3.getX(), (float) p3.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,560,        left.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,562,        GeneralPath right = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,563,"        right.moveTo((float) p00.getX(), (float) p00.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,564,"        right.lineTo((float) p01.getX(), (float) p01.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,565,"        right.lineTo((float) p02.getX(), (float) p02.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,566,"        right.lineTo((float) p03.getX(), (float) p03.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,567,        right.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,568,        result[0] = bottom;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,569,        result[1] = back;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,570,        if (inverted) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,571,            result[2] = right;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,572,            result[3] = left;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,575,            result[2] = left;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,576,            result[3] = right;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,578,        result[4] = top;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,579,        result[5] = front;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,580,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,604,        int column = dataset.getColumnIndex(category);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,605,"        double barX0 = domainAxis.getCategoryMiddle(column, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,608,        double barW = state.getBarWidth();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,612,        List itemLabelList = new ArrayList();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,615,        boolean inverted = rangeAxis.isInverted();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,616,        int blockCount = values.size() - 1;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,617,        for (int k = 0; k < blockCount; k++) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,618,            int index = (inverted ? blockCount - k - 1 : k);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,619,            Object[] prev = (Object[]) values.get(index);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,620,            Object[] curr = (Object[]) values.get(index + 1);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,621,            int series = 0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,622,            if (curr[0] == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,623,                series = -((Integer) prev[0]).intValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,626,                series = ((Integer) curr[0]).intValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,627,                if (series < 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,628,                    series = -((Integer) prev[0]).intValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,631,            double v0 = ((Double) prev[1]).doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,632,"            double vv0 = rangeAxis.valueToJava2D(v0, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,635,            double v1 = ((Double) curr[1]).doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,636,"            double vv1 = rangeAxis.valueToJava2D(v1, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,639,"            Shape[] faces = createVerticalBlock(barX0, barW, vv0, vv1, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,641,"            Paint fillPaint = getItemPaint(series, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,642,            Paint fillPaintDark = fillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,643,            if (fillPaintDark instanceof Color) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,644,                fillPaintDark = ((Color) fillPaint).darker();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,646,            boolean drawOutlines = isDrawBarOutline();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,647,            Paint outlinePaint = fillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,648,            if (drawOutlines) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,649,"                outlinePaint = getItemOutlinePaint(series, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,650,"                g2.setStroke(getItemOutlineStroke(series, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,653,            for (int f = 0; f < 6; f++) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,654,                if (f == 5) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,655,                    g2.setPaint(fillPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,658,                    g2.setPaint(fillPaintDark);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,660,                g2.fill(faces[f]);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,661,                if (drawOutlines) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,662,                    g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,663,                    g2.draw(faces[f]);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,667,"            itemLabelList.add(new Object[] {new Integer(series), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,672,            EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,673,            if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,674,"                addItemEntity(entities, dataset, series, column, faces[5]);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,679,        for (int i = 0; i < itemLabelList.size(); i++) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,680,            Object[] record = (Object[]) itemLabelList.get(i);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,681,            int series = ((Integer) record[0]).intValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,682,            Rectangle2D bar = (Rectangle2D) record[1];,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,683,            boolean neg = ((Boolean) record[2]).booleanValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,684,            CategoryItemLabelGenerator generator ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,686,"            if (generator != null && isItemLabelVisible(series, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,687,"                drawItemLabel(g2, dataset, series, column, plot, generator, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,692,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,709,        Shape[] result = new Shape[6];,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,710,"        Point2D p00 = new Point2D.Double(x0, y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,711,"        Point2D p01 = new Point2D.Double(x0 + width, y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,712,"        Point2D p02 = new Point2D.Double(p01.getX() + getXOffset(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,714,"        Point2D p03 = new Point2D.Double(p00.getX() + getXOffset(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,718,"        Point2D p0 = new Point2D.Double(x0, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,719,"        Point2D p1 = new Point2D.Double(x0 + width, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,720,"        Point2D p2 = new Point2D.Double(p1.getX() + getXOffset(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,722,"        Point2D p3 = new Point2D.Double(p0.getX() + getXOffset(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,725,        GeneralPath right = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,726,"        right.moveTo((float) p1.getX(), (float) p1.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,727,"        right.lineTo((float) p01.getX(), (float) p01.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,728,"        right.lineTo((float) p02.getX(), (float) p02.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,729,"        right.lineTo((float) p2.getX(), (float) p2.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,730,        right.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,732,        GeneralPath left = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,733,"        left.moveTo((float) p0.getX(), (float) p0.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,734,"        left.lineTo((float) p00.getX(), (float) p00.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,735,"        left.lineTo((float) p03.getX(), (float) p03.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,736,"        left.lineTo((float) p3.getX(), (float) p3.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,737,        left.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,739,        GeneralPath back = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,740,"        back.moveTo((float) p2.getX(), (float) p2.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,741,"        back.lineTo((float) p02.getX(), (float) p02.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,742,"        back.lineTo((float) p03.getX(), (float) p03.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,743,"        back.lineTo((float) p3.getX(), (float) p3.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,744,        back.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,746,        GeneralPath front = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,747,"        front.moveTo((float) p0.getX(), (float) p0.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,748,"        front.lineTo((float) p1.getX(), (float) p1.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,749,"        front.lineTo((float) p01.getX(), (float) p01.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,750,"        front.lineTo((float) p00.getX(), (float) p00.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,751,        front.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,753,        GeneralPath top = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,754,"        top.moveTo((float) p0.getX(), (float) p0.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,755,"        top.lineTo((float) p1.getX(), (float) p1.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,756,"        top.lineTo((float) p2.getX(), (float) p2.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,757,"        top.lineTo((float) p3.getX(), (float) p3.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,758,        top.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,760,        GeneralPath bottom = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,761,"        bottom.moveTo((float) p00.getX(), (float) p00.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,762,"        bottom.lineTo((float) p01.getX(), (float) p01.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,763,"        bottom.lineTo((float) p02.getX(), (float) p02.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,764,"        bottom.lineTo((float) p03.getX(), (float) p03.getY());",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,765,        bottom.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,767,        result[0] = bottom;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,768,        result[1] = back;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,769,        result[2] = left;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,770,        result[3] = right;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,771,        result[4] = top;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,772,        result[5] = front;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,773,        if (inverted) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,774,            result[0] = top;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,775,            result[4] = bottom;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,777,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,788,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,789,            return true;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,791,        if (!(obj instanceof StackedBarRenderer3D)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,792,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,794,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,795,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,797,        StackedBarRenderer3D that = (StackedBarRenderer3D) obj;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,798,        if (this.renderAsPercentages != that.getRenderAsPercentages()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,799,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedBarRenderer3D,26,801,        return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,488,                Graphics2D g2 = (Graphics2D) g;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,489,"                path.transform(AffineTransform.getTranslateInstance(x, y));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,490,                if (fill) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,491,                    g2.fill(path);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,493,                if (outline) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,494,                    g2.draw(path);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,496,"                path.transform(AffineTransform.getTranslateInstance(-x, -y));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,497,            },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,500,                return width;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,26,504,                return height;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,158,        this.xOffset = xOffset;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,159,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,160,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,171,        this.yOffset = yOffset;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,172,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,173,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,197,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,198,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,200,        this.wallPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,201,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,202,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,274,            Rectangle2D adjusted = new Rectangle2D.Double(dataArea.getX() ,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,278,"            plot.drawBackgroundImage(g2, adjusted);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,295,        float x0 = (float) dataArea.getX();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,296,        float x1 = x0 + (float) Math.abs(this.xOffset);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,297,        float x3 = (float) dataArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,298,        float x2 = x3 - (float) Math.abs(this.xOffset);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,300,        float y0 = (float) dataArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,301,        float y1 = y0 - (float) Math.abs(this.yOffset);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,302,        float y3 = (float) dataArea.getMinY();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,303,        float y2 = y3 + (float) Math.abs(this.yOffset);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,305,        GeneralPath clip = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,306,"        clip.moveTo(x0, y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,307,"        clip.lineTo(x0, y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,308,"        clip.lineTo(x1, y3);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,309,"        clip.lineTo(x3, y3);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,310,"        clip.lineTo(x3, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,311,"        clip.lineTo(x2, y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,312,        clip.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,315,        Stroke outlineStroke = plot.getOutlineStroke();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,316,        Paint outlinePaint = plot.getOutlinePaint();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,317,        if ((outlineStroke != null) && (outlinePaint != null)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,318,            g2.setStroke(outlineStroke);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,319,            g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,320,            g2.draw(clip);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,323,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,340,        Line2D line1 = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,341,        Line2D line2 = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,342,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,343,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,344,            double y0 = value;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,345,            double y1 = value - getYOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,346,            double x0 = dataArea.getMinX();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,347,            double x1 = x0 + getXOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,348,            double x2 = dataArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,349,"            line1 = new Line2D.Double(x0, y0, x1, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,350,"            line2 = new Line2D.Double(x1, y1, x2, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,351,        },0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,352,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,353,            double x0 = value;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,354,            double x1 = value + getXOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,355,            double y0 = dataArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,356,            double y1 = y0 - getYOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,357,            double y2 = dataArea.getMinY();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,358,"            line1 = new Line2D.Double(x0, y0, x1, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,359,"            line2 = new Line2D.Double(x1, y1, x1, y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,361,        g2.setPaint(plot.getDomainGridlinePaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,362,        g2.setStroke(plot.getDomainGridlineStroke());,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,363,        g2.draw(line1);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,364,        g2.draw(line2);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,366,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,385,        Range range = axis.getRange();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,387,        if (!range.contains(value)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,388,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,391,"        Rectangle2D adjusted = new Rectangle2D.Double(dataArea.getX(),",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,396,        Line2D line1 = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,397,        Line2D line2 = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,398,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,399,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,400,"            double x0 = axis.valueToJava2D(value, adjusted, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,402,            double x1 = x0 + getXOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,403,            double y0 = dataArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,404,            double y1 = y0 - getYOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,405,            double y2 = dataArea.getMinY();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,406,"            line1 = new Line2D.Double(x0, y0, x1, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,407,"            line2 = new Line2D.Double(x1, y1, x1, y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,408,        },0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,409,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,410,"            double y0 = axis.valueToJava2D(value, adjusted,",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,412,            double y1 = y0 - getYOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,413,            double x0 = dataArea.getMinX();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,414,            double x1 = x0 + getXOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,415,            double x2 = dataArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,416,"            line1 = new Line2D.Double(x0, y0, x1, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,417,"            line2 = new Line2D.Double(x1, y1, x2, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,419,        g2.setPaint(plot.getRangeGridlinePaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,420,        g2.setStroke(plot.getRangeGridlineStroke());,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,421,        g2.draw(line1);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,422,        g2.draw(line2);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,424,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,441,        if (marker instanceof ValueMarker) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,442,            ValueMarker vm = (ValueMarker) marker;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,443,            double value = vm.getValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,444,            Range range = axis.getRange();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,445,            if (!range.contains(value)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,446,                return;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,449,"            Rectangle2D adjusted = new Rectangle2D.Double(dataArea.getX(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,454,            GeneralPath path = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,455,            PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,456,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,457,"                float x = (float) axis.valueToJava2D(value, adjusted, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,459,                float y = (float) adjusted.getMaxY();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,460,                path = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,461,"                path.moveTo(x, y);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,462,"                path.lineTo((float) (x + getXOffset()), ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,464,"                path.lineTo((float) (x + getXOffset()), ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,466,"                path.lineTo(x, (float) adjusted.getMinY());",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,467,                path.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,468,            },0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,469,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,470,"                float y = (float) axis.valueToJava2D(value, adjusted, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,472,                float x = (float) dataArea.getX();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,473,                path = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,474,"                path.moveTo(x, y);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,475,"                path.lineTo(x + (float) this.xOffset, y - (float) this.yOffset);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,476,"                path.lineTo((float) (adjusted.getMaxX() + this.xOffset), ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,478,"                path.lineTo((float) (adjusted.getMaxX()), y);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,479,                path.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,481,            g2.setPaint(marker.getPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,482,            g2.fill(path);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,483,            g2.setPaint(marker.getOutlinePaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,484,            g2.draw(path);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,486,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,513,"        if (!getItemVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,514,            return;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,518,"        Number v = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,519,        if (v == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,520,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,523,"        Rectangle2D adjusted = new Rectangle2D.Double(dataArea.getX(),",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,528,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,531,"        double x1 = domainAxis.getCategoryMiddle(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,533,        double value = v.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,534,"        double y1 = rangeAxis.valueToJava2D(value, adjusted, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,537,"        Shape shape = getItemShape(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,538,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,539,"            shape = ShapeUtilities.createTranslatedShape(shape, y1, x1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,541,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,542,"            shape = ShapeUtilities.createTranslatedShape(shape, x1, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,545,"        if (getItemLineVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,546,            if (column != 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,548,"                Number previousValue = dataset.getValue(row, column - 1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,549,                if (previousValue != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,552,                    double previous = previousValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,553,"                    double x0 = domainAxis.getCategoryMiddle(column - 1, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,556,"                    double y0 = rangeAxis.valueToJava2D(previous, adjusted, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,559,                    double x2 = x0 + getXOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,560,                    double y2 = y0 - getYOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,561,                    double x3 = x1 + getXOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,562,                    double y3 = y1 - getYOffset();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,564,                    GeneralPath clip = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,566,                    if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,567,"                        clip.moveTo((float) y0, (float) x0);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,568,"                        clip.lineTo((float) y1, (float) x1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,569,"                        clip.lineTo((float) y3, (float) x3);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,570,"                        clip.lineTo((float) y2, (float) x2);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,571,"                        clip.lineTo((float) y0, (float) x0);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,572,                        clip.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,574,                    else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,575,"                        clip.moveTo((float) x0, (float) y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,576,"                        clip.lineTo((float) x1, (float) y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,577,"                        clip.lineTo((float) x3, (float) y3);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,578,"                        clip.lineTo((float) x2, (float) y2);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,579,"                        clip.lineTo((float) x0, (float) y0);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,580,                        clip.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,583,"                    g2.setPaint(getItemPaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,584,                    g2.fill(clip);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,585,"                    g2.setStroke(getItemOutlineStroke(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,586,"                    g2.setPaint(getItemOutlinePaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,587,                    g2.draw(clip);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,593,"        if (isItemLabelVisible(row, column)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,594,"            drawItemLabel(g2, orientation, dataset, row, column, x1, y1, ",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,599,        EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,600,        if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,601,"            addItemEntity(entities, dataset, row, column, shape);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,604,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,614,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,615,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,617,        if (!(obj instanceof LineRenderer3D)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,618,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,620,        LineRenderer3D that = (LineRenderer3D) obj;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,621,        if (this.xOffset != that.xOffset) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,622,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,624,        if (this.yOffset != that.yOffset) {,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,625,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,627,"        if (!PaintUtilities.equal(this.wallPaint, that.wallPaint)) {",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,628,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,630,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,641,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,642,"        SerialUtilities.writePaint(this.wallPaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,643,    },0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,655,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,656,        this.wallPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/category/LineRenderer3D,26,657,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,129,        return this.renderAsPercentages;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,142,        this.renderAsPercentages = asPercentages; ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,143,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,144,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,154,        return 2;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,167,"            return new Range(0.0, 1.0);   ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,200,        Shape entityArea = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,201,        EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,203,        double y1 = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,204,"        Number n = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,205,        if (n != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,206,            y1 = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,208,"        double[] stack1 = getStackValues(dataset, row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,214,"        double xx1 = domainAxis.getCategoryMiddle(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,220,        double y0 = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,221,"        n = dataset.getValue(row, Math.max(column - 1, 0));",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,222,        if (n != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,223,            y0 = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,225,"        double[] stack0 = getStackValues(dataset, row, Math.max(column - 1, 0));",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,228,"        double xx0 = domainAxis.getCategoryStart(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,231,        int itemCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,232,        double y2 = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,233,"        n = dataset.getValue(row, Math.min(column + 1, itemCount - 1));",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,234,        if (n != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,235,            y2 = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,237,"        double[] stack2 = getStackValues(dataset, row, Math.min(column + 1, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,240,"        double xx2 = domainAxis.getCategoryEnd(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,244,        double xxLeft = xx0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,245,        double xxRight = xx2;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,247,"        double[] stackLeft = averageStackValues(stack0, stack1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,248,"        double[] stackRight = averageStackValues(stack1, stack2);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,249,"        double[] adjStackLeft = adjustedStackValues(stack0, stack1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,250,"        double[] adjStackRight = adjustedStackValues(stack1, stack2);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,254,        RectangleEdge edge1 = plot.getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,256,        GeneralPath left = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,257,        GeneralPath right = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,258,        if (y1 >= 0.0) {  // handle positive value,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,259,"            transY1 = (float) rangeAxis.valueToJava2D(y1 + stack1[1], dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,261,"            float transStack1 = (float) rangeAxis.valueToJava2D(stack1[1], ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,263,            float transStackLeft = (float) rangeAxis.valueToJava2D(,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,267,            if (y0 >= 0.0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,268,                double yleft = (y0 + y1) / 2.0 + stackLeft[1];,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,269,                float transYLeft ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,271,"                left.moveTo((float) xx1, transY1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,272,"                left.lineTo((float) xx1, transStack1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,273,"                left.lineTo((float) xxLeft, transStackLeft);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,274,"                left.lineTo((float) xxLeft, transYLeft);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,275,                left.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,276,            },0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,278,"                left.moveTo((float) xx1, transStack1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,279,"                left.lineTo((float) xx1, transY1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,280,"                left.lineTo((float) xxLeft, transStackLeft);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,281,                left.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,284,            float transStackRight = (float) rangeAxis.valueToJava2D(,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,287,            if (y2 >= 0.0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,288,                double yright = (y1 + y2) / 2.0 + stackRight[1];,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,289,                float transYRight ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,291,"                right.moveTo((float) xx1, transStack1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,292,"                right.lineTo((float) xx1, transY1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,293,"                right.lineTo((float) xxRight, transYRight);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,294,"                right.lineTo((float) xxRight, transStackRight);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,295,                right.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,296,            },0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,298,"                right.moveTo((float) xx1, transStack1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,299,"                right.lineTo((float) xx1, transY1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,300,"                right.lineTo((float) xxRight, transStackRight);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,301,                right.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,303,        },0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,305,"            transY1 = (float) rangeAxis.valueToJava2D(y1 + stack1[0], dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,307,"            float transStack1 = (float) rangeAxis.valueToJava2D(stack1[0], ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,309,            float transStackLeft = (float) rangeAxis.valueToJava2D(,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,313,            if (y0 >= 0.0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,314,"                left.moveTo((float) xx1, transStack1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,315,"                left.lineTo((float) xx1, transY1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,316,"                left.lineTo((float) xxLeft, transStackLeft);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,317,                left.clone();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,320,                double yleft = (y0 + y1) / 2.0 + stackLeft[0];,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,321,"                float transYLeft = (float) rangeAxis.valueToJava2D(yleft, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,323,"                left.moveTo((float) xx1, transY1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,324,"                left.lineTo((float) xx1, transStack1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,325,"                left.lineTo((float) xxLeft, transStackLeft);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,326,"                left.lineTo((float) xxLeft, transYLeft);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,327,                left.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,329,            float transStackRight = (float) rangeAxis.valueToJava2D(,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,333,            if (y2 >= 0.0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,334,"                right.moveTo((float) xx1, transStack1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,335,"                right.lineTo((float) xx1, transY1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,336,"                right.lineTo((float) xxRight, transStackRight);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,337,                right.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,340,                double yright = (y1 + y2) / 2.0 + stackRight[0];,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,341,"                float transYRight = (float) rangeAxis.valueToJava2D(yright, ",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,343,"                right.moveTo((float) xx1, transStack1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,344,"                right.lineTo((float) xx1, transY1);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,345,"                right.lineTo((float) xxRight, transYRight);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,346,"                right.lineTo((float) xxRight, transStackRight);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,347,                right.closePath();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,351,"        g2.setPaint(getItemPaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,352,"        g2.setStroke(getItemStroke(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,355,"        Paint itemPaint = getItemPaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,356,        if (pass == 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,357,            g2.setPaint(itemPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,358,            g2.fill(left);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,359,            g2.fill(right);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,363,        if (entities != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,364,            GeneralPath gp = new GeneralPath(left);,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,365,"            gp.append(right, false);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,366,            entityArea = gp;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,367,"            addItemEntity(entities, dataset, row, column, entityArea);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,370,    },0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,525,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,527,        double total = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,528,        if (this.renderAsPercentages) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,529,"            total = DataUtilities.calculateColumnTotal(dataset, category);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,531,        for (int i = 0; i < series; i++) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,532,"            n = dataset.getValue(i, category);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,533,            if (n != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,534,                double v = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,535,                if (this.renderAsPercentages) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,536,                    v = v / total;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,538,                result += v;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,541,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,560,        double[] result = new double[2];,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,561,        for (int i = 0; i < series; i++) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,562,            if (isSeriesVisible(i)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,563,                double v = 0.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,564,"                Number n = dataset.getValue(i, index);",0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,565,                if (n != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,566,                    v = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,568,                if (!Double.isNaN(v)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,569,                    if (v >= 0.0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,570,                        result[1] += v;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,573,                        result[0] += v;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,578,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,591,        double[] result = new double[2];,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,592,        result[0] = (stack1[0] + stack2[0]) / 2.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,593,        result[1] = (stack1[1] + stack2[1]) / 2.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,594,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,608,        double[] result = new double[2];,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,609,        if (stack1[0] == 0.0 || stack2[0] == 0.0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,610,            result[0] = 0.0;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,613,            result[0] = (stack1[0] + stack2[0]) / 2.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,615,        if (stack1[1] == 0.0 || stack2[1] == 0.0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,616,            result[1] = 0.0;   ,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,619,            result[1] = (stack1[1] + stack2[1]) / 2.0;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,621,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,632,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,633,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,635,        if (! (obj instanceof StackedAreaRenderer)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,636,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,638,        StackedAreaRenderer that = (StackedAreaRenderer) obj;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,639,        if (this.renderAsPercentages != that.renderAsPercentages) {,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,640,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/StackedAreaRenderer,26,642,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,83,    public OutlierListCollection() {,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,72,    private boolean highFarOut = false;,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,78,    private boolean lowFarOut = false;,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,84,        this.outlierLists = new ArrayList();,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,85,    },0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,94,        return this.highFarOut;,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,104,        this.highFarOut = farOut;,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,105,    },0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,114,        return this.lowFarOut;,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,124,        this.lowFarOut = farOut;,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,125,    },0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,139,        if (this.outlierLists.isEmpty()) {,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,140,            return this.outlierLists.add(new OutlierList(outlier));,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,143,            boolean updated = false;,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,144,            for (Iterator iterator = this.outlierLists.iterator(); ,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,145,                 iterator.hasNext();) {,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,146,                OutlierList list = (OutlierList) iterator.next();,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,147,                if (list.isOverlapped(outlier)) {,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,148,"                    updated = updateOutlierList(list, outlier);",0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,150,            },0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,151,            if (!updated) {,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,153,                updated = this.outlierLists.add(new OutlierList(outlier));,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,155,            return updated;,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,166,        return this.outlierLists.iterator();    ,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,181,        boolean result = false;,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,182,        result = list.add(outlier);,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,183,        list.updateAveragedOutlier();,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,184,        list.setMultiple(true);,0.0,0,-1,0
org/jfree/chart/renderer/OutlierListCollection,26,185,        return result;,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,106,"        this(text, DEFAULT_FONT, DEFAULT_PAINT);",0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,107,    },0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,116,"        this(text, font, DEFAULT_PAINT);",0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,117,    },0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,141,"            throw new IllegalArgumentException(""Null 'text' argument."");  ",0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,144,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,147,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,188,        return this.baselineOffset;   ,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,246,        else if (anchor == TextAnchor.BOTTOM_LEFT ,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,249,            result = -lm.getDescent() - lm.getLeading();,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,263,            return false;   ,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,268,        if (obj instanceof TextFragment) {,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,269,            TextFragment tf = (TextFragment) obj;,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,270,            if (!this.text.equals(tf.text)) {,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,271,                return false;   ,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,273,            if (!this.font.equals(tf.font)) {,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,274,                return false;   ,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,276,            if (!this.paint.equals(tf.paint)) {,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,277,                return false;   ,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,279,            return true;,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,281,        return false;,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,291,        result = (this.text != null ? this.text.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,292,        result = 29 * result + (this.font != null ? this.font.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,293,        result = 29 * result + (this.paint != null ? this.paint.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,294,        return result;,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,305,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,306,"        SerialUtilities.writePaint(this.paint, stream);",0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,307,    },0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,319,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,320,        this.paint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/text/TextFragment,26,321,    },0.0,0,-1,0
org/jfree/chart/text/TextLine,26,77,    public TextLine() {,0.0,0,-1,0
org/jfree/chart/text/TextLine,26,78,        this.fragments = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/text/TextLine,26,79,    },0.0,0,-1,0
org/jfree/chart/text/TextLine,26,87,"        this(text, TextFragment.DEFAULT_FONT);   ",0.0,0,-1,0
org/jfree/chart/text/TextLine,26,88,    },0.0,0,-1,0
org/jfree/chart/text/TextLine,26,96,"    public TextLine(String text, Font font) {",0.0,0,-1,0
org/jfree/chart/text/TextLine,26,97,        this.fragments = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/text/TextLine,26,98,"        TextFragment fragment = new TextFragment(text, font);",0.0,0,-1,0
org/jfree/chart/text/TextLine,26,99,        this.fragments.add(fragment);,0.0,0,-1,0
org/jfree/chart/text/TextLine,26,100,    },0.0,0,-1,0
org/jfree/chart/text/TextLine,26,111,"            throw new IllegalArgumentException(""Null 'text' argument."");   ",0.0,0,-1,0
org/jfree/chart/text/TextLine,26,114,"            throw new IllegalArgumentException(""Null 'font' argument."");   ",0.0,0,-1,0
org/jfree/chart/text/TextLine,26,117,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/text/TextLine,26,197,        TextFragment result = null;,0.0,0,-1,0
org/jfree/chart/text/TextLine,26,198,        if (this.fragments.size() > 0) {,0.0,0,-1,0
org/jfree/chart/text/TextLine,26,199,            result = (TextFragment) this.fragments.get(0);,0.0,0,-1,0
org/jfree/chart/text/TextLine,26,201,        return result;,0.0,0,-1,0
org/jfree/chart/text/TextLine,26,247,        if (obj == null) {,0.0,0,-1,0
org/jfree/chart/text/TextLine,26,248,            return false;,0.0,0,-1,0
org/jfree/chart/text/TextLine,26,250,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/text/TextLine,26,251,            return true;   ,0.0,0,-1,0
org/jfree/chart/text/TextLine,26,253,        if (obj instanceof TextLine) {,0.0,0,-1,0
org/jfree/chart/text/TextLine,26,254,            TextLine line = (TextLine) obj;,0.0,0,-1,0
org/jfree/chart/text/TextLine,26,255,            return this.fragments.equals(line.fragments);,0.0,0,-1,0
org/jfree/chart/text/TextLine,26,257,        return false;,0.0,0,-1,0
org/jfree/chart/text/TextLine,26,266,        return (this.fragments != null ? this.fragments.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,101,    private TextUtilities() {,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,102,    },0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,117,"            throw new IllegalArgumentException(""Null 'text' argument."");",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,126,"                String line = input.substring(start, index);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,127,                if (index < input.length() - 1) {,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,128,"                    result.addLine(line, font, paint);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,129,                    input = input.substring(index + 1);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,132,                    moreInputToProcess = false;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,134,            },0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,136,                if (index < input.length() - 1) {,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,137,                    input = input.substring(index + 1);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,140,                    moreInputToProcess = false;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,205,                current++;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,251,                return newline;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,256,"                    while (measurer.getStringWidth(text, start, end) > width) {",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,257,                        end--;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,258,                        if (end <= start) {,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,259,                            return end;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,262,                    return end;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,301,            double width = fm.stringWidth(text);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,302,            double height = fm.getHeight();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,303,"            bounds = new Rectangle2D.Double(0.0, -fm.getAscent(), width, ",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,324,        Rectangle2D textBounds = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,325,"        float[] adjust = deriveTextBoundsAnchorOffsets(g2, text, anchor, ",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,328,"        textBounds.setRect(x + adjust[0], y + adjust[1] + adjust[2],",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,330,"        g2.drawString(text, x + adjust[0], y + adjust[1]);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,331,        return textBounds;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,353,        float[] result = new float[3];,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,354,        FontRenderContext frc = g2.getFontRenderContext();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,355,        Font f = g2.getFont();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,356,        FontMetrics fm = g2.getFontMetrics(f);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,357,"        Rectangle2D bounds = TextUtilities.getTextBounds(text, g2, fm);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,358,"        LineMetrics metrics = f.getLineMetrics(text, frc);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,359,        float ascent = metrics.getAscent();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,360,        result[2] = -ascent;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,361,        float halfAscent = ascent / 2.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,362,        float descent = metrics.getDescent();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,363,        float leading = metrics.getLeading();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,364,        float xAdj = 0.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,365,        float yAdj = 0.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,367,        if (anchor == TextAnchor.TOP_CENTER,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,373,            xAdj = (float) -bounds.getWidth() / 2.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,376,        else if (anchor == TextAnchor.TOP_RIGHT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,382,            xAdj = (float) -bounds.getWidth();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,386,        if (anchor == TextAnchor.TOP_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,390,            yAdj = -descent - leading + (float) bounds.getHeight();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,393,        else if (anchor == TextAnchor.HALF_ASCENT_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,397,            yAdj = halfAscent;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,400,        else if (anchor == TextAnchor.CENTER_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,404,            yAdj = -descent - leading + (float) (bounds.getHeight() / 2.0);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,407,        else if (anchor == TextAnchor.BASELINE_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,411,            yAdj = 0.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,414,        else if (anchor == TextAnchor.BOTTOM_LEFT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,418,            yAdj = -metrics.getDescent() - metrics.getLeading();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,421,        if (textBounds != null) {,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,422,            textBounds.setRect(bounds);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,424,        result[0] = xAdj;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,425,        result[1] = yAdj;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,426,        return result;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,440,        useDrawRotatedStringWorkaround = use;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,441,    },0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,457,"        drawRotatedString(text, g2, x, y, angle, x, y);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,458,    },0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,479,            return;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,491,"            TextLayout tl = new TextLayout(text, g2.getFont(), ",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,493,"            tl.draw(g2, textX, textY);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,494,        },0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,521,            return;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,545,            return;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,575,"        if (text == null || text.equals("""")) {",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,576,            return null;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,578,"        float[] textAdj = deriveTextBoundsAnchorOffsets(g2, text, textAnchor);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,579,"        float[] rotateAdj = deriveRotationAnchorOffsets(g2, text, ",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,581,"        Shape result = calculateRotatedStringBounds(text, g2, ",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,584,        return result;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,632,            xAdj = (float) -bounds.getWidth();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,640,            yAdj = -descent - leading + (float) bounds.getHeight();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,647,            yAdj = halfAscent;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,709,            xAdj = 0.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,721,        else if (anchor == TextAnchor.TOP_RIGHT,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,727,            xAdj = (float) bounds.getWidth();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,735,            yAdj = descent + leading - (float) bounds.getHeight();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,749,            yAdj = -halfAscent;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,756,            yAdj = 0.0f;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,791,"        if ((text == null) || (text.equals(""""))) {",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,792,            return null;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,794,        FontMetrics fm = g2.getFontMetrics();,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,795,"        Rectangle2D bounds = TextUtilities.getTextBounds(text, g2, fm);",0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,796,        AffineTransform translate = AffineTransform.getTranslateInstance(,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,798,        Shape translatedBounds = translate.createTransformedShape(bounds);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,799,        AffineTransform rotate = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,801,        Shape result = rotate.createTransformedShape(translatedBounds);,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,802,        return result;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,814,        return useFontMetricsGetStringBounds;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,825,        useFontMetricsGetStringBounds = use;,0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,826,    },0.0,0,-1,0
org/jfree/chart/text/TextUtilities,26,835,        return useDrawRotatedStringWorkaround;,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,99,    public StandardCategoryURLGenerator(String prefix) {,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,100,        if (prefix == null) {,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,101,"            throw new IllegalArgumentException(""Null 'prefix' argument."");   ",0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,103,        this.prefix = prefix;,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,104,    },0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,117,                                        String categoryParameterName) {,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,119,        if (prefix == null) {,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,120,"            throw new IllegalArgumentException(""Null 'prefix' argument."");   ",0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,122,        if (seriesParameterName == null) {,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,123,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,127,        if (categoryParameterName == null) {,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,128,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,132,        this.prefix = prefix;,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,133,        this.seriesParameterName = seriesParameterName;,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,134,        this.categoryParameterName = categoryParameterName;,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,136,    },0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,149,        String url = this.prefix;,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,150,        Comparable seriesKey = dataset.getRowKey(series);,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,151,        Comparable categoryKey = dataset.getColumnKey(category);,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,152,"        boolean firstParameter = url.indexOf(""?"") == -1;",0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,153,"        url += firstParameter ? ""?"" : ""&amp;"";",0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,154,"        url += this.seriesParameterName + ""="";",0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,155,        String seriesKeyStr = null;,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,157,"            seriesKeyStr = URLEncoder.encode(seriesKey.toString(), ""UTF-8"");",0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,161,        },0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,159,        catch (UnsupportedEncodingException e) {,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,160,            seriesKeyStr = seriesKey.toString();,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,162,        String categoryKeyStr = null;,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,164,"            categoryKeyStr = URLEncoder.encode(categoryKey.toString(), ""UTF-8"");",0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,168,        },0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,166,        catch (UnsupportedEncodingException e) {,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,167,            categoryKeyStr = categoryKey.toString();,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,169,"        url += seriesKeyStr + ""&amp;"" + this.categoryParameterName + ""="" ",0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,171,        return url;,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,185,        return super.clone();,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,197,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,198,            return true;,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,200,        if (!(obj instanceof StandardCategoryURLGenerator)) {,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,201,            return false;,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,203,        StandardCategoryURLGenerator that = (StandardCategoryURLGenerator) obj;,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,204,"        if (!ObjectUtilities.equal(this.prefix, that.prefix)) {",0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,205,            return false;,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,208,"        if (!ObjectUtilities.equal(this.seriesParameterName, ",0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,210,            return false;,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,212,"        if (!ObjectUtilities.equal(this.categoryParameterName, ",0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,214,            return false;,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,216,        return true;,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,226,        result = (this.prefix != null ? this.prefix.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,227,        result = 29 * result ,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,230,        result = 29 * result ,0.0,0,-1,0
org/jfree/chart/urls/StandardCategoryURLGenerator,26,233,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PlotState,26,58,    public PlotState() {,0.0,0,-1,0
org/jfree/chart/plot/PlotState,26,59,        this.sharedAxisStates = new HashMap();    ,0.0,0,-1,0
org/jfree/chart/plot/PlotState,26,60,    },0.0,0,-1,0
org/jfree/chart/plot/PlotState,26,68,        return this.sharedAxisStates;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,430,        this(null);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,431,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,439,        super();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,308,    private transient Paint shadowPaint = Color.gray;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,311,    private double shadowXOffset = 4.0f;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,314,    private double shadowYOffset = 4.0f;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,350,    private double maximumLabelWidth = 0.20;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,356,    private double labelGap = 0.05;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,362,    private double labelLinkMargin = 0.05;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,365,    private transient Paint labelLinkPaint = Color.black;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,368,    private transient Stroke labelLinkStroke = new BasicStroke(0.5f);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,440,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,441,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,442,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,444,        this.pieIndex = 0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,446,        this.interiorGap = DEFAULT_INTERIOR_GAP;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,447,        this.circular = true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,448,        this.startAngle = DEFAULT_START_ANGLE;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,449,        this.direction = Rotation.CLOCKWISE;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,450,        this.minimumArcAngleToDraw = DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,452,        this.sectionPaintMap = new PaintMap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,453,        this.baseSectionPaint = Color.gray;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,455,        this.sectionOutlinesVisible = true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,456,        this.sectionOutlinePaintMap = new PaintMap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,457,        this.baseSectionOutlinePaint = DEFAULT_OUTLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,459,        this.sectionOutlineStrokeMap = new StrokeMap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,460,        this.baseSectionOutlineStroke = DEFAULT_OUTLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,462,        this.explodePercentages = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,464,        this.labelGenerator = new StandardPieSectionLabelGenerator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,465,        this.labelFont = DEFAULT_LABEL_FONT;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,466,        this.labelPaint = DEFAULT_LABEL_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,467,        this.labelBackgroundPaint = DEFAULT_LABEL_BACKGROUND_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,468,        this.labelOutlinePaint = DEFAULT_LABEL_OUTLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,469,        this.labelOutlineStroke = DEFAULT_LABEL_OUTLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,470,        this.labelShadowPaint = DEFAULT_LABEL_SHADOW_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,471,        this.labelLinksVisible = true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,472,        this.labelDistributor = new PieLabelDistributor(0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,474,        this.toolTipGenerator = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,475,        this.urlGenerator = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,476,        this.legendLabelGenerator = new StandardPieSectionLabelGenerator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,477,        this.legendLabelToolTipGenerator = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,478,        this.legendLabelURLGenerator = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,479,        this.legendItemShape = Plot.DEFAULT_LEGEND_ITEM_CIRCLE;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,481,        this.ignoreNullValues = false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,482,        this.ignoreZeroValues = false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,483,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,239,"    public static final Font DEFAULT_LABEL_FONT = new Font(""SansSerif"", ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,243,    public static final Paint DEFAULT_LABEL_PAINT = Color.black;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,246,"    public static final Paint DEFAULT_LABEL_BACKGROUND_PAINT = new Color(255, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,250,    public static final Paint DEFAULT_LABEL_OUTLINE_PAINT = Color.black;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,253,    public static final Stroke DEFAULT_LABEL_OUTLINE_STROKE = new BasicStroke(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,257,    public static final Paint DEFAULT_LABEL_SHADOW_PAINT = Color.lightGray;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,423,    protected static ResourceBundle localizationResources =,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,493,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,506,        PieDataset existing = this.dataset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,507,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,508,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,512,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,513,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,514,            setDatasetGroup(dataset.getGroup());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,515,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,519,"        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,520,        datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,521,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,532,        return this.pieIndex;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,544,        this.pieIndex = index;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,545,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,556,        return this.startAngle;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,570,        this.startAngle = angle;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,571,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,572,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,583,        return this.direction;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,595,        if (direction == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,596,"            throw new IllegalArgumentException(""Null 'direction' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,598,        this.direction = direction;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,599,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,601,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,612,        return this.interiorGap;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,628,        if ((percent < 0.0) || (percent > MAX_INTERIOR_GAP)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,629,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,634,        if (this.interiorGap != percent) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,635,            this.interiorGap = percent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,636,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,639,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,650,        return this.circular;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,662,"        setCircular(flag, true);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,663,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,675,        this.circular = circular;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,676,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,677,            notifyListeners(new PlotChangeEvent(this));   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,679,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,690,        return this.ignoreNullValues;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,705,        this.ignoreNullValues = flag;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,706,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,707,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,718,        return this.ignoreZeroValues;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,733,        this.ignoreZeroValues = flag;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,734,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,735,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,752,"        return lookupSectionPaint(key, false);        ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,777,        Paint result = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,780,        result = this.sectionPaintMap.getPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,781,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,782,            return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,786,        if (autoPopulate) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,787,            DrawingSupplier ds = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,788,            if (ds != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,789,                result = ds.getNextPaint();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,790,"                this.sectionPaintMap.put(key, result);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,793,                result = this.baseSectionPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,795,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,797,            result = this.baseSectionPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,799,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,817,        Comparable key = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,818,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,819,            if (section >= 0 && section < this.dataset.getItemCount()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,820,                key = this.dataset.getKey(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,823,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,824,            key = new Integer(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,826,        return key;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,847,        return this.sectionPaintMap.getPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,866,"        this.sectionPaintMap.put(key, paint);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,867,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,868,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,879,        return this.baseSectionPaint;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,891,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,892,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,894,        this.baseSectionPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,895,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,896,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,910,        return this.sectionOutlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,923,        this.sectionOutlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,924,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,925,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,940,"        return lookupSectionOutlinePaint(key, false);        ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,967,        Paint result = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,970,        result = this.sectionOutlinePaintMap.getPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,971,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,972,            return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,976,        if (autoPopulate) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,977,            DrawingSupplier ds = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,978,            if (ds != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,979,                result = ds.getNextOutlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,980,"                this.sectionOutlinePaintMap.put(key, result);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,983,                result = this.baseSectionOutlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,985,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,987,            result = this.baseSectionOutlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,989,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1010,        return this.sectionOutlinePaintMap.getPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1029,"        this.sectionOutlinePaintMap.put(key, paint);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1030,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1031,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1042,        return this.baseSectionOutlinePaint;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1053,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1054,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1056,        this.baseSectionOutlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1057,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1058,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1075,"        return lookupSectionOutlineStroke(key, false);        ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1102,        Stroke result = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1105,        result = this.sectionOutlineStrokeMap.getStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1106,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1107,            return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1111,        if (autoPopulate) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1112,            DrawingSupplier ds = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1113,            if (ds != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1114,                result = ds.getNextOutlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1115,"                this.sectionOutlineStrokeMap.put(key, result);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1118,                result = this.baseSectionOutlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1120,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1122,            result = this.baseSectionOutlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1124,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1145,        return this.sectionOutlineStrokeMap.getStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1164,"        this.sectionOutlineStrokeMap.put(key, stroke);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1165,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1166,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1177,        return this.baseSectionOutlineStroke;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1188,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1189,"            throw new IllegalArgumentException(""Null 'stroke' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1191,        this.baseSectionOutlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1192,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1193,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1203,        return this.shadowPaint;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1215,        this.shadowPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1216,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1217,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1227,        return this.shadowXOffset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1239,        this.shadowXOffset = offset;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1240,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1241,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1251,        return this.shadowYOffset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1263,        this.shadowYOffset = offset;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1264,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1265,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1284,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1285,        if (this.explodePercentages != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1286,            Number percent = (Number) this.explodePercentages.get(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1287,            if (percent != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1288,                result = percent.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1291,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1306,        if (key == null) { ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1307,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1309,        if (this.explodePercentages == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1310,            this.explodePercentages = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1312,"        this.explodePercentages.put(key, new Double(percent));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1313,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1314,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1322,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1323,        Iterator iterator = this.dataset.getKeys().iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1324,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1325,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1326,            Number explode = (Number) this.explodePercentages.get(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1327,            if (explode != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1328,"                result = Math.max(result, explode.doubleValue());   ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1330,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1331,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1342,        return this.labelGenerator;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1354,        this.labelGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1355,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1356,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1367,        return this.labelGap;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1380,        this.labelGap = gap;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1381,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1382,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1392,        return this.maximumLabelWidth;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1404,        this.maximumLabelWidth = width;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1405,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1406,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1417,        return this.labelLinksVisible;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1432,        this.labelLinksVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1433,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1434,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1445,        return this.labelLinkMargin;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1457,        this.labelLinkMargin = margin;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1458,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1459,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1470,        return this.labelLinkPaint;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1483,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1484,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1486,        this.labelLinkPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1487,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1488,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1498,        return this.labelLinkStroke;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1510,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1511,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1513,        this.labelLinkStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1514,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1515,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1525,        return this.labelFont;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1537,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1538,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1540,        this.labelFont = font;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1541,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1542,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1552,        return this.labelPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1564,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1565,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1567,        this.labelPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1568,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1569,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1579,        return this.labelBackgroundPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1591,        this.labelBackgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1592,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1593,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1603,        return this.labelOutlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1615,        this.labelOutlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1616,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1617,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1627,        return this.labelOutlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1639,        this.labelOutlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1640,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1641,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1651,        return this.labelShadowPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1663,        this.labelShadowPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1664,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1665,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1676,        return this.labelDistributor;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1688,        if (distributor == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1689,"            throw new IllegalArgumentException(""Null 'distributor' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1691,        this.labelDistributor = distributor;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1692,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1693,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1705,        return this.toolTipGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1718,        this.toolTipGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1719,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1720,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1730,        return this.urlGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1742,        this.urlGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1743,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1744,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1755,        return this.minimumArcAngleToDraw;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1777,        this.minimumArcAngleToDraw = angle;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1778,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1788,        return this.legendItemShape;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1800,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1801,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1803,        this.legendItemShape = shape;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1804,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1805,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1815,        return this.legendLabelGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1827,        if (generator == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1828,"            throw new IllegalArgumentException(""Null 'generator' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1830,        this.legendLabelGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1831,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1832,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1842,        return this.legendLabelToolTipGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1855,        this.legendLabelToolTipGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1856,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1857,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1869,        return this.legendLabelURLGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1883,        this.legendLabelURLGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1884,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1885,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1905,        PiePlotState state = new PiePlotState(info);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1906,        state.setPassesRequired(2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1907,        state.setTotal(DatasetUtilities.calculatePieDatasetTotal(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1909,        state.setLatestAngle(plot.getStartAngle());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1910,        return state;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1929,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1930,        insets.trim(area);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1932,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1933,            info.setPlotArea(area);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1934,            info.setDataArea(area);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1937,"        drawBackground(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1938,"        drawOutline(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1940,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1941,        g2.clip(area);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1943,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1944,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1947,        if (!DatasetUtilities.isEmptyOrNull(this.dataset)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1948,"            drawPie(g2, area, info);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1951,"            drawNoDataMessage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1954,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1955,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1957,"        drawOutline(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1959,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1971,"        PiePlotState state = initialise(g2, plotArea, this, null, info);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1974,        double labelWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1975,        if (this.labelGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1976,            labelWidth = this.labelGap + this.maximumLabelWidth ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1979,        double gapHorizontal = plotArea.getWidth() * (this.interiorGap ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1981,        double gapVertical = plotArea.getHeight() * this.interiorGap;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1983,        double linkX = plotArea.getX() + gapHorizontal / 2;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1984,        double linkY = plotArea.getY() + gapVertical / 2;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1985,        double linkW = plotArea.getWidth() - gapHorizontal;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1986,        double linkH = plotArea.getHeight() - gapVertical;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1989,        if (this.circular) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1990,"            double min = Math.min(linkW, linkH) / 2;",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1991,            linkX = (linkX + linkX + linkW) / 2 - min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1992,            linkY = (linkY + linkY + linkH) / 2 - min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1993,            linkW = 2 * min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1994,            linkH = 2 * min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,1999,"        Rectangle2D linkArea = new Rectangle2D.Double(linkX, linkY, linkW, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2001,        state.setLinkArea(linkArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2006,        double hh = linkArea.getWidth() * this.labelLinkMargin;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2007,        double vv = linkArea.getHeight() * this.labelLinkMargin;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2008,"        Rectangle2D explodeArea = new Rectangle2D.Double(linkX + hh / 2.0, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2011,        state.setExplodedPieArea(explodeArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2016,        double maximumExplodePercent = getMaximumExplodePercent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2017,        double percent = maximumExplodePercent / (1.0 + maximumExplodePercent);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2019,        double h1 = explodeArea.getWidth() * percent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2020,        double v1 = explodeArea.getHeight() * percent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2021,        Rectangle2D pieArea = new Rectangle2D.Double(explodeArea.getX() ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2025,        state.setPieArea(pieArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2026,        state.setPieCenterX(pieArea.getCenterX());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2027,        state.setPieCenterY(pieArea.getCenterY());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2028,        state.setPieWRadius(pieArea.getWidth() / 2.0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2029,        state.setPieHRadius(pieArea.getHeight() / 2.0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2031,        if ((this.dataset != null) && (this.dataset.getKeys().size() > 0)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2033,            List keys = this.dataset.getKeys();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2034,            double totalValue = DatasetUtilities.calculatePieDatasetTotal(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2037,            int passesRequired = state.getPassesRequired();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2038,            for (int pass = 0; pass < passesRequired; pass++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2039,                double runningTotal = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2040,                for (int section = 0; section < keys.size(); section++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2041,                    Number n = this.dataset.getValue(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2042,                    if (n != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2043,                        double value = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2044,                        if (value > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2045,                            runningTotal += value;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2046,"                            drawItem(g2, section, explodeArea, state, pass);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2052,"            drawLabels(g2, keys, totalValue, plotArea, linkArea, state);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2054,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2056,"            drawNoDataMessage(g2, plotArea);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2058,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2072,        Number n = this.dataset.getValue(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2073,        if (n == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2074,            return;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2076,        double value = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2077,        double angle1 = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2078,        double angle2 = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2080,        if (this.direction == Rotation.CLOCKWISE) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2081,            angle1 = state.getLatestAngle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2082,            angle2 = angle1 - value / state.getTotal() * 360.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2084,        else if (this.direction == Rotation.ANTICLOCKWISE) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2085,            angle1 = state.getLatestAngle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2086,            angle2 = angle1 + value / state.getTotal() * 360.0;         ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2089,"            throw new IllegalStateException(""Rotation type not recognised."");   ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2092,        double angle = (angle2 - angle1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2093,        if (Math.abs(angle) > getMinimumArcAngleToDraw()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2094,            double ep = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2095,            double mep = getMaximumExplodePercent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2096,            if (mep > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2097,                ep = getExplodePercent(getSectionKey(section)) / mep;                ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2099,"            Rectangle2D arcBounds = getArcBounds(state.getPieArea(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2101,"            Arc2D.Double arc = new Arc2D.Double(arcBounds, angle1, angle, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2104,            if (currentPass == 0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2105,                if (this.shadowPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2106,                    Shape shadowArc = ShapeUtilities.createTranslatedShape(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2109,                    g2.setPaint(this.shadowPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2110,                    g2.fill(shadowArc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2111,                },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2113,            else if (currentPass == 1) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2114,                Comparable key = getSectionKey(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2115,"                Paint paint = lookupSectionPaint(key, true);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2116,                g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2117,                g2.fill(arc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2119,                Paint outlinePaint = lookupSectionOutlinePaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2120,                Stroke outlineStroke = lookupSectionOutlineStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2121,                if (this.sectionOutlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2122,                    g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2123,                    g2.setStroke(outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2124,                    g2.draw(arc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2129,                if (state.getInfo() != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2130,                    EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2131,                    if (entities != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2132,                        String tip = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2133,                        if (this.toolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2134,                            tip = this.toolTipGenerator.generateToolTip(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2137,                        String url = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2138,                        if (this.urlGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2139,"                            url = this.urlGenerator.generateURL(this.dataset, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2142,                        PieSectionEntity entity = new PieSectionEntity(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2145,                        entities.add(entity);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2150,        state.setLatestAngle(angle2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2151,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2167,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2168,        g2.setComposite(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2172,        DefaultKeyedValues leftKeys = new DefaultKeyedValues();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2173,        DefaultKeyedValues rightKeys = new DefaultKeyedValues();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2175,        double runningTotal1 = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2176,        Iterator iterator1 = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2177,        while (iterator1.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2178,            Comparable key = (Comparable) iterator1.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2179,            boolean include = true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2180,            double v = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2181,            Number n = this.dataset.getValue(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2182,            if (n == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2183,                include = !this.ignoreNullValues;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2186,                v = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2187,                include = this.ignoreZeroValues ? v > 0.0 : v >= 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2190,            if (include) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2191,                runningTotal1 = runningTotal1 + v;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2194,                double mid = this.startAngle + (this.direction.getFactor(),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2196,                if (Math.cos(Math.toRadians(mid)) < 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2197,"                    leftKeys.addValue(key, new Double(mid));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2200,"                    rightKeys.addValue(key, new Double(mid));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2203,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2205,        g2.setFont(getLabelFont());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2206,        float maxLabelWidth ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2210,        if (this.labelGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2211,"            drawLeftLabels(leftKeys, g2, plotArea, linkArea, maxLabelWidth, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2213,"            drawRightLabels(rightKeys, g2, plotArea, linkArea, maxLabelWidth, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2216,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2218,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2236,        this.labelDistributor.clear();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2237,        double lGap = plotArea.getWidth() * this.labelGap;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2238,        double verticalLinkRadius = state.getLinkArea().getHeight() / 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2239,        for (int i = 0; i < leftKeys.getItemCount(); i++) {   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2240,            String label = this.labelGenerator.generateSectionLabel(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2242,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2243,"                TextBlock block = TextUtilities.createTextBlock(label, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2246,                TextBox labelBox = new TextBox(block);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2247,                labelBox.setBackgroundPaint(this.labelBackgroundPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2248,                labelBox.setOutlinePaint(this.labelOutlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2249,                labelBox.setOutlineStroke(this.labelOutlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2250,                labelBox.setShadowPaint(this.labelShadowPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2251,                double theta = Math.toRadians(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2253,                double baseY = state.getPieCenterY() - Math.sin(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2255,                double hh = labelBox.getHeight(g2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2257,                this.labelDistributor.addPieLabelRecord(new PieLabelRecord(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2263,"        this.labelDistributor.distributeLabels(plotArea.getMinY(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2265,        for (int i = 0; i < this.labelDistributor.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2266,"            drawLeftLabel(g2, state, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2269,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2286,        this.labelDistributor.clear();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2287,        double lGap = plotArea.getWidth() * this.labelGap;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2288,        double verticalLinkRadius = state.getLinkArea().getHeight() / 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2290,        for (int i = 0; i < keys.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2291,            String label = this.labelGenerator.generateSectionLabel(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2294,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2295,"                TextBlock block = TextUtilities.createTextBlock(label, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2298,                TextBox labelBox = new TextBox(block);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2299,                labelBox.setBackgroundPaint(this.labelBackgroundPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2300,                labelBox.setOutlinePaint(this.labelOutlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2301,                labelBox.setOutlineStroke(this.labelOutlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2302,                labelBox.setShadowPaint(this.labelShadowPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2303,                double theta = Math.toRadians(keys.getValue(i).doubleValue());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2304,                double baseY = state.getPieCenterY() ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2306,                double hh = labelBox.getHeight(g2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2307,                this.labelDistributor.addPieLabelRecord(new PieLabelRecord(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2313,"        this.labelDistributor.distributeLabels(plotArea.getMinY(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2315,        for (int i = 0; i < this.labelDistributor.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2316,"            drawRightLabel(g2, state, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2320,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2329,        LegendItemCollection result = new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2330,        if (this.dataset == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2331,            return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2333,        List keys = this.dataset.getKeys();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2334,        int section = 0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2335,        Shape shape = getLegendItemShape();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2336,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2337,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2338,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2339,            Number n = this.dataset.getValue(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2340,            boolean include = true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2341,            if (n == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2342,                include = !this.ignoreNullValues;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2345,                double v = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2346,                if (v == 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2347,                    include = !this.ignoreZeroValues;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2350,                    include = v > 0.0;   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2353,            if (include) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2354,                String label = this.legendLabelGenerator.generateSectionLabel(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2356,                if (label != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2357,                    String description = label;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2358,                    String toolTipText = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2359,                    if (this.legendLabelToolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2360,                        toolTipText = this.legendLabelToolTipGenerator,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2363,                    String urlText = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2364,                    if (this.legendLabelURLGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2365,                        urlText = this.legendLabelURLGenerator.generateURL(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2368,"                    Paint paint = lookupSectionPaint(key, true);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2369,                    Paint outlinePaint = lookupSectionOutlinePaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2370,                    Stroke outlineStroke = lookupSectionOutlineStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2371,"                    LegendItem item = new LegendItem(label, description, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2376,                    item.setDataset(getDataset());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2377,                    result.add(item);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2379,                section++;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2380,            },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2382,                section++;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2384,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2385,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2394,"        return localizationResources.getString(""Pie_Plot"");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2416,        if (explodePercent == 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2417,            return unexploded;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2420,"            Arc2D arc1 = new Arc2D.Double(unexploded, angle, extent / 2, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2422,            Point2D point1 = arc1.getEndPoint();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2423,"            Arc2D.Double arc2 = new Arc2D.Double(exploded, angle, extent / 2, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2425,            Point2D point2 = arc2.getEndPoint();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2426,            double deltaX = (point1.getX() - point2.getX()) * explodePercent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2427,            double deltaY = (point1.getY() - point2.getY()) * explodePercent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2428,"            return new Rectangle2D.Double(unexploded.getX() - deltaX, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2444,        double anchorX = state.getLinkArea().getMinX();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2445,        double targetX = anchorX - record.getGap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2446,        double targetY = record.getAllocatedY();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2448,        if (this.labelLinksVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2449,            double theta = record.getAngle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2450,            double linkX = state.getPieCenterX() + Math.cos(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2452,            double linkY = state.getPieCenterY() - Math.sin(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2454,            double elbowX = state.getPieCenterX() + Math.cos(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2456,            double elbowY = state.getPieCenterY() - Math.sin(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2458,            double anchorY = elbowY;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2459,            g2.setPaint(this.labelLinkPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2460,            g2.setStroke(this.labelLinkStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2461,"            g2.draw(new Line2D.Double(linkX, linkY, elbowX, elbowY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2462,"            g2.draw(new Line2D.Double(anchorX, anchorY, elbowX, elbowY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2463,"            g2.draw(new Line2D.Double(anchorX, anchorY, targetX, targetY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2465,        TextBox tb = record.getLabel();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2466,"        tb.draw(g2, (float) targetX, (float) targetY, RectangleAnchor.RIGHT);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2468,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2480,        double anchorX = state.getLinkArea().getMaxX();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2481,        double targetX = anchorX + record.getGap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2482,        double targetY = record.getAllocatedY();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2484,        if (this.labelLinksVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2485,            double theta = record.getAngle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2486,            double linkX = state.getPieCenterX() + Math.cos(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2488,            double linkY = state.getPieCenterY() - Math.sin(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2490,            double elbowX = state.getPieCenterX() + Math.cos(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2492,            double elbowY = state.getPieCenterY() - Math.sin(theta) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2494,            double anchorY = elbowY;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2495,            g2.setPaint(this.labelLinkPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2496,            g2.setStroke(this.labelLinkStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2497,"            g2.draw(new Line2D.Double(linkX, linkY, elbowX, elbowY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2498,"            g2.draw(new Line2D.Double(anchorX, anchorY, elbowX, elbowY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2499,"            g2.draw(new Line2D.Double(anchorX, anchorY, targetX, targetY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2502,        TextBox tb = record.getLabel();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2503,"        tb.draw(g2, (float) targetX, (float) targetY, RectangleAnchor.LEFT);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2505,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2516,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2517,            return true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2519,        if (!(obj instanceof PiePlot)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2520,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2522,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2523,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2525,        PiePlot that = (PiePlot) obj;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2526,        if (this.pieIndex != that.pieIndex) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2527,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2529,        if (this.interiorGap != that.interiorGap) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2530,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2532,        if (this.circular != that.circular) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2533,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2535,        if (this.startAngle != that.startAngle) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2536,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2538,        if (this.direction != that.direction) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2539,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2541,        if (this.ignoreZeroValues != that.ignoreZeroValues) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2542,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2544,        if (this.ignoreNullValues != that.ignoreNullValues) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2545,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2547,"        if (!ObjectUtilities.equal(this.sectionPaintMap, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2549,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2551,"        if (!PaintUtilities.equal(this.baseSectionPaint, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2553,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2555,        if (this.sectionOutlinesVisible != that.sectionOutlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2556,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2558,"        if (!ObjectUtilities.equal(this.sectionOutlinePaintMap, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2560,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2562,        if (!PaintUtilities.equal(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2565,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2567,"        if (!ObjectUtilities.equal(this.sectionOutlineStrokeMap, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2569,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2571,        if (!ObjectUtilities.equal(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2574,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2576,"        if (!PaintUtilities.equal(this.shadowPaint, that.shadowPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2577,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2579,        if (!(this.shadowXOffset == that.shadowXOffset)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2580,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2582,        if (!(this.shadowYOffset == that.shadowYOffset)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2583,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2585,"        if (!ObjectUtilities.equal(this.explodePercentages, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2587,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2589,"        if (!ObjectUtilities.equal(this.labelGenerator, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2591,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2593,"        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2594,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2596,"        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2597,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2599,"        if (!PaintUtilities.equal(this.labelBackgroundPaint, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2601,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2603,"        if (!PaintUtilities.equal(this.labelOutlinePaint, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2605,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2607,"        if (!ObjectUtilities.equal(this.labelOutlineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2609,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2611,"        if (!PaintUtilities.equal(this.labelShadowPaint, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2613,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2615,        if (!(this.maximumLabelWidth == that.maximumLabelWidth)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2616,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2618,        if (!(this.labelGap == that.labelGap)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2619,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2621,        if (!(this.labelLinkMargin == that.labelLinkMargin)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2622,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2624,        if (this.labelLinksVisible != that.labelLinksVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2625,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2627,"        if (!PaintUtilities.equal(this.labelLinkPaint, that.labelLinkPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2628,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2630,"        if (!ObjectUtilities.equal(this.labelLinkStroke, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2632,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2634,"        if (!ObjectUtilities.equal(this.toolTipGenerator, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2636,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2638,"        if (!ObjectUtilities.equal(this.urlGenerator, that.urlGenerator)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2639,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2641,        if (!(this.minimumArcAngleToDraw == that.minimumArcAngleToDraw)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2642,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2644,"        if (!ShapeUtilities.equal(this.legendItemShape, that.legendItemShape)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2645,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2647,"        if (!ObjectUtilities.equal(this.legendLabelGenerator, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2649,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2651,"        if (!ObjectUtilities.equal(this.legendLabelToolTipGenerator,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2653,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2655,"        if (!ObjectUtilities.equal(this.legendLabelURLGenerator,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2657,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2660,        return true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2672,        PiePlot clone = (PiePlot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2673,        if (clone.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2674,            clone.dataset.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2676,        if (this.urlGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2677,            clone.urlGenerator = (PieURLGenerator) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2680,        clone.legendItemShape = ShapeUtilities.clone(this.legendItemShape);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2681,        if (this.legendLabelGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2682,            clone.legendLabelGenerator = (PieSectionLabelGenerator) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2685,        if (this.legendLabelToolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2686,            clone.legendLabelToolTipGenerator = (PieSectionLabelGenerator) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2689,        if (this.legendLabelURLGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2690,            clone.legendLabelURLGenerator = (PieURLGenerator) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2693,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2704,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2705,"        SerialUtilities.writePaint(this.baseSectionPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2706,"        SerialUtilities.writePaint(this.baseSectionOutlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2707,"        SerialUtilities.writeStroke(this.baseSectionOutlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2708,"        SerialUtilities.writePaint(this.shadowPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2709,"        SerialUtilities.writePaint(this.labelPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2710,"        SerialUtilities.writePaint(this.labelBackgroundPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2711,"        SerialUtilities.writePaint(this.labelOutlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2712,"        SerialUtilities.writeStroke(this.labelOutlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2713,"        SerialUtilities.writePaint(this.labelShadowPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2714,"        SerialUtilities.writePaint(this.labelLinkPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2715,"        SerialUtilities.writeStroke(this.labelLinkStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2716,"        SerialUtilities.writeShape(this.legendItemShape, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2717,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2729,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2730,        this.baseSectionPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2731,        this.baseSectionOutlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2732,        this.baseSectionOutlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2733,        this.shadowPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2734,        this.labelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2735,        this.labelBackgroundPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2736,        this.labelOutlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2737,        this.labelOutlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2738,        this.labelShadowPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2739,        this.labelLinkPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2740,        this.labelLinkStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2741,        this.legendItemShape = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,26,2742,    },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,125,        this(null);   ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,126,    },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,134,"        this(dataset, null);",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,135,    },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,145,        super();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,147,        this.orientation = PlotOrientation.VERTICAL;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,149,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,150,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,151,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,154,        this.renderer = renderer;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,155,        if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,156,            renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,157,            renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,160,    },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,82,"    public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,90,    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.lightGray;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,96,    public static final Stroke DEFAULT_CROSSHAIR_STROKE ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,100,    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,103,    protected static ResourceBundle localizationResources = ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,168,"        return (""WMAP_Plot"");",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,177,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,189,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,190,            this.dataset.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,194,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,195,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,196,            setDatasetGroup(dataset.getGroup());,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,197,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,201,"        datasetChanged(new DatasetChangeEvent(this, dataset));",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,202,    },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,213,        if (this.renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,214,            this.renderer.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,217,        this.renderer = renderer;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,218,        if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,219,            renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,222,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,224,    },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,240,        boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,241,        boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,242,        if (b1 || b2) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,243,            return;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,247,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,248,            info.setPlotArea(area);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,252,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,253,        insets.trim(area);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,255,"        drawChipGrid(g2, area);       ",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,256,"        drawWaferEdge(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,258,    },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,268,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,269,        g2.setClip(getWaferEdge(plotArea));,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,270,        Rectangle2D chip = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,271,        int xchips = 35;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,272,        int ychips = 20;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,273,        double space = 1d;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,274,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,275,            xchips = this.dataset.getMaxChipX() + 2;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,276,            ychips = this.dataset.getMaxChipY() + 2;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,277,            space = this.dataset.getChipSpace();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,279,        double startX = plotArea.getX();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,280,        double startY = plotArea.getY();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,281,        double chipWidth = 1d;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,282,        double chipHeight = 1d;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,283,        if (plotArea.getWidth() != plotArea.getHeight()) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,284,            double major = 0d;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,285,            double minor = 0d;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,286,            if (plotArea.getWidth() > plotArea.getHeight()) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,287,                major = plotArea.getWidth();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,288,                minor = plotArea.getHeight();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,291,                major = plotArea.getHeight();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,292,                minor = plotArea.getWidth();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,295,            if (plotArea.getWidth() == minor) { // x is minor,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,296,                startY += (major - minor) / 2;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,297,                chipWidth = (plotArea.getWidth() - (space * xchips - 1)) ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,299,                chipHeight = (plotArea.getWidth() - (space * ychips - 1)) ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,303,                startX += (major - minor) / 2;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,304,                chipWidth = (plotArea.getHeight() - (space * xchips - 1)) ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,306,                chipHeight = (plotArea.getHeight() - (space * ychips - 1)) ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,311,        for (int x = 1; x <= xchips; x++) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,312,            double upperLeftX = (startX - chipWidth) + (chipWidth * x) ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,314,            for (int y = 1; y <= ychips; y++) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,315,                double upperLeftY = (startY - chipHeight) + (chipHeight * y) ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,317,"                chip.setFrame(upperLeftX, upperLeftY, chipWidth, chipHeight);",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,318,                g2.setColor(Color.white);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,319,"                if (this.dataset.getChipValue(x - 1, ychips - y - 1) != null) {",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,320,                    g2.setPaint(,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,326,                g2.fill(chip);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,327,                g2.setColor(Color.lightGray);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,328,                g2.draw(chip);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,331,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,332,    },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,342,        Ellipse2D edge = new Ellipse2D.Double();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,343,        double diameter = plotArea.getWidth();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,344,        double upperLeftX = plotArea.getX();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,345,        double upperLeftY = plotArea.getY();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,347,        if (plotArea.getWidth() != plotArea.getHeight()) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,348,            double major = 0d;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,349,            double minor = 0d;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,350,            if (plotArea.getWidth() > plotArea.getHeight()) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,351,                major = plotArea.getWidth();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,352,                minor = plotArea.getHeight();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,355,                major = plotArea.getHeight();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,356,                minor = plotArea.getWidth();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,359,            diameter = minor;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,361,            if (plotArea.getWidth() == minor) { // x is minor,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,362,                upperLeftY = plotArea.getY() + (major - minor) / 2;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,365,                upperLeftX = plotArea.getX() + (major - minor) / 2;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,368,"        edge.setFrame(upperLeftX, upperLeftY, diameter, diameter); ",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,369,        return edge;        ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,380,        Ellipse2D waferEdge = getWaferEdge(plotArea);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,381,        g2.setColor(Color.black);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,382,        g2.draw(waferEdge);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,386,        Arc2D notch = null;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,387,        Rectangle2D waferFrame = waferEdge.getFrame();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,388,        double notchDiameter = waferFrame.getWidth() * 0.04;,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,389,        if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,390,            Rectangle2D notchFrame = ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,397,"            notch = new Arc2D.Double(notchFrame, 90d, 180d, Arc2D.OPEN);",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,398,        },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,400,            Rectangle2D notchFrame = ,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,407,"            notch = new Arc2D.Double(notchFrame, 0d, 180d, Arc2D.OPEN);        ",0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,409,        g2.setColor(Color.white);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,410,        g2.fill(notch);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,411,        g2.setColor(Color.black);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,412,        g2.draw(notch);,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,414,    },0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,422,        return this.renderer.getLegendCollection();,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,431,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/WaferMapPlot,26,432,    },0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,26,80,"        this(value, paint, stroke, paint, stroke, 1.0f);",0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,26,81,    },0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,26,105,        return this.value;,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,26,117,        this.value = value;,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,26,118,        notifyListeners(new MarkerChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,26,119,    },0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,26,138,            return true;,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,26,141,            return false;,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,26,144,            return false;,0.0,0,-1,0
org/jfree/chart/plot/ValueMarker,26,148,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,105,            return true;,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,108,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,129,            return DatasetRenderingOrder.FORWARD;,0.0,0,-1,0
org/jfree/chart/plot/DatasetRenderingOrder,26,134,        return null;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,135,        this(null);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,136,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,144,        super();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,111,    private double limit = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,145,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,146,        PiePlot piePlot = new PiePlot(null);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,147,        this.pieChart = new JFreeChart(piePlot);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,148,        this.pieChart.removeLegend();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,149,        this.dataExtractOrder = TableOrder.BY_COLUMN;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,150,        this.pieChart.setBackgroundPaint(null);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,151,"        TextTitle seriesTitle = new TextTitle(""Series Title"", ",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,153,        seriesTitle.setPosition(RectangleEdge.BOTTOM);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,154,        this.pieChart.setTitle(seriesTitle);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,155,"        this.aggregatedItemsKey = ""Other"";",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,156,        this.aggregatedItemsPaint = Color.lightGray;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,157,        this.sectionPaints = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,158,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,166,        return this.dataset;   ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,178,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,179,            this.dataset.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,183,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,184,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,185,            setDatasetGroup(dataset.getGroup());,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,186,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,190,"        datasetChanged(new DatasetChangeEvent(this, dataset));",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,191,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,201,        return this.pieChart;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,213,        if (pieChart == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,214,"            throw new IllegalArgumentException(""Null 'pieChart' argument."");",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,216,        if (!(pieChart.getPlot() instanceof PiePlot)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,217,"            throw new IllegalArgumentException(""The 'pieChart' argument must """,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,220,        this.pieChart = pieChart;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,221,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,222,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,230,        return this.dataExtractOrder;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,240,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,241,"            throw new IllegalArgumentException(""Null 'order' argument"");",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,243,        this.dataExtractOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,244,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,245,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,254,        return this.limit;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,264,        this.limit = limit;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,265,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,266,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,277,        return this.aggregatedItemsKey;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,289,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,290,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,292,        this.aggregatedItemsKey = key;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,293,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,294,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,305,        return this.aggregatedItemsPaint;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,317,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,318,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,320,        this.aggregatedItemsPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,321,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,322,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,330,"        return ""Multiple Pie Plot"";  ",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,352,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,353,        insets.trim(area);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,354,"        drawBackground(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,355,"        drawOutline(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,358,        if (DatasetUtilities.isEmptyOrNull(this.dataset)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,359,"            drawNoDataMessage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,360,            return;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,363,        int pieCount = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,364,        if (this.dataExtractOrder == TableOrder.BY_ROW) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,365,            pieCount = this.dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,368,            pieCount = this.dataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,372,        int displayCols = (int) Math.ceil(Math.sqrt(pieCount));,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,373,        int displayRows ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,377,        if (displayCols > displayRows && area.getWidth() < area.getHeight()) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,378,            int temp = displayCols;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,379,            displayCols = displayRows;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,380,            displayRows = temp;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,383,        prefetchSectionPaints();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,385,        int x = (int) area.getX();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,386,        int y = (int) area.getY();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,387,        int width = ((int) area.getWidth()) / displayCols;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,388,        int height = ((int) area.getHeight()) / displayRows;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,389,        int row = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,390,        int column = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,391,        int diff = (displayRows * displayCols) - pieCount;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,392,        int xoffset = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,393,        Rectangle rect = new Rectangle();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,395,        for (int pieIndex = 0; pieIndex < pieCount; pieIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,396,"            rect.setBounds(x + xoffset + (width * column), y + (height * row), ",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,399,            String title = null;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,400,            if (this.dataExtractOrder == TableOrder.BY_ROW) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,401,                title = this.dataset.getRowKey(pieIndex).toString();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,404,                title = this.dataset.getColumnKey(pieIndex).toString();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,406,            this.pieChart.setTitle(title);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,408,            PieDataset piedataset = null;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,409,"            PieDataset dd = new CategoryToPieDataset(this.dataset, ",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,411,            if (this.limit > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,412,                piedataset = DatasetUtilities.createConsolidatedPieDataset(,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,416,                piedataset = dd;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,418,            PiePlot piePlot = (PiePlot) this.pieChart.getPlot();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,419,            piePlot.setDataset(piedataset);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,420,            piePlot.setPieIndex(pieIndex);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,423,            for (int i = 0; i < piedataset.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,424,                Comparable key = piedataset.getKey(i);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,426,                if (key.equals(this.aggregatedItemsKey)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,427,                    p = this.aggregatedItemsPaint;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,430,                    p = (Paint) this.sectionPaints.get(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,432,"                piePlot.setSectionPaint(key, p);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,435,            ChartRenderingInfo subinfo = null;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,436,            if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,437,                subinfo = new ChartRenderingInfo();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,439,"            this.pieChart.draw(g2, rect, subinfo);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,440,            if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,441,                info.getOwner().getEntityCollection().addAll(,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,443,                info.addSubplotInfo(subinfo.getPlotInfo());,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,446,            ++column;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,447,            if (column == displayCols) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,448,                column = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,449,                ++row;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,451,                if (row == displayRows - 1 && diff != 0) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,452,                    xoffset = (diff * width) / 2;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,457,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,471,        PiePlot piePlot = (PiePlot) getPieChart().getPlot();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,473,        if (this.dataExtractOrder == TableOrder.BY_ROW) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,475,            for (int c = 0; c < this.dataset.getColumnCount(); c++) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,476,                Comparable key = this.dataset.getColumnKey(c);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,477,                Paint p = piePlot.getSectionPaint(key); ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,478,                if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,479,                    p = (Paint) this.sectionPaints.get(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,480,                    if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,481,                        p = getDrawingSupplier().getNextPaint();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,484,"                this.sectionPaints.put(key, p);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,489,            for (int r = 0; r < this.dataset.getRowCount(); r++) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,490,                Comparable key = this.dataset.getRowKey(r);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,491,                Paint p = piePlot.getSectionPaint(key); ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,492,                if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,493,                    p = (Paint) this.sectionPaints.get(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,494,                    if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,495,                        p = getDrawingSupplier().getNextPaint();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,498,"                this.sectionPaints.put(key, p);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,502,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,511,        LegendItemCollection result = new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,513,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,514,            List keys = null;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,516,            prefetchSectionPaints();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,517,            if (this.dataExtractOrder == TableOrder.BY_ROW) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,518,                keys = this.dataset.getColumnKeys();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,520,            else if (this.dataExtractOrder == TableOrder.BY_COLUMN) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,521,                keys = this.dataset.getRowKeys();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,524,            if (keys != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,525,                int section = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,526,                Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,527,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,528,                    Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,529,                    String label = key.toString();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,530,                    String description = label;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,531,                    Paint paint = (Paint) this.sectionPaints.get(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,532,"                    LegendItem item = new LegendItem(label, description, ",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,535,                    item.setDataset(getDataset());,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,536,                    result.add(item);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,537,                    section++;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,538,                },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,540,            if (this.limit > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,541,"                result.add(new LegendItem(this.aggregatedItemsKey.toString(), ",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,549,        return result;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,562,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,563,            return true;   ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,565,        if (!(obj instanceof MultiplePiePlot)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,566,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,568,        MultiplePiePlot that = (MultiplePiePlot) obj;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,569,        if (this.dataExtractOrder != that.dataExtractOrder) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,570,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,572,        if (this.limit != that.limit) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,573,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,575,        if (!this.aggregatedItemsKey.equals(that.aggregatedItemsKey)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,576,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,578,"        if (!PaintUtilities.equal(this.aggregatedItemsPaint, ",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,580,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,582,"        if (!ObjectUtilities.equal(this.pieChart, that.pieChart)) {",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,583,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,585,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,586,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,588,        return true;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,599,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,600,"        SerialUtilities.writePaint(this.aggregatedItemsPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,601,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,613,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,614,        this.aggregatedItemsPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,615,        this.sectionPaints = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,26,616,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,124,        this(null);   ,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,125,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,133,        super(dataset);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,134,        this.separatorsVisible = true;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,135,        this.separatorStroke = new BasicStroke(0.5f);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,136,        this.separatorPaint = Color.gray;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,137,        this.innerSeparatorExtension = 0.20;  // twenty percent,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,138,        this.outerSeparatorExtension = 0.20;  // twenty percent,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,139,        this.sectionDepth = 0.20; // 20%,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,140,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,151,        return this.separatorsVisible;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,164,        this.separatorsVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,165,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,166,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,176,        return this.separatorStroke;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,188,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,189,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,191,        this.separatorStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,192,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,193,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,203,        return this.separatorPaint;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,215,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,216,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,218,        this.separatorPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,219,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,220,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,232,        return this.innerSeparatorExtension;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,247,        this.innerSeparatorExtension = percent;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,248,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,249,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,261,        return this.outerSeparatorExtension;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,275,        this.outerSeparatorExtension = percent;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,276,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,277,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,289,        return this.sectionDepth;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,302,        this.sectionDepth = sectionDepth;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,303,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,304,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,324,"        PiePlotState state = super.initialise(g2, plotArea, plot, index, info);",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,325,        state.setPassesRequired(3);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,326,        return state;   ,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,345,        PieDataset dataset = getDataset();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,346,        Number n = dataset.getValue(section);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,347,        if (n == null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,348,            return;   ,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,350,        double value = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,351,        double angle1 = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,352,        double angle2 = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,354,        Rotation direction = getDirection();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,355,        if (direction == Rotation.CLOCKWISE) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,356,            angle1 = state.getLatestAngle();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,357,            angle2 = angle1 - value / state.getTotal() * 360.0;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,359,        else if (direction == Rotation.ANTICLOCKWISE) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,360,            angle1 = state.getLatestAngle();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,361,            angle2 = angle1 + value / state.getTotal() * 360.0;         ,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,364,"            throw new IllegalStateException(""Rotation type not recognised."");   ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,367,        double angle = (angle2 - angle1);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,368,        if (Math.abs(angle) > getMinimumArcAngleToDraw()) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,369,            Comparable key = getSectionKey(section);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,370,            double ep = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,371,            double mep = getMaximumExplodePercent();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,372,            if (mep > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,373,                ep = getExplodePercent(key) / mep;                ,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,375,"            Rectangle2D arcBounds = getArcBounds(state.getPieArea(), ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,377,"            Arc2D.Double arc = new Arc2D.Double(arcBounds, angle1, angle, ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,381,            double depth = this.sectionDepth / 2.0;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,382,"            RectangleInsets s = new RectangleInsets(UnitType.RELATIVE, ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,384,            Rectangle2D innerArcBounds = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,385,            innerArcBounds.setRect(arcBounds);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,386,            s.trim(innerArcBounds);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,389,"            Arc2D.Double arc2 = new Arc2D.Double(innerArcBounds, angle1 ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,391,            GeneralPath path = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,392,"            path.moveTo((float) arc.getStartPoint().getX(), ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,394,"            path.append(arc.getPathIterator(null), false);",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,395,"            path.append(arc2.getPathIterator(null), true);",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,396,            path.closePath();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,398,"            Line2D separator = new Line2D.Double(arc2.getEndPoint(), ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,401,            if (currentPass == 0) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,402,                Paint shadowPaint = getShadowPaint();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,403,                double shadowXOffset = getShadowXOffset();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,404,                double shadowYOffset = getShadowYOffset();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,405,                if (shadowPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,406,                    Shape shadowArc = ShapeUtilities.createTranslatedShape(,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,408,                    g2.setPaint(shadowPaint);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,409,                    g2.fill(shadowArc);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,411,            },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,412,            else if (currentPass == 1) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,413,"                Paint paint = lookupSectionPaint(key, true);",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,414,                g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,415,                g2.fill(path);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,416,                Paint outlinePaint = lookupSectionOutlinePaint(key);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,417,                Stroke outlineStroke = lookupSectionOutlineStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,418,                if (outlinePaint != null && outlineStroke != null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,419,                    g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,420,                    g2.setStroke(outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,421,                    g2.draw(path);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,425,                if (state.getInfo() != null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,426,                    EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,427,                    if (entities != null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,428,                        String tip = null;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,429,                        PieToolTipGenerator toolTipGenerator ,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,431,                        if (toolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,432,"                            tip = toolTipGenerator.generateToolTip(dataset, ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,435,                        String url = null;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,436,                        PieURLGenerator urlGenerator = getURLGenerator();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,437,                        if (urlGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,438,"                            url = urlGenerator.generateURL(dataset, key, ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,441,"                        PieSectionEntity entity = new PieSectionEntity(path, ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,444,                        entities.add(entity);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,447,            },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,448,            else if (currentPass == 2) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,449,                if (this.separatorsVisible) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,450,"                    Line2D extendedSeparator = extendLine(separator,",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,453,                    g2.setStroke(this.separatorStroke);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,454,                    g2.setPaint(this.separatorPaint);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,455,                    g2.draw(extendedSeparator);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,459,        state.setLatestAngle(angle2);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,460,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,470,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,471,            return true;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,473,        if (!(obj instanceof RingPlot)) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,474,            return false;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,476,        RingPlot that = (RingPlot) obj;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,477,        if (this.separatorsVisible != that.separatorsVisible) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,478,            return false;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,480,"        if (!ObjectUtilities.equal(this.separatorStroke, ",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,482,            return false;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,484,"        if (!PaintUtilities.equal(this.separatorPaint, that.separatorPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,485,            return false;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,487,        if (this.innerSeparatorExtension != that.innerSeparatorExtension) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,488,            return false;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,490,        if (this.outerSeparatorExtension != that.outerSeparatorExtension) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,491,            return false;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,493,        if (this.sectionDepth != that.sectionDepth) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,494,            return false;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,496,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,511,        if (line == null) {,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,512,"            throw new IllegalArgumentException(""Null 'line' argument."");",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,514,        double x1 = line.getX1();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,515,        double x2 = line.getX2();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,516,        double deltaX = x2 - x1;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,517,        double y1 = line.getY1();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,518,        double y2 = line.getY2();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,519,        double deltaY = y2 - y1;,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,520,        x1 = x1 - (startPercent * deltaX);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,521,        y1 = y1 - (startPercent * deltaY);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,522,        x2 = x2 + (endPercent * deltaX);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,523,        y2 = y2 + (endPercent * deltaY);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,524,"        return new Line2D.Double(x1, y1, x2, y2);",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,535,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,536,"        SerialUtilities.writeStroke(this.separatorStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,537,"        SerialUtilities.writePaint(this.separatorPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,538,    },0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,550,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,551,        this.separatorStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,552,        this.separatorPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/RingPlot,26,553,    },0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,173,                                  Shape[] shapeSequence) {,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,175,        this.paintSequence = paintSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,176,        this.fillPaintSequence = DEFAULT_FILL_PAINT_SEQUENCE;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,177,        this.outlinePaintSequence = outlinePaintSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,178,        this.strokeSequence = strokeSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,179,        this.outlineStrokeSequence = outlineStrokeSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,180,        this.shapeSequence = shapeSequence;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,182,    },0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,227,        Paint result = this.outlinePaintSequence[,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,229,        this.outlinePaintIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,230,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,241,        Paint result = this.fillPaintSequence[this.fillPaintIndex ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,243,        this.fillPaintIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,244,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,253,        Stroke result = this.strokeSequence[,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,255,        this.strokeIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,256,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,265,        Stroke result = this.outlineStrokeSequence[,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,267,        this.outlineStrokeIndex++;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,268,        return result;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,351,            return true;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,355,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,361,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,364,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,368,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,371,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,374,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,377,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,381,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,384,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,387,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,390,            return false;,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,406,            return s2 == null;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,409,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,412,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,416,                return false;   ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,546,        DefaultDrawingSupplier clone = (DefaultDrawingSupplier) super.clone(); ,0.0,0,-1,0
org/jfree/chart/plot/DefaultDrawingSupplier,26,547,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,129,        this(null);   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,130,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,139,        super(dataset);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,123,    private double depthFactor = 0.2;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,140,"        setCircular(false, false);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,141,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,151,        return this.depthFactor;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,163,        this.depthFactor = factor;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,164,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,165,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,185,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,186,        insets.trim(plotArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,188,        Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,189,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,190,            info.setPlotArea(plotArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,191,            info.setDataArea(plotArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,194,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,195,        g2.clip(plotArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,198,        double gapPercent = getInteriorGap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,199,        double labelPercent = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,200,        if (getLabelGenerator() != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,201,            labelPercent = getLabelGap() + getMaximumLabelWidth() ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,204,        double gapHorizontal = plotArea.getWidth() ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,206,        double gapVertical = plotArea.getHeight() * gapPercent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,208,        double linkX = plotArea.getX() + gapHorizontal / 2;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,209,        double linkY = plotArea.getY() + gapVertical / 2;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,210,        double linkW = plotArea.getWidth() - gapHorizontal;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,211,        double linkH = plotArea.getHeight() - gapVertical;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,214,        if (isCircular()) { // is circular?,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,215,"            double min = Math.min(linkW, linkH) / 2;",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,216,            linkX = (linkX + linkX + linkW) / 2 - min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,217,            linkY = (linkY + linkY + linkH) / 2 - min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,218,            linkW = 2 * min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,219,            linkH = 2 * min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,222,"        PiePlotState state = initialise(g2, plotArea, this, null, info);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,226,        double hh = linkW * getLabelLinkMargin();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,227,        double vv = linkH * getLabelLinkMargin();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,228,"        Rectangle2D explodeArea = new Rectangle2D.Double(linkX + hh / 2.0, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,231,        state.setExplodedPieArea(explodeArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,236,        double maximumExplodePercent = getMaximumExplodePercent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,237,        double percent = maximumExplodePercent / (1.0 + maximumExplodePercent);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,239,        double h1 = explodeArea.getWidth() * percent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,240,        double v1 = explodeArea.getHeight() * percent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,241,        Rectangle2D pieArea = new Rectangle2D.Double(explodeArea.getX() ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,245,        int depth = (int) (pieArea.getHeight() * this.depthFactor);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,248,"        Rectangle2D linkArea = new Rectangle2D.Double(linkX, linkY, linkW, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,250,        state.setLinkArea(linkArea);   ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,252,        state.setPieArea(pieArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,253,        state.setPieCenterX(pieArea.getCenterX());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,254,        state.setPieCenterY(pieArea.getCenterY() - depth / 2.0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,255,        state.setPieWRadius(pieArea.getWidth() / 2.0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,256,        state.setPieHRadius((pieArea.getHeight() - depth) / 2.0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,258,"        drawBackground(g2, plotArea);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,260,        PieDataset dataset = getDataset();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,261,        if (DatasetUtilities.isEmptyOrNull(getDataset())) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,262,"            drawNoDataMessage(g2, plotArea);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,263,            g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,264,"            drawOutline(g2, plotArea);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,265,            return;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,269,        if (dataset.getKeys().size() > plotArea.getWidth()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,270,"            String text = ""Too many elements"";",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,271,"            Font sfont = new Font(""dialog"", Font.BOLD, 10);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,272,            g2.setFont(sfont);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,273,            FontMetrics fm = g2.getFontMetrics(sfont);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,274,            int stringWidth = fm.stringWidth(text);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,276,"            g2.drawString(text, (int) (plotArea.getX() + (plotArea.getWidth() ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,279,            return;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,284,        if (isCircular()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,285,"            double min = Math.min(plotArea.getWidth(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,287,"            plotArea = new Rectangle2D.Double(plotArea.getCenterX() - min, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,291,        List sectionKeys = dataset.getKeys();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,293,        if (sectionKeys.size() == 0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,294,            return;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,298,        double arcX = pieArea.getX();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,299,        double arcY = pieArea.getY();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,302,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,303,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,306,        double totalValue = DatasetUtilities.calculatePieDatasetTotal(dataset);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,307,        double runningTotal = 0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,308,        if (depth < 0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,309,            return;  // if depth is negative don't draw anything,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,312,        ArrayList arcList = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,318,        Iterator iterator = sectionKeys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,319,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,321,            Comparable currentKey = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,322,            Number dataValue = dataset.getValue(currentKey);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,323,            if (dataValue == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,324,                arcList.add(null);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,325,                continue;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,327,            double value = dataValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,328,            if (value <= 0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,329,                arcList.add(null);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,330,                continue;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,332,            double startAngle = getStartAngle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,333,            double direction = getDirection().getFactor();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,334,            double angle1 = startAngle + (direction * (runningTotal * 360)) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,336,            double angle2 = startAngle + (direction * (runningTotal + value) ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,338,            if (Math.abs(angle2 - angle1) > getMinimumArcAngleToDraw()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,339,"                arcList.add(new Arc2D.Double(arcX, arcY + depth, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,344,                arcList.add(null);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,346,            runningTotal += value;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,347,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,349,        Shape oldClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,351,"        Ellipse2D top = new Ellipse2D.Double(pieArea.getX(), pieArea.getY(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,354,"        Ellipse2D bottom = new Ellipse2D.Double(pieArea.getX(), pieArea.getY() ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,357,"        Rectangle2D lower = new Rectangle2D.Double(top.getX(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,361,"        Rectangle2D upper = new Rectangle2D.Double(pieArea.getX(), top.getY(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,364,        Area a = new Area(top);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,365,        a.add(new Area(lower));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,366,        Area b = new Area(bottom);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,367,        b.add(new Area(upper));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,368,        Area pie = new Area(a);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,369,        pie.intersect(b);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,371,        Area front = new Area(pie);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,372,        front.subtract(new Area(top));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,374,        Area back = new Area(pie);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,375,        back.subtract(new Area(bottom));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,380,"        arc = new Arc2D.Double(arcX, arcY + depth, pieArea.getWidth(), ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,383,        int categoryCount = arcList.size();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,384,        for (int categoryIndex = 0; categoryIndex < categoryCount; ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,386,            arc = (Arc2D.Double) arcList.get(categoryIndex);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,387,            if (arc == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,388,                continue;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,390,            Comparable key = getSectionKey(categoryIndex);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,391,"            paint = lookupSectionPaint(key, true);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,392,            outlinePaint = lookupSectionOutlinePaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,393,            outlineStroke = lookupSectionOutlineStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,394,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,395,            g2.fill(arc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,396,            g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,397,            g2.setStroke(outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,398,            g2.draw(arc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,399,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,401,            Point2D p1 = arc.getStartPoint();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,404,"            xs = new int[] {(int) arc.getCenterX(), (int) arc.getCenterX(),",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,406,"            ys = new int[] {(int) arc.getCenterY(), (int) arc.getCenterY() ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,408,"            Polygon polygon = new Polygon(xs, ys, 4);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,409,            g2.setPaint(java.awt.Color.lightGray);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,410,            g2.fill(polygon);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,411,            g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,412,            g2.setStroke(outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,413,            g2.draw(polygon);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,414,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,385,                 categoryIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,418,        g2.setPaint(Color.gray);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,419,        g2.fill(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,420,        g2.fill(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,423,        int cat = 0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,424,        iterator = arcList.iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,425,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,426,            Arc2D segment = (Arc2D) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,427,            if (segment != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,428,                Comparable key = getSectionKey(cat);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,429,"                paint = lookupSectionPaint(key, true);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,430,                outlinePaint = lookupSectionOutlinePaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,431,                outlineStroke = lookupSectionOutlineStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,432,"                drawSide(g2, pieArea, segment, front, back, paint, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,435,            cat++;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,436,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,439,        cat = 0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,440,        iterator = arcList.iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,441,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,442,            Arc2D segment = (Arc2D) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,443,            if (segment != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,444,                Comparable key = getSectionKey(cat);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,445,                paint = lookupSectionPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,446,                outlinePaint = lookupSectionOutlinePaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,447,                outlineStroke = lookupSectionOutlineStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,448,"                drawSide(g2, pieArea, segment, front, back, paint, ",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,451,            cat++;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,452,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,454,        g2.setClip(oldClip);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,458,        for (int sectionIndex = 0; sectionIndex < categoryCount; ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,460,            arc = (Arc2D.Double) arcList.get(sectionIndex);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,461,            if (arc == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,462,                continue;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,464,"            upperArc = new Arc2D.Double(arcX, arcY, pieArea.getWidth(),",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,468,            Comparable currentKey = (Comparable) sectionKeys.get(sectionIndex);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,469,"            paint = lookupSectionPaint(currentKey, true);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,470,            outlinePaint = lookupSectionOutlinePaint(currentKey);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,471,            outlineStroke = lookupSectionOutlineStroke(currentKey);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,472,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,473,            g2.fill(upperArc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,474,            g2.setStroke(outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,475,            g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,476,            g2.draw(upperArc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,479,            if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,480,                EntityCollection entities ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,482,                if (entities != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,483,                    String tip = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,484,                    PieToolTipGenerator tipster = getToolTipGenerator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,485,                    if (tipster != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,487,"                        tip = tipster.generateToolTip(dataset, currentKey);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,489,                    String url = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,490,                    if (getURLGenerator() != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,491,"                        url = getURLGenerator().generateURL(dataset, currentKey,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,494,                    PieSectionEntity entity = new PieSectionEntity(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,497,                    entities.add(entity);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,500,            List keys = dataset.getKeys();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,501,            Rectangle2D adjustedPlotArea = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,505,"            drawLabels(g2, keys, totalValue, adjustedPlotArea, linkArea, state);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,459,                 sectionIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,508,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,509,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,510,"        drawOutline(g2, originalPlotArea);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,512,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,539,        double start = arc.getAngleStart();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,540,        double extent = arc.getAngleExtent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,541,        double end = start + extent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,543,        g2.setStroke(outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,546,        if (extent < 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,548,            if (isAngleAtFront(start)) {  // start at front,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,550,                if (!isAngleAtBack(end)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,552,                    if (extent > -180.0) {  // the segment is entirely at the ,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,554,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,555,                            Area side = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,560,                            side.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,561,                            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,562,                            g2.fill(side);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,563,                            g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,564,                            g2.draw(side);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,565,                        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,570,                        Area side1 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,574,                        side1.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,576,                        Area side2 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,581,                        side2.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,582,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,583,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,584,                            g2.fill(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,585,                            g2.fill(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,588,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,589,                            g2.fill(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,592,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,593,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,594,                            g2.draw(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,595,                            g2.draw(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,598,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,599,                            g2.draw(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,602,                    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,607,                    if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,608,                        Area side2 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,612,                        side2.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,613,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,614,                        g2.fill(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,615,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,616,                        g2.draw(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,619,                    if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,620,                        Area side1 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,624,                        side1.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,625,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,626,                        g2.fill(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,627,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,628,                        g2.draw(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,629,                    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,635,                if (!isAngleAtFront(end)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,636,                    if (extent > -180.0) {  // whole segment stays at the back,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,637,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,638,                            Area side = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,643,                            side.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,644,                            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,645,                            g2.fill(side);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,646,                            g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,647,                            g2.draw(side);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,648,                        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,652,                        Area side1 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,656,                        side1.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,658,                        Area side2 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,663,                        side2.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,665,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,666,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,667,                            g2.fill(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,668,                            g2.fill(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,671,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,672,                            g2.fill(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,675,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,676,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,677,                            g2.draw(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,678,                            g2.draw(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,681,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,682,                            g2.draw(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,685,                    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,689,                    if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,690,                        Area side1 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,694,                        side1.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,695,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,696,                        g2.fill(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,697,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,698,                        g2.draw(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,701,                    if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,702,                        Area side2 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,706,                        side2.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,707,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,708,                        g2.fill(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,709,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,710,                        g2.draw(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,711,                    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,716,        else if (extent > 0.0) {  // the pie sections are arranged ANTICLOCKWISE,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,718,            if (isAngleAtFront(start)) {  // segment starts at the front,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,720,                if (!isAngleAtBack(end)) {  // and finishes at the front,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,722,                    if (extent < 180.0) {  // segment only occupies the front,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,723,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,724,                            Area side = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,729,                            side.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,730,                            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,731,                            g2.fill(side);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,732,                            g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,733,                            g2.draw(side);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,734,                        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,737,                        Area side1 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,741,                        side1.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,743,                        Area side2 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,747,                        side2.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,749,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,750,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,751,                            g2.fill(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,752,                            g2.fill(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,755,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,756,                            g2.fill(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,759,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,760,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,761,                            g2.draw(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,762,                            g2.draw(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,765,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,766,                            g2.draw(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,769,                    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,772,                    if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,773,                        Area side2 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,777,                        side2.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,778,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,779,                        g2.fill(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,780,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,781,                        g2.draw(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,784,                    if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,785,                        Area side1 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,789,                        side1.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,790,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,791,                        g2.fill(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,792,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,793,                        g2.draw(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,794,                    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,799,                if (!isAngleAtFront(end)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,800,                    if (extent < 180.0) {  // and finishes at back,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,801,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,802,                            Area side = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,807,                            side.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,808,                            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,809,                            g2.fill(side);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,810,                            g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,811,                            g2.draw(side);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,812,                        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,816,                        Area side1 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,820,                        side1.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,822,                        Area side2 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,826,                        side2.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,828,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,829,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,830,                            g2.fill(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,831,                            g2.fill(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,834,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,835,                            g2.fill(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,838,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,839,                        if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,840,                            g2.draw(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,841,                            g2.draw(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,844,                        if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,845,                            g2.draw(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,848,                    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,852,                    if (drawBack) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,853,                        Area side1 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,857,                        side1.intersect(back);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,858,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,859,                        g2.fill(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,860,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,861,                        g2.draw(side1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,864,                    if (drawFront) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,865,                        Area side2 = new Area(new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,869,                        side2.intersect(front);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,870,                        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,871,                        g2.fill(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,872,                        g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,873,                        g2.draw(side2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,880,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,888,"        return localizationResources.getString(""Pie_3D_Plot"");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,901,        return (Math.sin(Math.toRadians(angle)) < 0.0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,914,        return (Math.sin(Math.toRadians(angle)) > 0.0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,925,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,926,            return true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,928,        if (!(obj instanceof PiePlot3D)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,929,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,931,        PiePlot3D that = (PiePlot3D) obj;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,932,        if (this.depthFactor != that.depthFactor) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,933,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot3D,26,935,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,176,"        this(null, null, null);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,177,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,190,        super();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,143,    private boolean angleLabelsVisible = true;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,146,"    private Font angleLabelFont = new Font(""SansSerif"", Font.PLAIN, 12);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,149,    private transient Paint angleLabelPaint = Color.black;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,170,    private List cornerTextItems = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,192,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,193,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,194,            this.dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,197,        this.angleTicks = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,198,"        this.angleTicks.add(new NumberTick(new Double(0.0), ""0"", ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,200,"        this.angleTicks.add(new NumberTick(new Double(45.0), ""45"", ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,202,"        this.angleTicks.add(new NumberTick(new Double(90.0), ""90"", ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,204,"        this.angleTicks.add(new NumberTick(new Double(135.0), ""135"", ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,206,"        this.angleTicks.add(new NumberTick(new Double(180.0), ""180"", ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,208,"        this.angleTicks.add(new NumberTick(new Double(225.0), ""225"", ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,210,"        this.angleTicks.add(new NumberTick(new Double(270.0), ""270"", ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,212,"        this.angleTicks.add(new NumberTick(new Double(315.0), ""315"", ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,215,        this.axis = radiusAxis;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,216,        if (this.axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,217,            this.axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,218,            this.axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,221,        this.renderer = renderer;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,222,        if (this.renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,223,            this.renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,224,            this.renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,227,        this.angleGridlinesVisible = true;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,228,        this.angleGridlineStroke = DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,229,        this.angleGridlinePaint = DEFAULT_GRIDLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,231,        this.radiusGridlinesVisible = true;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,232,        this.radiusGridlineStroke = DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,233,        this.radiusGridlinePaint = DEFAULT_GRIDLINE_PAINT;      ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,234,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,116,    public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,121,    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.gray;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,124,    protected static ResourceBundle localizationResources ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,245,        if (text == null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,246,"            throw new IllegalArgumentException(""Null 'text' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,248,        this.cornerTextItems.add(text);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,249,        this.notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,250,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,261,        boolean removed = this.cornerTextItems.remove(text);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,262,        if (removed) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,263,            this.notifyListeners(new PlotChangeEvent(this));        ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,265,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,275,        if (this.cornerTextItems.size() > 0) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,276,            this.cornerTextItems.clear();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,277,            this.notifyListeners(new PlotChangeEvent(this));        ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,279,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,287,"       return PolarPlot.localizationResources.getString(""Polar_Plot"");",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,298,        return this.axis;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,308,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,309,            axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,313,        if (this.axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,314,            this.axis.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,317,        this.axis = axis;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,318,        if (this.axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,319,            this.axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,320,            this.axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,322,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,323,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,333,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,347,        XYDataset existing = this.dataset;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,348,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,349,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,353,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,354,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,355,            setDatasetGroup(this.dataset.getGroup());,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,356,            this.dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,360,"        DatasetChangeEvent event = new DatasetChangeEvent(this, this.dataset);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,361,        datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,362,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,372,        return this.renderer;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,386,        if (this.renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,387,            this.renderer.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,390,        this.renderer = renderer;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,391,        if (this.renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,392,            this.renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,395,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,396,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,406,        return this.angleLabelsVisible;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,418,        if (this.angleLabelsVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,419,            this.angleLabelsVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,420,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,422,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,432,        return this.angleLabelFont;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,444,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,445,"            throw new IllegalArgumentException(""Null 'font' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,447,        this.angleLabelFont = font;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,448,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,449,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,459,        return this.angleLabelPaint;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,469,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,470,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,472,        this.angleLabelPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,473,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,474,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,485,        return this.angleGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,500,        if (this.angleGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,501,            this.angleGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,502,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,504,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,515,        return this.angleGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,529,        this.angleGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,530,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,531,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,542,        return this.angleGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,555,        this.angleGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,556,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,557,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,568,        return this.radiusGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,583,        if (this.radiusGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,584,            this.radiusGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,585,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,587,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,598,        return this.radiusGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,612,        this.radiusGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,613,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,614,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,625,        return this.radiusGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,639,        this.radiusGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,640,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,641,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,670,        boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,671,        boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,672,        if (b1 || b2) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,673,            return;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,677,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,678,            info.setPlotArea(area);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,682,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,683,        insets.trim(area);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,685,        Rectangle2D dataArea = area;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,686,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,687,            info.setDataArea(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,691,"        drawBackground(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,692,"        double h = Math.min(dataArea.getWidth() / 2.0, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,694,"        Rectangle2D quadrant = new Rectangle2D.Double(dataArea.getCenterX(), ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,696,"        AxisState state = drawAxis(g2, area, quadrant);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,697,        if (this.renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,698,            Shape originalClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,699,            Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,701,            g2.clip(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,702,            g2.setComposite(AlphaComposite.getInstance(,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,705,"            drawGridlines(g2, dataArea, this.angleTicks, state.getTicks());",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,708,"            render(g2, dataArea, info);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,710,            g2.setClip(originalClip);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,711,            g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,713,"        drawOutline(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,714,"        drawCornerTextItems(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,715,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,724,        if (this.cornerTextItems.isEmpty()) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,725,            return;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,728,        g2.setColor(Color.black);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,729,        double width = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,730,        double height = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,731,        for (Iterator it = this.cornerTextItems.iterator(); it.hasNext();) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,732,            String msg = (String) it.next();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,733,            FontMetrics fm = g2.getFontMetrics();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,734,"            Rectangle2D bounds = TextUtilities.getTextBounds(msg, g2, fm);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,735,"            width = Math.max(width, bounds.getWidth());",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,736,            height += bounds.getHeight();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,737,        },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,739,        double xadj = ANNOTATION_MARGIN * 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,740,        double yadj = ANNOTATION_MARGIN;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,741,        width += xadj;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,742,        height += yadj;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,744,        double x = area.getMaxX() - width;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,745,        double y = area.getMaxY() - height;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,746,"        g2.drawRect((int) x, (int) y, (int) width, (int) height);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,747,        x += ANNOTATION_MARGIN;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,748,        for (Iterator it = this.cornerTextItems.iterator(); it.hasNext();) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,749,            String msg = (String) it.next();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,750,"            Rectangle2D bounds = TextUtilities.getTextBounds(msg, g2, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,752,            y += bounds.getHeight();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,753,"            g2.drawString(msg, (int) x, (int) y);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,754,        },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,755,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,768,"        return this.axis.draw(g2, dataArea.getMinY(), plotArea, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,787,        if (!DatasetUtilities.isEmptyOrNull(this.dataset)) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,788,            int seriesCount = this.dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,789,            for (int series = 0; series < seriesCount; series++) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,790,"                this.renderer.drawSeries(g2, dataArea, info, this, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,793,        },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,795,"            drawNoDataMessage(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,797,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,811,        if (this.renderer == null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,812,            return;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,816,        if (isAngleGridlinesVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,817,            Stroke gridStroke = getAngleGridlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,818,            Paint gridPaint = getAngleGridlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,819,            if ((gridStroke != null) && (gridPaint != null)) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,820,"                this.renderer.drawAngularGridLines(g2, this, angularTicks, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,826,        if (isRadiusGridlinesVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,827,            Stroke gridStroke = getRadiusGridlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,828,            Paint gridPaint = getRadiusGridlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,829,            if ((gridStroke != null) && (gridPaint != null)) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,830,"                this.renderer.drawRadialGridLines(g2, this, this.axis, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,834,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,842,        if (percent > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,843,            double radius = getMaxRadius();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,844,            double scaledRadius = radius * percent;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,845,            this.axis.setUpperBound(scaledRadius);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,846,            getAxis().setAutoRange(false);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,847,        } ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,849,            getAxis().setAutoRange(true);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,851,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,861,        Range result = null;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,862,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,863,"            result = Range.combine(result, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,866,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,878,        if (this.axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,879,            this.axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,882,        if (getParent() != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,883,            getParent().datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,886,            super.datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,888,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,898,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,899,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,908,        int result = 0;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,910,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,911,            result = this.dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,913,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,924,        LegendItemCollection result = new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,927,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,928,            if (this.renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,929,                int seriesCount = this.dataset.getSeriesCount();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,930,                for (int i = 0; i < seriesCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,931,                    LegendItem item = this.renderer.getLegendItem(i);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,932,                    result.add(item);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,936,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,947,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,948,            return true;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,950,        if (!(obj instanceof PolarPlot)) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,951,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,953,        PolarPlot that = (PolarPlot) obj;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,954,"        if (!ObjectUtilities.equal(this.axis, that.axis)) {",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,955,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,957,"        if (!ObjectUtilities.equal(this.renderer, that.renderer)) {",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,958,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,960,        if (this.angleGridlinesVisible != that.angleGridlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,961,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,963,        if (this.angleLabelsVisible != that.angleLabelsVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,964,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,966,        if (!this.angleLabelFont.equals(that.angleLabelFont)) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,967,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,969,"        if (!PaintUtilities.equal(this.angleLabelPaint, that.angleLabelPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,970,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,972,"        if (!ObjectUtilities.equal(this.angleGridlineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,974,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,976,        if (!PaintUtilities.equal(,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,979,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,981,        if (this.radiusGridlinesVisible != that.radiusGridlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,982,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,984,"        if (!ObjectUtilities.equal(this.radiusGridlineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,986,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,988,"        if (!PaintUtilities.equal(this.radiusGridlinePaint, ",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,990,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,992,        if (!this.cornerTextItems.equals(that.cornerTextItems)) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,993,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,995,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1008,        PolarPlot clone = (PolarPlot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1009,        if (this.axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1010,            clone.axis = (ValueAxis) ObjectUtilities.clone(this.axis);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1011,            clone.axis.setPlot(clone);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1012,            clone.axis.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1015,        if (clone.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1016,            clone.dataset.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1019,        if (this.renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1020,            clone.renderer ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1024,        clone.cornerTextItems = new ArrayList(this.cornerTextItems);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1026,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1037,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1038,"        SerialUtilities.writeStroke(this.angleGridlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1039,"        SerialUtilities.writePaint(this.angleGridlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1040,"        SerialUtilities.writeStroke(this.radiusGridlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1041,"        SerialUtilities.writePaint(this.radiusGridlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1042,"        SerialUtilities.writePaint(this.angleLabelPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1043,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1056,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1057,        this.angleGridlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1058,        this.angleGridlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1059,        this.radiusGridlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1060,        this.radiusGridlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1061,        this.angleLabelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1063,        if (this.axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1064,            this.axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1065,            this.axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1068,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1069,            this.dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1071,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1084,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1098,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1109,        zoom(factor);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1110,    },0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1122,        zoom((upperPercent + lowerPercent) / 2.0);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1123,    }   ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1131,        return false;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1140,        return true;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1149,        return PlotOrientation.HORIZONTAL;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1158,        return this.axis.getUpperBound();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1176,        double radians = Math.toRadians(angleDegrees - 90.0);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1178,        double minx = dataArea.getMinX() + MARGIN;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1179,        double maxx = dataArea.getMaxX() - MARGIN;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1180,        double miny = dataArea.getMinY() + MARGIN;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1181,        double maxy = dataArea.getMaxY() - MARGIN;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1183,        double lengthX = maxx - minx;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1184,        double lengthY = maxy - miny;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1185,"        double length = Math.min(lengthX, lengthY);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1187,        double midX = minx + lengthX / 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1188,        double midY = miny + lengthY / 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1190,        double axisMin = this.axis.getLowerBound();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1191,        double axisMax =  getMaxRadius();,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1192,"        double adjustedRadius = Math.max(radius, axisMin);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1194,        double xv = length / 2.0 * Math.cos(radians);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1195,        double yv = length / 2.0 * Math.sin(radians);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1197,        float x = (float) (midX + (xv * (adjustedRadius - axisMin) ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1199,        float y = (float) (midY + (yv * (adjustedRadius - axisMin) ,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1202,        int ix = Math.round(x);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1203,        int iy = Math.round(y);,0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1205,"        Point p = new Point(ix, iy);",0.0,0,-1,0
org/jfree/chart/plot/PolarPlot,26,1206,        return p;,0.0,0,-1,0
