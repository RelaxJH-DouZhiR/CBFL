project_path,version,lines,statement,suspicious,faulty,predict,miss_line,predictions0,predictions1
org/jfree/chart/event/ChartChangeEvent,23,71,"        this(source, null, ChartChangeEventType.GENERAL);",1.0,0,,0,0.0015765502484775022,0.9984234497515231
org/jfree/chart/event/ChartChangeEvent,23,72,    },1.0,0,,0,0.010152050986122315,0.9898479490138784
org/jfree/chart/event/ChartChangeEvent,23,95,        super(source);,1.0,0,,0,0.000691596241748726,0.9993084037582514
org/jfree/chart/event/ChartChangeEvent,23,96,        this.chart = chart;,1.0,0,,0,0.0022655504437038504,0.9977344495562959
org/jfree/chart/event/ChartChangeEvent,23,97,        this.type = type;,1.0,0,,0,0.0023356295954379785,0.9976643704045622
org/jfree/chart/event/ChartChangeEvent,23,98,    },1.0,0,,0,0.010152050986122315,0.9898479490138784
org/jfree/chart/event/ChartChangeEventType,23,76,    private ChartChangeEventType(String name) {,1.0,0,,0,0.0023385417811821827,0.997661458218817
org/jfree/chart/event/ChartChangeEventType,23,77,        this.name = name;,1.0,0,,0,0.0023356295954379785,0.9976643704045622
org/jfree/chart/event/ChartChangeEventType,23,78,    },1.0,0,,0,0.010152050986122315,0.9898479490138784
org/jfree/chart/event/ChartChangeEventType,23,57,    public static final ChartChangeEventType GENERAL ,1.0,0,,0,0.07850487923101365,0.9214951207689881
org/jfree/chart/event/ChartChangeEventType,23,61,    public static final ChartChangeEventType NEW_DATASET ,1.0,0,,0,0.08000785436779884,0.9199921456322009
org/jfree/chart/event/ChartChangeEventType,23,65,    public static final ChartChangeEventType DATASET_UPDATED,1.0,0,,0,0.08230479845237307,0.9176952015476276
org/jfree/chart/text/TextAnchor,23,149,        if (this == obj) {,0.5,0,-1,0
org/jfree/chart/text/TextAnchor,23,150,            return true;,0.5,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,192,        if (this == o) {,0.5,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,193,            return true;,0.5,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,176,        if (obj == this) {,0.5,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,179,        if (!(obj instanceof ItemLabelPosition)) {,0.5,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,182,        ItemLabelPosition that = (ItemLabelPosition) obj;,0.5,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,183,        if (!this.itemLabelAnchor.equals(that.itemLabelAnchor)) {,0.5,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,186,        if (!this.textAnchor.equals(that.textAnchor)) {,0.5,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,189,        if (!this.rotationAnchor.equals(that.rotationAnchor)) {,0.5,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,192,        if (this.angle != that.angle) {,0.5,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,195,        return true;,0.5,0,-1,0
org/jfree/chart/util/StrokeList,23,105,        if (obj == null) {,0.33333,0,-1,0
org/jfree/chart/util/StrokeList,23,109,        if (obj == this) {,0.33333,0,-1,0
org/jfree/chart/util/StrokeList,23,113,        if (obj instanceof StrokeList) {,0.33333,0,-1,0
org/jfree/chart/util/StrokeList,23,114,            return super.equals(obj);,0.33333,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,178,        if (obj == null) {,0.33333,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,182,        if (obj == this) {,0.33333,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,186,        if (!(obj instanceof AbstractObjectList)) {,0.33333,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,190,        AbstractObjectList other = (AbstractObjectList) obj;,0.33333,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,191,        int listSize = size();,0.33333,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,192,        for (int i = 0; i < listSize; i++) {,0.33333,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,197,        return true;,0.33333,0,-1,0
org/jfree/chart/util/PaintList,23,94,        if (obj == null) {,0.33333,0,-1,0
org/jfree/chart/util/PaintList,23,97,        if (obj == this) {,0.33333,0,-1,0
org/jfree/chart/util/PaintList,23,100,        if (obj instanceof PaintList) {,0.33333,0,-1,0
org/jfree/chart/util/PaintList,23,101,            PaintList that = (PaintList) obj;,0.33333,0,-1,0
org/jfree/chart/util/PaintList,23,102,            int listSize = size();,0.33333,0,-1,0
org/jfree/chart/util/PaintList,23,103,            for (int i = 0; i < listSize; i++) {,0.33333,0,-1,0
org/jfree/chart/util/PaintList,23,109,        return true;,0.33333,0,-1,0
org/jfree/chart/util/ShapeList,23,104,        if (obj == null) {,0.33333,0,-1,0
org/jfree/chart/util/ShapeList,23,108,        if (obj == this) {,0.33333,0,-1,0
org/jfree/chart/util/ShapeList,23,112,        if (obj instanceof ShapeList) {,0.33333,0,-1,0
org/jfree/chart/util/ShapeList,23,113,            return super.equals(obj);,0.33333,0,-1,0
org/jfree/chart/util/PaintUtilities,23,78,        if (p1 == null) {,0.33333,0,-1,0
org/jfree/chart/util/PaintUtilities,23,81,        if (p2 == null) {,0.33333,0,-1,0
org/jfree/chart/util/PaintUtilities,23,85,        boolean result = false;,0.33333,0,-1,0
org/jfree/chart/util/PaintUtilities,23,87,        if (p1 instanceof GradientPaint && p2 instanceof GradientPaint) {,0.33333,0,-1,0
org/jfree/chart/util/PaintUtilities,23,98,            result = p1.equals(p2);,0.33333,0,-1,0
org/jfree/chart/util/PaintUtilities,23,100,        return result;,0.33333,0,-1,0
org/jfree/chart/util/BooleanList,23,95,        if (obj instanceof BooleanList) {,0.33333,0,-1,0
org/jfree/chart/util/BooleanList,23,96,            return super.equals(obj);,0.33333,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,127,        if (o1 == o2) {,0.33333,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,128,            return true;,0.33333,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,130,        if (o1 != null) {,0.33333,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,131,            return o1.equals(o2);,0.33333,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,141,        if (obj == this) {,0.33333,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,144,        if (!(obj instanceof StandardCategorySeriesLabelGenerator)) {,0.33333,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,147,        StandardCategorySeriesLabelGenerator that ,0.33333,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,149,        if (!this.formatPattern.equals(that.formatPattern)) {,0.33333,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,152,        return true;,0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2355,        if (obj == this) {,0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2358,        if (!(obj instanceof AbstractRenderer)) {,0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2361,        AbstractRenderer that = (AbstractRenderer) obj;,0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2362,        if (!this.seriesVisibleList.equals(that.seriesVisibleList)) {,0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2365,        if (this.baseSeriesVisible != that.baseSeriesVisible) {,0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2368,        if (!this.seriesVisibleInLegendList.equals(,0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2372,        if (this.baseSeriesVisibleInLegend != that.baseSeriesVisibleInLegend) {,0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2375,"        if (!ObjectUtilities.equal(this.paintList, that.paintList)) {",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2378,"        if (!PaintUtilities.equal(this.basePaint, that.basePaint)) {",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2381,"        if (!ObjectUtilities.equal(this.fillPaintList, that.fillPaintList)) {",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2384,"        if (!PaintUtilities.equal(this.baseFillPaint, that.baseFillPaint)) {",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2387,"        if (!ObjectUtilities.equal(this.outlinePaintList,",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2391,"        if (!PaintUtilities.equal(this.baseOutlinePaint, ",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2395,"        if (!ObjectUtilities.equal(this.strokeList, that.strokeList)) {",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2398,"        if (!ObjectUtilities.equal(this.baseStroke, that.baseStroke)) {",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2401,"        if (!ObjectUtilities.equal(this.outlineStrokeList, ",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2405,        if (!ObjectUtilities.equal(,0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2410,"        if (!ObjectUtilities.equal(this.shapeList, that.shapeList)) {",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2413,"        if (!ObjectUtilities.equal(this.baseShape, that.baseShape)) {",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2416,"        if (!ObjectUtilities.equal(this.itemLabelsVisibleList, ",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2420,        if (this.baseItemLabelsVisible != that.baseItemLabelsVisible) {,0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2423,"        if (!ObjectUtilities.equal(this.itemLabelFontList, ",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2427,"        if (!ObjectUtilities.equal(this.baseItemLabelFont, ",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2431,"        if (!ObjectUtilities.equal(this.itemLabelPaintList, ",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2435,"        if (!PaintUtilities.equal(this.baseItemLabelPaint, ",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2439,"        if (!ObjectUtilities.equal(this.positiveItemLabelPositionList, ",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2443,"        if (!ObjectUtilities.equal(this.basePositiveItemLabelPosition, ",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2447,"        if (!ObjectUtilities.equal(this.negativeItemLabelPositionList, ",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2451,"        if (!ObjectUtilities.equal(this.baseNegativeItemLabelPosition, ",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2455,        if (this.itemLabelAnchorOffset != that.itemLabelAnchorOffset) {,0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2458,"        if (!ObjectUtilities.equal(this.createEntitiesList, ",0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2462,        if (this.baseCreateEntities != that.baseCreateEntities) {,0.33333,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2465,        return true;,0.33333,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1291,        if (obj == this) {,0.33333,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1294,        if (!(obj instanceof AbstractCategoryItemRenderer)) {,0.33333,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1297,        AbstractCategoryItemRenderer that = (AbstractCategoryItemRenderer) obj;,0.33333,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1299,"        if (!ObjectUtilities.equal(this.itemLabelGeneratorList,",0.33333,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1303,"        if (!ObjectUtilities.equal(this.baseItemLabelGenerator,",0.33333,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1307,"        if (!ObjectUtilities.equal(this.toolTipGeneratorList,",0.33333,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1311,"        if (!ObjectUtilities.equal(this.baseToolTipGenerator,",0.33333,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1315,"        if (!ObjectUtilities.equal(this.urlGeneratorList, ",0.33333,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1319,"        if (!ObjectUtilities.equal(this.baseURLGenerator,",0.33333,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1323,"        if (!ObjectUtilities.equal(this.legendItemLabelGenerator,",0.33333,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1327,"        if (!ObjectUtilities.equal(this.legendItemToolTipGenerator,",0.33333,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1331,"        if (!ObjectUtilities.equal(this.legendItemURLGenerator,",0.33333,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1335,"        if (!ObjectUtilities.equal(this.backgroundAnnotations,",0.33333,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1339,"        if (!ObjectUtilities.equal(this.foregroundAnnotations,",0.33333,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1343,        return super.equals(obj);,0.33333,0,-1,0
org/jfree/chart/util/StrokeList,23,60,        super();,0.25,0,-1,0
org/jfree/chart/util/StrokeList,23,61,    },0.25,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,77,        this(DEFAULT_INITIAL_CAPACITY);,0.25,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,78,    },0.25,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,86,"        this (initialCapacity, initialCapacity);",0.25,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,87,    },0.25,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,95,"    protected AbstractObjectList(int initialCapacity, int increment) {",0.25,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,68,    private int size = 0;,0.25,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,71,    private int increment = DEFAULT_INITIAL_CAPACITY;,0.25,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,96,        this.objects = new Object[initialCapacity];,0.25,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,97,        this.increment = increment;,0.25,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,98,    },0.25,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,149,        return this.size;,0.25,0,-1,0
org/jfree/chart/util/PaintList,23,61,        super();,0.25,0,-1,0
org/jfree/chart/util/PaintList,23,62,    },0.25,0,-1,0
org/jfree/chart/util/ShapeList,23,60,        super();,0.25,0,-1,0
org/jfree/chart/util/ShapeList,23,61,    },0.25,0,-1,0
org/jfree/chart/util/BooleanList,23,62,    public BooleanList() {,0.25,0,-1,0
org/jfree/chart/util/BooleanList,23,63,    },0.25,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,82,    private static String classLoaderSource = THREAD_CONTEXT;,0.25,0,-1,0
org/jfree/chart/util/ObjectList,23,60,    public ObjectList() {,0.25,0,-1,0
org/jfree/chart/util/ObjectList,23,61,    },0.25,0,-1,0
org/jfree/chart/text/TextAnchor,23,126,    private TextAnchor(String name) {,0.25,0,-1,0
org/jfree/chart/text/TextAnchor,23,127,        this.name = name;,0.25,0,-1,0
org/jfree/chart/text/TextAnchor,23,128,    },0.25,0,-1,0
org/jfree/chart/text/TextAnchor,23,60,    public static final TextAnchor TOP_LEFT = new TextAnchor(,0.25,0,-1,0
org/jfree/chart/text/TextAnchor,23,64,    public static final TextAnchor TOP_CENTER = new TextAnchor(,0.25,0,-1,0
org/jfree/chart/text/TextAnchor,23,68,    public static final TextAnchor TOP_RIGHT = new TextAnchor(,0.25,0,-1,0
org/jfree/chart/text/TextAnchor,23,72,    public static final TextAnchor HALF_ASCENT_LEFT = new TextAnchor(,0.25,0,-1,0
org/jfree/chart/text/TextAnchor,23,76,    public static final TextAnchor HALF_ASCENT_CENTER = new TextAnchor(,0.25,0,-1,0
org/jfree/chart/text/TextAnchor,23,80,    public static final TextAnchor HALF_ASCENT_RIGHT = new TextAnchor(,0.25,0,-1,0
org/jfree/chart/text/TextAnchor,23,84,    public static final TextAnchor CENTER_LEFT = new TextAnchor(,0.25,0,-1,0
org/jfree/chart/text/TextAnchor,23,88,"    public static final TextAnchor CENTER = new TextAnchor(""TextAnchor.CENTER"");",0.25,0,-1,0
org/jfree/chart/text/TextAnchor,23,91,    public static final TextAnchor CENTER_RIGHT = new TextAnchor(,0.25,0,-1,0
org/jfree/chart/text/TextAnchor,23,95,    public static final TextAnchor BASELINE_LEFT = new TextAnchor(,0.25,0,-1,0
org/jfree/chart/text/TextAnchor,23,99,    public static final TextAnchor BASELINE_CENTER = new TextAnchor(,0.25,0,-1,0
org/jfree/chart/text/TextAnchor,23,103,    public static final TextAnchor BASELINE_RIGHT = new TextAnchor(,0.25,0,-1,0
org/jfree/chart/text/TextAnchor,23,107,    public static final TextAnchor BOTTOM_LEFT = new TextAnchor(,0.25,0,-1,0
org/jfree/chart/text/TextAnchor,23,111,    public static final TextAnchor BOTTOM_CENTER = new TextAnchor(,0.25,0,-1,0
org/jfree/chart/text/TextAnchor,23,115,    public static final TextAnchor BOTTOM_RIGHT = new TextAnchor(,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,169,    private ItemLabelAnchor(String name) {,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,170,        this.name = name;,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,171,    },0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,62,    public static final ItemLabelAnchor CENTER ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,66,    public static final ItemLabelAnchor INSIDE1 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,70,    public static final ItemLabelAnchor INSIDE2 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,74,    public static final ItemLabelAnchor INSIDE3 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,78,    public static final ItemLabelAnchor INSIDE4 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,82,    public static final ItemLabelAnchor INSIDE5 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,86,    public static final ItemLabelAnchor INSIDE6 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,90,    public static final ItemLabelAnchor INSIDE7 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,94,    public static final ItemLabelAnchor INSIDE8 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,98,    public static final ItemLabelAnchor INSIDE9 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,102,    public static final ItemLabelAnchor INSIDE10 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,106,    public static final ItemLabelAnchor INSIDE11 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,110,    public static final ItemLabelAnchor INSIDE12 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,114,    public static final ItemLabelAnchor OUTSIDE1 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,118,    public static final ItemLabelAnchor OUTSIDE2 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,122,    public static final ItemLabelAnchor OUTSIDE3 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,126,    public static final ItemLabelAnchor OUTSIDE4 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,130,    public static final ItemLabelAnchor OUTSIDE5 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,134,    public static final ItemLabelAnchor OUTSIDE6 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,138,    public static final ItemLabelAnchor OUTSIDE7 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,142,    public static final ItemLabelAnchor OUTSIDE8 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,146,    public static final ItemLabelAnchor OUTSIDE9 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,150,    public static final ItemLabelAnchor OUTSIDE10 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,154,    public static final ItemLabelAnchor OUTSIDE11 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,158,    public static final ItemLabelAnchor OUTSIDE12 ,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,92,"        this(itemLabelAnchor, textAnchor, TextAnchor.CENTER, 0.0);    ",0.25,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,93,    },0.25,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,111,                             double angle) {,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,113,        if (itemLabelAnchor == null) {,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,117,        if (textAnchor == null) {,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,120,        if (rotationAnchor == null) {,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,125,        this.itemLabelAnchor = itemLabelAnchor;,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,126,        this.textAnchor = textAnchor;,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,127,        this.rotationAnchor = rotationAnchor;,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,128,        this.angle = angle;,0.25,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,130,    },0.25,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,75,        this(DEFAULT_LABEL_FORMAT);,0.25,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,76,    },0.25,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,83,    public StandardCategorySeriesLabelGenerator(String format) {,0.25,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,84,        if (format == null) {,0.25,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,87,        this.formatPattern = format;,0.25,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,88,    },0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,313,    public AbstractRenderer() {,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,290,    private double itemLabelAnchorOffset = 2.0;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,315,        this.seriesVisibleList = new BooleanList();,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,316,        this.baseSeriesVisible = true;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,318,        this.seriesVisibleInLegendList = new BooleanList();,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,319,        this.baseSeriesVisibleInLegend = true;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,321,        this.paintList = new PaintList();,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,322,        this.basePaint = DEFAULT_PAINT;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,323,        this.autoPopulateSeriesPaint = true;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,325,        this.fillPaintList = new PaintList();,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,326,        this.baseFillPaint = Color.white;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,327,        this.autoPopulateSeriesFillPaint = false;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,329,        this.outlinePaintList = new PaintList();,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,330,        this.baseOutlinePaint = DEFAULT_OUTLINE_PAINT;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,331,        this.autoPopulateSeriesOutlinePaint = false;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,333,        this.strokeList = new StrokeList();,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,334,        this.baseStroke = DEFAULT_STROKE;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,335,        this.autoPopulateSeriesStroke = false;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,337,        this.outlineStrokeList = new StrokeList();,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,338,        this.baseOutlineStroke = DEFAULT_OUTLINE_STROKE;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,339,        this.autoPopulateSeriesOutlineStroke = false;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,341,        this.shapeList = new ShapeList();,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,342,        this.baseShape = DEFAULT_SHAPE;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,343,        this.autoPopulateSeriesShape = true;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,345,        this.itemLabelsVisibleList = new BooleanList();,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,346,        this.baseItemLabelsVisible = false;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,348,        this.itemLabelFontList = new ObjectList();,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,349,"        this.baseItemLabelFont = new Font(""SansSerif"", Font.PLAIN, 10);",0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,351,        this.itemLabelPaintList = new PaintList();,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,352,        this.baseItemLabelPaint = Color.black;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,354,        this.positiveItemLabelPositionList = new ObjectList();,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,355,        this.basePositiveItemLabelPosition = new ItemLabelPosition(,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,358,        this.negativeItemLabelPositionList = new ObjectList();,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,359,        this.baseNegativeItemLabelPosition = new ItemLabelPosition(,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,362,        this.createEntitiesList = new BooleanList();,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,363,        this.baseCreateEntities = true;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,365,        this.listenerList = new EventListenerList();,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,367,    },0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,135,    public static final Double ZERO = new Double(0.0);,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,138,    public static final Paint DEFAULT_PAINT = Color.blue;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,141,    public static final Paint DEFAULT_OUTLINE_PAINT = Color.gray;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,144,    public static final Stroke DEFAULT_STROKE = new BasicStroke(1.0f);,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,147,    public static final Stroke DEFAULT_OUTLINE_STROKE = new BasicStroke(1.0f);,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,150,    public static final Shape DEFAULT_SHAPE ,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,154,    public static final Font DEFAULT_VALUE_LABEL_FONT ,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,158,    public static final Paint DEFAULT_VALUE_LABEL_PAINT = Color.black;,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2151,    private static final double ADJ = Math.cos(Math.PI / 6.0);,0.25,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2154,    private static final double OPP = Math.sin(Math.PI / 6.0);,0.25,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,144,        super();,0.25,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,107,    private boolean plotLines = false;,0.25,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,112,    private transient Paint groupPaint = Color.black;,0.25,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,117,    private transient Stroke groupStroke = new BasicStroke(1.0f);,0.25,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,120,"    private transient Icon minIcon = getIcon(new Arc2D.Double(-4, -4, 8, 8, 0,",0.25,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,124,"    private transient Icon maxIcon = getIcon(new Arc2D.Double(-4, -4, 8, 8, 0,",0.25,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,128,"    private transient Icon objectIcon = getIcon(new Line2D.Double(-4, 0, 4, 0),",0.25,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,132,    private int lastCategory = -1;,0.25,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,145,    },0.25,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,448,      final int width = shape.getBounds().width;,0.25,1,-1,1
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,449,      final int height = shape.getBounds().height;,0.25,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,450,      final GeneralPath path = new GeneralPath(shape);,0.25,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,451,      return new Icon() {,0.25,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,488,        final int width = shape.getBounds().width;,0.25,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,489,        final int height = shape.getBounds().height;,0.25,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,490,        final GeneralPath path = new GeneralPath(shape);,0.25,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,491,        return new Icon() {,0.25,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,230,    protected AbstractCategoryItemRenderer() {,0.25,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,231,        this.itemLabelGeneratorList = new ObjectList();,0.25,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,232,        this.toolTipGeneratorList = new ObjectList();,0.25,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,233,        this.urlGeneratorList = new ObjectList();,0.25,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,234,        this.legendItemLabelGenerator,0.25,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,236,        this.backgroundAnnotations = new ArrayList();,0.25,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,237,        this.foregroundAnnotations = new ArrayList();,0.25,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,238,    },0.25,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,451,      return new Icon() {,0.25,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,491,        return new Icon() {,0.25,0,-1,0
org/jfree/data/general/AbstractDataset,23,96,    protected AbstractDataset() {,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,97,        this.group = new DatasetGroup();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,98,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,99,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,109,        return this.group;,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,120,        if (group == null) {,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,121,"            throw new IllegalArgumentException(""Null 'group' argument."");",0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,123,        this.group = group;,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,124,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,134,"        this.listenerList.add(DatasetChangeListener.class, listener);",0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,135,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,146,"        this.listenerList.remove(DatasetChangeListener.class, listener);",0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,147,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,162,        List list = Arrays.asList(this.listenerList.getListenerList());,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,163,        return list.contains(listener);,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,172,"        notifyListeners(new DatasetChangeEvent(this, this));",0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,173,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,186,        Object[] listeners = this.listenerList.getListenerList();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,187,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,188,            if (listeners[i] == DatasetChangeListener.class) {,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,189,                ((DatasetChangeListener) listeners[i + 1]).datasetChanged(,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,194,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,207,        AbstractDataset clone = (AbstractDataset) super.clone();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,208,        clone.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,209,        return clone;    ,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,220,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,221,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,233,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,234,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,235,"        stream.registerValidation(this, 10);  // see comments about priority of",0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,237,    },0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,257,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/general/AbstractDataset,23,258,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,75,    public DefaultCategoryDataset() {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,76,        this.data = new DefaultKeyedValues2D();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,77,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,87,        return this.data.getRowCount();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,98,        return this.data.getColumnCount();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,112,"        return this.data.getValue(row, column);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,126,        return this.data.getRowKey(row);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,139,        return this.data.getRowIndex(key);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,150,        return this.data.getRowKeys();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,163,        return this.data.getColumnKey(column);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,176,        return this.data.getColumnIndex(key);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,187,        return this.data.getColumnKeys();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,203,"        return this.data.getValue(rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,218,"        this.data.addValue(value, rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,219,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,220,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,233,"        addValue(new Double(value), rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,234,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,248,"        this.data.setValue(value, rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,249,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,250,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,264,"        setValue(new Double(value), rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,265,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,280,        double existing = 0.0;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,281,"        Number n = getValue(rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,282,        if (n != null) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,283,            existing = n.doubleValue();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,285,"        setValue(existing + value, rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,286,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,298,"        this.data.removeValue(rowKey, columnKey);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,299,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,300,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,311,        this.data.removeRow(rowIndex);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,312,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,313,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,324,        this.data.removeRow(rowKey);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,325,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,326,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,337,        this.data.removeColumn(columnIndex);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,338,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,339,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,350,        this.data.removeColumn(columnKey);,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,351,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,352,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,359,        this.data.clear();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,360,        fireDatasetChanged();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,361,    },0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,372,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,373,            return true;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,376,        if (!(obj instanceof CategoryDataset)) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,377,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,380,        CategoryDataset that = (CategoryDataset) obj;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,381,        if (!getRowKeys().equals(that.getRowKeys())) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,382,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,385,        if (!getColumnKeys().equals(that.getColumnKeys())) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,386,            return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,389,        int rowCount = getRowCount();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,390,        int colCount = getColumnCount();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,391,        for (int r = 0; r < rowCount; r++) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,392,            for (int c = 0; c < colCount; c++) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,393,"                Number v1 = getValue(r, c);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,394,"                Number v2 = that.getValue(r, c);",0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,395,                if (v1 == null) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,396,                    if (v2 != null) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,397,                        return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,400,                else if (!v1.equals(v2)) {,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,401,                    return false;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,405,        return true;,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,414,        return this.data.hashCode();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,426,        DefaultCategoryDataset clone = (DefaultCategoryDataset) super.clone();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,427,        clone.data = (DefaultKeyedValues2D) this.data.clone();,0.0,0,-1,0
org/jfree/data/category/DefaultCategoryDataset,23,428,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,273,    protected Axis(String label) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,275,        this.label = label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,276,        this.visible = DEFAULT_AXIS_VISIBLE;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,277,        this.labelFont = DEFAULT_AXIS_LABEL_FONT;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,278,        this.labelPaint = DEFAULT_AXIS_LABEL_PAINT;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,279,        this.labelInsets = DEFAULT_AXIS_LABEL_INSETS;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,280,        this.labelAngle = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,281,        this.labelToolTip = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,282,        this.labelURL = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,284,        this.axisLineVisible = true;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,285,        this.axisLinePaint = DEFAULT_AXIS_LINE_PAINT;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,286,        this.axisLineStroke = DEFAULT_AXIS_LINE_STROKE;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,288,        this.tickLabelsVisible = DEFAULT_TICK_LABELS_VISIBLE;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,289,        this.tickLabelFont = DEFAULT_TICK_LABEL_FONT;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,290,        this.tickLabelPaint = DEFAULT_TICK_LABEL_PAINT;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,291,        this.tickLabelInsets = DEFAULT_TICK_LABEL_INSETS;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,293,        this.tickMarksVisible = DEFAULT_TICK_MARKS_VISIBLE;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,294,        this.tickMarkStroke = DEFAULT_TICK_MARK_STROKE;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,295,        this.tickMarkPaint = DEFAULT_TICK_MARK_PAINT;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,296,        this.tickMarkInsideLength = DEFAULT_TICK_MARK_INSIDE_LENGTH;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,297,        this.tickMarkOutsideLength = DEFAULT_TICK_MARK_OUTSIDE_LENGTH;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,299,        this.plot = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,301,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,303,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,137,    public static final Font DEFAULT_AXIS_LABEL_FONT = new Font(,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,141,    public static final Paint DEFAULT_AXIS_LABEL_PAINT = Color.black;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,144,    public static final RectangleInsets DEFAULT_AXIS_LABEL_INSETS ,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,148,    public static final Paint DEFAULT_AXIS_LINE_PAINT = Color.gray;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,151,    public static final Stroke DEFAULT_AXIS_LINE_STROKE = new BasicStroke(1.0f);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,157,"    public static final Font DEFAULT_TICK_LABEL_FONT = new Font(""SansSerif"", ",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,161,    public static final Paint DEFAULT_TICK_LABEL_PAINT = Color.black;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,164,    public static final RectangleInsets DEFAULT_TICK_LABEL_INSETS ,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,171,    public static final Stroke DEFAULT_TICK_MARK_STROKE = new BasicStroke(1);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,174,    public static final Paint DEFAULT_TICK_MARK_PAINT = Color.gray;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,314,        return this.visible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,326,        if (flag != this.visible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,327,            this.visible = flag;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,328,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,330,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,342,        return this.label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,357,        String existing = this.label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,358,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,359,            if (!existing.equals(label)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,360,                this.label = label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,361,                notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,365,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,366,                this.label = label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,367,                notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,371,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,381,        return this.labelFont;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,393,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,394,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,396,        if (!this.labelFont.equals(font)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,397,            this.labelFont = font;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,398,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,400,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,410,        return this.labelPaint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,422,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,423,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,425,        this.labelPaint = paint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,426,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,427,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,438,        return this.labelInsets;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,450,        if (insets == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,451,"            throw new IllegalArgumentException(""Null 'insets' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,453,        if (!insets.equals(this.labelInsets)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,454,            this.labelInsets = insets;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,455,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,457,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,467,        return this.labelAngle;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,479,        this.labelAngle = angle;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,480,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,481,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,493,        return this.labelToolTip;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,507,        this.labelToolTip = text;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,508,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,509,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,521,        return this.labelURL;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,535,        this.labelURL = url;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,536,        notifyListeners(new AxisChangeEvent(this));        ,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,537,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,549,        return this.axisLineVisible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,563,        this.axisLineVisible = visible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,564,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,565,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,575,        return this.axisLinePaint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,587,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,588,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,590,        this.axisLinePaint = paint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,591,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,592,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,602,        return this.axisLineStroke;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,614,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,615,"            throw new IllegalArgumentException(""Null 'stroke' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,617,        this.axisLineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,618,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,619,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,631,        return this.tickLabelsVisible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,647,        if (flag != this.tickLabelsVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,648,            this.tickLabelsVisible = flag;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,649,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,652,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,662,        return this.tickLabelFont;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,675,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,676,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,679,        if (!this.tickLabelFont.equals(font)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,680,            this.tickLabelFont = font;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,681,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,684,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,694,        return this.tickLabelPaint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,706,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,707,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,709,        this.tickLabelPaint = paint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,710,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,711,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,721,        return this.tickLabelInsets;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,733,        if (insets == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,734,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,736,        if (!this.tickLabelInsets.equals(insets)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,737,            this.tickLabelInsets = insets;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,738,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,740,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,752,        return this.tickMarksVisible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,764,        if (flag != this.tickMarksVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,765,            this.tickMarksVisible = flag;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,766,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,768,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,779,        return this.tickMarkInsideLength;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,791,        this.tickMarkInsideLength = length;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,792,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,793,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,804,        return this.tickMarkOutsideLength;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,816,        this.tickMarkOutsideLength = length;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,817,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,818,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,828,        return this.tickMarkStroke;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,840,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,841,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,843,        if (!this.tickMarkStroke.equals(stroke)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,844,            this.tickMarkStroke = stroke;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,845,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,847,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,857,        return this.tickMarkPaint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,869,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,870,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,872,        this.tickMarkPaint = paint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,873,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,874,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,886,        return this.plot;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,899,        this.plot = plot;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,900,        configure();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,901,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,911,        return this.fixedDimension;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,928,        this.fixedDimension = dimension;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,929,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1000,"        this.listenerList.add(AxisChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1001,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1011,"        this.listenerList.remove(AxisChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1012,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1024,        List list = Arrays.asList(this.listenerList.getListenerList());,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1025,        return list.contains(listener);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1036,        Object[] listeners = this.listenerList.getListenerList();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1037,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1038,            if (listeners[i] == AxisChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1039,                ((AxisChangeListener) listeners[i + 1]).axisChanged(event);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1043,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1056,        Rectangle2D result = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1057,        String axisLabel = getLabel();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1058,"        if (axisLabel != null && !axisLabel.equals("""")) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1059,            FontMetrics fm = g2.getFontMetrics(getLabelFont());,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1060,"            Rectangle2D bounds = TextUtilities.getTextBounds(axisLabel, g2, fm);",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1061,            RectangleInsets insets = getLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1062,            bounds = insets.createOutsetRectangle(bounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1063,            double angle = getLabelAngle();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1064,            if (edge == RectangleEdge.LEFT || edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1065,                angle = angle - Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1067,            double x = bounds.getCenterX();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1068,            double y = bounds.getCenterY();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1069,            AffineTransform transformer ,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1071,            Shape labelBounds = transformer.createTransformedShape(bounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1072,            result = labelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1075,        return result;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1097,        if (state == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1098,"            throw new IllegalArgumentException(""Null 'state' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1101,"        if ((label == null) || (label.equals(""""))) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1102,            return state;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1105,        Font font = getLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1106,        RectangleInsets insets = getLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1107,        g2.setFont(font);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1108,        g2.setPaint(getLabelPaint());,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1109,        FontMetrics fm = g2.getFontMetrics();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1110,"        Rectangle2D labelBounds = TextUtilities.getTextBounds(label, g2, fm);",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1111,        Shape hotspot = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1113,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1114,            AffineTransform t = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1117,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1118,            labelBounds = rotatedLabelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1119,            float w = (float) labelBounds.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1120,            float h = (float) labelBounds.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1121,            float labelx = (float) dataArea.getCenterX();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1122,            float labely = (float) (state.getCursor() - insets.getBottom() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1124,"            TextUtilities.drawRotatedString(label, g2, labelx, labely, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1126,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1128,            state.cursorUp(insets.getTop() + labelBounds.getHeight() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1130,        },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1131,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1132,            AffineTransform t = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1135,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1136,            labelBounds = rotatedLabelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1137,            float w = (float) labelBounds.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1138,            float h = (float) labelBounds.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1139,            float labelx = (float) dataArea.getCenterX();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1140,            float labely = (float) (state.getCursor() + insets.getTop() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1142,"            TextUtilities.drawRotatedString(label, g2, labelx, labely, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1144,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1146,            state.cursorDown(insets.getTop() + labelBounds.getHeight() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1148,        },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1149,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1150,            AffineTransform t = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1153,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1154,            labelBounds = rotatedLabelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1155,            float w = (float) labelBounds.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1156,            float h = (float) labelBounds.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1157,            float labelx = (float) (state.getCursor() - insets.getRight() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1159,            float labely = (float) dataArea.getCenterY();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1160,"            TextUtilities.drawRotatedString(label, g2, labelx, labely, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1163,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1165,            state.cursorLeft(insets.getLeft() + labelBounds.getWidth() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1167,        },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1168,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1170,            AffineTransform t = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1173,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1174,            labelBounds = rotatedLabelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1175,            float w = (float) labelBounds.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1176,            float h = (float) labelBounds.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1177,            float labelx = (float) (state.getCursor() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1179,            float labely = (float) (dataArea.getY() + dataArea.getHeight() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1181,"            TextUtilities.drawRotatedString(label, g2, labelx, labely, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1184,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1186,            state.cursorRight(insets.getLeft() + labelBounds.getWidth() ,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1190,        if (plotState != null && hotspot != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1191,            ChartRenderingInfo owner = plotState.getOwner();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1192,            if (owner != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1193,                EntityCollection entities = owner.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1194,                if (entities != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1195,"                    entities.add(new AxisLabelEntity(this, hotspot, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1200,        return state;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1215,        Line2D axisLine = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1216,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1217,"            axisLine = new Line2D.Double(dataArea.getX(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1220,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1221,"            axisLine = new Line2D.Double(dataArea.getX(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1224,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1225,"            axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1228,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1229,"            axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1232,        g2.setPaint(this.axisLinePaint);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1233,        g2.setStroke(this.axisLineStroke);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1234,        g2.draw(axisLine);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1236,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1247,        Axis clone = (Axis) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1249,        clone.plot = null;        ,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1250,        clone.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1251,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1262,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1263,            return true;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1265,        if (!(obj instanceof Axis)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1266,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1268,        Axis that = (Axis) obj;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1269,        if (this.visible != that.visible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1270,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1272,"        if (!ObjectUtilities.equal(this.label, that.label)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1273,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1275,"        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1276,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1278,"        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1279,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1281,"        if (!ObjectUtilities.equal(this.labelInsets, that.labelInsets)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1282,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1284,        if (this.labelAngle != that.labelAngle) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1285,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1287,"        if (!ObjectUtilities.equal(this.labelToolTip, that.labelToolTip)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1288,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1290,"        if (!ObjectUtilities.equal(this.labelURL, that.labelURL)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1291,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1293,        if (this.axisLineVisible != that.axisLineVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1294,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1296,"        if (!ObjectUtilities.equal(this.axisLineStroke, that.axisLineStroke)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1297,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1299,"        if (!PaintUtilities.equal(this.axisLinePaint, that.axisLinePaint)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1300,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1302,        if (this.tickLabelsVisible != that.tickLabelsVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1303,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1305,"        if (!ObjectUtilities.equal(this.tickLabelFont, that.tickLabelFont)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1306,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1308,"        if (!PaintUtilities.equal(this.tickLabelPaint, that.tickLabelPaint)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1309,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1311,        if (!ObjectUtilities.equal(,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1314,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1316,        if (this.tickMarksVisible != that.tickMarksVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1317,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1319,        if (this.tickMarkInsideLength != that.tickMarkInsideLength) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1320,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1322,        if (this.tickMarkOutsideLength != that.tickMarkOutsideLength) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1323,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1325,"        if (!PaintUtilities.equal(this.tickMarkPaint, that.tickMarkPaint)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1326,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1328,"        if (!ObjectUtilities.equal(this.tickMarkStroke, that.tickMarkStroke)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1329,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1331,        if (this.fixedDimension != that.fixedDimension) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1332,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1334,        return true;,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1345,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1346,"        SerialUtilities.writePaint(this.labelPaint, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1347,"        SerialUtilities.writePaint(this.tickLabelPaint, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1348,"        SerialUtilities.writeStroke(this.axisLineStroke, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1349,"        SerialUtilities.writePaint(this.axisLinePaint, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1350,"        SerialUtilities.writeStroke(this.tickMarkStroke, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1351,"        SerialUtilities.writePaint(this.tickMarkPaint, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1352,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1364,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1365,        this.labelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1366,        this.tickLabelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1367,        this.axisLineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1368,        this.axisLinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1369,        this.tickMarkStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1370,        this.tickMarkPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1371,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/axis/Axis,23,1372,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,189,        this(null);    ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,190,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,198,"        super(label, NumberAxis.createStandardTickUnits());",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,199,        this.rangeType = RangeType.FULL;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,200,        this.autoRangeIncludesZero = DEFAULT_AUTO_RANGE_INCLUDES_ZERO;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,201,        this.autoRangeStickyZero = DEFAULT_AUTO_RANGE_STICKY_ZERO;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,202,        this.tickUnit = DEFAULT_TICK_UNIT;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,203,        this.numberFormatOverride = null;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,204,        this.markerBand = null;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,205,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,150,    public static final NumberTickUnit DEFAULT_TICK_UNIT = new NumberTickUnit(,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,215,        return this.rangeType;   ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,226,        if (rangeType == null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,227,"            throw new IllegalArgumentException(""Null 'rangeType' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,229,        this.rangeType = rangeType;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,230,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,231,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,240,        return this.autoRangeIncludesZero;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,257,        if (this.autoRangeIncludesZero != flag) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,258,            this.autoRangeIncludesZero = flag;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,259,            if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,260,                autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,262,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,264,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,275,        return this.autoRangeStickyZero;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,287,        if (this.autoRangeStickyZero != flag) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,288,            this.autoRangeStickyZero = flag;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,289,            if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,290,                autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,292,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,294,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,310,        return this.tickUnit;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,327,"        setTickUnit(unit, true, true);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,328,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,344,        if (unit == null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,345,"            throw new IllegalArgumentException(""Null 'unit' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,347,        this.tickUnit = unit;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,348,        if (turnOffAutoSelect) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,349,"            setAutoTickUnitSelection(false, false);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,351,        if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,352,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,355,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,366,        return this.numberFormatOverride;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,378,        this.numberFormatOverride = formatter;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,379,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,380,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,390,        return this.markerBand;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,404,        this.markerBand = band;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,405,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,406,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,413,        if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,414,            autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,416,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,423,        Plot plot = getPlot();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,424,        if (plot == null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,425,"            return;  // no plot, no data",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,428,        if (plot instanceof ValueAxisPlot) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,429,            ValueAxisPlot vap = (ValueAxisPlot) plot;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,431,            Range r = vap.getDataRange(this);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,432,            if (r == null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,433,                r = getDefaultAutoRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,436,            double upper = r.getUpperBound();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,437,            double lower = r.getLowerBound();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,438,            if (this.rangeType == RangeType.POSITIVE) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,439,"                lower = Math.max(0.0, lower);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,440,"                upper = Math.max(0.0, upper);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,442,            else if (this.rangeType == RangeType.NEGATIVE) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,443,"                lower = Math.min(0.0, lower);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,444,"                upper = Math.min(0.0, upper);                   ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,447,            if (getAutoRangeIncludesZero()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,448,"                lower = Math.min(lower, 0.0);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,449,"                upper = Math.max(upper, 0.0);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,451,            double range = upper - lower;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,454,            double fixedAutoRange = getFixedAutoRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,455,            if (fixedAutoRange > 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,456,                lower = upper - fixedAutoRange;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,460,                double minRange = getAutoRangeMinimumSize();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,461,                if (range < minRange) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,462,                    double expand = (minRange - range) / 2;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,463,                    upper = upper + expand;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,464,                    lower = lower - expand;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,465,                    if (lower == upper) { // see bug report 1549218,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,466,                        double adjust = Math.abs(lower) / 10.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,467,                        lower = lower - adjust;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,468,                        upper = upper + adjust;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,470,                    if (this.rangeType == RangeType.POSITIVE) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,471,                        if (lower < 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,472,                            upper = upper - lower;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,473,                            lower = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,476,                    else if (this.rangeType == RangeType.NEGATIVE) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,477,                        if (upper > 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,478,                            lower = lower - upper;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,479,                            upper = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,484,                if (getAutoRangeStickyZero()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,485,                    if (upper <= 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,486,"                        upper = Math.min(0.0, upper + getUpperMargin() * range);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,489,                        upper = upper + getUpperMargin() * range;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,491,                    if (lower >= 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,492,"                        lower = Math.max(0.0, lower - getLowerMargin() * range);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,495,                        lower = lower - getLowerMargin() * range;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,499,                    upper = upper + getUpperMargin() * range;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,500,                    lower = lower - getLowerMargin() * range;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,504,"            setRange(new Range(lower, upper), false, false);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,507,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,526,        Range range = getRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,527,        double axisMin = range.getLowerBound();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,528,        double axisMax = range.getUpperBound();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,530,        double min = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,531,        double max = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,532,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,533,            min = area.getX();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,534,            max = area.getMaxX();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,536,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,537,            max = area.getMinY();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,538,            min = area.getMaxY();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,540,        if (isInverted()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,541,            return max ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,545,            return min ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,566,        Range range = getRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,567,        double axisMin = range.getLowerBound();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,568,        double axisMax = range.getUpperBound();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,570,        double min = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,571,        double max = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,572,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,573,            min = area.getX();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,574,            max = area.getMaxX();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,576,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,577,            min = area.getMaxY();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,578,            max = area.getY();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,580,        if (isInverted()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,581,            return axisMax ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,585,            return axisMin ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,600,        double unit = getTickUnit().getSize();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,601,        double index = Math.ceil(getRange().getLowerBound() / unit);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,602,        return index * unit;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,615,        double unit = getTickUnit().getSize();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,616,        double index = Math.floor(getRange().getUpperBound() / unit);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,617,        return index * unit;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,628,        double unit = getTickUnit().getSize();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,629,        Range range = getRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,630,        return (int) (Math.floor(range.getUpperBound() / unit),0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,658,        AxisState state = null;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,660,        if (!isVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,661,            state = new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,664,"            List ticks = refreshTicks(g2, state, dataArea, edge); ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,665,            state.setTicks(ticks);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,666,            return state;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,670,"        state = drawTickMarksAndLabels(g2, cursor, plotArea, dataArea, edge,",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,682,"        state = drawLabel(getLabel(), g2, plotArea, dataArea, edge, state,",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,685,        return state;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,703,        TickUnits units = new TickUnits();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,704,"        DecimalFormat df0 = new DecimalFormat(""0.00000000"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,705,"        DecimalFormat df1 = new DecimalFormat(""0.0000000"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,706,"        DecimalFormat df2 = new DecimalFormat(""0.000000"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,707,"        DecimalFormat df3 = new DecimalFormat(""0.00000"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,708,"        DecimalFormat df4 = new DecimalFormat(""0.0000"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,709,"        DecimalFormat df5 = new DecimalFormat(""0.000"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,710,"        DecimalFormat df6 = new DecimalFormat(""0.00"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,711,"        DecimalFormat df7 = new DecimalFormat(""0.0"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,712,"        DecimalFormat df8 = new DecimalFormat(""#,##0"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,713,"        DecimalFormat df9 = new DecimalFormat(""#,###,##0"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,714,"        DecimalFormat df10 = new DecimalFormat(""#,###,###,##0"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,718,"        units.add(new NumberTickUnit(0.0000001, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,719,"        units.add(new NumberTickUnit(0.000001, df2));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,720,"        units.add(new NumberTickUnit(0.00001, df3));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,721,"        units.add(new NumberTickUnit(0.0001, df4));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,722,"        units.add(new NumberTickUnit(0.001, df5));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,723,"        units.add(new NumberTickUnit(0.01, df6));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,724,"        units.add(new NumberTickUnit(0.1, df7));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,725,"        units.add(new NumberTickUnit(1, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,726,"        units.add(new NumberTickUnit(10, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,727,"        units.add(new NumberTickUnit(100, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,728,"        units.add(new NumberTickUnit(1000, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,729,"        units.add(new NumberTickUnit(10000, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,730,"        units.add(new NumberTickUnit(100000, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,731,"        units.add(new NumberTickUnit(1000000, df9));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,732,"        units.add(new NumberTickUnit(10000000, df9));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,733,"        units.add(new NumberTickUnit(100000000, df9));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,734,"        units.add(new NumberTickUnit(1000000000, df10));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,735,"        units.add(new NumberTickUnit(10000000000.0, df10));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,736,"        units.add(new NumberTickUnit(100000000000.0, df10));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,738,"        units.add(new NumberTickUnit(0.00000025, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,739,"        units.add(new NumberTickUnit(0.0000025, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,740,"        units.add(new NumberTickUnit(0.000025, df2));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,741,"        units.add(new NumberTickUnit(0.00025, df3));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,742,"        units.add(new NumberTickUnit(0.0025, df4));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,743,"        units.add(new NumberTickUnit(0.025, df5));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,744,"        units.add(new NumberTickUnit(0.25, df6));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,745,"        units.add(new NumberTickUnit(2.5, df7));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,746,"        units.add(new NumberTickUnit(25, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,747,"        units.add(new NumberTickUnit(250, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,748,"        units.add(new NumberTickUnit(2500, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,749,"        units.add(new NumberTickUnit(25000, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,750,"        units.add(new NumberTickUnit(250000, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,751,"        units.add(new NumberTickUnit(2500000, df9));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,752,"        units.add(new NumberTickUnit(25000000, df9));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,753,"        units.add(new NumberTickUnit(250000000, df9));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,754,"        units.add(new NumberTickUnit(2500000000.0, df10));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,755,"        units.add(new NumberTickUnit(25000000000.0, df10));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,756,"        units.add(new NumberTickUnit(250000000000.0, df10));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,758,"        units.add(new NumberTickUnit(0.0000005, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,759,"        units.add(new NumberTickUnit(0.000005, df2));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,760,"        units.add(new NumberTickUnit(0.00005, df3));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,761,"        units.add(new NumberTickUnit(0.0005, df4));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,762,"        units.add(new NumberTickUnit(0.005, df5));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,763,"        units.add(new NumberTickUnit(0.05, df6));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,764,"        units.add(new NumberTickUnit(0.5, df7));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,765,"        units.add(new NumberTickUnit(5L, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,766,"        units.add(new NumberTickUnit(50L, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,767,"        units.add(new NumberTickUnit(500L, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,768,"        units.add(new NumberTickUnit(5000L, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,769,"        units.add(new NumberTickUnit(50000L, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,770,"        units.add(new NumberTickUnit(500000L, df8));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,771,"        units.add(new NumberTickUnit(5000000L, df9));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,772,"        units.add(new NumberTickUnit(50000000L, df9));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,773,"        units.add(new NumberTickUnit(500000000L, df9));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,774,"        units.add(new NumberTickUnit(5000000000L, df10));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,775,"        units.add(new NumberTickUnit(50000000000L, df10));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,776,"        units.add(new NumberTickUnit(500000000000L, df10));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,778,        return units;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,792,        TickUnits units = new TickUnits();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,793,"        DecimalFormat df0 = new DecimalFormat(""0"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,794,"        DecimalFormat df1 = new DecimalFormat(""#,##0"");",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,795,"        units.add(new NumberTickUnit(1, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,796,"        units.add(new NumberTickUnit(2, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,797,"        units.add(new NumberTickUnit(5, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,798,"        units.add(new NumberTickUnit(10, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,799,"        units.add(new NumberTickUnit(20, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,800,"        units.add(new NumberTickUnit(50, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,801,"        units.add(new NumberTickUnit(100, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,802,"        units.add(new NumberTickUnit(200, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,803,"        units.add(new NumberTickUnit(500, df0));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,804,"        units.add(new NumberTickUnit(1000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,805,"        units.add(new NumberTickUnit(2000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,806,"        units.add(new NumberTickUnit(5000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,807,"        units.add(new NumberTickUnit(10000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,808,"        units.add(new NumberTickUnit(20000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,809,"        units.add(new NumberTickUnit(50000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,810,"        units.add(new NumberTickUnit(100000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,811,"        units.add(new NumberTickUnit(200000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,812,"        units.add(new NumberTickUnit(500000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,813,"        units.add(new NumberTickUnit(1000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,814,"        units.add(new NumberTickUnit(2000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,815,"        units.add(new NumberTickUnit(5000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,816,"        units.add(new NumberTickUnit(10000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,817,"        units.add(new NumberTickUnit(20000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,818,"        units.add(new NumberTickUnit(50000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,819,"        units.add(new NumberTickUnit(100000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,820,"        units.add(new NumberTickUnit(200000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,821,"        units.add(new NumberTickUnit(500000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,822,"        units.add(new NumberTickUnit(1000000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,823,"        units.add(new NumberTickUnit(2000000000, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,824,"        units.add(new NumberTickUnit(5000000000.0, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,825,"        units.add(new NumberTickUnit(10000000000.0, df1));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,827,        return units;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,848,        TickUnits units = new TickUnits();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,850,        NumberFormat numberFormat = NumberFormat.getNumberInstance(locale);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,854,"        units.add(new NumberTickUnit(0.0000001,    numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,855,"        units.add(new NumberTickUnit(0.000001,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,856,"        units.add(new NumberTickUnit(0.00001,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,857,"        units.add(new NumberTickUnit(0.0001,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,858,"        units.add(new NumberTickUnit(0.001,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,859,"        units.add(new NumberTickUnit(0.01,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,860,"        units.add(new NumberTickUnit(0.1,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,861,"        units.add(new NumberTickUnit(1,            numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,862,"        units.add(new NumberTickUnit(10,           numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,863,"        units.add(new NumberTickUnit(100,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,864,"        units.add(new NumberTickUnit(1000,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,865,"        units.add(new NumberTickUnit(10000,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,866,"        units.add(new NumberTickUnit(100000,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,867,"        units.add(new NumberTickUnit(1000000,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,868,"        units.add(new NumberTickUnit(10000000,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,869,"        units.add(new NumberTickUnit(100000000,    numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,870,"        units.add(new NumberTickUnit(1000000000,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,871,"        units.add(new NumberTickUnit(10000000000.0,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,873,"        units.add(new NumberTickUnit(0.00000025,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,874,"        units.add(new NumberTickUnit(0.0000025,    numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,875,"        units.add(new NumberTickUnit(0.000025,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,876,"        units.add(new NumberTickUnit(0.00025,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,877,"        units.add(new NumberTickUnit(0.0025,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,878,"        units.add(new NumberTickUnit(0.025,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,879,"        units.add(new NumberTickUnit(0.25,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,880,"        units.add(new NumberTickUnit(2.5,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,881,"        units.add(new NumberTickUnit(25,           numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,882,"        units.add(new NumberTickUnit(250,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,883,"        units.add(new NumberTickUnit(2500,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,884,"        units.add(new NumberTickUnit(25000,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,885,"        units.add(new NumberTickUnit(250000,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,886,"        units.add(new NumberTickUnit(2500000,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,887,"        units.add(new NumberTickUnit(25000000,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,888,"        units.add(new NumberTickUnit(250000000,    numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,889,"        units.add(new NumberTickUnit(2500000000.0,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,890,"        units.add(new NumberTickUnit(25000000000.0,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,892,"        units.add(new NumberTickUnit(0.0000005,    numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,893,"        units.add(new NumberTickUnit(0.000005,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,894,"        units.add(new NumberTickUnit(0.00005,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,895,"        units.add(new NumberTickUnit(0.0005,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,896,"        units.add(new NumberTickUnit(0.005,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,897,"        units.add(new NumberTickUnit(0.05,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,898,"        units.add(new NumberTickUnit(0.5,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,899,"        units.add(new NumberTickUnit(5L,           numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,900,"        units.add(new NumberTickUnit(50L,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,901,"        units.add(new NumberTickUnit(500L,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,902,"        units.add(new NumberTickUnit(5000L,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,903,"        units.add(new NumberTickUnit(50000L,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,904,"        units.add(new NumberTickUnit(500000L,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,905,"        units.add(new NumberTickUnit(5000000L,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,906,"        units.add(new NumberTickUnit(50000000L,    numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,907,"        units.add(new NumberTickUnit(500000000L,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,908,"        units.add(new NumberTickUnit(5000000000L,  numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,909,"        units.add(new NumberTickUnit(50000000000L,  numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,911,        return units;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,927,        TickUnits units = new TickUnits();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,929,        NumberFormat numberFormat = NumberFormat.getNumberInstance(locale);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,931,"        units.add(new NumberTickUnit(1,              numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,932,"        units.add(new NumberTickUnit(2,              numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,933,"        units.add(new NumberTickUnit(5,              numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,934,"        units.add(new NumberTickUnit(10,             numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,935,"        units.add(new NumberTickUnit(20,             numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,936,"        units.add(new NumberTickUnit(50,             numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,937,"        units.add(new NumberTickUnit(100,            numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,938,"        units.add(new NumberTickUnit(200,            numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,939,"        units.add(new NumberTickUnit(500,            numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,940,"        units.add(new NumberTickUnit(1000,           numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,941,"        units.add(new NumberTickUnit(2000,           numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,942,"        units.add(new NumberTickUnit(5000,           numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,943,"        units.add(new NumberTickUnit(10000,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,944,"        units.add(new NumberTickUnit(20000,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,945,"        units.add(new NumberTickUnit(50000,          numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,946,"        units.add(new NumberTickUnit(100000,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,947,"        units.add(new NumberTickUnit(200000,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,948,"        units.add(new NumberTickUnit(500000,         numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,949,"        units.add(new NumberTickUnit(1000000,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,950,"        units.add(new NumberTickUnit(2000000,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,951,"        units.add(new NumberTickUnit(5000000,        numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,952,"        units.add(new NumberTickUnit(10000000,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,953,"        units.add(new NumberTickUnit(20000000,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,954,"        units.add(new NumberTickUnit(50000000,       numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,955,"        units.add(new NumberTickUnit(100000000,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,956,"        units.add(new NumberTickUnit(200000000,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,957,"        units.add(new NumberTickUnit(500000000,      numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,958,"        units.add(new NumberTickUnit(1000000000,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,959,"        units.add(new NumberTickUnit(2000000000,     numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,960,"        units.add(new NumberTickUnit(5000000000.0,   numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,961,"        units.add(new NumberTickUnit(10000000000.0,  numberFormat));",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,963,        return units;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,976,        RectangleInsets tickLabelInsets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,977,        double result = tickLabelInsets.getTop() + tickLabelInsets.getBottom();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,979,        Font tickLabelFont = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,980,        FontRenderContext frc = g2.getFontRenderContext();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,981,"        result += tickLabelFont.getLineMetrics(""123"", frc).getHeight();",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,982,        return result;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1002,        RectangleInsets tickLabelInsets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1003,        double result = tickLabelInsets.getLeft() + tickLabelInsets.getRight();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1005,        if (isVerticalTickLabels()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1008,            FontRenderContext frc = g2.getFontRenderContext();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1009,"            LineMetrics lm = getTickLabelFont().getLineMetrics(""0"", frc);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1010,            result += lm.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1011,        },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1014,            FontMetrics fm = g2.getFontMetrics(getTickLabelFont());,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1015,            Range range = getRange();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1016,            double lower = range.getLowerBound();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1017,            double upper = range.getUpperBound();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1018,"            String lowerStr = """";",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1019,"            String upperStr = """";",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1020,            NumberFormat formatter = getNumberFormatOverride();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1021,            if (formatter != null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1022,                lowerStr = formatter.format(lower);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1023,                upperStr = formatter.format(upper);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1026,                lowerStr = unit.valueToString(lower);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1027,                upperStr = unit.valueToString(upper);                ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1029,            double w1 = fm.stringWidth(lowerStr);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1030,            double w2 = fm.stringWidth(upperStr);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1031,"            result += Math.max(w1, w2);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1034,        return result;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1051,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1052,"            selectHorizontalAutoTickUnit(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1054,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1055,"            selectVerticalAutoTickUnit(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1058,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1073,        double tickLabelWidth = estimateMaximumTickLabelWidth(,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1078,        TickUnitSource tickUnits = getStandardTickUnits();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1079,        TickUnit unit1 = tickUnits.getCeilingTickUnit(getTickUnit());,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1080,"        double unit1Width = lengthToJava2D(unit1.getSize(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1083,        double guess = (tickLabelWidth / unit1Width) * unit1.getSize();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1085,        NumberTickUnit unit2 ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1087,"        double unit2Width = lengthToJava2D(unit2.getSize(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1089,"        tickLabelWidth = estimateMaximumTickLabelWidth(g2, unit2);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1090,        if (tickLabelWidth > unit2Width) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1091,            unit2 = (NumberTickUnit) tickUnits.getLargerTickUnit(unit2);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1094,"        setTickUnit(unit2, false, false);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1096,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1111,        double tickLabelHeight = estimateMaximumTickLabelHeight(g2);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1114,        TickUnitSource tickUnits = getStandardTickUnits();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1115,        TickUnit unit1 = tickUnits.getCeilingTickUnit(getTickUnit());,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1116,"        double unitHeight = lengthToJava2D(unit1.getSize(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1119,        double guess = (tickLabelHeight / unitHeight) * unit1.getSize();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1121,        NumberTickUnit unit2 ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1123,"        double unit2Height = lengthToJava2D(unit2.getSize(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1125,        tickLabelHeight = estimateMaximumTickLabelHeight(g2);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1126,        if (tickLabelHeight > unit2Height) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1127,            unit2 = (NumberTickUnit) tickUnits.getLargerTickUnit(unit2);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1130,"        setTickUnit(unit2, false, false);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1132,    },0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1151,        List result = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1152,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1153,"            result = refreshTicksHorizontal(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1155,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1156,"            result = refreshTicksVertical(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1158,        return result;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1176,        List result = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1178,        Font tickLabelFont = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1179,        g2.setFont(tickLabelFont);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1181,        if (isAutoTickUnitSelection()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1182,"            selectAutoTickUnit(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1185,        double size = getTickUnit().getSize();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1186,        int count = calculateVisibleTickCount();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1187,        double lowestTickValue = calculateLowestVisibleTickValue();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1189,        if (count <= ValueAxis.MAXIMUM_TICK_COUNT) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1190,            for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1191,                double currentTickValue = lowestTickValue + (i * size);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1193,                NumberFormat formatter = getNumberFormatOverride();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1194,                if (formatter != null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1195,                    tickLabel = formatter.format(currentTickValue);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1198,                    tickLabel = getTickUnit().valueToString(currentTickValue);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1200,                TextAnchor anchor = null;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1201,                TextAnchor rotationAnchor = null;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1202,                double angle = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1203,                if (isVerticalTickLabels()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1204,                    anchor = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1205,                    rotationAnchor = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1206,                    if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1207,                        angle = Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1210,                        angle = -Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1214,                    if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1215,                        anchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1216,                        rotationAnchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1219,                        anchor = TextAnchor.TOP_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1220,                        rotationAnchor = TextAnchor.TOP_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1224,"                Tick tick = new NumberTick(new Double(currentTickValue), ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1226,                result.add(tick);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1229,        return result;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1248,        List result = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1249,        result.clear();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1251,        Font tickLabelFont = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1252,        g2.setFont(tickLabelFont);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1253,        if (isAutoTickUnitSelection()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1254,"            selectAutoTickUnit(g2, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1257,        double size = getTickUnit().getSize();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1258,        int count = calculateVisibleTickCount();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1259,        double lowestTickValue = calculateLowestVisibleTickValue();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1261,        if (count <= ValueAxis.MAXIMUM_TICK_COUNT) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1262,            for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1263,                double currentTickValue = lowestTickValue + (i * size);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1265,                NumberFormat formatter = getNumberFormatOverride();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1266,                if (formatter != null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1267,                    tickLabel = formatter.format(currentTickValue);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1270,                    tickLabel = getTickUnit().valueToString(currentTickValue);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1273,                TextAnchor anchor = null;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1274,                TextAnchor rotationAnchor = null;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1275,                double angle = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1276,                if (isVerticalTickLabels()) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1277,                    if (edge == RectangleEdge.LEFT) { ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1278,                        anchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1279,                        rotationAnchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1280,                        angle = -Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1283,                        anchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1284,                        rotationAnchor = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1285,                        angle = Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1289,                    if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1290,                        anchor = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1291,                        rotationAnchor = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1294,                        anchor = TextAnchor.CENTER_LEFT;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1295,                        rotationAnchor = TextAnchor.CENTER_LEFT;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1299,                Tick tick = new NumberTick(,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1303,                result.add(tick);,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1306,        return result;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1319,        NumberAxis clone = (NumberAxis) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1320,        if (this.numberFormatOverride != null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1321,            clone.numberFormatOverride ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1324,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1335,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1336,            return true;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1338,        if (!(obj instanceof NumberAxis)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1339,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1341,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1342,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1344,        NumberAxis that = (NumberAxis) obj;        ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1345,        if (this.autoRangeIncludesZero != that.autoRangeIncludesZero) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1346,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1348,        if (this.autoRangeStickyZero != that.autoRangeStickyZero) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1349,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1351,"        if (!ObjectUtilities.equal(this.tickUnit, that.tickUnit)) {",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1352,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1354,"        if (!ObjectUtilities.equal(this.numberFormatOverride, ",0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1356,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1358,        if (!this.rangeType.equals(that.rangeType)) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1359,            return false;,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1361,        return true; ,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1370,        if (getLabel() != null) {,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1371,            return getLabel().hashCode();,0.0,0,-1,0
org/jfree/chart/axis/NumberAxis,23,1374,            return 0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,264,        super(label);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,266,        this.positiveArrowVisible = false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,267,        this.negativeArrowVisible = false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,269,        this.range = DEFAULT_RANGE;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,270,        this.autoRange = DEFAULT_AUTO_RANGE;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,271,        this.defaultAutoRange = DEFAULT_RANGE;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,273,        this.inverted = DEFAULT_INVERTED;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,274,        this.autoRangeMinimumSize = DEFAULT_AUTO_RANGE_MINIMUM_SIZE;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,276,        this.lowerMargin = DEFAULT_LOWER_MARGIN;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,277,        this.upperMargin = DEFAULT_UPPER_MARGIN;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,279,        this.fixedAutoRange = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,281,        this.autoTickUnitSelection = DEFAULT_AUTO_TICK_UNIT_SELECTION;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,282,        this.standardTickUnits = standardTickUnits;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,284,        Polygon p1 = new Polygon();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,285,"        p1.addPoint(0, 0);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,286,"        p1.addPoint(-2, 2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,287,"        p1.addPoint(2, 2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,289,        this.upArrow = p1;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,291,        Polygon p2 = new Polygon();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,292,"        p2.addPoint(0, 0);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,293,"        p2.addPoint(-2, -2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,294,"        p2.addPoint(2, -2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,296,        this.downArrow = p2;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,298,        Polygon p3 = new Polygon();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,299,"        p3.addPoint(0, 0);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,300,"        p3.addPoint(-2, -2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,301,"        p3.addPoint(-2, 2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,303,        this.rightArrow = p3;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,305,        Polygon p4 = new Polygon();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,306,"        p4.addPoint(0, 0);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,307,"        p4.addPoint(2, -2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,308,"        p4.addPoint(2, 2);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,310,        this.leftArrow = p4;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,312,        this.verticalTickLabels = false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,314,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,149,"    public static final Range DEFAULT_RANGE = new Range(0.0, 1.0);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,325,        return this.verticalTickLabels;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,339,        if (this.verticalTickLabels != flag) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,340,            this.verticalTickLabels = flag;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,341,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,343,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,354,        return this.positiveArrowVisible;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,367,        this.positiveArrowVisible = visible;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,368,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,369,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,380,        return this.negativeArrowVisible;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,393,        this.negativeArrowVisible = visible;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,394,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,395,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,406,        return this.upArrow;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,419,        if (arrow == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,420,"            throw new IllegalArgumentException(""Null 'arrow' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,422,        this.upArrow = arrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,423,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,424,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,435,        return this.downArrow;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,448,        if (arrow == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,449,"            throw new IllegalArgumentException(""Null 'arrow' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,451,        this.downArrow = arrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,452,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,453,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,464,        return this.leftArrow;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,477,        if (arrow == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,478,"            throw new IllegalArgumentException(""Null 'arrow' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,480,        this.leftArrow = arrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,481,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,482,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,493,        return this.rightArrow;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,506,        if (arrow == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,507,"            throw new IllegalArgumentException(""Null 'arrow' argument."");   ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,509,        this.rightArrow = arrow;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,510,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,511,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,523,        Line2D axisLine = null;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,524,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,525,"            axisLine = new Line2D.Double(dataArea.getX(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,528,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,529,"            axisLine = new Line2D.Double(dataArea.getX(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,532,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,533,"            axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,536,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,537,"            axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,540,        g2.setPaint(getAxisLinePaint());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,541,        g2.setStroke(getAxisLineStroke());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,542,        g2.draw(axisLine);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,544,        boolean drawUpOrRight = false;  ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,545,        boolean drawDownOrLeft = false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,546,        if (this.positiveArrowVisible) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,547,            if (this.inverted) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,548,                drawDownOrLeft = true;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,551,                drawUpOrRight = true;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,554,        if (this.negativeArrowVisible) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,555,            if (this.inverted) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,556,                drawUpOrRight = true;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,559,                drawDownOrLeft = true;   ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,562,        if (drawUpOrRight) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,563,            double x = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,564,            double y = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,565,            Shape arrow = null;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,566,            if (edge == RectangleEdge.TOP || edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,567,                x = dataArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,568,                y = cursor;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,569,                arrow = this.rightArrow; ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,571,            else if (edge == RectangleEdge.LEFT ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,573,                x = cursor;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,574,                y = dataArea.getMinY();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,575,                arrow = this.upArrow; ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,579,            AffineTransform transformer = new AffineTransform();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,580,"            transformer.setToTranslation(x, y);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,581,            Shape shape = transformer.createTransformedShape(arrow);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,582,            g2.fill(shape);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,583,            g2.draw(shape);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,586,        if (drawDownOrLeft) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,587,            double x = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,588,            double y = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,589,            Shape arrow = null;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,590,            if (edge == RectangleEdge.TOP || edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,591,                x = dataArea.getMinX();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,592,                y = cursor;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,593,                arrow = this.leftArrow; ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,595,            else if (edge == RectangleEdge.LEFT ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,597,                x = cursor;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,598,                y = dataArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,599,                arrow = this.downArrow; ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,603,            AffineTransform transformer = new AffineTransform();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,604,"            transformer.setToTranslation(x, y);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,605,            Shape shape = transformer.createTransformedShape(arrow);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,606,            g2.fill(shape);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,607,            g2.draw(shape);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,610,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,627,        RectangleInsets insets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,628,        float[] result = new float[2];,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,629,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,630,"            result[0] = (float) valueToJava2D(tick.getValue(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,631,            result[1] = (float) (cursor - insets.getBottom() - 2.0);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,633,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,634,"            result[0] = (float) valueToJava2D(tick.getValue(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,635,            result[1] = (float) (cursor + insets.getTop() + 2.0); ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,637,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,638,            result[0] = (float) (cursor - insets.getLeft() - 2.0);    ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,639,"            result[1] = (float) valueToJava2D(tick.getValue(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,641,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,642,            result[0] = (float) (cursor + insets.getRight() + 2.0);    ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,643,"            result[1] = (float) valueToJava2D(tick.getValue(), dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,645,        return result;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,664,        AxisState state = new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,666,        if (isAxisLineVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,667,"            drawAxisLine(g2, cursor, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,670,        double ol = getTickMarkOutsideLength();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,671,        double il = getTickMarkInsideLength();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,673,"        List ticks = refreshTicks(g2, state, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,674,        state.setTicks(ticks);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,675,        g2.setFont(getTickLabelFont());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,676,        Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,677,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,678,            ValueTick tick = (ValueTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,679,            if (isTickLabelsVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,680,                g2.setPaint(getTickLabelPaint());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,681,"                float[] anchorPoint = calculateAnchorPoint(tick, cursor, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,683,"                TextUtilities.drawRotatedString(tick.getText(), g2, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,688,            if (isTickMarksVisible() && tick.getTickType().equals(TickType.MAJOR)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,689,"                float xx = (float) valueToJava2D(tick.getValue(), dataArea, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,691,                Line2D mark = null;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,692,                g2.setStroke(getTickMarkStroke());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,693,                g2.setPaint(getTickMarkPaint());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,694,                if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,695,"                    mark = new Line2D.Double(cursor - ol, xx, cursor + il, xx);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,697,                else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,698,"                    mark = new Line2D.Double(cursor + ol, xx, cursor - il, xx);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,700,                else if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,701,"                    mark = new Line2D.Double(xx, cursor - ol, xx, cursor + il);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,703,                else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,704,"                    mark = new Line2D.Double(xx, cursor + ol, xx, cursor - il);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,706,                g2.draw(mark);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,708,        },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,712,        double used = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,713,        if (isTickLabelsVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,714,            if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,715,"                used += findMaximumTickLabelWidth(ticks, g2, plotArea, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,717,                state.cursorLeft(used);      ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,719,            else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,720,"                used = findMaximumTickLabelWidth(ticks, g2, plotArea, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,722,                state.cursorRight(used);      ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,724,            else if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,725,"                used = findMaximumTickLabelHeight(ticks, g2, plotArea, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,727,                state.cursorUp(used);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,729,            else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,730,"                used = findMaximumTickLabelHeight(ticks, g2, plotArea, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,732,                state.cursorDown(used);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,736,        return state;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,756,        if (space == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,757,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,761,        if (!isVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,762,            return space;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,766,        double dimension = getFixedDimension();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,767,        if (dimension > 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,768,"            space.ensureAtLeast(dimension, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,772,        double tickLabelHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,773,        double tickLabelWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,774,        if (isTickLabelsVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,775,            g2.setFont(getTickLabelFont());,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,776,"            List ticks = refreshTicks(g2, new AxisState(), plotArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,777,            if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,778,"                tickLabelHeight = findMaximumTickLabelHeight(ticks, g2, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,781,            else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,782,"                tickLabelWidth = findMaximumTickLabelWidth(ticks, g2, plotArea,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,788,"        Rectangle2D labelEnclosure = getLabelEnclosure(g2, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,789,        double labelHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,790,        double labelWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,791,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,792,            labelHeight = labelEnclosure.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,793,"            space.add(labelHeight + tickLabelHeight, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,795,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,796,            labelWidth = labelEnclosure.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,797,"            space.add(labelWidth + tickLabelWidth, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,800,        return space;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,820,        RectangleInsets insets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,821,        Font font = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,822,        double maxHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,823,        if (vertical) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,824,            FontMetrics fm = g2.getFontMetrics(font);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,825,            Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,826,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,827,                Tick tick = (Tick) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,828,                Rectangle2D labelBounds = TextUtilities.getTextBounds(,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,830,                if (labelBounds.getWidth() + insets.getTop() ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,832,                    maxHeight = labelBounds.getWidth() ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,835,            },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,836,        },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,838,"            LineMetrics metrics = font.getLineMetrics(""ABCxyz"", ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,840,            maxHeight = metrics.getHeight() ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,843,        return maxHeight;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,863,        RectangleInsets insets = getTickLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,864,        Font font = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,865,        double maxWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,866,        if (!vertical) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,867,            FontMetrics fm = g2.getFontMetrics(font);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,868,            Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,869,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,870,                Tick tick = (Tick) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,871,                Rectangle2D labelBounds = TextUtilities.getTextBounds(,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,873,                if (labelBounds.getWidth() + insets.getLeft() ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,875,                    maxWidth = labelBounds.getWidth() ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,878,            },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,879,        },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,881,"            LineMetrics metrics = font.getLineMetrics(""ABCxyz"", ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,883,            maxWidth = metrics.getHeight() ,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,886,        return maxWidth;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,902,        return this.inverted;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,915,        if (this.inverted != flag) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,916,            this.inverted = flag;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,917,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,920,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,931,        return this.autoRange;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,944,"        setAutoRange(auto, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,945,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,957,        if (this.autoRange != auto) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,958,            this.autoRange = auto;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,959,            if (this.autoRange) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,960,                autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,962,            if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,963,                notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,966,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,977,        return this.autoRangeMinimumSize;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,989,"        setAutoRangeMinimumSize(size, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,990,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1003,        if (size <= 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1004,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1007,        if (this.autoRangeMinimumSize != size) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1008,            this.autoRangeMinimumSize = size;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1009,            if (this.autoRange) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1010,                autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1012,            if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1013,                notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1017,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1029,        return this.defaultAutoRange;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1043,        if (range == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1044,"            throw new IllegalArgumentException(""Null 'range' argument."");",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1046,        this.defaultAutoRange = range;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1047,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1048,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1061,        return this.lowerMargin;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1076,        this.lowerMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1077,        if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1078,            autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1080,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1081,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1094,        return this.upperMargin;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1109,        this.upperMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1110,        if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1111,            autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1113,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1114,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1124,        return this.fixedAutoRange;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1135,        this.fixedAutoRange = length;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1136,        if (isAutoRange()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1137,            autoAdjustRange();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1139,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1140,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1150,        return this.range.getLowerBound();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1162,        if (this.range.getUpperBound() > min) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1163,"            setRange(new Range(min, this.range.getUpperBound()));            ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1166,"            setRange(new Range(min, min + 1.0));                        ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1168,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1178,        return this.range.getUpperBound();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1190,        if (this.range.getLowerBound() < max) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1191,"            setRange(new Range(this.range.getLowerBound(), max));",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1194,"            setRange(max - 1.0, max);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1196,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1206,        return this.range;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1220,"        setRange(range, true, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1221,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1238,        if (range == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1239,"            throw new IllegalArgumentException(""Null 'range' argument."");",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1241,        if (turnOffAutoRange) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1242,            this.autoRange = false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1244,        this.range = range;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1245,        if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1246,            notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1248,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1262,"        setRange(new Range(lower, upper));",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1263,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1273,"        setRangeWithMargins(range, true, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1274,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1291,        if (range == null) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1292,"            throw new IllegalArgumentException(""Null 'range' argument."");",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1294,"        setRange(Range.expand(range, getLowerMargin(), getUpperMargin()), ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1296,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1307,"        setRangeWithMargins(new Range(lower, upper));",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1308,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1318,"        setRange(new Range(value - length / 2, value + length / 2));",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1319,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1331,        return this.autoTickUnitSelection;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1344,"        setAutoTickUnitSelection(flag, true);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1345,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1358,        if (this.autoTickUnitSelection != flag) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1359,            this.autoTickUnitSelection = flag;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1360,            if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1361,                notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1364,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1374,        return this.standardTickUnits;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1390,        this.standardTickUnits = source;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1391,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1392,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1423,"        double zero = valueToJava2D(0.0, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1424,"        double l = valueToJava2D(length, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1425,        return Math.abs(l - zero);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1460,        double central = this.range.getCentralValue();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1461,"        Range adjusted = new Range(this.range.getLowerBound() + value - central,",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1463,        setRange(adjusted);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1465,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1480,"        resizeRange(percent, this.range.getCentralValue());",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1481,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1497,        if (percent > 0.0) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1498,            double halfLength = this.range.getLength() * percent / 2;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1499,"            Range adjusted = new Range(anchorValue - halfLength, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1501,            setRange(adjusted);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1502,        },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1504,            setAutoRange(true);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1506,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1515,        double start = this.range.getLowerBound();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1516,        double length = this.range.getLength();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1517,        Range adjusted = null;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1518,        if (isInverted()) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1519,"            adjusted = new Range(start + (length * (1 - upperPercent)), ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1523,"            adjusted = new Range(start + length * lowerPercent, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1526,        setRange(adjusted);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1527,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1537,        return this.autoTickIndex;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1548,        this.autoTickIndex = index;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1549,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1560,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1561,            return true;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1563,        if (!(obj instanceof ValueAxis)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1564,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1567,        ValueAxis that = (ValueAxis) obj;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1569,        if (this.positiveArrowVisible != that.positiveArrowVisible) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1570,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1572,        if (this.negativeArrowVisible != that.negativeArrowVisible) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1573,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1575,        if (this.inverted != that.inverted) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1576,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1578,"        if (!ObjectUtilities.equal(this.range, that.range)) {",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1579,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1581,        if (this.autoRange != that.autoRange) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1582,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1584,        if (this.autoRangeMinimumSize != that.autoRangeMinimumSize) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1585,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1587,        if (!this.defaultAutoRange.equals(that.defaultAutoRange)) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1588,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1590,        if (this.upperMargin != that.upperMargin) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1591,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1593,        if (this.lowerMargin != that.lowerMargin) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1594,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1596,        if (this.fixedAutoRange != that.fixedAutoRange) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1597,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1599,        if (this.autoTickUnitSelection != that.autoTickUnitSelection) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1600,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1602,"        if (!ObjectUtilities.equal(this.standardTickUnits, ",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1604,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1606,        if (this.verticalTickLabels != that.verticalTickLabels) {,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1607,            return false;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1610,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1623,        ValueAxis clone = (ValueAxis) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1624,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1635,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1636,"        SerialUtilities.writeShape(this.upArrow, stream);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1637,"        SerialUtilities.writeShape(this.downArrow, stream);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1638,"        SerialUtilities.writeShape(this.leftArrow, stream);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1639,"        SerialUtilities.writeShape(this.rightArrow, stream);",0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1640,    },0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1653,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1654,        this.upArrow = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1655,        this.downArrow = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1656,        this.leftArrow = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1657,        this.rightArrow = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/axis/ValueAxis,23,1659,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,111,"        this(area, null);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,112,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,122,"        this(area, toolTipText, null);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,123,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,133,"    public ChartEntity(Shape area, String toolTipText, String urlText) {",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,134,        if (area == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,135,"            throw new IllegalArgumentException(""Null 'area' argument."");   ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,137,        this.area = area;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,138,        this.toolTipText = toolTipText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,139,        this.urlText = urlText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,140,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,148,        return this.area;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,161,        if (area == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,162,"            throw new IllegalArgumentException(""Null 'area' argument."");   ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,164,        this.area = area;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,165,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,173,        return this.toolTipText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,182,        this.toolTipText = text;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,183,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,191,        return this.urlText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,200,        this.urlText = text;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,201,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,210,        if (this.area instanceof Rectangle2D) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,211,"            return ""rect"";",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,214,"            return ""poly"";",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,224,        if (this.area instanceof Rectangle2D) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,225,            return getRectCoords((Rectangle2D) this.area);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,228,            return getPolyCoords(this.area);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,241,        if (rectangle == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,242,"            throw new IllegalArgumentException(""Null 'rectangle' argument."");   ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,244,        int x1 = (int) rectangle.getX();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,245,        int y1 = (int) rectangle.getY();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,246,        int x2 = x1 + (int) rectangle.getWidth();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,247,        int y2 = y1 + (int) rectangle.getHeight();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,249,        if (x2 == x1) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,250,            x2++;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,252,        if (y2 == y1) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,253,            y2++;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,256,"        return x1 + "","" + y1 + "","" + x2 + "","" + y2;",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,268,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,269,"            throw new IllegalArgumentException(""Null 'shape' argument."");   ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,271,        StringBuffer result = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,272,        boolean first = true;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,273,        float[] coords = new float[6];,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,274,"        PathIterator pi = shape.getPathIterator(null, 1.0);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,275,        while (!pi.isDone()) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,276,            pi.currentSegment(coords);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,277,            if (first) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,278,                first = false;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,279,                result.append((int) coords[0]);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,280,"                result.append("","").append((int) coords[1]);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,283,"                result.append("","");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,284,                result.append((int) coords[0]);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,285,"                result.append("","");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,286,                result.append((int) coords[1]);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,288,            pi.next();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,290,        return result.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,310,        StringBuffer tag = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,311,        boolean hasURL = (this.urlText == null ? false ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,313,        boolean hasToolTip = (this.toolTipText == null ? false ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,315,        if (hasURL || hasToolTip) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,316,"            tag.append(""<area shape=\"""" + getShapeType() + ""\"""" + "" coords=\"""" ",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,318,            if (hasToolTip) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,319,                tag.append(toolTipTagFragmentGenerator.generateToolTipFragment(,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,322,            if (hasURL) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,323,                tag.append(urlTagFragmentGenerator.generateURLFragment(,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,328,            if (!hasToolTip) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,329,"                tag.append("" alt=\""\"""");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,331,"            tag.append(""/>"");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,333,        return tag.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,343,"        StringBuffer buf = new StringBuffer(""ChartEntity: "");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,344,"        buf.append(""tooltip = "");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,345,        buf.append(this.toolTipText);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,346,        return buf.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,357,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,358,            return true;   ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,360,        if (obj instanceof ChartEntity) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,361,            ChartEntity that = (ChartEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,362,            if (!this.area.equals(that.area)) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,363,                return false;   ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,365,"            if (!ObjectUtilities.equal(this.toolTipText, that.toolTipText)) {",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,366,                return false;   ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,368,"            if (!ObjectUtilities.equal(this.urlText, that.urlText)) {",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,369,                return false;   ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,371,            return true;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,373,        return false;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,385,        return super.clone();    ,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,396,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,397,"        SerialUtilities.writeShape(this.area, stream);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,398,     },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,410,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,411,        this.area = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,23,412,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,288,    protected Plot() {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,268,    private int backgroundImageAlignment = Align.FIT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,271,    private float backgroundImageAlpha = 0.5f;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,290,        this.parent = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,291,        this.insets = DEFAULT_INSETS;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,292,        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,293,        this.backgroundAlpha = DEFAULT_BACKGROUND_ALPHA;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,294,        this.backgroundImage = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,295,        this.outlineVisible = true;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,296,        this.outlineStroke = DEFAULT_OUTLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,297,        this.outlinePaint = DEFAULT_OUTLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,298,        this.foregroundAlpha = DEFAULT_FOREGROUND_ALPHA;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,300,        this.noDataMessage = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,301,"        this.noDataMessageFont = new Font(""SansSerif"", Font.PLAIN, 12);",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,302,        this.noDataMessagePaint = Color.black;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,304,        this.drawingSupplier = new DefaultDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,306,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,308,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,195,    public static final Number ZERO = new Integer(0);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,198,    public static final RectangleInsets DEFAULT_INSETS ,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,202,    public static final Stroke DEFAULT_OUTLINE_STROKE = new BasicStroke(0.5f);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,205,    public static final Paint DEFAULT_OUTLINE_PAINT = Color.gray;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,214,    public static final Paint DEFAULT_BACKGROUND_PAINT = Color.LIGHT_GRAY;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,223,    public static final Shape DEFAULT_LEGEND_ITEM_BOX ,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,227,    public static final Shape DEFAULT_LEGEND_ITEM_CIRCLE ,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,318,        return this.datasetGroup;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,329,        this.datasetGroup = group;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,330,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,343,        return this.noDataMessage;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,356,        this.noDataMessage = message;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,357,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,358,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,369,        return this.noDataMessageFont;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,381,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,382,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,384,        this.noDataMessageFont = font;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,385,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,386,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,397,        return this.noDataMessagePaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,409,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,410,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,412,        this.noDataMessagePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,413,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,414,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,437,        return this.parent;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,449,        this.parent = parent;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,450,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,461,        Plot p = getParent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,462,        if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,463,            return this;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,466,            return p.getRootPlot();,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,482,        return (getParent() != null);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,493,        return this.insets;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,506,"        setInsets(insets, true);",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,507,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,521,        if (insets == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,522,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,524,        if (!this.insets.equals(insets)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,525,            this.insets = insets;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,526,            if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,527,                notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,531,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,541,        return this.backgroundPaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,554,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,555,            if (this.backgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,556,                this.backgroundPaint = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,557,                notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,561,            if (this.backgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,562,                if (this.backgroundPaint.equals(paint)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,563,                    return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,566,            this.backgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,567,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,570,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,580,        return this.backgroundAlpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,592,        if (this.backgroundAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,593,            this.backgroundAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,594,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,596,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,606,        DrawingSupplier result = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,607,        Plot p = getParent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,608,        if (p != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,609,            result = p.getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,612,            result = this.drawingSupplier;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,614,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,628,        this.drawingSupplier = supplier;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,629,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,630,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,641,        return this.backgroundImage;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,653,        this.backgroundImage = image;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,654,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,655,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,666,        return this.backgroundImageAlignment;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,679,        if (this.backgroundImageAlignment != alignment) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,680,            this.backgroundImageAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,681,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,683,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,695,        return this.backgroundImageAlpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,710,        if (alpha < 0.0f || alpha > 1.0f),0.0,0,-1,0
org/jfree/chart/plot/Plot,23,711,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,713,        if (this.backgroundImageAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,714,            this.backgroundImageAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,715,            this.notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,717,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,733,        return this.outlineVisible;    ,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,747,        this.outlineVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,748,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,749,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,759,        return this.outlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,772,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,773,            if (this.outlineStroke != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,774,                this.outlineStroke = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,775,                notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,779,            if (this.outlineStroke != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,780,                if (this.outlineStroke.equals(stroke)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,781,                    return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,784,            this.outlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,785,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,787,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,797,        return this.outlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,810,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,811,            if (this.outlinePaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,812,                this.outlinePaint = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,813,                notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,817,            if (this.outlinePaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,818,                if (this.outlinePaint.equals(paint)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,819,                    return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,822,            this.outlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,823,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,825,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,835,        return this.foregroundAlpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,847,        if (this.foregroundAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,848,            this.foregroundAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,849,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,851,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,861,        return null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,872,"        this.listenerList.add(PlotChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,873,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,883,"        this.listenerList.remove(PlotChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,884,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,892,        Object[] listeners = this.listenerList.getListenerList();,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,893,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,894,            if (listeners[i] == PlotChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,895,                ((PlotChangeListener) listeners[i + 1]).plotChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,898,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,933,"        fillBackground(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,934,"        drawBackgroundImage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,935,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,948,"        fillBackground(g2, area, PlotOrientation.VERTICAL);",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,949,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,965,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,966,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,968,        if (this.backgroundPaint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,969,            return;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,971,        Paint p = this.backgroundPaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,972,        if (p instanceof GradientPaint) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,973,            GradientPaint gp = (GradientPaint) p;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,974,            if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,975,"                p = new GradientPaint((float) area.getCenterX(), ",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,980,            else if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,981,"                p = new GradientPaint((float) area.getMinX(), ",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,987,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,988,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,990,        g2.setPaint(p);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,991,        g2.fill(area);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,992,        g2.setComposite(originalComposite);        ,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,993,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1007,        if (this.backgroundImage != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1008,            Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1009,"            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, ",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1011,"            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1014,"            Align.align(dest, area, this.backgroundImageAlignment);",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1015,"            g2.drawImage(this.backgroundImage, (int) dest.getX(), ",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1018,            g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1020,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1032,        if (!this.outlineVisible) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1033,            return;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1035,        if ((this.outlineStroke != null) && (this.outlinePaint != null)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1036,            g2.setStroke(this.outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1037,            g2.setPaint(this.outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1038,            g2.draw(area);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1040,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1049,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1050,        g2.clip(area);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1051,        String message = this.noDataMessage;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1052,        if (message != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1053,            g2.setFont(this.noDataMessageFont);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1054,            g2.setPaint(this.noDataMessagePaint);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1055,            TextBlock block = TextUtilities.createTextBlock(,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1059,"            block.draw(g2, (float) area.getCenterX(), (float) area.getCenterY(), ",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1062,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1063,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1077,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1087,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1095,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1096,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1107,        PlotChangeEvent newEvent = new PlotChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1108,        newEvent.setType(ChartChangeEventType.DATASET_UPDATED);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1109,        notifyListeners(newEvent);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1110,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1121,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1122,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1137,        double result = x;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1138,        if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1139,            result = result + w1;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1141,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1142,            result = result + w2;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1144,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1161,        double result = y;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1162,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1163,            result = result + h1;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1165,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1166,            result = result + h2;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1168,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1180,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1181,            return true;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1183,        if (!(obj instanceof Plot)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1184,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1186,        Plot that = (Plot) obj;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1187,"        if (!ObjectUtilities.equal(this.noDataMessage, that.noDataMessage)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1188,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1190,        if (!ObjectUtilities.equal(,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1193,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1195,"        if (!PaintUtilities.equal(this.noDataMessagePaint, ",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1197,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1199,"        if (!ObjectUtilities.equal(this.insets, that.insets)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1200,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1202,        if (this.outlineVisible != that.outlineVisible) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1203,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1205,"        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1206,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1208,"        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1209,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1211,"        if (!PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1212,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1214,"        if (!ObjectUtilities.equal(this.backgroundImage, ",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1216,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1218,        if (this.backgroundImageAlignment != that.backgroundImageAlignment) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1219,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1221,        if (this.backgroundImageAlpha != that.backgroundImageAlpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1222,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1224,        if (this.foregroundAlpha != that.foregroundAlpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1225,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1227,        if (this.backgroundAlpha != that.backgroundAlpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1228,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1230,        if (!this.drawingSupplier.equals(that.drawingSupplier)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1231,            return false;   ,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1233,        return true;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1246,        Plot clone = (Plot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1249,        if (this.datasetGroup != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1250,            clone.datasetGroup ,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1253,        clone.drawingSupplier ,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1255,        clone.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1256,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1268,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1269,"        SerialUtilities.writePaint(this.noDataMessagePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1270,"        SerialUtilities.writeStroke(this.outlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1271,"        SerialUtilities.writePaint(this.outlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1273,"        SerialUtilities.writePaint(this.backgroundPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1274,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1286,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1287,        this.noDataMessagePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1288,        this.outlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1289,        this.outlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1291,        this.backgroundPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1293,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1295,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1308,        if (location == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1309,"            throw new IllegalArgumentException(""Null 'location' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1311,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1312,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1315,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1317,        if (location == AxisLocation.TOP_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1318,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1319,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1321,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1322,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1325,        else if (location == AxisLocation.TOP_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1326,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1327,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1329,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1330,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1333,        else if (location == AxisLocation.BOTTOM_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1334,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1335,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1337,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1338,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1341,        else if (location == AxisLocation.BOTTOM_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1342,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1343,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1345,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1346,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1350,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1351,"            throw new IllegalStateException(""resolveDomainAxisLocation()"");",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1353,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1368,        if (location == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1369,"            throw new IllegalArgumentException(""Null 'location' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1371,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1372,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1375,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1377,        if (location == AxisLocation.TOP_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1378,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1379,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1381,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1382,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1385,        else if (location == AxisLocation.TOP_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1386,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1387,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1389,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1390,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1393,        else if (location == AxisLocation.BOTTOM_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1394,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1395,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1397,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1398,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1401,        else if (location == AxisLocation.BOTTOM_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1402,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1403,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1405,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1406,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1411,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1412,"            throw new IllegalStateException(""resolveRangeAxisLocation()"");",0.0,0,-1,0
org/jfree/chart/plot/Plot,23,1414,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,422,"        this(null, null, null, null);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,423,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,439,        super();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,318,    private DatasetRenderingOrder renderingOrder ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,325,    private SortOrder columnRenderingOrder = SortOrder.ASCENDING;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,331,    private SortOrder rowRenderingOrder = SortOrder.ASCENDING;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,379,    private boolean rangeCrosshairLockedOnData = true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,441,        this.orientation = PlotOrientation.VERTICAL;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,444,        this.domainAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,445,        this.domainAxisLocations = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,446,        this.rangeAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,447,        this.rangeAxisLocations = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,449,        this.datasetToDomainAxisMap = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,450,        this.datasetToRangeAxisMap = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,452,        this.renderers = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,454,        this.datasets = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,455,"        this.datasets.set(0, dataset);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,456,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,457,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,460,"        this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,462,"        setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,463,"        setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,465,"        this.renderers.set(0, renderer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,466,        if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,467,            renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,468,            renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,471,"        this.domainAxes.set(0, domainAxis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,472,"        this.mapDatasetToDomainAxis(0, 0);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,473,        if (domainAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,474,            domainAxis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,475,            domainAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,477,        this.drawSharedDomainAxis = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,479,"        this.rangeAxes.set(0, rangeAxis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,480,"        this.mapDatasetToRangeAxis(0, 0);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,481,        if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,482,            rangeAxis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,483,            rangeAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,486,        configureDomainAxes();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,487,        configureRangeAxes();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,489,        this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,490,        this.domainGridlinePosition = CategoryAnchor.MIDDLE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,491,        this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,492,        this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,494,        this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,495,        this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,496,        this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,498,        this.foregroundDomainMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,499,        this.backgroundDomainMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,500,        this.foregroundRangeMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,501,        this.backgroundRangeMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,503,"        Marker baseline = new ValueMarker(0.0, new Color(0.8f, 0.8f, 0.8f, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,506,"        addRangeMarker(baseline, Layer.BACKGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,508,        this.anchorValue = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,510,        this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,511,        this.rangeCrosshairValue = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,512,        this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,513,        this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,515,        this.annotations = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,517,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,243,"    public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,248,    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,251,"    public static final Font DEFAULT_VALUE_LABEL_FONT = new Font(""SansSerif"", ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,266,    public static final Stroke DEFAULT_CROSSHAIR_STROKE,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,274,    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,277,    protected static ResourceBundle localizationResources ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,525,"        return localizationResources.getString(""Category_Plot"");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,536,        return this.orientation;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,548,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,549,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,551,        this.orientation = orientation;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,552,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,553,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,563,        return this.axisOffset;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,575,        if (offset == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,576,"            throw new IllegalArgumentException(""Null 'offset' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,578,        this.axisOffset = offset;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,579,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,580,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,592,        return getDomainAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,605,        CategoryAxis result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,606,        if (index < this.domainAxes.size()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,607,            result = (CategoryAxis) this.domainAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,609,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,610,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,611,            if (parent instanceof CategoryPlot) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,612,                CategoryPlot cp = (CategoryPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,613,                result = cp.getDomainAxis(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,616,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,628,"        setDomainAxis(0, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,629,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,641,"        setDomainAxis(index, axis, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,642,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,653,        CategoryAxis existing = (CategoryAxis) this.domainAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,654,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,655,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,657,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,658,            axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,660,"        this.domainAxes.set(index, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,661,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,662,            axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,663,            axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,665,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,666,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,668,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,679,        for (int i = 0; i < axes.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,680,"            setDomainAxis(i, axes[i], false);   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,682,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,683,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,696,        return this.domainAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,707,        return getDomainAxisLocation(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,720,        AxisLocation result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,721,        if (index < this.domainAxisLocations.size()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,722,            result = (AxisLocation) this.domainAxisLocations.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,724,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,725,            result = AxisLocation.getOpposite(getDomainAxisLocation(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,727,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,741,"        setDomainAxisLocation(0, location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,742,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,753,"        setDomainAxisLocation(0, location, notify);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,754,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,768,"        setDomainAxisLocation(index, location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,769,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,786,        if (index == 0 && location == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,787,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,790,"        this.domainAxisLocations.set(index, location);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,791,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,792,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,794,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,803,        return getDomainAxisEdge(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,814,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,815,        AxisLocation location = getDomainAxisLocation(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,816,        if (location != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,817,"            result = Plot.resolveDomainAxisLocation(location, this.orientation);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,820,            result = RectangleEdge.opposite(getDomainAxisEdge(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,822,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,831,        return this.domainAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,839,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,840,            CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,841,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,842,                axis.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,845,        this.domainAxes.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,846,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,847,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,853,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,854,            CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,855,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,856,                axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,859,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,869,        return getRangeAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,880,        ValueAxis result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,881,        if (index < this.rangeAxes.size()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,882,            result = (ValueAxis) this.rangeAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,884,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,885,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,886,            if (parent instanceof CategoryPlot) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,887,                CategoryPlot cp = (CategoryPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,888,                result = cp.getRangeAxis(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,891,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,901,"        setRangeAxis(0, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,902,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,912,"        setRangeAxis(index, axis, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,913,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,924,        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,925,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,926,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,928,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,929,            axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,931,"        this.rangeAxes.set(index, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,932,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,933,            axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,934,            axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,936,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,937,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,939,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,950,        for (int i = 0; i < axes.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,951,"            setRangeAxis(i, axes[i], false);   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,953,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,954,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,969,        int result = this.rangeAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,970,        if (result < 0) { // try the parent plot,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,971,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,972,            if (parent instanceof CategoryPlot) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,973,                CategoryPlot p = (CategoryPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,974,                result = p.getRangeAxisIndex(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,977,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,986,        return getRangeAxisLocation(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,999,        AxisLocation result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1000,        if (index < this.rangeAxisLocations.size()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1001,            result = (AxisLocation) this.rangeAxisLocations.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1003,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1004,            result = AxisLocation.getOpposite(getRangeAxisLocation(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1006,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1020,"        setRangeAxisLocation(location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1021,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1033,"        setRangeAxisLocation(0, location, notify);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1034,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1047,"        setRangeAxisLocation(index, location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1048,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1063,        if (index == 0 && location == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1064,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1067,"        this.rangeAxisLocations.set(index, location);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1068,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1069,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1071,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1079,        return getRangeAxisEdge(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1090,        AxisLocation location = getRangeAxisLocation(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1091,"        RectangleEdge result = Plot.resolveRangeAxisLocation(location, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1093,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1094,            result = RectangleEdge.opposite(getRangeAxisEdge(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1096,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1105,        return this.rangeAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1113,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1114,            ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1115,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1116,                axis.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1119,        this.rangeAxes.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1120,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1121,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1127,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1128,            ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1129,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1130,                axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1133,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1143,        return getDataset(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1156,        CategoryDataset result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1157,        if (this.datasets.size() > index) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1158,            result = (CategoryDataset) this.datasets.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1160,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1175,"        setDataset(0, dataset);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1176,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1188,        CategoryDataset existing = (CategoryDataset) this.datasets.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1189,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1190,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1192,"        this.datasets.set(index, dataset);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1193,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1194,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1198,"        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1199,        datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1201,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1211,        return this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1223,"        this.datasetToDomainAxisMap.set(index, new Integer(axisIndex));  ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1225,"        datasetChanged(new DatasetChangeEvent(this, getDataset(index)));  ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1226,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1239,        CategoryAxis result = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1240,        Integer axisIndex = (Integer) this.datasetToDomainAxisMap.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1241,        if (axisIndex != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1242,            result = getDomainAxis(axisIndex.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1244,        return result;    ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1256,"        this.datasetToRangeAxisMap.set(index, new Integer(axisIndex));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1258,"        datasetChanged(new DatasetChangeEvent(this, getDataset(index)));  ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1259,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1272,        ValueAxis result = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1273,        Integer axisIndex = (Integer) this.datasetToRangeAxisMap.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1274,        if (axisIndex != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1275,            result = getRangeAxis(axisIndex.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1277,        return result;    ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1288,        return getRenderer(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1301,        CategoryItemRenderer result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1302,        if (this.renderers.size() > index) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1303,            result = (CategoryItemRenderer) this.renderers.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1305,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1318,"        setRenderer(0, renderer, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1319,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1339,"        setRenderer(0, renderer, notify);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1340,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1353,"        setRenderer(index, renderer, true);   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1354,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1370,        CategoryItemRenderer existing ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1372,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1373,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1377,"        this.renderers.set(index, renderer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1378,        if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1379,            renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1380,            renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1383,        configureDomainAxes();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1384,        configureRangeAxes();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1386,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1387,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1389,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1398,        for (int i = 0; i < renderers.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1399,"            setRenderer(i, renderers[i], false);   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1401,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1402,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1413,        CategoryItemRenderer result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1414,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1415,            if (this.datasets.get(i) == dataset) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1416,                result = (CategoryItemRenderer) this.renderers.get(i);   ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1417,                break;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1420,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1432,        return this.renderers.indexOf(renderer);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1443,        return this.renderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1457,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1458,"            throw new IllegalArgumentException(""Null 'order' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1460,        this.renderingOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1461,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1462,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1473,        return this.columnRenderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1488,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1489,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1491,        this.columnRenderingOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1492,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1493,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1504,        return this.rowRenderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1519,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1520,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1522,        this.rowRenderingOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1523,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1524,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1534,        return this.domainGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1549,        if (this.domainGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1550,            this.domainGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1551,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1553,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1563,        return this.domainGridlinePosition;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1575,        if (position == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1576,"            throw new IllegalArgumentException(""Null 'position' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1578,        this.domainGridlinePosition = position;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1579,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1580,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1590,        return this.domainGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1602,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1603,"            throw new IllegalArgumentException(""Null 'stroke' not permitted."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1605,        this.domainGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1606,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1607,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1617,        return this.domainGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1629,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1630,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1632,        this.domainGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1633,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1634,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1644,        return this.rangeGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1657,        if (this.rangeGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1658,            this.rangeGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1659,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1661,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1671,        return this.rangeGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1683,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1684,"            throw new IllegalArgumentException(""Null 'stroke' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1686,        this.rangeGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1687,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1688,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1698,        return this.rangeGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1710,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1711,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1713,        this.rangeGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1714,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1715,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1725,        return this.fixedLegendItems;   ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1738,        this.fixedLegendItems = items;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1739,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1740,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1750,        LegendItemCollection result = this.fixedLegendItems;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1751,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1752,            result = new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1754,            int count = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1755,            for (int datasetIndex = 0; datasetIndex < count; datasetIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1756,                CategoryDataset dataset = getDataset(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1757,                if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1758,                    CategoryItemRenderer renderer = getRenderer(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1759,                    if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1760,                        int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1761,                        for (int i = 0; i < seriesCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1762,                            LegendItem item = renderer.getLegendItem(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1764,                            if (item != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1765,                                result.add(item);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1772,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1785,        Rectangle2D dataArea = info.getDataArea();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1786,"        if (dataArea.contains(x, y)) {",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1788,            double java2D = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1789,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1790,                java2D = x;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1792,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1793,                java2D = y;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1795,            RectangleEdge edge = Plot.resolveRangeAxisLocation(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1797,            double value = getRangeAxis().java2DToValue(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1799,            setAnchorValue(value);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1800,            setRangeCrosshairValue(value);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1803,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1816,        if (percent > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1817,            double range = getRangeAxis().getRange().getLength();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1818,            double scaledRange = range * percent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1819,"            getRangeAxis().setRange(this.anchorValue - scaledRange / 2.0,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1821,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1823,            getRangeAxis().setAutoRange(true);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1826,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1837,        int count = this.rangeAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1838,        for (int axisIndex = 0; axisIndex < count; axisIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1839,            ValueAxis yAxis = getRangeAxis(axisIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1840,            if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1841,                yAxis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1844,        if (getParent() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1845,            getParent().datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1848,            PlotChangeEvent e = new PlotChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1849,            e.setType(ChartChangeEventType.DATASET_UPDATED);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1850,            notifyListeners(e);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1853,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1861,        Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1862,        if (parent != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1863,            if (parent instanceof RendererChangeListener) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1864,                RendererChangeListener rcl = (RendererChangeListener) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1865,                rcl.rendererChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1866,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1870,                throw new RuntimeException(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1875,            configureRangeAxes();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1876,            PlotChangeEvent e = new PlotChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1877,            notifyListeners(e);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1879,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1890,"        addDomainMarker(marker, Layer.FOREGROUND); ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1891,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1904,"        addDomainMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1905,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1918,        if (marker == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1919,"            throw new IllegalArgumentException(""Null 'marker' not permitted."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1921,        if (layer == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1922,"            throw new IllegalArgumentException(""Null 'layer' not permitted."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1925,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1926,            markers = (Collection) this.foregroundDomainMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1928,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1929,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1930,"                this.foregroundDomainMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1932,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1934,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1935,            markers = (Collection) this.backgroundDomainMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1937,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1938,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1939,"                this.backgroundDomainMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1941,            markers.add(marker);            ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1943,        marker.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1944,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1945,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1954,        if (this.backgroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1955,            Set keys = this.backgroundDomainMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1956,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1957,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1958,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1959,                clearDomainMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1960,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1961,            this.backgroundDomainMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1963,        if (this.foregroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1964,            Set keys = this.foregroundDomainMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1965,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1966,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1967,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1968,                clearDomainMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1969,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1970,            this.foregroundDomainMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1972,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1973,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1983,"        return getDomainMarkers(0, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1996,        Collection result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1997,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1998,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,1999,            result = (Collection) this.foregroundDomainMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2001,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2002,            result = (Collection) this.backgroundDomainMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2004,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2005,            result = Collections.unmodifiableCollection(result);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2007,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2018,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2019,        if (this.backgroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2020,            Collection markers ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2022,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2023,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2024,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2025,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2026,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2027,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2028,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2031,        if (this.foregroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2032,            Collection markers ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2034,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2035,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2036,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2037,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2038,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2039,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2040,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2043,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2044,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2055,"        addRangeMarker(marker, Layer.FOREGROUND); ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2056,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2069,"        addRangeMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2070,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2084,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2085,            markers = (Collection) this.foregroundRangeMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2087,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2088,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2089,"                this.foregroundRangeMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2091,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2093,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2094,            markers = (Collection) this.backgroundRangeMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2096,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2097,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2098,"                this.backgroundRangeMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2100,            markers.add(marker);            ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2102,        marker.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2103,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2104,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2113,        if (this.backgroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2114,            Set keys = this.backgroundRangeMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2115,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2116,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2117,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2118,                clearRangeMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2119,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2120,            this.backgroundRangeMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2122,        if (this.foregroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2123,            Set keys = this.foregroundRangeMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2124,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2125,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2126,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2127,                clearRangeMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2128,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2129,            this.foregroundRangeMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2131,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2132,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2144,"        return getRangeMarkers(0, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2157,        Collection result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2158,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2159,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2160,            result = (Collection) this.foregroundRangeMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2162,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2163,            result = (Collection) this.backgroundRangeMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2165,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2166,            result = Collections.unmodifiableCollection(result);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2168,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2179,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2180,        if (this.backgroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2181,            Collection markers ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2183,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2184,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2185,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2186,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2187,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2188,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2189,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2192,        if (this.foregroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2193,            Collection markers ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2195,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2196,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2197,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2198,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2199,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2200,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2201,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2204,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2205,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2215,        return this.rangeCrosshairVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2226,        if (this.rangeCrosshairVisible != flag) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2227,            this.rangeCrosshairVisible = flag;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2228,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2230,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2241,        return this.rangeCrosshairLockedOnData;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2254,        if (this.rangeCrosshairLockedOnData != flag) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2255,            this.rangeCrosshairLockedOnData = flag;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2256,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2259,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2269,        return this.rangeCrosshairValue;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2283,"        setRangeCrosshairValue(value, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2284,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2298,        this.rangeCrosshairValue = value;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2299,        if (isRangeCrosshairVisible() && notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2300,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2302,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2315,        return this.rangeCrosshairStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2329,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2330,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2332,        this.rangeCrosshairStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2333,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2334,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2346,        return this.rangeCrosshairPaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2358,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2359,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2361,        this.rangeCrosshairPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2362,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2363,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2371,        return this.annotations;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2383,        if (annotation == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2384,"            throw new IllegalArgumentException(""Null 'annotation' argument."");   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2386,        this.annotations.add(annotation);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2387,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2388,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2401,        if (annotation == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2402,"            throw new IllegalArgumentException(""Null 'annotation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2404,        boolean removed = this.annotations.remove(annotation);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2405,        if (removed) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2406,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2408,        return removed;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2416,        this.annotations.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2417,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2418,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2433,        if (space == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2434,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2438,        if (this.fixedDomainAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2439,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2440,                space.ensureAtLeast(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2442,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getRight(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2445,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2446,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getTop(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2448,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getBottom(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2454,            RectangleEdge domainEdge = Plot.resolveDomainAxisLocation(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2456,            if (this.drawSharedDomainAxis) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2457,"                space = getDomainAxis().reserveSpace(g2, this, plotArea, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2462,            for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2463,                Axis xAxis = (Axis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2464,                if (xAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2465,                    RectangleEdge edge = getDomainAxisEdge(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2466,"                    space = xAxis.reserveSpace(g2, this, plotArea, edge, space);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2471,        return space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2488,        if (space == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2489,            space = new AxisSpace(); ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2493,        if (this.fixedRangeAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2494,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2495,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getTop(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2497,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getBottom(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2500,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2501,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getLeft(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2503,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getRight(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2509,            for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2510,                Axis yAxis = (Axis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2511,                if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2512,                    RectangleEdge edge = getRangeAxisEdge(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2513,"                    space = yAxis.reserveSpace(g2, this, plotArea, edge, space);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2517,        return space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2531,        AxisSpace space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2532,"        space = calculateRangeAxisSpace(g2, plotArea, space);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2533,"        space = calculateDomainAxisSpace(g2, plotArea, space);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2534,        return space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2559,        boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2560,        boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2561,        if (b1 || b2) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2562,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2566,        if (state == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2570,            state = new PlotRenderingInfo(null);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2572,        state.setPlotArea(area);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2575,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2576,        insets.trim(area);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2579,"        AxisSpace space = calculateAxisSpace(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2580,"        Rectangle2D dataArea = space.shrink(area, null);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2581,        this.axisOffset.trim(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2583,        state.setDataArea(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2587,        if (getRenderer() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2588,"            getRenderer().drawBackground(g2, this, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2591,"            drawBackground(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2594,"        Map axisStateMap = drawAxes(g2, area, dataArea, state);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2597,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2598,        g2.clip(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2600,"        drawDomainGridlines(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2602,        AxisState rangeAxisState = (AxisState) axisStateMap.get(getRangeAxis());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2603,        if (rangeAxisState == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2604,            if (parentState != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2605,                rangeAxisState = (AxisState) parentState.getSharedAxisStates(),0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2609,        if (rangeAxisState != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2610,"            drawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2614,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2615,"            drawDomainMarkers(g2, dataArea, i, Layer.BACKGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2617,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2618,"            drawRangeMarkers(g2, dataArea, i, Layer.BACKGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2622,        boolean foundData = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2625,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2626,        g2.setComposite(AlphaComposite.getInstance(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2629,        DatasetRenderingOrder order = getDatasetRenderingOrder();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2630,        if (order == DatasetRenderingOrder.FORWARD) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2633,            int datasetCount = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2634,            for (int i = 0; i < datasetCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2635,                CategoryItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2636,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2637,                    CategoryAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2638,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2639,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2644,            for (int i = 0; i < datasetCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2645,"                foundData = render(g2, dataArea, i, state) || foundData;",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2649,            for (int i = 0; i < datasetCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2650,                CategoryItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2651,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2652,                    CategoryAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2653,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2654,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2658,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2662,            int datasetCount = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2663,            for (int i = datasetCount - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2664,                CategoryItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2665,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2666,                    CategoryAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2667,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2668,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2673,            for (int i = this.datasets.size() - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2674,"                foundData = render(g2, dataArea, i, state) || foundData;   ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2678,            for (int i = datasetCount - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2679,                CategoryItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2680,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2681,                    CategoryAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2682,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2683,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2690,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2691,"            drawDomainMarkers(g2, dataArea, i, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2693,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2694,"            drawRangeMarkers(g2, dataArea, i, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2698,"        drawAnnotations(g2, dataArea, state);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2700,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2701,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2703,        if (!foundData) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2704,"            drawNoDataMessage(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2708,        if (isRangeCrosshairVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2710,"            drawRangeCrosshair(g2, dataArea, getOrientation(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2716,        if (getRenderer() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2717,"            getRenderer().drawOutline(g2, this, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2720,"            drawOutline(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2723,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2736,"        fillBackground(g2, area, this.orientation);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2737,"        drawBackgroundImage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2738,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2756,        AxisCollection axisCollection = new AxisCollection();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2759,        for (int index = 0; index < this.domainAxes.size(); index++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2760,            CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2761,            if (xAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2762,"                axisCollection.add(xAxis, getDomainAxisEdge(index));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2767,        for (int index = 0; index < this.rangeAxes.size(); index++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2768,            ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2769,            if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2770,"                axisCollection.add(yAxis, getRangeAxisEdge(index));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2774,        Map axisStateMap = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2777,        double cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2779,        Iterator iterator = axisCollection.getAxesAtTop().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2780,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2781,            Axis axis = (Axis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2782,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2783,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2785,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2786,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2788,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2791,        cursor = dataArea.getMaxY() ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2793,        iterator = axisCollection.getAxesAtBottom().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2794,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2795,            Axis axis = (Axis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2796,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2797,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2799,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2800,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2802,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2805,        cursor = dataArea.getMinX() ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2807,        iterator = axisCollection.getAxesAtLeft().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2808,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2809,            Axis axis = (Axis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2810,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2811,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2813,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2814,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2816,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2819,        cursor = dataArea.getMaxX() ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2821,        iterator = axisCollection.getAxesAtRight().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2822,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2823,            Axis axis = (Axis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2824,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2825,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2827,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2828,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2830,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2832,        return axisStateMap;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2850,        boolean foundData = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2851,        CategoryDataset currentDataset = getDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2852,        CategoryItemRenderer renderer = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2853,        CategoryAxis domainAxis = getDomainAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2854,        ValueAxis rangeAxis = getRangeAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2855,        boolean hasData = !DatasetUtilities.isEmptyOrNull(currentDataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2856,        if (hasData && renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2858,            foundData = true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2859,"            CategoryItemRendererState state = renderer.initialise(g2, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2861,            int columnCount = currentDataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2862,            int rowCount = currentDataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2863,            int passCount = renderer.getPassCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2864,            for (int pass = 0; pass < passCount; pass++) {            ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2865,                if (this.columnRenderingOrder == SortOrder.ASCENDING) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2866,                    for (int column = 0; column < columnCount; column++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2867,                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2868,                            for (int row = 0; row < rowCount; row++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2869,"                                renderer.drawItem(g2, state, dataArea, this, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2875,                            for (int row = rowCount - 1; row >= 0; row--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2876,"                                renderer.drawItem(g2, state, dataArea, this, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2884,                    for (int column = columnCount - 1; column >= 0; column--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2885,                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2886,                            for (int row = 0; row < rowCount; row++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2887,"                                renderer.drawItem(g2, state, dataArea, this, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2893,                            for (int row = rowCount - 1; row >= 0; row--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2894,"                                renderer.drawItem(g2, state, dataArea, this, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2903,        return foundData;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2918,        if (isDomainGridlinesVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2919,            CategoryAnchor anchor = getDomainGridlinePosition();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2920,            RectangleEdge domainAxisEdge = getDomainAxisEdge();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2921,            Stroke gridStroke = getDomainGridlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2922,            Paint gridPaint = getDomainGridlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2923,            if ((gridStroke != null) && (gridPaint != null)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2925,                CategoryDataset data = getDataset();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2926,                if (data != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2927,                    CategoryAxis axis = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2928,                    if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2929,                        int columnCount = data.getColumnCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2930,                        for (int c = 0; c < columnCount; c++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2931,                            double xx = axis.getCategoryJava2DCoordinate(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2934,                            CategoryItemRenderer renderer1 = getRenderer();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2935,                            if (renderer1 != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2936,"                                renderer1.drawDomainGridline(g2, this, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2944,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2958,        if (isRangeGridlinesVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2959,            Stroke gridStroke = getRangeGridlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2960,            Paint gridPaint = getRangeGridlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2961,            if ((gridStroke != null) && (gridPaint != null)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2962,                ValueAxis axis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2963,                if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2964,                    Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2965,                    while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2966,                        ValueTick tick = (ValueTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2967,                        CategoryItemRenderer renderer1 = getRenderer();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2968,                        if (renderer1 != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2969,"                            renderer1.drawRangeGridline(g2, this, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2972,                    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2976,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2988,        Iterator iterator = getAnnotations().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2989,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2990,            CategoryAnnotation annotation ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2992,"            annotation.draw(g2, this, dataArea, getDomainAxis(), ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2994,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,2996,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3012,        CategoryItemRenderer r = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3013,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3014,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3017,"        Collection markers = getDomainMarkers(index, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3018,        CategoryAxis axis = getDomainAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3019,        if (markers != null && axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3020,            Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3021,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3022,                CategoryMarker marker = (CategoryMarker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3023,"                r.drawDomainMarker(g2, this, axis, marker, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3024,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3027,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3043,        CategoryItemRenderer r = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3044,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3045,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3048,"        Collection markers = getRangeMarkers(index, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3049,        ValueAxis axis = getRangeAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3050,        if (markers != null && axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3051,            Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3052,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3053,                Marker marker = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3054,"                r.drawRangeMarker(g2, this, axis, marker, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3055,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3058,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3073,"        double java2D = getRangeAxis().valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3075,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3076,        if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3077,"            line = new Line2D.Double(java2D, dataArea.getMinY(), java2D, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3080,        else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3081,"            line = new Line2D.Double(dataArea.getMinX(), java2D, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3084,        g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3085,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3086,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3088,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3107,        if (!axis.getRange().contains(value)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3108,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3110,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3111,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3112,"            double xx = axis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3114,"            line = new Line2D.Double(xx, dataArea.getMinY(), xx, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3116,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3118,"            double yy = axis.valueToJava2D(value, dataArea, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3120,"            line = new Line2D.Double(dataArea.getMinX(), yy, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3123,        g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3124,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3125,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3127,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3140,        Range result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3141,        List mappedDatasets = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3143,        int rangeIndex = this.rangeAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3144,        if (rangeIndex >= 0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3145,            mappedDatasets.addAll(datasetsMappedToRangeAxis(rangeIndex));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3147,        else if (axis == getRangeAxis()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3148,            mappedDatasets.addAll(datasetsMappedToRangeAxis(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3153,        Iterator iterator = mappedDatasets.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3154,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3155,            CategoryDataset d = (CategoryDataset) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3156,            CategoryItemRenderer r = getRendererForDataset(d);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3157,            if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3158,"                result = Range.combine(result, r.findRangeBounds(d));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3160,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3161,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3176,        List result = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3177,        for (int datasetIndex = 0; datasetIndex < this.datasets.size(); ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3179,            Object dataset = this.datasets.get(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3180,            if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3181,                Integer m = (Integer) this.datasetToDomainAxisMap.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3183,                if (m == null) {  // a dataset with no mapping is assigned to ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3185,                    if (axisIndex == 0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3186,                        result.add(dataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3190,                    if (m.intValue() == axisIndex) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3191,                        result.add(dataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3178,                datasetIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3196,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3208,        List result = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3209,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3210,            Object dataset = this.datasets.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3211,            if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3212,                Integer m = (Integer) this.datasetToRangeAxisMap.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3213,                if (m == null) {  // a dataset with no mapping is assigned to ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3215,                    if (index == 0) { ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3216,                        result.add(dataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3220,                    if (m.intValue() == index) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3221,                        result.add(dataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3226,        return result;    ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3238,        return this.weight;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3249,        this.weight = weight;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3251,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3261,        return this.fixedDomainAxisSpace;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3272,        this.fixedDomainAxisSpace = space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3274,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3284,        return this.fixedRangeAxisSpace;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3295,        this.fixedRangeAxisSpace = space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3297,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3307,        List result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3308,        if (getDataset() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3309,            result = Collections.unmodifiableList(getDataset().getColumnKeys());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3311,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3325,        List result = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3326,        int axisIndex = this.domainAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3327,        List datasets = datasetsMappedToDomainAxis(axisIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3328,        Iterator iterator = datasets.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3329,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3330,            CategoryDataset dataset = (CategoryDataset) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3332,            for (int i = 0; i < dataset.getColumnCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3333,                Comparable category = dataset.getColumnKey(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3334,                if (!result.contains(category)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3335,                    result.add(category);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3338,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3339,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3351,        return this.drawSharedDomainAxis;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3363,        this.drawSharedDomainAxis = draw;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3364,        notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3365,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3376,        return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3387,        return true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3401,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3415,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3433,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3445,"        zoomRangeAxes(factor, state, source, false);    ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3446,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3465,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3466,            ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3467,            if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3468,                if (useAnchor) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3471,                    double sourceY = source.getY();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3472,                    if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3473,                        sourceY = source.getX();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3475,"                    double anchorY = rangeAxis.java2DToValue(sourceY, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3477,"                    rangeAxis.resizeRange(factor, anchorY);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3478,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3480,                    rangeAxis.resizeRange(factor);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3484,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3496,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3497,            ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3498,            if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3499,"                rangeAxis.zoomRange(lowerPercent, upperPercent);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3502,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3512,        return this.anchorValue;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3524,"        setAnchorValue(value, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3525,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3537,        this.anchorValue = value;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3538,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3539,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3541,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3552,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3553,            return true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3555,        if (!(obj instanceof CategoryPlot)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3556,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3558,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3559,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3562,        CategoryPlot that = (CategoryPlot) obj;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3564,        if (this.orientation != that.orientation) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3565,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3567,"        if (!ObjectUtilities.equal(this.axisOffset, that.axisOffset)) {",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3568,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3570,        if (!this.domainAxes.equals(that.domainAxes)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3571,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3573,        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3574,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3576,        if (this.drawSharedDomainAxis != that.drawSharedDomainAxis) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3577,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3579,        if (!this.rangeAxes.equals(that.rangeAxes)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3580,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3582,        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3583,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3585,"        if (!ObjectUtilities.equal(this.datasetToDomainAxisMap, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3587,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3589,"        if (!ObjectUtilities.equal(this.datasetToRangeAxisMap, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3591,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3593,"        if (!ObjectUtilities.equal(this.renderers, that.renderers)) {",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3594,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3596,        if (this.renderingOrder != that.renderingOrder) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3597,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3599,        if (this.columnRenderingOrder != that.columnRenderingOrder) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3600,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3602,        if (this.rowRenderingOrder != that.rowRenderingOrder) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3603,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3605,        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3606,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3608,        if (this.domainGridlinePosition != that.domainGridlinePosition) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3609,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3611,"        if (!ObjectUtilities.equal(this.domainGridlineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3613,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3615,"        if (!PaintUtilities.equal(this.domainGridlinePaint, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3617,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3619,        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3620,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3622,"        if (!ObjectUtilities.equal(this.rangeGridlineStroke, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3624,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3626,"        if (!PaintUtilities.equal(this.rangeGridlinePaint, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3628,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3630,        if (this.anchorValue != that.anchorValue) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3631,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3633,        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3634,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3636,        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3637,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3639,"        if (!ObjectUtilities.equal(this.rangeCrosshairStroke, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3641,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3643,"        if (!PaintUtilities.equal(this.rangeCrosshairPaint, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3645,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3647,        if (this.rangeCrosshairLockedOnData ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3649,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3651,"        if (!ObjectUtilities.equal(this.foregroundRangeMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3653,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3655,"        if (!ObjectUtilities.equal(this.backgroundRangeMarkers, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3657,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3659,"        if (!ObjectUtilities.equal(this.annotations, that.annotations)) {",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3660,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3662,        if (this.weight != that.weight) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3663,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3665,"        if (!ObjectUtilities.equal(this.fixedDomainAxisSpace, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3667,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3669,"        if (!ObjectUtilities.equal(this.fixedRangeAxisSpace, ",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3671,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3674,        return true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3687,        CategoryPlot clone = (CategoryPlot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3689,        clone.domainAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3690,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3691,            CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3692,            if (xAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3693,                CategoryAxis clonedAxis = (CategoryAxis) xAxis.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3694,"                clone.setDomainAxis(i, clonedAxis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3697,        clone.domainAxisLocations ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3700,        clone.rangeAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3701,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3702,            ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3703,            if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3704,                ValueAxis clonedAxis = (ValueAxis) yAxis.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3705,"                clone.setRangeAxis(i, clonedAxis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3708,        clone.rangeAxisLocations = (ObjectList) this.rangeAxisLocations.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3710,        clone.datasets = (ObjectList) this.datasets.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3711,        for (int i = 0; i < clone.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3712,            CategoryDataset dataset = clone.getDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3713,            if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3714,                dataset.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3717,        clone.datasetToDomainAxisMap ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3719,        clone.datasetToRangeAxisMap ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3721,        clone.renderers = (ObjectList) this.renderers.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3722,        if (this.fixedDomainAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3723,            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3726,        if (this.fixedRangeAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3727,            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3731,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3743,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3744,"        SerialUtilities.writeStroke(this.domainGridlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3745,"        SerialUtilities.writePaint(this.domainGridlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3746,"        SerialUtilities.writeStroke(this.rangeGridlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3747,"        SerialUtilities.writePaint(this.rangeGridlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3748,"        SerialUtilities.writeStroke(this.rangeCrosshairStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3749,"        SerialUtilities.writePaint(this.rangeCrosshairPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3750,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3763,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3764,        this.domainGridlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3765,        this.domainGridlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3766,        this.rangeGridlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3767,        this.rangeGridlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3768,        this.rangeCrosshairStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3769,        this.rangeCrosshairPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3771,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3772,            CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3773,            if (xAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3774,                xAxis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3775,                xAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3778,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3779,            ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3780,            if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3781,                yAxis.setPlot(this);   ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3782,                yAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3785,        int datasetCount = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3786,        for (int i = 0; i < datasetCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3787,            Dataset dataset = (Dataset) this.datasets.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3788,            if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3789,                dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3792,        int rendererCount = this.renderers.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3793,        for (int i = 0; i < rendererCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3794,            CategoryItemRenderer renderer ,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3796,            if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3797,                renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,23,3801,    },0.0,0,-1,0
org/jfree/chart/event/RendererChangeEvent,23,63,        super(renderer);,0.0,0,-1,0
org/jfree/chart/event/RendererChangeEvent,23,64,        this.renderer = renderer;,0.0,0,-1,0
org/jfree/chart/event/RendererChangeEvent,23,65,    },0.0,0,-1,0
org/jfree/chart/event/RendererChangeEvent,23,73,        return this.renderer;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,23,82,"        this(source, chart, ChartChangeEventType.GENERAL);",0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,23,83,    },0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,23,106,        return this.chart;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,23,115,        this.chart = chart;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,23,116,    },0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,23,124,        return this.type;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,23,133,        this.type = type;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,23,134,    },0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,71,        return (Stroke) get(index);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,82,"        set(index, stroke);",0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,83,    },0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,93,        return super.clone();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,106,            return false;,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,110,            return true;,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,117,        return false;,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,127,        return super.hashCode();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,139,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,140,        int count = size();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,141,        stream.writeInt(count);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,142,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,143,            Stroke stroke = getStroke(i);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,144,            if (stroke != null) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,145,                stream.writeInt(i);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,146,"                SerialUtilities.writeStroke(stroke, stream);",0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,149,                stream.writeInt(-1);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,153,    },0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,166,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,167,        int count = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,168,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,169,            int index = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,170,            if (index != -1) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,171,"                setStroke(index, SerialUtilities.readStroke(stream));",0.0,0,-1,0
org/jfree/chart/util/StrokeList,23,175,    },0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,109,        Object result = null;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,110,        if (index >= 0 && index < this.size) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,111,            result = this.objects[index];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,113,        return result;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,123,        if (index < 0) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,124,"            throw new IllegalArgumentException(""Requires index >= 0."");",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,126,        if (index >= this.objects.length) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,127,            Object[] enlarged = new Object[index + this.increment];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,128,"            System.arraycopy(this.objects, 0, enlarged, 0, this.objects.length);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,129,            this.objects = enlarged;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,131,        this.objects[index] = object;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,132,"        this.size = Math.max(this.size, index + 1);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,133,    },0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,139,"        Arrays.fill(this.objects, null);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,140,        this.size = 0;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,141,    },0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,161,        for (int index = 0; index < this.size; index++) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,162,            if (this.objects[index] == object) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,163,                return (index);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,166,        return -1;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,179,            return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,183,            return true;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,187,            return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,193,"           if (!ObjectUtilities.equal(get(i), other.get(i))) {",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,194,               return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,206,        return super.hashCode();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,220,        AbstractObjectList clone = (AbstractObjectList) super.clone();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,221,        if (this.objects != null) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,222,            clone.objects = new Object[this.objects.length];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,223,"            System.arraycopy(this.objects, 0, clone.objects, 0, ",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,226,        return clone;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,240,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,241,        int count = size();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,242,        stream.writeInt(count);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,243,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,244,            final Object object = get(i);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,245,            if (object != null && object instanceof Serializable) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,246,                stream.writeInt(i);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,247,                stream.writeObject(object);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,250,                stream.writeInt(-1);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,254,    },0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,267,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,268,        this.objects = new Object[this.size];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,269,        int count = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,270,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,271,            int index = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,272,            if (index != -1) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,273,"                set(index, stream.readObject());",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,23,277,    },0.0,0,-1,0
org/jfree/chart/util/PaintList,23,72,        return (Paint) get(index);,0.0,0,-1,0
org/jfree/chart/util/PaintList,23,83,"        set(index, paint);",0.0,0,-1,0
org/jfree/chart/util/PaintList,23,84,    },0.0,0,-1,0
org/jfree/chart/util/PaintList,23,95,            return false;,0.0,0,-1,0
org/jfree/chart/util/PaintList,23,98,            return true;,0.0,0,-1,0
org/jfree/chart/util/PaintList,23,104,"               if (!PaintUtilities.equal(getPaint(i), that.getPaint(i))) {",0.0,0,-1,0
org/jfree/chart/util/PaintList,23,105,                   return false;,0.0,0,-1,0
org/jfree/chart/util/PaintList,23,118,        return super.hashCode();,0.0,0,-1,0
org/jfree/chart/util/PaintList,23,130,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/util/PaintList,23,131,        int count = size();,0.0,0,-1,0
org/jfree/chart/util/PaintList,23,132,        stream.writeInt(count);,0.0,0,-1,0
org/jfree/chart/util/PaintList,23,133,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,23,134,            Paint paint = getPaint(i);,0.0,0,-1,0
org/jfree/chart/util/PaintList,23,135,            if (paint != null) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,23,136,                stream.writeInt(i);,0.0,0,-1,0
org/jfree/chart/util/PaintList,23,137,"                SerialUtilities.writePaint(paint, stream);",0.0,0,-1,0
org/jfree/chart/util/PaintList,23,140,                stream.writeInt(-1);,0.0,0,-1,0
org/jfree/chart/util/PaintList,23,144,    },0.0,0,-1,0
org/jfree/chart/util/PaintList,23,157,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/util/PaintList,23,158,        int count = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/PaintList,23,159,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,23,160,            final int index = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/PaintList,23,161,            if (index != -1) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,23,162,"                setPaint(index, SerialUtilities.readPaint(stream));",0.0,0,-1,0
org/jfree/chart/util/PaintList,23,166,    },0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,71,        return (Shape) get(index);,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,81,"        set(index, shape);",0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,82,    },0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,92,        return super.clone();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,105,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,109,            return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,116,        return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,126,        return super.hashCode();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,138,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,139,        int count = size();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,140,        stream.writeInt(count);,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,141,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,142,            Shape shape = getShape(i);,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,143,            if (shape != null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,144,                stream.writeInt(i);,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,145,"                SerialUtilities.writeShape(shape, stream);",0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,148,                stream.writeInt(-1);,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,152,    },0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,165,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,166,        int count = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,167,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,168,            int index = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,169,            if (index != -1) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,170,"                setShape(index, SerialUtilities.readShape(stream));",0.0,0,-1,0
org/jfree/chart/util/ShapeList,23,174,    },0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,62,    private PaintUtilities() {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,63,    },0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,79,            return (p2 == null);   ,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,82,            return false;   ,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,88,            GradientPaint gp1 = (GradientPaint) p1;,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,89,            GradientPaint gp2 = (GradientPaint) p2;,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,90,            result = gp1.getColor1().equals(gp2.getColor1()) ,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,96,        },0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,115,          Field[] fields = Color.class.getFields();,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,116,          for (int i = 0; i < fields.length; i++) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,117,              Field f = fields[i];,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,118,              if (Modifier.isPublic(f.getModifiers()),0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,121,                  String name = f.getName();,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,122,                  Object oColor = f.get(null);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,123,                  if (oColor instanceof Color) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,124,                      if (c.equals(oColor)) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,125,                          return name;,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,133,      },0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,131,      catch (Exception e) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,136,      String color = Integer.toHexString(c.getRGB() & 0x00ffffff);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,137,      StringBuffer retval = new StringBuffer(7);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,138,"      retval.append(""#"");",0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,140,      int fillUp = 6 - color.length();,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,141,      for (int i = 0; i < fillUp; i++) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,142,"          retval.append(""0"");",0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,145,      retval.append(color);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,146,      return retval.toString();,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,157,      if (value == null) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,158,          return Color.black;,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,162,          return Color.decode(value);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,164,      catch (NumberFormatException nfe) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,168,              final Field f = Color.class.getField(value);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,170,              return (Color) f.get(null);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,172,          catch (Exception ce) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,23,174,              return Color.black;,0.0,0,-1,0
org/jfree/chart/util/BooleanList,23,73,        return (Boolean) get(index);,0.0,0,-1,0
org/jfree/chart/util/BooleanList,23,84,"        set(index, b);",0.0,0,-1,0
org/jfree/chart/util/BooleanList,23,85,    },0.0,0,-1,0
org/jfree/chart/util/BooleanList,23,98,        return false;,0.0,0,-1,0
org/jfree/chart/util/BooleanList,23,107,        return super.hashCode();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,91,    private ObjectUtilities() {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,92,    },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,101,        return classLoaderSource;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,115,        ObjectUtilities.classLoaderSource = classLoaderSource;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,116,    },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,134,            return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,147,        int result = 0;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,148,        if (object != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,149,            result = object.hashCode();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,151,        return result;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,164,        if (object == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,165,"            throw new IllegalArgumentException(""Null 'object' argument."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,167,        if (object instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,168,            final PublicCloneable pc = (PublicCloneable) object;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,169,            return pc.clone();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,173,"                final Method method = object.getClass().getMethod(""clone"",",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,175,                if (Modifier.isPublic(method.getModifiers())) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,176,"                    return method.invoke(object, (Object[]) null);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,187,            },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,179,            catch (NoSuchMethodException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,180,                e.printStackTrace();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,182,            catch (IllegalAccessException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,183,                e.printStackTrace();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,185,            catch (InvocationTargetException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,186,                e.printStackTrace();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,189,"        throw new CloneNotSupportedException(""Failed to clone."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,205,        if (collection == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,206,"            throw new IllegalArgumentException(""Null 'collection' argument."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,211,        final Collection result,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,213,        result.clear();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,214,        final Iterator iterator = collection.iterator();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,215,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,216,            final Object item = iterator.next();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,217,            if (item != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,218,                result.add(clone(item));,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,221,                result.add(null);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,223,        },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,224,        return result;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,234,        ObjectUtilities.classLoader = classLoader;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,235,    },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,243,      return classLoader;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,257,        if (classLoader != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,258,            return classLoader;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,260,"        if (""ThreadContext"".equals(classLoaderSource)) {",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,261,            final ClassLoader threadLoader,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,263,            if (threadLoader != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,264,                return threadLoader;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,269,        final ClassLoader applicationCL = c.getClassLoader();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,270,        if (applicationCL == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,271,            return ClassLoader.getSystemClassLoader();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,274,            return applicationCL;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,287,        final ClassLoader cl = getClassLoader(c);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,288,        if (cl == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,289,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,291,        return cl.getResource(name);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,302,        final ClassLoader cl = getClassLoader(c);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,303,"        final String cname = convertName(name, c);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,304,        if (cl == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,305,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,307,        return cl.getResource(cname);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,321,"        if (name.startsWith(""/"")) {",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,323,            return name.substring(1);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,327,        while (c.isArray()) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,328,            c = c.getComponentType();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,331,        final String baseName = c.getName();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,332,        final int index = baseName.lastIndexOf('.');,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,333,        if (index == -1) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,334,            return name;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,337,"        final String pkgName = baseName.substring(0, index);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,338,"        return pkgName.replace('.', '/') + ""/"" + name;",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,351,"        final URL url = getResource(name, context);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,352,        if (url == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,353,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,357,            return url.openStream();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,359,        catch (IOException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,360,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,374,"        final URL url = getResourceRelative(name, context);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,375,        if (url == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,376,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,380,            return url.openStream();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,382,        catch (IOException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,383,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,398,            final ClassLoader loader = getClassLoader(source);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,399,            final Class c = loader.loadClass(className);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,400,            return c.newInstance();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,402,        catch (Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,403,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,423,            ClassLoader loader = getClassLoader(source);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,424,            Class c = loader.loadClass(className);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,425,            if (type.isAssignableFrom(c)) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,426,                return c.newInstance();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,431,        },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,429,        catch (Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,430,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,432,        return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,441,        ClassLoader loader = getClassLoader(ObjectUtilities.class);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,442,        if (loader != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,444,"              loader.loadClass(""java.util.RandomAccess"");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,445,              return true;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,447,            catch (ClassNotFoundException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,448,              return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,450,            catch(Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,457,            String version = System.getProperty(,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,460,            if (version == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,461,                return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,464,            String[] versions = parseVersions(version);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,465,"            String[] target = new String[]{ ""1"", ""4"" };",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,466,"            return (ArrayUtilities.compareVersionArrays(versions, target) >= 0);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,468,        catch(Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,469,            return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,474,      if (version == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,475,        return new String[0];,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,478,      ArrayList versions = new ArrayList();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,479,"      StringTokenizer strtok = new StringTokenizer(version, ""."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,480,      while (strtok.hasMoreTokens()) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,481,          versions.add (strtok.nextToken());,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,23,483,      return (String[]) versions.toArray(new String[versions.size()]);,0.0,0,-1,0
org/jfree/chart/util/ObjectList,23,69,        super(initialCapacity);,0.0,0,-1,0
org/jfree/chart/util/ObjectList,23,70,    },0.0,0,-1,0
org/jfree/chart/util/ObjectList,23,87,        return super.get(index);         ,0.0,0,-1,0
org/jfree/chart/util/ObjectList,23,97,"        super.set(index, object);        ",0.0,0,-1,0
org/jfree/chart/util/ObjectList,23,98,    }    ,0.0,0,-1,0
org/jfree/chart/util/ObjectList,23,109,        return super.indexOf(object);    ,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,136,        return this.name;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,152,        if (!(obj instanceof TextAnchor)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,153,            return false;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,156,        TextAnchor order = (TextAnchor) obj;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,157,        if (!this.name.equals(order.name)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,158,            return false;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,161,        return true;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,170,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,181,        TextAnchor result = null;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,182,        if (this.equals(TextAnchor.TOP_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,183,            result = TextAnchor.TOP_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,185,        else if (this.equals(TextAnchor.TOP_CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,186,            result = TextAnchor.TOP_CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,188,        else if (this.equals(TextAnchor.TOP_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,189,            result = TextAnchor.TOP_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,191,        else if (this.equals(TextAnchor.BOTTOM_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,192,            result = TextAnchor.BOTTOM_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,194,        else if (this.equals(TextAnchor.BOTTOM_CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,195,            result = TextAnchor.BOTTOM_CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,197,        else if (this.equals(TextAnchor.BOTTOM_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,198,            result = TextAnchor.BOTTOM_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,200,        else if (this.equals(TextAnchor.BASELINE_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,201,            result = TextAnchor.BASELINE_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,203,        else if (this.equals(TextAnchor.BASELINE_CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,204,            result = TextAnchor.BASELINE_CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,206,        else if (this.equals(TextAnchor.BASELINE_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,207,            result = TextAnchor.BASELINE_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,209,        else if (this.equals(TextAnchor.CENTER_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,210,            result = TextAnchor.CENTER_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,212,        else if (this.equals(TextAnchor.CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,213,            result = TextAnchor.CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,215,        else if (this.equals(TextAnchor.CENTER_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,216,            result = TextAnchor.CENTER_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,218,        else if (this.equals(TextAnchor.HALF_ASCENT_LEFT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,219,            result = TextAnchor.HALF_ASCENT_LEFT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,221,        else if (this.equals(TextAnchor.HALF_ASCENT_CENTER)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,222,            result = TextAnchor.HALF_ASCENT_CENTER;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,224,        else if (this.equals(TextAnchor.HALF_ASCENT_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,225,            result = TextAnchor.HALF_ASCENT_RIGHT;,0.0,0,-1,0
org/jfree/chart/text/TextAnchor,23,227,        return result;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,104,"        super(area, toolTipText, urlText);",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,105,        if (dataset == null) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,106,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,108,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,109,        this.rowKey = rowKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,110,        this.columnKey = columnKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,111,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,123,        return this.dataset; ,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,134,        if (dataset == null) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,135,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,137,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,138,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,150,        return this.rowKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,163,        this.rowKey = rowKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,164,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,176,        return this.columnKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,189,        this.columnKey = columnKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,190,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,199,"        return ""CategoryItemEntity: rowKey="" + this.rowKey ",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,211,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,212,            return true;      ,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,214,        if (!(obj instanceof CategoryItemEntity)) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,215,            return false;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,217,        CategoryItemEntity that = (CategoryItemEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,218,        if (!this.rowKey.equals(that.rowKey)) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,219,            return false;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,221,        if (!this.columnKey.equals(that.columnKey)) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,222,            return false;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,224,"        if (!ObjectUtilities.equal(this.dataset, that.dataset)) {",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,225,            return false;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,23,227,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,179,        return this.name;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,195,        if (!(o instanceof ItemLabelAnchor)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,196,            return false;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,199,        ItemLabelAnchor order = (ItemLabelAnchor) o;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,200,        if (!this.name.equals(order.toString())) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,201,            return false;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,204,        return true;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,216,        ItemLabelAnchor result = null;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,217,        if (this.equals(ItemLabelAnchor.CENTER)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,218,            result = ItemLabelAnchor.CENTER;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,220,        else if (this.equals(ItemLabelAnchor.INSIDE1)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,221,            result = ItemLabelAnchor.INSIDE1;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,223,        else if (this.equals(ItemLabelAnchor.INSIDE2)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,224,            result = ItemLabelAnchor.INSIDE2;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,226,        else if (this.equals(ItemLabelAnchor.INSIDE3)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,227,            result = ItemLabelAnchor.INSIDE3;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,229,        else if (this.equals(ItemLabelAnchor.INSIDE4)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,230,            result = ItemLabelAnchor.INSIDE4;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,232,        else if (this.equals(ItemLabelAnchor.INSIDE5)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,233,            result = ItemLabelAnchor.INSIDE5;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,235,        else if (this.equals(ItemLabelAnchor.INSIDE6)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,236,            result = ItemLabelAnchor.INSIDE6;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,238,        else if (this.equals(ItemLabelAnchor.INSIDE7)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,239,            result = ItemLabelAnchor.INSIDE7;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,241,        else if (this.equals(ItemLabelAnchor.INSIDE8)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,242,            result = ItemLabelAnchor.INSIDE8;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,244,        else if (this.equals(ItemLabelAnchor.INSIDE9)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,245,            result = ItemLabelAnchor.INSIDE9;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,247,        else if (this.equals(ItemLabelAnchor.INSIDE10)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,248,            result = ItemLabelAnchor.INSIDE10;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,250,        else if (this.equals(ItemLabelAnchor.INSIDE11)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,251,            result = ItemLabelAnchor.INSIDE11;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,253,        else if (this.equals(ItemLabelAnchor.INSIDE12)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,254,            result = ItemLabelAnchor.INSIDE12;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,256,        else if (this.equals(ItemLabelAnchor.OUTSIDE1)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,257,            result = ItemLabelAnchor.OUTSIDE1;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,259,        else if (this.equals(ItemLabelAnchor.OUTSIDE2)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,260,            result = ItemLabelAnchor.OUTSIDE2;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,262,        else if (this.equals(ItemLabelAnchor.OUTSIDE3)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,263,            result = ItemLabelAnchor.OUTSIDE3;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,265,        else if (this.equals(ItemLabelAnchor.OUTSIDE4)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,266,            result = ItemLabelAnchor.OUTSIDE4;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,268,        else if (this.equals(ItemLabelAnchor.OUTSIDE5)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,269,            result = ItemLabelAnchor.OUTSIDE5;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,271,        else if (this.equals(ItemLabelAnchor.OUTSIDE6)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,272,            result = ItemLabelAnchor.OUTSIDE6;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,274,        else if (this.equals(ItemLabelAnchor.OUTSIDE7)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,275,            result = ItemLabelAnchor.OUTSIDE7;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,277,        else if (this.equals(ItemLabelAnchor.OUTSIDE8)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,278,            result = ItemLabelAnchor.OUTSIDE8;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,280,        else if (this.equals(ItemLabelAnchor.OUTSIDE9)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,281,            result = ItemLabelAnchor.OUTSIDE9;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,283,        else if (this.equals(ItemLabelAnchor.OUTSIDE10)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,284,            result = ItemLabelAnchor.OUTSIDE10;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,286,        else if (this.equals(ItemLabelAnchor.OUTSIDE11)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,287,            result = ItemLabelAnchor.OUTSIDE11;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,289,        else if (this.equals(ItemLabelAnchor.OUTSIDE12)) {,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,290,            result = ItemLabelAnchor.OUTSIDE12;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelAnchor,23,292,        return result;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,79,"        this(ItemLabelAnchor.OUTSIDE12, TextAnchor.BOTTOM_CENTER, ",0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,81,    },0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,114,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,118,"            throw new IllegalArgumentException(""Null 'textAnchor' argument."");",0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,121,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,138,        return this.itemLabelAnchor;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,147,        return this.textAnchor;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,156,        return this.rotationAnchor;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,165,        return this.angle;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,177,            return true;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,180,            return false;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,184,            return false;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,187,            return false;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,190,            return false;,0.0,0,-1,0
org/jfree/chart/labels/ItemLabelPosition,23,193,            return false;,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,85,"            throw new IllegalArgumentException(""Null 'format' argument."");",0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,99,        if (dataset == null) {,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,100,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,102,"        String label = MessageFormat.format(this.formatPattern, ",0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,104,        return label;,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,117,        Object[] result = new Object[1];,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,118,        result[0] = dataset.getRowKey(series).toString();,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,119,        return result;,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,130,        return super.clone();,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,142,            return true;,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,145,            return false;,0.0,0,-1,0
org/jfree/chart/labels/StandardCategorySeriesLabelGenerator,23,150,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,388,        return isSeriesVisible(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,400,        boolean result = this.baseSeriesVisible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,401,        Boolean b = this.seriesVisibleList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,402,        if (b != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,403,            result = b.booleanValue();   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,405,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,418,        return this.seriesVisibleList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,431,"        setSeriesVisible(series, visible, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,432,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,446,"        this.seriesVisibleList.setBoolean(series, visible);       ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,447,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,448,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,450,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,460,        return this.baseSeriesVisible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,473,"        setBaseSeriesVisible(visible, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,474,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,486,        this.baseSeriesVisible = visible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,487,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,488,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,490,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,503,        boolean result = this.baseSeriesVisibleInLegend;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,504,        Boolean b = this.seriesVisibleInLegendList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,505,        if (b != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,506,            result = b.booleanValue();   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,508,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,524,        return this.seriesVisibleInLegendList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,537,"        setSeriesVisibleInLegend(series, visible, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,538,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,553,"        this.seriesVisibleInLegendList.setBoolean(series, visible);       ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,554,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,555,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,557,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,567,        return this.baseSeriesVisibleInLegend;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,580,"        setBaseSeriesVisibleInLegend(visible, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,581,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,593,        this.baseSeriesVisibleInLegend = visible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,594,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,595,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,597,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,614,        return lookupSeriesPaint(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,629,        Paint seriesPaint = this.paintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,630,        if (seriesPaint == null && this.autoPopulateSeriesPaint) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,631,            DrawingSupplier supplier = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,632,            if (supplier != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,633,                seriesPaint = supplier.getNextPaint();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,634,"                this.paintList.setPaint(series, seriesPaint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,637,        if (seriesPaint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,638,            seriesPaint = this.basePaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,640,        return seriesPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,654,        return this.paintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,667,"        setSeriesPaint(series, paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,668,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,681,"        this.paintList.setPaint(series, paint);       ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,682,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,683,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,685,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,695,        return this.basePaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,708,"        setBasePaint(paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,709,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,721,        this.basePaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,722,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,723,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,725,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,738,        return this.autoPopulateSeriesPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,752,        this.autoPopulateSeriesPaint = auto;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,753,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,769,        return lookupSeriesFillPaint(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,784,        Paint seriesFillPaint = this.fillPaintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,785,        if (seriesFillPaint == null && this.autoPopulateSeriesFillPaint) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,786,            DrawingSupplier supplier = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,787,            if (supplier != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,788,                seriesFillPaint = supplier.getNextFillPaint();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,789,"                this.fillPaintList.setPaint(series, seriesFillPaint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,792,        if (seriesFillPaint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,793,            seriesFillPaint = this.baseFillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,795,        return seriesFillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,807,        return this.fillPaintList.getPaint(series);    ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,818,"        setSeriesFillPaint(series, paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,819,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,830,"        this.fillPaintList.setPaint(series, paint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,831,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,832,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,834,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,844,        return this.baseFillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,857,"        setBaseFillPaint(paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,858,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,870,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,871,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,873,        this.baseFillPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,874,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,875,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,877,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,891,        return this.autoPopulateSeriesFillPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,905,        this.autoPopulateSeriesFillPaint = auto;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,906,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,923,        return lookupSeriesOutlinePaint(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,938,        Paint seriesOutlinePaint = this.outlinePaintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,939,        if (seriesOutlinePaint == null && this.autoPopulateSeriesOutlinePaint) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,940,            DrawingSupplier supplier = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,941,            if (supplier != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,942,                seriesOutlinePaint = supplier.getNextOutlinePaint();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,943,"                this.outlinePaintList.setPaint(series, seriesOutlinePaint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,946,        if (seriesOutlinePaint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,947,            seriesOutlinePaint = this.baseOutlinePaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,949,        return seriesOutlinePaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,961,        return this.outlinePaintList.getPaint(series);    ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,972,"        setSeriesOutlinePaint(series, paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,973,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,984,"        this.outlinePaintList.setPaint(series, paint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,985,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,986,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,988,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,996,        return this.baseOutlinePaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1007,"        setBaseOutlinePaint(paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1008,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1018,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1019,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1021,        this.baseOutlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1022,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1023,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1025,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1039,        return this.autoPopulateSeriesOutlinePaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1054,        this.autoPopulateSeriesOutlinePaint = auto;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1055,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1071,        return lookupSeriesStroke(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1086,        Stroke result = this.strokeList.getStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1087,        if (result == null && this.autoPopulateSeriesStroke) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1088,            DrawingSupplier supplier = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1089,            if (supplier != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1090,                result = supplier.getNextStroke();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1091,"                this.strokeList.setStroke(series, result);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1094,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1095,            result = this.baseStroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1097,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1109,        return this.strokeList.getStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1120,"        setSeriesStroke(series, stroke, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1121,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1132,"        this.strokeList.setStroke(series, stroke);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1133,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1134,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1136,    }    ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1144,        return this.baseStroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1154,"        setBaseStroke(stroke, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1155,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1165,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1166,"            throw new IllegalArgumentException(""Null 'stroke' argument."");   ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1168,        this.baseStroke = stroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1169,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1170,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1172,    }    ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1185,        return this.autoPopulateSeriesStroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1199,        this.autoPopulateSeriesStroke = auto;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1200,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1216,        return lookupSeriesOutlineStroke(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1231,        Stroke result = this.outlineStrokeList.getStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1232,        if (result == null && this.autoPopulateSeriesOutlineStroke) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1233,            DrawingSupplier supplier = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1234,            if (supplier != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1235,                result = supplier.getNextOutlineStroke();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1236,"                this.outlineStrokeList.setStroke(series, result);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1239,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1240,            result = this.baseOutlineStroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1242,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1254,        return this.outlineStrokeList.getStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1265,"        setSeriesOutlineStroke(series, stroke, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1266,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1278,"        this.outlineStrokeList.setStroke(series, stroke);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1279,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1280,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1282,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1290,        return this.baseOutlineStroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1300,"        setBaseOutlineStroke(stroke, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1301,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1312,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1313,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1315,        this.baseOutlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1316,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1317,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1319,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1333,        return this.autoPopulateSeriesOutlineStroke;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1348,        this.autoPopulateSeriesOutlineStroke = auto;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1349,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1365,        return lookupSeriesShape(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1380,        Shape result = this.shapeList.getShape(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1381,        if (result == null && this.autoPopulateSeriesShape) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1382,            DrawingSupplier supplier = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1383,            if (supplier != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1384,                result = supplier.getNextShape();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1385,"                this.shapeList.setShape(series, result);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1388,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1389,            result = this.baseShape;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1391,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1403,        return this.shapeList.getShape(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1414,"        setSeriesShape(series, shape, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1415,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1426,"        this.shapeList.setShape(series, shape);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1427,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1428,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1430,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1438,        return this.baseShape;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1449,"        setBaseShape(shape, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1450,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1460,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1461,"            throw new IllegalArgumentException(""Null 'shape' argument.""); ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1463,        this.baseShape = shape;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1464,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1465,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1467,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1480,        return this.autoPopulateSeriesShape;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1494,        this.autoPopulateSeriesShape = auto;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1495,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1509,        return isSeriesItemLabelsVisible(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1521,        Boolean b = this.itemLabelsVisibleList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1522,        if (b != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1523,            return b.booleanValue();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1525,        return this.baseItemLabelsVisible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1541,        return this.itemLabelsVisibleList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1551,"        setSeriesItemLabelsVisible(series, Boolean.valueOf(visible));",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1552,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1561,"        setSeriesItemLabelsVisible(series, visible, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1562,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1575,"        this.itemLabelsVisibleList.setBoolean(series, visible);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1576,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1577,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1579,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1587,        return this.baseItemLabelsVisible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1596,"        setBaseItemLabelsVisible(visible, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1597,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1607,        this.baseItemLabelsVisible = visible;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1608,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1609,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1611,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1624,        Font result = getSeriesItemLabelFont(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1625,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1626,            result = this.baseItemLabelFont;   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1628,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1639,        return (Font) this.itemLabelFontList.get(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1650,"        setSeriesItemLabelFont(series, font, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1651,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1663,"        this.itemLabelFontList.set(series, font);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1664,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1665,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1667,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1676,        return this.baseItemLabelFont;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1686,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1687,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1689,"        setBaseItemLabelFont(font, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1690,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1701,        this.baseItemLabelFont = font;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1702,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1703,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1705,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1718,        Paint result = getSeriesItemLabelPaint(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1719,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1720,            result = this.baseItemLabelPaint;   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1722,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1733,        return this.itemLabelPaintList.getPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1744,"        setSeriesItemLabelPaint(series, paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1745,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1758,"        this.itemLabelPaintList.setPaint(series, paint);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1759,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1760,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1762,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1770,        return this.baseItemLabelPaint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1781,"        setBaseItemLabelPaint(paint, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1782,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1793,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1794,"            throw new IllegalArgumentException(""Null 'paint' argument."");   ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1796,        this.baseItemLabelPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1797,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1798,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1800,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1815,        return getSeriesPositiveItemLabelPosition(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1830,        ItemLabelPosition position = (ItemLabelPosition) ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1832,        if (position == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1833,            position = this.basePositiveItemLabelPosition;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1835,        return position;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1850,"        setSeriesPositiveItemLabelPosition(series, position, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1851,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1867,"        this.positiveItemLabelPositionList.set(series, position);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1868,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1869,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1871,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1881,        return this.basePositiveItemLabelPosition;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1893,"        setBasePositiveItemLabelPosition(position, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1894,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1907,        if (position == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1908,"            throw new IllegalArgumentException(""Null 'position' argument."");   ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1910,        this.basePositiveItemLabelPosition = position;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1911,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1912,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1914,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1931,        return getSeriesNegativeItemLabelPosition(row);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1946,        ItemLabelPosition position = (ItemLabelPosition) ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1948,        if (position == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1949,            position = this.baseNegativeItemLabelPosition;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1951,        return position;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1966,"        setSeriesNegativeItemLabelPosition(series, position, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1967,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1983,"        this.negativeItemLabelPositionList.set(series, position);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1984,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1985,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1987,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,1997,        return this.baseNegativeItemLabelPosition;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2009,"        setBaseNegativeItemLabelPosition(position, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2010,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2023,        if (position == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2024,"            throw new IllegalArgumentException(""Null 'position' argument."");   ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2026,        this.baseNegativeItemLabelPosition = position;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2027,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2028,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2030,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2040,        return this.itemLabelAnchorOffset;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2051,        this.itemLabelAnchorOffset = offset;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2052,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2053,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2065,        Boolean b = getSeriesCreateEntities(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2066,        if (b != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2067,            return b.booleanValue();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2070,            return this.baseCreateEntities;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2083,        return this.createEntitiesList.getBoolean(series);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2094,"        setSeriesCreateEntities(series, create, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2095,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2108,"        this.createEntitiesList.setBoolean(series, create);       ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2109,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2110,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2112,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2120,        return this.baseCreateEntities;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2132,"        setBaseCreateEntities(create, true);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2133,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2144,        this.baseCreateEntities = create;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2145,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2146,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2148,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2168,        Point2D result = null;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2169,        if (anchor == ItemLabelAnchor.CENTER) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2170,"            result = new Point2D.Double(x, y);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2172,        else if (anchor == ItemLabelAnchor.INSIDE1) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2173,"            result = new Point2D.Double(x + OPP * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2176,        else if (anchor == ItemLabelAnchor.INSIDE2) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2177,"            result = new Point2D.Double(x + ADJ * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2180,        else if (anchor == ItemLabelAnchor.INSIDE3) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2181,"            result = new Point2D.Double(x + this.itemLabelAnchorOffset, y);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2183,        else if (anchor == ItemLabelAnchor.INSIDE4) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2184,"            result = new Point2D.Double(x + ADJ * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2187,        else if (anchor == ItemLabelAnchor.INSIDE5) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2188,"            result = new Point2D.Double(x + OPP * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2191,        else if (anchor == ItemLabelAnchor.INSIDE6) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2192,"            result = new Point2D.Double(x, y + this.itemLabelAnchorOffset);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2194,        else if (anchor == ItemLabelAnchor.INSIDE7) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2195,"            result = new Point2D.Double(x - OPP * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2198,        else if (anchor == ItemLabelAnchor.INSIDE8) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2199,"            result = new Point2D.Double(x - ADJ * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2202,        else if (anchor == ItemLabelAnchor.INSIDE9) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2203,"            result = new Point2D.Double(x - this.itemLabelAnchorOffset, y);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2205,        else if (anchor == ItemLabelAnchor.INSIDE10) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2206,"            result = new Point2D.Double(x - ADJ * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2209,        else if (anchor == ItemLabelAnchor.INSIDE11) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2210,"            result = new Point2D.Double(x - OPP * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2213,        else if (anchor == ItemLabelAnchor.INSIDE12) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2214,"            result = new Point2D.Double(x, y - this.itemLabelAnchorOffset);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2216,        else if (anchor == ItemLabelAnchor.OUTSIDE1) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2217,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2221,        else if (anchor == ItemLabelAnchor.OUTSIDE2) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2222,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2226,        else if (anchor == ItemLabelAnchor.OUTSIDE3) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2227,"            result = new Point2D.Double(x + 2.0 * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2230,        else if (anchor == ItemLabelAnchor.OUTSIDE4) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2231,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2235,        else if (anchor == ItemLabelAnchor.OUTSIDE5) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2236,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2240,        else if (anchor == ItemLabelAnchor.OUTSIDE6) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2241,"            result = new Point2D.Double(x, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2244,        else if (anchor == ItemLabelAnchor.OUTSIDE7) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2245,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2249,        else if (anchor == ItemLabelAnchor.OUTSIDE8) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2250,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2254,        else if (anchor == ItemLabelAnchor.OUTSIDE9) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2255,"            result = new Point2D.Double(x - 2.0 * this.itemLabelAnchorOffset, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2258,        else if (anchor == ItemLabelAnchor.OUTSIDE10) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2259,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2263,        else if (anchor == ItemLabelAnchor.OUTSIDE11) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2264,            result = new Point2D.Double(,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2268,        else if (anchor == ItemLabelAnchor.OUTSIDE12) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2269,"            result = new Point2D.Double(x, ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2272,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2281,        if (listener == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2282,"            throw new IllegalArgumentException(""Null 'listener' argument."");   ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2284,"        this.listenerList.add(RendererChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2285,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2294,        if (listener == null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2295,"            throw new IllegalArgumentException(""Null 'listener' argument."");   ",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2297,"        this.listenerList.remove(RendererChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2298,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2310,        List list = Arrays.asList(this.listenerList.getListenerList());,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2311,        return list.contains(listener);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2330,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2331,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2339,        Object[] ls = this.listenerList.getListenerList();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2340,        for (int i = ls.length - 2; i >= 0; i -= 2) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2341,            if (ls[i] == RendererChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2342,                ((RendererChangeListener) ls[i + 1]).rendererChanged(event);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2345,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2356,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2359,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2363,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2366,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2370,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2373,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2376,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2379,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2382,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2385,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2389,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2393,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2396,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2399,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2403,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2408,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2411,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2414,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2418,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2421,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2425,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2429,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2433,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2437,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2441,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2445,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2449,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2453,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2456,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2460,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2463,            return false;   ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2474,        int result = 193; ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2476,        result = 37 * result + ObjectUtilities.hashCode(this.baseStroke);    ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2477,        result = 37 * result + ObjectUtilities.hashCode(this.baseOutlineStroke);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2478,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2490,        AbstractRenderer clone = (AbstractRenderer) super.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2492,        if (this.seriesVisibleList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2493,            clone.seriesVisibleList ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2497,        if (this.seriesVisibleInLegendList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2498,            clone.seriesVisibleInLegendList ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2503,        if (this.paintList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2504,            clone.paintList = (PaintList) this.paintList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2508,        if (this.fillPaintList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2509,            clone.fillPaintList = (PaintList) this.fillPaintList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2512,        if (this.outlinePaintList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2513,            clone.outlinePaintList = (PaintList) this.outlinePaintList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2518,        if (this.strokeList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2519,            clone.strokeList = (StrokeList) this.strokeList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2524,        if (this.outlineStrokeList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2525,            clone.outlineStrokeList ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2530,        if (this.shapeList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2531,            clone.shapeList = (ShapeList) this.shapeList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2533,        if (this.baseShape != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2534,            clone.baseShape = ShapeUtilities.clone(this.baseShape);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2538,        if (this.itemLabelsVisibleList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2539,            clone.itemLabelsVisibleList ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2545,        if (this.itemLabelFontList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2546,            clone.itemLabelFontList ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2552,        if (this.itemLabelPaintList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2553,            clone.itemLabelPaintList ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2559,        if (this.positiveItemLabelPositionList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2560,            clone.positiveItemLabelPositionList ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2566,        if (this.negativeItemLabelPositionList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2567,            clone.negativeItemLabelPositionList ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2572,        if (this.createEntitiesList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2573,            clone.createEntitiesList ,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2576,        clone.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2577,        clone.event = null;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2578,        return clone;,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2590,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2591,"        SerialUtilities.writePaint(this.basePaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2592,"        SerialUtilities.writePaint(this.baseFillPaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2593,"        SerialUtilities.writePaint(this.baseOutlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2594,"        SerialUtilities.writeStroke(this.baseStroke, stream);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2595,"        SerialUtilities.writeStroke(this.baseOutlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2596,"        SerialUtilities.writeShape(this.baseShape, stream);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2597,"        SerialUtilities.writePaint(this.baseItemLabelPaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2599,    },0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2612,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2613,        this.basePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2614,        this.baseFillPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2615,        this.baseOutlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2616,        this.baseStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2617,        this.baseOutlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2618,        this.baseShape = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2619,        this.baseItemLabelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2623,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/renderer/AbstractRenderer,23,2625,    },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,156,        return this.plotLines;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,169,        if (this.plotLines != draw) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,170,            this.plotLines = draw;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,171,            this.notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,174,    },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,185,        return this.groupPaint;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,198,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,199,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,201,        this.groupPaint = paint;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,202,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,203,    },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,214,        return this.groupStroke;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,225,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,226,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,228,        this.groupStroke = stroke;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,229,        notifyListeners(new RendererChangeEvent(this));        ,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,230,    },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,240,        return this.objectIcon;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,251,        if (icon == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,252,"            throw new IllegalArgumentException(""Null 'icon' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,254,        this.objectIcon = icon;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,255,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,256,    },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,267,        return this.maxIcon;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,280,        if (icon == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,281,"            throw new IllegalArgumentException(""Null 'icon' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,283,        this.maxIcon = icon;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,284,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,285,    },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,296,        return this.minIcon;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,309,        if (icon == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,310,"            throw new IllegalArgumentException(""Null 'icon' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,312,        this.minIcon = icon;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,313,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,314,    },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,336,"        Number value = dataset.getValue(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,337,        if (value != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,339,"            double x1 = domainAxis.getCategoryMiddle(column, getColumnCount(), ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,341,"            double y1 = rangeAxis.valueToJava2D(value.doubleValue(), dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,343,"            g2.setPaint(getItemPaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,344,"            g2.setStroke(getItemStroke(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,345,            Shape shape = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,346,"            shape = new Rectangle2D.Double(x1 - 4, y1 - 4, 8.0, 8.0);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,348,            PlotOrientation orient = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,349,            if (orient == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,350,"                this.objectIcon.paintIcon(null, g2, (int) x1, (int) y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,353,"                this.objectIcon.paintIcon(null, g2, (int) y1, (int) x1);                ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,356,            if (this.lastCategory == column) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,357,                if (this.min > value.doubleValue()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,358,                    this.min = value.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,360,                if (this.max < value.doubleValue()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,361,                    this.max = value.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,365,                if (dataset.getRowCount() - 1 == row) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,366,                    g2.setPaint(this.groupPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,367,                    g2.setStroke(this.groupStroke);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,368,"                    double minY = rangeAxis.valueToJava2D(this.min, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,370,"                    double maxY = rangeAxis.valueToJava2D(this.max, dataArea, ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,373,                    if (orient == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,374,"                        g2.draw(new Line2D.Double(x1, minY, x1, maxY));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,375,"                        this.minIcon.paintIcon(null, g2, (int) x1, (int) minY);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,376,"                        this.maxIcon.paintIcon(null, g2, (int) x1, (int) maxY);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,379,"                        g2.draw(new Line2D.Double(minY, x1, maxY, x1));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,380,"                        this.minIcon.paintIcon(null, g2, (int) minY, (int) x1);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,381,"                        this.maxIcon.paintIcon(null, g2, (int) maxY, (int) x1);                        ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,383,                },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,386,                this.lastCategory = column;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,387,                this.min = value.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,388,                this.max = value.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,392,            if (this.plotLines) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,393,                if (column != 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,394,"                    Number previousValue = dataset.getValue(row, column - 1);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,395,                    if (previousValue != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,397,                        double previous = previousValue.doubleValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,398,"                        double x0 = domainAxis.getCategoryMiddle(column - 1, ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,401,"                        double y0 = rangeAxis.valueToJava2D(previous, dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,403,"                        g2.setPaint(getItemPaint(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,404,"                        g2.setStroke(getItemStroke(row, column));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,406,                        if (orient == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,407,"                            line = new Line2D.Double(x0, y0, x1, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,410,"                            line = new Line2D.Double(y0, x0, y1, x1);                            ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,412,                        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,418,            EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,419,            if (entities != null && shape != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,420,"                addItemEntity(entities, dataset, row, column, shape);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,423,    },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,522,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,523,"        SerialUtilities.writeStroke(this.groupStroke, stream);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,524,"        SerialUtilities.writePaint(this.groupPaint, stream);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,525,    },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,537,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,538,        this.groupStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,539,        this.groupPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,541,"        this.minIcon = getIcon(new Arc2D.Double(-4, -4, 8, 8, 0, 360, ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,543,"        this.maxIcon = getIcon(new Arc2D.Double(-4, -4, 8, 8, 0, 360, ",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,545,"        this.objectIcon = getIcon(new Line2D.Double(-4, 0, 4, 0), false, true);",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,546,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,248,        return 1;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,261,        return this.plot;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,274,        if (plot == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,275,"            throw new IllegalArgumentException(""Null 'plot' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,277,        this.plot = plot;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,278,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,295,        CategoryItemLabelGenerator generator = (CategoryItemLabelGenerator),0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,297,        if (generator == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,298,            generator = this.baseItemLabelGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,300,        return generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,313,        return (CategoryItemLabelGenerator) this.itemLabelGeneratorList.get(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,328,"        setSeriesItemLabelGenerator(series, generator, true);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,329,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,345,"        this.itemLabelGeneratorList.set(series, generator);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,346,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,347,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,349,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,359,        return this.baseItemLabelGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,372,"        setBaseItemLabelGenerator(generator, true);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,373,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,388,        this.baseItemLabelGenerator = generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,389,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,390,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,392,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,410,        CategoryToolTipGenerator result = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,411,        result = getSeriesToolTipGenerator(row);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,412,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,413,            result = this.baseToolTipGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,415,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,429,        return (CategoryToolTipGenerator) this.toolTipGeneratorList.get(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,444,"        setSeriesToolTipGenerator(series, generator, true);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,445,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,462,"        this.toolTipGeneratorList.set(series, generator);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,463,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,464,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,466,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,476,        return this.baseToolTipGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,488,"        setBaseToolTipGenerator(generator, true);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,489,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,504,        this.baseToolTipGenerator = generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,505,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,506,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,508,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,521,        CategoryURLGenerator generator ,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,523,        if (generator == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,524,            generator = this.baseURLGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,526,        return generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,539,        return (CategoryURLGenerator) this.urlGeneratorList.get(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,553,"        setSeriesURLGenerator(series, generator, true);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,554,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,570,"        this.urlGeneratorList.set(series, generator);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,571,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,572,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,574,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,584,        return this.baseURLGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,595,"        setBaseURLGenerator(generator, true);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,596,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,610,        this.baseURLGenerator = generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,611,        if (notify) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,612,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,614,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,629,"        addAnnotation(annotation, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,630,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,641,        if (annotation == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,642,"            throw new IllegalArgumentException(""Null 'annotation' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,644,        if (layer.equals(Layer.FOREGROUND)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,645,            this.foregroundAnnotations.add(annotation);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,646,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,648,        else if (layer.equals(Layer.BACKGROUND)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,649,            this.backgroundAnnotations.add(annotation);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,650,            notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,654,"            throw new RuntimeException(""Unknown layer."");",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,656,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,670,        boolean removed = this.foregroundAnnotations.remove(annotation);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,671,        removed = removed & this.backgroundAnnotations.remove(annotation);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,672,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,673,        return removed;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,683,        this.foregroundAnnotations.clear();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,684,        this.backgroundAnnotations.clear();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,685,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,686,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,695,        return this.rowCount;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,705,        return this.columnCount;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,721,        return new CategoryItemRendererState(info);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,745,        setPlot(plot);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,746,        CategoryDataset data = plot.getDataset(rendererIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,747,        if (data != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,748,            this.rowCount = data.getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,749,            this.columnCount = data.getColumnCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,752,            this.rowCount = 0;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,753,            this.columnCount = 0;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,755,        return createState(info);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,769,        return DatasetUtilities.findRangeBounds(dataset);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,785,"        plot.drawBackground(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,787,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,802,"        plot.drawOutline(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,804,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,827,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,828,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,830,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,831,"            line = new Line2D.Double(dataArea.getMinX(), value,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,834,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,835,"            line = new Line2D.Double(value, dataArea.getMinY(), value,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,839,        Paint paint = plot.getDomainGridlinePaint();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,840,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,841,            paint = CategoryPlot.DEFAULT_GRIDLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,843,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,845,        Stroke stroke = plot.getDomainGridlineStroke();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,846,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,847,            stroke = CategoryPlot.DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,849,        g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,851,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,853,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,874,        Range range = axis.getRange();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,875,        if (!range.contains(value)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,876,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,879,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,880,"        double v = axis.valueToJava2D(value, dataArea, plot.getRangeAxisEdge());",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,881,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,882,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,883,"            line = new Line2D.Double(v, dataArea.getMinY(), v,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,886,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,887,"            line = new Line2D.Double(dataArea.getMinX(), v,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,891,        Paint paint = plot.getRangeGridlinePaint();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,892,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,893,            paint = CategoryPlot.DEFAULT_GRIDLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,895,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,897,        Stroke stroke = plot.getRangeGridlineStroke();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,898,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,899,            stroke = CategoryPlot.DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,901,        g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,903,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,905,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,925,        Comparable category = marker.getKey();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,926,        CategoryDataset dataset = plot.getDataset(plot.getIndexOf(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,927,        int columnIndex = dataset.getColumnIndex(category);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,928,        if (columnIndex < 0) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,929,            return;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,932,        final Composite savedComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,933,        g2.setComposite(AlphaComposite.getInstance(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,936,        PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,937,        Rectangle2D bounds = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,938,        if (marker.getDrawAsLine()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,939,"            double v = axis.getCategoryMiddle(columnIndex,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,942,            Line2D line = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,943,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,944,"                line = new Line2D.Double(dataArea.getMinX(), v,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,947,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,948,"                line = new Line2D.Double(v, dataArea.getMinY(), v,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,951,            g2.setPaint(marker.getPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,952,            g2.setStroke(marker.getStroke());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,953,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,954,            bounds = line.getBounds2D();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,955,        },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,957,"            double v0 = axis.getCategoryStart(columnIndex,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,960,"            double v1 = axis.getCategoryEnd(columnIndex,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,963,            Rectangle2D area = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,964,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,965,"                area = new Rectangle2D.Double(dataArea.getMinX(), v0,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,968,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,969,"                area = new Rectangle2D.Double(v0, dataArea.getMinY(),",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,972,            g2.setPaint(marker.getPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,973,            g2.fill(area);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,974,            bounds = area;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,977,        String label = marker.getLabel();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,978,        RectangleAnchor anchor = marker.getLabelAnchor();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,979,        if (label != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,980,            Font labelFont = marker.getLabelFont();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,981,            g2.setFont(labelFont);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,982,            g2.setPaint(marker.getLabelPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,983,            Point2D coordinates = calculateDomainMarkerTextAnchorPoint(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,986,"            TextUtilities.drawAlignedString(label, g2,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,990,        g2.setComposite(savedComposite);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,991,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1011,        if (marker instanceof ValueMarker) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1012,            ValueMarker vm = (ValueMarker) marker;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1013,            double value = vm.getValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1014,            Range range = axis.getRange();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1016,            if (!range.contains(value)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1017,                return;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1020,            final Composite savedComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1021,            g2.setComposite(AlphaComposite.getInstance(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1024,            PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1025,"            double v = axis.valueToJava2D(value, dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1027,            Line2D line = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1028,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1029,"                line = new Line2D.Double(v, dataArea.getMinY(), v,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1032,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1033,"                line = new Line2D.Double(dataArea.getMinX(), v,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1037,            g2.setPaint(marker.getPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1038,            g2.setStroke(marker.getStroke());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1039,            g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1041,            String label = marker.getLabel();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1042,            RectangleAnchor anchor = marker.getLabelAnchor();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1043,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1044,                Font labelFont = marker.getLabelFont();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1045,                g2.setFont(labelFont);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1046,                g2.setPaint(marker.getLabelPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1047,                Point2D coordinates = calculateRangeMarkerTextAnchorPoint(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1051,"                TextUtilities.drawAlignedString(label, g2,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1055,            g2.setComposite(savedComposite);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1056,        },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1057,        else if (marker instanceof IntervalMarker) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1058,            IntervalMarker im = (IntervalMarker) marker;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1059,            double start = im.getStartValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1060,            double end = im.getEndValue();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1061,            Range range = axis.getRange();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1062,"            if (!(range.intersects(start, end))) {",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1063,                return;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1066,            final Composite savedComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1067,            g2.setComposite(AlphaComposite.getInstance(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1070,"            double start2d = axis.valueToJava2D(start, dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1072,"            double end2d = axis.valueToJava2D(end, dataArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1074,"            double low = Math.min(start2d, end2d);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1075,"            double high = Math.max(start2d, end2d);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1077,            PlotOrientation orientation = plot.getOrientation();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1078,            Rectangle2D rect = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1079,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1081,"                low = Math.max(low, dataArea.getMinX());",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1082,"                high = Math.min(high, dataArea.getMaxX());",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1083,"                rect = new Rectangle2D.Double(low,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1087,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1089,"                low = Math.max(low, dataArea.getMinY());",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1090,"                high = Math.min(high, dataArea.getMaxY());",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1091,"                rect = new Rectangle2D.Double(dataArea.getMinX(),",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1095,            Paint p = marker.getPaint();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1096,            if (p instanceof GradientPaint) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1097,                GradientPaint gp = (GradientPaint) p;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1098,                GradientPaintTransformer t = im.getGradientPaintTransformer();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1099,                if (t != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1100,"                    gp = t.transform(gp, rect);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1102,                g2.setPaint(gp);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1103,            },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1105,                g2.setPaint(p);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1107,            g2.fill(rect);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1110,            if (im.getOutlinePaint() != null && im.getOutlineStroke() != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1111,                if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1112,                    Line2D line = new Line2D.Double();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1113,                    double x0 = dataArea.getMinX();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1114,                    double x1 = dataArea.getMaxX();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1115,                    g2.setPaint(im.getOutlinePaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1116,                    g2.setStroke(im.getOutlineStroke());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1117,                    if (range.contains(start)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1118,"                        line.setLine(x0, start2d, x1, start2d);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1119,                        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1121,                    if (range.contains(end)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1122,"                        line.setLine(x0, end2d, x1, end2d);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1123,                        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1125,                },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1127,                    Line2D line = new Line2D.Double();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1128,                    double y0 = dataArea.getMinY();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1129,                    double y1 = dataArea.getMaxY();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1130,                    g2.setPaint(im.getOutlinePaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1131,                    g2.setStroke(im.getOutlineStroke());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1132,                    if (range.contains(start)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1133,"                        line.setLine(start2d, y0, start2d, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1134,                        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1136,                    if (range.contains(end)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1137,"                        line.setLine(end2d, y0, end2d, y1);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1138,                        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1143,            String label = marker.getLabel();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1144,            RectangleAnchor anchor = marker.getLabelAnchor();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1145,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1146,                Font labelFont = marker.getLabelFont();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1147,                g2.setFont(labelFont);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1148,                g2.setPaint(marker.getLabelPaint());,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1149,                Point2D coordinates = calculateRangeMarkerTextAnchorPoint(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1153,"                TextUtilities.drawAlignedString(label, g2,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1157,            g2.setComposite(savedComposite);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1159,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1183,        Rectangle2D anchorRect = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1184,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1185,"            anchorRect = markerOffset.createAdjustedRectangle(markerArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1188,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1189,"            anchorRect = markerOffset.createAdjustedRectangle(markerArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1192,"        return RectangleAnchor.coordinates(anchorRect, anchor);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1217,        Rectangle2D anchorRect = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1218,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1219,"            anchorRect = markerOffset.createAdjustedRectangle(markerArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1222,        else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1223,"            anchorRect = markerOffset.createAdjustedRectangle(markerArea,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1226,"        return RectangleAnchor.coordinates(anchorRect, anchor);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1244,        CategoryPlot p = getPlot();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1245,        if (p == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1246,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1250,        if (!isSeriesVisible(series) || !isSeriesVisibleInLegend(series)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1251,            return null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1254,        CategoryDataset dataset = p.getDataset(datasetIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1255,"        String label = this.legendItemLabelGenerator.generateLabel(dataset,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1257,        String description = label;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1258,        String toolTipText = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1259,        if (this.legendItemToolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1260,            toolTipText = this.legendItemToolTipGenerator.generateLabel(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1263,        String urlText = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1264,        if (this.legendItemURLGenerator != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1265,"            urlText = this.legendItemURLGenerator.generateLabel(dataset,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1268,        Shape shape = lookupSeriesShape(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1269,        Paint paint = lookupSeriesPaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1270,        Paint outlinePaint = lookupSeriesOutlinePaint(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1271,        Stroke outlineStroke = lookupSeriesOutlineStroke(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1273,"        LegendItem item = new LegendItem(label, description, toolTipText,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1275,        item.setSeriesKey(dataset.getRowKey(series));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1276,        item.setSeriesIndex(series);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1277,        item.setDataset(dataset);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1278,        item.setDatasetIndex(datasetIndex);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1279,        return item;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1292,            return true;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1295,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1301,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1305,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1309,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1313,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1317,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1321,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1325,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1329,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1333,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1337,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1341,            return false;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1352,        int result = super.hashCode();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1353,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1362,        DrawingSupplier result = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1363,        CategoryPlot cp = getPlot();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1364,        if (cp != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1365,            result = cp.getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1367,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1390,        CategoryItemLabelGenerator generator,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1392,        if (generator != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1393,"            Font labelFont = getItemLabelFont(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1394,"            Paint paint = getItemLabelPaint(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1395,            g2.setFont(labelFont);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1396,            g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1397,"            String label = generator.generateLabel(dataset, row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1398,            ItemLabelPosition position = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1399,            if (!negative) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1400,"                position = getPositiveItemLabelPosition(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1403,"                position = getNegativeItemLabelPosition(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1405,            Point2D anchorPoint = calculateLabelAnchorPoint(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1407,"            TextUtilities.drawRotatedString(label, g2,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1413,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1431,        Iterator iterator = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1432,        if (layer.equals(Layer.FOREGROUND)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1433,            iterator = this.foregroundAnnotations.iterator();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1435,        else if (layer.equals(Layer.BACKGROUND)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1436,            iterator = this.backgroundAnnotations.iterator();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1440,"            throw new RuntimeException(""Unknown layer."");",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1442,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1443,            CategoryAnnotation annotation = (CategoryAnnotation) iterator.next();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1444,"            annotation.draw(g2, this.plot, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1446,        },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1448,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1462,        AbstractCategoryItemRenderer clone,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1466,        if (this.itemLabelGeneratorList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1467,            clone.itemLabelGeneratorList,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1471,        if (this.baseItemLabelGenerator != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1472,            if (this.baseItemLabelGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1473,                PublicCloneable pc,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1475,                clone.baseItemLabelGenerator,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1477,            },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1479,                throw new CloneNotSupportedException(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1484,        if (this.toolTipGeneratorList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1485,            clone.toolTipGeneratorList,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1489,        if (this.baseToolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1490,            if (this.baseToolTipGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1491,                PublicCloneable pc,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1493,                clone.baseToolTipGenerator,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1495,            },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1497,                throw new CloneNotSupportedException(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1502,        if (this.urlGeneratorList != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1503,            clone.urlGeneratorList = (ObjectList) this.urlGeneratorList.clone();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1506,        if (this.baseURLGenerator != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1507,            if (this.baseURLGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1508,                PublicCloneable pc = (PublicCloneable) this.baseURLGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1509,                clone.baseURLGenerator = (CategoryURLGenerator) pc.clone();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1510,            },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1512,                throw new CloneNotSupportedException(,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1517,        if (this.legendItemLabelGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1518,            clone.legendItemLabelGenerator = (CategorySeriesLabelGenerator),0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1521,        if (this.legendItemToolTipGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1522,            clone.legendItemToolTipGenerator = (CategorySeriesLabelGenerator),0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1525,        if (this.legendItemURLGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1526,            clone.legendItemURLGenerator = (CategorySeriesLabelGenerator),0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1529,        return clone;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1541,        CategoryAxis result = plot.getDomainAxis(index);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1542,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1543,            result = plot.getDomainAxis();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1545,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1557,        ValueAxis result = plot.getRangeAxis(index);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1558,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1559,            result = plot.getRangeAxis();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1561,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1573,        if (this.plot == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1574,            return new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1576,        LegendItemCollection result = new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1577,        int index = this.plot.getIndexOf(this);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1578,        CategoryDataset dataset = this.plot.getDataset(index);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1579,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1580,            int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1581,            for (int i = 0; i < seriesCount; i++) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1582,                if (isSeriesVisibleInLegend(i)) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1583,"                    LegendItem item = getLegendItem(index, i);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1584,                    if (item != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1585,                        result.add(item);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1591,        return result;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1602,        return this.legendItemLabelGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1615,        if (generator == null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1616,"            throw new IllegalArgumentException(""Null 'generator' argument."");",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1618,        this.legendItemLabelGenerator = generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1619,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1620,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1630,        return this.legendItemToolTipGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1643,        this.legendItemToolTipGenerator = generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1644,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1645,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1655,        return this.legendItemURLGenerator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1668,        this.legendItemURLGenerator = generator;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1669,        notifyListeners(new RendererChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1670,    },0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1685,        String tip = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1686,"        CategoryToolTipGenerator tipster = getToolTipGenerator(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1687,        if (tipster != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1688,"            tip = tipster.generateToolTip(dataset, row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1690,        String url = null;,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1691,"        CategoryURLGenerator urlster = getURLGenerator(row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1692,        if (urlster != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1693,"            url = urlster.generateURL(dataset, row, column);",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1695,"        CategoryItemEntity entity = new CategoryItemEntity(hotspot, tip, url,",0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1697,        entities.add(entity);,0.0,0,-1,0
org/jfree/chart/renderer/category/AbstractCategoryItemRenderer,23,1699,    },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,453,              Graphics2D g2 = (Graphics2D) g;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,454,"              path.transform(AffineTransform.getTranslateInstance(x, y));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,455,              if (fillPaint != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,456,                  g2.setPaint(fillPaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,457,                  g2.fill(path);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,459,              if (outlinePaint != null) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,460,                  g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,461,                  g2.draw(path);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,463,"              path.transform(AffineTransform.getTranslateInstance(-x, -y));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,464,        },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,467,            return width;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,471,            return height;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,493,                Graphics2D g2 = (Graphics2D) g;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,494,"                path.transform(AffineTransform.getTranslateInstance(x, y));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,495,                if (fill) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,496,                    g2.fill(path);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,498,                if (outline) {,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,499,                    g2.draw(path);,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,501,"                path.transform(AffineTransform.getTranslateInstance(-x, -y));",0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,502,            },0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,505,                return width;,0.0,0,-1,0
org/jfree/chart/renderer/category/MinMaxCategoryRenderer,23,509,                return height;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,23,86,        return this.name;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,23,98,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,23,99,            return true;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,23,101,        if (!(obj instanceof ChartChangeEventType)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,23,102,            return false;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,23,104,        ChartChangeEventType that = (ChartChangeEventType) obj;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,23,105,        if (!this.name.equals(that.toString())) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,23,106,            return false;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,23,108,        return true;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,23,117,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,23,128,        if (this.equals(ChartChangeEventType.GENERAL)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,23,129,            return ChartChangeEventType.GENERAL;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,23,131,        else if (this.equals(ChartChangeEventType.NEW_DATASET)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,23,132,            return ChartChangeEventType.NEW_DATASET;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,23,134,        else if (this.equals(ChartChangeEventType.DATASET_UPDATED)) {,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,23,135,            return ChartChangeEventType.DATASET_UPDATED;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEventType,23,137,        return null;,0.0,0,-1,0
