project_path,version,lines,statement,suspicious,faulty,predict,miss_line
org/jfree/chart/util/AbstractObjectList,4,166,        return -1;,6.45333,0,1,0
org/jfree/chart/axis/Axis,4,1222,        Object[] listeners = this.listenerList.getListenerList();,4.65385,0,-1,0
org/jfree/chart/axis/Axis,4,1223,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,4.65385,0,-1,0
org/jfree/chart/axis/Axis,4,1228,    },4.65385,0,-1,0
org/jfree/chart/event/AxisChangeEvent,4,61,        super(axis);,4.65385,0,-1,0
org/jfree/chart/event/AxisChangeEvent,4,62,        this.axis = axis;,4.65385,0,-1,0
org/jfree/chart/event/AxisChangeEvent,4,63,    },4.65385,0,-1,0
org/jfree/chart/axis/Axis,4,1043,        this.plot = plot;,3.78125,0,-1,0
org/jfree/chart/axis/Axis,4,1044,        configure();,3.78125,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,161,        for (int index = 0; index < this.size; index++) {,3.78125,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,162,            if (this.objects[index] == object) {,3.78125,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,163,                return (index);,3.78125,0,-1,0
org/jfree/chart/util/ObjectList,4,107,        return super.indexOf(object);,3.78125,0,-1,0
org/jfree/chart/axis/Axis,4,1030,        return this.plot;,3.72308,0,-1,0
org/jfree/data/general/DatasetGroup,4,63,        super();,3.48201,0,-1,0
org/jfree/data/general/DatasetGroup,4,64,"        this.id = ""NOID"";",3.48201,0,-1,0
org/jfree/data/general/DatasetGroup,4,65,    },3.48201,0,-1,0
org/jfree/chart/axis/Axis,4,307,    protected Axis(String label) {,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,309,        this.label = label;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,310,        this.visible = DEFAULT_AXIS_VISIBLE;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,311,        this.labelFont = DEFAULT_AXIS_LABEL_FONT;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,312,        this.labelPaint = DEFAULT_AXIS_LABEL_PAINT;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,313,        this.labelInsets = DEFAULT_AXIS_LABEL_INSETS;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,314,        this.labelAngle = 0.0;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,315,        this.labelToolTip = null;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,316,        this.labelURL = null;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,318,        this.axisLineVisible = true;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,319,        this.axisLinePaint = DEFAULT_AXIS_LINE_PAINT;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,320,        this.axisLineStroke = DEFAULT_AXIS_LINE_STROKE;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,322,        this.tickLabelsVisible = DEFAULT_TICK_LABELS_VISIBLE;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,323,        this.tickLabelFont = DEFAULT_TICK_LABEL_FONT;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,324,        this.tickLabelPaint = DEFAULT_TICK_LABEL_PAINT;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,325,        this.tickLabelInsets = DEFAULT_TICK_LABEL_INSETS;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,327,        this.tickMarksVisible = DEFAULT_TICK_MARKS_VISIBLE;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,328,        this.tickMarkStroke = DEFAULT_TICK_MARK_STROKE;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,329,        this.tickMarkPaint = DEFAULT_TICK_MARK_PAINT;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,330,        this.tickMarkInsideLength = DEFAULT_TICK_MARK_INSIDE_LENGTH;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,331,        this.tickMarkOutsideLength = DEFAULT_TICK_MARK_OUTSIDE_LENGTH;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,333,        this.minorTickMarksVisible = false;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,334,        this.minorTickMarkInsideLength = 0.0f;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,335,        this.minorTickMarkOutsideLength = 2.0f;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,337,        this.plot = null;,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,339,        this.listenerList = new EventListenerList();,3.29252,0,-1,0
org/jfree/chart/axis/Axis,4,341,    },3.29252,0,-1,0
org/jfree/chart/util/ObjectList,4,85,        return super.get(index);,3.06329,0,-1,0
org/jfree/chart/util/ObjectList,4,95,"        super.set(index, object);",3.06329,0,-1,0
org/jfree/chart/util/ObjectList,4,96,    },3.06329,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,72,    private PlotOrientation(String name) {,3.00621,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,73,        this.name = name;,3.00621,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,74,    },3.00621,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,57,    public static final PlotOrientation HORIZONTAL,3.00621,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,61,    public static final PlotOrientation VERTICAL,3.00621,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,111,            result = this.objects[index];,2.95122,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,123,        if (index < 0) {,2.95122,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,126,        if (index >= this.objects.length) {,2.95122,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,131,        this.objects[index] = object;,2.95122,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,132,"        this.size = Math.max(this.size, index + 1);",2.95122,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,133,    },2.95122,0,-1,0
org/jfree/chart/event/ChartChangeEvent,4,131,        this.type = type;,2.95122,0,-1,0
org/jfree/chart/event/ChartChangeEvent,4,132,    },2.95122,0,-1,0
org/jfree/chart/axis/Axis,4,143,"    public static final Font DEFAULT_AXIS_LABEL_FONT = new Font(""Tahoma"",",2.91566,0,-1,0
org/jfree/chart/axis/Axis,4,147,    public static final Paint DEFAULT_AXIS_LABEL_PAINT = Color.black;,2.91566,0,-1,0
org/jfree/chart/axis/Axis,4,150,    public static final RectangleInsets DEFAULT_AXIS_LABEL_INSETS,2.91566,0,-1,0
org/jfree/chart/axis/Axis,4,154,    public static final Paint DEFAULT_AXIS_LINE_PAINT = Color.gray;,2.91566,0,-1,0
org/jfree/chart/axis/Axis,4,157,    public static final Stroke DEFAULT_AXIS_LINE_STROKE = new BasicStroke(1.0f);,2.91566,0,-1,0
org/jfree/chart/axis/Axis,4,163,"    public static final Font DEFAULT_TICK_LABEL_FONT = new Font(""Tahoma"",",2.91566,0,-1,0
org/jfree/chart/axis/Axis,4,167,    public static final Paint DEFAULT_TICK_LABEL_PAINT = Color.black;,2.91566,0,-1,0
org/jfree/chart/axis/Axis,4,170,    public static final RectangleInsets DEFAULT_TICK_LABEL_INSETS,2.91566,0,-1,0
org/jfree/chart/axis/Axis,4,177,    public static final Stroke DEFAULT_TICK_MARK_STROKE = new BasicStroke(1);,2.91566,0,-1,0
org/jfree/chart/axis/Axis,4,180,    public static final Paint DEFAULT_TICK_MARK_PAINT = Color.gray;,2.91566,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,109,        Object result = null;,2.91566,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,110,        if (index >= 0 && index < this.size) {,2.91566,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,113,        return result;,2.91566,0,-1,0
org/jfree/chart/plot/Plot,4,449,        return this.parent;,2.78161,0,-1,0
org/jfree/data/general/DatasetChangeEvent,4,71,        super(source);,2.70391,0,-1,0
org/jfree/data/general/DatasetChangeEvent,4,72,        this.dataset = dataset;,2.70391,0,-1,0
org/jfree/data/general/DatasetChangeEvent,4,73,    },2.70391,0,-1,0
org/jfree/chart/plot/Plot,4,962,        if (!this.notify) {,2.63043,0,-1,0
org/jfree/chart/plot/Plot,4,965,        Object[] listeners = this.listenerList.getListenerList();,2.63043,0,-1,0
org/jfree/chart/plot/Plot,4,966,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,2.63043,0,-1,0
org/jfree/chart/plot/Plot,4,971,    },2.63043,0,-1,0
org/jfree/chart/event/PlotChangeEvent,4,64,        super(plot);,2.63043,0,-1,0
org/jfree/chart/event/PlotChangeEvent,4,65,        this.plot = plot;,2.63043,0,-1,0
org/jfree/chart/event/PlotChangeEvent,4,66,    },2.63043,0,-1,0
org/jfree/chart/plot/Plot,4,299,    protected Plot() {,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,270,    private int backgroundImageAlignment = Align.FIT;,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,273,    private float backgroundImageAlpha = 0.5f;,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,301,        this.parent = null;,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,302,        this.insets = DEFAULT_INSETS;,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,303,        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,304,        this.backgroundAlpha = DEFAULT_BACKGROUND_ALPHA;,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,305,        this.backgroundImage = null;,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,306,        this.outlineVisible = true;,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,307,        this.outlineStroke = DEFAULT_OUTLINE_STROKE;,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,308,        this.outlinePaint = DEFAULT_OUTLINE_PAINT;,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,309,        this.foregroundAlpha = DEFAULT_FOREGROUND_ALPHA;,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,311,        this.noDataMessage = null;,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,312,"        this.noDataMessageFont = new Font(""Tahoma"", Font.PLAIN, 12);",2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,313,        this.noDataMessagePaint = Color.black;,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,315,        this.drawingSupplier = new DefaultDrawingSupplier();,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,317,        this.notify = true;,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,318,        this.listenerList = new EventListenerList();,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,320,    },2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,197,    public static final Number ZERO = new Integer(0);,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,200,    public static final RectangleInsets DEFAULT_INSETS,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,204,    public static final Stroke DEFAULT_OUTLINE_STROKE = new BasicStroke(0.5f);,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,207,    public static final Paint DEFAULT_OUTLINE_PAINT = Color.gray;,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,216,    public static final Paint DEFAULT_BACKGROUND_PAINT = Color.LIGHT_GRAY;,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,225,    public static final Shape DEFAULT_LEGEND_ITEM_BOX,2.57447,0,-1,0
org/jfree/chart/plot/Plot,4,229,    public static final Shape DEFAULT_LEGEND_ITEM_CIRCLE,2.57447,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,4,122,        if (noCodeBaseClassLoader != null) {,2.54737,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,4,128,            return ResourceBundle.getBundle(baseName);,2.54737,0,-1,0
org/jfree/chart/util/RectangleInsets,4,102,"        this(UnitType.ABSOLUTE, top, left, bottom, right);",2.14159,0,-1,0
org/jfree/chart/util/RectangleInsets,4,103,    },2.14159,0,-1,0
org/jfree/chart/util/RectangleInsets,4,116,"                           double bottom, double right) {",2.14159,0,-1,0
org/jfree/chart/util/RectangleInsets,4,117,        if (unitType == null) {,2.14159,0,-1,0
org/jfree/chart/util/RectangleInsets,4,120,        this.unitType = unitType;,2.14159,0,-1,0
org/jfree/chart/util/RectangleInsets,4,121,        this.top = top;,2.14159,0,-1,0
org/jfree/chart/util/RectangleInsets,4,122,        this.bottom = bottom;,2.14159,0,-1,0
org/jfree/chart/util/RectangleInsets,4,123,        this.left = left;,2.14159,0,-1,0
org/jfree/chart/util/RectangleInsets,4,124,        this.right = right;,2.14159,0,-1,0
org/jfree/chart/util/RectangleInsets,4,125,    },2.14159,0,-1,0
org/jfree/chart/util/RectangleInsets,4,65,    public static final RectangleInsets ZERO_INSETS = new RectangleInsets(,2.14159,0,-1,0
org/jfree/chart/util/UnitType,4,69,    private UnitType(String name) {,2.07725,0,-1,0
org/jfree/chart/util/UnitType,4,70,        this.name = name;,2.07725,0,-1,0
org/jfree/chart/util/UnitType,4,71,    },2.07725,0,-1,0
org/jfree/chart/util/UnitType,4,56,"    public static final UnitType ABSOLUTE = new UnitType(""UnitType.ABSOLUTE"");",2.07725,0,-1,0
org/jfree/chart/util/UnitType,4,59,"    public static final UnitType RELATIVE = new UnitType(""UnitType.RELATIVE"");",2.07725,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,149,        return this.size;,1.77941,0,-1,0
org/jfree/chart/event/ChartChangeEvent,4,69,"        this(source, null, ChartChangeEventType.GENERAL);",1.56634,0,-1,0
org/jfree/chart/event/ChartChangeEvent,4,70,    },1.56634,0,-1,0
org/jfree/chart/event/ChartChangeEvent,4,93,        super(source);,1.56634,0,-1,0
org/jfree/chart/event/ChartChangeEvent,4,94,        this.chart = chart;,1.56634,0,-1,0
org/jfree/chart/event/ChartChangeEvent,4,95,        this.type = type;,1.56634,0,-1,0
org/jfree/chart/event/ChartChangeEvent,4,96,    },1.56634,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,89,"        this(DEFAULT_PREFIX, DEFAULT_SERIES_PARAMETER, DEFAULT_ITEM_PARAMETER);",1.56522,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,90,    },1.56522,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,114,                                  String itemParameterName) {,1.56522,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,115,        if (prefix == null) {,1.56522,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,118,        if (seriesParameterName == null) {,1.56522,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,122,        if (itemParameterName == null) {,1.56522,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,126,        this.prefix = prefix;,1.56522,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,127,        this.seriesParameterName = seriesParameterName;,1.56522,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,128,        this.itemParameterName = itemParameterName;,1.56522,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,129,    },1.56522,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,77,        this(DEFAULT_INITIAL_CAPACITY);,1.45345,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,78,    },1.45345,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,86,"        this (initialCapacity, initialCapacity);",1.45345,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,87,    },1.45345,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,95,"    protected AbstractObjectList(int initialCapacity, int increment) {",1.45345,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,68,    private int size = 0;,1.45345,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,71,    private int increment = DEFAULT_INITIAL_CAPACITY;,1.45345,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,96,        this.objects = new Object[initialCapacity];,1.45345,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,97,        this.increment = increment;,1.45345,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,98,    },1.45345,0,-1,0
org/jfree/chart/util/ObjectList,4,58,    public ObjectList() {,1.45345,0,-1,0
org/jfree/chart/util/ObjectList,4,59,    },1.45345,0,-1,0
org/jfree/chart/util/ShapeList,4,59,        super();,0.17073,0,-1,0
org/jfree/chart/util/ShapeList,4,60,    },0.17073,0,-1,0
org/jfree/chart/util/StrokeList,4,58,        super();,0.17073,0,-1,0
org/jfree/chart/util/StrokeList,4,59,    },0.17073,0,-1,0
org/jfree/chart/util/PaintList,4,59,        super();,0.17073,0,-1,0
org/jfree/chart/util/PaintList,4,60,    },0.17073,0,-1,0
org/jfree/chart/util/BooleanList,4,60,    public BooleanList() {,0.17073,0,-1,0
org/jfree/chart/util/BooleanList,4,61,    },0.17073,0,-1,0
org/jfree/chart/JFreeChart,4,738,        if ((index < 0) || (index >= getSubtitleCount())) {,0.04348,0,-1,0
org/jfree/chart/JFreeChart,4,741,        return (Title) this.subtitles.get(index);,0.04348,0,-1,0
org/jfree/chart/JFreeChart,4,417,            if (titleFont == null) {,0.03448,0,-1,0
org/jfree/chart/JFreeChart,4,420,"            this.title = new TextTitle(title, titleFont);",0.03448,0,-1,0
org/jfree/chart/JFreeChart,4,421,            this.title.addChangeListener(this);,0.03448,0,-1,0
org/jfree/chart/JFreeChart,4,570,        return this.title;,0.03448,0,-1,0
org/jfree/chart/JFreeChart,4,1572,        event.setChart(this);,0.03448,0,-1,0
org/jfree/chart/JFreeChart,4,1573,        notifyListeners(event);,0.03448,0,-1,0
org/jfree/chart/JFreeChart,4,1574,    },0.03448,0,-1,0
org/jfree/chart/title/Title,4,397,                if (listeners[i] == TitleChangeListener.class) {,0.03448,0,-1,0
org/jfree/chart/title/Title,4,398,                    ((TitleChangeListener) listeners[i + 1]).titleChanged(,0.03448,0,-1,0
org/jfree/chart/plot/Plot,4,553,        return this.backgroundPaint;,0.03448,0,-1,0
org/jfree/chart/plot/Plot,4,566,        if (paint == null) {,0.03448,0,-1,0
org/jfree/chart/plot/Plot,4,573,            if (this.backgroundPaint != null) {,0.03448,0,-1,0
org/jfree/chart/plot/Plot,4,574,                if (this.backgroundPaint.equals(paint)) {,0.03448,0,-1,0
org/jfree/chart/plot/Plot,4,575,                    return;  // nothing to do,0.03448,0,-1,0
org/jfree/chart/plot/Plot,4,642,        this.drawingSupplier = supplier;,0.03448,0,-1,0
org/jfree/chart/plot/Plot,4,643,        fireChangeEvent();,0.03448,0,-1,0
org/jfree/chart/plot/Plot,4,644,    },0.03448,0,-1,0
org/jfree/chart/plot/Plot,4,846,        if (paint == null) {,0.03448,0,-1,0
org/jfree/chart/plot/Plot,4,853,            if (this.outlinePaint != null) {,0.03448,0,-1,0
org/jfree/chart/plot/Plot,4,854,                if (this.outlinePaint.equals(paint)) {,0.03448,0,-1,0
org/jfree/chart/plot/Plot,4,858,            this.outlinePaint = paint;,0.03448,0,-1,0
org/jfree/chart/plot/Plot,4,859,            fireChangeEvent();,0.03448,0,-1,0
org/jfree/chart/plot/Plot,4,861,    },0.03448,0,-1,0
org/jfree/chart/JFreeChart,4,406,            LegendTitle legend = new LegendTitle(this.plot);,0.03419,0,-1,0
org/jfree/chart/JFreeChart,4,407,"            legend.setMargin(new RectangleInsets(1.0, 1.0, 1.0, 1.0));",0.03419,0,-1,0
org/jfree/chart/JFreeChart,4,408,            legend.setFrame(new LineBorder());,0.03419,0,-1,0
org/jfree/chart/JFreeChart,4,409,            legend.setBackgroundPaint(Color.white);,0.03419,0,-1,0
org/jfree/chart/JFreeChart,4,410,            legend.setPosition(RectangleEdge.BOTTOM);,0.03419,0,-1,0
org/jfree/chart/JFreeChart,4,411,            this.subtitles.add(legend);,0.03419,0,-1,0
org/jfree/chart/JFreeChart,4,412,            legend.addChangeListener(this);,0.03419,0,-1,0
org/jfree/chart/title/Title,4,254,        if (position == null) {,0.03419,0,-1,0
org/jfree/chart/title/Title,4,257,        if (this.position != position) {,0.03419,0,-1,0
org/jfree/chart/title/Title,4,258,            this.position = position;,0.03419,0,-1,0
org/jfree/chart/title/Title,4,259,            notifyListeners(new TitleChangeEvent(this));,0.03419,0,-1,0
org/jfree/chart/title/Title,4,261,    },0.03419,0,-1,0
org/jfree/chart/block/AbstractBlock,4,209,        if (margin == null) {,0.03419,0,-1,0
org/jfree/chart/block/AbstractBlock,4,212,        this.margin = margin;,0.03419,0,-1,0
org/jfree/chart/block/AbstractBlock,4,213,    },0.03419,0,-1,0
org/jfree/chart/block/AbstractBlock,4,251,        if (frame == null) {,0.03419,0,-1,0
org/jfree/chart/block/AbstractBlock,4,254,        this.frame = frame;,0.03419,0,-1,0
org/jfree/chart/block/AbstractBlock,4,255,    },0.03419,0,-1,0
org/jfree/chart/JFreeChart,4,725,        return this.subtitles.size();,0.0339,0,-1,0
org/jfree/chart/JFreeChart,4,820,        return this.plot;,0.0339,0,-1,0
org/jfree/chart/JFreeChart,4,1583,        event.setChart(this);,0.0339,0,-1,0
org/jfree/chart/JFreeChart,4,1584,        notifyListeners(event);,0.0339,0,-1,0
org/jfree/chart/JFreeChart,4,1585,    },0.0339,0,-1,0
org/jfree/chart/event/ChartChangeEvent,4,113,        this.chart = chart;,0.0339,0,-1,0
org/jfree/chart/event/ChartChangeEvent,4,114,    },0.0339,0,-1,0
org/jfree/chart/JFreeChart,4,972,        if (this.backgroundPaint != null) {,0.03333,0,-1,0
org/jfree/chart/JFreeChart,4,973,            if (!this.backgroundPaint.equals(paint)) {,0.03333,0,-1,0
org/jfree/chart/JFreeChart,4,985,    },0.03333,0,-1,0
org/jfree/chart/plot/Plot,4,967,            if (listeners[i] == PlotChangeListener.class) {,0.03333,0,-1,0
org/jfree/chart/plot/Plot,4,968,                ((PlotChangeListener) listeners[i + 1]).plotChanged(event);,0.03333,0,-1,0
org/jfree/chart/title/Title,4,139,"        this(Title.DEFAULT_POSITION,",0.03306,0,-1,0
org/jfree/chart/title/Title,4,142,    },0.03306,0,-1,0
org/jfree/chart/JFreeChart,4,1514,        if (this.notify) {,0.03279,0,-1,0
org/jfree/chart/JFreeChart,4,1515,            Object[] listeners = this.changeListeners.getListenerList();,0.03279,0,-1,0
org/jfree/chart/JFreeChart,4,1516,            for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.03279,0,-1,0
org/jfree/chart/JFreeChart,4,1523,    },0.03279,0,-1,0
org/jfree/chart/plot/Plot,4,618,        DrawingSupplier result = null;,0.02878,0,-1,0
org/jfree/chart/plot/Plot,4,619,        Plot p = getParent();,0.02878,0,-1,0
org/jfree/chart/plot/Plot,4,620,        if (p != null) {,0.02878,0,-1,0
org/jfree/chart/plot/Plot,4,624,            result = this.drawingSupplier;,0.02878,0,-1,0
org/jfree/chart/plot/Plot,4,626,        return result;,0.02878,0,-1,0
org/jfree/chart/JFreeChart,4,377,                      boolean createLegend) {,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,311,    private int backgroundImageAlignment = Align.FIT;,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,314,    private float backgroundImageAlpha = 0.5f;,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,379,        if (plot == null) {,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,384,        this.progressListeners = new EventListenerList();,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,385,        this.changeListeners = new EventListenerList();,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,386,        this.notify = true;  // default is to notify listeners when the,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,389,        this.renderingHints = new RenderingHints(,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,393,        this.borderVisible = false;,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,394,        this.borderStroke = new BasicStroke(1.0f);,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,395,        this.borderPaint = Color.black;,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,397,        this.padding = RectangleInsets.ZERO_INSETS;,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,399,        this.plot = plot;,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,400,        plot.addChangeListener(this);,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,402,        this.subtitles = new ArrayList();,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,405,        if (createLegend) {,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,416,        if (title != null) {,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,424,        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,426,        this.backgroundImage = DEFAULT_BACKGROUND_IMAGE;,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,427,        this.backgroundImageAlignment = DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,428,        this.backgroundImageAlpha = DEFAULT_BACKGROUND_IMAGE_ALPHA;,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,430,    },0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,256,    public static final ProjectInfo INFO = new JFreeChartInfo();,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,259,"    public static final Font DEFAULT_TITLE_FONT = new Font(""Tahoma"", Font.BOLD,",0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,263,    public static final Paint DEFAULT_BACKGROUND_PAINT = Color.WHITE;,0.02837,0,-1,0
org/jfree/chart/JFreeChart,4,266,    public static final Image DEFAULT_BACKGROUND_IMAGE = null;,0.02837,0,-1,0
org/jfree/chart/title/Title,4,374,"        this.listenerList.add(TitleChangeListener.class, listener);",0.02837,0,-1,0
org/jfree/chart/title/Title,4,375,    },0.02837,0,-1,0
org/jfree/chart/title/Title,4,394,        if (this.notify) {,0.02797,0,-1,0
org/jfree/chart/title/Title,4,395,            Object[] listeners = this.listenerList.getListenerList();,0.02797,0,-1,0
org/jfree/chart/title/Title,4,396,            for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.02797,0,-1,0
org/jfree/chart/title/Title,4,403,    },0.02797,0,-1,0
org/jfree/chart/plot/PiePlot,4,1604,        this.labelGenerator = generator;,0.02778,0,-1,0
org/jfree/chart/plot/PiePlot,4,1605,        fireChangeEvent();,0.02778,0,-1,0
org/jfree/chart/plot/PiePlot,4,1606,    },0.02778,0,-1,0
org/jfree/chart/plot/PiePlot,4,542,            dataset.addChangeListener(this);,0.02703,0,-1,0
org/jfree/chart/plot/PiePlot,4,2102,        this.toolTipGenerator = generator;,0.02703,0,-1,0
org/jfree/chart/plot/PiePlot,4,2103,        fireChangeEvent();,0.02703,0,-1,0
org/jfree/chart/plot/PiePlot,4,2104,    },0.02703,0,-1,0
org/jfree/chart/title/Title,4,180,                    RectangleInsets padding) {,0.02685,0,-1,0
org/jfree/chart/title/Title,4,183,        if (position == null) {,0.02685,0,-1,0
org/jfree/chart/title/Title,4,186,        if (horizontalAlignment == null) {,0.02685,0,-1,0
org/jfree/chart/title/Title,4,191,        if (verticalAlignment == null) {,0.02685,0,-1,0
org/jfree/chart/title/Title,4,195,        if (padding == null) {,0.02685,0,-1,0
org/jfree/chart/title/Title,4,199,        this.visible = true;,0.02685,0,-1,0
org/jfree/chart/title/Title,4,200,        this.position = position;,0.02685,0,-1,0
org/jfree/chart/title/Title,4,201,        this.horizontalAlignment = horizontalAlignment;,0.02685,0,-1,0
org/jfree/chart/title/Title,4,202,        this.verticalAlignment = verticalAlignment;,0.02685,0,-1,0
org/jfree/chart/title/Title,4,203,        setPadding(padding);,0.02685,0,-1,0
org/jfree/chart/title/Title,4,204,        this.listenerList = new EventListenerList();,0.02685,0,-1,0
org/jfree/chart/title/Title,4,205,        this.notify = true;,0.02685,0,-1,0
org/jfree/chart/title/Title,4,207,    },0.02685,0,-1,0
org/jfree/chart/title/Title,4,97,    public static final RectangleEdge DEFAULT_POSITION = RectangleEdge.TOP;,0.02685,0,-1,0
org/jfree/chart/title/Title,4,101,            DEFAULT_HORIZONTAL_ALIGNMENT = HorizontalAlignment.CENTER;,0.02685,0,-1,0
org/jfree/chart/title/Title,4,105,            DEFAULT_VERTICAL_ALIGNMENT = VerticalAlignment.CENTER;,0.02685,0,-1,0
org/jfree/chart/title/Title,4,108,    public static final RectangleInsets DEFAULT_PADDING = new RectangleInsets(,0.02685,0,-1,0
org/jfree/chart/block/AbstractBlock,4,109,    protected AbstractBlock() {,0.02685,0,-1,0
org/jfree/chart/block/AbstractBlock,4,110,        this.id = null;,0.02685,0,-1,0
org/jfree/chart/block/AbstractBlock,4,111,        this.width = 0.0;,0.02685,0,-1,0
org/jfree/chart/block/AbstractBlock,4,112,        this.height = 0.0;,0.02685,0,-1,0
org/jfree/chart/block/AbstractBlock,4,113,        this.bounds = new Rectangle2D.Float();,0.02685,0,-1,0
org/jfree/chart/block/AbstractBlock,4,114,        this.margin = RectangleInsets.ZERO_INSETS;,0.02685,0,-1,0
org/jfree/chart/block/AbstractBlock,4,115,        this.frame = BlockBorder.NONE;,0.02685,0,-1,0
org/jfree/chart/block/AbstractBlock,4,116,        this.padding = RectangleInsets.ZERO_INSETS;,0.02685,0,-1,0
org/jfree/chart/block/AbstractBlock,4,117,    },0.02685,0,-1,0
org/jfree/chart/block/AbstractBlock,4,277,        if (padding == null) {,0.02685,0,-1,0
org/jfree/chart/block/AbstractBlock,4,280,        this.padding = padding;,0.02685,0,-1,0
org/jfree/chart/block/AbstractBlock,4,281,    },0.02685,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,76,    private VerticalAlignment(String name) {,0.02685,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,77,        this.name = name;,0.02685,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,78,    },0.02685,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,57,    public static final VerticalAlignment TOP,0.02685,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,61,    public static final VerticalAlignment BOTTOM,0.02685,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,65,    public static final VerticalAlignment CENTER,0.02685,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,76,    private HorizontalAlignment(String name) {,0.02685,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,77,        this.name = name;,0.02685,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,78,    },0.02685,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,57,    public static final HorizontalAlignment LEFT,0.02685,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,61,    public static final HorizontalAlignment RIGHT,0.02685,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,65,    public static final HorizontalAlignment CENTER,0.02685,0,-1,0
org/jfree/chart/plot/Plot,4,940,"        this.listenerList.add(PlotChangeListener.class, listener);",0.02649,0,-1,0
org/jfree/chart/plot/Plot,4,941,    },0.02649,0,-1,0
org/jfree/chart/util/RectangleEdge,4,80,    private RectangleEdge(String name) {,0.02649,0,-1,0
org/jfree/chart/util/RectangleEdge,4,81,        this.name = name;,0.02649,0,-1,0
org/jfree/chart/util/RectangleEdge,4,82,    },0.02649,0,-1,0
org/jfree/chart/util/RectangleEdge,4,57,    public static final RectangleEdge TOP = new RectangleEdge(,0.02649,0,-1,0
org/jfree/chart/util/RectangleEdge,4,61,    public static final RectangleEdge BOTTOM = new RectangleEdge(,0.02649,0,-1,0
org/jfree/chart/util/RectangleEdge,4,65,    public static final RectangleEdge LEFT = new RectangleEdge(,0.02649,0,-1,0
org/jfree/chart/util/RectangleEdge,4,69,    public static final RectangleEdge RIGHT = new RectangleEdge(,0.02649,0,-1,0
org/jfree/chart/util/PaintMap,4,134,        this.store.clear();,0.02632,0,-1,0
org/jfree/chart/util/PaintMap,4,135,    },0.02632,0,-1,0
org/jfree/chart/plot/PiePlot,4,989,        this.sectionPaintMap.clear();,0.02632,0,-1,0
org/jfree/chart/plot/PiePlot,4,990,        if (notify) {,0.02632,0,-1,0
org/jfree/chart/plot/PiePlot,4,993,    },0.02632,0,-1,0
org/jfree/chart/plot/PiePlot,4,1032,        return this.autoPopulateSectionPaint;,0.02564,0,-1,0
org/jfree/chart/plot/PiePlot,4,1242,        return this.autoPopulateSectionOutlinePaint;,0.02564,0,-1,0
org/jfree/chart/plot/PiePlot,4,1425,        return this.autoPopulateSectionOutlineStroke;,0.02564,0,-1,0
org/jfree/chart/plot/PiePlot,4,1710,        if (style == null) {,0.02564,0,-1,0
org/jfree/chart/plot/PiePlot,4,1713,        this.labelLinkStyle = style;,0.02564,0,-1,0
org/jfree/chart/plot/PiePlot,4,1714,        fireChangeEvent();,0.02564,0,-1,0
org/jfree/chart/plot/PiePlot,4,1715,    },0.02564,0,-1,0
org/jfree/chart/plot/PiePlot,4,1764,        if (paint == null) {,0.02564,0,-1,0
org/jfree/chart/plot/PiePlot,4,1767,        this.labelLinkPaint = paint;,0.02564,0,-1,0
org/jfree/chart/plot/PiePlot,4,1768,        fireChangeEvent();,0.02564,0,-1,0
org/jfree/chart/plot/PiePlot,4,1769,    },0.02564,0,-1,0
org/jfree/chart/plot/PiePlot,4,1833,        if (font == null) {,0.02564,0,-1,0
org/jfree/chart/plot/PiePlot,4,1836,        this.labelFont = font;,0.02564,0,-1,0
org/jfree/chart/plot/PiePlot,4,1837,        fireChangeEvent();,0.02564,0,-1,0
org/jfree/chart/plot/PiePlot,4,1838,    },0.02564,0,-1,0
org/jfree/chart/plot/Plot,4,518,"        setInsets(insets, true);",0.02326,0,-1,0
org/jfree/chart/plot/Plot,4,519,    },0.02326,0,-1,0
org/jfree/chart/plot/Plot,4,539,                fireChangeEvent();,0.02326,0,-1,0
org/jfree/chart/plot/Plot,4,979,        notifyListeners(new PlotChangeEvent(this));,0.02299,0,-1,0
org/jfree/chart/plot/Plot,4,980,    },0.02299,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,106,    private RectangleAnchor(final String name) {,0.02273,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,107,        this.name = name;,0.02273,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,108,    },0.02273,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,63,    public static final RectangleAnchor CENTER,0.02273,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,67,    public static final RectangleAnchor TOP,0.02273,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,71,    public static final RectangleAnchor TOP_LEFT,0.02273,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,75,    public static final RectangleAnchor TOP_RIGHT,0.02273,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,79,    public static final RectangleAnchor BOTTOM,0.02273,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,83,    public static final RectangleAnchor BOTTOM_LEFT,0.02273,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,87,    public static final RectangleAnchor BOTTOM_RIGHT,0.02273,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,91,    public static final RectangleAnchor LEFT,0.02273,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,95,    public static final RectangleAnchor RIGHT,0.02273,0,-1,0
org/jfree/chart/plot/Plot,4,533,        if (insets == null) {,0.02083,0,-1,0
org/jfree/chart/plot/Plot,4,536,        if (!this.insets.equals(insets)) {,0.02083,0,-1,0
org/jfree/chart/plot/Plot,4,537,            this.insets = insets;,0.02083,0,-1,0
org/jfree/chart/plot/Plot,4,538,            if (notify) {,0.02083,0,-1,0
org/jfree/chart/plot/Plot,4,543,    },0.02083,0,-1,0
org/jfree/chart/util/RectangleInsets,4,192,            return false;,0.01961,0,-1,0
org/jfree/chart/util/PaintMap,4,78,    public PaintMap() {,0.01852,0,-1,0
org/jfree/chart/util/PaintMap,4,79,        this.store = new HashMap();,0.01852,0,-1,0
org/jfree/chart/util/PaintMap,4,80,    },0.01852,0,-1,0
org/jfree/chart/util/Rotation,4,81,"    private Rotation(final String name, final double factor) {",0.01852,0,-1,0
org/jfree/chart/util/Rotation,4,82,        this.name = name;,0.01852,0,-1,0
org/jfree/chart/util/Rotation,4,83,        this.factor = factor;,0.01852,0,-1,0
org/jfree/chart/util/Rotation,4,84,    },0.01852,0,-1,0
org/jfree/chart/util/Rotation,4,59,    public static final Rotation CLOCKWISE,0.01852,0,-1,0
org/jfree/chart/util/Rotation,4,63,    public static final Rotation ANTICLOCKWISE,0.01852,0,-1,0
org/jfree/chart/util/StrokeMap,4,76,    public StrokeMap() {,0.01852,0,-1,0
org/jfree/chart/util/StrokeMap,4,77,        this.store = new TreeMap();,0.01852,0,-1,0
org/jfree/chart/util/StrokeMap,4,78,    },0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,539,        super();,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,355,    private transient Paint shadowPaint = Color.gray;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,358,    private double shadowXOffset = 4.0f;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,361,    private double shadowYOffset = 4.0f;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,404,    private boolean simpleLabels = true;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,422,    private double maximumLabelWidth = 0.14;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,428,    private double labelGap = 0.025;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,438,    private PieLabelLinkStyle labelLinkStyle = PieLabelLinkStyle.STANDARD;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,441,    private double labelLinkMargin = 0.025;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,444,    private transient Paint labelLinkPaint = Color.black;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,447,    private transient Stroke labelLinkStroke = new BasicStroke(0.5f);,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,540,        this.dataset = dataset;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,541,        if (dataset != null) {,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,544,        this.pieIndex = 0;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,546,        this.interiorGap = DEFAULT_INTERIOR_GAP;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,547,        this.circular = true;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,548,        this.startAngle = DEFAULT_START_ANGLE;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,549,        this.direction = Rotation.CLOCKWISE;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,550,        this.minimumArcAngleToDraw = DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,552,        this.sectionPaintMap = new PaintMap();,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,553,        this.baseSectionPaint = Color.gray;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,554,        this.autoPopulateSectionPaint = true;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,556,        this.sectionOutlinesVisible = true;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,557,        this.sectionOutlinePaintMap = new PaintMap();,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,558,        this.baseSectionOutlinePaint = DEFAULT_OUTLINE_PAINT;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,559,        this.autoPopulateSectionOutlinePaint = false;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,561,        this.sectionOutlineStrokeMap = new StrokeMap();,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,562,        this.baseSectionOutlineStroke = DEFAULT_OUTLINE_STROKE;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,563,        this.autoPopulateSectionOutlineStroke = false;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,565,        this.explodePercentages = new TreeMap();,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,567,        this.labelGenerator = new StandardPieSectionLabelGenerator();,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,568,        this.labelFont = DEFAULT_LABEL_FONT;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,569,        this.labelPaint = DEFAULT_LABEL_PAINT;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,570,        this.labelBackgroundPaint = DEFAULT_LABEL_BACKGROUND_PAINT;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,571,        this.labelOutlinePaint = DEFAULT_LABEL_OUTLINE_PAINT;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,572,        this.labelOutlineStroke = DEFAULT_LABEL_OUTLINE_STROKE;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,573,        this.labelShadowPaint = DEFAULT_LABEL_SHADOW_PAINT;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,574,        this.labelLinksVisible = true;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,575,        this.labelDistributor = new PieLabelDistributor(0);,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,577,        this.simpleLabels = false;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,578,"        this.simpleLabelOffset = new RectangleInsets(UnitType.RELATIVE, 0.18,",0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,580,"        this.labelPadding = new RectangleInsets(2, 2, 2, 2);",0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,582,        this.toolTipGenerator = null;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,583,        this.urlGenerator = null;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,584,        this.legendLabelGenerator = new StandardPieSectionLabelGenerator();,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,585,        this.legendLabelToolTipGenerator = null;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,586,        this.legendLabelURLGenerator = null;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,587,        this.legendItemShape = Plot.DEFAULT_LEGEND_ITEM_CIRCLE;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,589,        this.ignoreNullValues = false;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,590,        this.ignoreZeroValues = false;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,591,    },0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,261,"    public static final Font DEFAULT_LABEL_FONT = new Font(""Tahoma"",",0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,265,    public static final Paint DEFAULT_LABEL_PAINT = Color.black;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,268,"    public static final Paint DEFAULT_LABEL_BACKGROUND_PAINT = new Color(255,",0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,272,    public static final Paint DEFAULT_LABEL_OUTLINE_PAINT = Color.black;,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,275,    public static final Stroke DEFAULT_LABEL_OUTLINE_STROKE = new BasicStroke(,0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,279,"    public static final Paint DEFAULT_LABEL_SHADOW_PAINT = new Color(151, 151,",0.01852,0,-1,0
org/jfree/chart/plot/PiePlot,4,502,    protected static ResourceBundle localizationResources =,0.01852,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,4,60,    public AbstractPieLabelDistributor() {,0.01852,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,4,61,        this.labels = new java.util.ArrayList();,0.01852,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,4,62,    },0.01852,0,-1,0
org/jfree/chart/util/RectangleInsets,4,184,        if (!(obj instanceof RectangleInsets)) {,0.01351,0,-1,0
org/jfree/chart/util/RectangleInsets,4,187,        final RectangleInsets that = (RectangleInsets) obj;,0.01351,0,-1,0
org/jfree/chart/util/RectangleInsets,4,188,        if (that.unitType != this.unitType) {,0.01351,0,-1,0
org/jfree/chart/util/RectangleInsets,4,191,        if (this.left != that.left) {,0.01351,0,-1,0
org/jfree/chart/util/RectangleInsets,4,181,        if (obj == this) {,0.01176,0,-1,0
org/jfree/chart/axis/Axis,4,431,        if (font == null) {,0.0099,0,-1,0
org/jfree/chart/axis/Axis,4,434,        if (!this.labelFont.equals(font)) {,0.0099,0,-1,0
org/jfree/chart/axis/Axis,4,435,            this.labelFont = font;,0.0099,0,-1,0
org/jfree/chart/axis/Axis,4,436,            fireChangeEvent();,0.0099,0,-1,0
org/jfree/chart/axis/Axis,4,438,    },0.0099,0,-1,0
org/jfree/chart/axis/Axis,4,460,        if (paint == null) {,0.0099,0,-1,0
org/jfree/chart/axis/Axis,4,463,        this.labelPaint = paint;,0.0099,0,-1,0
org/jfree/chart/axis/Axis,4,464,        fireChangeEvent();,0.0099,0,-1,0
org/jfree/chart/axis/Axis,4,465,    },0.0099,0,-1,0
org/jfree/chart/axis/Axis,4,761,        if (font == null) {,0.0099,0,-1,0
org/jfree/chart/axis/Axis,4,765,        if (!this.tickLabelFont.equals(font)) {,0.0099,0,-1,0
org/jfree/chart/axis/Axis,4,770,    },0.0099,0,-1,0
org/jfree/chart/axis/Axis,4,792,        if (paint == null) {,0.0099,0,-1,0
org/jfree/chart/axis/Axis,4,795,        this.tickLabelPaint = paint;,0.0099,0,-1,0
org/jfree/chart/axis/Axis,4,796,        fireChangeEvent();,0.0099,0,-1,0
org/jfree/chart/axis/Axis,4,797,    },0.0099,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,139,"        Arrays.fill(this.objects, null);",0.0099,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,140,        this.size = 0;,0.0099,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,141,    },0.0099,0,-1,0
org/jfree/chart/axis/Axis,4,1236,        notifyListeners(new AxisChangeEvent(this));,0.00971,0,-1,0
org/jfree/chart/axis/Axis,4,1237,    },0.00971,0,-1,0
org/jfree/chart/axis/Axis,4,1224,            if (listeners[i] == AxisChangeListener.class) {,0.00962,0,-1,0
org/jfree/chart/axis/Axis,4,1225,                ((AxisChangeListener) listeners[i + 1]).axisChanged(event);,0.00962,0,-1,0
org/jfree/chart/plot/Plot,4,1201,        fireChangeEvent();,0.00962,0,-1,0
org/jfree/chart/plot/Plot,4,1202,    },0.00962,0,-1,0
org/jfree/chart/axis/Axis,4,1045,    },0.00671,0,-1,0
org/jfree/chart/axis/Axis,4,1187,"        this.listenerList.add(AxisChangeListener.class, listener);",0.00671,0,-1,0
org/jfree/chart/axis/Axis,4,1188,    },0.00671,0,-1,0
org/jfree/chart/axis/AxisLocation,4,84,    private AxisLocation(String name) {,0.00565,0,-1,0
org/jfree/chart/axis/AxisLocation,4,85,        this.name = name;,0.00565,0,-1,0
org/jfree/chart/axis/AxisLocation,4,86,    },0.00565,0,-1,0
org/jfree/chart/axis/AxisLocation,4,61,    public static final AxisLocation TOP_OR_LEFT = new AxisLocation(,0.00565,0,-1,0
org/jfree/chart/axis/AxisLocation,4,65,    public static final AxisLocation TOP_OR_RIGHT = new AxisLocation(,0.00565,0,-1,0
org/jfree/chart/axis/AxisLocation,4,69,    public static final AxisLocation BOTTOM_OR_LEFT = new AxisLocation(,0.00565,0,-1,0
org/jfree/chart/axis/AxisLocation,4,73,    public static final AxisLocation BOTTOM_OR_RIGHT = new AxisLocation(,0.00565,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,101,"        super(area, toolTipText, urlText);",0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,102,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,103,        this.pieIndex = pieIndex;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,104,        this.sectionIndex = sectionIndex;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,105,        this.sectionKey = sectionKey;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,107,    },0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,117,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,128,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,129,    },0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,141,        return this.pieIndex;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,152,        this.pieIndex = index;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,153,    },0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,163,        return this.sectionIndex;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,174,        this.sectionIndex = index;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,175,    },0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,185,        return this.sectionKey;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,196,        this.sectionKey = key;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,197,    },0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,207,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,208,            return true;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,210,        if (!(obj instanceof PieSectionEntity)) {,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,211,            return false;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,213,        PieSectionEntity that = (PieSectionEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,214,"        if (!ObjectUtilities.equal(this.dataset, that.dataset)) {",0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,215,            return false;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,217,        if (this.pieIndex != that.pieIndex) {,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,218,            return false;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,220,        if (this.sectionIndex != that.sectionIndex) {,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,221,            return false;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,223,"        if (!ObjectUtilities.equal(this.sectionKey, that.sectionKey)) {",0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,224,            return false;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,226,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,235,        int result = super.hashCode();,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,236,"        result = HashUtilities.hashCode(result, this.pieIndex);",0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,237,"        result = HashUtilities.hashCode(result, this.sectionIndex);",0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,238,        return result;,0.0,0,-1,0
org/jfree/chart/entity/PieSectionEntity,4,247,"        return ""PieSection: "" + this.pieIndex + "", "" + this.sectionIndex + ""(""",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,115,"        this(area, null);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,116,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,126,"        this(area, toolTipText, null);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,127,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,137,"    public ChartEntity(Shape area, String toolTipText, String urlText) {",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,138,        if (area == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,139,"            throw new IllegalArgumentException(""Null 'area' argument."");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,141,        this.area = area;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,142,        this.toolTipText = toolTipText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,143,        this.urlText = urlText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,144,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,152,        return this.area;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,165,        if (area == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,166,"            throw new IllegalArgumentException(""Null 'area' argument."");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,168,        this.area = area;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,169,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,180,        return this.toolTipText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,189,        this.toolTipText = text;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,190,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,200,        return this.urlText;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,209,        this.urlText = text;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,210,    },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,219,        if (this.area instanceof Rectangle2D) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,220,"            return ""rect"";",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,223,"            return ""poly"";",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,233,        if (this.area instanceof Rectangle2D) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,234,            return getRectCoords((Rectangle2D) this.area);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,237,            return getPolyCoords(this.area);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,250,        if (rectangle == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,251,"            throw new IllegalArgumentException(""Null 'rectangle' argument."");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,253,        int x1 = (int) rectangle.getX();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,254,        int y1 = (int) rectangle.getY();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,255,        int x2 = x1 + (int) rectangle.getWidth();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,256,        int y2 = y1 + (int) rectangle.getHeight();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,258,        if (x2 == x1) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,259,            x2++;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,261,        if (y2 == y1) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,262,            y2++;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,265,"        return x1 + "","" + y1 + "","" + x2 + "","" + y2;",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,277,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,278,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,280,        StringBuffer result = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,281,        boolean first = true;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,282,        float[] coords = new float[6];,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,283,"        PathIterator pi = shape.getPathIterator(null, 1.0);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,284,        while (!pi.isDone()) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,285,            pi.currentSegment(coords);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,286,            if (first) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,287,                first = false;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,288,                result.append((int) coords[0]);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,289,"                result.append("","").append((int) coords[1]);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,292,"                result.append("","");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,293,                result.append((int) coords[0]);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,294,"                result.append("","");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,295,                result.append((int) coords[1]);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,297,            pi.next();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,299,        return result.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,319,        StringBuffer tag = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,320,        boolean hasURL = (this.urlText == null ? false,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,322,        boolean hasToolTip = (this.toolTipText == null ? false,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,324,        if (hasURL || hasToolTip) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,325,"            tag.append(""<area shape=\"""" + getShapeType() + ""\"""" + "" coords=\""""",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,327,            if (hasToolTip) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,328,                tag.append(toolTipTagFragmentGenerator.generateToolTipFragment(,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,331,            if (hasURL) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,332,                tag.append(urlTagFragmentGenerator.generateURLFragment(,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,336,"                tag.append("" nohref=\""nohref\"""");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,340,            if (!hasToolTip) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,341,"                tag.append("" alt=\""\"""");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,343,"            tag.append(""/>"");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,345,        return tag.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,355,"        StringBuffer buf = new StringBuffer(""ChartEntity: "");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,356,"        buf.append(""tooltip = "");",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,357,        buf.append(this.toolTipText);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,358,        return buf.toString();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,369,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,370,            return true;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,372,        if (!(obj instanceof ChartEntity)) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,373,            return false;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,375,        ChartEntity that = (ChartEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,376,        if (!this.area.equals(that.area)) {,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,377,            return false;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,379,"        if (!ObjectUtilities.equal(this.toolTipText, that.toolTipText)) {",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,380,            return false;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,382,"        if (!ObjectUtilities.equal(this.urlText, that.urlText)) {",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,383,            return false;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,385,        return true;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,394,        int result = 37;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,395,"        result = HashUtilities.hashCode(result, this.toolTipText);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,396,"        result = HashUtilities.hashCode(result, this.urlText);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,397,        return result;,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,409,        return super.clone();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,420,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,421,"        SerialUtilities.writeShape(this.area, stream);",0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,422,     },0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,434,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,435,        this.area = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/entity/ChartEntity,4,436,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,102,"        super(area, toolTipText, urlText);",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,103,        if (dataset == null) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,104,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,106,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,107,        this.rowKey = rowKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,108,        this.columnKey = columnKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,109,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,121,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,132,        if (dataset == null) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,133,"            throw new IllegalArgumentException(""Null 'dataset' argument."");",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,135,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,136,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,148,        return this.rowKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,161,        this.rowKey = rowKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,162,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,174,        return this.columnKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,187,        this.columnKey = columnKey;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,188,    },0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,197,"        return ""CategoryItemEntity: rowKey="" + this.rowKey",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,209,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,210,            return true;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,212,        if (!(obj instanceof CategoryItemEntity)) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,213,            return false;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,215,        CategoryItemEntity that = (CategoryItemEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,216,        if (!this.rowKey.equals(that.rowKey)) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,217,            return false;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,219,        if (!this.columnKey.equals(that.columnKey)) {,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,220,            return false;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,222,"        if (!ObjectUtilities.equal(this.dataset, that.dataset)) {",0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,223,            return false;,0.0,0,-1,0
org/jfree/chart/entity/CategoryItemEntity,4,225,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/entity/AxisLabelEntity,4,68,"        super(hotspot, toolTipText, url);",0.0,0,-1,0
org/jfree/chart/entity/AxisLabelEntity,4,69,        if (axis == null) {,0.0,0,-1,0
org/jfree/chart/entity/AxisLabelEntity,4,70,"            throw new IllegalArgumentException(""Null 'axis' argument."");",0.0,0,-1,0
org/jfree/chart/entity/AxisLabelEntity,4,72,        this.axis = axis;,0.0,0,-1,0
org/jfree/chart/entity/AxisLabelEntity,4,73,    },0.0,0,-1,0
org/jfree/chart/entity/AxisLabelEntity,4,81,        return this.axis;,0.0,0,-1,0
org/jfree/chart/entity/AxisLabelEntity,4,91,"        StringBuffer buf = new StringBuffer(""AxisLabelEntity: "");",0.0,0,-1,0
org/jfree/chart/entity/AxisLabelEntity,4,92,"        buf.append(""label = "");",0.0,0,-1,0
org/jfree/chart/entity/AxisLabelEntity,4,93,        buf.append(this.axis.getLabel());,0.0,0,-1,0
org/jfree/chart/entity/AxisLabelEntity,4,94,        return buf.toString();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,352,        return this.visible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,364,        if (flag != this.visible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,365,            this.visible = flag;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,366,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,368,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,380,        return this.label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,395,        String existing = this.label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,396,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,397,            if (!existing.equals(label)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,398,                this.label = label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,399,                fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,403,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,404,                this.label = label;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,405,                fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,409,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,419,        return this.labelFont;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,432,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,448,        return this.labelPaint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,461,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,476,        return this.labelInsets;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,488,"        setLabelInsets(insets, true);",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,489,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,501,        if (insets == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,502,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,504,        if (!insets.equals(this.labelInsets)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,505,            this.labelInsets = insets;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,506,            if (notify) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,507,                fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,510,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,520,        return this.labelAngle;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,532,        this.labelAngle = angle;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,533,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,534,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,546,        return this.labelToolTip;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,560,        this.labelToolTip = text;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,561,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,562,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,574,        return this.labelURL;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,588,        this.labelURL = url;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,589,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,590,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,602,        return this.axisLineVisible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,616,        this.axisLineVisible = visible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,617,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,618,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,628,        return this.axisLinePaint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,640,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,641,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,643,        this.axisLinePaint = paint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,644,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,645,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,655,        return this.axisLineStroke;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,667,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,668,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,670,        this.axisLineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,671,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,672,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,684,        return this.tickLabelsVisible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,700,        if (flag != this.tickLabelsVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,701,            this.tickLabelsVisible = flag;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,702,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,705,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,719,        return this.minorTickMarksVisible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,734,        if (flag != this.minorTickMarksVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,735,            this.minorTickMarksVisible = flag;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,736,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,738,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,748,        return this.tickLabelFont;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,762,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,766,            this.tickLabelFont = font;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,767,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,780,        return this.tickLabelPaint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,793,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,807,        return this.tickLabelInsets;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,819,        if (insets == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,820,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,822,        if (!this.tickLabelInsets.equals(insets)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,823,            this.tickLabelInsets = insets;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,824,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,826,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,838,        return this.tickMarksVisible;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,850,        if (flag != this.tickMarksVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,851,            this.tickMarksVisible = flag;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,852,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,854,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,865,        return this.tickMarkInsideLength;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,877,        this.tickMarkInsideLength = length;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,878,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,879,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,890,        return this.tickMarkOutsideLength;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,902,        this.tickMarkOutsideLength = length;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,903,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,904,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,914,        return this.tickMarkStroke;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,926,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,927,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,929,        if (!this.tickMarkStroke.equals(stroke)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,930,            this.tickMarkStroke = stroke;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,931,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,933,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,943,        return this.tickMarkPaint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,955,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,956,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,958,        this.tickMarkPaint = paint;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,959,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,960,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,973,        return this.minorTickMarkInsideLength;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,987,        this.minorTickMarkInsideLength = length;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,988,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,989,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1002,        return this.minorTickMarkOutsideLength;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1016,        this.minorTickMarkOutsideLength = length;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1017,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1018,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1055,        return this.fixedDimension;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1072,        this.fixedDimension = dimension;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1073,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1151,        if (plotState == null || plotState.getOwner() == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1152,            return;  // no need to create entity if we can麓t save it anyways...,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1154,        Rectangle2D hotspot = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1155,        if (edge.equals(RectangleEdge.TOP)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1156,"            hotspot = new Rectangle2D.Double(dataArea.getX(),",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1160,        else if (edge.equals(RectangleEdge.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1161,"            hotspot = new Rectangle2D.Double(dataArea.getX(), cursor,",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1164,        else if (edge.equals(RectangleEdge.LEFT)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1165,"            hotspot = new Rectangle2D.Double(state.getCursor(),",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1169,        else if (edge.equals(RectangleEdge.RIGHT)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1170,"            hotspot = new Rectangle2D.Double(cursor, dataArea.getY(),",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1173,        EntityCollection e = plotState.getOwner().getEntityCollection();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1174,        if (e != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1175,"            e.add(new AxisEntity(hotspot, this));",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1177,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1198,"        this.listenerList.remove(AxisChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1199,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1211,        List list = Arrays.asList(this.listenerList.getListenerList());,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1212,        return list.contains(listener);,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1250,        Rectangle2D result = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1251,        String axisLabel = getLabel();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1252,"        if (axisLabel != null && !axisLabel.equals("""")) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1253,            FontMetrics fm = g2.getFontMetrics(getLabelFont());,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1254,"            Rectangle2D bounds = TextUtilities.getTextBounds(axisLabel, g2, fm);",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1255,            RectangleInsets insets = getLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1256,            bounds = insets.createOutsetRectangle(bounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1257,            double angle = getLabelAngle();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1258,            if (edge == RectangleEdge.LEFT || edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1259,                angle = angle - Math.PI / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1261,            double x = bounds.getCenterX();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1262,            double y = bounds.getCenterY();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1263,            AffineTransform transformer,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1265,            Shape labelBounds = transformer.createTransformedShape(bounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1266,            result = labelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1269,        return result;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1291,        if (state == null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1292,"            throw new IllegalArgumentException(""Null 'state' argument."");",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1295,"        if ((label == null) || (label.equals(""""))) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1296,            return state;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1299,        Font font = getLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1300,        RectangleInsets insets = getLabelInsets();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1301,        g2.setFont(font);,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1302,        g2.setPaint(getLabelPaint());,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1303,        FontMetrics fm = g2.getFontMetrics();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1304,"        Rectangle2D labelBounds = TextUtilities.getTextBounds(label, g2, fm);",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1305,        Shape hotspot = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1307,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1308,            AffineTransform t = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1311,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1312,            labelBounds = rotatedLabelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1313,            float w = (float) labelBounds.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1314,            float h = (float) labelBounds.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1315,            float labelx = (float) dataArea.getCenterX();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1316,            float labely = (float) (state.getCursor() - insets.getBottom(),0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1318,"            TextUtilities.drawRotatedString(label, g2, labelx, labely,",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1320,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f,",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1322,            state.cursorUp(insets.getTop() + labelBounds.getHeight(),0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1324,        },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1325,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1326,            AffineTransform t = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1329,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1330,            labelBounds = rotatedLabelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1331,            float w = (float) labelBounds.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1332,            float h = (float) labelBounds.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1333,            float labelx = (float) dataArea.getCenterX();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1334,            float labely = (float) (state.getCursor() + insets.getTop(),0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1336,"            TextUtilities.drawRotatedString(label, g2, labelx, labely,",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1338,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f,",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1340,            state.cursorDown(insets.getTop() + labelBounds.getHeight(),0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1342,        },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1343,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1344,            AffineTransform t = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1347,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1348,            labelBounds = rotatedLabelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1349,            float w = (float) labelBounds.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1350,            float h = (float) labelBounds.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1351,            float labelx = (float) (state.getCursor() - insets.getRight(),0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1353,            float labely = (float) dataArea.getCenterY();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1354,"            TextUtilities.drawRotatedString(label, g2, labelx, labely,",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1357,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f,",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1359,            state.cursorLeft(insets.getLeft() + labelBounds.getWidth(),0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1361,        },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1362,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1364,            AffineTransform t = AffineTransform.getRotateInstance(,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1367,            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1368,            labelBounds = rotatedLabelBounds.getBounds2D();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1369,            float w = (float) labelBounds.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1370,            float h = (float) labelBounds.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1371,            float labelx = (float) (state.getCursor(),0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1373,            float labely = (float) (dataArea.getY() + dataArea.getHeight(),0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1375,"            TextUtilities.drawRotatedString(label, g2, labelx, labely,",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1378,"            hotspot = new Rectangle2D.Float(labelx - w / 2.0f,",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1380,            state.cursorRight(insets.getLeft() + labelBounds.getWidth(),0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1384,        if (plotState != null && hotspot != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1385,            ChartRenderingInfo owner = plotState.getOwner();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1386,            if (owner != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1387,                EntityCollection entities = owner.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1388,                if (entities != null) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1389,"                    entities.add(new AxisLabelEntity(this, hotspot,",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1394,        return state;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1409,        Line2D axisLine = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1410,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1411,"            axisLine = new Line2D.Double(dataArea.getX(), cursor,",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1414,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1415,"            axisLine = new Line2D.Double(dataArea.getX(), cursor,",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1418,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1419,"            axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor,",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1422,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1423,"            axisLine = new Line2D.Double(cursor, dataArea.getY(), cursor,",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1426,        g2.setPaint(this.axisLinePaint);,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1427,        g2.setStroke(this.axisLineStroke);,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1428,        g2.draw(axisLine);,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1430,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1441,        Axis clone = (Axis) super.clone();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1443,        clone.plot = null;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1444,        clone.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1445,        return clone;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1456,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1457,            return true;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1459,        if (!(obj instanceof Axis)) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1460,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1462,        Axis that = (Axis) obj;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1463,        if (this.visible != that.visible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1464,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1466,"        if (!ObjectUtilities.equal(this.label, that.label)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1467,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1469,"        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1470,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1472,"        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1473,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1475,"        if (!ObjectUtilities.equal(this.labelInsets, that.labelInsets)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1476,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1478,        if (this.labelAngle != that.labelAngle) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1479,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1481,"        if (!ObjectUtilities.equal(this.labelToolTip, that.labelToolTip)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1482,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1484,"        if (!ObjectUtilities.equal(this.labelURL, that.labelURL)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1485,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1487,        if (this.axisLineVisible != that.axisLineVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1488,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1490,"        if (!ObjectUtilities.equal(this.axisLineStroke, that.axisLineStroke)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1491,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1493,"        if (!PaintUtilities.equal(this.axisLinePaint, that.axisLinePaint)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1494,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1496,        if (this.tickLabelsVisible != that.tickLabelsVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1497,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1499,"        if (!ObjectUtilities.equal(this.tickLabelFont, that.tickLabelFont)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1500,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1502,"        if (!PaintUtilities.equal(this.tickLabelPaint, that.tickLabelPaint)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1503,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1505,        if (!ObjectUtilities.equal(,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1508,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1510,        if (this.tickMarksVisible != that.tickMarksVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1511,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1513,        if (this.tickMarkInsideLength != that.tickMarkInsideLength) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1514,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1516,        if (this.tickMarkOutsideLength != that.tickMarkOutsideLength) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1517,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1519,"        if (!PaintUtilities.equal(this.tickMarkPaint, that.tickMarkPaint)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1520,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1522,"        if (!ObjectUtilities.equal(this.tickMarkStroke, that.tickMarkStroke)) {",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1523,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1525,        if (this.minorTickMarksVisible != that.minorTickMarksVisible) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1526,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1528,        if (this.minorTickMarkInsideLength != that.minorTickMarkInsideLength) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1529,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1531,        if (this.minorTickMarkOutsideLength,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1533,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1535,        if (this.fixedDimension != that.fixedDimension) {,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1536,            return false;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1538,        return true;,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1549,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1550,"        SerialUtilities.writePaint(this.labelPaint, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1551,"        SerialUtilities.writePaint(this.tickLabelPaint, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1552,"        SerialUtilities.writeStroke(this.axisLineStroke, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1553,"        SerialUtilities.writePaint(this.axisLinePaint, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1554,"        SerialUtilities.writeStroke(this.tickMarkStroke, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1555,"        SerialUtilities.writePaint(this.tickMarkPaint, stream);",0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1556,    },0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1568,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1569,        this.labelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1570,        this.tickLabelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1571,        this.axisLineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1572,        this.axisLinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1573,        this.tickMarkStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1574,        this.tickMarkPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1575,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/axis/Axis,4,1576,    },0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,75,"        this(area, axis, null);",0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,76,    },0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,87,"        this(area, axis, toolTipText, null);",0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,88,    },0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,101,"        super(area, toolTipText, urlText);",0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,102,        if (axis == null) {,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,103,"            throw new IllegalArgumentException(""Null 'axis' argument."");",0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,106,        this.axis = axis;,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,107,    },0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,115,        return this.axis;,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,125,"        StringBuffer buf = new StringBuffer(""AxisEntity: "");",0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,126,"        buf.append(""tooltip = "");",0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,127,        buf.append(getToolTipText());,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,128,        return buf.toString();,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,139,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,140,            return true;,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,142,        if (!(obj instanceof AxisEntity)) {,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,143,            return false;,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,145,        AxisEntity that = (AxisEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,146,        if (!getArea().equals(that.getArea())) {,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,147,            return false;,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,149,"        if (!ObjectUtilities.equal(getToolTipText(), that.getToolTipText())) {",0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,150,            return false;,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,152,"        if (!ObjectUtilities.equal(getURLText(), that.getURLText())) {",0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,153,            return false;,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,155,        if (!(this.axis.equals(that.axis))) {,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,156,            return false;,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,158,        return true;,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,167,        int result = 39;,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,168,"        result = HashUtilities.hashCode(result, getToolTipText());",0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,169,"        result = HashUtilities.hashCode(result, getURLText());",0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,170,        return result;,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,182,        return super.clone();,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,193,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,194,"        SerialUtilities.writeShape(getArea(), stream);",0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,195,    },0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,207,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,208,        setArea(SerialUtilities.readShape(stream));,0.0,0,-1,0
org/jfree/chart/entity/AxisEntity,4,209,    },0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,88,"        super(area, toolTipText, urlText);",0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,89,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,90,        this.series = series;,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,91,        this.item = item;,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,92,    },0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,100,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,109,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,110,    },0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,118,        return this.series;,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,127,        this.series = series;,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,128,    },0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,136,        return this.item;,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,145,        this.item = item;,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,146,    },0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,156,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,157,            return true;,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,159,        if (obj instanceof XYItemEntity && super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,160,            XYItemEntity ie = (XYItemEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,161,            if (this.series != ie.series) {,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,162,                return false;,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,164,            if (this.item != ie.item) {,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,165,                return false;,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,167,            return true;,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,169,        return false;,0.0,0,-1,0
org/jfree/chart/entity/XYItemEntity,4,179,"        return ""XYItemEntity: series = "" + getSeriesIndex() + "", item = """,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,74,"        this(area, chart, null);",0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,75,    },0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,86,"        this(area, chart, toolTipText, null);",0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,87,    },0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,100,"        super(area, toolTipText, urlText);",0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,101,        if (chart == null) {,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,102,"            throw new IllegalArgumentException(""Null 'chart' argument."");",0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,105,        this.chart = chart;,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,106,    },0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,114,        return this.chart;,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,124,"        StringBuffer buf = new StringBuffer(""JFreeChartEntity: "");",0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,125,"        buf.append(""tooltip = "");",0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,126,        buf.append(getToolTipText());,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,127,        return buf.toString();,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,138,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,139,            return true;,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,141,        if (!(obj instanceof JFreeChartEntity)) {,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,142,            return false;,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,144,        JFreeChartEntity that = (JFreeChartEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,145,        if (!getArea().equals(that.getArea())) {,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,146,            return false;,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,148,"        if (!ObjectUtilities.equal(getToolTipText(), that.getToolTipText())) {",0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,149,            return false;,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,151,"        if (!ObjectUtilities.equal(getURLText(), that.getURLText())) {",0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,152,            return false;,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,154,        if (!(this.chart.equals(that.chart))) {,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,155,            return false;,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,157,        return true;,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,166,        int result = 39;,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,167,"        result = HashUtilities.hashCode(result, getToolTipText());",0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,168,"        result = HashUtilities.hashCode(result, getURLText());",0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,169,        return result;,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,181,        return super.clone();,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,192,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,193,"        SerialUtilities.writeShape(getArea(), stream);",0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,194,     },0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,206,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,207,        setArea(SerialUtilities.readShape(stream));,0.0,0,-1,0
org/jfree/chart/entity/JFreeChartEntity,4,208,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,340,"        this(null, null, plot, true);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,341,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,356,"        this(title, JFreeChart.DEFAULT_TITLE_FONT, plot, true);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,357,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,380,"            throw new NullPointerException(""Null 'plot' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,418,                titleFont = DEFAULT_TITLE_FONT;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,440,        return this.renderingHints;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,454,        if (renderingHints == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,455,"            throw new NullPointerException(""RenderingHints given are null"");",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,457,        this.renderingHints = renderingHints;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,458,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,459,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,470,        return this.borderVisible;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,482,        this.borderVisible = visible;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,483,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,484,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,494,        return this.borderStroke;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,505,        this.borderStroke = stroke;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,506,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,507,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,517,        return this.borderPaint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,528,        this.borderPaint = paint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,529,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,530,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,540,        return this.padding;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,552,        if (padding == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,553,"            throw new IllegalArgumentException(""Null 'padding' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,555,        this.padding = padding;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,556,        notifyListeners(new ChartChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,557,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,584,        if (this.title != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,585,            this.title.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,587,        this.title = title;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,588,        if (title != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,589,            title.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,591,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,592,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,607,        if (text != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,608,            if (this.title == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,609,"                setTitle(new TextTitle(text, JFreeChart.DEFAULT_TITLE_FONT));",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,612,                this.title.setText(text);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,616,            setTitle((TextTitle) null);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,618,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,629,        addSubtitle(legend);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,630,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,641,        return getLegend(0);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,654,        int seen = 0;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,655,        Iterator iterator = this.subtitles.iterator();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,656,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,657,            Title subtitle = (Title) iterator.next();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,658,            if (subtitle instanceof LegendTitle) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,659,                if (seen == index) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,660,                    return (LegendTitle) subtitle;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,663,                    seen++;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,666,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,667,        return null;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,677,        removeSubtitle(getLegend());,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,678,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,688,        return new ArrayList(this.subtitles);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,702,        if (subtitles == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,703,"            throw new NullPointerException(""Null 'subtitles' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,705,        setNotify(false);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,706,        clearSubtitles();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,707,        Iterator iterator = subtitles.iterator();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,708,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,709,            Title t = (Title) iterator.next();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,710,            if (t != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,711,                addSubtitle(t);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,713,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,714,        setNotify(true);  // this fires a ChartChangeEvent,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,715,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,739,"            throw new IllegalArgumentException(""Index out of range."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,753,        if (subtitle == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,754,"            throw new IllegalArgumentException(""Null 'subtitle' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,756,        this.subtitles.add(subtitle);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,757,        subtitle.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,758,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,759,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,771,        if (index < 0 || index > getSubtitleCount()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,772,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,775,        if (subtitle == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,776,"            throw new IllegalArgumentException(""Null 'subtitle' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,778,"        this.subtitles.add(index, subtitle);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,779,        subtitle.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,780,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,781,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,790,        Iterator iterator = this.subtitles.iterator();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,791,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,792,            Title t = (Title) iterator.next();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,793,            t.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,794,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,795,        this.subtitles.clear();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,796,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,797,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,808,        this.subtitles.remove(title);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,809,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,810,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,834,        return (CategoryPlot) this.plot;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,848,        return (XYPlot) this.plot;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,860,        Object val = this.renderingHints.get(RenderingHints.KEY_ANTIALIASING);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,861,        return RenderingHints.VALUE_ANTIALIAS_ON.equals(val);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,876,        Object val = this.renderingHints.get(RenderingHints.KEY_ANTIALIASING);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,877,        if (val == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,878,            val = RenderingHints.VALUE_ANTIALIAS_DEFAULT;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,880,        if (!flag && RenderingHints.VALUE_ANTIALIAS_OFF.equals(val),0.0,0,-1,0
org/jfree/chart/JFreeChart,4,883,            return;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,885,        if (flag) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,886,"            this.renderingHints.put(RenderingHints.KEY_ANTIALIASING,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,890,"            this.renderingHints.put(RenderingHints.KEY_ANTIALIASING,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,893,        fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,895,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,908,        return this.renderingHints.get(RenderingHints.KEY_TEXT_ANTIALIASING);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,926,        if (flag) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,927,            setTextAntiAlias(RenderingHints.VALUE_TEXT_ANTIALIAS_ON);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,930,            setTextAntiAlias(RenderingHints.VALUE_TEXT_ANTIALIAS_OFF);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,932,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,947,"        this.renderingHints.put(RenderingHints.KEY_TEXT_ANTIALIASING, val);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,948,        notifyListeners(new ChartChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,949,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,959,        return this.backgroundPaint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,974,                this.backgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,975,                fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,979,            if (paint != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,980,                this.backgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,981,                fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,996,        return this.backgroundImage;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1009,        if (this.backgroundImage != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1010,            if (!this.backgroundImage.equals(image)) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1011,                this.backgroundImage = image;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1012,                fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1016,            if (image != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1017,                this.backgroundImage = image;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1018,                fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1022,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1034,        return this.backgroundImageAlignment;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1046,        if (this.backgroundImageAlignment != alignment) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1047,            this.backgroundImageAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1048,            fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1050,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1060,        return this.backgroundImageAlpha;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1073,        if (this.backgroundImageAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1074,            this.backgroundImageAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1075,            fireChartChanged();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1078,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1089,        return this.notify;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1101,        this.notify = notify;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1103,        if (notify) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1104,            notifyListeners(new ChartChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1106,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1118,"        draw(g2, area, null, null);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1119,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1130,"        draw(g2, area, null, info);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1131,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1149,"        notifyListeners(new ChartProgressEvent(this, this,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1152,        EntityCollection entities = null;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1154,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1155,            info.clear();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1156,            info.setChartArea(chartArea);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1157,            entities = info.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1159,        if (entities != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1160,"            entities.add(new JFreeChartEntity((Rectangle2D) chartArea.clone(),",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1165,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1166,        g2.clip(chartArea);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1168,        g2.addRenderingHints(this.renderingHints);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1171,        if (this.backgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1172,            g2.setPaint(this.backgroundPaint);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1173,            g2.fill(chartArea);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1176,        if (this.backgroundImage != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1177,            Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1178,"            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1180,"            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1183,"            Align.align(dest, chartArea, this.backgroundImageAlignment);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1184,"            g2.drawImage(this.backgroundImage, (int) dest.getX(),",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1187,            g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1190,        if (isBorderVisible()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1191,            Paint paint = getBorderPaint();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1192,            Stroke stroke = getBorderStroke();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1193,            if (paint != null && stroke != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1194,                Rectangle2D borderArea = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1198,                g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1199,                g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1200,                g2.draw(borderArea);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1205,        Rectangle2D nonTitleArea = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1206,        nonTitleArea.setRect(chartArea);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1207,        this.padding.trim(nonTitleArea);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1209,        if (this.title != null && this.title.isVisible()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1210,"            EntityCollection e = drawTitle(this.title, g2, nonTitleArea,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1212,            if (e != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1213,                entities.addAll(e);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1217,        Iterator iterator = this.subtitles.iterator();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1218,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1219,            Title currentTitle = (Title) iterator.next();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1220,            if (currentTitle.isVisible()) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1221,"                EntityCollection e = drawTitle(currentTitle, g2, nonTitleArea,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1223,                if (e != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1224,                    entities.addAll(e);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1227,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1229,        Rectangle2D plotArea = nonTitleArea;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1232,        PlotRenderingInfo plotInfo = null;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1233,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1234,            plotInfo = info.getPlotInfo();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1236,"        this.plot.draw(g2, plotArea, anchor, null, plotInfo);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1238,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1240,"        notifyListeners(new ChartProgressEvent(this, this,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1242,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1257,        double x = Double.NaN;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1258,        double y = Double.NaN;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1259,        if (hAlign == HorizontalAlignment.LEFT) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1260,            x = frame.getX();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1262,        else if (hAlign == HorizontalAlignment.CENTER) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1263,            x = frame.getCenterX() - (dimensions.width / 2.0);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1265,        else if (hAlign == HorizontalAlignment.RIGHT) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1266,            x = frame.getMaxX() - dimensions.width;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1268,        if (vAlign == VerticalAlignment.TOP) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1269,            y = frame.getY();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1271,        else if (vAlign == VerticalAlignment.CENTER) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1272,            y = frame.getCenterY() - (dimensions.height / 2.0);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1274,        else if (vAlign == VerticalAlignment.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1275,            y = frame.getMaxY() - dimensions.height;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1278,"        return new Rectangle2D.Double(x, y, dimensions.width,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1299,        if (t == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1300,"            throw new IllegalArgumentException(""Null 't' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1302,        if (area == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1303,"            throw new IllegalArgumentException(""Null 'area' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1306,        RectangleEdge position = t.getPosition();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1307,        double ww = area.getWidth();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1308,        if (ww <= 0.0) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1309,            return null;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1311,        double hh = area.getHeight();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1312,        if (hh <= 0.0) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1313,            return null;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1315,"        RectangleConstraint constraint = new RectangleConstraint(ww,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1318,        Object retValue = null;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1319,        BlockParams p = new BlockParams();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1320,        p.setGenerateEntities(entities);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1321,        if (position == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1322,"            Size2D size = t.arrange(g2, constraint);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1323,"            titleArea = createAlignedRectangle2D(size, area,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1325,"            retValue = t.draw(g2, titleArea, p);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1326,"            area.setRect(area.getX(), Math.min(area.getY() + size.height,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1329,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1330,        else if (position == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1331,"            Size2D size = t.arrange(g2, constraint);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1332,"            titleArea = createAlignedRectangle2D(size, area,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1334,"            retValue = t.draw(g2, titleArea, p);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1335,"            area.setRect(area.getX(), area.getY(), area.getWidth(),",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1337,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1338,        else if (position == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1339,"            Size2D size = t.arrange(g2, constraint);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1340,"            titleArea = createAlignedRectangle2D(size, area,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1342,"            retValue = t.draw(g2, titleArea, p);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1343,"            area.setRect(area.getX(), area.getY(), area.getWidth()",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1345,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1347,        else if (position == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1348,"            Size2D size = t.arrange(g2, constraint);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1349,"            titleArea = createAlignedRectangle2D(size, area,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1351,"            retValue = t.draw(g2, titleArea, p);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1352,"            area.setRect(area.getX() + size.width, area.getY(), area.getWidth()",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1354,        },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1356,"            throw new RuntimeException(""Unrecognised title position."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1358,        EntityCollection result = null;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1359,        if (retValue instanceof EntityBlockResult) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1360,            EntityBlockResult ebr = (EntityBlockResult) retValue;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1361,            result = ebr.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1363,        return result;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1375,"        return createBufferedImage(width, height, null);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1390,"        return createBufferedImage(width, height, BufferedImage.TYPE_INT_ARGB,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1408,"        BufferedImage image = new BufferedImage(width, height, imageType);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1409,        Graphics2D g2 = image.createGraphics();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1410,"        draw(g2, new Rectangle2D.Double(0, 0, width, height), null, info);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1411,        g2.dispose();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1412,        return image;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1435,"        BufferedImage image = new BufferedImage(imageWidth, imageHeight,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1437,        Graphics2D g2 = image.createGraphics();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1438,        double scaleX = imageWidth / drawWidth;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1439,        double scaleY = imageHeight / drawHeight;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1440,"        AffineTransform st = AffineTransform.getScaleInstance(scaleX, scaleY);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1441,        g2.transform(st);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1442,"        draw(g2, new Rectangle2D.Double(0, 0, drawWidth, drawHeight), null,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1444,        g2.dispose();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1445,        return image;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1465,"        this.plot.handleClick(x, y, info.getPlotInfo());",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1467,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1477,        if (listener == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1478,"            throw new IllegalArgumentException(""Null 'listener' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1480,"        this.changeListeners.add(ChartChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1481,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1491,        if (listener == null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1492,"            throw new IllegalArgumentException(""Null 'listener' argument."");",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1494,"        this.changeListeners.remove(ChartChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1495,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1503,        ChartChangeEvent event = new ChartChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1504,        notifyListeners(event);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1505,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1517,                if (listeners[i] == ChartChangeListener.class) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1518,                    ((ChartChangeListener) listeners[i + 1]).chartChanged(,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1534,"        this.progressListeners.add(ChartProgressListener.class, listener);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1535,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1545,"        this.progressListeners.remove(ChartProgressListener.class, listener);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1546,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1556,        Object[] listeners = this.progressListeners.getListenerList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1557,        for (int i = listeners.length - 2; i >= 0; i -= 2) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1558,            if (listeners[i] == ChartProgressListener.class) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1559,                ((ChartProgressListener) listeners[i + 1]).chartProgress(event);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1563,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1595,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1596,            return true;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1598,        if (!(obj instanceof JFreeChart)) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1599,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1601,        JFreeChart that = (JFreeChart) obj;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1602,        if (!this.renderingHints.equals(that.renderingHints)) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1603,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1605,        if (this.borderVisible != that.borderVisible) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1606,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1608,"        if (!ObjectUtilities.equal(this.borderStroke, that.borderStroke)) {",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1609,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1611,"        if (!PaintUtilities.equal(this.borderPaint, that.borderPaint)) {",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1612,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1614,        if (!this.padding.equals(that.padding)) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1615,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1617,"        if (!ObjectUtilities.equal(this.title, that.title)) {",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1618,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1620,"        if (!ObjectUtilities.equal(this.subtitles, that.subtitles)) {",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1621,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1623,"        if (!ObjectUtilities.equal(this.plot, that.plot)) {",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1624,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1626,        if (!PaintUtilities.equal(,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1629,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1631,"        if (!ObjectUtilities.equal(this.backgroundImage,",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1633,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1635,        if (this.backgroundImageAlignment != that.backgroundImageAlignment) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1636,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1638,        if (this.backgroundImageAlpha != that.backgroundImageAlpha) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1639,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1641,        if (this.notify != that.notify) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1642,            return false;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1644,        return true;,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1655,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1656,"        SerialUtilities.writeStroke(this.borderStroke, stream);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1657,"        SerialUtilities.writePaint(this.borderPaint, stream);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1658,"        SerialUtilities.writePaint(this.backgroundPaint, stream);",0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1659,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1671,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1672,        this.borderStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1673,        this.borderPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1674,        this.backgroundPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1675,        this.progressListeners = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1676,        this.changeListeners = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1677,        this.renderingHints = new RenderingHints(,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1682,        if (this.title != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1683,            this.title.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1686,        for (int i = 0; i < getSubtitleCount(); i++) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1687,            getSubtitle(i).addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1689,        this.plot.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1690,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1698,        System.out.println(JFreeChart.INFO.toString());,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1699,    },0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1710,        JFreeChart chart = (JFreeChart) super.clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1712,        chart.renderingHints = (RenderingHints) this.renderingHints.clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1717,        if (this.title != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1718,            chart.title = (TextTitle) this.title.clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1719,            chart.title.addChangeListener(chart);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1722,        chart.subtitles = new ArrayList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1723,        for (int i = 0; i < getSubtitleCount(); i++) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1724,            Title subtitle = (Title) getSubtitle(i).clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1725,            chart.subtitles.add(subtitle);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1726,            subtitle.addChangeListener(chart);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1729,        if (this.plot != null) {,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1730,            chart.plot = (Plot) this.plot.clone();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1731,            chart.plot.addChangeListener(chart);,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1734,        chart.progressListeners = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1735,        chart.changeListeners = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/JFreeChart,4,1736,        return chart;,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,74,"        this(area, title, null);",0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,75,    },0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,86,"        this(area, title, toolTipText, null);",0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,87,    },0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,100,"        super(area, toolTipText, urlText);",0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,101,        if (title == null) {,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,102,"            throw new IllegalArgumentException(""Null 'title' argument."");",0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,105,        this.title = title;,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,106,    },0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,114,        return this.title;,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,124,"        StringBuffer buf = new StringBuffer(""TitleEntity: "");",0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,125,"        buf.append(""tooltip = "");",0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,126,        buf.append(getToolTipText());,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,127,        return buf.toString();,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,138,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,139,            return true;,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,141,        if (!(obj instanceof TitleEntity)) {,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,142,            return false;,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,144,        TitleEntity that = (TitleEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,145,        if (!getArea().equals(that.getArea())) {,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,146,            return false;,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,148,"        if (!ObjectUtilities.equal(getToolTipText(), that.getToolTipText())) {",0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,149,            return false;,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,151,"        if (!ObjectUtilities.equal(getURLText(), that.getURLText())) {",0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,152,            return false;,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,154,        if (!(this.title.equals(that.title))) {,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,155,            return false;,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,157,        return true;,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,166,        int result = 41;,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,167,"        result = HashUtilities.hashCode(result, getToolTipText());",0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,168,"        result = HashUtilities.hashCode(result, getURLText());",0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,169,        return result;,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,181,        return super.clone();,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,192,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,193,"        SerialUtilities.writeShape(getArea(), stream);",0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,194,     },0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,206,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,207,        setArea(SerialUtilities.readShape(stream));,0.0,0,-1,0
org/jfree/chart/entity/TitleEntity,4,208,    },0.0,0,-1,0
org/jfree/chart/title/Title,4,158,"        this(position, horizontalAlignment, verticalAlignment,",0.0,0,-1,0
org/jfree/chart/title/Title,4,161,    },0.0,0,-1,0
org/jfree/chart/title/Title,4,184,"            throw new IllegalArgumentException(""Null 'position' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,4,187,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/title/Title,4,192,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/title/Title,4,196,"            throw new IllegalArgumentException(""Null 'spacer' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,4,220,        return this.visible;,0.0,0,-1,0
org/jfree/chart/title/Title,4,234,        this.visible = visible;,0.0,0,-1,0
org/jfree/chart/title/Title,4,235,        notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/Title,4,236,    },0.0,0,-1,0
org/jfree/chart/title/Title,4,244,        return this.position;,0.0,0,-1,0
org/jfree/chart/title/Title,4,255,"            throw new IllegalArgumentException(""Null 'position' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,4,269,        return this.horizontalAlignment;,0.0,0,-1,0
org/jfree/chart/title/Title,4,280,        if (alignment == null) {,0.0,0,-1,0
org/jfree/chart/title/Title,4,281,"            throw new IllegalArgumentException(""Null 'alignment' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,4,283,        if (this.horizontalAlignment != alignment) {,0.0,0,-1,0
org/jfree/chart/title/Title,4,284,            this.horizontalAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/title/Title,4,285,            notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/Title,4,287,    },0.0,0,-1,0
org/jfree/chart/title/Title,4,295,        return this.verticalAlignment;,0.0,0,-1,0
org/jfree/chart/title/Title,4,306,        if (alignment == null) {,0.0,0,-1,0
org/jfree/chart/title/Title,4,307,"            throw new IllegalArgumentException(""Null 'alignment' argument."");",0.0,0,-1,0
org/jfree/chart/title/Title,4,309,        if (this.verticalAlignment != alignment) {,0.0,0,-1,0
org/jfree/chart/title/Title,4,310,            this.verticalAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/title/Title,4,311,            notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/Title,4,313,    },0.0,0,-1,0
org/jfree/chart/title/Title,4,322,        return this.notify;,0.0,0,-1,0
org/jfree/chart/title/Title,4,333,        this.notify = flag;,0.0,0,-1,0
org/jfree/chart/title/Title,4,334,        if (flag) {,0.0,0,-1,0
org/jfree/chart/title/Title,4,335,            notifyListeners(new TitleChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/title/Title,4,337,    },0.0,0,-1,0
org/jfree/chart/title/Title,4,362,        Title duplicate = (Title) super.clone();,0.0,0,-1,0
org/jfree/chart/title/Title,4,363,        duplicate.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/title/Title,4,365,        return duplicate;,0.0,0,-1,0
org/jfree/chart/title/Title,4,383,"        this.listenerList.remove(TitleChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/title/Title,4,384,    },0.0,0,-1,0
org/jfree/chart/title/Title,4,413,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/title/Title,4,414,            return true;,0.0,0,-1,0
org/jfree/chart/title/Title,4,416,        if (!(obj instanceof Title)) {,0.0,0,-1,0
org/jfree/chart/title/Title,4,417,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,4,419,        Title that = (Title) obj;,0.0,0,-1,0
org/jfree/chart/title/Title,4,420,        if (this.visible != that.visible) {,0.0,0,-1,0
org/jfree/chart/title/Title,4,421,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,4,423,        if (this.position != that.position) {,0.0,0,-1,0
org/jfree/chart/title/Title,4,424,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,4,426,        if (this.horizontalAlignment != that.horizontalAlignment) {,0.0,0,-1,0
org/jfree/chart/title/Title,4,427,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,4,429,        if (this.verticalAlignment != that.verticalAlignment) {,0.0,0,-1,0
org/jfree/chart/title/Title,4,430,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,4,432,        if (this.notify != that.notify) {,0.0,0,-1,0
org/jfree/chart/title/Title,4,433,            return false;,0.0,0,-1,0
org/jfree/chart/title/Title,4,435,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/title/Title,4,444,        int result = 193;,0.0,0,-1,0
org/jfree/chart/title/Title,4,445,        result = 37 * result + ObjectUtilities.hashCode(this.position);,0.0,0,-1,0
org/jfree/chart/title/Title,4,446,        result = 37 * result,0.0,0,-1,0
org/jfree/chart/title/Title,4,448,        result = 37 * result + ObjectUtilities.hashCode(this.verticalAlignment);,0.0,0,-1,0
org/jfree/chart/title/Title,4,449,        return result;,0.0,0,-1,0
org/jfree/chart/title/Title,4,460,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/title/Title,4,461,    },0.0,0,-1,0
org/jfree/chart/title/Title,4,473,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/title/Title,4,474,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/title/Title,4,475,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,127,        return this.id;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,138,        this.id = id;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,139,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,151,        return this.width;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,162,        this.width = width;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,163,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,175,        return this.height;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,186,        this.height = height;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,187,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,197,        return this.margin;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,210,"            throw new IllegalArgumentException(""Null 'margin' argument."");",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,227,"        setMargin(new RectangleInsets(top, left, bottom, right));",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,228,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,239,        return this.frame;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,252,"            throw new IllegalArgumentException(""Null 'frame' argument."");",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,265,        return this.padding;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,278,"            throw new IllegalArgumentException(""Null 'padding' argument."");",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,293,"        setPadding(new RectangleInsets(top, left, bottom, right));",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,294,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,304,        return this.margin.getLeft() + this.frame.getInsets().getLeft(),0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,316,        return this.margin.getTop() + this.frame.getInsets().getTop(),0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,329,"        return arrange(g2, RectangleConstraint.NONE);",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,342,"        Size2D base = new Size2D(getWidth(), getHeight());",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,343,        return constraint.calculateConstrainedSize(base);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,354,        return this.bounds;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,365,        if (bounds == null) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,366,"            throw new IllegalArgumentException(""Null 'bounds' argument."");",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,368,        this.bounds = bounds;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,369,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,383,        double result = this.margin.trimWidth(fixedWidth);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,384,        result = this.frame.getInsets().trimWidth(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,385,        result = this.padding.trimWidth(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,386,"        return Math.max(result, 0.0);",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,401,        double result = this.margin.trimHeight(fixedHeight);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,402,        result = this.frame.getInsets().trimHeight(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,403,        result = this.padding.trimHeight(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,404,"        return Math.max(result, 0.0);",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,416,        if (c == null) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,417,"            throw new IllegalArgumentException(""Null 'c' argument."");",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,419,        if (c.equals(RectangleConstraint.NONE)) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,420,            return c;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,422,        double w = c.getWidth();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,423,        Range wr = c.getWidthRange();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,424,        double h = c.getHeight();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,425,        Range hr = c.getHeightRange();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,426,        double ww = trimToContentWidth(w);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,427,        double hh = trimToContentHeight(h);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,428,        Range wwr = trimToContentWidth(wr);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,429,        Range hhr = trimToContentHeight(hr);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,430,        return new RectangleConstraint(,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,437,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,438,            return null;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,440,        double lowerBound = 0.0;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,441,        double upperBound = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,442,        if (r.getLowerBound() > 0.0) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,443,            lowerBound = trimToContentWidth(r.getLowerBound());,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,445,        if (r.getUpperBound() < Double.POSITIVE_INFINITY) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,446,            upperBound = trimToContentWidth(r.getUpperBound());,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,448,"        return new Range(lowerBound, upperBound);",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,452,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,453,            return null;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,455,        double lowerBound = 0.0;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,456,        double upperBound = Double.POSITIVE_INFINITY;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,457,        if (r.getLowerBound() > 0.0) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,458,            lowerBound = trimToContentHeight(r.getLowerBound());,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,460,        if (r.getUpperBound() < Double.POSITIVE_INFINITY) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,461,            upperBound = trimToContentHeight(r.getUpperBound());,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,463,"        return new Range(lowerBound, upperBound);",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,474,        double result = contentWidth;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,475,        result = this.padding.extendWidth(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,476,        result = this.frame.getInsets().extendWidth(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,477,        result = this.margin.extendWidth(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,478,        return result;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,489,        double result = contentHeight;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,490,        result = this.padding.extendHeight(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,491,        result = this.frame.getInsets().extendHeight(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,492,        result = this.margin.extendHeight(result);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,493,        return result;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,506,        this.margin.trim(area);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,507,        return area;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,520,        this.frame.getInsets().trim(area);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,521,        return area;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,534,        this.padding.trim(area);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,535,        return area;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,545,"        this.frame.draw(g2, area);",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,546,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,556,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,557,            return true;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,559,        if (!(obj instanceof AbstractBlock)) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,560,            return false;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,562,        AbstractBlock that = (AbstractBlock) obj;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,563,"        if (!ObjectUtilities.equal(this.id, that.id)) {",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,564,            return false;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,566,        if (!this.frame.equals(that.frame)) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,567,            return false;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,569,        if (!this.bounds.equals(that.bounds)) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,570,            return false;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,572,        if (!this.margin.equals(that.margin)) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,573,            return false;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,575,        if (!this.padding.equals(that.padding)) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,576,            return false;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,578,        if (this.height != that.height) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,579,            return false;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,581,        if (this.width != that.width) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,582,            return false;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,584,        return true;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,596,        AbstractBlock clone = (AbstractBlock) super.clone();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,597,        clone.bounds = (Rectangle2D) ShapeUtilities.clone(this.bounds);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,598,        if (this.frame instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,599,            PublicCloneable pc = (PublicCloneable) this.frame;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,600,            clone.frame = (BlockFrame) pc.clone();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,602,        return clone;,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,613,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,614,"        SerialUtilities.writeShape(this.bounds, stream);",0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,615,    },0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,627,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,628,        this.bounds = (Rectangle2D) SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/block/AbstractBlock,4,629,    },0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,75,"        this(area, plot, null);",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,76,    },0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,87,"        this(area, plot, toolTipText, null);",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,88,    },0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,100,"        super(area, toolTipText, urlText);",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,101,        if (plot == null) {,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,102,"            throw new IllegalArgumentException(""Null 'plot' argument."");",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,105,        this.plot = plot;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,106,    },0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,114,        return this.plot;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,124,"        StringBuffer buf = new StringBuffer(""PlotEntity: "");",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,125,"        buf.append(""tooltip = "");",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,126,        buf.append(getToolTipText());,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,127,        return buf.toString();,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,138,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,139,            return true;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,141,        if (!(obj instanceof PlotEntity)) {,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,142,            return false;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,144,        PlotEntity that = (PlotEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,145,        if (!getArea().equals(that.getArea())) {,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,146,            return false;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,148,"        if (!ObjectUtilities.equal(getToolTipText(), that.getToolTipText())) {",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,149,            return false;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,151,"        if (!ObjectUtilities.equal(getURLText(), that.getURLText())) {",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,152,            return false;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,154,        if (!(this.plot.equals(that.plot))) {,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,155,            return false;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,157,        return true;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,166,        int result = 39;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,167,"        result = HashUtilities.hashCode(result, getToolTipText());",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,168,"        result = HashUtilities.hashCode(result, getURLText());",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,169,        return result;,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,181,        return super.clone();,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,192,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,193,"        SerialUtilities.writeShape(getArea(), stream);",0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,194,     },0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,206,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,207,        setArea(SerialUtilities.readShape(stream));,0.0,0,-1,0
org/jfree/chart/entity/PlotEntity,4,208,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,330,        return this.datasetGroup;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,341,        this.datasetGroup = group;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,342,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,355,        return this.noDataMessage;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,368,        this.noDataMessage = message;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,369,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,370,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,381,        return this.noDataMessageFont;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,393,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,394,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,396,        this.noDataMessageFont = font;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,397,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,398,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,409,        return this.noDataMessagePaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,421,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,422,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,424,        this.noDataMessagePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,425,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,426,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,461,        this.parent = parent;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,462,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,473,        Plot p = getParent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,474,        if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,475,            return this;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,478,            return p.getRootPlot();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,494,        return (getParent() != null);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,505,        return this.insets;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,534,"            throw new IllegalArgumentException(""Null 'insets' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,567,            if (this.backgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,568,                this.backgroundPaint = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,569,                fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,578,            this.backgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,579,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,582,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,592,        return this.backgroundAlpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,604,        if (this.backgroundAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,605,            this.backgroundAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,606,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,608,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,621,            result = p.getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,662,        this.drawingSupplier = supplier;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,663,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,664,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,666,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,677,        return this.backgroundImage;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,689,        this.backgroundImage = image;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,690,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,691,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,702,        return this.backgroundImageAlignment;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,715,        if (this.backgroundImageAlignment != alignment) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,716,            this.backgroundImageAlignment = alignment;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,717,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,719,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,731,        return this.backgroundImageAlpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,746,        if (alpha < 0.0f || alpha > 1.0f),0.0,0,-1,0
org/jfree/chart/plot/Plot,4,747,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,749,        if (this.backgroundImageAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,750,            this.backgroundImageAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,751,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,753,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,769,        return this.outlineVisible;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,783,        this.outlineVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,784,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,785,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,795,        return this.outlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,808,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,809,            if (this.outlineStroke != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,810,                this.outlineStroke = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,811,                fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,815,            if (this.outlineStroke != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,816,                if (this.outlineStroke.equals(stroke)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,817,                    return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,820,            this.outlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,821,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,823,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,833,        return this.outlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,847,            if (this.outlinePaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,848,                this.outlinePaint = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,849,                fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,855,                    return;  // nothing to do,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,871,        return this.foregroundAlpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,883,        if (this.foregroundAlpha != alpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,884,            this.foregroundAlpha = alpha;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,885,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,887,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,897,        return null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,911,        return this.notify;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,925,        this.notify = notify;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,927,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,928,            notifyListeners(new PlotChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,930,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,951,"        this.listenerList.remove(PlotChangeListener.class, listener);",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,952,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,963,            return;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1015,"        fillBackground(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1016,"        drawBackgroundImage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1017,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1030,"        fillBackground(g2, area, PlotOrientation.VERTICAL);",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1031,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1047,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1048,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1050,        if (this.backgroundPaint == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1051,            return;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1053,        Paint p = this.backgroundPaint;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1054,        if (p instanceof GradientPaint) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1055,            GradientPaint gp = (GradientPaint) p;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1056,            if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1057,"                p = new GradientPaint((float) area.getCenterX(),",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1062,            else if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1063,"                p = new GradientPaint((float) area.getMinX(),",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1069,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1070,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1072,        g2.setPaint(p);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1073,        g2.fill(area);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1074,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1075,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1089,        if (this.backgroundImage != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1090,            Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1091,"            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1093,"            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1096,"            Align.align(dest, area, this.backgroundImageAlignment);",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1097,"            g2.drawImage(this.backgroundImage, (int) dest.getX(),",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1100,            g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1102,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1114,        if (!this.outlineVisible) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1115,            return;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1117,        if ((this.outlineStroke != null) && (this.outlinePaint != null)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1118,            g2.setStroke(this.outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1119,            g2.setPaint(this.outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1120,            g2.draw(area);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1122,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1131,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1132,        g2.clip(area);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1133,        String message = this.noDataMessage;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1134,        if (message != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1135,            g2.setFont(this.noDataMessageFont);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1136,            g2.setPaint(this.noDataMessagePaint);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1137,            TextBlock block = TextUtilities.createTextBlock(,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1141,"            block.draw(g2, (float) area.getCenterX(),",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1144,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1145,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1163,		if (plotState != null && plotState.getOwner() != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1164,			EntityCollection e = plotState.getOwner().getEntityCollection();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1165,			if (e != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1166,"                e.add(new PlotEntity(dataArea, this, toolTip, urlText));",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1169,	},0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1183,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1193,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1213,        PlotChangeEvent newEvent = new PlotChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1214,        newEvent.setType(ChartChangeEventType.DATASET_UPDATED);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1215,        notifyListeners(newEvent);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1216,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1227,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1228,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1243,        double result = x;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1244,        if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1245,            result = result + w1;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1247,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1248,            result = result + w2;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1250,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1267,        double result = y;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1268,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1269,            result = result + h1;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1271,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1272,            result = result + h2;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1274,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1286,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1287,            return true;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1289,        if (!(obj instanceof Plot)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1290,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1292,        Plot that = (Plot) obj;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1293,"        if (!ObjectUtilities.equal(this.noDataMessage, that.noDataMessage)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1294,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1296,        if (!ObjectUtilities.equal(,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1299,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1301,"        if (!PaintUtilities.equal(this.noDataMessagePaint,",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1303,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1305,"        if (!ObjectUtilities.equal(this.insets, that.insets)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1306,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1308,        if (this.outlineVisible != that.outlineVisible) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1309,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1311,"        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1312,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1314,"        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1315,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1317,"        if (!PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1318,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1320,"        if (!ObjectUtilities.equal(this.backgroundImage,",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1322,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1324,        if (this.backgroundImageAlignment != that.backgroundImageAlignment) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1325,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1327,        if (this.backgroundImageAlpha != that.backgroundImageAlpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1328,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1330,        if (this.foregroundAlpha != that.foregroundAlpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1331,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1333,        if (this.backgroundAlpha != that.backgroundAlpha) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1334,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1336,        if (!this.drawingSupplier.equals(that.drawingSupplier)) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1337,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1339,        if (this.notify != that.notify) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1340,            return false;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1342,        return true;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1355,        Plot clone = (Plot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1358,        if (this.datasetGroup != null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1359,            clone.datasetGroup,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1362,        clone.drawingSupplier,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1364,        clone.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1365,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1377,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1378,"        SerialUtilities.writePaint(this.noDataMessagePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1379,"        SerialUtilities.writeStroke(this.outlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1380,"        SerialUtilities.writePaint(this.outlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1382,"        SerialUtilities.writePaint(this.backgroundPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1383,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1395,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1396,        this.noDataMessagePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1397,        this.outlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1398,        this.outlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1400,        this.backgroundPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1402,        this.listenerList = new EventListenerList();,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1404,    },0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1417,        if (location == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1418,"            throw new IllegalArgumentException(""Null 'location' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1420,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1421,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1424,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1426,        if (location == AxisLocation.TOP_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1427,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1428,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1430,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1431,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1434,        else if (location == AxisLocation.TOP_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1435,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1436,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1438,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1439,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1442,        else if (location == AxisLocation.BOTTOM_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1443,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1444,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1446,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1447,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1450,        else if (location == AxisLocation.BOTTOM_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1451,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1452,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1454,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1455,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1459,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1460,"            throw new IllegalStateException(""resolveDomainAxisLocation()"");",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1462,        return result;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1477,        if (location == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1478,"            throw new IllegalArgumentException(""Null 'location' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1480,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1481,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1484,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1486,        if (location == AxisLocation.TOP_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1487,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1488,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1490,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1491,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1494,        else if (location == AxisLocation.TOP_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1495,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1496,                result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1498,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1499,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1502,        else if (location == AxisLocation.BOTTOM_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1503,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1504,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1506,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1507,                result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1510,        else if (location == AxisLocation.BOTTOM_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1511,            if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1512,                result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1514,            else if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1515,                result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1520,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1521,"            throw new IllegalStateException(""resolveRangeAxisLocation()"");",0.0,0,-1,0
org/jfree/chart/plot/Plot,4,1523,        return result;,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,83,        super(area);,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,84,    },0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,97,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,108,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,109,    },0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,121,        return this.seriesKey;,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,134,        this.seriesKey = key;,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,135,    },0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,145,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,146,            return true;,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,148,        if (!(obj instanceof LegendItemEntity)) {,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,149,            return false;,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,151,        LegendItemEntity that = (LegendItemEntity) obj;,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,152,"        if (!ObjectUtilities.equal(this.seriesKey, that.seriesKey)) {",0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,153,            return false;,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,155,"        if (!ObjectUtilities.equal(this.dataset, that.dataset)) {",0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,156,            return false;,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,158,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,170,        return super.clone();,0.0,0,-1,0
org/jfree/chart/entity/LegendItemEntity,4,180,"        return ""LegendItemEntity: seriesKey="" + this.seriesKey",0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,100,"        this(prefix, DEFAULT_SERIES_PARAMETER, DEFAULT_ITEM_PARAMETER);",0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,101,    },0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,116,"            throw new IllegalArgumentException(""Null 'prefix' argument."");",0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,119,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,123,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,142,        String url = this.prefix;,0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,143,"        boolean firstParameter = url.indexOf(""?"") == -1;",0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,144,"        url += firstParameter ? ""?"" : ""&amp;"";",0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,145,"        url += this.seriesParameterName + ""="" + series",0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,147,        return url;,0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,158,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,159,            return true;,0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,161,        if (!(obj instanceof StandardXYURLGenerator)) {,0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,162,            return false;,0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,164,        StandardXYURLGenerator that = (StandardXYURLGenerator) obj;,0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,165,"        if (!ObjectUtilities.equal(that.prefix, this.prefix)) {",0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,166,            return false;,0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,168,"        if (!ObjectUtilities.equal(that.seriesParameterName,",0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,170,            return false;,0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,172,"        if (!ObjectUtilities.equal(that.itemParameterName,",0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,174,            return false;,0.0,0,-1,0
org/jfree/chart/urls/StandardXYURLGenerator,4,176,        return true;,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,4,82,    private ResourceBundleWrapper() {,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,4,84,    },0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,4,98,        List urlsNoBase = new ArrayList();,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,4,100,        URL[] urls = urlClassLoader.getURLs();,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,4,101,        for (int i = 0; i < urls.length; i++) {,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,4,102,            if (! urls[i].sameFile(codeBase)) {,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,4,103,                urlsNoBase.add(urls[i]);,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,4,107,        URL[] urlsNoBaseArray = (URL[]) urlsNoBase.toArray(new URL[0]);,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,4,108,        noCodeBaseClassLoader = URLClassLoader.newInstance(urlsNoBaseArray);,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,4,109,    },0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,4,123,"            return ResourceBundle.getBundle(baseName, Locale.getDefault(),",0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,4,146,        if (noCodeBaseClassLoader != null) {,0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,4,147,"            return ResourceBundle.getBundle(baseName, locale,",0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,4,152,"            return ResourceBundle.getBundle(baseName, locale);",0.0,0,-1,0
org/jfree/chart/util/ResourceBundleWrapper,4,168,"        return ResourceBundle.getBundle(baseName, locale, loader);",0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,60,    private PaintUtilities() {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,61,    },0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,76,        if (p1 == null) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,77,            return (p2 == null);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,79,        if (p2 == null) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,80,            return false;,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,83,        boolean result = false;,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,85,        if (p1 instanceof GradientPaint && p2 instanceof GradientPaint) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,86,            GradientPaint gp1 = (GradientPaint) p1;,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,87,            GradientPaint gp2 = (GradientPaint) p2;,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,88,            result = gp1.getColor1().equals(gp2.getColor1()),0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,94,        },0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,96,            result = p1.equals(p2);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,98,        return result;,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,113,          Field[] fields = Color.class.getFields();,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,114,          for (int i = 0; i < fields.length; i++) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,115,              Field f = fields[i];,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,116,              if (Modifier.isPublic(f.getModifiers()),0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,119,                  String name = f.getName();,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,120,                  Object oColor = f.get(null);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,121,                  if (oColor instanceof Color) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,122,                      if (c.equals(oColor)) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,123,                          return name;,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,131,      },0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,129,      catch (Exception e) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,134,      String color = Integer.toHexString(c.getRGB() & 0x00ffffff);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,135,      StringBuffer retval = new StringBuffer(7);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,136,"      retval.append(""#"");",0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,138,      int fillUp = 6 - color.length();,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,139,      for (int i = 0; i < fillUp; i++) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,140,"          retval.append(""0"");",0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,143,      retval.append(color);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,144,      return retval.toString();,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,155,      if (value == null) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,156,          return Color.black;,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,160,          return Color.decode(value);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,162,      catch (NumberFormatException nfe) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,166,              final Field f = Color.class.getField(value);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,168,              return (Color) f.get(null);,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,170,          catch (Exception ce) {,0.0,0,-1,0
org/jfree/chart/util/PaintUtilities,4,172,              return Color.black;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,90,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,103,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,104,            return true;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,106,        if (!(obj instanceof RectangleEdge)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,107,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,110,        RectangleEdge order = (RectangleEdge) obj;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,111,        if (!this.name.equals(order.name)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,112,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,115,        return true;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,125,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,137,        return (edge == RectangleEdge.TOP || edge == RectangleEdge.BOTTOM);,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,149,        return (edge == RectangleEdge.LEFT || edge == RectangleEdge.RIGHT);,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,160,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,161,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,162,            result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,164,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,165,            result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,167,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,168,            result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,170,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,171,            result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,173,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,186,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,187,        if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,188,            result = rectangle.getMinY();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,190,        else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,191,            result = rectangle.getMaxY();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,193,        else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,194,            result = rectangle.getMinX();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,196,        else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,197,            result = rectangle.getMaxX();,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,199,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,210,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,211,        if (this.equals(RectangleEdge.TOP)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,212,            result = RectangleEdge.TOP;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,214,        else if (this.equals(RectangleEdge.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,215,            result = RectangleEdge.BOTTOM;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,217,        else if (this.equals(RectangleEdge.LEFT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,218,            result = RectangleEdge.LEFT;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,220,        else if (this.equals(RectangleEdge.RIGHT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,221,            result = RectangleEdge.RIGHT;,0.0,0,-1,0
org/jfree/chart/util/RectangleEdge,4,223,        return result;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,86,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,98,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,99,            return true;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,101,        if (!(obj instanceof VerticalAlignment)) {,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,102,            return false;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,105,        VerticalAlignment alignment = (VerticalAlignment) obj;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,106,        if (!this.name.equals(alignment.name)) {,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,107,            return false;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,109,        return true;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,118,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,129,        if (this.equals(VerticalAlignment.TOP)) {,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,130,            return VerticalAlignment.TOP;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,132,        else if (this.equals(VerticalAlignment.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,133,            return VerticalAlignment.BOTTOM;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,135,        else if (this.equals(VerticalAlignment.CENTER)) {,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,136,            return VerticalAlignment.CENTER;,0.0,0,-1,0
org/jfree/chart/util/VerticalAlignment,4,139,            return null;  // this should never happen,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,76,    private LengthAdjustmentType(String name) {,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,77,        this.name = name;,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,78,    },0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,57,    public static final LengthAdjustmentType NO_CHANGE,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,61,    public static final LengthAdjustmentType EXPAND,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,65,    public static final LengthAdjustmentType CONTRACT,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,86,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,98,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,99,            return true;,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,101,        if (!(obj instanceof LengthAdjustmentType)) {,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,102,            return false;,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,104,        final LengthAdjustmentType that = (LengthAdjustmentType) obj;,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,105,        if (!this.name.equals(that.name)) {,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,106,            return false;,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,108,        return true;,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,117,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,128,        if (this.equals(LengthAdjustmentType.NO_CHANGE)) {,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,129,            return LengthAdjustmentType.NO_CHANGE;,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,131,        else if (this.equals(LengthAdjustmentType.EXPAND)) {,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,132,            return LengthAdjustmentType.EXPAND;,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,134,        else if (this.equals(LengthAdjustmentType.CONTRACT)) {,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,135,            return LengthAdjustmentType.CONTRACT;,0.0,0,-1,0
org/jfree/chart/util/LengthAdjustmentType,4,137,        return null;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,124,"            throw new IllegalArgumentException(""Requires index >= 0."");",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,127,            Object[] enlarged = new Object[index + this.increment];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,128,"            System.arraycopy(this.objects, 0, enlarged, 0, this.objects.length);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,129,            this.objects = enlarged;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,178,        if (obj == null) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,179,            return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,182,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,183,            return true;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,186,        if (!(obj instanceof AbstractObjectList)) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,187,            return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,190,        AbstractObjectList other = (AbstractObjectList) obj;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,191,        int listSize = size();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,192,        for (int i = 0; i < listSize; i++) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,193,"           if (!ObjectUtilities.equal(get(i), other.get(i))) {",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,194,               return false;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,197,        return true;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,206,        int result = 127;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,207,        int size = size();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,208,"        result = HashUtilities.hashCode(result, size());",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,211,        if (size > 0) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,212,"            result = HashUtilities.hashCode(result, this.objects[0]);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,213,            if (size > 1) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,214,"                result = HashUtilities.hashCode(result, this.objects[size - 1]);",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,215,                if (size > 2) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,216,"                    result = HashUtilities.hashCode(result,",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,221,        return result;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,235,        AbstractObjectList clone = (AbstractObjectList) super.clone();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,236,        if (this.objects != null) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,237,            clone.objects = new Object[this.objects.length];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,238,"            System.arraycopy(this.objects, 0, clone.objects, 0,",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,241,        return clone;,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,255,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,256,        int count = size();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,257,        stream.writeInt(count);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,258,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,259,            final Object object = get(i);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,260,            if (object != null && object instanceof Serializable) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,261,                stream.writeInt(i);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,262,                stream.writeObject(object);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,265,                stream.writeInt(-1);,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,269,    },0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,282,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,283,        this.objects = new Object[this.size];,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,284,        int count = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,285,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,286,            int index = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,287,            if (index != -1) {,0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,288,"                set(index, stream.readObject());",0.0,0,-1,0
org/jfree/chart/util/AbstractObjectList,4,292,    },0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,88,"        this(10.0, ""10"", true);",0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,89,    },0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,100,"        this(base, baseLabel, ""^"", showBase);",0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,101,    },0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,115,            boolean showBase) {,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,80,"    private NumberFormat formatter = new DecimalFormat(""0.0#"");",0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,116,        if (baseLabel == null) {,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,117,"            throw new IllegalArgumentException(""Null 'baseLabel' argument."");",0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,119,        if (powerLabel == null) {,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,120,"            throw new IllegalArgumentException(""Null 'powerLabel' argument."");",0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,122,        this.base = base;,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,123,        this.baseLog = Math.log(this.base);,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,124,        this.baseLabel = baseLabel;,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,125,        this.showBase = showBase;,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,126,        this.powerLabel = powerLabel;,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,127,    },0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,137,        return (NumberFormat) this.formatter.clone();,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,148,        if (format == null) {,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,149,"            throw new IllegalArgumentException(""Null 'format' argument."");",0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,151,        this.formatter = format;,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,152,    },0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,162,        return Math.log(value) / this.baseLog;,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,176,        StringBuffer result = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,177,        if (this.showBase) {,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,178,            result.append(this.baseLabel);,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,179,            result.append(this.powerLabel);,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,181,        result.append(this.formatter.format(calculateLog(number)));,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,182,        return result;,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,197,        StringBuffer result = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,198,        if (this.showBase) {,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,199,            result.append(this.baseLabel);,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,200,"            result.append(""^"");",0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,202,        result.append(this.formatter.format(calculateLog(number)));,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,203,        return result;,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,216,        return null; // don't bother with parsing,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,227,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,228,            return true;,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,230,        if (!(obj instanceof LogFormat)) {,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,231,            return false;,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,233,        LogFormat that = (LogFormat) obj;,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,234,        if (this.base != that.base) {,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,235,            return false;,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,237,        if (!this.baseLabel.equals(that.baseLabel)) {,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,238,            return false;,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,240,        if (this.baseLog != that.baseLog) {,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,241,            return false;,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,243,        if (this.showBase != that.showBase) {,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,244,            return false;,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,246,        if (!this.formatter.equals(that.formatter)) {,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,247,            return false;,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,249,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,258,        LogFormat clone = (LogFormat) super.clone();,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,259,        clone.formatter = (NumberFormat) this.formatter.clone();,0.0,0,-1,0
org/jfree/chart/util/LogFormat,4,260,        return clone;,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,94,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,95,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,97,        return (Paint) this.store.get(key);,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,110,        return this.store.containsKey(key);,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,124,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,125,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,127,"        this.store.put(key, paint);",0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,128,    },0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,145,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,146,            return true;,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,148,        if (!(obj instanceof PaintMap)) {,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,149,            return false;,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,151,        PaintMap that = (PaintMap) obj;,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,152,        if (this.store.size() != that.store.size()) {,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,153,            return false;,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,155,        Set keys = this.store.keySet();,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,156,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,157,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,158,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,159,            Paint p1 = getPaint(key);,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,160,            Paint p2 = that.getPaint(key);,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,161,"            if (!PaintUtilities.equal(p1, p2)) {",0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,162,                return false;,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,164,        },0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,165,        return true;,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,178,        return super.clone();,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,189,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,190,        stream.writeInt(this.store.size());,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,191,        Set keys = this.store.keySet();,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,192,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,193,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,194,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,195,            stream.writeObject(key);,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,196,            Paint paint = getPaint(key);,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,197,"            SerialUtilities.writePaint(paint, stream);",0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,198,        },0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,199,    },0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,211,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,212,        this.store = new HashMap();,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,213,        int keyCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,214,        for (int i = 0; i < keyCount; i++) {,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,215,            Comparable key = (Comparable) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,216,            Paint paint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,217,"            this.store.put(key, paint);",0.0,0,-1,0
org/jfree/chart/util/PaintMap,4,219,    },0.0,0,-1,0
org/jfree/chart/util/UnitType,4,79,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/UnitType,4,91,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,4,92,            return true;,0.0,0,-1,0
org/jfree/chart/util/UnitType,4,94,        if (!(obj instanceof UnitType)) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,4,95,            return false;,0.0,0,-1,0
org/jfree/chart/util/UnitType,4,97,        UnitType that = (UnitType) obj;,0.0,0,-1,0
org/jfree/chart/util/UnitType,4,98,        if (!this.name.equals(that.name)) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,4,99,            return false;,0.0,0,-1,0
org/jfree/chart/util/UnitType,4,101,        return true;,0.0,0,-1,0
org/jfree/chart/util/UnitType,4,110,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/UnitType,4,121,        if (this.equals(UnitType.ABSOLUTE)) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,4,122,            return UnitType.ABSOLUTE;,0.0,0,-1,0
org/jfree/chart/util/UnitType,4,124,        else if (this.equals(UnitType.RELATIVE)) {,0.0,0,-1,0
org/jfree/chart/util/UnitType,4,125,            return UnitType.RELATIVE;,0.0,0,-1,0
org/jfree/chart/util/UnitType,4,127,        return null;,0.0,0,-1,0
org/jfree/chart/util/Size2D,4,72,"        this(0.0, 0.0);",0.0,0,-1,0
org/jfree/chart/util/Size2D,4,73,    },0.0,0,-1,0
org/jfree/chart/util/Size2D,4,81,"    public Size2D(double width, double height) {",0.0,0,-1,0
org/jfree/chart/util/Size2D,4,82,        this.width = width;,0.0,0,-1,0
org/jfree/chart/util/Size2D,4,83,        this.height = height;,0.0,0,-1,0
org/jfree/chart/util/Size2D,4,84,    },0.0,0,-1,0
org/jfree/chart/util/Size2D,4,92,        return this.width;,0.0,0,-1,0
org/jfree/chart/util/Size2D,4,101,        this.width = width;,0.0,0,-1,0
org/jfree/chart/util/Size2D,4,102,    },0.0,0,-1,0
org/jfree/chart/util/Size2D,4,110,        return this.height;,0.0,0,-1,0
org/jfree/chart/util/Size2D,4,119,        this.height = height;,0.0,0,-1,0
org/jfree/chart/util/Size2D,4,120,    },0.0,0,-1,0
org/jfree/chart/util/Size2D,4,129,"        return ""Size2D[width="" + this.width + "", height="" + this.height + ""]"";",0.0,0,-1,0
org/jfree/chart/util/Size2D,4,140,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/Size2D,4,141,            return true;,0.0,0,-1,0
org/jfree/chart/util/Size2D,4,143,        if (!(obj instanceof Size2D)) {,0.0,0,-1,0
org/jfree/chart/util/Size2D,4,144,            return false;,0.0,0,-1,0
org/jfree/chart/util/Size2D,4,146,        final Size2D that = (Size2D) obj;,0.0,0,-1,0
org/jfree/chart/util/Size2D,4,147,        if (this.width != that.width) {,0.0,0,-1,0
org/jfree/chart/util/Size2D,4,148,            return false;,0.0,0,-1,0
org/jfree/chart/util/Size2D,4,150,        if (this.height != that.height) {,0.0,0,-1,0
org/jfree/chart/util/Size2D,4,151,            return false;,0.0,0,-1,0
org/jfree/chart/util/Size2D,4,153,        return true;,0.0,0,-1,0
org/jfree/chart/util/Size2D,4,164,        return super.clone();,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,69,        this(GradientPaintTransformType.VERTICAL);,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,70,    },0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,77,    public StandardGradientPaintTransformer(GradientPaintTransformType type) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,78,        if (type == null) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,79,"            throw new IllegalArgumentException(""Null 'type' argument."");",0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,81,        this.type = type;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,82,    },0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,90,        return this.type;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,104,        GradientPaint result = paint;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,105,        Rectangle2D bounds = target.getBounds2D();,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,107,        if (this.type.equals(GradientPaintTransformType.VERTICAL)) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,108,"            result = new GradientPaint((float) bounds.getCenterX(),",0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,113,        else if (this.type.equals(GradientPaintTransformType.HORIZONTAL)) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,114,"            result = new GradientPaint((float) bounds.getMinX(),",0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,119,        else if (this.type.equals(,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,121,"            result = new GradientPaint((float) bounds.getCenterX(),",0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,126,        else if (this.type.equals(GradientPaintTransformType.CENTER_VERTICAL)) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,127,"            result = new GradientPaint((float) bounds.getCenterX(),",0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,133,        return result;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,144,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,145,            return true;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,147,        if (!(obj instanceof StandardGradientPaintTransformer)) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,148,            return false;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,150,        StandardGradientPaintTransformer that,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,152,        if (this.type != that.type) {,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,153,            return false;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,155,        return true;,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,168,        return super.clone();,0.0,0,-1,0
org/jfree/chart/util/StandardGradientPaintTransformer,4,177,        return (this.type != null ? this.type.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,82,    private GradientPaintTransformType(String name) {,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,83,        this.name = name;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,84,    },0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,56,    public static final GradientPaintTransformType VERTICAL,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,60,    public static final GradientPaintTransformType HORIZONTAL,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,65,    public static final GradientPaintTransformType CENTER_VERTICAL,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,70,    public static final GradientPaintTransformType CENTER_HORIZONTAL,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,92,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,105,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,106,            return true;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,108,        if (!(obj instanceof GradientPaintTransformType)) {,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,109,            return false;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,112,        GradientPaintTransformType t = (GradientPaintTransformType) obj;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,113,        if (!this.name.equals(t.name)) {,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,114,            return false;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,117,        return true;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,126,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,137,        GradientPaintTransformType result = null;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,138,        if (this.equals(GradientPaintTransformType.HORIZONTAL)) {,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,139,            result = GradientPaintTransformType.HORIZONTAL;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,141,        else if (this.equals(GradientPaintTransformType.VERTICAL)) {,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,142,            result = GradientPaintTransformType.VERTICAL;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,144,        else if (this.equals(GradientPaintTransformType.CENTER_HORIZONTAL)) {,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,145,            result = GradientPaintTransformType.CENTER_HORIZONTAL;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,147,        else if (this.equals(GradientPaintTransformType.CENTER_VERTICAL)) {,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,148,            result = GradientPaintTransformType.CENTER_VERTICAL;,0.0,0,-1,0
org/jfree/chart/util/GradientPaintTransformType,4,150,        return result;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,85,    private ShapeUtilities() {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,86,    },0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,390,"    private static final float SQRT2 = (float) Math.pow(2.0, 0.5);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,104,        if (shape instanceof Cloneable) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,106,                return (Shape) ObjectUtilities.clone(shape);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,108,            catch (CloneNotSupportedException cnse) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,111,        Shape result = null;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,112,        return result;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,129,        if (s1 instanceof Line2D && s2 instanceof Line2D) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,130,"            return equal((Line2D) s1, (Line2D) s2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,132,        else if (s1 instanceof Ellipse2D && s2 instanceof Ellipse2D) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,133,"            return equal((Ellipse2D) s1, (Ellipse2D) s2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,135,        else if (s1 instanceof Arc2D && s2 instanceof Arc2D) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,136,"            return equal((Arc2D) s1, (Arc2D) s2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,138,        else if (s1 instanceof Polygon && s2 instanceof Polygon) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,139,"            return equal((Polygon) s1, (Polygon) s2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,141,        else if (s1 instanceof GeneralPath && s2 instanceof GeneralPath) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,142,"            return equal((GeneralPath) s1, (GeneralPath) s2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,146,"            return ObjectUtilities.equal(s1, s2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,160,        if (l1 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,161,            return (l2 == null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,163,        if (l2 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,164,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,166,        if (!l1.getP1().equals(l2.getP1())) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,167,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,169,        if (!l1.getP2().equals(l2.getP2())) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,170,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,172,        return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,185,        if (e1 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,186,            return (e2 == null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,188,        if (e2 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,189,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,191,        if (!e1.getFrame().equals(e2.getFrame())) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,192,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,194,        return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,207,        if (a1 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,208,            return (a2 == null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,210,        if (a2 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,211,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,213,        if (!a1.getFrame().equals(a2.getFrame())) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,214,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,216,        if (a1.getAngleStart() != a2.getAngleStart()) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,217,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,219,        if (a1.getAngleExtent() != a2.getAngleExtent()) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,220,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,222,        if (a1.getArcType() != a2.getArcType()) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,223,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,225,        return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,238,        if (p1 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,239,            return (p2 == null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,241,        if (p2 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,242,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,244,        if (p1.npoints != p2.npoints) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,245,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,247,"        if (!Arrays.equals(p1.xpoints, p2.xpoints)) {",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,248,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,250,"        if (!Arrays.equals(p1.ypoints, p2.ypoints)) {",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,251,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,253,        return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,266,        if (p1 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,267,            return (p2 == null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,269,        if (p2 == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,270,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,272,        if (p1.getWindingRule() != p2.getWindingRule()) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,273,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,275,        PathIterator iterator1 = p1.getPathIterator(null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,276,        PathIterator iterator2 = p2.getPathIterator(null);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,277,        double[] d1 = new double[6];,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,278,        double[] d2 = new double[6];,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,279,        boolean done = iterator1.isDone() && iterator2.isDone();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,280,        while (!done) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,281,            if (iterator1.isDone() != iterator2.isDone()) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,282,                return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,284,            int seg1 = iterator1.currentSegment(d1);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,285,            int seg2 = iterator2.currentSegment(d2);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,286,            if (seg1 != seg2) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,287,                return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,289,"            if (!Arrays.equals(d1, d2)) {",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,290,                return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,292,            iterator1.next();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,293,            iterator2.next();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,294,            done = iterator1.isDone() && iterator2.isDone();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,295,        },0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,296,        return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,311,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,312,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,314,        AffineTransform transform = AffineTransform.getTranslateInstance(,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,316,        return transform.createTransformedShape(shape);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,335,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,336,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,338,        if (anchor == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,339,"            throw new IllegalArgumentException(""Null 'anchor' argument."");",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,341,"        Point2D anchorPoint = RectangleAnchor.coordinates(shape.getBounds2D(),",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,343,        AffineTransform transform = AffineTransform.getTranslateInstance(,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,345,        return transform.createTransformedShape(shape);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,361,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,362,            return null;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,364,"        AffineTransform rotate = AffineTransform.getRotateInstance(angle, x, y);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,365,        Shape result = rotate.createTransformedShape(base);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,366,        return result;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,381,        AffineTransform saved = g2.getTransform();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,382,"        AffineTransform rotate = AffineTransform.getRotateInstance(angle, x, y);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,383,        g2.transform(rotate);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,384,        g2.draw(shape);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,385,        g2.setTransform(saved);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,387,    },0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,401,        GeneralPath p0 = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,402,"        p0.moveTo(-l - t, -l + t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,403,"        p0.lineTo(-l + t, -l - t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,404,"        p0.lineTo(0.0f, -t * SQRT2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,405,"        p0.lineTo(l - t, -l - t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,406,"        p0.lineTo(l + t, -l + t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,407,"        p0.lineTo(t * SQRT2, 0.0f);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,408,"        p0.lineTo(l + t, l - t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,409,"        p0.lineTo(l - t, l + t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,410,"        p0.lineTo(0.0f, t * SQRT2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,411,"        p0.lineTo(-l + t, l + t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,412,"        p0.lineTo(-l - t, l - t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,413,"        p0.lineTo(-t * SQRT2, 0.0f);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,414,        p0.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,415,        return p0;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,427,        GeneralPath p0 = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,428,"        p0.moveTo(-l, t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,429,"        p0.lineTo(-t, t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,430,"        p0.lineTo(-t, l);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,431,"        p0.lineTo(t, l);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,432,"        p0.lineTo(t, t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,433,"        p0.lineTo(l, t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,434,"        p0.lineTo(l, -t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,435,"        p0.lineTo(t, -t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,436,"        p0.lineTo(t, -l);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,437,"        p0.lineTo(-t, -l);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,438,"        p0.lineTo(-t, -t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,439,"        p0.lineTo(-l, -t);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,440,        p0.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,441,        return p0;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,452,        GeneralPath p0 = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,453,"        p0.moveTo(0.0f, -s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,454,"        p0.lineTo(s, 0.0f);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,455,"        p0.lineTo(0.0f, s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,456,"        p0.lineTo(-s, 0.0f);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,457,        p0.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,458,        return p0;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,469,        GeneralPath p0 = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,470,"        p0.moveTo(0.0f, -s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,471,"        p0.lineTo(s, s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,472,"        p0.lineTo(-s, s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,473,        p0.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,474,        return p0;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,485,        GeneralPath p0 = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,486,"        p0.moveTo(0.0f, s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,487,"        p0.lineTo(s, -s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,488,"        p0.lineTo(-s, -s);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,489,        p0.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,490,        return p0;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,504,        GeneralPath result = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,505,        float x1 = (float) line.getX1();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,506,        float x2 = (float) line.getX2();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,507,        float y1 = (float) line.getY1();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,508,        float y2 = (float) line.getY2();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,509,        if ((x2 - x1) != 0.0) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,510,            double theta = Math.atan((y2 - y1) / (x2 - x1));,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,511,            float dx = (float) Math.sin(theta) * width;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,512,            float dy = (float) Math.cos(theta) * width;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,513,"            result.moveTo(x1 - dx, y1 + dy);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,514,"            result.lineTo(x1 + dx, y1 - dy);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,515,"            result.lineTo(x2 + dx, y2 - dy);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,516,"            result.lineTo(x2 - dx, y2 + dy);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,517,            result.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,518,        },0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,521,"            result.moveTo(x1 - width / 2.0f, y1);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,522,"            result.lineTo(x1 + width / 2.0f, y1);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,523,"            result.lineTo(x2 + width / 2.0f, y2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,524,"            result.lineTo(x2 - width / 2.0f, y2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,525,            result.closePath();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,527,        return result;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,546,"        x = Math.max(area.getMinX(), Math.min(x, area.getMaxX()));",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,547,"        y = Math.max(area.getMinY(), Math.min(y, area.getMaxY()));",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,548,"        return new Point2D.Double(x, y);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,563,        double x0 = rect1.getX();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,564,        double y0 = rect1.getY();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,565,        double x = rect2.getX();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,566,        double y = rect2.getY();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,567,        double w = rect2.getWidth();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,568,        double h = rect2.getHeight();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,570,        return ((x >= x0) && (y >= y0),0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,588,      double x0 = rect1.getX();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,589,      double y0 = rect1.getY();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,591,      double x = rect2.getX();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,592,      double width = rect2.getWidth();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,593,      double y = rect2.getY();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,594,      double height = rect2.getHeight();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,595,      return (x + width >= x0 && y + height >= y0 && x <= x0 + rect1.getWidth(),0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,612,        return (x >= rect.getMinX() && x <= rect.getMaxX(),0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,629,        double x1 = line.getX1();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,630,        double y1 = line.getY1();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,631,        double x2 = line.getX2();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,632,        double y2 = line.getY2();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,634,        double minX = rect.getMinX();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,635,        double maxX = rect.getMaxX();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,636,        double minY = rect.getMinY();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,637,        double maxY = rect.getMaxY();,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,639,"        int f1 = rect.outcode(x1, y1);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,640,"        int f2 = rect.outcode(x2, y2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,642,        while ((f1 | f2) != 0) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,643,            if ((f1 & f2) != 0) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,644,                return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,646,            double dx = (x2 - x1);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,647,            double dy = (y2 - y1);,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,650,            if (f1 != 0) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,653,                if ((f1 & Rectangle2D.OUT_LEFT) == Rectangle2D.OUT_LEFT,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,655,                    y1 = y1 + (minX - x1) * dy / dx;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,656,                    x1 = minX;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,658,                else if ((f1 & Rectangle2D.OUT_RIGHT) == Rectangle2D.OUT_RIGHT,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,660,                    y1 = y1 + (maxX - x1) * dy / dx;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,661,                    x1 = maxX;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,663,                else if ((f1 & Rectangle2D.OUT_BOTTOM) == Rectangle2D.OUT_BOTTOM,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,665,                    x1 = x1 + (maxY - y1) * dx / dy;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,666,                    y1 = maxY;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,668,                else if ((f1 & Rectangle2D.OUT_TOP) == Rectangle2D.OUT_TOP,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,670,                    x1 = x1 + (minY - y1) * dx / dy;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,671,                    y1 = minY;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,673,"                f1 = rect.outcode(x1, y1);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,675,            else if (f2 != 0) {,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,678,                if ((f2 & Rectangle2D.OUT_LEFT) == Rectangle2D.OUT_LEFT,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,680,                    y2 = y2 + (minX - x2) * dy / dx;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,681,                    x2 = minX;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,683,                else if ((f2 & Rectangle2D.OUT_RIGHT) == Rectangle2D.OUT_RIGHT,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,685,                    y2 = y2 + (maxX - x2) * dy / dx;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,686,                    x2 = maxX;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,688,                else if ((f2 & Rectangle2D.OUT_BOTTOM) == Rectangle2D.OUT_BOTTOM,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,690,                    x2 = x2 + (maxY - y2) * dx / dy;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,691,                    y2 = maxY;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,693,                else if ((f2 & Rectangle2D.OUT_TOP) == Rectangle2D.OUT_TOP,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,695,                    x2 = x2 + (minY - y2) * dx / dy;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,696,                    y2 = minY;,0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,698,"                f2 = rect.outcode(x2, y2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,700,        },0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,702,"        line.setLine(x1, y1, x2, y2);",0.0,0,-1,0
org/jfree/chart/util/ShapeUtilities,4,703,"        return true;  // the line is visible - if it wasn't, we'd have",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,116,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,129,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,130,            return true;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,132,        if (!(obj instanceof RectangleAnchor)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,133,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,136,        final RectangleAnchor order = (RectangleAnchor) obj;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,137,        if (!this.name.equals(order.name)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,138,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,141,        return true;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,150,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,163,        Point2D result = new Point2D.Double();,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,164,        if (anchor == RectangleAnchor.CENTER) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,165,"            result.setLocation(rectangle.getCenterX(), rectangle.getCenterY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,167,        else if (anchor == RectangleAnchor.TOP) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,168,"            result.setLocation(rectangle.getCenterX(), rectangle.getMinY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,170,        else if (anchor == RectangleAnchor.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,171,"            result.setLocation(rectangle.getCenterX(), rectangle.getMaxY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,173,        else if (anchor == RectangleAnchor.LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,174,"            result.setLocation(rectangle.getMinX(), rectangle.getCenterY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,176,        else if (anchor == RectangleAnchor.RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,177,"            result.setLocation(rectangle.getMaxX(), rectangle.getCenterY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,179,        else if (anchor == RectangleAnchor.TOP_LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,180,"            result.setLocation(rectangle.getMinX(), rectangle.getMinY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,182,        else if (anchor == RectangleAnchor.TOP_RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,183,"            result.setLocation(rectangle.getMaxX(), rectangle.getMinY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,185,        else if (anchor == RectangleAnchor.BOTTOM_LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,186,"            result.setLocation(rectangle.getMinX(), rectangle.getMaxY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,188,        else if (anchor == RectangleAnchor.BOTTOM_RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,189,"            result.setLocation(rectangle.getMaxX(), rectangle.getMaxY());",0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,191,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,209,        Rectangle2D result = null;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,210,        final double w = dimensions.getWidth();,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,211,        final double h = dimensions.getHeight();,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,212,        if (anchor == RectangleAnchor.CENTER) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,213,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,217,        else if (anchor == RectangleAnchor.TOP) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,218,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,222,        else if (anchor == RectangleAnchor.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,223,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,227,        else if (anchor == RectangleAnchor.LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,228,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,232,        else if (anchor == RectangleAnchor.RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,233,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,237,        else if (anchor == RectangleAnchor.TOP_LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,238,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,242,        else if (anchor == RectangleAnchor.TOP_RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,243,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,247,        else if (anchor == RectangleAnchor.BOTTOM_LEFT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,248,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,252,        else if (anchor == RectangleAnchor.BOTTOM_RIGHT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,253,            result = new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,257,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,268,        RectangleAnchor result = null;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,269,        if (this.equals(RectangleAnchor.CENTER)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,270,            result = RectangleAnchor.CENTER;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,272,        else if (this.equals(RectangleAnchor.TOP)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,273,            result = RectangleAnchor.TOP;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,275,        else if (this.equals(RectangleAnchor.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,276,            result = RectangleAnchor.BOTTOM;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,278,        else if (this.equals(RectangleAnchor.LEFT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,279,            result = RectangleAnchor.LEFT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,281,        else if (this.equals(RectangleAnchor.RIGHT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,282,            result = RectangleAnchor.RIGHT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,284,        else if (this.equals(RectangleAnchor.TOP_LEFT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,285,            result = RectangleAnchor.TOP_LEFT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,287,        else if (this.equals(RectangleAnchor.TOP_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,288,            result = RectangleAnchor.TOP_RIGHT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,290,        else if (this.equals(RectangleAnchor.BOTTOM_LEFT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,291,            result = RectangleAnchor.BOTTOM_LEFT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,293,        else if (this.equals(RectangleAnchor.BOTTOM_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,294,            result = RectangleAnchor.BOTTOM_RIGHT;,0.0,0,-1,0
org/jfree/chart/util/RectangleAnchor,4,296,        return result;,0.0,0,-1,0
org/jfree/chart/util/ObjectList,4,67,        super(initialCapacity);,0.0,0,-1,0
org/jfree/chart/util/ObjectList,4,68,    },0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,70,        return (Shape) get(index);,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,81,"        set(index, shape);",0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,82,    },0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,93,        return super.clone();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,105,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,106,            return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,108,        if (!(obj instanceof ShapeList)) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,109,            return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,111,        ShapeList that = (ShapeList) obj;,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,112,        int listSize = size();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,113,        for (int i = 0; i < listSize; i++) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,114,"           if (!ShapeUtilities.equal((Shape) get(i), (Shape) that.get(i))) {",0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,115,               return false;,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,118,        return true;,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,128,        return super.hashCode();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,140,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,141,        int count = size();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,142,        stream.writeInt(count);,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,143,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,144,            Shape shape = getShape(i);,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,145,            if (shape != null) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,146,                stream.writeInt(i);,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,147,"                SerialUtilities.writeShape(shape, stream);",0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,150,                stream.writeInt(-1);,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,154,    },0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,167,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,168,        int count = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,169,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,170,            int index = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,171,            if (index != -1) {,0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,172,"                setShape(index, SerialUtilities.readShape(stream));",0.0,0,-1,0
org/jfree/chart/util/ShapeList,4,176,    },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,89,    private ObjectUtilities() {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,90,    },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,80,    private static String classLoaderSource = THREAD_CONTEXT;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,99,        return classLoaderSource;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,113,        ObjectUtilities.classLoaderSource = classLoaderSource;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,114,    },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,125,        if (o1 == o2) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,126,            return true;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,128,        if (o1 != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,129,            return o1.equals(o2);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,132,            return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,145,        int result = 0;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,146,        if (object != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,147,            result = object.hashCode();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,149,        return result;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,162,        if (object == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,163,"            throw new IllegalArgumentException(""Null 'object' argument."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,165,        if (object instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,166,            final PublicCloneable pc = (PublicCloneable) object;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,167,            return pc.clone();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,171,"                final Method method = object.getClass().getMethod(""clone"",",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,173,                if (Modifier.isPublic(method.getModifiers())) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,174,"                    return method.invoke(object, (Object[]) null);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,185,            },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,177,            catch (NoSuchMethodException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,178,                e.printStackTrace();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,180,            catch (IllegalAccessException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,181,                e.printStackTrace();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,183,            catch (InvocationTargetException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,184,                e.printStackTrace();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,187,"        throw new CloneNotSupportedException(""Failed to clone."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,203,        if (collection == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,204,"            throw new IllegalArgumentException(""Null 'collection' argument."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,209,        final Collection result,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,211,        result.clear();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,212,        final Iterator iterator = collection.iterator();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,213,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,214,            final Object item = iterator.next();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,215,            if (item != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,216,                result.add(clone(item));,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,219,                result.add(null);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,221,        },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,222,        return result;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,232,        ObjectUtilities.classLoader = classLoader;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,233,    },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,241,      return classLoader;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,255,        if (classLoader != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,256,            return classLoader;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,258,"        if (""ThreadContext"".equals(classLoaderSource)) {",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,259,            final ClassLoader threadLoader,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,261,            if (threadLoader != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,262,                return threadLoader;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,267,        final ClassLoader applicationCL = c.getClassLoader();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,268,        if (applicationCL == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,269,            return ClassLoader.getSystemClassLoader();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,272,            return applicationCL;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,285,        final ClassLoader cl = getClassLoader(c);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,286,        if (cl == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,287,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,289,        return cl.getResource(name);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,300,        final ClassLoader cl = getClassLoader(c);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,301,"        final String cname = convertName(name, c);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,302,        if (cl == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,303,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,305,        return cl.getResource(cname);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,319,"        if (name.startsWith(""/"")) {",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,321,            return name.substring(1);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,325,        while (c.isArray()) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,326,            c = c.getComponentType();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,329,        final String baseName = c.getName();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,330,        final int index = baseName.lastIndexOf('.');,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,331,        if (index == -1) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,332,            return name;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,335,"        final String pkgName = baseName.substring(0, index);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,336,"        return pkgName.replace('.', '/') + ""/"" + name;",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,349,"        final URL url = getResource(name, context);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,350,        if (url == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,351,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,355,            return url.openStream();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,357,        catch (IOException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,358,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,372,"        final URL url = getResourceRelative(name, context);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,373,        if (url == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,374,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,378,            return url.openStream();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,380,        catch (IOException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,381,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,396,            final ClassLoader loader = getClassLoader(source);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,397,            final Class c = loader.loadClass(className);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,398,            return c.newInstance();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,400,        catch (Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,401,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,421,            ClassLoader loader = getClassLoader(source);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,422,            Class c = loader.loadClass(className);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,423,            if (type.isAssignableFrom(c)) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,424,                return c.newInstance();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,429,        },0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,427,        catch (Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,428,            return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,430,        return null;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,439,        ClassLoader loader = getClassLoader(ObjectUtilities.class);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,440,        if (loader != null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,442,"              loader.loadClass(""java.util.RandomAccess"");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,443,              return true;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,445,            catch (ClassNotFoundException e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,446,              return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,448,            catch(Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,455,            String version = System.getProperty(,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,458,            if (version == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,459,                return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,462,            String[] versions = parseVersions(version);,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,463,"            String[] target = new String[]{ ""1"", ""4"" };",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,464,"            return (ArrayUtilities.compareVersionArrays(versions, target) >= 0);",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,466,        catch(Exception e) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,467,            return false;,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,472,      if (version == null) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,473,        return new String[0];,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,476,      ArrayList versions = new ArrayList();,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,477,"      StringTokenizer strtok = new StringTokenizer(version, ""."");",0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,478,      while (strtok.hasMoreTokens()) {,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,479,          versions.add (strtok.nextToken());,0.0,0,-1,0
org/jfree/chart/util/ObjectUtilities,4,481,      return (String[]) versions.toArray(new String[versions.size()]);,0.0,0,-1,0
org/jfree/chart/util/Rotation,4,92,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/Rotation,4,102,        return this.factor;,0.0,0,-1,0
org/jfree/chart/util/Rotation,4,114,        if (this == o) {,0.0,0,-1,0
org/jfree/chart/util/Rotation,4,115,            return true;,0.0,0,-1,0
org/jfree/chart/util/Rotation,4,117,        if (!(o instanceof Rotation)) {,0.0,0,-1,0
org/jfree/chart/util/Rotation,4,118,            return false;,0.0,0,-1,0
org/jfree/chart/util/Rotation,4,121,        final Rotation rotation = (Rotation) o;,0.0,0,-1,0
org/jfree/chart/util/Rotation,4,123,        if (this.factor != rotation.factor) {,0.0,0,-1,0
org/jfree/chart/util/Rotation,4,124,            return false;,0.0,0,-1,0
org/jfree/chart/util/Rotation,4,127,        return true;,0.0,0,-1,0
org/jfree/chart/util/Rotation,4,136,        final long temp = Double.doubleToLongBits(this.factor);,0.0,0,-1,0
org/jfree/chart/util/Rotation,4,137,        return (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/Rotation,4,148,        if (this.equals(Rotation.CLOCKWISE)) {,0.0,0,-1,0
org/jfree/chart/util/Rotation,4,149,            return Rotation.CLOCKWISE;,0.0,0,-1,0
org/jfree/chart/util/Rotation,4,151,        else if (this.equals(Rotation.ANTICLOCKWISE)) {,0.0,0,-1,0
org/jfree/chart/util/Rotation,4,152,            return Rotation.ANTICLOCKWISE;,0.0,0,-1,0
org/jfree/chart/util/Rotation,4,154,        return null;,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,51,public class LineUtilities {,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,64,        double x1 = line.getX1();,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,65,        double y1 = line.getY1();,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,66,        double x2 = line.getX2();,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,67,        double y2 = line.getY2();,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,69,        double minX = rect.getMinX();,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,70,        double maxX = rect.getMaxX();,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,71,        double minY = rect.getMinY();,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,72,        double maxY = rect.getMaxY();,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,74,"        int f1 = rect.outcode(x1, y1);",0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,75,"        int f2 = rect.outcode(x2, y2);",0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,77,        while ((f1 | f2) != 0) {,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,78,            if ((f1 & f2) != 0) {,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,79,                return false;,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,81,            double dx = (x2 - x1);,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,82,            double dy = (y2 - y1);,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,85,            if (f1 != 0) {,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,88,                if ((f1 & Rectangle2D.OUT_LEFT) == Rectangle2D.OUT_LEFT,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,90,                    y1 = y1 + (minX - x1) * dy / dx;,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,91,                    x1 = minX;,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,93,                else if ((f1 & Rectangle2D.OUT_RIGHT) == Rectangle2D.OUT_RIGHT,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,95,                    y1 = y1 + (maxX - x1) * dy / dx;,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,96,                    x1 = maxX;,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,98,                else if ((f1 & Rectangle2D.OUT_BOTTOM) == Rectangle2D.OUT_BOTTOM,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,100,                    x1 = x1 + (maxY - y1) * dx / dy;,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,101,                    y1 = maxY;,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,103,                else if ((f1 & Rectangle2D.OUT_TOP) == Rectangle2D.OUT_TOP,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,105,                    x1 = x1 + (minY - y1) * dx / dy;,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,106,                    y1 = minY;,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,108,"                f1 = rect.outcode(x1, y1);",0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,110,            else if (f2 != 0) {,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,113,                if ((f2 & Rectangle2D.OUT_LEFT) == Rectangle2D.OUT_LEFT,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,115,                    y2 = y2 + (minX - x2) * dy / dx;,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,116,                    x2 = minX;,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,118,                else if ((f2 & Rectangle2D.OUT_RIGHT) == Rectangle2D.OUT_RIGHT,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,120,                    y2 = y2 + (maxX - x2) * dy / dx;,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,121,                    x2 = maxX;,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,123,                else if ((f2 & Rectangle2D.OUT_BOTTOM) == Rectangle2D.OUT_BOTTOM,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,125,                    x2 = x2 + (maxY - y2) * dx / dy;,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,126,                    y2 = maxY;,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,128,                else if ((f2 & Rectangle2D.OUT_TOP) == Rectangle2D.OUT_TOP,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,130,                    x2 = x2 + (minY - y2) * dx / dy;,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,131,                    y2 = minY;,0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,133,"                f2 = rect.outcode(x2, y2);",0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,135,        },0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,137,"        line.setLine(x1, y1, x2, y2);",0.0,0,-1,0
org/jfree/chart/util/LineUtilities,4,138,"        return true;  // the line is visible - if it wasn't, we'd have",0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,69,        return (Stroke) get(index);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,80,"        set(index, stroke);",0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,81,    },0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,91,        return super.clone();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,103,        if (obj == null) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,104,            return false;,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,107,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,108,            return true;,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,111,        if (obj instanceof StrokeList) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,112,            return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,115,        return false;,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,125,        return super.hashCode();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,137,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,138,        int count = size();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,139,        stream.writeInt(count);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,140,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,141,            Stroke stroke = getStroke(i);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,142,            if (stroke != null) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,143,                stream.writeInt(i);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,144,"                SerialUtilities.writeStroke(stroke, stream);",0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,147,                stream.writeInt(-1);,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,151,    },0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,164,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,165,        int count = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,166,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,167,            int index = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,168,            if (index != -1) {,0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,169,"                setStroke(index, SerialUtilities.readStroke(stream));",0.0,0,-1,0
org/jfree/chart/util/StrokeList,4,173,    },0.0,0,-1,0
org/jfree/chart/util/PaintList,4,70,        return (Paint) get(index);,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,81,"        set(index, paint);",0.0,0,-1,0
org/jfree/chart/util/PaintList,4,82,    },0.0,0,-1,0
org/jfree/chart/util/PaintList,4,92,        if (obj == null) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,93,            return false;,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,95,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,96,            return true;,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,98,        if (obj instanceof PaintList) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,99,            PaintList that = (PaintList) obj;,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,100,            int listSize = size();,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,101,            for (int i = 0; i < listSize; i++) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,102,"               if (!PaintUtilities.equal(getPaint(i), that.getPaint(i))) {",0.0,0,-1,0
org/jfree/chart/util/PaintList,4,103,                   return false;,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,107,        return true;,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,116,        int result = 127;,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,117,        int size = size();,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,118,"        result = HashUtilities.hashCode(result, size());",0.0,0,-1,0
org/jfree/chart/util/PaintList,4,121,        if (size > 0) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,122,"            result = HashUtilities.hashCode(result, getPaint(0));",0.0,0,-1,0
org/jfree/chart/util/PaintList,4,123,            if (size > 1) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,124,"                result = HashUtilities.hashCode(result, getPaint(size - 1));",0.0,0,-1,0
org/jfree/chart/util/PaintList,4,125,                if (size > 2) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,126,"                    result = HashUtilities.hashCode(result, getPaint(size / 2));",0.0,0,-1,0
org/jfree/chart/util/PaintList,4,130,        return result;,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,142,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,143,        int count = size();,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,144,        stream.writeInt(count);,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,145,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,146,            Paint paint = getPaint(i);,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,147,            if (paint != null) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,148,                stream.writeInt(i);,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,149,"                SerialUtilities.writePaint(paint, stream);",0.0,0,-1,0
org/jfree/chart/util/PaintList,4,152,                stream.writeInt(-1);,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,156,    },0.0,0,-1,0
org/jfree/chart/util/PaintList,4,169,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,170,        int count = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,171,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,172,            final int index = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,173,            if (index != -1) {,0.0,0,-1,0
org/jfree/chart/util/PaintList,4,174,"                setPaint(index, SerialUtilities.readPaint(stream));",0.0,0,-1,0
org/jfree/chart/util/PaintList,4,178,    },0.0,0,-1,0
org/jfree/chart/util/BooleanList,4,71,        return (Boolean) get(index);,0.0,0,-1,0
org/jfree/chart/util/BooleanList,4,82,"        set(index, b);",0.0,0,-1,0
org/jfree/chart/util/BooleanList,4,83,    },0.0,0,-1,0
org/jfree/chart/util/BooleanList,4,93,        if (obj instanceof BooleanList) {,0.0,0,-1,0
org/jfree/chart/util/BooleanList,4,94,            return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/util/BooleanList,4,96,        return false;,0.0,0,-1,0
org/jfree/chart/util/BooleanList,4,105,        return super.hashCode();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,89,"        this(1.0, 1.0, 1.0, 1.0);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,90,    },0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,118,"            throw new IllegalArgumentException(""Null 'unitType' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,134,        return this.unitType;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,143,        return this.top;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,152,        return this.bottom;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,161,        return this.left;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,170,        return this.right;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,182,            return true;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,185,                return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,189,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,194,        if (this.right != that.right) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,195,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,197,        if (this.top != that.top) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,198,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,200,        if (this.bottom != that.bottom) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,201,            return false;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,203,        return true;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,214,        result = (this.unitType != null ? this.unitType.hashCode() : 0);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,215,        temp = this.top != +0.0d ? Double.doubleToLongBits(this.top) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,216,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,217,        temp = this.bottom != +0.0d ? Double.doubleToLongBits(this.bottom) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,218,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,219,        temp = this.left != +0.0d ? Double.doubleToLongBits(this.left) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,220,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,221,        temp = this.right != +0.0d ? Double.doubleToLongBits(this.right) : 0L;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,222,        result = 29 * result + (int) (temp ^ (temp >>> 32));,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,223,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,233,"        return ""RectangleInsets[t="" + this.top + "",l="" + this.left",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,252,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,253,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,255,        double x = base.getX();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,256,        double y = base.getY();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,257,        double w = base.getWidth();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,258,        double h = base.getHeight();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,259,        if (horizontal == LengthAdjustmentType.EXPAND) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,260,            double leftOutset = calculateLeftOutset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,261,            x = x - leftOutset;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,262,            w = w + leftOutset + calculateRightOutset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,263,        },0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,264,        else if (horizontal == LengthAdjustmentType.CONTRACT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,265,            double leftMargin = calculateLeftInset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,266,            x = x + leftMargin;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,267,            w = w - leftMargin - calculateRightInset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,269,        if (vertical == LengthAdjustmentType.EXPAND) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,270,            double topMargin = calculateTopOutset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,271,            y = y - topMargin;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,272,            h = h + topMargin + calculateBottomOutset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,273,        },0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,274,        else if (vertical == LengthAdjustmentType.CONTRACT) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,275,            double topMargin = calculateTopInset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,276,            y = y + topMargin;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,277,            h = h - topMargin - calculateBottomInset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,279,"        return new Rectangle2D.Double(x, y, w, h);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,290,"        return createInsetRectangle(base, true, true);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,304,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,305,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,307,        double topMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,308,        double bottomMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,309,        if (vertical) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,310,            topMargin = calculateTopInset(base.getHeight());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,311,            bottomMargin = calculateBottomInset(base.getHeight());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,313,        double leftMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,314,        double rightMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,315,        if (horizontal) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,316,            leftMargin = calculateLeftInset(base.getWidth());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,317,            rightMargin = calculateRightInset(base.getWidth());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,319,        return new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,335,"        return createOutsetRectangle(base, true, true);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,350,        if (base == null) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,351,"            throw new IllegalArgumentException(""Null 'base' argument."");",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,353,        double topMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,354,        double bottomMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,355,        if (vertical) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,356,            topMargin = calculateTopOutset(base.getHeight());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,357,            bottomMargin = calculateBottomOutset(base.getHeight());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,359,        double leftMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,360,        double rightMargin = 0.0;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,361,        if (horizontal) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,362,            leftMargin = calculateLeftOutset(base.getWidth());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,363,            rightMargin = calculateRightOutset(base.getWidth());,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,365,        return new Rectangle2D.Double(,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,381,        double result = this.top;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,382,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,383,            result = (this.top * height);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,385,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,396,        double result = this.top;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,397,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,398,            result = (height / (1 - this.top - this.bottom)) * this.top;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,400,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,411,        double result = this.bottom;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,412,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,413,            result = (this.bottom * height);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,415,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,426,        double result = this.bottom;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,427,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,428,            result = (height / (1 - this.top - this.bottom)) * this.bottom;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,430,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,441,        double result = this.left;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,442,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,443,            result = (this.left * width);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,445,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,456,        double result = this.left;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,457,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,458,            result = (width / (1 - this.left - this.right)) * this.left;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,460,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,471,        double result = this.right;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,472,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,473,            result = (this.right * width);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,475,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,486,        double result = this.right;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,487,        if (this.unitType == UnitType.RELATIVE) {,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,488,            result = (width / (1 - this.left - this.right)) * this.right;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,490,        return result;,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,501,        return width - calculateLeftInset(width) - calculateRightInset(width);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,512,        return width + calculateLeftOutset(width) + calculateRightOutset(width);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,523,        return height,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,535,        return height,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,545,        double w = area.getWidth();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,546,        double h = area.getHeight();,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,547,        double l = calculateLeftInset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,548,        double r = calculateRightInset(w);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,549,        double t = calculateTopInset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,550,        double b = calculateBottomInset(h);,0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,551,"        area.setRect(area.getX() + l, area.getY() + t, w - l - r, h - t - b);",0.0,0,-1,0
org/jfree/chart/util/RectangleInsets,4,552,    },0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,86,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,98,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,99,            return true;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,101,        if (!(obj instanceof HorizontalAlignment)) {,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,102,            return false;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,104,        HorizontalAlignment that = (HorizontalAlignment) obj;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,105,        if (!this.name.equals(that.name)) {,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,106,            return false;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,108,        return true;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,117,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,128,        HorizontalAlignment result = null;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,129,        if (this.equals(HorizontalAlignment.LEFT)) {,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,130,            result = HorizontalAlignment.LEFT;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,132,        else if (this.equals(HorizontalAlignment.RIGHT)) {,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,133,            result = HorizontalAlignment.RIGHT;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,135,        else if (this.equals(HorizontalAlignment.CENTER)) {,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,136,            result = HorizontalAlignment.CENTER;,0.0,0,-1,0
org/jfree/chart/util/HorizontalAlignment,4,138,        return result;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,89,    private SerialUtilities() {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,90,    },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,101,        return Serializable.class.isAssignableFrom(c);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,118,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,119,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,121,        Paint result = null;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,122,        boolean isNull = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,123,        if (!isNull) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,124,            Class c = (Class) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,125,            if (isSerializable(c)) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,126,                result = (Paint) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,128,            else if (c.equals(GradientPaint.class)) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,129,                float x1 = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,130,                float y1 = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,131,                Color c1 = (Color) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,132,                float x2 = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,133,                float y2 = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,134,                Color c2 = (Color) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,135,                boolean isCyclic = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,136,"                result = new GradientPaint(x1, y1, c1, x2, y2, c2, isCyclic);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,139,        return result;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,154,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,155,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,157,        if (paint != null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,158,            stream.writeBoolean(false);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,159,            stream.writeObject(paint.getClass());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,160,            if (paint instanceof Serializable) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,161,                stream.writeObject(paint);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,163,            else if (paint instanceof GradientPaint) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,164,                GradientPaint gp = (GradientPaint) paint;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,165,                stream.writeFloat((float) gp.getPoint1().getX());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,166,                stream.writeFloat((float) gp.getPoint1().getY());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,167,                stream.writeObject(gp.getColor1());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,168,                stream.writeFloat((float) gp.getPoint2().getX());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,169,                stream.writeFloat((float) gp.getPoint2().getY());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,170,                stream.writeObject(gp.getColor2());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,171,                stream.writeBoolean(gp.isCyclic());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,172,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,175,            stream.writeBoolean(true);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,178,    },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,194,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,195,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,197,        Stroke result = null;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,198,        boolean isNull = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,199,        if (!isNull) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,200,            Class c = (Class) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,201,            if (c.equals(BasicStroke.class)) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,202,                float width = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,203,                int cap = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,204,                int join = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,205,                float miterLimit = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,206,                float[] dash = (float[]) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,207,                float dashPhase = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,208,"                result = new BasicStroke(width, cap, join, miterLimit, dash,",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,210,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,212,                result = (Stroke) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,215,        return result;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,233,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,234,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,236,        if (stroke != null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,237,            stream.writeBoolean(false);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,238,            if (stroke instanceof BasicStroke) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,239,                BasicStroke s = (BasicStroke) stroke;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,240,                stream.writeObject(BasicStroke.class);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,241,                stream.writeFloat(s.getLineWidth());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,242,                stream.writeInt(s.getEndCap());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,243,                stream.writeInt(s.getLineJoin());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,244,                stream.writeFloat(s.getMiterLimit());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,245,                stream.writeObject(s.getDashArray());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,246,                stream.writeFloat(s.getDashPhase());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,247,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,249,                stream.writeObject(stroke.getClass());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,250,                stream.writeObject(stroke);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,254,            stream.writeBoolean(true);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,256,    },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,272,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,273,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,275,        Shape result = null;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,276,        boolean isNull = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,277,        if (!isNull) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,278,            Class c = (Class) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,279,            if (c.equals(Line2D.class)) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,280,                double x1 = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,281,                double y1 = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,282,                double x2 = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,283,                double y2 = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,284,"                result = new Line2D.Double(x1, y1, x2, y2);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,285,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,286,            else if (c.equals(Rectangle2D.class)) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,287,                double x = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,288,                double y = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,289,                double w = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,290,                double h = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,291,"                result = new Rectangle2D.Double(x, y, w, h);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,292,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,293,            else if (c.equals(Ellipse2D.class)) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,294,                double x = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,295,                double y = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,296,                double w = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,297,                double h = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,298,"                result = new Ellipse2D.Double(x, y, w, h);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,299,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,300,            else if (c.equals(Arc2D.class)) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,301,                double x = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,302,                double y = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,303,                double w = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,304,                double h = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,305,                double as = stream.readDouble(); // Angle Start,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,306,                double ae = stream.readDouble(); // Angle Extent,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,307,                int at = stream.readInt();       // Arc type,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,308,"                result = new Arc2D.Double(x, y, w, h, as, ae, at);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,309,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,310,            else if (c.equals(GeneralPath.class)) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,311,                GeneralPath gp = new GeneralPath();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,312,                float[] args = new float[6];,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,313,                boolean hasNext = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,314,                while (!hasNext) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,315,                    int type = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,316,                    for (int i = 0; i < 6; i++) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,317,                        args[i] = stream.readFloat();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,319,                    switch (type) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,321,"                            gp.moveTo(args[0], args[1]);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,322,                            break;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,324,"                            gp.lineTo(args[0], args[1]);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,325,                            break;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,327,"                            gp.curveTo(args[0], args[1], args[2],",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,329,                            break;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,331,"                            gp.quadTo(args[0], args[1], args[2], args[3]);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,332,                            break;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,334,                            gp.closePath();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,335,                            break;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,337,                            throw new RuntimeException(,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,340,                    gp.setWindingRule(stream.readInt());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,341,                    hasNext = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,342,                },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,343,                result = gp;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,344,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,346,                result = (Shape) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,349,        return result;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,364,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,365,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,367,        if (shape != null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,368,            stream.writeBoolean(false);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,369,            if (shape instanceof Line2D) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,370,                Line2D line = (Line2D) shape;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,371,                stream.writeObject(Line2D.class);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,372,                stream.writeDouble(line.getX1());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,373,                stream.writeDouble(line.getY1());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,374,                stream.writeDouble(line.getX2());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,375,                stream.writeDouble(line.getY2());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,376,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,377,            else if (shape instanceof Rectangle2D) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,378,                Rectangle2D rectangle = (Rectangle2D) shape;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,379,                stream.writeObject(Rectangle2D.class);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,380,                stream.writeDouble(rectangle.getX());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,381,                stream.writeDouble(rectangle.getY());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,382,                stream.writeDouble(rectangle.getWidth());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,383,                stream.writeDouble(rectangle.getHeight());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,384,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,385,            else if (shape instanceof Ellipse2D) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,386,                Ellipse2D ellipse = (Ellipse2D) shape;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,387,                stream.writeObject(Ellipse2D.class);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,388,                stream.writeDouble(ellipse.getX());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,389,                stream.writeDouble(ellipse.getY());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,390,                stream.writeDouble(ellipse.getWidth());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,391,                stream.writeDouble(ellipse.getHeight());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,392,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,393,            else if (shape instanceof Arc2D) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,394,                Arc2D arc = (Arc2D) shape;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,395,                stream.writeObject(Arc2D.class);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,396,                stream.writeDouble(arc.getX());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,397,                stream.writeDouble(arc.getY());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,398,                stream.writeDouble(arc.getWidth());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,399,                stream.writeDouble(arc.getHeight());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,400,                stream.writeDouble(arc.getAngleStart());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,401,                stream.writeDouble(arc.getAngleExtent());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,402,                stream.writeInt(arc.getArcType());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,403,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,404,            else if (shape instanceof GeneralPath) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,405,                stream.writeObject(GeneralPath.class);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,406,                PathIterator pi = shape.getPathIterator(null);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,407,                float[] args = new float[6];,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,408,                stream.writeBoolean(pi.isDone());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,409,                while (!pi.isDone()) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,410,                    int type = pi.currentSegment(args);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,411,                    stream.writeInt(type);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,414,                    for (int i = 0; i < 6; i++) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,415,                        stream.writeFloat(args[i]);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,417,                    stream.writeInt(pi.getWindingRule());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,418,                    pi.next();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,419,                    stream.writeBoolean(pi.isDone());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,420,                },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,421,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,423,                stream.writeObject(shape.getClass());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,424,                stream.writeObject(shape);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,428,            stream.writeBoolean(true);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,430,    },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,445,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,446,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,448,        Point2D result = null;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,449,        boolean isNull = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,450,        if (!isNull) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,451,            double x = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,452,            double y = stream.readDouble();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,453,"            result = new Point2D.Double(x, y);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,455,        return result;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,470,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,471,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,473,        if (p != null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,474,            stream.writeBoolean(false);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,475,            stream.writeDouble(p.getX());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,476,            stream.writeDouble(p.getY());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,479,            stream.writeBoolean(true);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,481,    },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,499,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,500,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,502,        AttributedString result = null;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,503,        boolean isNull = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,504,        if (!isNull) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,506,            String plainStr = (String) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,507,            result = new AttributedString(plainStr);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,508,            char c = stream.readChar();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,509,            int start = 0;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,510,            while (c != CharacterIterator.DONE) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,511,                int limit = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,512,                Map atts = (Map) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,513,"                result.addAttributes(atts, start, limit);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,514,                start = limit;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,515,                c = stream.readChar();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,516,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,518,        return result;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,532,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,533,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,535,        if (as != null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,536,            stream.writeBoolean(false);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,537,            AttributedCharacterIterator aci = as.getIterator();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,540,            StringBuffer plainStr = new StringBuffer();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,541,            char current = aci.first();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,542,            while (current != CharacterIterator.DONE) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,543,                plainStr = plainStr.append(current);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,544,                current = aci.next();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,546,            stream.writeObject(plainStr.toString());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,549,            current = aci.first();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,550,            int begin = aci.getBeginIndex();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,551,            while (current != CharacterIterator.DONE) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,555,                stream.writeChar(current);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,558,                int limit = aci.getRunLimit();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,559,                stream.writeInt(limit - begin);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,562,                Map atts = new HashMap(aci.getAttributes());,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,563,                stream.writeObject(atts);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,564,                current = aci.setIndex(limit);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,565,            },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,568,            stream.writeChar(CharacterIterator.DONE);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,569,        },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,572,            stream.writeBoolean(true);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,575,    },0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,594,        if (stream == null) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,595,"            throw new IllegalArgumentException(""Null 'stream' argument."");",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,597,        BufferedImage result = null;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,598,        boolean isNull = stream.readBoolean();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,599,        if (!isNull) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,600,            result = ImageIO.read(stream);,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,602,        return result;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,617,        BufferedImage bi = null;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,618,        if (image instanceof BufferedImage) {,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,619,            bi = (BufferedImage) image;,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,622,"            bi = new BufferedImage(image.getWidth(null), image.getHeight(null),",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,624,            Graphics2D g2 = bi.createGraphics();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,625,"            g2.drawImage(image, 0, 0, null);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,626,            g2.dispose();,0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,628,"        EncoderUtil.writeBufferedImage(bi, ImageFormat.PNG, stream);",0.0,0,-1,0
org/jfree/chart/util/SerialUtilities,4,629,    },0.0,0,-1,0
org/jfree/chart/util/Layer,4,69,    private Layer(String name) {,0.0,0,-1,0
org/jfree/chart/util/Layer,4,70,        this.name = name;,0.0,0,-1,0
org/jfree/chart/util/Layer,4,71,    },0.0,0,-1,0
org/jfree/chart/util/Layer,4,56,"    public static final Layer FOREGROUND = new Layer(""Layer.FOREGROUND"");",0.0,0,-1,0
org/jfree/chart/util/Layer,4,59,"    public static final Layer BACKGROUND = new Layer(""Layer.BACKGROUND"");",0.0,0,-1,0
org/jfree/chart/util/Layer,4,79,        return this.name;,0.0,0,-1,0
org/jfree/chart/util/Layer,4,92,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/util/Layer,4,93,            return true;,0.0,0,-1,0
org/jfree/chart/util/Layer,4,95,        if (!(obj instanceof Layer)) {,0.0,0,-1,0
org/jfree/chart/util/Layer,4,96,            return false;,0.0,0,-1,0
org/jfree/chart/util/Layer,4,99,        Layer layer = (Layer) obj;,0.0,0,-1,0
org/jfree/chart/util/Layer,4,100,        if (!this.name.equals(layer.name)) {,0.0,0,-1,0
org/jfree/chart/util/Layer,4,101,            return false;,0.0,0,-1,0
org/jfree/chart/util/Layer,4,104,        return true;,0.0,0,-1,0
org/jfree/chart/util/Layer,4,114,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/util/Layer,4,125,        Layer result = null;,0.0,0,-1,0
org/jfree/chart/util/Layer,4,126,        if (this.equals(Layer.FOREGROUND)) {,0.0,0,-1,0
org/jfree/chart/util/Layer,4,127,            result = Layer.FOREGROUND;,0.0,0,-1,0
org/jfree/chart/util/Layer,4,129,        else if (this.equals(Layer.BACKGROUND)) {,0.0,0,-1,0
org/jfree/chart/util/Layer,4,130,            result = Layer.BACKGROUND;,0.0,0,-1,0
org/jfree/chart/util/Layer,4,132,        return result;,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,92,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,93,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,95,        return (Stroke) this.store.get(key);,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,108,        return this.store.containsKey(key);,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,119,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,120,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,122,"        this.store.put(key, stroke);",0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,123,    },0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,129,        this.store.clear();,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,130,    },0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,140,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,141,            return true;,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,143,        if (!(obj instanceof StrokeMap)) {,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,144,            return false;,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,146,        StrokeMap that = (StrokeMap) obj;,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,147,        if (this.store.size() != that.store.size()) {,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,148,            return false;,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,150,        Set keys = this.store.keySet();,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,151,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,152,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,153,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,154,            Stroke s1 = getStroke(key);,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,155,            Stroke s2 = that.getStroke(key);,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,156,"            if (!ObjectUtilities.equal(s1, s2)) {",0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,157,                return false;,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,159,        },0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,160,        return true;,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,173,        return super.clone();,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,184,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,185,        stream.writeInt(this.store.size());,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,186,        Set keys = this.store.keySet();,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,187,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,188,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,189,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,190,            stream.writeObject(key);,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,191,            Stroke stroke = getStroke(key);,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,192,"            SerialUtilities.writeStroke(stroke, stream);",0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,193,        },0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,194,    },0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,206,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,207,        this.store = new TreeMap();,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,208,        int keyCount = stream.readInt();,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,209,        for (int i = 0; i < keyCount; i++) {,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,210,            Comparable key = (Comparable) stream.readObject();,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,211,            Stroke stroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,212,"            this.store.put(key, stroke);",0.0,0,-1,0
org/jfree/chart/util/StrokeMap,4,214,    },0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,68,    public LegendItemCollection() {,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,69,        this.items = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,70,    },0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,78,        this.items.add(item);,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,79,    },0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,87,        this.items.addAll(collection.items);,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,88,    },0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,98,        return (LegendItem) this.items.get(index);,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,107,        return this.items.size();,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,116,        return this.items.iterator();,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,127,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,128,            return true;,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,130,        if (!(obj instanceof LegendItemCollection)) {,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,131,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,133,        LegendItemCollection that = (LegendItemCollection) obj;,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,134,        if (!this.items.equals(that.items)) {,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,135,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,137,        return true;,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,149,        LegendItemCollection clone = (LegendItemCollection) super.clone();,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,150,        clone.items = (List) ObjectUtilities.deepClone(this.items);,0.0,0,-1,0
org/jfree/chart/LegendItemCollection,4,151,        return clone;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,213,"        this(label, Color.black);",0.0,0,-1,0
org/jfree/chart/LegendItem,4,214,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,226,"        this(label, null, null, null, new Rectangle2D.Double(-4.0, -4.0, 8.0,",0.0,0,-1,0
org/jfree/chart/LegendItem,4,228,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,246,"        this(label, description, toolTipText, urlText,",0.0,0,-1,0
org/jfree/chart/LegendItem,4,253,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,275,"        this(label, description, toolTipText, urlText,",0.0,0,-1,0
org/jfree/chart/LegendItem,4,282,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,299,"        this(label, description, toolTipText, urlText,",0.0,0,-1,0
org/jfree/chart/LegendItem,4,304,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,338,"                      Stroke lineStroke, Paint linePaint) {",0.0,0,-1,0
org/jfree/chart/LegendItem,4,340,        if (label == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,341,"            throw new IllegalArgumentException(""Null 'label' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,4,343,        if (fillPaint == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,344,"            throw new IllegalArgumentException(""Null 'fillPaint' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,4,346,        if (lineStroke == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,347,"            throw new IllegalArgumentException(""Null 'lineStroke' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,4,349,        if (outlinePaint == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,350,"            throw new IllegalArgumentException(""Null 'outlinePaint' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,4,352,        if (outlineStroke == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,353,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/LegendItem,4,356,        this.label = label;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,357,        this.labelPaint = null;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,358,        this.attributedLabel = null;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,359,        this.description = description;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,360,        this.shapeVisible = shapeVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,361,        this.shape = shape;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,362,        this.shapeFilled = shapeFilled;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,363,        this.fillPaint = fillPaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,364,        this.fillPaintTransformer = new StandardGradientPaintTransformer();,0.0,0,-1,0
org/jfree/chart/LegendItem,4,365,        this.shapeOutlineVisible = shapeOutlineVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,366,        this.outlinePaint = outlinePaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,367,        this.outlineStroke = outlineStroke;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,368,        this.lineVisible = lineVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,369,        this.line = line;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,370,        this.lineStroke = lineStroke;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,371,        this.linePaint = linePaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,372,        this.toolTipText = toolTipText;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,373,        this.urlText = urlText;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,374,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,392,"        this(label, description, toolTipText, urlText,",0.0,0,-1,0
org/jfree/chart/LegendItem,4,399,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,421,"        this(label, description, toolTipText, urlText,",0.0,0,-1,0
org/jfree/chart/LegendItem,4,427,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,444,"        this(label, description, toolTipText, urlText,",0.0,0,-1,0
org/jfree/chart/LegendItem,4,449,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,483,                      Paint linePaint) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,485,        if (label == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,486,"            throw new IllegalArgumentException(""Null 'label' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,4,488,        if (fillPaint == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,489,"            throw new IllegalArgumentException(""Null 'fillPaint' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,4,491,        if (lineStroke == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,492,"            throw new IllegalArgumentException(""Null 'lineStroke' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,4,494,        if (line == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,495,"            throw new IllegalArgumentException(""Null 'line' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,4,497,        if (linePaint == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,498,"            throw new IllegalArgumentException(""Null 'linePaint' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,4,500,        if (outlinePaint == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,501,"            throw new IllegalArgumentException(""Null 'outlinePaint' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,4,503,        if (outlineStroke == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,504,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/LegendItem,4,507,        this.label = characterIteratorToString(label.getIterator());,0.0,0,-1,0
org/jfree/chart/LegendItem,4,508,        this.attributedLabel = label;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,509,        this.description = description;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,510,        this.shapeVisible = shapeVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,511,        this.shape = shape;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,512,        this.shapeFilled = shapeFilled;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,513,        this.fillPaint = fillPaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,514,        this.fillPaintTransformer = new StandardGradientPaintTransformer();,0.0,0,-1,0
org/jfree/chart/LegendItem,4,515,        this.shapeOutlineVisible = shapeOutlineVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,516,        this.outlinePaint = outlinePaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,517,        this.outlineStroke = outlineStroke;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,518,        this.lineVisible = lineVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,519,        this.line = line;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,520,        this.lineStroke = lineStroke;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,521,        this.linePaint = linePaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,522,        this.toolTipText = toolTipText;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,523,        this.urlText = urlText;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,524,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,196,    private static final Shape UNUSED_SHAPE = new Line2D.Float();,0.0,0,-1,0
org/jfree/chart/LegendItem,4,202,    private static final Stroke UNUSED_STROKE = new BasicStroke(0.0f);,0.0,0,-1,0
org/jfree/chart/LegendItem,4,534,        int endIndex = iterator.getEndIndex();,0.0,0,-1,0
org/jfree/chart/LegendItem,4,535,        int beginIndex = iterator.getBeginIndex();,0.0,0,-1,0
org/jfree/chart/LegendItem,4,536,        int count = endIndex - beginIndex;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,537,        if (count <= 0) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,538,"            return """";",0.0,0,-1,0
org/jfree/chart/LegendItem,4,540,        char[] chars = new char[count];,0.0,0,-1,0
org/jfree/chart/LegendItem,4,541,        int i = 0;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,542,        char c = iterator.first();,0.0,0,-1,0
org/jfree/chart/LegendItem,4,543,        while (c != CharacterIterator.DONE) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,544,            chars[i] = c;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,545,            i++;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,546,            c = iterator.next();,0.0,0,-1,0
org/jfree/chart/LegendItem,4,548,        return new String(chars);,0.0,0,-1,0
org/jfree/chart/LegendItem,4,561,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,572,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,573,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,586,        return this.datasetIndex;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,599,        this.datasetIndex = index;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,600,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,612,        return this.seriesKey;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,623,        this.seriesKey = key;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,624,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,634,        return this.series;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,645,        this.series = index;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,646,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,654,        return this.label;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,665,        return this.labelFont;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,676,        this.labelFont = font;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,677,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,687,        return this.labelPaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,698,        this.labelPaint = paint;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,699,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,707,        return this.attributedLabel;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,718,        return this.description;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,730,        this.description = text;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,731,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,741,        return this.toolTipText;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,753,        this.toolTipText = text;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,754,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,764,        return this.urlText;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,777,        this.urlText = text;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,778,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,788,        return this.shapeVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,802,        this.shapeVisible = visible;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,803,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,814,        return this.shape;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,826,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,827,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,4,829,        this.shape = shape;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,830,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,838,        return this.shapeFilled;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,847,        return this.fillPaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,858,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,859,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,4,861,        this.fillPaint = paint;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,862,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,871,        return this.shapeOutlineVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,880,        return this.lineStroke;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,889,        return this.linePaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,900,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,901,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,4,903,        this.linePaint = paint;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,904,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,912,        return this.outlinePaint;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,923,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,924,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,4,926,        this.outlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,927,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,937,        return this.outlineStroke;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,950,        this.outlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,951,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,961,        return this.lineVisible;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,974,        this.lineVisible = visible;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,975,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,986,        return this.line;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,998,        if (line == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,999,"            throw new IllegalArgumentException(""Null 'line' argument."");",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1001,        this.line = line;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1002,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,1015,        return this.fillPaintTransformer;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1029,        if (transformer == null) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1030,"            throw new IllegalArgumentException(""Null 'transformer' attribute."");",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1032,        this.fillPaintTransformer = transformer;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1033,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,1043,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1044,            return true;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1046,        if (!(obj instanceof LegendItem)) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1047,                return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1049,        LegendItem that = (LegendItem) obj;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1050,        if (this.datasetIndex != that.datasetIndex) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1051,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1053,        if (this.series != that.series) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1054,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1056,        if (!this.label.equals(that.label)) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1057,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1059,"        if (!AttributedStringUtilities.equal(this.attributedLabel,",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1061,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1063,"        if (!ObjectUtilities.equal(this.description, that.description)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1064,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1066,        if (this.shapeVisible != that.shapeVisible) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1067,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1069,"        if (!ShapeUtilities.equal(this.shape, that.shape)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1070,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1072,        if (this.shapeFilled != that.shapeFilled) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1073,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1075,"        if (!PaintUtilities.equal(this.fillPaint, that.fillPaint)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1076,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1078,"        if (!ObjectUtilities.equal(this.fillPaintTransformer,",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1080,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1082,        if (this.shapeOutlineVisible != that.shapeOutlineVisible) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1083,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1085,        if (!this.outlineStroke.equals(that.outlineStroke)) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1086,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1088,"        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1089,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1091,        if (!this.lineVisible == that.lineVisible) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1092,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1094,"        if (!ShapeUtilities.equal(this.line, that.line)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1095,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1097,        if (!this.lineStroke.equals(that.lineStroke)) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1098,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1100,"        if (!PaintUtilities.equal(this.linePaint, that.linePaint)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1101,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1103,"        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1104,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1106,"        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1107,            return false;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1109,        return true;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1124,        LegendItem clone = (LegendItem) super.clone();,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1125,        if (this.seriesKey instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1126,            PublicCloneable pc = (PublicCloneable) this.seriesKey;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1127,            clone.seriesKey = (Comparable) pc.clone();,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1130,        clone.shape = ShapeUtilities.clone(this.shape);,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1131,        if (this.fillPaintTransformer instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1132,            PublicCloneable pc = (PublicCloneable) this.fillPaintTransformer;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1133,            clone.fillPaintTransformer = (GradientPaintTransformer) pc.clone();,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1136,        clone.line = ShapeUtilities.clone(this.line);,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1137,        return clone;,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1148,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1149,"        SerialUtilities.writeAttributedString(this.attributedLabel, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1150,"        SerialUtilities.writeShape(this.shape, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1151,"        SerialUtilities.writePaint(this.fillPaint, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1152,"        SerialUtilities.writeStroke(this.outlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1153,"        SerialUtilities.writePaint(this.outlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1154,"        SerialUtilities.writeShape(this.line, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1155,"        SerialUtilities.writeStroke(this.lineStroke, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1156,"        SerialUtilities.writePaint(this.linePaint, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1157,"        SerialUtilities.writePaint(this.labelPaint, stream);",0.0,0,-1,0
org/jfree/chart/LegendItem,4,1158,    },0.0,0,-1,0
org/jfree/chart/LegendItem,4,1170,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1171,        this.attributedLabel = SerialUtilities.readAttributedString(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1172,        this.shape = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1173,        this.fillPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1174,        this.outlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1175,        this.outlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1176,        this.line = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1177,        this.lineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1178,        this.linePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1179,        this.labelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/LegendItem,4,1180,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,151,        this(null);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,152,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,160,        super();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,117,    private double limit = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,161,        setDataset(dataset);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,162,        PiePlot piePlot = new PiePlot(null);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,163,        piePlot.setIgnoreNullValues(true);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,164,        this.pieChart = new JFreeChart(piePlot);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,165,        this.pieChart.removeLegend();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,166,        this.dataExtractOrder = TableOrder.BY_COLUMN;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,167,        this.pieChart.setBackgroundPaint(null);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,168,"        TextTitle seriesTitle = new TextTitle(""Series Title"",",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,170,        seriesTitle.setPosition(RectangleEdge.BOTTOM);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,171,        this.pieChart.setTitle(seriesTitle);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,172,"        this.aggregatedItemsKey = ""Other"";",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,173,        this.aggregatedItemsPaint = Color.lightGray;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,174,        this.sectionPaints = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,175,"        this.legendItemShape = new Ellipse2D.Double(-4.0, -4.0, 8.0, 8.0);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,176,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,184,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,196,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,197,            this.dataset.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,201,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,202,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,203,            setDatasetGroup(dataset.getGroup());,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,204,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,208,"        datasetChanged(new DatasetChangeEvent(this, dataset));",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,209,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,221,        return this.pieChart;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,233,        if (pieChart == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,234,"            throw new IllegalArgumentException(""Null 'pieChart' argument."");",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,236,        if (!(pieChart.getPlot() instanceof PiePlot)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,237,"            throw new IllegalArgumentException(""The 'pieChart' argument must """,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,240,        this.pieChart = pieChart;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,241,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,242,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,250,        return this.dataExtractOrder;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,260,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,261,"            throw new IllegalArgumentException(""Null 'order' argument"");",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,263,        this.dataExtractOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,264,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,265,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,274,        return this.limit;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,284,        this.limit = limit;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,285,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,286,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,297,        return this.aggregatedItemsKey;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,309,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,310,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,312,        this.aggregatedItemsKey = key;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,313,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,314,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,325,        return this.aggregatedItemsPaint;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,337,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,338,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,340,        this.aggregatedItemsPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,341,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,342,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,350,"        return ""Multiple Pie Plot"";",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,364,        return this.legendItemShape;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,378,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,379,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,381,        this.legendItemShape = shape;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,382,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,383,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,403,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,404,        insets.trim(area);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,405,"        drawBackground(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,406,"        drawOutline(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,409,        if (DatasetUtilities.isEmptyOrNull(this.dataset)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,410,"            drawNoDataMessage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,411,            return;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,414,        int pieCount = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,415,        if (this.dataExtractOrder == TableOrder.BY_ROW) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,416,            pieCount = this.dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,419,            pieCount = this.dataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,423,        int displayCols = (int) Math.ceil(Math.sqrt(pieCount));,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,424,        int displayRows,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,428,        if (displayCols > displayRows && area.getWidth() < area.getHeight()) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,429,            int temp = displayCols;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,430,            displayCols = displayRows;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,431,            displayRows = temp;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,434,        prefetchSectionPaints();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,436,        int x = (int) area.getX();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,437,        int y = (int) area.getY();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,438,        int width = ((int) area.getWidth()) / displayCols;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,439,        int height = ((int) area.getHeight()) / displayRows;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,440,        int row = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,441,        int column = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,442,        int diff = (displayRows * displayCols) - pieCount;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,443,        int xoffset = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,444,        Rectangle rect = new Rectangle();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,446,        for (int pieIndex = 0; pieIndex < pieCount; pieIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,447,"            rect.setBounds(x + xoffset + (width * column), y + (height * row),",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,450,            String title = null;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,451,            if (this.dataExtractOrder == TableOrder.BY_ROW) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,452,                title = this.dataset.getRowKey(pieIndex).toString();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,455,                title = this.dataset.getColumnKey(pieIndex).toString();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,457,            this.pieChart.setTitle(title);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,459,            PieDataset piedataset = null;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,460,"            PieDataset dd = new CategoryToPieDataset(this.dataset,",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,462,            if (this.limit > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,463,                piedataset = DatasetUtilities.createConsolidatedPieDataset(,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,467,                piedataset = dd;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,469,            PiePlot piePlot = (PiePlot) this.pieChart.getPlot();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,470,            piePlot.setDataset(piedataset);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,471,            piePlot.setPieIndex(pieIndex);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,474,            for (int i = 0; i < piedataset.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,475,                Comparable key = piedataset.getKey(i);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,477,                if (key.equals(this.aggregatedItemsKey)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,478,                    p = this.aggregatedItemsPaint;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,481,                    p = (Paint) this.sectionPaints.get(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,483,"                piePlot.setSectionPaint(key, p);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,486,            ChartRenderingInfo subinfo = null;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,487,            if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,488,                subinfo = new ChartRenderingInfo();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,490,"            this.pieChart.draw(g2, rect, subinfo);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,491,            if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,492,                info.getOwner().getEntityCollection().addAll(,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,494,                info.addSubplotInfo(subinfo.getPlotInfo());,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,497,            ++column;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,498,            if (column == displayCols) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,499,                column = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,500,                ++row;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,502,                if (row == displayRows - 1 && diff != 0) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,503,                    xoffset = (diff * width) / 2;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,508,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,522,        PiePlot piePlot = (PiePlot) getPieChart().getPlot();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,524,        if (this.dataExtractOrder == TableOrder.BY_ROW) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,526,            for (int c = 0; c < this.dataset.getColumnCount(); c++) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,527,                Comparable key = this.dataset.getColumnKey(c);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,528,                Paint p = piePlot.getSectionPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,529,                if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,530,                    p = (Paint) this.sectionPaints.get(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,531,                    if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,532,                        p = getDrawingSupplier().getNextPaint();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,535,"                this.sectionPaints.put(key, p);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,540,            for (int r = 0; r < this.dataset.getRowCount(); r++) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,541,                Comparable key = this.dataset.getRowKey(r);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,542,                Paint p = piePlot.getSectionPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,543,                if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,544,                    p = (Paint) this.sectionPaints.get(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,545,                    if (p == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,546,                        p = getDrawingSupplier().getNextPaint();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,549,"                this.sectionPaints.put(key, p);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,553,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,562,        LegendItemCollection result = new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,563,        if (this.dataset == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,564,            return result;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,567,        List keys = null;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,568,        prefetchSectionPaints();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,569,        if (this.dataExtractOrder == TableOrder.BY_ROW) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,570,            keys = this.dataset.getColumnKeys();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,572,        else if (this.dataExtractOrder == TableOrder.BY_COLUMN) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,573,            keys = this.dataset.getRowKeys();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,575,        if (keys == null) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,576,            return result;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,578,        int section = 0;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,579,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,580,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,581,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,582,            String label = key.toString();  // TODO: use a generator here,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,583,            String description = label;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,584,            Paint paint = (Paint) this.sectionPaints.get(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,585,"            LegendItem item = new LegendItem(label, description, null,",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,588,            item.setSeriesKey(key);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,589,            item.setSeriesIndex(section);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,590,            item.setDataset(getDataset());,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,591,            result.add(item);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,592,            section++;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,593,        },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,594,        if (this.limit > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,595,"            LegendItem a = new LegendItem(this.aggregatedItemsKey.toString(),",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,599,            result.add(a);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,601,        return result;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,614,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,615,            return true;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,617,        if (!(obj instanceof MultiplePiePlot)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,618,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,620,        MultiplePiePlot that = (MultiplePiePlot) obj;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,621,        if (this.dataExtractOrder != that.dataExtractOrder) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,622,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,624,        if (this.limit != that.limit) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,625,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,627,        if (!this.aggregatedItemsKey.equals(that.aggregatedItemsKey)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,628,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,630,"        if (!PaintUtilities.equal(this.aggregatedItemsPaint,",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,632,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,634,"        if (!ObjectUtilities.equal(this.pieChart, that.pieChart)) {",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,635,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,637,"        if (!ShapeUtilities.equal(this.legendItemShape, that.legendItemShape)) {",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,638,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,640,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,641,            return false;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,643,        return true;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,655,        MultiplePiePlot clone = (MultiplePiePlot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,656,        clone.pieChart = (JFreeChart) this.pieChart.clone();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,657,        clone.sectionPaints = new HashMap(this.sectionPaints);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,658,        clone.legendItemShape = ShapeUtilities.clone(this.legendItemShape);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,659,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,670,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,671,"        SerialUtilities.writePaint(this.aggregatedItemsPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,672,"        SerialUtilities.writeShape(this.legendItemShape, stream);",0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,673,    },0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,685,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,686,        this.aggregatedItemsPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,687,        this.legendItemShape = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,688,        this.sectionPaints = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/MultiplePiePlot,4,689,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,530,        this(null);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,531,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,601,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,614,        PieDataset existing = this.dataset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,615,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,616,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,620,        this.dataset = dataset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,621,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,622,            setDatasetGroup(dataset.getGroup());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,623,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,627,"        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,628,        datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,629,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,640,        return this.pieIndex;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,652,        this.pieIndex = index;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,653,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,664,        return this.startAngle;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,678,        this.startAngle = angle;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,679,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,680,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,691,        return this.direction;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,703,        if (direction == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,704,"            throw new IllegalArgumentException(""Null 'direction' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,706,        this.direction = direction;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,707,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,709,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,720,        return this.interiorGap;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,735,        if ((percent < 0.0) || (percent > MAX_INTERIOR_GAP)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,736,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,740,        if (this.interiorGap != percent) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,741,            this.interiorGap = percent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,742,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,745,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,756,        return this.circular;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,768,"        setCircular(flag, true);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,769,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,781,        this.circular = circular;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,782,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,783,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,785,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,796,        return this.ignoreNullValues;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,811,        this.ignoreNullValues = flag;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,812,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,813,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,824,        return this.ignoreZeroValues;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,839,        this.ignoreZeroValues = flag;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,840,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,841,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,858,"        return lookupSectionPaint(key, getAutoPopulateSectionPaint());",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,883,        Paint result = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,886,        result = this.sectionPaintMap.getPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,887,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,888,            return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,892,        if (autoPopulate) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,893,            DrawingSupplier ds = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,894,            if (ds != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,895,                result = ds.getNextPaint();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,896,"                this.sectionPaintMap.put(key, result);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,899,                result = this.baseSectionPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,901,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,903,            result = this.baseSectionPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,905,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,923,        Comparable key = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,924,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,925,            if (section >= 0 && section < this.dataset.getItemCount()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,926,                key = this.dataset.getKey(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,929,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,930,            key = new Integer(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,932,        return key;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,953,        return this.sectionPaintMap.getPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,972,"        this.sectionPaintMap.put(key, paint);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,973,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,974,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,991,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1004,        return this.baseSectionPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1016,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1017,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1019,        this.baseSectionPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1020,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1021,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1045,        this.autoPopulateSectionPaint = auto;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1046,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1047,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1061,        return this.sectionOutlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1074,        this.sectionOutlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1075,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1076,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1092,"        return lookupSectionOutlinePaint(key,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1120,        Paint result = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1123,        result = this.sectionOutlinePaintMap.getPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1124,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1125,            return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1129,        if (autoPopulate) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1130,            DrawingSupplier ds = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1131,            if (ds != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1132,                result = ds.getNextOutlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1133,"                this.sectionOutlinePaintMap.put(key, result);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1136,                result = this.baseSectionOutlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1138,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1140,            result = this.baseSectionOutlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1142,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1163,        return this.sectionOutlinePaintMap.getPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1182,"        this.sectionOutlinePaintMap.put(key, paint);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1183,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1184,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1199,        this.sectionOutlinePaintMap.clear();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1200,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1201,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1203,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1214,        return this.baseSectionOutlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1225,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1226,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1228,        this.baseSectionOutlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1229,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1230,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1255,        this.autoPopulateSectionOutlinePaint = auto;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1256,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1257,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1275,"        return lookupSectionOutlineStroke(key,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1303,        Stroke result = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1306,        result = this.sectionOutlineStrokeMap.getStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1307,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1308,            return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1312,        if (autoPopulate) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1313,            DrawingSupplier ds = getDrawingSupplier();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1314,            if (ds != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1315,                result = ds.getNextOutlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1316,"                this.sectionOutlineStrokeMap.put(key, result);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1319,                result = this.baseSectionOutlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1321,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1323,            result = this.baseSectionOutlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1325,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1346,        return this.sectionOutlineStrokeMap.getStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1365,"        this.sectionOutlineStrokeMap.put(key, stroke);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1366,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1367,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1382,        this.sectionOutlineStrokeMap.clear();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1383,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1384,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1386,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1397,        return this.baseSectionOutlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1408,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1409,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1411,        this.baseSectionOutlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1412,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1413,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1438,        this.autoPopulateSectionOutlineStroke = auto;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1439,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1440,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1450,        return this.shadowPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1462,        this.shadowPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1463,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1464,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1474,        return this.shadowXOffset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1486,        this.shadowXOffset = offset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1487,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1488,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1498,        return this.shadowYOffset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1510,        this.shadowYOffset = offset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1511,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1512,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1531,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1532,        if (this.explodePercentages != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1533,            Number percent = (Number) this.explodePercentages.get(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1534,            if (percent != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1535,                result = percent.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1538,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1553,        if (key == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1554,"            throw new IllegalArgumentException(""Null 'key' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1556,        if (this.explodePercentages == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1557,            this.explodePercentages = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1559,"        this.explodePercentages.put(key, new Double(percent));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1560,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1561,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1569,        if (this.dataset == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1570,            return 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1572,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1573,        Iterator iterator = this.dataset.getKeys().iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1574,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1575,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1576,            Number explode = (Number) this.explodePercentages.get(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1577,            if (explode != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1578,"                result = Math.max(result, explode.doubleValue());",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1580,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1581,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1592,        return this.labelGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1617,        return this.labelGap;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1630,        this.labelGap = gap;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1631,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1632,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1642,        return this.maximumLabelWidth;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1654,        this.maximumLabelWidth = width;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1655,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1656,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1667,        return this.labelLinksVisible;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1682,        this.labelLinksVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1683,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1684,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1696,        return this.labelLinkStyle;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1711,"            throw new IllegalArgumentException(""Null 'style' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1726,        return this.labelLinkMargin;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1738,        this.labelLinkMargin = margin;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1739,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1740,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1751,        return this.labelLinkPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1765,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1779,        return this.labelLinkStroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1791,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1792,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1794,        this.labelLinkStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1795,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1796,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1810,        return 0.1;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1821,        return this.labelFont;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1834,"            throw new IllegalArgumentException(""Null 'font' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1848,        return this.labelPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1860,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1861,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1863,        this.labelPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1864,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1865,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1875,        return this.labelBackgroundPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1887,        this.labelBackgroundPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1888,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1889,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1899,        return this.labelOutlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1911,        this.labelOutlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1912,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1913,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1923,        return this.labelOutlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1935,        this.labelOutlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1936,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1937,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1947,        return this.labelShadowPaint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1959,        this.labelShadowPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1960,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1961,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1973,        return this.labelPadding;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1987,        if (padding == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1988,"            throw new IllegalArgumentException(""Null 'padding' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1990,        this.labelPadding = padding;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1991,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,1992,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2003,        return this.simpleLabels;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2016,        this.simpleLabels = simple;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2017,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2018,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2030,        return this.simpleLabelOffset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2044,        if (offset == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2045,"            throw new IllegalArgumentException(""Null 'offset' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2047,        this.simpleLabelOffset = offset;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2048,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2049,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2060,        return this.labelDistributor;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2072,        if (distributor == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2073,"            throw new IllegalArgumentException(""Null 'distributor' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2075,        this.labelDistributor = distributor;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2076,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2077,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2089,        return this.toolTipGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2114,        return this.urlGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2126,        this.urlGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2127,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2128,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2139,        return this.minimumArcAngleToDraw;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2161,        this.minimumArcAngleToDraw = angle;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2162,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2172,        return this.legendItemShape;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2184,        if (shape == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2185,"            throw new IllegalArgumentException(""Null 'shape' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2187,        this.legendItemShape = shape;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2188,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2189,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2199,        return this.legendLabelGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2211,        if (generator == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2212,"            throw new IllegalArgumentException(""Null 'generator' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2214,        this.legendLabelGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2215,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2216,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2226,        return this.legendLabelToolTipGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2239,        this.legendLabelToolTipGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2240,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2241,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2253,        return this.legendLabelURLGenerator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2267,        this.legendLabelURLGenerator = generator;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2268,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2269,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2289,        PiePlotState state = new PiePlotState(info);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2290,        state.setPassesRequired(2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2291,        if (this.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2292,            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2295,        state.setLatestAngle(plot.getStartAngle());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2296,        return state;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2315,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2316,        insets.trim(area);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2318,        if (info != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2319,            info.setPlotArea(area);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2320,            info.setDataArea(area);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2323,"        drawBackground(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2324,"        drawOutline(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2326,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2327,        g2.clip(area);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2329,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2330,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2333,        if (!DatasetUtilities.isEmptyOrNull(this.dataset)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2334,"            drawPie(g2, area, info);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2337,"            drawNoDataMessage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2340,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2341,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2343,"        drawOutline(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2345,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2357,"        PiePlotState state = initialise(g2, plotArea, this, null, info);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2360,        double labelReserve = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2361,        if (this.labelGenerator != null && !this.simpleLabels) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2362,            labelReserve = this.labelGap + this.maximumLabelWidth;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2364,        double gapHorizontal = plotArea.getWidth() * (this.interiorGap,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2366,        double gapVertical = plotArea.getHeight() * this.interiorGap * 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2382,        double linkX = plotArea.getX() + gapHorizontal / 2;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2383,        double linkY = plotArea.getY() + gapVertical / 2;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2384,        double linkW = plotArea.getWidth() - gapHorizontal;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2385,        double linkH = plotArea.getHeight() - gapVertical;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2388,        if (this.circular) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2389,"            double min = Math.min(linkW, linkH) / 2;",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2390,            linkX = (linkX + linkX + linkW) / 2 - min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2391,            linkY = (linkY + linkY + linkH) / 2 - min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2392,            linkW = 2 * min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2393,            linkH = 2 * min;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2398,"        Rectangle2D linkArea = new Rectangle2D.Double(linkX, linkY, linkW,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2400,        state.setLinkArea(linkArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2413,        double lm = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2414,        if (!this.simpleLabels) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2415,            lm = this.labelLinkMargin;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2417,        double hh = linkArea.getWidth() * lm * 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2418,        double vv = linkArea.getHeight() * lm * 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2419,"        Rectangle2D explodeArea = new Rectangle2D.Double(linkX + hh / 2.0,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2422,        state.setExplodedPieArea(explodeArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2427,        double maximumExplodePercent = getMaximumExplodePercent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2428,        double percent = maximumExplodePercent / (1.0 + maximumExplodePercent);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2430,        double h1 = explodeArea.getWidth() * percent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2431,        double v1 = explodeArea.getHeight() * percent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2432,        Rectangle2D pieArea = new Rectangle2D.Double(explodeArea.getX(),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2440,        state.setPieArea(pieArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2441,        state.setPieCenterX(pieArea.getCenterX());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2442,        state.setPieCenterY(pieArea.getCenterY());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2443,        state.setPieWRadius(pieArea.getWidth() / 2.0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2444,        state.setPieHRadius(pieArea.getHeight() / 2.0);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2447,        if ((this.dataset != null) && (this.dataset.getKeys().size() > 0)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2449,            List keys = this.dataset.getKeys();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2450,            double totalValue = DatasetUtilities.calculatePieDatasetTotal(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2453,            int passesRequired = state.getPassesRequired();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2454,            for (int pass = 0; pass < passesRequired; pass++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2455,                double runningTotal = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2456,                for (int section = 0; section < keys.size(); section++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2457,                    Number n = this.dataset.getValue(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2458,                    if (n != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2459,                        double value = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2460,                        if (value > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2461,                            runningTotal += value;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2462,"                            drawItem(g2, section, explodeArea, state, pass);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2467,            if (this.simpleLabels) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2468,"                drawSimpleLabels(g2, keys, totalValue, plotArea, linkArea,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2472,"                drawLabels(g2, keys, totalValue, plotArea, linkArea, state);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2475,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2477,"            drawNoDataMessage(g2, plotArea);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2479,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2493,        Number n = this.dataset.getValue(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2494,        if (n == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2495,            return;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2497,        double value = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2498,        double angle1 = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2499,        double angle2 = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2501,        if (this.direction == Rotation.CLOCKWISE) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2502,            angle1 = state.getLatestAngle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2503,            angle2 = angle1 - value / state.getTotal() * 360.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2505,        else if (this.direction == Rotation.ANTICLOCKWISE) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2506,            angle1 = state.getLatestAngle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2507,            angle2 = angle1 + value / state.getTotal() * 360.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2510,"            throw new IllegalStateException(""Rotation type not recognised."");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2513,        double angle = (angle2 - angle1);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2514,        if (Math.abs(angle) > getMinimumArcAngleToDraw()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2515,            double ep = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2516,            double mep = getMaximumExplodePercent();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2517,            if (mep > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2518,                ep = getExplodePercent(getSectionKey(section)) / mep;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2520,"            Rectangle2D arcBounds = getArcBounds(state.getPieArea(),",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2522,"            Arc2D.Double arc = new Arc2D.Double(arcBounds, angle1, angle,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2525,            if (currentPass == 0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2526,                if (this.shadowPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2527,                    Shape shadowArc = ShapeUtilities.createTranslatedShape(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2530,                    g2.setPaint(this.shadowPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2531,                    g2.fill(shadowArc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2532,                },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2534,            else if (currentPass == 1) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2535,                Comparable key = getSectionKey(section);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2536,                Paint paint = lookupSectionPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2537,                g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2538,                g2.fill(arc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2540,                Paint outlinePaint = lookupSectionOutlinePaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2541,                Stroke outlineStroke = lookupSectionOutlineStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2542,                if (this.sectionOutlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2543,                    g2.setPaint(outlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2544,                    g2.setStroke(outlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2545,                    g2.draw(arc);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2550,                if (state.getInfo() != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2551,                    EntityCollection entities = state.getEntityCollection();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2552,                    if (entities != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2553,                        String tip = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2554,                        if (this.toolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2555,                            tip = this.toolTipGenerator.generateToolTip(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2558,                        String url = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2559,                        if (this.urlGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2560,"                            url = this.urlGenerator.generateURL(this.dataset,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2563,                        PieSectionEntity entity = new PieSectionEntity(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2566,                        entities.add(entity);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2571,        state.setLatestAngle(angle2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2572,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2590,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2591,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2594,"        RectangleInsets labelInsets = new RectangleInsets(UnitType.RELATIVE,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2596,        Rectangle2D labelsArea = labelInsets.createInsetRectangle(pieArea);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2597,        double runningTotal = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2598,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2599,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2600,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2601,            boolean include = true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2602,            double v = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2603,            Number n = getDataset().getValue(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2604,            if (n == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2605,                include = !getIgnoreNullValues();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2608,                v = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2609,                include = getIgnoreZeroValues() ? v > 0.0 : v >= 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2612,            if (include) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2613,                runningTotal = runningTotal + v;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2616,                double mid = getStartAngle() + (getDirection().getFactor(),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2619,"                Arc2D arc = new Arc2D.Double(labelsArea, getStartAngle(),",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2621,                int x = (int) arc.getEndPoint().getX();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2622,                int y = (int) arc.getEndPoint().getY();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2624,                PieSectionLabelGenerator labelGenerator = getLabelGenerator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2625,                if (labelGenerator == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2626,                    continue;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2628,                String label = labelGenerator.generateSectionLabel(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2630,                if (label == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2631,                    continue;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2633,                g2.setFont(this.labelFont);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2634,                FontMetrics fm = g2.getFontMetrics();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2635,"                Rectangle2D bounds = TextUtilities.getTextBounds(label, g2, fm);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2636,                Rectangle2D out = this.labelPadding.createOutsetRectangle(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2638,"                Shape bg = ShapeUtilities.createTranslatedShape(out,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2640,                if (this.labelShadowPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2641,"                    Shape shadow = ShapeUtilities.createTranslatedShape(bg,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2643,                    g2.setPaint(this.labelShadowPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2644,                    g2.fill(shadow);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2646,                if (this.labelBackgroundPaint != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2647,                    g2.setPaint(this.labelBackgroundPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2648,                    g2.fill(bg);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2650,                if (this.labelOutlinePaint != null,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2652,                    g2.setPaint(this.labelOutlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2653,                    g2.setStroke(this.labelOutlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2654,                    g2.draw(bg);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2657,                g2.setPaint(this.labelPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2658,                g2.setFont(this.labelFont);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2659,                TextUtilities.drawAlignedString(getLabelGenerator(),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2664,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2666,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2668,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2684,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2685,"        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2689,        DefaultKeyedValues leftKeys = new DefaultKeyedValues();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2690,        DefaultKeyedValues rightKeys = new DefaultKeyedValues();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2692,        double runningTotal = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2693,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2694,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2695,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2696,            boolean include = true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2697,            double v = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2698,            Number n = this.dataset.getValue(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2699,            if (n == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2700,                include = !this.ignoreNullValues;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2703,                v = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2704,                include = this.ignoreZeroValues ? v > 0.0 : v >= 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2707,            if (include) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2708,                runningTotal = runningTotal + v;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2711,                double mid = this.startAngle + (this.direction.getFactor(),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2713,                if (Math.cos(Math.toRadians(mid)) < 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2714,"                    leftKeys.addValue(key, new Double(mid));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2717,"                    rightKeys.addValue(key, new Double(mid));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2720,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2722,        g2.setFont(getLabelFont());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2726,        double marginX = plotArea.getX() + this.interiorGap,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2728,        double gap = plotArea.getWidth() * this.labelGap;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2729,        double ww = linkArea.getX() - gap - marginX;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2730,        float labelWidth = (float) this.labelPadding.trimWidth(ww);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2733,        if (this.labelGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2734,"            drawLeftLabels(leftKeys, g2, plotArea, linkArea, labelWidth,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2736,"            drawRightLabels(rightKeys, g2, plotArea, linkArea, labelWidth,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2739,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2741,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2759,        this.labelDistributor.clear();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2760,        double lGap = plotArea.getWidth() * this.labelGap;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2761,        double verticalLinkRadius = state.getLinkArea().getHeight() / 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2762,        for (int i = 0; i < leftKeys.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2763,            String label = this.labelGenerator.generateSectionLabel(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2765,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2766,"                TextBlock block = TextUtilities.createTextBlock(label,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2769,                TextBox labelBox = new TextBox(block);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2770,                labelBox.setBackgroundPaint(this.labelBackgroundPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2771,                labelBox.setOutlinePaint(this.labelOutlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2772,                labelBox.setOutlineStroke(this.labelOutlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2773,                labelBox.setShadowPaint(this.labelShadowPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2774,                labelBox.setInteriorGap(this.labelPadding);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2775,                double theta = Math.toRadians(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2777,                double baseY = state.getPieCenterY() - Math.sin(theta),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2779,                double hh = labelBox.getHeight(g2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2781,                this.labelDistributor.addPieLabelRecord(new PieLabelRecord(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2788,        double hh = plotArea.getHeight();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2789,        double gap = hh * getInteriorGap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2790,"        this.labelDistributor.distributeLabels(plotArea.getMinY() + gap,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2792,        for (int i = 0; i < this.labelDistributor.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2793,"            drawLeftLabel(g2, state,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2796,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2813,        this.labelDistributor.clear();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2814,        double lGap = plotArea.getWidth() * this.labelGap;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2815,        double verticalLinkRadius = state.getLinkArea().getHeight() / 2.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2817,        for (int i = 0; i < keys.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2818,            String label = this.labelGenerator.generateSectionLabel(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2821,            if (label != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2822,"                TextBlock block = TextUtilities.createTextBlock(label,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2825,                TextBox labelBox = new TextBox(block);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2826,                labelBox.setBackgroundPaint(this.labelBackgroundPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2827,                labelBox.setOutlinePaint(this.labelOutlinePaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2828,                labelBox.setOutlineStroke(this.labelOutlineStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2829,                labelBox.setShadowPaint(this.labelShadowPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2830,                labelBox.setInteriorGap(this.labelPadding);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2831,                double theta = Math.toRadians(keys.getValue(i).doubleValue());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2832,                double baseY = state.getPieCenterY(),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2834,                double hh = labelBox.getHeight(g2);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2835,                this.labelDistributor.addPieLabelRecord(new PieLabelRecord(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2842,        double hh = plotArea.getHeight();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2843,        double gap = hh * getInteriorGap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2844,"        this.labelDistributor.distributeLabels(plotArea.getMinY() + gap,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2846,        for (int i = 0; i < this.labelDistributor.getItemCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2847,"            drawRightLabel(g2, state,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2851,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2860,        LegendItemCollection result = new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2861,        if (this.dataset == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2862,            return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2864,        List keys = this.dataset.getKeys();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2865,        int section = 0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2866,        Shape shape = getLegendItemShape();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2867,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2868,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2869,            Comparable key = (Comparable) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2870,            Number n = this.dataset.getValue(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2871,            boolean include = true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2872,            if (n == null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2873,                include = !this.ignoreNullValues;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2876,                double v = n.doubleValue();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2877,                if (v == 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2878,                    include = !this.ignoreZeroValues;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2881,                    include = v > 0.0;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2884,            if (include) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2885,                String label = this.legendLabelGenerator.generateSectionLabel(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2887,                if (label != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2888,                    String description = label;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2889,                    String toolTipText = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2890,                    if (this.legendLabelToolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2891,                        toolTipText = this.legendLabelToolTipGenerator,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2894,                    String urlText = null;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2895,                    if (this.legendLabelURLGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2896,                        urlText = this.legendLabelURLGenerator.generateURL(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2899,                    Paint paint = lookupSectionPaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2900,                    Paint outlinePaint = lookupSectionOutlinePaint(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2901,                    Stroke outlineStroke = lookupSectionOutlineStroke(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2902,"                    LegendItem item = new LegendItem(label, description,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2907,                    item.setDataset(getDataset());,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2908,                    item.setSeriesIndex(this.dataset.getIndex(key));,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2909,                    item.setSeriesKey(key);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2910,                    result.add(item);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2912,                section++;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2913,            },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2915,                section++;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2917,        },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2918,        return result;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2927,"        return localizationResources.getString(""Pie_Plot"");",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2949,        if (explodePercent == 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2950,            return unexploded;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2953,"            Arc2D arc1 = new Arc2D.Double(unexploded, angle, extent / 2,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2955,            Point2D point1 = arc1.getEndPoint();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2956,"            Arc2D.Double arc2 = new Arc2D.Double(exploded, angle, extent / 2,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2958,            Point2D point2 = arc2.getEndPoint();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2959,            double deltaX = (point1.getX() - point2.getX()) * explodePercent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2960,            double deltaY = (point1.getY() - point2.getY()) * explodePercent;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2961,"            return new Rectangle2D.Double(unexploded.getX() - deltaX,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2977,        double anchorX = state.getLinkArea().getMinX();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2978,        double targetX = anchorX - record.getGap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2979,        double targetY = record.getAllocatedY();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2981,        if (this.labelLinksVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2982,            double theta = record.getAngle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2983,            double linkX = state.getPieCenterX() + Math.cos(theta),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2985,            double linkY = state.getPieCenterY() - Math.sin(theta),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2987,            double elbowX = state.getPieCenterX() + Math.cos(theta),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2989,            double elbowY = state.getPieCenterY() - Math.sin(theta),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2991,            double anchorY = elbowY;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2992,            g2.setPaint(this.labelLinkPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2993,            g2.setStroke(this.labelLinkStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2994,            PieLabelLinkStyle style = getLabelLinkStyle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2995,            if (style.equals(PieLabelLinkStyle.STANDARD)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2996,"                g2.draw(new Line2D.Double(linkX, linkY, elbowX, elbowY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2997,"                g2.draw(new Line2D.Double(anchorX, anchorY, elbowX, elbowY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,2998,"                g2.draw(new Line2D.Double(anchorX, anchorY, targetX, targetY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3000,            else if (style.equals(PieLabelLinkStyle.QUAD_CURVE)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3001,                QuadCurve2D q = new QuadCurve2D.Float();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3002,"                q.setCurve(targetX, targetY, anchorX, anchorY, elbowX, elbowY);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3003,                g2.draw(q);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3004,"                g2.draw(new Line2D.Double(elbowX, elbowY, linkX, linkY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3005,            },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3006,            else if (style.equals(PieLabelLinkStyle.CUBIC_CURVE)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3007,                CubicCurve2D c = new CubicCurve2D .Float();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3008,"                c.setCurve(targetX, targetY, anchorX, anchorY, elbowX, elbowY,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3010,                g2.draw(c);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3013,        TextBox tb = record.getLabel();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3014,"        tb.draw(g2, (float) targetX, (float) targetY, RectangleAnchor.RIGHT);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3016,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3028,        double anchorX = state.getLinkArea().getMaxX();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3029,        double targetX = anchorX + record.getGap();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3030,        double targetY = record.getAllocatedY();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3032,        if (this.labelLinksVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3033,            double theta = record.getAngle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3034,            double linkX = state.getPieCenterX() + Math.cos(theta),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3036,            double linkY = state.getPieCenterY() - Math.sin(theta),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3038,            double elbowX = state.getPieCenterX() + Math.cos(theta),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3040,            double elbowY = state.getPieCenterY() - Math.sin(theta),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3042,            double anchorY = elbowY;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3043,            g2.setPaint(this.labelLinkPaint);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3044,            g2.setStroke(this.labelLinkStroke);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3045,            PieLabelLinkStyle style = getLabelLinkStyle();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3046,            if (style.equals(PieLabelLinkStyle.STANDARD)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3047,"                g2.draw(new Line2D.Double(linkX, linkY, elbowX, elbowY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3048,"                g2.draw(new Line2D.Double(anchorX, anchorY, elbowX, elbowY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3049,"                g2.draw(new Line2D.Double(anchorX, anchorY, targetX, targetY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3051,            else if (style.equals(PieLabelLinkStyle.QUAD_CURVE)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3052,                QuadCurve2D q = new QuadCurve2D.Float();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3053,"                q.setCurve(targetX, targetY, anchorX, anchorY, elbowX, elbowY);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3054,                g2.draw(q);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3055,"                g2.draw(new Line2D.Double(elbowX, elbowY, linkX, linkY));",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3056,            },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3057,            else if (style.equals(PieLabelLinkStyle.CUBIC_CURVE)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3058,                CubicCurve2D c = new CubicCurve2D .Float();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3059,"                c.setCurve(targetX, targetY, anchorX, anchorY, elbowX, elbowY,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3061,                g2.draw(c);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3065,        TextBox tb = record.getLabel();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3066,"        tb.draw(g2, (float) targetX, (float) targetY, RectangleAnchor.LEFT);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3068,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3079,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3080,            return true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3082,        if (!(obj instanceof PiePlot)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3083,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3085,        if (!super.equals(obj)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3086,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3088,        PiePlot that = (PiePlot) obj;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3089,        if (this.pieIndex != that.pieIndex) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3090,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3092,        if (this.interiorGap != that.interiorGap) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3093,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3095,        if (this.circular != that.circular) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3096,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3098,        if (this.startAngle != that.startAngle) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3099,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3101,        if (this.direction != that.direction) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3102,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3104,        if (this.ignoreZeroValues != that.ignoreZeroValues) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3105,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3107,        if (this.ignoreNullValues != that.ignoreNullValues) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3108,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3110,"        if (!ObjectUtilities.equal(this.sectionPaintMap,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3112,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3114,"        if (!PaintUtilities.equal(this.baseSectionPaint,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3116,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3118,        if (this.sectionOutlinesVisible != that.sectionOutlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3119,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3121,"        if (!ObjectUtilities.equal(this.sectionOutlinePaintMap,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3123,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3125,        if (!PaintUtilities.equal(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3128,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3130,"        if (!ObjectUtilities.equal(this.sectionOutlineStrokeMap,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3132,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3134,        if (!ObjectUtilities.equal(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3137,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3139,"        if (!PaintUtilities.equal(this.shadowPaint, that.shadowPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3140,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3142,        if (!(this.shadowXOffset == that.shadowXOffset)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3143,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3145,        if (!(this.shadowYOffset == that.shadowYOffset)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3146,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3148,"        if (!ObjectUtilities.equal(this.explodePercentages,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3150,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3152,"        if (!ObjectUtilities.equal(this.labelGenerator,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3154,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3156,"        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3157,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3159,"        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3160,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3162,"        if (!PaintUtilities.equal(this.labelBackgroundPaint,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3164,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3166,"        if (!PaintUtilities.equal(this.labelOutlinePaint,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3168,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3170,"        if (!ObjectUtilities.equal(this.labelOutlineStroke,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3172,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3174,"        if (!PaintUtilities.equal(this.labelShadowPaint,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3176,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3178,        if (this.simpleLabels != that.simpleLabels) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3179,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3181,        if (!this.simpleLabelOffset.equals(that.simpleLabelOffset)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3182,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3184,        if (!this.labelPadding.equals(that.labelPadding)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3185,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3187,        if (!(this.maximumLabelWidth == that.maximumLabelWidth)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3188,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3190,        if (!(this.labelGap == that.labelGap)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3191,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3193,        if (!(this.labelLinkMargin == that.labelLinkMargin)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3194,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3196,        if (this.labelLinksVisible != that.labelLinksVisible) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3197,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3199,        if (!this.labelLinkStyle.equals(that.labelLinkStyle)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3200,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3202,"        if (!PaintUtilities.equal(this.labelLinkPaint, that.labelLinkPaint)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3203,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3205,"        if (!ObjectUtilities.equal(this.labelLinkStroke,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3207,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3209,"        if (!ObjectUtilities.equal(this.toolTipGenerator,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3211,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3213,"        if (!ObjectUtilities.equal(this.urlGenerator, that.urlGenerator)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3214,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3216,        if (!(this.minimumArcAngleToDraw == that.minimumArcAngleToDraw)) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3217,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3219,"        if (!ShapeUtilities.equal(this.legendItemShape, that.legendItemShape)) {",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3220,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3222,"        if (!ObjectUtilities.equal(this.legendLabelGenerator,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3224,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3226,"        if (!ObjectUtilities.equal(this.legendLabelToolTipGenerator,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3228,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3230,"        if (!ObjectUtilities.equal(this.legendLabelURLGenerator,",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3232,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3234,        if (this.autoPopulateSectionPaint != that.autoPopulateSectionPaint) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3235,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3237,        if (this.autoPopulateSectionOutlinePaint,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3239,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3241,        if (this.autoPopulateSectionOutlineStroke,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3243,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3246,        return true;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3258,        PiePlot clone = (PiePlot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3259,        if (clone.dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3260,            clone.dataset.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3262,        if (this.urlGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3263,            clone.urlGenerator = (PieURLGenerator) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3266,        clone.legendItemShape = ShapeUtilities.clone(this.legendItemShape);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3267,        if (this.legendLabelGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3268,            clone.legendLabelGenerator = (PieSectionLabelGenerator),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3271,        if (this.legendLabelToolTipGenerator != null) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3272,            clone.legendLabelToolTipGenerator = (PieSectionLabelGenerator),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3275,        if (this.legendLabelURLGenerator instanceof PublicCloneable) {,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3276,            clone.legendLabelURLGenerator = (PieURLGenerator),0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3279,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3290,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3291,"        SerialUtilities.writePaint(this.baseSectionPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3292,"        SerialUtilities.writePaint(this.baseSectionOutlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3293,"        SerialUtilities.writeStroke(this.baseSectionOutlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3294,"        SerialUtilities.writePaint(this.shadowPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3295,"        SerialUtilities.writePaint(this.labelPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3296,"        SerialUtilities.writePaint(this.labelBackgroundPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3297,"        SerialUtilities.writePaint(this.labelOutlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3298,"        SerialUtilities.writeStroke(this.labelOutlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3299,"        SerialUtilities.writePaint(this.labelShadowPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3300,"        SerialUtilities.writePaint(this.labelLinkPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3301,"        SerialUtilities.writeStroke(this.labelLinkStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3302,"        SerialUtilities.writeShape(this.legendItemShape, stream);",0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3303,    },0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3315,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3316,        this.baseSectionPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3317,        this.baseSectionOutlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3318,        this.baseSectionOutlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3319,        this.shadowPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3320,        this.labelPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3321,        this.labelBackgroundPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3322,        this.labelOutlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3323,        this.labelOutlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3324,        this.labelShadowPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3325,        this.labelLinkPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3326,        this.labelLinkStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3327,        this.legendItemShape = SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/plot/PiePlot,4,3328,    },0.0,0,-1,0
org/jfree/chart/plot/PlotState,4,56,    public PlotState() {,0.0,0,-1,0
org/jfree/chart/plot/PlotState,4,57,        this.sharedAxisStates = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/PlotState,4,58,    },0.0,0,-1,0
org/jfree/chart/plot/PlotState,4,66,        return this.sharedAxisStates;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,89,    public PlotRenderingInfo(ChartRenderingInfo owner) {,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,90,        this.owner = owner;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,91,        this.dataArea = new Rectangle2D.Double();,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,92,        this.subplotInfo = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,93,    },0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,101,        return this.owner;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,112,        return this.plotArea;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,124,        this.plotArea = area;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,125,    },0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,135,        return this.dataArea;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,147,        this.dataArea = area;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,148,    },0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,156,        return this.subplotInfo.size();,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,167,        this.subplotInfo.add(info);,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,168,    },0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,180,        return (PlotRenderingInfo) this.subplotInfo.get(index);,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,197,        if (source == null) {,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,198,"            throw new IllegalArgumentException(""Null 'source' argument."");",0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,200,        int subplotCount = getSubplotCount();,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,201,        for (int i = 0; i < subplotCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,202,            PlotRenderingInfo info = getSubplotInfo(i);,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,203,            Rectangle2D area = info.getDataArea();,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,204,            if (area.contains(source)) {,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,205,                return i;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,208,        return -1;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,219,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,220,            return true;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,222,        if (!(obj instanceof PlotRenderingInfo)) {,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,223,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,225,        PlotRenderingInfo that = (PlotRenderingInfo) obj;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,226,"        if (!ObjectUtilities.equal(this.dataArea, that.dataArea)) {",0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,227,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,229,"        if (!ObjectUtilities.equal(this.plotArea, that.plotArea)) {",0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,230,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,232,"        if (!ObjectUtilities.equal(this.subplotInfo, that.subplotInfo)) {",0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,233,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,235,        return true;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,246,        PlotRenderingInfo clone = (PlotRenderingInfo) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,247,        if (this.plotArea != null) {,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,248,            clone.plotArea = (Rectangle2D) this.plotArea.clone();,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,250,        if (this.dataArea != null) {,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,251,            clone.dataArea = (Rectangle2D) this.dataArea.clone();,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,253,        clone.subplotInfo = new java.util.ArrayList(this.subplotInfo.size());,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,254,        for (int i = 0; i < this.subplotInfo.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,255,            PlotRenderingInfo info,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,257,            clone.subplotInfo.add(info.clone());,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,259,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,270,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,271,"        SerialUtilities.writeShape(this.dataArea, stream);",0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,272,"        SerialUtilities.writeShape(this.plotArea, stream);",0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,273,    },0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,285,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,286,        this.dataArea = (Rectangle2D) SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,287,        this.plotArea = (Rectangle2D) SerialUtilities.readShape(stream);,0.0,0,-1,0
org/jfree/chart/plot/PlotRenderingInfo,4,288,    },0.0,0,-1,0
org/jfree/data/general/DatasetGroup,4,72,    public DatasetGroup(String id) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,4,73,        if (id == null) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,4,74,"            throw new IllegalArgumentException(""Null 'id' argument."");",0.0,0,-1,0
org/jfree/data/general/DatasetGroup,4,76,        this.id = id;,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,4,77,    },0.0,0,-1,0
org/jfree/data/general/DatasetGroup,4,85,        return this.id;,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,4,96,        return super.clone();,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,4,107,        if (obj == this) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,4,108,            return true;,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,4,110,        if (!(obj instanceof DatasetGroup)) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,4,111,            return false;,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,4,113,        DatasetGroup that = (DatasetGroup) obj;,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,4,114,        if (!this.id.equals(that.id)) {,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,4,115,            return false;,0.0,0,-1,0
org/jfree/data/general/DatasetGroup,4,117,        return true;,0.0,0,-1,0
org/jfree/chart/event/AxisChangeEvent,4,71,        return this.axis;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,4,80,"        this(source, chart, ChartChangeEventType.GENERAL);",0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,4,81,    },0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,4,104,        return this.chart;,0.0,0,-1,0
org/jfree/chart/event/ChartChangeEvent,4,122,        return this.type;,0.0,0,-1,0
org/jfree/chart/event/PlotChangeEvent,4,74,        return this.plot;,0.0,0,-1,0
org/jfree/data/general/DatasetChangeEvent,4,83,        return this.dataset;,0.0,0,-1,0
org/jfree/chart/event/MarkerChangeEvent,4,65,        super(marker);,0.0,0,-1,0
org/jfree/chart/event/MarkerChangeEvent,4,66,        this.marker = marker;,0.0,0,-1,0
org/jfree/chart/event/MarkerChangeEvent,4,67,    },0.0,0,-1,0
org/jfree/chart/event/MarkerChangeEvent,4,77,        return this.marker;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,96,        return getOpposite(this);,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,105,        return this.name;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,118,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,119,            return true;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,121,        if (!(obj instanceof AxisLocation)) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,122,            return false;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,124,        AxisLocation location = (AxisLocation) obj;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,125,        if (!this.name.equals(location.toString())) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,126,            return false;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,128,        return true;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,140,        if (location == null) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,141,"            throw new IllegalArgumentException(""Null 'location' argument."");",0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,143,        AxisLocation result = null;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,144,        if (location == AxisLocation.TOP_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,145,            result = AxisLocation.BOTTOM_OR_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,147,        else if (location == AxisLocation.TOP_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,148,            result = AxisLocation.BOTTOM_OR_LEFT;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,150,        else if (location == AxisLocation.BOTTOM_OR_LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,151,            result = AxisLocation.TOP_OR_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,153,        else if (location == AxisLocation.BOTTOM_OR_RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,154,            result = AxisLocation.TOP_OR_LEFT;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,157,"            throw new IllegalStateException(""AxisLocation not recognised."");",0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,159,        return result;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,170,        if (this.equals(AxisLocation.TOP_OR_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,171,            return AxisLocation.TOP_OR_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,173,        else if (this.equals(AxisLocation.BOTTOM_OR_RIGHT)) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,174,            return AxisLocation.BOTTOM_OR_RIGHT;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,176,        else if (this.equals(AxisLocation.TOP_OR_LEFT)) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,177,            return AxisLocation.TOP_OR_LEFT;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,179,        else if (this.equals(AxisLocation.BOTTOM_OR_LEFT)) {,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,180,            return AxisLocation.BOTTOM_OR_LEFT;,0.0,0,-1,0
org/jfree/chart/axis/AxisLocation,4,182,        return null;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,82,        return this.name;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,94,        if (this == obj) {,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,95,            return true;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,97,        if (!(obj instanceof PlotOrientation)) {,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,98,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,100,        PlotOrientation orientation = (PlotOrientation) obj;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,101,        if (!this.name.equals(orientation.toString())) {,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,102,            return false;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,104,        return true;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,113,        return this.name.hashCode();,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,124,        Object result = null;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,125,        if (this.equals(PlotOrientation.HORIZONTAL)) {,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,126,            result = PlotOrientation.HORIZONTAL;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,128,        else if (this.equals(PlotOrientation.VERTICAL)) {,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,129,            result = PlotOrientation.VERTICAL;,0.0,0,-1,0
org/jfree/chart/plot/PlotOrientation,4,131,        return result;,0.0,0,-1,0
org/jfree/chart/plot/XYCrosshairState,4,54,    public XYCrosshairState() {,0.0,0,-1,0
org/jfree/chart/plot/XYCrosshairState,4,56,    },0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,120,        this(false);,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,121,    },0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,130,    public CrosshairState(boolean calculateDistanceInDataSpace) {,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,68,    private boolean calculateDistanceInDataSpace = false;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,131,        this.calculateDistanceInDataSpace = calculateDistanceInDataSpace;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,132,    },0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,144,        return this.distance;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,158,        this.distance = distance;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,159,    },0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,183,"        updateCrosshairPoint(x, y, 0, 0, transX, transY, orientation);",0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,184,    },0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,210,        if (this.anchor != null) {,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,211,            double d = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,212,            if (this.calculateDistanceInDataSpace) {,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,213,                d = (x - this.anchorX) * (x - this.anchorX),0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,217,                double xx = this.anchor.getX();,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,218,                double yy = this.anchor.getY();,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,219,                if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,220,                    double temp = yy;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,221,                    yy = xx;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,222,                    xx = temp;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,224,                d = (transX - xx) * (transX - xx),0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,228,            if (d < this.distance) {,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,229,                this.crosshairX = x;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,230,                this.crosshairY = y;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,231,                this.domainAxisIndex = domainAxisIndex;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,232,                this.rangeAxisIndex = rangeAxisIndex;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,233,                this.distance = d;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,237,    },0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,252,"        updateCrosshairX(candidateX, 0);",0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,253,    },0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,269,        double d = Math.abs(candidateX - this.anchorX);,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,270,        if (d < this.distance) {,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,271,            this.crosshairX = candidateX;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,272,            this.domainAxisIndex = domainAxisIndex;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,273,            this.distance = d;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,276,    },0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,291,"        updateCrosshairY(candidateY, 0);",0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,292,    },0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,307,        double d = Math.abs(candidateY - this.anchorY);,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,308,        if (d < this.distance) {,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,309,            this.crosshairY = candidateY;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,310,            this.rangeAxisIndex = rangeAxisIndex;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,311,            this.distance = d;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,314,    },0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,326,        return this.anchor;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,343,        this.anchor = anchor;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,344,    },0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,354,        return this.anchorX;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,367,        this.anchorX = x;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,368,    },0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,378,        return this.anchorY;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,391,        this.anchorY = y;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,392,    },0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,402,        return this.crosshairX;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,417,        this.crosshairX = x;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,418,    },0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,429,        return this.crosshairY;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,443,        this.crosshairY = y;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,444,    },0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,458,        return this.datasetIndex;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,471,        this.datasetIndex = index;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,472,    },0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,485,        return this.domainAxisIndex;,0.0,0,-1,0
org/jfree/chart/plot/CrosshairState,4,499,        return this.rangeAxisIndex;,0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,4,72,        return (PieLabelRecord) this.labels.get(index);,0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,4,81,        if (record == null) {,0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,4,82,"            throw new IllegalArgumentException(""Null 'record' argument."");",0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,4,84,        this.labels.add(record);,0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,4,85,    },0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,4,93,        return this.labels.size();,0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,4,100,        this.labels.clear();,0.0,0,-1,0
org/jfree/chart/plot/AbstractPieLabelDistributor,4,101,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,545,"        this(null, null, null, null);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,546,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,562,        super();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,346,    private DatasetRenderingOrder renderingOrder,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,353,    private SortOrder columnRenderingOrder = SortOrder.ASCENDING;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,359,    private SortOrder rowRenderingOrder = SortOrder.ASCENDING;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,494,    private boolean rangeCrosshairLockedOnData = true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,564,        this.orientation = PlotOrientation.VERTICAL;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,567,        this.domainAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,568,        this.domainAxisLocations = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,569,        this.rangeAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,570,        this.rangeAxisLocations = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,572,        this.datasetToDomainAxesMap = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,573,        this.datasetToRangeAxesMap = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,575,        this.renderers = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,577,        this.datasets = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,578,"        this.datasets.set(0, dataset);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,579,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,580,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,583,"        this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,585,"        setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,586,"        setRangeAxisLocation(AxisLocation.TOP_OR_LEFT, false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,588,"        this.renderers.set(0, renderer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,589,        if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,590,            renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,591,            renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,594,"        this.domainAxes.set(0, domainAxis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,595,"        this.mapDatasetToDomainAxis(0, 0);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,596,        if (domainAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,597,            domainAxis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,598,            domainAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,600,        this.drawSharedDomainAxis = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,602,"        this.rangeAxes.set(0, rangeAxis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,603,"        this.mapDatasetToRangeAxis(0, 0);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,604,        if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,605,            rangeAxis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,606,            rangeAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,609,        configureDomainAxes();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,610,        configureRangeAxes();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,612,        this.domainGridlinesVisible = DEFAULT_DOMAIN_GRIDLINES_VISIBLE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,613,        this.domainGridlinePosition = CategoryAnchor.MIDDLE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,614,        this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,615,        this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,617,        this.rangeZeroBaselineVisible = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,618,        this.rangeZeroBaselinePaint = Color.black;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,619,        this.rangeZeroBaselineStroke = new BasicStroke(0.5f);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,621,        this.rangeGridlinesVisible = DEFAULT_RANGE_GRIDLINES_VISIBLE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,622,        this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,623,        this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,625,        this.rangeMinorGridlinesVisible = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,626,        this.rangeMinorGridlineStroke = DEFAULT_GRIDLINE_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,627,        this.rangeMinorGridlinePaint = Color.white;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,629,        this.foregroundDomainMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,630,        this.backgroundDomainMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,631,        this.foregroundRangeMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,632,        this.backgroundRangeMarkers = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,634,        this.anchorValue = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,636,        this.domainCrosshairVisible = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,637,        this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,638,        this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,640,        this.rangeCrosshairVisible = DEFAULT_CROSSHAIR_VISIBLE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,641,        this.rangeCrosshairValue = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,642,        this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,643,        this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,645,        this.annotations = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,647,        this.rangePannable = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,648,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,271,"    public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,276,    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,279,"    public static final Font DEFAULT_VALUE_LABEL_FONT = new Font(""Tahoma"",",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,294,    public static final Stroke DEFAULT_CROSSHAIR_STROKE,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,302,    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,305,    protected static ResourceBundle localizationResources,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,656,"        return localizationResources.getString(""Category_Plot"");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,667,        return this.orientation;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,679,        if (orientation == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,680,"            throw new IllegalArgumentException(""Null 'orientation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,682,        this.orientation = orientation;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,683,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,684,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,694,        return this.axisOffset;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,706,        if (offset == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,707,"            throw new IllegalArgumentException(""Null 'offset' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,709,        this.axisOffset = offset;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,710,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,711,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,723,        return getDomainAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,736,        CategoryAxis result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,737,        if (index < this.domainAxes.size()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,738,            result = (CategoryAxis) this.domainAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,740,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,741,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,742,            if (parent instanceof CategoryPlot) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,743,                CategoryPlot cp = (CategoryPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,744,                result = cp.getDomainAxis(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,747,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,759,"        setDomainAxis(0, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,760,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,772,"        setDomainAxis(index, axis, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,773,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,784,        CategoryAxis existing = (CategoryAxis) this.domainAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,785,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,786,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,788,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,789,            axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,791,"        this.domainAxes.set(index, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,792,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,793,            axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,794,            axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,796,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,797,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,799,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,810,        for (int i = 0; i < axes.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,811,"            setDomainAxis(i, axes[i], false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,813,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,814,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,830,        if (axis == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,831,"            throw new IllegalArgumentException(""Null 'axis' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,833,        return this.domainAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,844,        return getDomainAxisLocation(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,857,        AxisLocation result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,858,        if (index < this.domainAxisLocations.size()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,859,            result = (AxisLocation) this.domainAxisLocations.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,861,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,862,            result = AxisLocation.getOpposite(getDomainAxisLocation(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,864,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,878,"        setDomainAxisLocation(0, location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,879,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,890,"        setDomainAxisLocation(0, location, notify);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,891,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,905,"        setDomainAxisLocation(index, location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,906,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,923,        if (index == 0 && location == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,924,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,927,"        this.domainAxisLocations.set(index, location);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,928,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,929,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,931,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,940,        return getDomainAxisEdge(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,951,        RectangleEdge result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,952,        AxisLocation location = getDomainAxisLocation(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,953,        if (location != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,954,"            result = Plot.resolveDomainAxisLocation(location, this.orientation);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,957,            result = RectangleEdge.opposite(getDomainAxisEdge(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,959,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,968,        return this.domainAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,976,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,977,            CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,978,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,979,                axis.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,982,        this.domainAxes.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,983,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,984,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,990,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,991,            CategoryAxis axis = (CategoryAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,992,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,993,                axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,996,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1006,        return getRangeAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1017,        ValueAxis result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1018,        if (index < this.rangeAxes.size()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1019,            result = (ValueAxis) this.rangeAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1021,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1022,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1023,            if (parent instanceof CategoryPlot) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1024,                CategoryPlot cp = (CategoryPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1025,                result = cp.getRangeAxis(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1028,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1038,"        setRangeAxis(0, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1039,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1049,"        setRangeAxis(index, axis, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1050,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1061,        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1062,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1063,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1065,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1066,            axis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1068,"        this.rangeAxes.set(index, axis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1069,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1070,            axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1071,            axis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1073,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1074,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1076,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1087,        for (int i = 0; i < axes.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1088,"            setRangeAxis(i, axes[i], false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1090,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1091,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1107,        if (axis == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1108,"            throw new IllegalArgumentException(""Null 'axis' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1110,        int result = this.rangeAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1111,        if (result < 0) { // try the parent plot,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1112,            Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1113,            if (parent instanceof CategoryPlot) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1114,                CategoryPlot p = (CategoryPlot) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1115,                result = p.getRangeAxisIndex(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1118,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1127,        return getRangeAxisLocation(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1140,        AxisLocation result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1141,        if (index < this.rangeAxisLocations.size()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1142,            result = (AxisLocation) this.rangeAxisLocations.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1144,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1145,            result = AxisLocation.getOpposite(getRangeAxisLocation(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1147,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1161,"        setRangeAxisLocation(location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1162,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1174,"        setRangeAxisLocation(0, location, notify);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1175,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1188,"        setRangeAxisLocation(index, location, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1189,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1204,        if (index == 0 && location == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1205,            throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1208,"        this.rangeAxisLocations.set(index, location);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1209,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1210,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1212,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1220,        return getRangeAxisEdge(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1231,        AxisLocation location = getRangeAxisLocation(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1232,"        RectangleEdge result = Plot.resolveRangeAxisLocation(location,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1234,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1235,            result = RectangleEdge.opposite(getRangeAxisEdge(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1237,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1246,        return this.rangeAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1254,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1255,            ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1256,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1257,                axis.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1260,        this.rangeAxes.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1261,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1262,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1268,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1269,            ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1270,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1271,                axis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1274,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1284,        return getDataset(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1297,        CategoryDataset result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1298,        if (this.datasets.size() > index) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1299,            result = (CategoryDataset) this.datasets.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1301,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1316,"        setDataset(0, dataset);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1317,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1329,        CategoryDataset existing = (CategoryDataset) this.datasets.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1330,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1331,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1333,"        this.datasets.set(index, dataset);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1334,        if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1335,            dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1339,"        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1340,        datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1342,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1352,        return this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1366,        int result = -1;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1367,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1368,            if (dataset == this.datasets.get(i)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1369,                result = i;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1370,                break;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1373,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1385,        List axisIndices = new java.util.ArrayList(1);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1386,        axisIndices.add(new Integer(axisIndex));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1387,"        mapDatasetToDomainAxes(index, axisIndices);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1388,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1401,        if (index < 0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1402,"            throw new IllegalArgumentException(""Requires 'index' >= 0."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1404,        checkAxisIndices(axisIndices);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1405,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1406,"        this.datasetToDomainAxesMap.put(key, new ArrayList(axisIndices));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1408,"        datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1409,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1422,        if (indices == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1423,            return;  // OK,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1425,        int count = indices.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1426,        if (count == 0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1427,"            throw new IllegalArgumentException(""Empty list not permitted."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1429,        HashSet set = new HashSet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1430,        for (int i = 0; i < count; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1431,            Object item = indices.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1432,            if (!(item instanceof Integer)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1433,                throw new IllegalArgumentException(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1436,            if (set.contains(item)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1437,"                throw new IllegalArgumentException(""Indices must be unique."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1439,            set.add(item);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1441,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1454,        if (index < 0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1455,"            throw new IllegalArgumentException(""Negative 'index'."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1457,        CategoryAxis axis = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1458,        List axisIndices = (List) this.datasetToDomainAxesMap.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1460,        if (axisIndices != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1462,            Integer axisIndex = (Integer) axisIndices.get(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1463,            axis = getDomainAxis(axisIndex.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1464,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1466,            axis = getDomainAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1468,        return axis;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1480,        List axisIndices = new java.util.ArrayList(1);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1481,        axisIndices.add(new Integer(axisIndex));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1482,"        mapDatasetToRangeAxes(index, axisIndices);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1483,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1496,        if (index < 0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1497,"            throw new IllegalArgumentException(""Requires 'index' >= 0."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1499,        checkAxisIndices(axisIndices);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1500,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1501,"        this.datasetToRangeAxesMap.put(key, new ArrayList(axisIndices));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1503,"        datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1504,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1517,        if (index < 0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1518,"            throw new IllegalArgumentException(""Negative 'index'."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1520,        ValueAxis axis = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1521,        List axisIndices = (List) this.datasetToRangeAxesMap.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1523,        if (axisIndices != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1525,            Integer axisIndex = (Integer) axisIndices.get(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1526,            axis = getRangeAxis(axisIndex.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1527,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1529,            axis = getRangeAxis(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1531,        return axis;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1542,        return this.renderers.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1553,        return getRenderer(0);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1566,        CategoryItemRenderer result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1567,        if (this.renderers.size() > index) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1568,            result = (CategoryItemRenderer) this.renderers.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1570,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1583,"        setRenderer(0, renderer, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1584,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1604,"        setRenderer(0, renderer, notify);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1605,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1618,"        setRenderer(index, renderer, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1619,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1635,        CategoryItemRenderer existing,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1637,        if (existing != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1638,            existing.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1642,"        this.renderers.set(index, renderer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1643,        if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1644,            renderer.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1645,            renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1648,        configureDomainAxes();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1649,        configureRangeAxes();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1651,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1652,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1654,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1663,        for (int i = 0; i < renderers.length; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1664,"            setRenderer(i, renderers[i], false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1666,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1667,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1678,        CategoryItemRenderer result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1679,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1680,            if (this.datasets.get(i) == dataset) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1681,                result = (CategoryItemRenderer) this.renderers.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1682,                break;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1685,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1697,        return this.renderers.indexOf(renderer);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1708,        return this.renderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1722,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1723,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1725,        this.renderingOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1726,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1727,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1738,        return this.columnRenderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1753,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1754,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1756,        this.columnRenderingOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1757,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1758,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1769,        return this.rowRenderingOrder;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1784,        if (order == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1785,"            throw new IllegalArgumentException(""Null 'order' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1787,        this.rowRenderingOrder = order;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1788,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1789,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1799,        return this.domainGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1814,        if (this.domainGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1815,            this.domainGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1816,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1818,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1828,        return this.domainGridlinePosition;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1840,        if (position == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1841,"            throw new IllegalArgumentException(""Null 'position' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1843,        this.domainGridlinePosition = position;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1844,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1845,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1855,        return this.domainGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1867,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1868,"            throw new IllegalArgumentException(""Null 'stroke' not permitted."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1870,        this.domainGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1871,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1872,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1882,        return this.domainGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1894,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1895,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1897,        this.domainGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1898,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1899,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1912,        return this.rangeZeroBaselineVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1927,        this.rangeZeroBaselineVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1928,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1929,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1941,        return this.rangeZeroBaselineStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1955,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1956,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1958,        this.rangeZeroBaselineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1959,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1960,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1973,        return this.rangeZeroBaselinePaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1987,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1988,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1990,        this.rangeZeroBaselinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1991,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,1992,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2002,        return this.rangeGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2015,        if (this.rangeGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2016,            this.rangeGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2017,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2019,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2029,        return this.rangeGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2041,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2042,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2044,        this.rangeGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2045,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2046,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2056,        return this.rangeGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2068,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2069,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2071,        this.rangeGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2072,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2073,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2086,        return this.rangeMinorGridlinesVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2103,        if (this.rangeMinorGridlinesVisible != visible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2104,            this.rangeMinorGridlinesVisible = visible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2105,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2107,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2120,        return this.rangeMinorGridlineStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2134,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2135,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2137,        this.rangeMinorGridlineStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2138,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2139,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2152,        return this.rangeMinorGridlinePaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2166,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2167,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2169,        this.rangeMinorGridlinePaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2170,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2171,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2181,        return this.fixedLegendItems;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2194,        this.fixedLegendItems = items;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2195,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2196,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2206,        LegendItemCollection result = this.fixedLegendItems;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2207,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2208,            result = new LegendItemCollection();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2210,            int count = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2211,            for (int datasetIndex = 0; datasetIndex < count; datasetIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2212,                CategoryDataset dataset = getDataset(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2213,                if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2214,                    CategoryItemRenderer renderer = getRenderer(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2215,                    if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2216,                        int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2217,                        for (int i = 0; i < seriesCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2218,                            LegendItem item = renderer.getLegendItem(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2220,                            if (item != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2221,                                result.add(item);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2228,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2241,        Rectangle2D dataArea = info.getDataArea();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2242,"        if (dataArea.contains(x, y)) {",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2244,            double java2D = 0.0;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2245,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2246,                java2D = x;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2248,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2249,                java2D = y;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2251,            RectangleEdge edge = Plot.resolveRangeAxisLocation(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2253,            double value = getRangeAxis().java2DToValue(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2255,            setAnchorValue(value);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2256,            setRangeCrosshairValue(value);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2259,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2272,        if (percent > 0.0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2273,            double range = getRangeAxis().getRange().getLength();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2274,            double scaledRange = range * percent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2275,"            getRangeAxis().setRange(this.anchorValue - scaledRange / 2.0,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2277,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2279,            getRangeAxis().setAutoRange(true);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2282,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2293,        int count = this.rangeAxes.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2294,        for (int axisIndex = 0; axisIndex < count; axisIndex++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2295,            ValueAxis yAxis = getRangeAxis(axisIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2296,            if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2297,                yAxis.configure();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2300,        if (getParent() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2301,            getParent().datasetChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2304,            PlotChangeEvent e = new PlotChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2305,            e.setType(ChartChangeEventType.DATASET_UPDATED);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2306,            notifyListeners(e);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2309,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2317,        Plot parent = getParent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2318,        if (parent != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2319,            if (parent instanceof RendererChangeListener) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2320,                RendererChangeListener rcl = (RendererChangeListener) parent;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2321,                rcl.rendererChanged(event);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2322,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2326,                throw new RuntimeException(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2331,            configureRangeAxes();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2332,            PlotChangeEvent e = new PlotChangeEvent(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2333,            notifyListeners(e);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2335,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2348,"        addDomainMarker(marker, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2349,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2364,"        addDomainMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2365,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2381,"        addDomainMarker(index, marker, layer, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2382,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2402,        if (marker == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2403,"            throw new IllegalArgumentException(""Null 'marker' not permitted."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2405,        if (layer == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2406,"            throw new IllegalArgumentException(""Null 'layer' not permitted."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2409,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2410,            markers = (Collection) this.foregroundDomainMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2412,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2413,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2414,"                this.foregroundDomainMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2416,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2418,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2419,            markers = (Collection) this.backgroundDomainMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2421,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2422,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2423,"                this.backgroundDomainMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2425,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2427,        marker.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2428,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2429,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2431,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2440,        if (this.backgroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2441,            Set keys = this.backgroundDomainMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2442,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2443,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2444,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2445,                clearDomainMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2446,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2447,            this.backgroundDomainMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2449,        if (this.foregroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2450,            Set keys = this.foregroundDomainMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2451,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2452,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2453,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2454,                clearDomainMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2455,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2456,            this.foregroundDomainMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2458,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2459,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2469,"        return getDomainMarkers(0, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2482,        Collection result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2483,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2484,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2485,            result = (Collection) this.foregroundDomainMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2487,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2488,            result = (Collection) this.backgroundDomainMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2490,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2491,            result = Collections.unmodifiableCollection(result);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2493,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2504,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2505,        if (this.backgroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2506,            Collection markers,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2508,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2509,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2510,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2511,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2512,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2513,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2514,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2517,        if (this.foregroundDomainMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2518,            Collection markers,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2520,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2521,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2522,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2523,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2524,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2525,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2526,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2529,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2530,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2544,"        return removeDomainMarker(marker, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2560,"        return removeDomainMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2577,"        return removeDomainMarker(index, marker, layer, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2597,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2598,            markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2602,            markers = (ArrayList) this.backgroundDomainMarkers.get(new Integer(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2605,        if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2606,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2608,        boolean removed = markers.remove(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2609,        if (removed && notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2610,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2612,        return removed;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2626,"        addRangeMarker(marker, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2627,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2642,"        addRangeMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2643,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2659,"        addRangeMarker(index, marker, layer, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2660,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2681,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2682,            markers = (Collection) this.foregroundRangeMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2684,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2685,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2686,"                this.foregroundRangeMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2688,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2690,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2691,            markers = (Collection) this.backgroundRangeMarkers.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2693,            if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2694,                markers = new java.util.ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2695,"                this.backgroundRangeMarkers.put(new Integer(index), markers);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2697,            markers.add(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2699,        marker.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2700,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2701,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2703,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2712,        if (this.backgroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2713,            Set keys = this.backgroundRangeMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2714,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2715,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2716,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2717,                clearRangeMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2718,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2719,            this.backgroundRangeMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2721,        if (this.foregroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2722,            Set keys = this.foregroundRangeMarkers.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2723,            Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2724,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2725,                Integer key = (Integer) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2726,                clearRangeMarkers(key.intValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2727,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2728,            this.foregroundRangeMarkers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2730,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2731,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2743,"        return getRangeMarkers(0, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2756,        Collection result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2757,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2758,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2759,            result = (Collection) this.foregroundRangeMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2761,        else if (layer == Layer.BACKGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2762,            result = (Collection) this.backgroundRangeMarkers.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2764,        if (result != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2765,            result = Collections.unmodifiableCollection(result);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2767,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2778,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2779,        if (this.backgroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2780,            Collection markers,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2782,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2783,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2784,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2785,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2786,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2787,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2788,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2791,        if (this.foregroundRangeMarkers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2792,            Collection markers,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2794,            if (markers != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2795,                Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2796,                while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2797,                    Marker m = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2798,                    m.removeChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2799,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2800,                markers.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2803,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2804,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2820,"        return removeRangeMarker(marker, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2838,"        return removeRangeMarker(0, marker, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2857,"        return removeRangeMarker(index, marker, layer, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2878,        if (marker == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2879,"            throw new IllegalArgumentException(""Null 'marker' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2882,        if (layer == Layer.FOREGROUND) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2883,            markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2887,            markers = (ArrayList) this.backgroundRangeMarkers.get(new Integer(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2890,        if (markers == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2891,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2893,        boolean removed = markers.remove(marker);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2894,        if (removed && notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2895,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2897,        return removed;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2911,        return this.domainCrosshairVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2927,        if (this.domainCrosshairVisible != flag) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2928,            this.domainCrosshairVisible = flag;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2929,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2931,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2941,        return this.domainCrosshairRowKey;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2953,"        setDomainCrosshairRowKey(key, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2954,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2966,        this.domainCrosshairRowKey = key;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2967,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2968,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2970,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2980,        return this.domainCrosshairColumnKey;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2992,"        setDomainCrosshairColumnKey(key, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,2993,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3005,        this.domainCrosshairColumnKey = key;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3006,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3007,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3009,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3019,        return this.crosshairDatasetIndex;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3031,"        setCrosshairDatasetIndex(index, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3032,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3044,        this.crosshairDatasetIndex = index;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3045,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3046,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3048,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3061,        return this.domainCrosshairPaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3074,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3075,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3077,        this.domainCrosshairPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3078,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3079,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3092,        return this.domainCrosshairStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3106,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3107,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3109,        this.domainCrosshairStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3110,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3120,        return this.rangeCrosshairVisible;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3131,        if (this.rangeCrosshairVisible != flag) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3132,            this.rangeCrosshairVisible = flag;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3133,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3135,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3146,        return this.rangeCrosshairLockedOnData;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3159,        if (this.rangeCrosshairLockedOnData != flag) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3160,            this.rangeCrosshairLockedOnData = flag;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3161,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3163,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3173,        return this.rangeCrosshairValue;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3185,"        setRangeCrosshairValue(value, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3186,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3200,        this.rangeCrosshairValue = value;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3201,        if (isRangeCrosshairVisible() && notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3202,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3204,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3217,        return this.rangeCrosshairStroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3231,        if (stroke == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3232,"            throw new IllegalArgumentException(""Null 'stroke' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3234,        this.rangeCrosshairStroke = stroke;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3235,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3236,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3248,        return this.rangeCrosshairPaint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3260,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3261,"            throw new IllegalArgumentException(""Null 'paint' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3263,        this.rangeCrosshairPaint = paint;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3264,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3265,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3276,        return this.annotations;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3288,"        addAnnotation(annotation, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3289,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3301,        if (annotation == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3302,"            throw new IllegalArgumentException(""Null 'annotation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3304,        this.annotations.add(annotation);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3305,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3306,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3308,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3321,"        return removeAnnotation(annotation, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3337,        if (annotation == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3338,"            throw new IllegalArgumentException(""Null 'annotation' argument."");",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3340,        boolean removed = this.annotations.remove(annotation);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3341,        if (removed && notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3342,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3344,        return removed;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3352,        this.annotations.clear();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3353,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3354,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3369,        if (space == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3370,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3374,        if (this.fixedDomainAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3375,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3376,                space.ensureAtLeast(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3378,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getRight(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3381,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3382,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getTop(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3384,"                space.ensureAtLeast(this.fixedDomainAxisSpace.getBottom(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3390,            RectangleEdge domainEdge = Plot.resolveDomainAxisLocation(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3392,            if (this.drawSharedDomainAxis) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3393,"                space = getDomainAxis().reserveSpace(g2, this, plotArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3398,            for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3399,                Axis xAxis = (Axis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3400,                if (xAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3401,                    RectangleEdge edge = getDomainAxisEdge(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3402,"                    space = xAxis.reserveSpace(g2, this, plotArea, edge, space);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3407,        return space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3424,        if (space == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3425,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3429,        if (this.fixedRangeAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3430,            if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3431,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getTop(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3433,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getBottom(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3436,            else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3437,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getLeft(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3439,"                space.ensureAtLeast(this.fixedRangeAxisSpace.getRight(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3445,            for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3446,                Axis yAxis = (Axis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3447,                if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3448,                    RectangleEdge edge = getRangeAxisEdge(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3449,"                    space = yAxis.reserveSpace(g2, this, plotArea, edge, space);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3453,        return space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3467,        AxisSpace space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3468,"        space = calculateRangeAxisSpace(g2, plotArea, space);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3469,"        space = calculateDomainAxisSpace(g2, plotArea, space);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3470,        return space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3493,        boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3494,        boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3495,        if (b1 || b2) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3496,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3500,        if (state == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3504,            state = new PlotRenderingInfo(null);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3506,        state.setPlotArea(area);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3509,        RectangleInsets insets = getInsets();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3510,        insets.trim(area);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3513,"        AxisSpace space = calculateAxisSpace(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3514,"        Rectangle2D dataArea = space.shrink(area, null);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3515,        this.axisOffset.trim(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3517,        state.setDataArea(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3518,"        createAndAddEntity((Rectangle2D) dataArea.clone(), state, null, null);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3522,        if (getRenderer() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3523,"            getRenderer().drawBackground(g2, this, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3526,"            drawBackground(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3529,"        Map axisStateMap = drawAxes(g2, area, dataArea, state);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3533,        if (anchor != null && !dataArea.contains(anchor)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3534,"            anchor = ShapeUtilities.getPointInRectangle(anchor.getX(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3537,        CategoryCrosshairState crosshairState = new CategoryCrosshairState();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3538,        crosshairState.setCrosshairDistance(Double.POSITIVE_INFINITY);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3539,        crosshairState.setAnchor(anchor);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3544,        crosshairState.setAnchorX(Double.NaN);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3545,        crosshairState.setAnchorY(Double.NaN);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3546,        if (anchor != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3547,            ValueAxis rangeAxis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3548,            if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3550,                if (getOrientation() == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3551,"                    y = rangeAxis.java2DToValue(anchor.getY(), dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3555,"                    y = rangeAxis.java2DToValue(anchor.getX(), dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3558,                crosshairState.setAnchorY(y);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3561,        crosshairState.setRowKey(getDomainCrosshairRowKey());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3562,        crosshairState.setColumnKey(getDomainCrosshairColumnKey());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3563,        crosshairState.setCrosshairY(getRangeCrosshairValue());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3566,        Shape savedClip = g2.getClip();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3567,        g2.clip(dataArea);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3569,"        drawDomainGridlines(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3571,        AxisState rangeAxisState = (AxisState) axisStateMap.get(getRangeAxis());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3572,        if (rangeAxisState == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3573,            if (parentState != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3574,                rangeAxisState = (AxisState) parentState.getSharedAxisStates(),0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3578,        if (rangeAxisState != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3579,"            drawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3580,"            drawZeroRangeBaseline(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3584,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3585,"            drawDomainMarkers(g2, dataArea, i, Layer.BACKGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3587,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3588,"            drawRangeMarkers(g2, dataArea, i, Layer.BACKGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3592,        boolean foundData = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3595,        Composite originalComposite = g2.getComposite();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3596,        g2.setComposite(AlphaComposite.getInstance(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3599,        DatasetRenderingOrder order = getDatasetRenderingOrder();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3600,        if (order == DatasetRenderingOrder.FORWARD) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3603,            int datasetCount = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3604,            for (int i = 0; i < datasetCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3605,                CategoryItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3606,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3607,                    CategoryAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3608,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3609,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3614,            for (int i = 0; i < datasetCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3615,"                foundData = render(g2, dataArea, i, state, crosshairState)",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3620,            for (int i = 0; i < datasetCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3621,                CategoryItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3622,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3623,                    CategoryAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3624,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3625,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3629,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3633,            int datasetCount = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3634,            for (int i = datasetCount - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3635,                CategoryItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3636,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3637,                    CategoryAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3638,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3639,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3644,            for (int i = this.datasets.size() - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3645,"                foundData = render(g2, dataArea, i, state, crosshairState)",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3650,            for (int i = datasetCount - 1; i >= 0; i--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3651,                CategoryItemRenderer r = getRenderer(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3652,                if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3653,                    CategoryAxis domainAxis = getDomainAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3654,                    ValueAxis rangeAxis = getRangeAxisForDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3655,"                    r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3662,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3663,"            drawDomainMarkers(g2, dataArea, i, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3665,        for (int i = 0; i < this.renderers.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3666,"            drawRangeMarkers(g2, dataArea, i, Layer.FOREGROUND);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3670,"        drawAnnotations(g2, dataArea, state);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3672,        g2.setClip(savedClip);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3673,        g2.setComposite(originalComposite);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3675,        if (!foundData) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3676,"            drawNoDataMessage(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3679,        int datasetIndex = crosshairState.getDatasetIndex();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3680,"        setCrosshairDatasetIndex(datasetIndex, false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3683,        Comparable rowKey = crosshairState.getRowKey();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3684,        Comparable columnKey = crosshairState.getColumnKey();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3685,"        setDomainCrosshairRowKey(rowKey, false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3686,"        setDomainCrosshairColumnKey(columnKey, false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3687,        if (isDomainCrosshairVisible() && columnKey != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3688,            Paint paint = getDomainCrosshairPaint();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3689,            Stroke stroke = getDomainCrosshairStroke();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3690,"            drawDomainCrosshair(g2, dataArea, this.orientation,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3695,        ValueAxis yAxis = getRangeAxisForDataset(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3696,        RectangleEdge yAxisEdge = getRangeAxisEdge();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3697,        if (!this.rangeCrosshairLockedOnData && anchor != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3699,            if (getOrientation() == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3700,"                yy = yAxis.java2DToValue(anchor.getY(), dataArea, yAxisEdge);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3703,"                yy = yAxis.java2DToValue(anchor.getX(), dataArea, yAxisEdge);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3705,            crosshairState.setCrosshairY(yy);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3707,"        setRangeCrosshairValue(crosshairState.getCrosshairY(), false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3708,        if (isRangeCrosshairVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3709,            double y = getRangeCrosshairValue();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3710,            Paint paint = getRangeCrosshairPaint();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3711,            Stroke stroke = getRangeCrosshairStroke();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3712,"            drawRangeCrosshair(g2, dataArea, getOrientation(), y, yAxis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3717,        if (isOutlineVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3718,            if (getRenderer() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3719,"                getRenderer().drawOutline(g2, this, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3722,"                drawOutline(g2, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3726,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3739,"        fillBackground(g2, area, this.orientation);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3740,"        drawBackgroundImage(g2, area);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3741,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3759,        AxisCollection axisCollection = new AxisCollection();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3762,        for (int index = 0; index < this.domainAxes.size(); index++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3763,            CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3764,            if (xAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3765,"                axisCollection.add(xAxis, getDomainAxisEdge(index));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3770,        for (int index = 0; index < this.rangeAxes.size(); index++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3771,            ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3772,            if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3773,"                axisCollection.add(yAxis, getRangeAxisEdge(index));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3777,        Map axisStateMap = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3780,        double cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3782,        Iterator iterator = axisCollection.getAxesAtTop().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3783,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3784,            Axis axis = (Axis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3785,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3786,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3788,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3789,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3791,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3794,        cursor = dataArea.getMaxY(),0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3796,        iterator = axisCollection.getAxesAtBottom().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3797,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3798,            Axis axis = (Axis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3799,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3800,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3802,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3803,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3805,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3808,        cursor = dataArea.getMinX(),0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3810,        iterator = axisCollection.getAxesAtLeft().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3811,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3812,            Axis axis = (Axis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3813,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3814,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3816,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3817,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3819,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3822,        cursor = dataArea.getMaxX(),0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3824,        iterator = axisCollection.getAxesAtRight().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3825,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3826,            Axis axis = (Axis) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3827,            if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3828,"                AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3830,                cursor = axisState.getCursor();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3831,"                axisStateMap.put(axis, axisState);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3833,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3835,        return axisStateMap;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3857,        boolean foundData = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3858,        CategoryDataset currentDataset = getDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3859,        CategoryItemRenderer renderer = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3860,        CategoryAxis domainAxis = getDomainAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3861,        ValueAxis rangeAxis = getRangeAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3862,        boolean hasData = !DatasetUtilities.isEmptyOrNull(currentDataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3863,        if (hasData && renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3865,            foundData = true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3866,"            CategoryItemRendererState state = renderer.initialise(g2, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3868,            state.setCrosshairState(crosshairState);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3869,            int columnCount = currentDataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3870,            int rowCount = currentDataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3871,            int passCount = renderer.getPassCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3872,            for (int pass = 0; pass < passCount; pass++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3873,                if (this.columnRenderingOrder == SortOrder.ASCENDING) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3874,                    for (int column = 0; column < columnCount; column++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3875,                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3876,                            for (int row = 0; row < rowCount; row++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3877,"                                renderer.drawItem(g2, state, dataArea, this,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3883,                            for (int row = rowCount - 1; row >= 0; row--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3884,"                                renderer.drawItem(g2, state, dataArea, this,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3892,                    for (int column = columnCount - 1; column >= 0; column--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3893,                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3894,                            for (int row = 0; row < rowCount; row++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3895,"                                renderer.drawItem(g2, state, dataArea, this,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3901,                            for (int row = rowCount - 1; row >= 0; row--) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3902,"                                renderer.drawItem(g2, state, dataArea, this,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3911,        return foundData;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3925,        if (!isDomainGridlinesVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3926,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3928,        CategoryAnchor anchor = getDomainGridlinePosition();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3929,        RectangleEdge domainAxisEdge = getDomainAxisEdge();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3930,        CategoryDataset dataset = getDataset();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3931,        if (dataset == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3932,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3934,        CategoryAxis axis = getDomainAxis();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3935,        if (axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3936,            int columnCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3937,            for (int c = 0; c < columnCount; c++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3938,"                double xx = axis.getCategoryJava2DCoordinate(anchor, c,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3940,                CategoryItemRenderer renderer1 = getRenderer();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3941,                if (renderer1 != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3942,"                    renderer1.drawDomainLine(g2, this, dataArea, xx,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3948,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3962,        if (!isRangeGridlinesVisible() && !isRangeMinorGridlinesVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3963,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3966,        ValueAxis axis = getRangeAxis();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3967,        if (axis == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3968,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3971,        CategoryItemRenderer r = getRenderer();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3972,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3973,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3976,        Stroke gridStroke = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3977,        Paint gridPaint = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3978,        boolean paintLine = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3979,        Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3980,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3981,            paintLine = false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3982,            ValueTick tick = (ValueTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3983,            if ((tick.getTickType() == TickType.MINOR),0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3985,                gridStroke = getRangeMinorGridlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3986,                gridPaint = getRangeMinorGridlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3987,                paintLine = true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3989,            else if ((tick.getTickType() == TickType.MAJOR),0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3991,                gridStroke = getRangeGridlineStroke();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3992,                gridPaint = getRangeGridlinePaint();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3993,                paintLine = true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3995,            if (((tick.getValue() != 0.0),0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,3997,"                    r.drawRangeLine(g2, this, axis, dataArea, tick.getValue(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4000,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4001,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4014,        if (!isRangeZeroBaselineVisible()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4015,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4017,        CategoryItemRenderer r = getRenderer();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4018,"        r.drawRangeLine(g2, this, getRangeAxis(), area, 0.0,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4020,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4032,        Iterator iterator = getAnnotations().iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4033,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4034,            CategoryAnnotation annotation,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4036,"            annotation.draw(g2, this, dataArea, getDomainAxis(),",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4038,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4040,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4056,        CategoryItemRenderer r = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4057,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4058,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4061,"        Collection markers = getDomainMarkers(index, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4062,        CategoryAxis axis = getDomainAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4063,        if (markers != null && axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4064,            Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4065,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4066,                CategoryMarker marker = (CategoryMarker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4067,"                r.drawDomainMarker(g2, this, axis, marker, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4068,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4071,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4087,        CategoryItemRenderer r = getRenderer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4088,        if (r == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4089,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4092,"        Collection markers = getRangeMarkers(index, layer);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4093,        ValueAxis axis = getRangeAxisForDataset(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4094,        if (markers != null && axis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4095,            Iterator iterator = markers.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4096,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4097,                Marker marker = (Marker) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4098,"                r.drawRangeMarker(g2, this, axis, marker, dataArea);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4099,            },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4102,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4117,"        double java2D = getRangeAxis().valueToJava2D(value, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4119,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4120,        if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4121,"            line = new Line2D.Double(java2D, dataArea.getMinY(), java2D,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4124,        else if (this.orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4125,"            line = new Line2D.Double(dataArea.getMinX(), java2D,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4128,        g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4129,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4130,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4132,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4156,        CategoryDataset dataset = getDataset(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4157,        CategoryAxis axis = getDomainAxisForDataset(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4158,        CategoryItemRenderer renderer = getRenderer(datasetIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4159,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4160,        if (orientation == PlotOrientation.VERTICAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4161,"            double xx = renderer.getItemMiddle(rowKey, columnKey, dataset, axis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4163,"            line = new Line2D.Double(xx, dataArea.getMinY(), xx,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4165,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4167,"            double yy = renderer.getItemMiddle(rowKey, columnKey, dataset, axis,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4169,"            line = new Line2D.Double(dataArea.getMinX(), yy,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4172,        g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4173,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4174,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4176,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4198,        if (!axis.getRange().contains(value)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4199,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4201,        Line2D line = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4202,        if (orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4203,"            double xx = axis.valueToJava2D(value, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4205,"            line = new Line2D.Double(xx, dataArea.getMinY(), xx,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4207,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4209,"            double yy = axis.valueToJava2D(value, dataArea,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4211,"            line = new Line2D.Double(dataArea.getMinX(), yy,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4214,        g2.setStroke(stroke);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4215,        g2.setPaint(paint);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4216,        g2.draw(line);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4218,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4231,        Range result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4232,        List mappedDatasets = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4234,        int rangeIndex = this.rangeAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4235,        if (rangeIndex >= 0) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4236,            mappedDatasets.addAll(datasetsMappedToRangeAxis(rangeIndex));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4238,        else if (axis == getRangeAxis()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4239,            mappedDatasets.addAll(datasetsMappedToRangeAxis(0));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4244,        Iterator iterator = mappedDatasets.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4245,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4246,            CategoryDataset d = (CategoryDataset) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4247,            CategoryItemRenderer r = getRendererForDataset(d);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4248,            if (r != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4249,"                result = Range.combine(result, r.findRangeBounds(d));",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4251,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4252,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4267,        Integer key = new Integer(axisIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4268,        List result = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4269,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4270,            List mappedAxes = (List) this.datasetToDomainAxesMap.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4272,            CategoryDataset dataset = (CategoryDataset) this.datasets.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4273,            if (mappedAxes == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4274,                if (key.equals(ZERO)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4275,                    if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4276,                        result.add(dataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4281,                if (mappedAxes.contains(key)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4282,                    if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4283,                        result.add(dataset);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4288,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4300,        Integer key = new Integer(index);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4301,        List result = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4302,        for (int i = 0; i < this.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4303,            List mappedAxes = (List) this.datasetToRangeAxesMap.get(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4305,            if (mappedAxes == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4306,                if (key.equals(ZERO)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4307,                    result.add(this.datasets.get(i));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4311,                if (mappedAxes.contains(key)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4312,                    result.add(this.datasets.get(i));,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4316,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4328,        return this.weight;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4340,        this.weight = weight;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4341,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4342,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4352,        return this.fixedDomainAxisSpace;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4364,"        setFixedDomainAxisSpace(space, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4365,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4379,        this.fixedDomainAxisSpace = space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4380,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4381,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4383,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4393,        return this.fixedRangeAxisSpace;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4405,"        setFixedRangeAxisSpace(space, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4406,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4420,        this.fixedRangeAxisSpace = space;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4421,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4422,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4424,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4434,        List result = null;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4435,        if (getDataset() != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4436,            result = Collections.unmodifiableList(getDataset().getColumnKeys());,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4438,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4452,        List result = new ArrayList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4453,        int axisIndex = this.domainAxes.indexOf(axis);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4454,        List datasets = datasetsMappedToDomainAxis(axisIndex);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4455,        Iterator iterator = datasets.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4456,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4457,            CategoryDataset dataset = (CategoryDataset) iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4459,            for (int i = 0; i < dataset.getColumnCount(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4460,                Comparable category = dataset.getColumnKey(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4461,                if (!result.contains(category)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4462,                    result.add(category);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4465,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4466,        return result;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4478,        return this.drawSharedDomainAxis;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4490,        this.drawSharedDomainAxis = draw;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4491,        fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4492,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4503,        return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4515,        return this.rangePannable;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4527,        this.rangePannable = pannable;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4528,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4542,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4555,        if (!isRangePannable()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4556,            return;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4558,        int rangeAxisCount = getRangeAxisCount();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4559,        for (int i = 0; i < rangeAxisCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4560,            ValueAxis axis = getRangeAxis(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4561,            if (axis == null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4562,                continue;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4564,            double length = axis.getRange().getLength();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4565,            double adj = percent * length;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4566,            if (axis.isInverted()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4567,                adj = -adj;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4569,"            axis.setRange(axis.getLowerBound() + adj,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4572,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4583,        return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4594,        return true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4608,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4622,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4640,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4652,"        zoomRangeAxes(factor, state, source, false);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4653,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4672,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4673,            ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4674,            if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4675,                if (useAnchor) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4678,                    double sourceY = source.getY();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4679,                    if (this.orientation == PlotOrientation.HORIZONTAL) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4680,                        sourceY = source.getX();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4682,"                    double anchorY = rangeAxis.java2DToValue(sourceY,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4684,"                    rangeAxis.resizeRange2(factor, anchorY);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4685,                },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4687,                    rangeAxis.resizeRange(factor);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4691,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4703,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4704,            ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4705,            if (rangeAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4706,"                rangeAxis.zoomRange(lowerPercent, upperPercent);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4709,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4719,        return this.anchorValue;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4731,"        setAnchorValue(value, true);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4732,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4744,        this.anchorValue = value;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4745,        if (notify) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4746,            fireChangeEvent();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4748,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4759,        if (obj == this) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4760,            return true;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4762,        if (!(obj instanceof CategoryPlot)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4763,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4765,        CategoryPlot that = (CategoryPlot) obj;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4766,        if (this.orientation != that.orientation) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4767,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4769,"        if (!ObjectUtilities.equal(this.axisOffset, that.axisOffset)) {",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4770,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4772,        if (!this.domainAxes.equals(that.domainAxes)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4773,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4775,        if (!this.domainAxisLocations.equals(that.domainAxisLocations)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4776,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4778,        if (this.drawSharedDomainAxis != that.drawSharedDomainAxis) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4779,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4781,        if (!this.rangeAxes.equals(that.rangeAxes)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4782,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4784,        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4785,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4787,"        if (!ObjectUtilities.equal(this.datasetToDomainAxesMap,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4789,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4791,"        if (!ObjectUtilities.equal(this.datasetToRangeAxesMap,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4793,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4795,"        if (!ObjectUtilities.equal(this.renderers, that.renderers)) {",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4796,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4798,        if (this.renderingOrder != that.renderingOrder) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4799,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4801,        if (this.columnRenderingOrder != that.columnRenderingOrder) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4802,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4804,        if (this.rowRenderingOrder != that.rowRenderingOrder) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4805,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4807,        if (this.domainGridlinesVisible != that.domainGridlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4808,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4810,        if (this.domainGridlinePosition != that.domainGridlinePosition) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4811,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4813,"        if (!ObjectUtilities.equal(this.domainGridlineStroke,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4815,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4817,"        if (!PaintUtilities.equal(this.domainGridlinePaint,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4819,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4821,        if (this.rangeGridlinesVisible != that.rangeGridlinesVisible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4822,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4824,"        if (!ObjectUtilities.equal(this.rangeGridlineStroke,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4826,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4828,"        if (!PaintUtilities.equal(this.rangeGridlinePaint,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4830,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4832,        if (this.anchorValue != that.anchorValue) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4833,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4835,        if (this.rangeCrosshairVisible != that.rangeCrosshairVisible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4836,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4838,        if (this.rangeCrosshairValue != that.rangeCrosshairValue) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4839,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4841,"        if (!ObjectUtilities.equal(this.rangeCrosshairStroke,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4843,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4845,"        if (!PaintUtilities.equal(this.rangeCrosshairPaint,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4847,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4849,        if (this.rangeCrosshairLockedOnData,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4851,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4853,"        if (!ObjectUtilities.equal(this.foregroundDomainMarkers,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4855,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4857,"        if (!ObjectUtilities.equal(this.backgroundDomainMarkers,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4859,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4861,"        if (!ObjectUtilities.equal(this.foregroundRangeMarkers,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4863,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4865,"        if (!ObjectUtilities.equal(this.backgroundRangeMarkers,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4867,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4869,"        if (!ObjectUtilities.equal(this.annotations, that.annotations)) {",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4870,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4872,        if (this.weight != that.weight) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4873,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4875,"        if (!ObjectUtilities.equal(this.fixedDomainAxisSpace,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4877,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4879,"        if (!ObjectUtilities.equal(this.fixedRangeAxisSpace,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4881,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4883,"        if (!ObjectUtilities.equal(this.fixedLegendItems,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4885,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4887,        if (this.domainCrosshairVisible != that.domainCrosshairVisible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4888,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4890,        if (this.crosshairDatasetIndex != that.crosshairDatasetIndex) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4891,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4893,"        if (!ObjectUtilities.equal(this.domainCrosshairColumnKey,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4895,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4897,"        if (!ObjectUtilities.equal(this.domainCrosshairRowKey,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4899,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4901,"        if (!PaintUtilities.equal(this.domainCrosshairPaint,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4903,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4905,"        if (!ObjectUtilities.equal(this.domainCrosshairStroke,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4907,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4909,        if (this.rangeMinorGridlinesVisible,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4911,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4913,"        if (!PaintUtilities.equal(this.rangeMinorGridlinePaint,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4915,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4917,"        if (!ObjectUtilities.equal(this.rangeMinorGridlineStroke,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4919,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4921,        if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4922,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4924,"        if (!PaintUtilities.equal(this.rangeZeroBaselinePaint,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4926,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4928,"        if (!ObjectUtilities.equal(this.rangeZeroBaselineStroke,",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4930,            return false;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4932,        return super.equals(obj);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4945,        CategoryPlot clone = (CategoryPlot) super.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4947,        clone.domainAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4948,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4949,            CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4950,            if (xAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4951,                CategoryAxis clonedAxis = (CategoryAxis) xAxis.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4952,"                clone.setDomainAxis(i, clonedAxis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4955,        clone.domainAxisLocations,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4958,        clone.rangeAxes = new ObjectList();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4959,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4960,            ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4961,            if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4962,                ValueAxis clonedAxis = (ValueAxis) yAxis.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4963,"                clone.setRangeAxis(i, clonedAxis);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4966,        clone.rangeAxisLocations = (ObjectList) this.rangeAxisLocations.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4968,        clone.datasets = (ObjectList) this.datasets.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4969,        for (int i = 0; i < clone.datasets.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4970,            CategoryDataset dataset = clone.getDataset(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4971,            if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4972,                dataset.addChangeListener(clone);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4975,        clone.datasetToDomainAxesMap = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4976,        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4977,        clone.datasetToRangeAxesMap = new TreeMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4978,        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4980,        clone.renderers = (ObjectList) this.renderers.clone();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4981,        if (this.fixedDomainAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4982,            clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4985,        if (this.fixedRangeAxisSpace != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4986,            clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4990,        clone.annotations = (List) ObjectUtilities.deepClone(this.annotations);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4991,        clone.foregroundDomainMarkers = cloneMarkerMap(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4993,        clone.backgroundDomainMarkers = cloneMarkerMap(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4995,        clone.foregroundRangeMarkers = cloneMarkerMap(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4997,        clone.backgroundRangeMarkers = cloneMarkerMap(,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,4999,        if (this.fixedLegendItems != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5000,            clone.fixedLegendItems,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5003,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5018,        Map clone = new HashMap();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5019,        Set keys = map.keySet();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5020,        Iterator iterator = keys.iterator();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5021,        while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5022,            Object key = iterator.next();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5023,            List entry = (List) map.get(key);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5024,            Object toAdd = ObjectUtilities.deepClone(entry);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5025,"            clone.put(key, toAdd);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5026,        },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5027,        return clone;,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5038,        stream.defaultWriteObject();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5039,"        SerialUtilities.writeStroke(this.domainGridlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5040,"        SerialUtilities.writePaint(this.domainGridlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5041,"        SerialUtilities.writeStroke(this.rangeGridlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5042,"        SerialUtilities.writePaint(this.rangeGridlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5043,"        SerialUtilities.writeStroke(this.rangeCrosshairStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5044,"        SerialUtilities.writePaint(this.rangeCrosshairPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5045,"        SerialUtilities.writeStroke(this.domainCrosshairStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5046,"        SerialUtilities.writePaint(this.domainCrosshairPaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5047,"        SerialUtilities.writeStroke(this.rangeMinorGridlineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5048,"        SerialUtilities.writePaint(this.rangeMinorGridlinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5049,"        SerialUtilities.writeStroke(this.rangeZeroBaselineStroke, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5050,"        SerialUtilities.writePaint(this.rangeZeroBaselinePaint, stream);",0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5051,    },0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5064,        stream.defaultReadObject();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5065,        this.domainGridlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5066,        this.domainGridlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5067,        this.rangeGridlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5068,        this.rangeGridlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5069,        this.rangeCrosshairStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5070,        this.rangeCrosshairPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5071,        this.domainCrosshairStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5072,        this.domainCrosshairPaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5073,        this.rangeMinorGridlineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5074,        this.rangeMinorGridlinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5075,        this.rangeZeroBaselineStroke = SerialUtilities.readStroke(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5076,        this.rangeZeroBaselinePaint = SerialUtilities.readPaint(stream);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5078,        for (int i = 0; i < this.domainAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5079,            CategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5080,            if (xAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5081,                xAxis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5082,                xAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5085,        for (int i = 0; i < this.rangeAxes.size(); i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5086,            ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5087,            if (yAxis != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5088,                yAxis.setPlot(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5089,                yAxis.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5092,        int datasetCount = this.datasets.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5093,        for (int i = 0; i < datasetCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5094,            Dataset dataset = (Dataset) this.datasets.get(i);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5095,            if (dataset != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5096,                dataset.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5099,        int rendererCount = this.renderers.size();,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5100,        for (int i = 0; i < rendererCount; i++) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5101,            CategoryItemRenderer renderer,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5103,            if (renderer != null) {,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5104,                renderer.addChangeListener(this);,0.0,0,-1,0
org/jfree/chart/plot/CategoryPlot,4,5108,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,200,        this(null);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,201,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,210,        super(label);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,212,        this.lowerMargin = DEFAULT_AXIS_MARGIN;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,213,        this.upperMargin = DEFAULT_AXIS_MARGIN;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,214,        this.categoryMargin = DEFAULT_CATEGORY_MARGIN;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,215,        this.maximumCategoryLabelLines = 1;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,216,        this.maximumCategoryLabelWidthRatio = 0.0f;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,218,        this.categoryLabelPositionOffset = 4;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,219,        this.categoryLabelPositions = CategoryLabelPositions.STANDARD;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,220,        this.tickLabelFontMap = new HashMap();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,221,        this.tickLabelPaintMap = new HashMap();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,222,        this.categoryLabelToolTips = new HashMap();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,224,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,235,        return this.lowerMargin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,248,        this.lowerMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,249,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,250,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,261,        return this.upperMargin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,274,        this.upperMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,275,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,276,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,286,        return this.categoryMargin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,300,        this.categoryMargin = margin;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,301,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,302,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,312,        return this.maximumCategoryLabelLines;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,324,        this.maximumCategoryLabelLines = lines;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,325,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,326,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,336,        return this.maximumCategoryLabelWidthRatio;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,348,        this.maximumCategoryLabelWidthRatio = ratio;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,349,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,350,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,361,        return this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,373,        this.categoryLabelPositionOffset = offset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,374,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,375,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,386,        return this.categoryLabelPositions;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,398,        if (positions == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,399,"            throw new IllegalArgumentException(""Null 'positions' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,401,        this.categoryLabelPositions = positions;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,402,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,403,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,415,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,416,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,418,        Font result = (Font) this.tickLabelFontMap.get(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,420,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,421,            result = getTickLabelFont();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,423,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,436,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,437,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,439,        if (font == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,440,            this.tickLabelFontMap.remove(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,443,"            this.tickLabelFontMap.put(category, font);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,445,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,446,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,458,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,459,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,461,        Paint result = (Paint) this.tickLabelPaintMap.get(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,463,        if (result == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,464,            result = getTickLabelPaint();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,466,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,479,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,480,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,482,        if (paint == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,483,            this.tickLabelPaintMap.remove(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,486,"            this.tickLabelPaintMap.put(category, paint);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,488,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,489,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,501,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,502,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,504,"        this.categoryLabelToolTips.put(category, tooltip);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,505,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,506,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,520,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,521,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,523,        return (String) this.categoryLabelToolTips.get(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,536,        if (category == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,537,"            throw new IllegalArgumentException(""Null 'category' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,539,        this.categoryLabelToolTips.remove(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,540,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,541,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,551,        this.categoryLabelToolTips.clear();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,552,        notifyListeners(new AxisChangeEvent(this));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,553,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,572,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,573,        if (anchor == CategoryAnchor.START) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,574,"            result = getCategoryStart(category, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,576,        else if (anchor == CategoryAnchor.MIDDLE) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,577,"            result = getCategoryMiddle(category, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,579,        else if (anchor == CategoryAnchor.END) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,580,"            result = getCategoryEnd(category, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,582,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,603,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,604,        if ((edge == RectangleEdge.TOP) || (edge == RectangleEdge.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,605,            result = area.getX() + area.getWidth() * getLowerMargin();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,607,        else if ((edge == RectangleEdge.LEFT),0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,609,            result = area.getMinY() + area.getHeight() * getLowerMargin();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,612,"        double categorySize = calculateCategorySize(categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,613,"        double categoryGapWidth = calculateCategoryGapSize(categoryCount, area,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,616,        result = result + category * (categorySize + categoryGapWidth);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,617,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,637,        if (category < 0 || category >= categoryCount) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,638,"            throw new IllegalArgumentException(""Invalid category index: """,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,641,"        return getCategoryStart(category, categoryCount, area, edge)",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,662,"        return getCategoryStart(category, categoryCount, area, edge)",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,686,        if (categories == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,687,"            throw new IllegalArgumentException(""Null 'categories' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,689,        int categoryIndex = categories.indexOf(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,690,        int categoryCount = categories.size();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,691,"        return getCategoryMiddle(categoryIndex, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,713,        int categoryIndex = dataset.getColumnIndex(category);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,714,        int categoryCount = dataset.getColumnCount();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,715,        int seriesIndex = dataset.getRowIndex(seriesKey);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,716,        int seriesCount = dataset.getRowCount();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,717,"        double start = getCategoryStart(categoryIndex, categoryCount, area,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,719,"        double end = getCategoryEnd(categoryIndex, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,720,        double width = end - start;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,721,        if (seriesCount == 1) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,722,            return start + width / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,725,            double gap = (width * itemMargin) / (seriesCount - 1);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,726,            double ww = (width * (1 - itemMargin)) / seriesCount;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,727,            return start + (seriesIndex * (ww + gap)) + ww / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,751,"        double start = getCategoryStart(categoryIndex, categoryCount, area,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,753,"        double end = getCategoryEnd(categoryIndex, categoryCount, area, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,754,        double width = end - start;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,755,        if (seriesCount == 1) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,756,            return start + width / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,759,            double gap = (width * itemMargin) / (seriesCount - 1);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,760,            double ww = (width * (1 - itemMargin)) / seriesCount;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,761,            return start + (seriesIndex * (ww + gap)) + ww / 2.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,778,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,779,        double available = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,781,        if ((edge == RectangleEdge.TOP) || (edge == RectangleEdge.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,782,            available = area.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,784,        else if ((edge == RectangleEdge.LEFT),0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,786,            available = area.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,788,        if (categoryCount > 1) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,789,            result = available * (1 - getLowerMargin() - getUpperMargin(),0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,791,            result = result / categoryCount;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,794,            result = available * (1 - getLowerMargin() - getUpperMargin());,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,796,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,814,        double result = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,815,        double available = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,817,        if ((edge == RectangleEdge.TOP) || (edge == RectangleEdge.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,818,            available = area.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,820,        else if ((edge == RectangleEdge.LEFT),0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,822,            available = area.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,825,        if (categoryCount > 1) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,826,            result = available * getCategoryMargin() / (categoryCount - 1);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,829,        return result;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,849,        if (space == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,850,            space = new AxisSpace();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,854,        if (!isVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,855,            return space;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,859,        double tickLabelHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,860,        double tickLabelWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,861,        if (isTickLabelsVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,862,            g2.setFont(getTickLabelFont());,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,863,            AxisState state = new AxisState();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,865,"            refreshTicks(g2, state, plotArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,866,            if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,867,                tickLabelHeight = state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,869,            else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,870,                tickLabelHeight = state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,872,            else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,873,                tickLabelWidth = state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,875,            else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,876,                tickLabelWidth = state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,881,"        Rectangle2D labelEnclosure = getLabelEnclosure(g2, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,882,        double labelHeight = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,883,        double labelWidth = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,884,        if (RectangleEdge.isTopOrBottom(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,885,            labelHeight = labelEnclosure.getHeight();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,886,            space.add(labelHeight + tickLabelHeight,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,889,        else if (RectangleEdge.isLeftOrRight(edge)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,890,            labelWidth = labelEnclosure.getWidth();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,891,            space.add(labelWidth + tickLabelWidth,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,894,        return space;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,903,    },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,926,        if (!isVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,927,            return new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,930,        if (isAxisLineVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,931,"            drawAxisLine(g2, cursor, dataArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,933,        AxisState state = new AxisState(cursor);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,934,        if (isTickMarksVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,935,"            drawTickMarks(g2, cursor, dataArea, edge, state);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,938,"        createAndAddEntity(cursor, state, dataArea, edge, plotState);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,941,"        state = drawCategoryLabels(g2, plotArea, dataArea, edge, state,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,943,"        state = drawLabel(getLabel(), g2, plotArea, dataArea, edge, state,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,945,        return state;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,972,        if (state == null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,973,"            throw new IllegalArgumentException(""Null 'state' argument."");",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,976,        if (isTickLabelsVisible()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,977,"            List ticks = refreshTicks(g2, state, plotArea, edge);",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,978,            state.setTicks(ticks);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,980,            int categoryIndex = 0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,981,            Iterator iterator = ticks.iterator();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,982,            while (iterator.hasNext()) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,984,                CategoryTick tick = (CategoryTick) iterator.next();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,985,                g2.setFont(getTickLabelFont(tick.getCategory()));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,986,                g2.setPaint(getTickLabelPaint(tick.getCategory()));,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,988,                CategoryLabelPosition position,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,990,                double x0 = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,991,                double x1 = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,992,                double y0 = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,993,                double y1 = 0.0;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,994,                if (edge == RectangleEdge.TOP) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,995,"                    x0 = getCategoryStart(categoryIndex, ticks.size(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,997,"                    x1 = getCategoryEnd(categoryIndex, ticks.size(), dataArea,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,999,                    y1 = state.getCursor() - this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1000,                    y0 = y1 - state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1002,                else if (edge == RectangleEdge.BOTTOM) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1003,"                    x0 = getCategoryStart(categoryIndex, ticks.size(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1005,"                    x1 = getCategoryEnd(categoryIndex, ticks.size(), dataArea,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1007,                    y0 = state.getCursor() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1008,                    y1 = y0 + state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1010,                else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1011,"                    y0 = getCategoryStart(categoryIndex, ticks.size(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1013,"                    y1 = getCategoryEnd(categoryIndex, ticks.size(), dataArea,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1015,                    x1 = state.getCursor() - this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1016,                    x0 = x1 - state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1018,                else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1019,"                    y0 = getCategoryStart(categoryIndex, ticks.size(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1021,"                    y1 = getCategoryEnd(categoryIndex, ticks.size(), dataArea,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1023,                    x0 = state.getCursor() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1024,                    x1 = x0 - state.getMax();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1026,"                Rectangle2D area = new Rectangle2D.Double(x0, y0, (x1 - x0),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1028,"                Point2D anchorPoint = RectangleAnchor.coordinates(area,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1030,                TextBlock block = tick.getLabel();,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1031,"                block.draw(g2, (float) anchorPoint.getX(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1035,"                Shape bounds = block.calculateBounds(g2,",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1039,                if (plotState != null && plotState.getOwner() != null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1040,                    EntityCollection entities,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1042,                    if (entities != null) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1043,                        String tooltip = getCategoryLabelToolTip(,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1045,"                        entities.add(new CategoryLabelEntity(tick.getCategory(),",0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1049,                categoryIndex++;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1050,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1052,            if (edge.equals(RectangleEdge.TOP)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1053,                double h = state.getMax() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1054,                state.cursorUp(h);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1055,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1056,            else if (edge.equals(RectangleEdge.BOTTOM)) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1057,                double h = state.getMax() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1058,                state.cursorDown(h);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1059,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1060,            else if (edge == RectangleEdge.LEFT) {,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1061,                double w = state.getMax() + this.categoryLabelPositionOffset;,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1062,                state.cursorLeft(w);,0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1063,            },0.0,0,-1,0
org/jfree/chart/axis/CategoryAxis,4,1064,            else if (edge == RectangleEdge.RIGHT) {,0.0,0,-1,0
